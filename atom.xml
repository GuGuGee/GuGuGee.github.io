<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>我不是咕咕鸽</title>
  
  <subtitle>VPS折腾不完全记录</subtitle>
  <link href="https://blog.laoda.de/atom.xml" rel="self"/>
  
  <link href="https://blog.laoda.de/"/>
  <updated>2023-07-24T15:23:42.412Z</updated>
  <id>https://blog.laoda.de/</id>
  
  <author>
    <name>咕咕鸽</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【好玩儿的Docker项目】80、90回忆杀，10分钟搭建复古中文 DOS 游戏，最多畅玩1898款！</title>
    <link href="https://blog.laoda.de/archives/docker-compose-install-chinese-dos-games/"/>
    <id>https://blog.laoda.de/archives/docker-compose-install-chinese-dos-games/</id>
    <published>2023-07-24T13:36:56.000Z</published>
    <updated>2023-07-24T15:23:42.412Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h2><p>小学的时候，班上有几个同学家里比较富裕，爸爸妈妈给他们买了步步高电子词典，本来是学习的工具，但是有一天发现可以下载游戏，于是学习机就变成了游戏机。</p><p>我当时没有这个机器，只能看着他们玩，还记得又一次把作业给同学抄，然后借他的步步高玩了金庸群侠传，非常上头。后来还玩了伏魔记、魔塔……</p><p>一晃眼，现在都工作好多年了……</p><p>今天就让我们重温一下儿时的游戏吧。</p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p>直接丢几个图：</p><p><img src="https://img.laoda.de/i/2023/07/22/10tjkvw-0.webp" alt="2d2152aefff4cd3ac04ecb2ecb40e274.png"></p><p><img src="https://img.laoda.de/i/2023/07/22/10tl4tg-0.webp" alt="0883c841c73871b1341edfd1e2599c3f.png"></p><p><img src="https://img.laoda.de/i/2023/07/22/10u0cnp-0.webp" alt="fb998df7fa96a7b4f8cdc8cf76faf7c8.png"></p><p><img src="https://img.laoda.de/i/2023/07/22/10u1g9d-0.webp" alt="7ea1d4f1b4afddf85ccf03e96fb99f3f.png"></p><p><img src="https://img.laoda.de/i/2023/07/22/10u2shj-0.webp" alt="b22232140b0564a01e554112536644dd.png"></p><img src="https://img.laoda.de/i/2023/07/22/118uku3-0.webp" alt="image-20230722225209477" style="zoom: 50%;" /><img src="https://img.laoda.de/i/2023/07/22/11931dd-0.webp" alt="image-20230722225248152" style="zoom:50%;" /><h3 id="2-1-特点"><a href="#2-1-特点" class="headerlink" title="2.1 特点"></a>2.1 特点</h3><ul><li>支持docker一键部署</li><li>中文 DOS 游戏合集，目前共有 1898 款游戏</li><li>支持存档</li></ul><h2 id="3-相关地址"><a href="#3-相关地址" class="headerlink" title="3. 相关地址"></a>3. 相关地址</h2><p>咕咕的Demo：<a href="https://games.gugu.ovh/">https://games.gugu.ovh/</a><br>GitHub官方仓库：<a href="https://github.com/rwv/chinese-dos-games">https://github.com/rwv/chinese-dos-games</a></p><h2 id="4-搭建环境"><a href="#4-搭建环境" class="headerlink" title="4. 搭建环境"></a>4. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器 24 元 &#x2F; 月 VPS 一台</del> 咕咕自己搭建用的是香港的<a href="https://loll.cc/tx">腾讯轻量应用服务器</a> ，（这次最好选带宽比较大的，而且线路还不错的机器）如果是小白刚开始玩的话，可以选择<a href="https://blog.laoda.de/vps/">Racknerd</a>的高性价比服务器（注意地区选美国西部城市的）</li><li>系统：Debian 11 （<a href="https://blog.laoda.de/archives/useful-script/">DD 脚本</a> 非必需 DD，用原来的系统也 OK，之后教程都是用 Debian 或者 Ubuntu 搭建～）</li><li>安装好 Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker/">相关脚本</a>）</li><li>【非必需但建议】域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo/">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>【非必需】提前安装好宝塔面板海外版本 aapanel，并安装好 Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程选用】安装好 Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager/">相关教程</a>）</li></ul><blockquote><p>服务器要求：带宽最好大一些，硬盘能大一些也最好，1898 款游戏大概36G，需要手动下载一下。</p></blockquote><h2 id="5-搭建视频"><a href="#5-搭建视频" class="headerlink" title="5. 搭建视频"></a>5. 搭建视频</h2><h3 id="5-1-YouTube"><a href="#5-1-YouTube" class="headerlink" title="5.1 YouTube"></a>5.1 YouTube</h3><p>视频地址：<a href="https://youtu.be/B_tZLDbBN0I">https://youtu.be/B_tZLDbBN0I</a></p><h3 id="5-2-哔哩哔哩"><a href="#5-2-哔哩哔哩" class="headerlink" title="5.2 哔哩哔哩"></a>5.2 哔哩哔哩</h3><p>哔哩哔哩：<a href="https://www.bilibili.com/video/BV1nc411w7JD/">https://www.bilibili.com/video/BV1nc411w7JD/</a></p><h2 id="6-搭建方式"><a href="#6-搭建方式" class="headerlink" title="6. 搭建方式"></a>6. 搭建方式</h2><p>如果你不是用的腾讯云的轻量应用服务器，可以直接跳到 6.1 部分。</p><h3 id="安装系统（腾讯云轻量应用服务器）"><a href="#安装系统（腾讯云轻量应用服务器）" class="headerlink" title="安装系统（腾讯云轻量应用服务器）"></a>安装系统（腾讯云轻量应用服务器）</h3><img src="https://img.laoda.de/i/2022/08/16/zlyhcz-2.webp" alt="e59713fba8726d3cb55ae11bca83fe3c.png" style="zoom:33%;" /><p>腾讯云轻量服务器最大的特点就是 “轻量”，相比 CVM，更适合小白上手，这边我们之间选择 Docker 基础镜像，就可以省去后面安装 Docker 的步骤 <del>（如果你非要用国内的服务器，这边装的 Docker 镜像还会帮你配置好国内镜像源，让你加速访问 docker 镜像资源）</del> 不建议用国内的 。</p><h3 id="登陆（腾讯云轻量应用服务器）"><a href="#登陆（腾讯云轻量应用服务器）" class="headerlink" title="登陆（腾讯云轻量应用服务器）"></a>登陆（腾讯云轻量应用服务器）</h3><img src="https://img.laoda.de/i/2022/08/16/zlzlj7-2.webp" alt="2722040ee311eb4a9ebf2a4945bf38f4.png" style="zoom:25%;" /><img src="https://img.laoda.de/i/2022/08/16/zm0gv8-2.webp" alt="c0b5d360053746c4095d592967ee401f.png" style="zoom:25%;" /><img src="https://img.laoda.de/i/2022/08/16/zm1vqw-2.webp" alt="e0ba858f021b846ad0abc27acf5008c2.png" style="zoom:25%;" /><h3 id="6-1-安装-Docker-与-Nginx-Proxy-Manager"><a href="#6-1-安装-Docker-与-Nginx-Proxy-Manager" class="headerlink" title="6.1 安装 Docker 与 Nginx Proxy Manager"></a>6.1 安装 Docker 与 Nginx Proxy Manager</h3><p>可以直接参考这篇内容：</p><p><a href="https://blog.laoda.de/archives/nginxproxymanager/">https://blog.laoda.de/archives/nginxproxymanager/</a></p><h3 id="6-2-创建安装目录"><a href="#6-2-创建安装目录" class="headerlink" title="6.2 创建安装目录"></a>6.2 创建安装目录</h3><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/games</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/games</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure><p>英文输入法下，按 <code>i</code></p><p>这边有两种搭建方式，因为36G的游戏做成docker的镜像太大了，所以作者只是将40多个经典的DOS游戏封装到了docker的镜像里面，所以你的服务器如果硬盘不够大，可以直接用默认的方式安装。</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">dosgame-web-docker:</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">dosgame</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;8090:262&#x27;</span>  <span class="comment">#8090可以改成其他服务器没被占用的端口</span></span><br><span class="line"><span class="comment">#         volumes:</span></span><br><span class="line"><span class="comment">#             - &#x27;/root/data/docker_data/games/chinese-dos-games:/app/static/games&#x27;</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">&#x27;oldiy/dosgame-web-docker:latest&#x27;</span></span><br></pre></td></tr></table></figure><p>修改好之后，注意切换成英文输入法，然后按一下 <code>esc</code>，然后 <code>:wq</code> 保存退出。</p><p>如果你的服务器硬盘大于36G，那你可以尝试直接装1989款游戏。</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">dosgame-web-docker:</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">dosgame</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;8090:262&#x27;</span>  <span class="comment">#8090可以改成其他服务器没被占用的端口</span></span><br><span class="line">        <span class="attr">volumes:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;/root/data/docker_data/games/chinese-dos-games:/app/static/games&#x27;</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">&#x27;oldiy/dosgame-web-docker:latest&#x27;</span></span><br></pre></td></tr></table></figure><p>修改好之后，注意切换成英文输入法，然后按一下 <code>esc</code>，然后 <code>:wq</code> 保存退出。</p><p>然后在</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/games/</span><br><span class="line"></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/rwv/chinese-dos-games.git</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> chinese-dos-games/</span><br><span class="line"></span><br><span class="line">python3 download_data.py</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2023/07/24/s4abll-0.webp" alt="image-20230724170023076"></p><p>注意这边下载默认是下载1989款游戏的，总共36G左右，如果你的服务器的下载带宽不大的话，可能需要非常非常久。这也是这边推荐大家用海外的服务器的原因，带宽普遍较大，比如<a href="https://blog.laoda.de/vps/">Racknerd</a>（注意选美西地区），下载是G口的速度，理论值在128M&#x2F;s，下载起来相对较快。</p><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: git: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>输入:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt update -y</span><br><span class="line">apt install git -y</span><br></pre></td></tr></table></figure><p>再重新运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/rwv/chinese-dos-games.git</span><br></pre></td></tr></table></figure><p>即可。</p><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: python: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>说明电脑上没装python，你需要装一个</p><p>这边还是以Debian系统为例：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line"></span><br><span class="line">sudo apt install python3</span><br><span class="line"></span><br><span class="line">python3 download_data.py</span><br></pre></td></tr></table></figure><p>即可。</p><p>如果你担心SSH断开，或者你不想一直等着，想让它后台慢慢下载，可以试试咕咕之前分享过的Screen的使用方法：<a href="https://blog.laoda.de/archives/how-to-use-linux-screen/">Linux 实用工具 Screen —— 再也不怕因为网络连接中断杀死任务了！</a></p><p>下载完成之后，你可以运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> -l /root/data/docker_data/games/chinese-dos-games/bin | grep <span class="string">&quot;^-&quot;</span> | <span class="built_in">wc</span> -l</span><br></pre></td></tr></table></figure><p>查看文件夹中的文件数量。不出意外应该显示<code>1898</code></p><p>你也可以用：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">du</span> -sh /root/data/docker_data/games</span><br></pre></td></tr></table></figure><p>计算文件夹的总大小，不出意外应该显示：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">36G /root/data/docker_data/games</span><br></pre></td></tr></table></figure><p>没什么问题的话，我们可以运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/games</span><br><span class="line"></span><br><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/root/data/docker_data/games</span><br><span class="line"></span><br><span class="line">docker compose up -d</span><br></pre></td></tr></table></figure><p>取决于你的docker compose的版本，新的是没有<code>-</code>的</p><p>等待拉取镜像即可。</p><h3 id="6-3-打开服务器防火墙（非必需）并访问网页"><a href="#6-3-打开服务器防火墙（非必需）并访问网页" class="headerlink" title="6.3 打开服务器防火墙（非必需）并访问网页"></a>6.3 打开服务器防火墙（非必需）并访问网页</h3><p>如果你是阿里云、腾讯云、甲骨文、azure等大厂的机器，可能需要打开防火墙的端口 <code>8090</code></p><p>举例，腾讯云打开方法如下（部分服务商没有自带的面板防火墙，就不用这步操作了）：</p><img src="https://img.laoda.de/i/2022/06/30/zlio5h-2.webp" alt="image-20220630215240864" style="zoom: 25%;" /><img src="https://img.laoda.de/i/2022/06/30/10h3dqt-2.webp" alt="image-20220630220546335" style="zoom: 25%;" /><p>图中示例填的是 <code>5230</code>，备注填的是 <code>memos</code>，这边我们填 <code>8090</code>，示例填 <code>games</code> ，确定即可（如果你在 docker-compose 文件里换了 <code>9009</code>，这边就需要填 <code>9009</code>，以此类推）</p><img src="https://img.laoda.de/i/2022/08/19/o4byqz-2.webp" alt="image-20220819145844555" style="zoom: 25%;" /><p>查看端口是否被占用（以 <code>8090</code> 为例），输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:8090  <span class="comment">#查看 8090 端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果啥也没出现，表示端口未被占用，我们可以继续下面的操作了～</p><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装 lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用（被占用了就修改一下端口，比如改成 <code>8081</code>，注意 docker 命令行里和防火墙都要改）</p><p>最后：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/games    <span class="comment"># 来到 dockercompose 文件所在的文件夹下</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>理论上，等出现绿色的<code>done</code>字样，</p><p>我们就可以输入 <code>http://ip:8090</code> 访问了。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器 IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的 IP。</p><p>2、遇到访问不了的情况，请再次检查在宝塔面板的防火墙和服务商的后台防火墙是否打开对应了端口。</p></blockquote><p>不过现在我们还是用IP+端口的方式访问的，不够优雅，一般情况下，我们都需要给网页加上https！让网页更安全！</p><p> <a href="https://loll.cc/ns">namesilo</a> 上面 xyz 后缀的域名一年就 7 块钱，可以年抛。（冷知识，namesilo上 6位数字的xyz续费永远都是0.99美元 &#x3D; &#x3D;）</p><p>如果想要长期使用，还是建议买 com 后缀的域名，更加正规一些，可以输入 <code>gugugege</code> 来获得 1 美元的优惠（失效的话可以评论区反馈一下～）</p><p><a href="https://loll.cc/ns">namesilo</a> 自带隐私保护，咕咕一直在用这家，价格也是这些注册商里面比较低的，关键是他家不像其他家域名注册商，没有七七八八的套路！（就是后台界面有些<del>丑</del> 古老 &#x3D; &#x3D;）</p><p><a href="https://blog.laoda.de/archives/namesilo/">【域名购买】Namesilo 优惠码和域名解析教程（附带服务器购买推荐和注意事项）</a></p><p>我们接着往下看！</p><h2 id="7-反向代理"><a href="#7-反向代理" class="headerlink" title="7. 反向代理"></a>7. 反向代理</h2><p>我们要用域名而不是IP+端口的方式来访问我们的服务！</p><h3 id="7-1-利用-Nginx-Proxy-Manager"><a href="#7-1-利用-Nginx-Proxy-Manager" class="headerlink" title="7.1 利用 Nginx Proxy Manager"></a>7.1 利用 Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo/">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><img src="https://img.laoda.de/i/2022/10/16/n6t02e-2.webp" alt="image-20221016140213282" style="zoom:33%;" /><p>之后，登陆 Nginx Proxy Manager（不会的看这个：<strong>安装 Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager/">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称 NPM）会用到 <code>80</code>、<code>443</code> 端口，所以本机不能占用（比如原来就有 Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom: 33%;" /><img src="https://img.laoda.de/i/2023/05/27/lvep5w-0.webp" alt="image-20230527132253249" style="zoom: 33%;" /><blockquote><p>注意填写对应的 <code>域名</code>、<code>IP</code> 和 <code>端口</code>，按文章来的话，应该是 <code>8090</code></p></blockquote><p><strong>IP 填写：</strong></p><p>如果 Nginx Proxy Manager 和 games 在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的 Docker 容器内部 IP。</p><img src="https://img.laoda.de/i/2022/09/29/pcdnz5-2.webp" style="zoom:50%;" /><p>否则直接填 <code>games</code> 所在的服务器 IP 就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom: 33%;" /><p>再次打开，勾选这些：</p><img src="https://img.laoda.de/i/2022/10/16/n7nn6e-2.webp" alt="image-20221016140356324" style="zoom:50%;" /><p>然后就可以用域名来安装访问了。</p><h3 id="7-2-利用宝塔面板"><a href="#7-2-利用宝塔面板" class="headerlink" title="7.2 利用宝塔面板"></a>7.2 利用宝塔面板</h3><p>发现还是有不少小伙伴习惯用宝塔面板，这边也贴一个宝塔面板的反代配置：</p><p>直接新建一个站点，不要数据库，不要 php，纯静态即可。</p><p>然后打开下面的配置，修改 Nginx 的配置。</p><img src="https://img.laoda.de/i/2022/08/19/ov4xrt-2.webp" alt="image-20220819150345725" style="zoom: 33%;" /><img src="https://img.laoda.de/i/2022/08/19/owbbkb-2.webp" alt="image-20220819150542867" style="zoom: 33%;" /><p>代码如下：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:8090/;       <span class="comment"># 注意改成你实际使用的端口</span></span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此方法对 90% 的反向代理都能生效，然后就可以用域名来安装访问了。</p><p>有同学可能会问，为什么不直接用宝塔自带的反向代理功能。</p><img src="https://img.laoda.de/i/2022/08/19/oxf800-2.webp" alt="image-20220819150730128" style="zoom: 33%;" /><p>也可以，不过咕咕自己之前遇到过当有多个网站需要反代的时候，在这边设置会报错的情况 &#x3D; &#x3D;</p><p>所以后来就不用了，直接用上面的方法来操作了。</p><h2 id="8-使用教程"><a href="#8-使用教程" class="headerlink" title="8. 使用教程"></a>8. 使用教程</h2><p>参考视频。</p><h3 id="8-1-更新-games"><a href="#8-1-更新-games" class="headerlink" title="8.1 更新 games"></a>8.1 更新 games</h3><p>一般应该不需要怎么更新，作者停更很久了，不过这边还是提供一下docker-compose安装的应用的基本更新方法。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/games</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/games /root/data/docker_data/games.archive  <span class="comment"># 万事先备份，以防万一</span></span><br><span class="line"></span><br><span class="line">docker-compose pull</span><br><span class="line"></span><br><span class="line">docker-compose up -d    <span class="comment"># 请不要使用 docker-compose stop 来停止容器，因为这么做需要额外的时间等待容器停止；docker-compose up -d 直接升级容器时会自动停止并立刻重建新的容器，完全没有必要浪费那些时间。</span></span><br><span class="line"></span><br><span class="line">docker image prune  <span class="comment"># prune 命令用来删除不再使用的 docker 对象。删除所有未被 tag 标记和未被容器使用的镜像</span></span><br></pre></td></tr></table></figure><p>提示：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WARNING! This will remove all dangling images.</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] </span><br></pre></td></tr></table></figure><p>输入 <code>y</code></p><p>利用 Docker 搭建的应用，更新非常容易～</p><h3 id="8-2-卸载-games"><a href="#8-2-卸载-games" class="headerlink" title="8.2 卸载 games"></a>8.2 卸载 games</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/games</span><br><span class="line"></span><br><span class="line">docker-compose down</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/games  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>可以卸载得很干净。</p><h2 id="9-常见问题"><a href="#9-常见问题" class="headerlink" title="9. 常见问题"></a>9. 常见问题</h2><ul><li><p>部分游戏没有按键说明，可能需要自己在键盘尝试一下，一般就是<code>shift</code>、<code>alt</code>、<code>enter</code>、<code>空格</code>、<code>command</code>、<code>z</code>、<code>x</code>这几个键，大家自己试试看。</p></li><li><p>部分游戏可能有bug，大家可以<a href="https://github.com/rwv/chinese-dos-games/issues">反馈一下</a>。</p></li></ul><h2 id="10-结尾"><a href="#10-结尾" class="headerlink" title="10. 结尾"></a>10. 结尾</h2><p>祝大家用得开心，有问题可以去 GitHub 提 <a href="https://github.com/rwv/chinese-dos-games/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，有能力给项目做贡献的同学，也欢迎积极加入到 <a href="https://github.com/rwv/chinese-dos-games/">项目</a> 中来，贡献自己的一份力量！</p><p>最后，感谢开发人员们的辛苦付出，让我们能用到这么优秀的项目！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>GitHub官方仓库：<a href="https://github.com/rwv/chinese-dos-games/">https://github.com/rwv/chinese-dos-games/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-前言&quot;&gt;&lt;a href=&quot;#1-前言&quot; class=&quot;headerlink&quot; title=&quot;1.前言&quot;&gt;&lt;/a&gt;1.前言&lt;/h2&gt;&lt;p&gt;小学的时候，班上有几个同学家里比较富裕，爸爸妈妈给他们买了步步高电子词典，本来是学习的工具，但是有一天发现可以下载游戏，于是</summary>
      
    
    
    
    <category term="Docker系列" scheme="https://blog.laoda.de/categories/Docker%E7%B3%BB%E5%88%97/"/>
    
    
    <category term="DockerCompose" scheme="https://blog.laoda.de/tags/DockerCompose/"/>
    
    <category term="Docker部署" scheme="https://blog.laoda.de/tags/Docker%E9%83%A8%E7%BD%B2/"/>
    
    <category term="DOS 游戏" scheme="https://blog.laoda.de/tags/DOS-%E6%B8%B8%E6%88%8F/"/>
    
    <category term="复古游戏" scheme="https://blog.laoda.de/tags/%E5%A4%8D%E5%8F%A4%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>【好玩儿的Docker项目】5分钟搭建一个又小又快的文本、代码粘贴工具—— Hasty Paste</title>
    <link href="https://blog.laoda.de/archives/docker-compose-install-hasty-paste/"/>
    <id>https://blog.laoda.de/archives/docker-compose-install-hasty-paste/</id>
    <published>2023-07-18T10:28:03.000Z</published>
    <updated>2023-07-19T05:05:30.409Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h2><p>Hasty Paste 是一个快速粘贴文本并共享的地方，主要用于共享调试日志等，以帮助开发人员提供技术支持。该项目的目标是既快又小。</p><p>之前介绍过的类似项目：<a href="https://blog.laoda.de/archives/docker-compose-install-microbin/">【好玩儿的 Docker 项目】10 分钟搭建一个巨好用的粘贴板工具 ——MicroBin</a></p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p>直接丢几个图：</p><p><img src="https://img.laoda.de/i/2023/07/18/x2x1rn-0.webp" alt="361535150c7231d1b5defa5005cbd426.png"></p><p><img src="https://img.laoda.de/i/2023/07/18/x2vsm9-0.webp" alt="43c0d6c3ba13d306e53029e874caca1a.png"></p><p><img src="https://img.laoda.de/i/2023/07/18/x2usc3-0.webp" alt="7479c1257d5e50aec04b7e900d7b48cd.png"></p><h3 id="2-1-特点"><a href="#2-1-特点" class="headerlink" title="2.1 特点"></a>2.1 特点</h3><ul><li>支持docker一键部署，轻量级Docker镜像（使用Alpine Linux）</li><li>支持快速粘贴和保存，分享一些文本</li><li>公开访问，无需身份验证</li><li>随机生成的ID，可选择使用“长”ID以减少暴力攻击</li><li>支持添加过期时间</li><li>支持深色主题</li><li>可选语法高亮显示</li><li>不需要JavaScript</li><li>REST API接口</li><li>支持S3对象存储</li><li>支持缓存（内部和Redis）</li></ul><h2 id="3-相关地址"><a href="#3-相关地址" class="headerlink" title="3. 相关地址"></a>3. 相关地址</h2><p>咕咕的Demo：<a href="https://paste-test.gugu.ovh/">https://paste-test.gugu.ovh/</a><br>GitHub官方仓库：<a href="https://github.com/enchant97/hasty-paste">https://github.com/enchant97/hasty-paste</a><br>官方文档地址：<a href="https://enchantedcode.co.uk/hasty-paste/">https://enchantedcode.co.uk/hasty-paste/</a></p><h2 id="4-搭建环境"><a href="#4-搭建环境" class="headerlink" title="4. 搭建环境"></a>4. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器 24 元 &#x2F; 月 VPS 一台</del> 咕咕自己搭建用的是硅谷的<a href="https://loll.cc/tx">腾讯轻量应用服务器</a> ，（这次最好选 非大陆的，而且线路还不错的机器）如果是小白刚开始玩的话，也可以选择 <a href="https://gao.ee/lca">莱卡云 美国CN2 GIA</a> 的服务器，（莱卡云服务器介绍：<a href="https://blog.laoda.de/archives/vps-lcayun/">点击查看</a>）或者<a href="https://blog.laoda.de/vps/">Racknerd</a>的高性价比服务器（注意地区选美国西部城市的）</li><li>系统：Debian 11 （<a href="https://blog.laoda.de/archives/useful-script/">DD 脚本</a> 非必需 DD，用原来的系统也 OK，之后教程都是用 Debian 或者 Ubuntu 搭建～）</li><li>安装好 Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker/">相关脚本</a>）</li><li>【非必需但建议】域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo/">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>【非必需】提前安装好宝塔面板海外版本 aapanel，并安装好 Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程选用】安装好 Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager/">相关教程</a>）</li></ul><blockquote><p>服务器要求：内存建议1G，能安装Docker即可～</p></blockquote><h2 id="5-搭建视频"><a href="#5-搭建视频" class="headerlink" title="5. 搭建视频"></a>5. 搭建视频</h2><h3 id="5-1-YouTube"><a href="#5-1-YouTube" class="headerlink" title="5.1 YouTube"></a>5.1 YouTube</h3><p>视频地址：<a href="https://youtu.be/R35imcsDfDo">https://youtu.be/R35imcsDfDo</a></p><h3 id="5-2-哔哩哔哩"><a href="#5-2-哔哩哔哩" class="headerlink" title="5.2 哔哩哔哩"></a>5.2 哔哩哔哩</h3><p>哔哩哔哩：<a href="https://www.bilibili.com/video/BV12V411N7M1/">https://www.bilibili.com/video/BV12V411N7M1/</a></p><h2 id="6-搭建方式"><a href="#6-搭建方式" class="headerlink" title="6. 搭建方式"></a>6. 搭建方式</h2><p>如果你不是用的腾讯云的轻量应用服务器，可以直接跳到 6.1 部分。</p><h3 id="安装系统（腾讯云轻量应用服务器）"><a href="#安装系统（腾讯云轻量应用服务器）" class="headerlink" title="安装系统（腾讯云轻量应用服务器）"></a>安装系统（腾讯云轻量应用服务器）</h3><img src="https://img.laoda.de/i/2022/08/16/zlyhcz-2.webp" alt="e59713fba8726d3cb55ae11bca83fe3c.png" style="zoom:33%;" /><p>腾讯云轻量服务器最大的特点就是 “轻量”，相比 CVM，更适合小白上手，这边我们之间选择 Docker 基础镜像，就可以省去后面安装 Docker 的步骤 <del>（如果你非要用国内的服务器，这边装的 Docker 镜像还会帮你配置好国内镜像源，让你加速访问 docker 镜像资源）</del> 不建议用国内的 。</p><h3 id="登陆（腾讯云轻量应用服务器）"><a href="#登陆（腾讯云轻量应用服务器）" class="headerlink" title="登陆（腾讯云轻量应用服务器）"></a>登陆（腾讯云轻量应用服务器）</h3><img src="https://img.laoda.de/i/2022/08/16/zlzlj7-2.webp" alt="2722040ee311eb4a9ebf2a4945bf38f4.png" style="zoom:25%;" /><img src="https://img.laoda.de/i/2022/08/16/zm0gv8-2.webp" alt="c0b5d360053746c4095d592967ee401f.png" style="zoom:25%;" /><img src="https://img.laoda.de/i/2022/08/16/zm1vqw-2.webp" alt="e0ba858f021b846ad0abc27acf5008c2.png" style="zoom:25%;" /><h3 id="6-1-安装-Docker-与-Nginx-Proxy-Manager"><a href="#6-1-安装-Docker-与-Nginx-Proxy-Manager" class="headerlink" title="6.1 安装 Docker 与 Nginx Proxy Manager"></a>6.1 安装 Docker 与 Nginx Proxy Manager</h3><p>可以直接参考这篇内容：</p><p><a href="https://blog.laoda.de/archives/nginxproxymanager/">https://blog.laoda.de/archives/nginxproxymanager/</a></p><h3 id="6-2-创建安装目录"><a href="#6-2-创建安装目录" class="headerlink" title="6.2 创建安装目录"></a>6.2 创建安装目录</h3><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/hastypaste</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/hastypaste</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure><p>英文输入法下，按 <code>i</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">paste-bin:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">ghcr.io/enchant97/hasty-paste:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">hasty-paste</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8090</span><span class="string">:8000</span> <span class="comment"># 左边的8090可以自行修改成服务器上没有使用的端口</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data:/app/data</span></span><br></pre></td></tr></table></figure><p>修改好之后，注意切换成英文输入法，然后按一下 <code>esc</code>，然后 <code>:wq</code> 保存退出。</p><h3 id="6-3-打开服务器防火墙（非必需）并访问网页"><a href="#6-3-打开服务器防火墙（非必需）并访问网页" class="headerlink" title="6.3 打开服务器防火墙（非必需）并访问网页"></a>6.3 打开服务器防火墙（非必需）并访问网页</h3><p>打开防火墙的端口 <code>8090</code></p><p>举例，腾讯云打开方法如下（部分服务商没有自带的面板防火墙，就不用这步操作了）：</p><img src="https://img.laoda.de/i/2022/06/30/zlio5h-2.webp" alt="image-20220630215240864" style="zoom: 25%;" /><img src="https://img.laoda.de/i/2022/06/30/10h3dqt-2.webp" alt="image-20220630220546335" style="zoom: 25%;" /><p>图中示例填的是 <code>5230</code>，备注填的是 <code>memos</code>，这边我们填 <code>8090</code>，示例填 <code>hastypaste</code> ，确定即可（如果你在 docker-compose 文件里换了 <code>9009</code>，这边就需要填 <code>9009</code>，以此类推）</p><img src="https://img.laoda.de/i/2022/08/19/o4byqz-2.webp" alt="image-20220819145844555" style="zoom: 25%;" /><p>查看端口是否被占用（以 <code>8090</code> 为例），输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:8090  <span class="comment">#查看 8090 端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果啥也没出现，表示端口未被占用，我们可以继续下面的操作了～</p><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装 lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用（被占用了就修改一下端口，比如改成 <code>8081</code>，注意 docker 命令行里和防火墙都要改）</p><p>最后：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/hastypaste    <span class="comment"># 来到 dockercompose 文件所在的文件夹下</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> 777 data</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>理论上我们就可以输入 <code>http://ip:8090</code> 访问了。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器 IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的 IP。</p><p>2、遇到访问不了的情况，请再次检查在宝塔面板的防火墙和服务商的后台防火墙是否打开对应了端口。</p></blockquote><p>一般情况下，我们都需要给网页加上https！让网页更安全！</p><p> <a href="https://loll.cc/ns">namesilo</a> 上面 xyz 后缀的域名一年就 7 块钱，可以年抛。（冷知识，namesilo上 6位数字的xyz续费永远都是0.99美元 &#x3D; &#x3D;）</p><p>如果想要长期使用，还是建议买 com 后缀的域名，更加正规一些，可以输入 <code>laodade</code> 来获得 1 美元的优惠（不知道现在还有没有）</p><p><a href="https://loll.cc/ns">namesilo</a> 自带隐私保护，咕咕一直在用这家，价格也是这些注册商里面比较低的，关键是他家不像其他家域名注册商，没有七七八八的套路！（就是后台界面有些<del>丑</del> 古老 &#x3D; &#x3D;）</p><p><a href="https://blog.laoda.de/archives/namesilo/">【域名购买】Namesilo 优惠码和域名解析教程（附带服务器购买推荐和注意事项）</a></p><p>我们接着往下看！</p><h2 id="7-反向代理"><a href="#7-反向代理" class="headerlink" title="7. 反向代理"></a>7. 反向代理</h2><p>我们要用域名而不是IP+端口的方式来访问我们的服务！</p><h3 id="7-1-利用-Nginx-Proxy-Manager"><a href="#7-1-利用-Nginx-Proxy-Manager" class="headerlink" title="7.1 利用 Nginx Proxy Manager"></a>7.1 利用 Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo/">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><img src="https://img.laoda.de/i/2022/10/16/n6t02e-2.webp" alt="image-20221016140213282" style="zoom:33%;" /><p>之后，登陆 Nginx Proxy Manager（不会的看这个：<strong>安装 Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager/">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称 NPM）会用到 <code>80</code>、<code>443</code> 端口，所以本机不能占用（比如原来就有 Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom: 33%;" /><img src="https://img.laoda.de/i/2023/05/27/lvep5w-0.webp" alt="image-20230527132253249" style="zoom: 33%;" /><blockquote><p>注意填写对应的 <code>域名</code>、<code>IP</code> 和 <code>端口</code>，按文章来的话，应该是 <code>8090</code></p></blockquote><p><strong>IP 填写：</strong></p><p>如果 Nginx Proxy Manager 和 hastypaste 在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的 Docker 容器内部 IP。</p><img src="https://img.laoda.de/i/2022/09/29/pcdnz5-2.webp" style="zoom:50%;" /><p>否则直接填 <code>hastypaste</code> 所在的服务器 IP 就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom: 33%;" /><p>再次打开，勾选这些：</p><img src="https://img.laoda.de/i/2022/10/16/n7nn6e-2.webp" alt="image-20221016140356324" style="zoom:50%;" /><p>然后就可以用域名来安装访问了。</p><h3 id="7-2-利用宝塔面板"><a href="#7-2-利用宝塔面板" class="headerlink" title="7.2 利用宝塔面板"></a>7.2 利用宝塔面板</h3><p>发现还是有不少小伙伴习惯用宝塔面板，这边也贴一个宝塔面板的反代配置：</p><p>直接新建一个站点，不要数据库，不要 php，纯静态即可。</p><p>然后打开下面的配置，修改 Nginx 的配置。</p><img src="https://img.laoda.de/i/2022/08/19/ov4xrt-2.webp" alt="image-20220819150345725" style="zoom: 33%;" /><img src="https://img.laoda.de/i/2022/08/19/owbbkb-2.webp" alt="image-20220819150542867" style="zoom: 33%;" /><p>代码如下：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:8090/;       <span class="comment"># 注意改成你实际使用的端口</span></span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此方法对 90% 的反向代理都能生效，然后就可以用域名来安装访问了。</p><p>有同学可能会问，为什么不直接用宝塔自带的反向代理功能。</p><img src="https://img.laoda.de/i/2022/08/19/oxf800-2.webp" alt="image-20220819150730128" style="zoom: 33%;" /><p>也可以，不过咕咕自己之前遇到过当有多个网站需要反代的时候，在这边设置会报错的情况 &#x3D; &#x3D;</p><p>所以后来就不用了，直接用上面的方法来操作了。</p><h2 id="8-使用教程"><a href="#8-使用教程" class="headerlink" title="8. 使用教程"></a>8. 使用教程</h2><p>参考视频，或者官方文档：<a href="https://enchantedcode.co.uk/hasty-paste/install.html">https://enchantedcode.co.uk/hasty-paste/install.html</a></p><h3 id="8-1-更新-hastypaste"><a href="#8-1-更新-hastypaste" class="headerlink" title="8.1 更新 hastypaste"></a>8.1 更新 hastypaste</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/hastypaste</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/hastypaste /root/data/docker_data/hastypaste.archive  <span class="comment"># 万事先备份，以防万一</span></span><br><span class="line"></span><br><span class="line">docker-compose pull</span><br><span class="line"></span><br><span class="line">docker-compose up -d    <span class="comment"># 请不要使用 docker-compose stop 来停止容器，因为这么做需要额外的时间等待容器停止；docker-compose up -d 直接升级容器时会自动停止并立刻重建新的容器，完全没有必要浪费那些时间。</span></span><br><span class="line"></span><br><span class="line">docker image prune  <span class="comment"># prune 命令用来删除不再使用的 docker 对象。删除所有未被 tag 标记和未被容器使用的镜像</span></span><br></pre></td></tr></table></figure><p>提示：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WARNING! This will remove all dangling images.</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] </span><br></pre></td></tr></table></figure><p>输入 <code>y</code></p><p>利用 Docker 搭建的应用，更新非常容易～</p><h3 id="8-2-卸载-hastypaste"><a href="#8-2-卸载-hastypaste" class="headerlink" title="8.2 卸载 hastypaste"></a>8.2 卸载 hastypaste</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/hastypaste</span><br><span class="line"></span><br><span class="line">docker-compose down</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/hastypaste  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>可以卸载得很干净。</p><h2 id="9-常见问题"><a href="#9-常见问题" class="headerlink" title="9. 常见问题"></a>9. 常见问题</h2><p>暂未发现</p><h2 id="10-结尾"><a href="#10-结尾" class="headerlink" title="10. 结尾"></a>10. 结尾</h2><p>祝大家用得开心，有问题可以去 GitHub 提 <a href="https://github.com/enchant97/hasty-paste/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，有能力给项目做贡献的同学，也欢迎积极加入到 <a href="https://github.com/enchant97/hasty-paste/">项目</a> 中来，贡献自己的一份力量！</p><blockquote><p>目前这个项目非常需要维护人员，欢迎小伙伴贡献自己的力量。</p></blockquote><p>最后，感谢开发人员们的辛苦付出，让我们能用到这么优秀的项目！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>GitHub官方仓库：<a href="https://github.com/enchant97/hasty-paste">https://github.com/enchant97/hasty-paste</a><br>官方文档地址：<a href="https://enchantedcode.co.uk/hasty-paste/">https://enchantedcode.co.uk/hasty-paste/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-前言&quot;&gt;&lt;a href=&quot;#1-前言&quot; class=&quot;headerlink&quot; title=&quot;1.前言&quot;&gt;&lt;/a&gt;1.前言&lt;/h2&gt;&lt;p&gt;Hasty Paste 是一个快速粘贴文本并共享的地方，主要用于共享调试日志等，以帮助开发人员提供技术支持。该项目的目标是既</summary>
      
    
    
    
    <category term="Docker系列" scheme="https://blog.laoda.de/categories/Docker%E7%B3%BB%E5%88%97/"/>
    
    
    <category term="DockerCompose" scheme="https://blog.laoda.de/tags/DockerCompose/"/>
    
    <category term="Docker部署" scheme="https://blog.laoda.de/tags/Docker%E9%83%A8%E7%BD%B2/"/>
    
    <category term="paste" scheme="https://blog.laoda.de/tags/paste/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客Butterfly主题配置记录（附简单聊一下之前博客的问题）</title>
    <link href="https://blog.laoda.de/archives/hexo-butterfly-config/"/>
    <id>https://blog.laoda.de/archives/hexo-butterfly-config/</id>
    <published>2023-07-15T00:54:55.000Z</published>
    <updated>2023-07-15T03:02:06.632Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简单聊一下之前博客的问题"><a href="#简单聊一下之前博客的问题" class="headerlink" title="简单聊一下之前博客的问题"></a>简单聊一下之前博客的问题</h2><p>博客前段时间不确定是DNS解析的问题还是被攻击了，导致无法访问。（期间更换了高防服务器依旧无果，只要用<code>blog.laoda.de</code>或者<code>iwanlab.com</code>一反代，源站服务器CPU立马飙升到100%，不管是OVH还是HZ，但是换别的域名反代源站CPU占用一直保持在3-5%的水平）</p><p><img src="https://img.laoda.de/i/2023/07/12/12dg711-0.webp"></p><p>通过top查看是java的进程占用过多（机器上架设了halo，是基于Java的）</p><p><img src="https://img.laoda.de/i/2023/07/12/12ruyhd-0.webp"></p><p>但是我有其他服务器也搭建了halo的博客，那个基本只有20-60%的占用</p><p><img src="https://img.laoda.de/i/2023/07/12/12sttd0-0.webp"></p><p>折腾了好久，做了以下尝试，均没有效果：</p><p>1、利用hetzner的备份功能，直接找一台新的服务器部署，然后反代（还是用瓦工，同一个域名），源站服务器CPU在反代之前一直是0-5%占用，一旦反代，飙升到200%（2核心的）</p><p>2、 直接换反代服务器（换成了斯巴达，同一个域名），效果同上，没反代之前是cpu低占用，一旦反代，直接飙满；</p><p>3、停用Wordpress，重新用docker部署另一个halo博客，用同一个域名，依旧如上，换了一个域名之后，恢复正常。</p><p>猜想会不会是这个域名的问题，于是我用了 <a href="http://www.aaa.com/">www.aaa.com</a> 依旧采用源站+反代的模式，正常了，cpu在5%左右。</p><p>然后我把aaa.com 301重定向到了 <a href="http://www.aaa.com/">www.aaa.com</a> 今天一天正常，结果刚刚，源站服务器cpu又爆了</p><p>心力交瘁，于是就想索性换到无后台的静态博客Hexo吧，正好以前也弄过，有经验，这样后台没有数据处理，应该就没问题了。</p><blockquote><p>想不到折腾了近三年，还是回到了Hexo &#x3D; &#x3D;</p></blockquote><p>又用上了当时折腾博客一眼相中的Butterfly主题（当时记得只有300+ star，现在已经是5K+了）</p><p>因为Hexo没有后台，很多东西需要自己手动来配置一下的，期间有些内容也是网上搜索得到的答案，为了防止遗忘，咕咕这边特别记录一下一些我认为的重点，同时也给想要使用Hexo博客的新手小伙伴一些参考吧。</p><h2 id="Hexo博客配置记录"><a href="#Hexo博客配置记录" class="headerlink" title="Hexo博客配置记录"></a>Hexo博客配置记录</h2><h3 id="将Hexo博客自动部署到服务器"><a href="#将Hexo博客自动部署到服务器" class="headerlink" title="将Hexo博客自动部署到服务器"></a>将Hexo博客自动部署到服务器</h3><p>下面的很多内容网上都能找到各种解决方案，这边先把网上没有的，咕咕自己折腾的分享给大家。</p><p>之前用Hexo博客，最大的痛点就是：<strong>我怎么样才能一键把我本地生成的博客推送到我的服务器上？</strong></p><blockquote><p>其实可以推送到GitHub，但是GitHub访问比较慢，很多地区的联通宽带甚至无法访问，咕咕这边有<a href="https://bwh81.net/aff.php?aff=67086&pid=87">搬瓦工</a>的<a href="https://blog.laoda.de/archives/vps-route/">三网CN2 GIA</a>的服务器，国内访问速度很不错，所以想着部署在搬瓦工上，给国内不管是使用移动、联通还是电信宽带的小伙伴们都能提供一个良好的访问体验。</p></blockquote><p>其实，在现在的博客里有一个方法：<a href="https://blog.laoda.de/archives/hexo-building/">将 Hexo 部署到阿里云轻量服务器（保姆级教程）</a> （这个是转载的当时一位大佬的博客，大概是3年前，当时自己跟着一步一步做成功了，也很激动。）</p><p>但是这个方法说实话配置起来还是比较复杂的。</p><p>有没有简单一点的方法呢？</p><p>突然想到，现在不是有<a href="https://blog.laoda.de/archives/chatgpt-plus-depay/">ChatGPT</a>吗？之前一直不会写脚本，现在把需求给ChatGPT，让它帮忙写一个自动部署脚本不就行了？</p><p>于是有了下面要介绍的这个脚本。</p><p>先说一下我的环境与目的：</p><ul><li><a href="https://bwh81.net/aff.php?aff=67086&pid=87">搬瓦工服务器</a>一台，IP：<code>173.242.118.113</code> SSH端口:<code>3451</code> ，安装了<a href="https://blog.laoda.de/archives/nginxproxymanager/">Nginx Proxy Manager</a>（你也可以是任意的一台服务器，比如<a href="https://loll.cc/tx">腾讯云</a>、<a href="https://blog.laoda.de/vps/">Racknerd</a>等等，可以是任意系统，只要也安装上Nginx Proxy Manager即可）</li><li>本地使用MacBook Air（需要python和rsync，Windows的同学也不要慌，下面有windows的安装方法）</li><li>Hexo文件存放在<code>/Users/gugu/blog</code>，Hexo的public文件（就是我们需要上传到服务器的）路径是<code>/Users/gugu/blog/public</code></li><li>目标把本地<code>/Users/gugu/blog/public</code>的内容发送到服务器的<code>/root/data/docker_data/npm/data/blog</code></li></ul><p>直接把需求仍给ChatGPT，看看回答：</p><p>Prompt：</p><blockquote><p>我需要把本地mac电脑上，<code>/Users/gugu/blog/public</code>文件夹里面的内容，上传到服务器的<code>/root/data/docker_data/npm/data/blog</code>里，服务器的IP：<code>173.242.118.113</code> ，SSH端口：<code>3451</code> ，请帮我写一个自动化脚本。</p></blockquote><p>ChatGPT回答：</p><blockquote><p>这里是一个基本的bash脚本，使用<code>rsync</code>命令通过SSH协议上传文件，<code>rsync</code>可以保持源文件和目标文件之间的一致性，非常适合用于备份和镜像。如果<code>rsync</code>命令在你的机器上没有安装，它应该在大多数Linux发行版和MacOS上通过包管理器（如apt，yum，brew等）就可以安装。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义源路径、目标路径、服务器地址</span></span><br><span class="line">SOURCE_PATH=<span class="string">&#x27;/Users/gugu/blog/public&#x27;</span></span><br><span class="line">DEST_PATH=<span class="string">&#x27;/root/data/docker_data/npm/data/blog&#x27;</span></span><br><span class="line">SERVER_IP=<span class="string">&#x27;173.242.118.113&#x27;</span></span><br><span class="line">SSH_PORT=3451</span><br><span class="line"></span><br><span class="line"><span class="comment"># rsync命令</span></span><br><span class="line">rsync -avz -e <span class="string">&quot;ssh -p <span class="variable">$SSH_PORT</span>&quot;</span> --progress <span class="variable">$SOURCE_PATH</span> username@<span class="variable">$SERVER_IP</span>:<span class="variable">$DEST_PATH</span></span><br></pre></td></tr></table></figure><p>这个脚本使用了<code>rsync</code>的以下选项：</p><ul><li><code>-a</code>：这是”归档”模式，可以保留文件的所有属性和权限,同时递归地拷贝文件夹。</li><li><code>-v</code>：这是”详细”模式，表示输出详细信息。</li><li><code>-z</code>：使用gzip压缩数据，可以加快传输速度。</li><li><code>-e</code>：使用指定的传输命令，如ssh，并可以附带上其他选项，如 <code>-p</code>用于指定端口。</li></ul><p>在<code>rsync</code>命令的最后，你需要替换<code>username</code>为你登录目标服务器的用户名。请注意，这个脚本默认认为你已经设置了从你的Mac电脑到服务器的无密码SSH登录。如果尚未设置，你需要在运行脚本时手动输入密码，或者设置SSH密钥无密码登录。</p><p>将上述脚本保存为如<code>sync.sh</code>文件，你可以在终端中通过以下命令来运行它：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash sync.sh</span><br></pre></td></tr></table></figure><p>确保你的脚本有执行权限，如果没有，你可以使用下面的命令来给你的脚本添加执行权限：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x sync.sh</span><br></pre></td></tr></table></figure><p>然后你可以简单地通过以下命令运行脚本：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./sync.sh</span><br></pre></td></tr></table></figure></blockquote><p>注意：这边的<code>sync.sh</code>文件我们可以放在Hexo博客的根目录。</p><p>Windows安装Rsync：</p><blockquote><p>由于Windows自身并没有类似于<code>rsync</code>的命令，你需要下载和安装Cygwin，这是一个在Windows下提供类UNIX环境支持的软件，其中包含了大量GNU和开源工具，包括<code>rsync</code>。</p><p>以下是具体步骤：</p><ol><li><p>下载并安装Cygwin:</p><ul><li>访问Cygwin的官方网站（<a href="https://www.cygwin.com/%EF%BC%89%E5%B9%B6%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E7%A8%8B%E5%BA%8F%E3%80%82">https://www.cygwin.com/）并下载安装程序。</a></li><li>运行下载的<code>setup-x86.exe</code>（32位系统）或<code>setup-x86_64.exe</code>（64位系统）文件。</li><li>在Cygwin Setup的包选择界面，输入<code>rsync</code>在搜索框中，然后在搜索结果中找到对应的<code>rsync</code>包，在SpinBox中将Skip更改为对应的版本，点击下一步完成安装。</li></ul></li><li><p>设置Path环境变量:</p><ul><li>右击电脑上的“此电脑”图标或者”My Computer”，选择“属性”或者”Properties”。</li><li>在弹出界面中，选择“高级系统设置”或者”Advanced System Settings”。</li><li>在“系统属性”或者”System Properties”窗口中，点击“环境变量”或者”Environment Variables”。</li><li>在“环境变量”窗口中，系统变量栏找到Path，点击编辑或者”Edit”，在变量值的末尾添加<code>;C:\cygwin64\bin</code>（64位系统，32位系统则添加<code>;C:\cygwin\bin</code>），点击“确定”或者”OK”。</li></ul></li><li><p>测试<code>rsync</code>是否安装成功:</p><ul><li>打开命令提示符（CMD）或者Powershell，输入<code>rsync --version</code>并按回车。</li><li>如果显示rsync的版本信息，那么rsync已经安装成功。</li></ul></li></ol><p>注意：安装Cygwin时可能需要管理员权限。同时也请注意保证Cygwin软件包的完整性和安全性，以免引入恶意软件。</p></blockquote><p>Windows安装python：</p><blockquote><p>在Windows上安装Python的步骤如下：</p><ol><li><p>访问Python的官方网站： <a href="https://www.python.org/">https://www.python.org/</a></p></li><li><p>鼠标悬停在顶部菜单栏的“Downloads”选项上，它会显示最新版本的Python供你下载。如果你需要安装其他版本的Python，可以点击“Downloads”选项进入下载页面，查看并选择你需要的版本。</p></li><li><p>点击下载Python对应版本的安装器，通常你应该选择64位安装包，除非你知道自己的电脑是32位的。文件应为”python-x.x.x-amd64.exe”格式，其中”x.x.x”代表Python的版本。</p></li><li><p>运行下载的安装程序，选择“Customize installation”，然后点击“Next”。</p></li><li><p>在下一个页面，可以看到一个“Add Python to PATH”选项，记得勾选它。这样可以使得Python在你的系统路径（PATH环境变量）中，这样你就可以在命令提示符（cmd）中直接运行Python。接下来点击”Install Now”开始安装。</p></li><li><p>安装完成后，点击“Close”。</p></li><li><p>验证Python是否正确安装：打开命令提示符（cmd），然后输入<code>python --version</code>，如果正确输出了Python的版本号，那么Python就安装成功了。</p></li></ol><p>注意：介于权限问题，你可能需要管理员权限来完成Python的安装。</p></blockquote><p>我们当然是想着能偷懒就偷懒，不输入密码，于是接着提问：</p><p>Prompt：</p><blockquote><p>如何安装rsync? 我本地是mac电脑，服务器是Debian11，另外如何配置无密码访问？</p></blockquote><p>ChatGPT回答：</p><blockquote><p><strong>在Mac上安装rsync：</strong></p><p>Mac系统通常预装了rsync，你可以通过输入以下命令在终端检查rsync是否已经安装：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rsync --version</span><br></pre></td></tr></table></figure><p>如果rsync已经安装，这个命令会显示其版本号。如果rsync没有安装，你需要通过brew来安装。</p><p>首先，如果你还没有安装brew，你需要安装它。在终端执行以下命令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/bin/bash -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure><p>然后，你可以使用brew安装rsync：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install rsync</span><br></pre></td></tr></table></figure><p><strong>在Debian11服务器上安装rsync：</strong></p><p>在Debian系统上，你可以使用apt来安装rsync。运行以下命令安装rsync：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install rsync</span><br></pre></td></tr></table></figure><p><strong>配置SSH密钥无密码访问：</strong></p><p>无密码登录的设置基于SSH公私钥对的认证。基本的步骤如下：</p><ol><li><p>在本地Mac上生成SSH公私钥对。在终端中输入以下命令：</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen</span><br></pre></td></tr></table></figure><p> 然后按提示操作。默认情况下，公私钥对会被保存在<code>~/.ssh/id_rsa.pub</code>（公钥）和<code>~/.ssh/id_rsa</code>（私钥）。如果需要，你可以在生成时设置一个密码，但是如果你想实现无密码登录，这里就不要设置密码。</p></li><li><p>将生成的公钥复制到服务器上。在终端输入以下命令：</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-copy-id -i ~/.ssh/id_rsa.pub -p 3451 username@173.242.118.113</span><br></pre></td></tr></table></figure><p> 这里需要将<code>username</code>替换为你的用户名。这个命令会将你的公钥添加到服务器上的<code>~/.ssh/authorized_keys</code>文件中，这样服务器就可以识别你的本地机器了。</p></li><li><p>测试无密码登录。你可以尝试ssh登录服务器：</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -p 3451 username@173.242.118.113</span><br></pre></td></tr></table></figure><p> 如果一切顺利，你应该能够不输入密码就登录服务器了。</p></li></ol></blockquote><p>注意：这边的brew的安装，由于网络原因，用ChatGPT提供的方法可能装不上，可以尝试用这个方法：[M1 芯片 Mac 上 Homebrew 安装](M1 芯片 Mac 上 Homebrew 安装)   或者直接看作者的GitHub：<a href="https://github.com/ineo6/homebrew-install">https://github.com/ineo6/homebrew-install</a></p><p>好了，接下来我们到服务器上操作一下。</p><p>其实关于如何在把静态网站部署在NPM上，咕咕也有过分享：<a href="https://blog.laoda.de/archives/host-static-sites-on-npm/">如何在 Nginx Proxy Manager（NPM）上部署静态网站</a></p><p>直接看这篇就行了。</p><p>注意只要新建一个文件夹：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/npm/data/blog</span><br></pre></td></tr></table></figure><p>然后参考上面文章，把<code>/data/demo10.gao.ee</code>改成<code>/data/blog</code>就行。</p><p>好了，可以来测试一下了！</p><p>以后写好文章之后发布，就只需要三步：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line"></span><br><span class="line">hexo g</span><br><span class="line"></span><br><span class="line">./sync.sh</span><br></pre></td></tr></table></figure><p>很舒服了，而且文章什么的都保存在你的本地，也比较有安全感。（当然你可以选择把这个也上传到服务器里，双保险）</p><blockquote><p>以下为咕咕在Hexo Butterfly主题下安装的插件，不过理论上是Hexo博客都可用的。</p><p>注意以下插件均到Hexo根目录安装。</p></blockquote><h3 id="Hexo-Butterfly文章置顶插件"><a href="#Hexo-Butterfly文章置顶插件" class="headerlink" title="Hexo Butterfly文章置顶插件"></a>Hexo Butterfly文章置顶插件</h3><p>卸载<code>hexo-generator-index</code>，然后安装<code>hexo-generator-index-pin-top</code></p><p>注意到Hexo根目录安装。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm uninstall hexo-generator-index --save</span><br><span class="line">npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure><p>使用方法：</p><p>在需要置顶的文章的Front-matter中加上top: true&#x2F;数字即可，数字越大，文章越靠前。</p><p>例如</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cover: </span><br><span class="line">top: 1 <span class="comment">#这里加一个top就行</span></span><br><span class="line">abbrlink: 1d543</span><br><span class="line"><span class="built_in">date</span>: 2023-07-15 10:32:05</span><br></pre></td></tr></table></figure><h3 id="Hexo-Butterfly-sitemap插件"><a href="#Hexo-Butterfly-sitemap插件" class="headerlink" title="Hexo Butterfly sitemap插件"></a>Hexo Butterfly sitemap插件</h3><p>站点地图即 <a href="https://baike.baidu.com/item/sitemap/6241567?fr=aladdin">sitemap</a>， 是一个页面，上面放置了网站上需要搜索引擎抓取的所有页面的链接。站点地图可以告诉搜索引擎网站上有哪些可供抓取的网页，以便搜索引擎可以更加智能地抓取网站。所以我们首先需要生成一个站点地图。</p><p>安装 Google 的站点地图生成插件：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure><p>然后来到 Hexo 根目录配置文件 <code>config.yml</code>，在下面添加：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 站点地图</span></span><br><span class="line"><span class="attr">sitemap:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">sitemap.xml</span></span><br></pre></td></tr></table></figure><p>然后重新推送到服务器，访问如下 URL:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://你的域名/sitemap.xml</span><br></pre></td></tr></table></figure><p>看看网页中有没有出现代码。有的话就成功。</p><p>比如咕咕的sitemap就是：<a href="https://blog.laoda.de/sitemap.xml">https://blog.laoda.de/sitemap.xml</a></p><p>参考：<a href="https://qmike.top/posts/2a1b5a62">https://qmike.top/posts/2a1b5a62</a></p><h3 id="Hexo-Butterfly-RSS插件"><a href="#Hexo-Butterfly-RSS插件" class="headerlink" title="Hexo Butterfly RSS插件"></a>Hexo Butterfly RSS插件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><p>在hexo的主配置文件<code>_config.yml</code>中任意位置添加以下代码：</p><p><img src="https://img.laoda.de/i/2023/07/15/h2lp1b-0.webp" alt="image-20230715103228334"></p><p>比如咕咕的RSS：<a href="https://blog.laoda.de/atom.xml">https://blog.laoda.de/atom.xml</a></p><p>参考：<a href="https://www.cnblogs.com/MoYu-zc/p/14395965.html">https://www.cnblogs.com/MoYu-zc/p/14395965.html</a></p><h3 id="Hexo-Butterfly-本地搜索插件"><a href="#Hexo-Butterfly-本地搜索插件" class="headerlink" title="Hexo Butterfly 本地搜索插件"></a>Hexo Butterfly 本地搜索插件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><p>同时修改主题配置文件：</p><p><img src="https://img.laoda.de/i/2023/07/15/h1cmwc-0.webp" alt="image-20230715103018077"></p><h3 id="持续更新中"><a href="#持续更新中" class="headerlink" title="持续更新中"></a>持续更新中</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;简单聊一下之前博客的问题&quot;&gt;&lt;a href=&quot;#简单聊一下之前博客的问题&quot; class=&quot;headerlink&quot; title=&quot;简单聊一下之前博客的问题&quot;&gt;&lt;/a&gt;简单聊一下之前博客的问题&lt;/h2&gt;&lt;p&gt;博客前段时间不确定是DNS解析的问题还是被攻击了，导致无法访</summary>
      
    
    
    
    <category term="网站搭建" scheme="https://blog.laoda.de/categories/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="Hexo" scheme="https://blog.laoda.de/tags/Hexo/"/>
    
    <category term="Butterfly" scheme="https://blog.laoda.de/tags/Butterfly/"/>
    
    <category term="ChatGPT" scheme="https://blog.laoda.de/tags/ChatGPT/"/>
    
  </entry>
  
  <entry>
    <title>开箱即用！一款注重隐私、安全可控的IOS自定义通知推送工具——Bark，配合Uptime Kuma搭建网站监控！</title>
    <link href="https://blog.laoda.de/archives/docker-compose-install-bark/"/>
    <id>https://blog.laoda.de/archives/docker-compose-install-bark/</id>
    <published>2023-07-11T07:18:17.000Z</published>
    <updated>2023-07-13T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h2><p>免费、简单、安全，开箱即用！</p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p>直接丢几个图：</p><img src="https://img.laoda.de/i/2023/06/26/skv0ci-0.webp" alt="IMG_8A07D54D57DD-1.jpeg" style="zoom:25%;" /><h3 id="2-1-特点"><a href="#2-1-特点" class="headerlink" title="2.1 特点"></a>2.1 特点</h3><ul><li>免费、轻量！简单调用接口即可给自己的iPhone发送推送。</li><li>依赖苹果APNs，及时、稳定、可靠</li><li>不会消耗设备的电量， 基于系统推送服务与推送扩展，APP本体并不需要运行。</li><li>隐私安全，可以通过一些方式确保包含作者本人在内的所有人都无法窃取你的隐私。点击详细了解如何保障<a href="https://bark.day.app/#/privacy">隐私安全</a></li></ul><h2 id="3-相关地址"><a href="#3-相关地址" class="headerlink" title="3. 相关地址"></a>3. 相关地址</h2><p>GitHub官方仓库：<a href="https://github.com/Finb/bark-server">https://github.com/Finb/bark-server</a><br>官方文档地址：<a href="https://bark.day.app/">https://bark.day.app/</a><br>作者博客：<a href="https://day.app/2018/06/bark-server-document/">https://day.app/2018/06/bark-server-document/</a></p><h2 id="4-搭建环境"><a href="#4-搭建环境" class="headerlink" title="4. 搭建环境"></a>4. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器 24 元 &#x2F; 月 VPS 一台</del> 咕咕自己搭建用的是硅谷的<a href="https://loll.cc/tx">腾讯轻量应用服务器</a> ，（这次最好选 非大陆的，而且线路还不错的机器）如果是小白刚开始玩的话，也可以选择 <a href="https://gao.ee/lca">莱卡云 美国CN2 GIA</a> 的服务器，（莱卡云服务器介绍：<a href="https://blog.laoda.de/archives/vps-lcayun/">点击查看</a>）或者<a href="https://blog.laoda.de/vps/">Racknerd</a>的高性价比服务器（注意地区选美国西部城市的）</li><li>系统：Debian 11 （<a href="https://blog.laoda.de/archives/useful-script/">DD 脚本</a> 非必需 DD，用原来的系统也 OK，之后教程都是用 Debian 或者 Ubuntu 搭建～）</li><li>安装好 Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker/">相关脚本</a>）</li><li>【非必需但建议】域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo/">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>【非必需】提前安装好宝塔面板海外版本 aapanel，并安装好 Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程选用】安装好 Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager/">相关教程</a>）</li></ul><blockquote><p>服务器要求：内存建议1G，能安装Docker即可～</p></blockquote><h2 id="5-搭建视频"><a href="#5-搭建视频" class="headerlink" title="5. 搭建视频"></a>5. 搭建视频</h2><h3 id="5-1-YouTube"><a href="#5-1-YouTube" class="headerlink" title="5.1 YouTube"></a>5.1 YouTube</h3><p>视频地址：<a href="https://youtu.be/Pfrla3su_Js">https://youtu.be/Pfrla3su_Js</a></p><h3 id="5-2-哔哩哔哩"><a href="#5-2-哔哩哔哩" class="headerlink" title="5.2 哔哩哔哩"></a>5.2 哔哩哔哩</h3><p>哔哩哔哩：<a href="https://www.bilibili.com/video/BV1qP411e7Qm/">https://www.bilibili.com/video/BV1qP411e7Qm/</a></p><h2 id="6-搭建方式"><a href="#6-搭建方式" class="headerlink" title="6. 搭建方式"></a>6. 搭建方式</h2><p>如果你不是用的腾讯云的轻量应用服务器，可以直接跳到 6.1 部分。</p><h3 id="安装系统（腾讯云轻量应用服务器）"><a href="#安装系统（腾讯云轻量应用服务器）" class="headerlink" title="安装系统（腾讯云轻量应用服务器）"></a>安装系统（腾讯云轻量应用服务器）</h3><img src="https://img.laoda.de/i/2022/08/16/zlyhcz-2.webp" alt="e59713fba8726d3cb55ae11bca83fe3c.png" style="zoom:33%;" /><p>腾讯云轻量服务器最大的特点就是 “轻量”，相比 CVM，更适合小白上手，这边我们之间选择 Docker 基础镜像，就可以省去后面安装 Docker 的步骤 <del>（如果你非要用国内的服务器，这边装的 Docker 镜像还会帮你配置好国内镜像源，让你加速访问 docker 镜像资源）</del> 不建议用国内的 。</p><h3 id="登陆（腾讯云轻量应用服务器）"><a href="#登陆（腾讯云轻量应用服务器）" class="headerlink" title="登陆（腾讯云轻量应用服务器）"></a>登陆（腾讯云轻量应用服务器）</h3><img src="https://img.laoda.de/i/2022/08/16/zlzlj7-2.webp" alt="2722040ee311eb4a9ebf2a4945bf38f4.png" style="zoom:25%;" /><img src="https://img.laoda.de/i/2022/08/16/zm0gv8-2.webp" alt="c0b5d360053746c4095d592967ee401f.png" style="zoom:25%;" /><img src="https://img.laoda.de/i/2022/08/16/zm1vqw-2.webp" alt="e0ba858f021b846ad0abc27acf5008c2.png" style="zoom:25%;" /><h3 id="6-1-安装-Docker-与-Nginx-Proxy-Manager"><a href="#6-1-安装-Docker-与-Nginx-Proxy-Manager" class="headerlink" title="6.1 安装 Docker 与 Nginx Proxy Manager"></a>6.1 安装 Docker 与 Nginx Proxy Manager</h3><p>可以直接参考这篇内容：</p><p><a href="https://iwanlab.com/nginx-proxy-manager/">https://iwanlab.com/nginx-proxy-manager/</a></p><h3 id="6-2-创建安装目录"><a href="#6-2-创建安装目录" class="headerlink" title="6.2 创建安装目录"></a>6.2 创建安装目录</h3><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/bark</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/bark</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure><p>英文输入法下，按 <code>i</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.8&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">bark-server:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">finab/bark-server</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">bark-server</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data:/data</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8090:8080&quot;</span>  <span class="comment"># 左边的8090可以自行修改成服务器上没有使用的端口</span></span><br></pre></td></tr></table></figure><p>修改好之后，注意切换成英文输入法，然后按一下 <code>esc</code>，然后 <code>:wq</code> 保存退出。</p><h3 id="6-3-打开服务器防火墙（非必需）并访问网页"><a href="#6-3-打开服务器防火墙（非必需）并访问网页" class="headerlink" title="6.3 打开服务器防火墙（非必需）并访问网页"></a>6.3 打开服务器防火墙（非必需）并访问网页</h3><p>打开防火墙的端口 <code>8090</code></p><p>举例，腾讯云打开方法如下（部分服务商没有自带的面板防火墙，就不用这步操作了）：</p><img src="https://img.laoda.de/i/2022/06/30/zlio5h-2.webp" alt="image-20220630215240864" style="zoom: 25%;" /><img src="https://img.laoda.de/i/2022/06/30/10h3dqt-2.webp" alt="image-20220630220546335" style="zoom: 25%;" /><p>图中示例填的是 <code>5230</code>，备注填的是 <code>memos</code>，这边我们填 <code>8090</code>，示例填 <code>bark</code> ，确定即可（如果你在 docker-compose 文件里换了 <code>9009</code>，这边就需要填 <code>9009</code>，以此类推）</p><img src="https://img.laoda.de/i/2022/08/19/o4byqz-2.webp" alt="image-20220819145844555" style="zoom: 25%;" /><p>查看端口是否被占用（以 <code>8090</code> 为例），输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:8090  <span class="comment">#查看 8090 端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果啥也没出现，表示端口未被占用，我们可以继续下面的操作了～</p><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装 lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用（被占用了就修改一下端口，比如改成 <code>8081</code>，注意 docker 命令行里和防火墙都要改）</p><p>最后：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/bark    <span class="comment"># 来到 dockercompose 文件所在的文件夹下</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>理论上我们就可以输入 <code>http://ip:8090/ping</code> 访问了。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器 IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的 IP。</p><p>2、遇到访问不了的情况，请再次检查在宝塔面板的防火墙和服务商的后台防火墙是否打开对应了端口。</p></blockquote><img src="https://img.laoda.de/i/2023/06/26/slfwwq-0.webp" alt="5c6c9207637033970fd9f0c2c502aaa8.png" style="zoom: 33%;" /><p>出现<code>code:200</code>代表安装成功！</p><p>因为这个涉及到个人消息的，所以非常需要https！会让网页更安全！</p><p> <a href="https://loll.cc/ns">namesilo</a> 上面 xyz 后缀的域名一年就 7 块钱，可以年抛。（冷知识，namesilo上 6位数字的xyz续费永远都是0.99美元 &#x3D; &#x3D;）</p><p>如果想要长期使用，还是建议买 com 后缀的域名，更加正规一些，可以输入 <code>laodade</code> 来获得 1 美元的优惠（不知道现在还有没有）</p><p><a href="https://loll.cc/ns">namesilo</a> 自带隐私保护，咕咕一直在用这家，价格也是这些注册商里面比较低的，关键是他家不像其他家域名注册商，没有七七八八的套路！（就是后台界面有些<del>丑</del> 古老 &#x3D; &#x3D;）</p><p><a href="https://iwanlab.com/namesilo">【域名购买】Namesilo 优惠码和域名解析教程（附带服务器购买推荐和注意事项）</a></p><p>我们接着往下看！</p><h2 id="7-反向代理"><a href="#7-反向代理" class="headerlink" title="7. 反向代理"></a>7. 反向代理</h2><p>我们要用域名而不是IP+端口的方式来访问我们的服务！</p><h3 id="7-1-利用-Nginx-Proxy-Manager"><a href="#7-1-利用-Nginx-Proxy-Manager" class="headerlink" title="7.1 利用 Nginx Proxy Manager"></a>7.1 利用 Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://iwanlab.com/namesilo/">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><img src="https://img.laoda.de/i/2022/10/16/n6t02e-2.webp" alt="image-20221016140213282" style="zoom:33%;" /><p>之后，登陆 Nginx Proxy Manager（不会的看这个：<strong>安装 Nginx Proxy Manager</strong>（<a href="https://iwanlab.com/nginx-proxy-manager/">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称 NPM）会用到 <code>80</code>、<code>443</code> 端口，所以本机不能占用（比如原来就有 Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom: 33%;" /><img src="https://img.laoda.de/i/2023/05/27/lvep5w-0.webp" alt="image-20230527132253249" style="zoom: 33%;" /><blockquote><p>注意填写对应的 <code>域名</code>、<code>IP</code> 和 <code>端口</code>，按文章来的话，应该是 <code>8090</code></p></blockquote><p><strong>IP 填写：</strong></p><p>如果 Nginx Proxy Manager 和 bark 在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的 Docker 容器内部 IP。</p><img src="https://img.laoda.de/i/2022/09/29/pcdnz5-2.webp" style="zoom:50%;" /><p>否则直接填 <code>bark</code> 所在的服务器 IP 就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom: 33%;" /><p>再次打开，勾选这些：</p><img src="https://img.laoda.de/i/2022/10/16/n7nn6e-2.webp" alt="image-20221016140356324" style="zoom:50%;" /><p>然后就可以用域名来安装访问了。</p><h3 id="7-2-利用宝塔面板"><a href="#7-2-利用宝塔面板" class="headerlink" title="7.2 利用宝塔面板"></a>7.2 利用宝塔面板</h3><p>发现还是有不少小伙伴习惯用宝塔面板，这边也贴一个宝塔面板的反代配置：</p><p>直接新建一个站点，不要数据库，不要 php，纯静态即可。</p><p>然后打开下面的配置，修改 Nginx 的配置。</p><img src="https://img.laoda.de/i/2022/08/19/ov4xrt-2.webp" alt="image-20220819150345725" style="zoom: 33%;" /><img src="https://img.laoda.de/i/2022/08/19/owbbkb-2.webp" alt="image-20220819150542867" style="zoom: 33%;" /><p>代码如下：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:8090/;       <span class="comment"># 注意改成你实际使用的端口</span></span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此方法对 90% 的反向代理都能生效，然后就可以用域名来安装访问了。</p><p>有同学可能会问，为什么不直接用宝塔自带的反向代理功能。</p><img src="https://img.laoda.de/i/2022/08/19/oxf800-2.webp" alt="image-20220819150730128" style="zoom: 33%;" /><p>也可以，不过咕咕自己之前遇到过当有多个网站需要反代的时候，在这边设置会报错的情况 &#x3D; &#x3D;</p><p>所以后来就不用了，直接用上面的方法来操作了。</p><h2 id="8-使用教程"><a href="#8-使用教程" class="headerlink" title="8. 使用教程"></a>8. 使用教程</h2><p>参考视频，或者官方文档：<a href="https://bark.day.app/#/tutorial">https://bark.day.app/#/tutorial</a></p><h3 id="iOS"><a href="#iOS" class="headerlink" title="iOS"></a>iOS</h3><p>在 <code>APP Store</code> 里找到 <code>Bark</code></p><p>打开 <code>APP</code>，默认指向了官方服务器 <code>api.day.app</code>，需要点右上角的 <code>+</code> 号来添加我们前面搭建的私有服务器：</p><img src="https://img.laoda.de/i/2023/06/26/sln5b0-0.webp" alt="c4a53736051c675cbff711ffeb5ec91a.png" style="zoom:33%;" /><p>在 <code>APP</code>端填入你的服务器 <code>IP</code>或域名：</p><img src="https://img.laoda.de/i/2023/06/26/sm4ws5-0.webp" alt="4feba2a8cd724a158f94c99a6c74bd59.png" style="zoom: 25%;" /><p>添加成功之后，要 <code>允许</code> 发消息通知：</p><img src="https://img.laoda.de/i/2023/06/26/sm7p7s-0.webp" alt="046502e4cd8a24680cbd22a8cb02b9b1.png" style="zoom:25%;" /><p>点中间的注册设备：</p><img src="https://img.laoda.de/i/2023/06/26/sm99xv-0.webp" alt="7d1ff1a29599ecf097782e79c8e5fdfe.png" style="zoom:25%;" /><p>会显示不同内容的发送格式</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#  推送内容</span><br><span class="line">https://bark.gugu.ovh/Xy4ssdd2pARjLfFY/这里改成你自己的推送内容</span><br><span class="line"></span><br><span class="line"># 推送标题</span><br><span class="line">https://bark.gugu.ovh/Xy4ssdd2pARjLfFY/推送标题/这里改成你自己的推送内容</span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2023/06/26/smb7z9-0.webp" alt="53d945659fd6737f4d92e320f9168274.png" style="zoom:25%;" /><p>其中域名后面的一串字符 <code>Xy4ssdd2pARjLfFY</code> 就是用来标识设备的唯一码，别人知道这个码，然后知道你的这个域名，就可以给你推送消息了，所以注意保管好不要泄漏。</p><p>接下来你就可以用命令行、<code>API</code> 调试工具或者 <code>chrome</code>插件，来向<code>iphone</code> 发送消息</p><h3 id="Chrome"><a href="#Chrome" class="headerlink" title="Chrome"></a>Chrome</h3><p>Chrome插件：</p><img src="https://img.laoda.de/i/2023/06/26/smlz9c-0.webp" alt="1da8b329d0b6944511fa1fee3cb2890b.png" style="zoom:33%;" /><p>安装完成后，点浏览器上的插件图标，会弹出提示</p><p><img src="https://img.laoda.de/i/2023/06/26/smo92x-0.webp" alt="img"></p><p><code>Default Push Content</code> 是指缺省推送的内容，<code>Clipboard</code>是剪贴板中的内容，<code>Current page URL</code> 是当前打开网页的地址</p><p>找到下面的<code>New device push URL</code></p><img src="https://img.laoda.de/i/2023/06/26/sms193-0.webp" alt="img" style="zoom: 67%;" /><p>填入前面获取的地址，<code>https://bark.gugu.ovh/Xy4ssdd2pARjLfFY</code></p><blockquote><p>如果你有多台iPhone，<code>Alias</code> （别名）要填一下，用来区分不同的手机</p></blockquote><img src="https://img.laoda.de/i/2023/06/26/smuj1p-0.webp" alt="02e03b76ec16769b43e87e11f8b989a0.png" style="zoom: 33%;" /><p>在网页上选取内容后，右键找到 <code>Push To Device</code></p><img src="https://img.laoda.de/i/2023/06/26/smwwj4-0.webp" alt="405c404554edc2acd7d08560154265a3.png" style="zoom:33%;" /><p>手机端就会收到发送的消息</p><img src="https://img.laoda.de/i/2023/06/26/sn7970-0.webp" alt="9badcd63aeda2536be39ab6e09ab1e0a.png" style="zoom:25%;" /><h3 id="Uptim-Kuma使用实例"><a href="#Uptim-Kuma使用实例" class="headerlink" title="Uptim Kuma使用实例"></a>Uptim Kuma使用实例</h3><p>安装教程：<a href="https://iwanlab.com/uptimekuma-install/">【好玩的Docker项目】搭建一个专属自己的网站监控——Uptime Kuma</a></p><p>进入设置：</p><img src="https://img.laoda.de/i/2023/06/26/sn97tm-0.webp" alt="ff0682029b207137bf40dc0ad24817a6.png" style="zoom:33%;" /><p>选择Bark：</p><img src="https://img.laoda.de/i/2023/06/26/snb4ae-0.webp" alt="74b5be25747d23f7cf5cff9de1a6b465.png" style="zoom:33%;" /><p>接入点填写：</p><p><code>https://域名/设备ID</code></p><p>Bark群组这边记得填写英文：</p><img src="https://img.laoda.de/i/2023/06/26/sncw7j-0.webp" alt="53f2d32d9db9ab87dbbbb8e209b2071d.png" style="zoom:33%;" /><p>如果你填写了中文，需要把他转成浏览器可以识别的字符：</p><img src="https://img.laoda.de/i/2023/06/26/snf7iu-0.webp" alt="24b0ae4007dba9fed69761602b00cf93.png" style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/06/26/snhfl3-0.webp" alt="8af6535933c9ddfe753529c10952df4d.png" style="zoom:33%;" /><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">%E7%BD%91%E7%AB%99%E7%8A%B6%E6%80%81%E9%80%9A%E7%9F%A5</span><br></pre></td></tr></table></figure><p>否则会遇到<code>Request path contains unescaped characters </code>的错误</p><img src="https://img.laoda.de/i/2023/06/26/snjbyv-0.webp" alt="23c14183a9b7cde5a89a2eb6b9f7a226.png" style="zoom:33%;" /><p>测试成功，iPhone上会收到这样的信息：</p><img src="https://img.laoda.de/i/2023/06/26/snuwzc-0.webp" alt="IMG_11A65204D6F2-1.jpeg" style="zoom:25%;" /><h3 id="8-1-更新-bark"><a href="#8-1-更新-bark" class="headerlink" title="8.1 更新 bark"></a>8.1 更新 bark</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/bark</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/bark /root/data/docker_data/bark.archive  <span class="comment"># 万事先备份，以防万一</span></span><br><span class="line"></span><br><span class="line">docker-compose pull</span><br><span class="line"></span><br><span class="line">docker-compose up -d    <span class="comment"># 请不要使用 docker-compose stop 来停止容器，因为这么做需要额外的时间等待容器停止；docker-compose up -d 直接升级容器时会自动停止并立刻重建新的容器，完全没有必要浪费那些时间。</span></span><br><span class="line"></span><br><span class="line">docker image prune  <span class="comment"># prune 命令用来删除不再使用的 docker 对象。删除所有未被 tag 标记和未被容器使用的镜像</span></span><br></pre></td></tr></table></figure><p>提示：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WARNING! This will remove all dangling images.</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] </span><br></pre></td></tr></table></figure><p>输入 <code>y</code></p><p>利用 Docker 搭建的应用，更新非常容易～</p><h3 id="8-2-卸载-bark"><a href="#8-2-卸载-bark" class="headerlink" title="8.2 卸载 bark"></a>8.2 卸载 bark</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/bark</span><br><span class="line"></span><br><span class="line">docker-compose down</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/bark  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>可以卸载得很干净。</p><h2 id="9-常见问题"><a href="#9-常见问题" class="headerlink" title="9. 常见问题"></a>9. 常见问题</h2><p>参考官方FAQ：<a href="https://bark.day.app/#/faq">https://bark.day.app/#/faq</a></p><h2 id="10-结尾"><a href="#10-结尾" class="headerlink" title="10. 结尾"></a>10. 结尾</h2><p>祝大家用得开心，有问题可以去 GitHub 提 <a href="https://github.com/Finb/bark-server/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，有能力给项目做贡献的同学，也欢迎积极加入到 <a href="https://github.com/Finb/bark-server">项目</a> 中来，贡献自己的一份力量！</p><p>最后，感谢开发人员们的辛苦付出，让我们能用到这么优秀的项目！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>GitHub官方仓库：<a href="https://github.com/Finb/bark-server">https://github.com/Finb/bark-server</a></p><p>官方文档地址：<a href="https://bark.day.app/">https://bark.day.app</a></p><p>作者博客：<a href="https://day.app/2018/06/bark-server-document/">https://day.app/2018/06/bark-server-document/</a></p><p><a href="https://www.v2ex.com/t/467407">https://www.v2ex.com/t/467407</a></p><p><a href="https://day.app/2018/06/bark-server-document/">https://day.app/2018/06/bark-server-document/</a></p><p><a href="https://github.com/Finb/Bark/blob/master/README.md">https://github.com/Finb/Bark/blob/master/README.md</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-前言&quot;&gt;&lt;a href=&quot;#1-前言&quot; class=&quot;headerlink&quot; title=&quot;1.前言&quot;&gt;&lt;/a&gt;1.前言&lt;/h2&gt;&lt;p&gt;免费、简单、安全，开箱即用！&lt;/p&gt;
&lt;h2 id=&quot;2-项目展示&quot;&gt;&lt;a href=&quot;#2-项目展示&quot; class=&quot;he</summary>
      
    
    
    
    <category term="Docker系列" scheme="https://blog.laoda.de/categories/Docker%E7%B3%BB%E5%88%97/"/>
    
    
    <category term="DockerCompose" scheme="https://blog.laoda.de/tags/DockerCompose/"/>
    
    <category term="Docker部署" scheme="https://blog.laoda.de/tags/Docker%E9%83%A8%E7%BD%B2/"/>
    
    <category term="Bark" scheme="https://blog.laoda.de/tags/Bark/"/>
    
  </entry>
  
  <entry>
    <title>博客换域名+框架啦！</title>
    <link href="https://blog.laoda.de/archives/turn-to-wordpress/"/>
    <id>https://blog.laoda.de/archives/turn-to-wordpress/</id>
    <published>2023-06-19T03:36:46.165Z</published>
    <updated>2023-06-19T13:47:17.026Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://img.laoda.de/i/2023/06/19/ilixux-0.webp" alt="image-20230619112451731"></p><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><h3 id="YouTube："><a href="#YouTube：" class="headerlink" title="YouTube："></a>YouTube：</h3><p>视频地址：<a href="https://youtu.be/LM4WmyVtLjY">https://youtu.be/LM4WmyVtLjY</a></p><h3 id="哔哩哔哩"><a href="#哔哩哔哩" class="headerlink" title="哔哩哔哩"></a>哔哩哔哩</h3><p>【高清版本可以点击去吐槽到 B 站观看】：</p><p><joe-bilibili bvid="BV1Mm4y1i7tY"></joe-bilibili></p><p>为了给小伙伴们更好地体验，咕咕斥巨资购买了<a href="https://gao.ee/justnews">justnews</a>主题，博客又换回了<a href="https://iwanlab.com/">WordPress</a>了。</p><p>同时为了照顾大家的习惯，尽可能还原了之前Halo主题的风格。</p><p>Wordpress之前咕咕也和大家有过介绍——<a href="https://iwanlab.com/blog-choosing/">Hexo还是Hugo？Typecho还是WordPress？读完这篇或许你就有答案了！</a>，基本上就是相对Halo比较笨重，自定义程度更高（<del>意味着可以放更多的广告位了</del>），后续会逐步把文章搬过来，以后就在新的博客这边更新内容！</p><p>新的博客地址：<a href="https://iwanlab.com/">https://iwanlab.com/</a></p><p>因为后续考虑到会更新一些加密货币、Web3、数字移民的内容，所以咕咕给网站取名为：“<strong>爱玩实验室</strong>”，<code>iwan</code>（爱玩）+<code>lab</code>（实验室）并采用了主流的<code>com</code>域名后缀。</p><p>之后，旧的博客就不再维护更新啦，以后的内容都放在<a href="https://iwanlab.com/">爱玩实验室</a>这个新网站里</p><p>希望能和大家一直一起折腾捣鼓一些好玩儿的东西。</p><h2 id="几大更新"><a href="#几大更新" class="headerlink" title="几大更新"></a>几大更新</h2><h3 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h3><p>因为咕咕一直用的<a href="https://halo.run/">Halo</a>的<a href="https://github.com/qinhua/halo-theme-joe2.0">Joe</a>这款主题，主题作者可能工作比较忙，暂时还未适配Halo2.0，而Halo1.x 已经停止维护了，Halo1.x有一个普遍的问题就是搜索有时候可能不是很准（不过在Halo2.0以后已经有一个非常强大的搜索系统了），可能有不少小伙伴遇到过部分关键词搜索不到结果的情况，这次换新之后应该会好一些了。</p><h3 id="快讯"><a href="#快讯" class="headerlink" title="快讯"></a>快讯</h3><p>右侧栏目新增了快讯功能，会第一时间更新一些VPS到货或者是即时性比较强的信息。</p><h2 id="待完善"><a href="#待完善" class="headerlink" title="待完善"></a>待完善</h2><p>这个主题有一个缺点就是友情链接不太好整，只能显示在首页底部，之前加友链的小伙伴们比较多，全部显示出来不现实，后续尝试看看能不能搞个专门的页面来显示。</p><p>后续可能会考虑加入论坛功能。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://img.laoda.de/i/2023/06/19/ilixux-0.webp&quot; alt=&quot;image-20230619112451731&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;视频&quot;&gt;&lt;a href=&quot;#视频&quot; class=&quot;headerlink</summary>
      
    
    
    
    <category term="网站搭建" scheme="https://blog.laoda.de/categories/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="爱玩实验室" scheme="https://blog.laoda.de/tags/%E7%88%B1%E7%8E%A9%E5%AE%9E%E9%AA%8C%E5%AE%A4/"/>
    
    <category term="博客迁移" scheme="https://blog.laoda.de/tags/%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB/"/>
    
  </entry>
  
  <entry>
    <title>打开Pandora的魔盒，丝滑地使用ChatGPT！不用API，完全免费，甚至可以搭建在本地！</title>
    <link href="https://blog.laoda.de/archives/docker-compose-install-pandora/"/>
    <id>https://blog.laoda.de/archives/docker-compose-install-pandora/</id>
    <published>2023-06-11T01:17:09.323Z</published>
    <updated>2023-06-11T01:17:52.613Z</updated>
    
    <content type="html"><![CDATA[<h3 id="ChatGPT使用时可能会遇到："><a href="#ChatGPT使用时可能会遇到：" class="headerlink" title="ChatGPT使用时可能会遇到："></a>ChatGPT使用时可能会遇到：</h3><h4 id="1-Please-stand-by-while-we-are-checking-your-browser…"><a href="#1-Please-stand-by-while-we-are-checking-your-browser…" class="headerlink" title="1. Please stand by, while we are checking your browser…"></a>1. Please stand by, while we are checking your browser…</h4><p>动不动来一下，有时候还不动或者出人机验证。痛！</p><p><img src="https://img.laoda.de/i/2023/06/05/o2jy8g-0.webp"></p><h4 id="2-Access-denied-Sorry-you-have-been-blocked"><a href="#2-Access-denied-Sorry-you-have-been-blocked" class="headerlink" title="2. Access denied. Sorry, you have been blocked"></a>2. Access denied. Sorry, you have been blocked</h4><p>经典问题，只能到处找可用VPN，费时费力，更费钱。移动端访问更难。痛！</p><p><img src="https://img.laoda.de/i/2023/06/05/o2lqoj-0.webp"></p><h4 id="3-ChatGPT-is-at-capacity-right-now"><a href="#3-ChatGPT-is-at-capacity-right-now" class="headerlink" title="3. ChatGPT is at capacity right now"></a>3. ChatGPT is at capacity right now</h4><p>系统负载高，白嫖用户不给用。痛！</p><p><img src="https://img.laoda.de/i/2023/06/05/o2vnlk-0.webp"></p><h4 id="4-This-content-may-violate-our-content-policy"><a href="#4-This-content-may-violate-our-content-policy" class="headerlink" title="4. This content may violate our content policy."></a>4. This content may violate our content policy.</h4><p>道德审查，多触发几次可能就封号了。痛！！！</p><p><img src="https://img.laoda.de/i/2023/06/05/o2x813-0.webp"></p><h4 id="5-Something-went-wrong"><a href="#5-Something-went-wrong" class="headerlink" title="5. Something went wrong."></a>5. Something went wrong.</h4><p>吃着火锅唱着歌，突然就出故障了。痛！</p><p><img src="https://img.laoda.de/i/2023/06/05/o2y6df-0.webp"></p><h4 id="6-手机和电脑的模型不通用，顾这个就顾不到那个，痛！"><a href="#6-手机和电脑的模型不通用，顾这个就顾不到那个，痛！" class="headerlink" title="6. 手机和电脑的模型不通用，顾这个就顾不到那个，痛！"></a>6. 手机和电脑的模型不通用，顾这个就顾不到那个，痛！</h4><p><img src="https://img.laoda.de/i/2023/06/05/o31y0l-0.webp"></p><h4 id="7-蹦字慢吞吞，卡顿不流畅，不知道的甚至想换电脑。痛！"><a href="#7-蹦字慢吞吞，卡顿不流畅，不知道的甚至想换电脑。痛！" class="headerlink" title="7. 蹦字慢吞吞，卡顿不流畅，不知道的甚至想换电脑。痛！"></a>7. 蹦字慢吞吞，卡顿不流畅，不知道的甚至想换电脑。痛！</h4><h4 id="8-想把-ChatGPT-接到其他系统，结果只能接个差强人意的-gpt-3-5-turbo。痛！"><a href="#8-想把-ChatGPT-接到其他系统，结果只能接个差强人意的-gpt-3-5-turbo。痛！" class="headerlink" title="8. 想把 ChatGPT 接到其他系统，结果只能接个差强人意的 gpt-3.5-turbo。痛！"></a>8. 想把 <code>ChatGPT</code> 接到其他系统，结果只能接个差强人意的 <code>gpt-3.5-turbo</code>。痛！</h4><p>一次看完上面的噩梦，血压上来了，拳头硬了！太痛了！！！以上痛点，<code>Pandora</code> 一次全部解决。</p><p>咕咕在之前有介绍过<a href="https://blog.laoda.de/archives/docker-compose-install-chatgpt-next-web">【好玩儿的Docker项目】任何地方无障碍快速访问！ChatGPT Next Web——一键免费部署你的私人 ChatGPT 网页应用</a>，这个是采用调用OpenAI的API的方式来实现的无需富强使用ChatGPT的方法。（付费，需要绑定支付方式）</p><p>不过，小伙伴们如果认真对比，就会发现，同样的问题，你通过ChatGPT Next Web问和通过ChatGPT官网提问，ChatGPT Next Web似乎回答的要“笨”一些。</p><p>具体咕咕在这篇文章中也有过提及：<a href="https://blog.laoda.de/archives/chatgpt-and-openai">大白话！简单解释ChatGPT和OpenAI还有API KEYS</a> 有兴趣的可以看一下。</p><p>今天我们就是来解决这个“笨”的问题的。</p><p>我们今天直接来搭建一个和ChatGPT官网99%一样的网站，让你感受一下比直接访问ChatGPT官网还丝滑的体验。（可以完全免费使用）</p><p>PS：本项目还可以搭建在软路由上，局域网内使用！</p><p>本地搭建的话，装好docker，其他的操作步骤和下文一致。</p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p>直接丢几个图：</p><p>CLI版本界面：</p><p><img src="https://img.laoda.de/i/2023/06/05/o3jsxv-0.webp" alt="alt Screenshot5"></p><p>Web版本：</p><p><img src="https://img.laoda.de/i/2023/06/05/o3p1iz-0.webp" alt="alt Screenshot10"></p><p><img src="https://img.laoda.de/i/2023/06/05/sc27ij-0.webp" alt="8427936d974f5a3cc4f6992adb6554c8.png"></p><h2 id="3-相关地址"><a href="#3-相关地址" class="headerlink" title="3. 相关地址"></a>3. 相关地址</h2><p>GitHub官方仓库：<a href="https://github.com/pengzhile/pandora">https://github.com/pengzhile/pandora</a></p><h2 id="4-搭建环境"><a href="#4-搭建环境" class="headerlink" title="4. 搭建环境"></a>4. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器 24 元 &#x2F; 月 VPS 一台</del> 咕咕自己搭建用的是硅谷的<a href="https://loll.cc/tx">腾讯轻量应用服务器</a> ，（这次最好选 非大陆的，而且线路还不错的机器）如果是小白刚开始玩的话，也可以选择 <a href="https://gao.ee/lca">莱卡云 美国CN2 GIA</a> 的服务器，（莱卡云服务器介绍：<a href="https://blog.laoda.de/archives/vps-lcayun">点击查看</a>）或者<a href="https://blog.laoda.de/vps.html">Racknerd</a>的高性价比服务器（注意地区选美国西部城市的）</li><li>系统：Debian 11 （<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD 脚本</a> 非必需 DD，用原来的系统也 OK，之后教程都是用 Debian 或者 Ubuntu 搭建～）</li><li>安装好 Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需但建议】域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>【非必需】提前安装好宝塔面板海外版本 aapanel，并安装好 Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程选用】安装好 Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><blockquote><p>服务器要求：内存建议1G，能安装Docker即可～</p></blockquote><h2 id="5-搭建视频（晚点补一个）"><a href="#5-搭建视频（晚点补一个）" class="headerlink" title="5. 搭建视频（晚点补一个）"></a>5. 搭建视频（晚点补一个）</h2><h3 id="5-1-YouTube："><a href="#5-1-YouTube：" class="headerlink" title="5.1 YouTube："></a>5.1 YouTube：</h3><p>视频地址：</p><h3 id="5-2-哔哩哔哩"><a href="#5-2-哔哩哔哩" class="headerlink" title="5.2 哔哩哔哩"></a>5.2 哔哩哔哩</h3><p>哔哩哔哩【高清版本可以点击去吐槽到 B 站观看】：<joe-bilibili bvid=""></joe-bilibili></p><h2 id="6-搭建方式"><a href="#6-搭建方式" class="headerlink" title="6. 搭建方式"></a>6. 搭建方式</h2><p>如果你不是用的腾讯云的轻量应用服务器，可以直接跳到 6.1 部分。</p><h3 id="安装系统（腾讯云轻量应用服务器）"><a href="#安装系统（腾讯云轻量应用服务器）" class="headerlink" title="安装系统（腾讯云轻量应用服务器）"></a>安装系统（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlyhcz-2.webp" alt="e59713fba8726d3cb55ae11bca83fe3c.png"></p><p>腾讯云轻量服务器最大的特点就是 “轻量”，相比 CVM，更适合小白上手，这边我们之间选择 Docker 基础镜像，就可以省去后面安装 Docker 的步骤 <del>（如果你非要用国内的服务器，这边装的 Docker 镜像还会帮你配置好国内镜像源，让你加速访问 docker 镜像资源）</del> 不要用国内的 。</p><h3 id="登陆（腾讯云轻量应用服务器）"><a href="#登陆（腾讯云轻量应用服务器）" class="headerlink" title="登陆（腾讯云轻量应用服务器）"></a>登陆（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlzlj7-2.webp" alt="2722040ee311eb4a9ebf2a4945bf38f4.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm0gv8-2.webp" alt="c0b5d360053746c4095d592967ee401f.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm1vqw-2.webp" alt="e0ba858f021b846ad0abc27acf5008c2.png"></p><h3 id="6-1-安装-Docker-与-Nginx-Proxy-Manager"><a href="#6-1-安装-Docker-与-Nginx-Proxy-Manager" class="headerlink" title="6.1 安装 Docker 与 Nginx Proxy Manager"></a>6.1 安装 Docker 与 Nginx Proxy Manager</h3><p>可以直接参考这篇内容：</p><p><a href="https://blog.laoda.de/archives/nginxproxymanager">https://blog.laoda.de/archives/nginxproxymanager</a></p><h3 id="6-2-创建安装目录"><a href="#6-2-创建安装目录" class="headerlink" title="6.2 创建安装目录"></a>6.2 创建安装目录</h3><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/pandora</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/pandora</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="获取Access-Token"><a href="#获取Access-Token" class="headerlink" title="获取Access Token"></a>获取Access Token</h2><p>官方登录（有且仅有这一步需要魔法上网），然后访问 <a href="http://chat.openai.com/api/auth/session">这里</a> 拿 <code>Access Token</code></p><p><img src="https://img.laoda.de/i/2023/06/05/sc5kxz-0.webp" alt="0acf608e58c86a0a8624191320e75f5b.png"></p><p>这边我们不直接粘贴到yaml文件里，先保存起来，后续登录的时候我们再粘贴。</p><p>Access Token 有效期 <del>14</del> 30 天，期间访问不需要梯子。这意味着你在手机上也可随意使用。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure><p>英文输入法下，按 <code>i</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"> </span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">app:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">pengzhile/pandora</span> <span class="comment"># 不带tga的话，总是使用 latest ,更新时重新 pull 该 tag 镜像即可</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8090</span><span class="string">:8090</span>  <span class="comment"># 左边的3002可以自行修改成服务器上没有使用的端口</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">PANDORA_CLOUD:</span> <span class="string">cloud</span></span><br><span class="line">      <span class="comment"># 二选一</span></span><br><span class="line">      <span class="attr">PANDORA_SERVER:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span><span class="string">:8090</span></span><br><span class="line">      <span class="comment">#PANDORA_ACCESS_TOKEN: eyxxxx</span></span><br></pre></td></tr></table></figure><p>这边我们环境变量选择了<code>PANDORA_SERVER:</code>,当然你如果是局域网使用也可以选<code>PANDORA_ACCESS_TOKEN</code></p><p>修改好之后，注意切换成英文输入法，然后按一下 <code>esc</code>，然后 <code>:wq</code> 保存退出。</p><h3 id="6-3-打开服务器防火墙（非必需）并访问网页"><a href="#6-3-打开服务器防火墙（非必需）并访问网页" class="headerlink" title="6.3 打开服务器防火墙（非必需）并访问网页"></a>6.3 打开服务器防火墙（非必需）并访问网页</h3><p>打开防火墙的端口 <code>8090</code></p><p>举例，腾讯云打开方法如下（部分服务商没有自带的面板防火墙，就不用这步操作了）：</p><img src="https://img.laoda.de/i/2022/06/30/zlio5h-2.webp" alt="image-20220630215240864" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/06/30/10h3dqt-2.webp" alt="image-20220630220546335" style="zoom:33%;" /><p>图中示例填的是 <code>5230</code>，备注填的是 <code>memos</code>，这边我们填 <code>8090</code>，示例填 <code>pandora</code> ，确定即可（如果你在 docker-compose 文件里换了 <code>9009</code>，这边就需要填 <code>9009</code>，以此类推）</p><img src="https://img.laoda.de/i/2022/08/19/o4byqz-2.webp" alt="image-20220819145844555" style="zoom:33%;" /><p>查看端口是否被占用（以 <code>8090</code> 为例），输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:8090  <span class="comment">#查看 8090 端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果啥也没出现，表示端口未被占用，我们可以继续下面的操作了～</p><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装 lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用（被占用了就修改一下端口，比如改成 <code>8081</code>，注意 docker 命令行里和防火墙都要改）</p><p>最后：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/pandora    <span class="comment"># 来到 dockercompose 文件所在的文件夹下</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>理论上我们就可以输入 <code>http://ip:8090</code> 访问安装了。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器 IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的 IP。</p><p>2、遇到访问不了的情况，请再次检查在宝塔面板的防火墙和服务商的后台防火墙是否打开对应了端口。</p></blockquote><p>有的小伙伴可能想搭建起来分享给其他人使用，如果后续想要分享给别人，IP + 端口太不优雅了，而且这个涉及到密码的，还是非常需要做https的！会让网页更安全！</p><p> <a href="https://loll.cc/ns">namesilo</a> 上面 xyz 后缀的域名一年就 7 块钱，可以年抛。（冷知识，namesilo上 6位数字的xyz续费永远都是0.99美元 &#x3D; &#x3D;）</p><p>如果想要长期使用，还是建议买 com 后缀的域名，更加正规一些，可以输入 <code>laodade</code> 来获得 1 美元的优惠（不知道现在还有没有）</p><p><a href="https://loll.cc/ns">namesilo</a> 自带隐私保护，咕咕一直在用这家，价格也是这些注册商里面比较低的，关键是他家不像其他家域名注册商，没有七七八八的套路！（就是后台界面有些<del>丑</del> 古老 &#x3D; &#x3D;）</p><p><a href="https://blog.laoda.de/archives/namesilo">【域名购买】Namesilo 优惠码和域名解析教程（附带服务器购买推荐和注意事项）</a></p><p>我们接着往下看！</p><h2 id="7-反向代理"><a href="#7-反向代理" class="headerlink" title="7. 反向代理"></a>7. 反向代理</h2><p>我们要用域名而不是IP+端口的方式来访问我们的服务！</p><h3 id="7-1-利用-Nginx-Proxy-Manager"><a href="#7-1-利用-Nginx-Proxy-Manager" class="headerlink" title="7.1 利用 Nginx Proxy Manager"></a>7.1 利用 Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p><img src="https://img.laoda.de/i/2022/10/16/n6t02e-2.webp" alt="image-20221016140213282"></p><p>之后，登陆 Nginx Proxy Manager（不会的看这个：<strong>安装 Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称 NPM）会用到 <code>80</code>、<code>443</code> 端口，所以本机不能占用（比如原来就有 Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom: 33%;" /><img src="https://img.laoda.de/i/2023/05/27/lvep5w-0.webp" alt="image-20230527132253249" style="zoom:50%;" /><blockquote><p> 注意填写对应的 <code>域名</code>、<code>IP</code> 和 <code>端口</code>，按文章来的话，应该是 <code>8090</code></p></blockquote><p><strong>IP 填写：</strong></p><p>如果 Nginx Proxy Manager 和 pandora 在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的 Docker 容器内部 IP。</p><img src="https://img.laoda.de/i/2022/09/29/pcdnz5-2.webp" style="zoom:50%;" /><p>否则直接填 <code>pandora</code> 所在的服务器 IP 就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom: 33%;" /><p>再次打开，勾选这些：</p><img src="https://img.laoda.de/i/2022/10/16/n7nn6e-2.webp" alt="image-20221016140356324" style="zoom:50%;" /><p>然后就可以用域名来安装访问了。</p><h3 id="7-2-利用宝塔面板"><a href="#7-2-利用宝塔面板" class="headerlink" title="7.2 利用宝塔面板"></a>7.2 利用宝塔面板</h3><p>发现还是有不少小伙伴习惯用宝塔面板，这边也贴一个宝塔面板的反代配置：</p><p>直接新建一个站点，不要数据库，不要 php，纯静态即可。</p><p>然后打开下面的配置，修改 Nginx 的配置。</p><img src="https://img.laoda.de/i/2022/08/19/ov4xrt-2.webp" alt="image-20220819150345725" style="zoom:50%;" /><img src="https://img.laoda.de/i/2022/08/19/owbbkb-2.webp" alt="image-20220819150542867" style="zoom:50%;" /><p>代码如下：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:8090/;       <span class="comment"># 注意改成你实际使用的端口</span></span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此方法对 90% 的反向代理都能生效，然后就可以用域名来安装访问了。</p><p>有同学可能会问，为什么不直接用宝塔自带的反向代理功能。</p><img src="https://img.laoda.de/i/2022/08/19/oxf800-2.webp" alt="image-20220819150730128" style="zoom:50%;" /><p>也可以，不过咕咕自己之前遇到过当有多个网站需要反代的时候，在这边设置会报错的情况 &#x3D; &#x3D; </p><p>所以后来就不用了，直接用上面的方法来操作了。</p><h2 id="8-使用教程"><a href="#8-使用教程" class="headerlink" title="8. 使用教程"></a>8. 使用教程</h2><p>输入IP+端口或者是域名之后，</p><p><img src="https://img.laoda.de/i/2023/06/05/sci877-0.webp" alt="23a3ea1fdfe6197db3158800b4b6df84.png"></p><p>点击<code>Continue with Access Token</code>，然后输入我们前面获取的<code>Access Token</code>就可以开始愉快使用啦！</p><h3 id="8-1-更新-pandora"><a href="#8-1-更新-pandora" class="headerlink" title="8.1 更新 pandora"></a>8.1 更新 pandora</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/pandora</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/pandora /root/data/docker_data/pandora.archive  <span class="comment"># 万事先备份，以防万一</span></span><br><span class="line"></span><br><span class="line">docker-compose pull</span><br><span class="line"></span><br><span class="line">docker-compose up -d    <span class="comment"># 请不要使用 docker-compose stop 来停止容器，因为这么做需要额外的时间等待容器停止；docker-compose up -d 直接升级容器时会自动停止并立刻重建新的容器，完全没有必要浪费那些时间。</span></span><br><span class="line"></span><br><span class="line">docker image prune  <span class="comment"># prune 命令用来删除不再使用的 docker 对象。删除所有未被 tag 标记和未被容器使用的镜像</span></span><br></pre></td></tr></table></figure><p>提示：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WARNING! This will remove all dangling images.</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] </span><br></pre></td></tr></table></figure><p>输入 <code>y</code></p><p>利用 Docker 搭建的应用，更新非常容易～</p><h3 id="8-2-卸载-pandora"><a href="#8-2-卸载-pandora" class="headerlink" title="8.2 卸载 pandora"></a>8.2 卸载 pandora</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/pandora</span><br><span class="line"></span><br><span class="line">docker-compose down</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/pandora  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>可以卸载得很干净。</p><h2 id="9-注意事项"><a href="#9-注意事项" class="headerlink" title="9. 注意事项"></a>9. 注意事项</h2><ul><li>这项目代理部分是闭源的，绑了信用卡或者对隐私要求高的需要考虑一下</li><li>开源项目可以魔改，但请保留原作者信息。确需去除，请联系作者，以免失去技术支持。</li><li>因为之后<code>ChatGPT</code>的API变动，作者可能不会跟进修复。</li></ul><h2 id="10-结尾"><a href="#10-结尾" class="headerlink" title="10. 结尾"></a>10. 结尾</h2><p>祝大家用得开心，有问题可以去 GitHub 提 <a href="https://github.com/pengzhile/pandora/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，有能力给项目做贡献的同学，也欢迎积极加入到 <a href="https://github.com/pengzhile/pandora">项目</a> 中来，贡献自己的一份力量！</p><p>最后，感谢开发人员们的辛苦付出，让我们能用到这么优秀的项目！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>GitHub仓库：<a href="https://github.com/pengzhile/pandora">https://github.com/pengzhile/pandora</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;ChatGPT使用时可能会遇到：&quot;&gt;&lt;a href=&quot;#ChatGPT使用时可能会遇到：&quot; class=&quot;headerlink&quot; title=&quot;ChatGPT使用时可能会遇到：&quot;&gt;&lt;/a&gt;ChatGPT使用时可能会遇到：&lt;/h3&gt;&lt;h4 id=&quot;1-Please-</summary>
      
    
    
    
    <category term="Docker系列" scheme="https://blog.laoda.de/categories/Docker%E7%B3%BB%E5%88%97/"/>
    
    
    <category term="ChatGPT" scheme="https://blog.laoda.de/tags/ChatGPT/"/>
    
    <category term="OpenAI" scheme="https://blog.laoda.de/tags/OpenAI/"/>
    
  </entry>
  
  <entry>
    <title>利用Docker搭建独角数卡的USDT支付方式，轻松收取加密货币！｜好玩儿的Docker项目</title>
    <link href="https://blog.laoda.de/archives/docker-compose-install-epusdt/"/>
    <id>https://blog.laoda.de/archives/docker-compose-install-epusdt/</id>
    <published>2023-05-29T13:48:17.430Z</published>
    <updated>2023-05-29T13:48:19.551Z</updated>
    
    <content type="html"><![CDATA[<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p>邮件smtp的配置忘记讲了，大家可以到谷歌搜索一下应该有很多教程，关键词“smtp配置”</p><h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><p>继上一篇<a href="https://blog.laoda.de/archives/docker-compose-install-dujiaoka">利用Docker轻松搭建独角发卡！人人都可以开一个线上小店｜好玩儿的Docker项目</a>之后，我们今天来为我们的小店搭建一个USDT的付款方式。（支付宝当面付也可以搭建，用门头照，不过之前有个梗——“当面付当面抓”；第三方支付也可以搭建，但是咕咕没什么经验，里面手续费有的抽成很高，故这俩都不再展开，有兴趣的自行谷歌搜索）</p><p>搭建方式首发于<a href="https://www.ioiox.com/archives/167.html">Stille大佬</a></p><p>咕咕这边附自己的实操记录，补充一些细节部分。</p><p><img src="https://img.laoda.de/i/2023/05/29/u81tv0-0.webp" alt="2fdbd82cb67713a57fc4f6f3c46d255d.png"></p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><img src="https://img.laoda.de/i/2023/05/29/u8d1x6-0.webp" alt="3272e7b023b72356ccf3451105e63bc4.png" style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/05/29/u8esvt-0.webp" alt="190d22480fa75637480428044b863aad.png" style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/05/29/u8gacv-0.webp" alt="b73c19b402e63a45f52be419463429ac.png" style="zoom:33%;" /><h2 id="3-相关地址"><a href="#3-相关地址" class="headerlink" title="3. 相关地址"></a>3. 相关地址</h2><p>咕咕的Demo：<a href="https://shop.gugu.ee/">https://shop.gugu.ee</a></p><p>GitHub官方仓库：<a href="https://github.com/assimon/epusdt">https://github.com/assimon/epusdt</a></p><p>此次用到的GitHub仓库：<a href="https://github.com/stilleshan/dockerfiles/tree/main/epusdt">https://github.com/stilleshan/dockerfiles/tree/main/epusdt</a></p><h2 id="4-搭建环境"><a href="#4-搭建环境" class="headerlink" title="4. 搭建环境"></a>4. 搭建环境</h2><ul><li>服务器：咕咕自己搭建用的是<a href="https://blog.laoda.de/vps.html">Racknerd</a>的高性价比服务器（注意地区选美国西部城市的）这个涉及支付和加密货币，不建议用国内的服务器</li><li>系统：Debian 11 （<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD 脚本</a> 非必需 DD，用原来的系统也 OK，之后教程都是用 Debian 或者 Ubuntu 搭建～）</li><li>安装好 Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需但建议】域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>【非必需】提前安装好宝塔面板海外版本 aapanel，并安装好 Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程选用】安装好 Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li><li>一个telegram号<blockquote><p>服务器要求：内存建议1G，能安装Docker即可～</p></blockquote></li></ul><h2 id="5-搭建视频"><a href="#5-搭建视频" class="headerlink" title="5. 搭建视频"></a>5. 搭建视频</h2><h3 id="5-1-YouTube："><a href="#5-1-YouTube：" class="headerlink" title="5.1 YouTube："></a>5.1 YouTube：</h3><p>视频地址：<a href="https://youtu.be/QeKk5O-B2DQ">https://youtu.be/QeKk5O-B2DQ</a></p><h2 id="6-搭建方式"><a href="#6-搭建方式" class="headerlink" title="6. 搭建方式"></a>6. 搭建方式</h2><h3 id="6-1-安装-Docker-与-Nginx-Proxy-Manager"><a href="#6-1-安装-Docker-与-Nginx-Proxy-Manager" class="headerlink" title="6.1 安装 Docker 与 Nginx Proxy Manager"></a>6.1 安装 Docker 与 Nginx Proxy Manager</h3><p>可以直接参考这篇内容：</p><p><a href="https://blog.laoda.de/archives/nginxproxymanager">https://blog.laoda.de/archives/nginxproxymanager</a></p><h3 id="6-2-新建telegram机器人并获取token"><a href="#6-2-新建telegram机器人并获取token" class="headerlink" title="6.2 新建telegram机器人并获取token"></a>6.2 新建telegram机器人并获取token</h3><img src="https://img.laoda.de/i/2023/05/29/u8nsrh-0.webp" alt="d724b2a0ee43b9093a9cc1f6e20793f4.png" style="zoom:33%;" /><p>搜索<code>BotFather</code> 注意有很多假冒的，别弄错了</p><img src="https://img.laoda.de/i/2023/05/29/u8yirv-0.webp" alt="18cf40c8db0a5715a4629d08e7cfb909.png" style="zoom:33%;" /><p><code>/newbot</code> 一步一步按照提示创建即可</p><img src="https://img.laoda.de/i/2023/05/29/u9mces-0.webp" alt="826c0c730672266a6780c31d978b048f.png" style="zoom:33%;" /><p>创建成功之后，这边就会获得一个API的token，类似：<code>6247111111:Asdajkdaksdhkajshi6aUa6pXH4Rxc</code></p><h3 id="6-3-获取telegram-id"><a href="#6-3-获取telegram-id" class="headerlink" title="6.3 获取telegram id"></a>6.3 获取telegram id</h3><p>搜索：<code>https://t.me/getmyid_bot</code></p><img src="https://img.laoda.de/i/2023/05/29/u9o4d3-0.webp" alt="979c7ad1a8834b4607d8a85147acb4f0.png" style="zoom:33%;" /><p>得到你的user ID，类似：<code>980888097</code></p><h3 id="6-4-创建安装目录"><a href="#6-4-创建安装目录" class="headerlink" title="6.4 创建安装目录"></a>6.4 创建安装目录</h3><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/epusdt</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/epusdt</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这边我们直接用 docker 的方式安装。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure><p>英文输入法下，按 <code>i</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">db:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mariadb:focal</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_ROOT_PASSWORD=changeyourpassword</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_DATABASE=epusdt</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_USER=epusdt</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_PASSWORD=changeyourpassword</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./mysql:/var/lib/mysql</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis:alpine</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./redis:/data</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">epusdt:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">stilleshan/epusdt</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./epusdt.conf:/app/.env</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8000</span><span class="string">:8000</span></span><br></pre></td></tr></table></figure><ul><li>修改<code>MYSQL_ROOT_PASSWORD</code>数据库<code>root</code>密码</li><li>修改<code>MYSQL_PASSWORD</code>数据库用户密码</li><li>用户名和数据库名不用修改</li><li>如服务器<code>8000</code>端口可能被占用,需修改epusdt映射端口,例如<code>58000:8000</code></li></ul><p>修改好之后，注意切换成英文输入法，然后按一下 <code>esc</code>，然后 <code>:wq</code> 保存退出。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim epusdt.conf</span><br></pre></td></tr></table></figure><p>输入：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">app_name=epusdt</span><br><span class="line">#下面配置你的域名，收银台会需要</span><br><span class="line">app_uri=https://你的域名</span><br><span class="line">#是否开启debug，默认false</span><br><span class="line">app_debug=false</span><br><span class="line">#http服务监听端口</span><br><span class="line">http_listen=:8000</span><br><span class="line"></span><br><span class="line">#静态资源文件目录</span><br><span class="line">static_path=/static</span><br><span class="line">#缓存路径</span><br><span class="line">runtime_root_path=/runtime</span><br><span class="line"></span><br><span class="line">#日志配置</span><br><span class="line">log_save_path=/logs</span><br><span class="line">log_max_size=32</span><br><span class="line">log_max_age=7</span><br><span class="line">max_backups=3</span><br><span class="line"></span><br><span class="line"># mysql配置</span><br><span class="line">mysql_host=db</span><br><span class="line">mysql_port=3306</span><br><span class="line">mysql_user=epusdt</span><br><span class="line">mysql_passwd=changeyourpassword</span><br><span class="line"># 请修改 epusdt 数据库密码</span><br><span class="line">mysql_database=epusdt</span><br><span class="line">mysql_table_prefix=</span><br><span class="line">mysql_max_idle_conns=10</span><br><span class="line">mysql_max_open_conns=100</span><br><span class="line">mysql_max_life_time=6</span><br><span class="line"></span><br><span class="line"># redis配置</span><br><span class="line">redis_host=redis</span><br><span class="line">redis_port=6379</span><br><span class="line">redis_passwd=</span><br><span class="line">redis_db=5</span><br><span class="line">redis_pool_size=5</span><br><span class="line">redis_max_retries=3</span><br><span class="line">redis_idle_timeout=1000</span><br><span class="line"></span><br><span class="line"># 消息队列配置</span><br><span class="line">queue_concurrency=10</span><br><span class="line">queue_level_critical=6</span><br><span class="line">queue_level_default=3</span><br><span class="line">queue_level_low=1</span><br><span class="line"></span><br><span class="line">#机器人Apitoken</span><br><span class="line">tg_bot_token=你的tg机器人token</span><br><span class="line">#telegram代理url(大陆地区服务器可使用一台国外服务器做反代tg的url)，如果运行的本来就是境外服务器，则无需填写</span><br><span class="line">tg_proxy=</span><br><span class="line">#管理员userid</span><br><span class="line">tg_manage=你的tgid</span><br><span class="line"></span><br><span class="line">#api接口认证token</span><br><span class="line">api_auth_token=changeyourpassword</span><br><span class="line"></span><br><span class="line">#订单过期时间(单位分钟)</span><br><span class="line">order_expiration_time=10</span><br><span class="line"></span><br><span class="line">#强制汇率(设置此参数后每笔交易将按照此汇率计算，例如:6.4)</span><br><span class="line">forced_usdt_rate=</span><br></pre></td></tr></table></figure><p>注意：</p><ul><li>修改第 3 行<code>app_uri</code>为上文为<code>epusdt</code>准备的独立域名</li><li>修改第 24 行<code>mysql_passwd</code>为上节<code>MYSQL_PASSWORD</code>的<strong>用户密码</strong><code>(注意:非 root 密码)</code></li><li>修改第 55 行<code>api_auth_token=123qweASD</code>创建一个密码用于<code>dujiaoka 支付设置</code>中使用</li><li>注意:因为本项目是独立部署到 docker compose 内,所以第 21,33 行已经修改为<code>db</code>,<code>redis</code>,<code>不能使用 127.0.0.1</code>.</li><li>修改第 48 行<code>tg_bot_token=</code>为上文创建的 Telegram Bot 的<code>Token</code></li><li>修改第 52 行<code>tg_manage=</code>为上文创建的 Telegram Bot 的<code>ID</code></li></ul><p>修改好之后，注意切换成英文输入法，然后按一下 <code>esc</code>，然后 <code>:wq</code> 保存退出。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim epusdt.sql</span><br></pre></td></tr></table></figure><p>输入：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- auto-generated definition</span><br><span class="line">create table orders</span><br><span class="line">(</span><br><span class="line">    id                   int auto_increment</span><br><span class="line">        primary key,</span><br><span class="line">    trade_id             varchar(32)    not null comment &#x27;epusdt订单号&#x27;,</span><br><span class="line">    order_id             varchar(32)    not null comment &#x27;客户交易id&#x27;,</span><br><span class="line">    block_transaction_id varchar(128)   null comment &#x27;区块唯一编号&#x27;,</span><br><span class="line">    actual_amount        decimal(19, 4) not null comment &#x27;订单实际需要支付的金额，保留4位小数&#x27;,</span><br><span class="line">    amount               decimal(19, 4) not null comment &#x27;订单金额，保留4位小数&#x27;,</span><br><span class="line">    token                varchar(50)    not null comment &#x27;所属钱包地址&#x27;,</span><br><span class="line">    status               int default 1  not null comment &#x27;1：等待支付，2：支付成功，3：已过期&#x27;,</span><br><span class="line">    notify_url           varchar(128)   not null comment &#x27;异步回调地址&#x27;,</span><br><span class="line">    redirect_url         varchar(128)   null comment &#x27;同步回调地址&#x27;,</span><br><span class="line">    callback_num         int default 0  null comment &#x27;回调次数&#x27;,</span><br><span class="line">    callback_confirm     int default 2  null comment &#x27;回调是否已确认？ 1是 2否&#x27;,</span><br><span class="line">    created_at           timestamp      null,</span><br><span class="line">    updated_at           timestamp      null,</span><br><span class="line">    deleted_at           timestamp      null,</span><br><span class="line">    constraint orders_order_id_uindex</span><br><span class="line">        unique (order_id),</span><br><span class="line">    constraint orders_trade_id_uindex</span><br><span class="line">        unique (trade_id)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">create index orders_block_transaction_id_index</span><br><span class="line">    on orders (block_transaction_id);</span><br><span class="line"></span><br><span class="line">-- auto-generated definition</span><br><span class="line">create table wallet_address</span><br><span class="line">(</span><br><span class="line">    id         int auto_increment</span><br><span class="line">        primary key,</span><br><span class="line">    token      varchar(50)   not null comment &#x27;钱包token&#x27;,</span><br><span class="line">    status     int default 1 not null comment &#x27;1:启用 2:禁用&#x27;,</span><br><span class="line">    created_at timestamp     null,</span><br><span class="line">    updated_at timestamp     null,</span><br><span class="line">    deleted_at timestamp     null</span><br><span class="line">)</span><br><span class="line">    comment &#x27;钱包表&#x27;;</span><br><span class="line"></span><br><span class="line">create index wallet_address_token_index</span><br><span class="line">    on wallet_address (token);</span><br></pre></td></tr></table></figure><p>不用修改，直接切换成英文输入法，然后按一下 <code>esc</code>，然后 <code>:wq</code> 保存退出。</p><h3 id="6-3-打开服务器防火墙（非必需）并访问网页"><a href="#6-3-打开服务器防火墙（非必需）并访问网页" class="headerlink" title="6.3 打开服务器防火墙（非必需）并访问网页"></a>6.3 打开服务器防火墙（非必需）并访问网页</h3><p>打开防火墙的端口 <code>8090</code></p><p>举例，腾讯云打开方法如下（部分服务商没有自带的面板防火墙，就不用这步操作了）：</p><img src="https://img.laoda.de/i/2022/06/30/zlio5h-2.webp" alt="image-20220630215240864" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/06/30/10h3dqt-2.webp" alt="image-20220630220546335" style="zoom:33%;" /><p>图中示例填的是 <code>5230</code>，备注填的是 <code>memos</code>，这边我们填 <code>8090</code>，示例填 <code>epusdt</code> ，确定即可（如果你在 docker-compose 文件里换了 <code>9009</code>，这边就需要填 <code>9009</code>，以此类推）</p><img src="https://img.laoda.de/i/2022/08/19/o4byqz-2.webp" alt="image-20220819145844555" style="zoom:33%;" /><p>查看端口是否被占用（以 <code>8090</code> 为例），输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:8090  <span class="comment">#查看 8090 端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果啥也没出现，表示端口未被占用，我们可以继续下面的操作了～</p><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装 lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用（被占用了就修改一下端口，比如改成 <code>8081</code>，注意 docker 命令行里和防火墙都要改）</p><p>最后：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/epusdt    <span class="comment"># 来到 dockercompose 文件所在的文件夹下</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><h3 id="6-6-初始化数据库"><a href="#6-6-初始化数据库" class="headerlink" title="6.6 初始化数据库"></a>6.6 初始化数据库</h3><p>将下述命令中的<code>-pCHANGE_YOUR_PASSWORD</code>的密码改为上述设置的新密码,注意需要保留前缀<code>-p</code>,例如上文修改密码<code>MYSQL_PASSWORD=aaabbbccc</code>,此处则为<code>-paaabbbccc</code>.</p><p>如下图执行后无任何显示代表成功,否则将会报错.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -i epusdt-db-1 sh -c <span class="string">&#x27;exec mysql -uepusdt -pCHANGE_YOUR_PASSWORD epusdt&#x27;</span> &lt; epusdt.sql</span><br></pre></td></tr></table></figure><h3 id="6-7-重启服务"><a href="#6-7-重启服务" class="headerlink" title="6.7 重启服务"></a>6.7 重启服务</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose down</span><br><span class="line">docker-compose up -d</span><br><span class="line"><span class="comment"># 或 restart 重启</span></span><br><span class="line">docker-compose restart</span><br></pre></td></tr></table></figure><h3 id="6-8-检查服务"><a href="#6-8-检查服务" class="headerlink" title="6.8 检查服务"></a>6.8 检查服务</h3><p>查看<code>epusdt</code>服务,如下图所示<code>http server started on [::]:8000</code>则表示成功.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker logs -f 你的容器<span class="built_in">id</span></span><br></pre></td></tr></table></figure><p>通过docker ps 可以查看到容器id</p><p><img src="https://img.laoda.de/i/2023/05/29/u9t99y-0.webp" alt="13835bd2f7c08e284127581808a5d544.png"></p><p>咕咕这边就是：<code>usdt_epusdt_1</code></p><p>所以：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker logs -f usdt_epusdt_1</span><br></pre></td></tr></table></figure><p>理论上我们就可以输入 <code>http://ip:8090</code> 访问安装了，但是我们这边先做反代。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器 IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的 IP。</p><p>2、遇到访问不了的情况，请再次检查在宝塔面板的防火墙和服务商的后台防火墙是否打开对应了端口。</p></blockquote><p>这个涉及到钱的，还是非常需要做https的！会让网页更安全！</p><p> <a href="https://loll.cc/ns">namesilo</a> 上面 xyz 后缀的域名一年就 7 块钱，可以年抛。（冷知识，namesilo上 6位数字的xyz续费永远都是0.99美元 &#x3D; &#x3D;）</p><p>如果想要长期使用，还是建议买 com 后缀的域名，更加正规一些，可以输入 <code>laodade</code> 来获得 1 美元的优惠（不知道现在还有没有）</p><p><a href="https://loll.cc/ns">namesilo</a> 自带隐私保护，咕咕一直在用这家，价格也是这些注册商里面比较低的，关键是他家不像其他家域名注册商，没有七七八八的套路！（就是后台界面有些<del>丑</del> 古老 &#x3D; &#x3D;）</p><p><a href="https://blog.laoda.de/archives/namesilo">【域名购买】Namesilo 优惠码和域名解析教程（附带服务器购买推荐和注意事项）</a></p><p>我们接着往下看！</p><h3 id="6-4-更新-epusdt"><a href="#6-4-更新-epusdt" class="headerlink" title="6.4 更新 epusdt"></a>6.4 更新 epusdt</h3><p>插一个更新和卸载的方法，docker搭建通用。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/epusdt</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/epusdt /root/data/docker_data/epusdt.archive  <span class="comment"># 万事先备份，以防万一</span></span><br><span class="line"></span><br><span class="line">docker-compose pull</span><br><span class="line"></span><br><span class="line">docker-compose up -d    <span class="comment"># 请不要使用 docker-compose stop 来停止容器，因为这么做需要额外的时间等待容器停止；docker-compose up -d 直接升级容器时会自动停止并立刻重建新的容器，完全没有必要浪费那些时间。</span></span><br><span class="line"></span><br><span class="line">docker image prune  <span class="comment"># prune 命令用来删除不再使用的 docker 对象。删除所有未被 tag 标记和未被容器使用的镜像</span></span><br></pre></td></tr></table></figure><p>提示：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WARNING! This will remove all dangling images.</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] </span><br></pre></td></tr></table></figure><p>输入 <code>y</code></p><p>利用 Docker 搭建的应用，更新非常容易～</p><h3 id="6-5-卸载-epusdt"><a href="#6-5-卸载-epusdt" class="headerlink" title="6.5 卸载 epusdt"></a>6.5 卸载 epusdt</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/epusdt</span><br><span class="line"></span><br><span class="line">docker-compose down</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/epusdt  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>可以卸载得很干净。</p><h2 id="7-反向代理"><a href="#7-反向代理" class="headerlink" title="7. 反向代理"></a>7. 反向代理</h2><p>我们要用域名而不是IP+端口的方式来访问我们的服务！</p><h3 id="7-1-利用-Nginx-Proxy-Manager"><a href="#7-1-利用-Nginx-Proxy-Manager" class="headerlink" title="7.1 利用 Nginx Proxy Manager"></a>7.1 利用 Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p><img src="https://img.laoda.de/i/2022/10/16/n6t02e-2.webp" alt="image-20221016140213282"></p><p>之后，登陆 Nginx Proxy Manager（不会的看这个：<strong>安装 Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称 NPM）会用到 <code>80</code>、<code>443</code> 端口，所以本机不能占用（比如原来就有 Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom: 33%;" /><img src="https://img.laoda.de/i/2023/05/29/udf30a-0.webp" alt="image-20230529183650557" style="zoom:33%;" /><blockquote><p> 注意填写对应的 <code>域名</code>、<code>IP</code> 和 <code>端口</code>，按文章来的话，应该是 <code>8090</code></p></blockquote><p><strong>IP 填写：</strong></p><p>如果 Nginx Proxy Manager 和 epusdt 在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的 Docker 容器内部 IP。</p><img src="https://img.laoda.de/i/2022/09/29/pcdnz5-2.webp" style="zoom:33%;" /><p>否则直接填 <code>epusdt</code> 所在的服务器 IP 就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom: 33%;" /><p>再次打开，勾选这些：</p><img src="https://img.laoda.de/i/2022/10/16/n7nn6e-2.webp" alt="image-20221016140356324" style="zoom:33%;" /><p>然后就可以用域名来安装访问了。</p><p>访问域名显示<code>hello epusdt, https://github.com/assimon/epusdt</code>表示成功。</p><img src="https://img.laoda.de/i/2023/05/29/udytv6-0.webp" alt="image-20230529183743600" style="zoom:33%;" /><h3 id="7-2-利用宝塔面板"><a href="#7-2-利用宝塔面板" class="headerlink" title="7.2 利用宝塔面板"></a>7.2 利用宝塔面板</h3><p>发现还是有不少小伙伴习惯用宝塔面板，这边也贴一个宝塔面板的反代配置：</p><p>直接新建一个站点，不要数据库，不要 php，纯静态即可。</p><p>然后打开下面的配置，修改 Nginx 的配置。</p><img src="https://img.laoda.de/i/2022/08/19/ov4xrt-2.webp" alt="image-20220819150345725" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/08/19/owbbkb-2.webp" alt="image-20220819150542867" style="zoom:33%;" /><p>代码如下：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:8090/;       <span class="comment"># 注意改成你实际使用的端口</span></span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此方法对 90% 的反向代理都能生效，然后就可以用域名来安装访问了。</p><p>有同学可能会问，为什么不直接用宝塔自带的反向代理功能。</p><img src="https://img.laoda.de/i/2022/08/19/oxf800-2.webp" alt="image-20220819150730128" style="zoom:33%;" /><p>也可以，不过咕咕自己之前遇到过当有多个网站需要反代的时候，在这边设置会报错的情况 &#x3D; &#x3D; </p><p>所以后来就不用了，直接用上面的方法来操作了。</p><h2 id="8-使用教程"><a href="#8-使用教程" class="headerlink" title="8. 使用教程"></a>8. 使用教程</h2><h3 id="8-1-配置支付-dujiaoka"><a href="#8-1-配置支付-dujiaoka" class="headerlink" title="8.1 配置支付 - dujiaoka"></a>8.1 配置支付 - dujiaoka</h3><h4 id="登录-dujiaoka-后台-配置-支付配置"><a href="#登录-dujiaoka-后台-配置-支付配置" class="headerlink" title="登录 dujiaoka 后台 - 配置 - 支付配置"></a>登录 dujiaoka 后台 - 配置 - 支付配置</h4><p>最下面开启<code>epusdt</code>,并点击编辑.<br>注意:dujiaoka 2.0.5 版本及以上才默认支持<code>epusdt</code>,其他版本请自行升级或者手动安装插件.<br><img src="https://img.laoda.de/i/2023/05/29/ufhyvy-0.webp" alt="image-20230529183959619"></p><h4 id="修改参数"><a href="#修改参数" class="headerlink" title="修改参数"></a>修改参数</h4><ul><li>商户ID修改为上述创建的密码<code>changeyourpassword</code></li><li>商户密钥填写API地址<code>https://上文准备的usdt域名.com/api/v1/order/create-transaction</code> 比如咕咕这边就是：<code>https://testusdt.gugu.ovh/api/v1/order/create-transaction</code></li></ul><p><img src="https://img.laoda.de/i/2023/05/29/ug9qoz-0.webp" alt="image-20230529184130322"></p><h4 id="设置-usdt-收款地址"><a href="#设置-usdt-收款地址" class="headerlink" title="设置 usdt 收款地址"></a>设置 usdt 收款地址</h4><p>先点击机器人，</p><img src="https://img.laoda.de/i/2023/05/29/uaafap-0.webp" alt="dbe73336a273ccecfba4cb5bb7820590.png" style="zoom:33%;" /><p>再创建<code>usdt</code>收款地址则完成所有部署。</p><img src="https://img.laoda.de/i/2023/05/29/uaclb6-0.webp" alt="7f6416593f82007ce4ba65aa88be0812.png" style="zoom:33%;" /><p>可以自己测试一下。</p><h2 id="9-结尾"><a href="#9-结尾" class="headerlink" title="9. 结尾"></a>9. 结尾</h2><p>祝大家用得开心，有问题可以去 GitHub 提 <a href="https://github.com/assimon/epusdt/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，有能力给项目做贡献的同学，也欢迎积极加入到 <a href="https://github.com/assimon/epusdt">项目</a> 中来，贡献自己的一份力量！</p><p>最后，感谢开发人员们的辛苦付出，让我们能用到这么优秀的项目！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>GitHub仓库：<a href="https://github.com/assimon/epusdt">https://github.com/assimon/epusdt</a><br>用到的Stille大佬镜像：<a href="https://github.com/stilleshan/dockerfiles/tree/main/epusdt">https://github.com/stilleshan/dockerfiles/tree/main/epusdt</a><br>Stille大佬博客：<a href="https://www.ioiox.com/archives/167.html">https://www.ioiox.com/archives/167.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;更新&quot;&gt;&lt;a href=&quot;#更新&quot; class=&quot;headerlink&quot; title=&quot;更新&quot;&gt;&lt;/a&gt;更新&lt;/h2&gt;&lt;p&gt;邮件smtp的配置忘记讲了，大家可以到谷歌搜索一下应该有很多教程，关键词“smtp配置”&lt;/p&gt;
&lt;h2 id=&quot;1-前言&quot;&gt;&lt;a href</summary>
      
    
    
    
    <category term="Docker系列" scheme="https://blog.laoda.de/categories/Docker%E7%B3%BB%E5%88%97/"/>
    
    
    <category term="USDT" scheme="https://blog.laoda.de/tags/USDT/"/>
    
    <category term="独角发卡" scheme="https://blog.laoda.de/tags/%E7%8B%AC%E8%A7%92%E5%8F%91%E5%8D%A1/"/>
    
    <category term="个人商店" scheme="https://blog.laoda.de/tags/%E4%B8%AA%E4%BA%BA%E5%95%86%E5%BA%97/"/>
    
  </entry>
  
  <entry>
    <title>利用Docker轻松搭建独角发卡！人人都可以开一个线上小店｜好玩儿的Docker项目</title>
    <link href="https://blog.laoda.de/archives/docker-compose-install-dujiaoka/"/>
    <id>https://blog.laoda.de/archives/docker-compose-install-dujiaoka/</id>
    <published>2023-05-27T10:14:45.930Z</published>
    <updated>2023-05-27T10:14:47.891Z</updated>
    
    <content type="html"><![CDATA[<p>今天来和大家分享10分钟搭建一个发卡网站（发卡自动售货系统），人人都可以开一个自己的小店！</p><p><img src="https://img.laoda.de/i/2023/05/27/ltjwxy-0.webp" alt="2fdbd82cb67713a57fc4f6f3c46d255d.png"></p><h2 id="1-独角数卡简单介绍"><a href="#1-独角数卡简单介绍" class="headerlink" title="1. 独角数卡简单介绍"></a>1. 独角数卡简单介绍</h2><h3 id="系统优势"><a href="#系统优势" class="headerlink" title="系统优势"></a>系统优势</h3><ul><li>采用业界流行的laravel框架，安全及稳定性提升。</li><li>支持自定义前端模板功能</li><li>支持国际化多语言包（需自行翻译）</li><li>代码全部开源，所有扩展包采用composer加载，代码所有内容可溯源！</li><li>长期技术更新支持！</li></ul><h3 id="支付接口已集成"><a href="#支付接口已集成" class="headerlink" title="支付接口已集成"></a>支付接口已集成</h3><ul><li>支付宝当面付</li><li>支付宝PC支付</li><li>支付宝手机支付</li><li>payjs微信扫码.</li><li>Paysapi(支付宝&#x2F;微信).</li><li>码支付(QQ&#x2F;支付宝&#x2F;微信)</li><li>微信企业扫码支付</li><li>Paypal支付(默认美元)</li><li>V免签支付</li><li>全网易支付支持(通用彩虹版)</li><li>stripe</li></ul><p>附上GitHub上的免责声明：</p><ul><li>独角数卡程序是免费开源的产品，仅用于学习交流使用！</li><li>不可用于任何违反中华人民共和国(含台湾省)或使用者所在地区法律法规的用途。</li><li>因为作者即本人仅完成代码的开发和开源活动(开源即任何人都可以下载使用)，从未参与用户的任何运营和盈利活动。</li><li>且不知晓用户后续将程序源代码用于何种用途，故用户使用过程中所带来的任何法律责任即由用户自己承担。</li></ul><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p>直接丢几个图：</p><p>官方unicorn模板<br><img src="https://img.laoda.de/i/2023/05/27/ltx2qq-0.webp" alt="b2dadec68644afb18d40ff0ec8c505c2.png"></p><p>luna模板<br><img src="https://img.laoda.de/i/2023/05/27/lu5gfb-0.webp" alt="bcdad678a33552c231b29848b6a7ae74.png"></p><p>hyper模板</p><p><img src="https://img.laoda.de/i/2023/05/27/lu6q2p-0.webp" alt="33f8dd0a6ad28d1c9ab6215f6535fa65.png"></p><p><img src="https://img.laoda.de/i/2023/05/27/lu7vnx-0.webp" alt="52bcda74f3021e1d47f6a4937c03e315.png"></p><p><img src="https://img.laoda.de/i/2023/05/27/lu8v2j-0.webp" alt="947496dab4b8c28453339aa9577ad4c4.png"></p><p><img src="https://img.laoda.de/i/2023/05/27/luinl8-0.webp" alt="6ea2947a4f4321c77d6a5119d229e26e.png"></p><p><img src="https://img.laoda.de/i/2023/05/27/lujxtf-0.webp" alt="15ee4197043787f8f6c26cdf8f96084f.png"></p><h2 id="3-相关地址"><a href="#3-相关地址" class="headerlink" title="3. 相关地址"></a>3. 相关地址</h2><p>咕咕的Demo：<a href="https://shop.gugu.ee/">https://shop.gugu.ee</a><br>GitHub官方仓库：<a href="https://github.com/assimon/dujiaoka">https://github.com/assimon/dujiaoka</a><br>Docker镜像地址：<a href="https://hub.docker.com/r/stilleshan/dujiaoka">https://hub.docker.com/r/stilleshan/dujiaoka</a> （同时支持 X86 和 ARM 架构）来自：<a href="https://www.ioiox.com/archives/159.html">Stille大佬</a></p><h2 id="4-搭建环境"><a href="#4-搭建环境" class="headerlink" title="4. 搭建环境"></a>4. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器 24 元 &#x2F; 月 VPS 一台</del> 咕咕自己搭建用的是硅谷的<a href="https://loll.cc/tx">腾讯轻量应用服务器</a> ，（这次最好选 非大陆的，而且线路还不错的机器）如果是小白刚开始玩的话，也可以选择 <a href="https://gao.ee/lca">莱卡云 美国CN2 GIA</a> 的服务器，（莱卡云服务器介绍：<a href="https://blog.laoda.de/archives/vps-lcayun">点击查看</a>）或者<a href="https://blog.laoda.de/vps.html">Racknerd</a>的高性价比服务器（注意地区选美国西部城市的）</li><li>系统：Debian 11 （<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD 脚本</a> 非必需 DD，用原来的系统也 OK，之后教程都是用 Debian 或者 Ubuntu 搭建～）</li><li>安装好 Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需但建议】域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>【非必需】提前安装好宝塔面板海外版本 aapanel，并安装好 Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程选用】安装好 Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><blockquote><p>服务器要求：内存建议1G，能安装Docker即可～</p></blockquote><h2 id="5-搭建视频"><a href="#5-搭建视频" class="headerlink" title="5. 搭建视频"></a>5. 搭建视频</h2><h3 id="5-1-YouTube："><a href="#5-1-YouTube：" class="headerlink" title="5.1 YouTube："></a>5.1 YouTube：</h3><p>视频地址：<a href="https://youtu.be/V_lCnvu8aDY">https://youtu.be/V_lCnvu8aDY</a></p><h2 id="6-搭建方式"><a href="#6-搭建方式" class="headerlink" title="6. 搭建方式"></a>6. 搭建方式</h2><p>如果你不是用的腾讯云的轻量应用服务器，可以直接跳到 6.1 部分。</p><h3 id="安装系统（腾讯云轻量应用服务器）"><a href="#安装系统（腾讯云轻量应用服务器）" class="headerlink" title="安装系统（腾讯云轻量应用服务器）"></a>安装系统（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlyhcz-2.webp" alt="e59713fba8726d3cb55ae11bca83fe3c.png"></p><p>腾讯云轻量服务器最大的特点就是 “轻量”，相比 CVM，更适合小白上手，这边我们之间选择 Docker 基础镜像，就可以省去后面安装 Docker 的步骤 <del>（如果你非要用国内的服务器，这边装的 Docker 镜像还会帮你配置好国内镜像源，让你加速访问 docker 镜像资源）</del> 不要用国内的 。</p><h3 id="登陆（腾讯云轻量应用服务器）"><a href="#登陆（腾讯云轻量应用服务器）" class="headerlink" title="登陆（腾讯云轻量应用服务器）"></a>登陆（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlzlj7-2.webp" alt="2722040ee311eb4a9ebf2a4945bf38f4.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm0gv8-2.webp" alt="c0b5d360053746c4095d592967ee401f.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm1vqw-2.webp" alt="e0ba858f021b846ad0abc27acf5008c2.png"></p><h3 id="6-1-安装-Docker-与-Nginx-Proxy-Manager"><a href="#6-1-安装-Docker-与-Nginx-Proxy-Manager" class="headerlink" title="6.1 安装 Docker 与 Nginx Proxy Manager"></a>6.1 安装 Docker 与 Nginx Proxy Manager</h3><p>可以直接参考这篇内容：</p><p><a href="https://blog.laoda.de/archives/nginxproxymanager">https://blog.laoda.de/archives/nginxproxymanager</a></p><h3 id="6-2-创建安装目录"><a href="#6-2-创建安装目录" class="headerlink" title="6.2 创建安装目录"></a>6.2 创建安装目录</h3><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/shop</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/shop</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> storage uploads</span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> -R 777 storage uploads</span><br><span class="line"><span class="comment"># 创建数据目录用于挂载</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">touch</span> env.conf</span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> -R 777 env.conf</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这边我们直接用 docker 的方式安装。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure><p>英文输入法下，按 <code>i</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">web:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">stilleshan/dujiaoka</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">        <span class="comment"># - INSTALL=false</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">INSTALL=true</span></span><br><span class="line">        <span class="comment"># - MODIFY=true</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./env.conf:/dujiaoka/.env</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./uploads:/dujiaoka/public/uploads</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./storage:/dujiaoka/storage</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8090</span><span class="string">:80</span>         <span class="comment"># 8090可以改成任意服务器没有使用过的端口，80不要修改</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line"> </span><br><span class="line">  <span class="attr">db:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mariadb:focal</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_ROOT_PASSWORD=changeyourpassword</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_DATABASE=dujiaoka</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_USER=dujiaoka</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_PASSWORD=changeyourpassword</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./mysql:/var/lib/mysql</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis:alpine</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./redis:/data</span></span><br></pre></td></tr></table></figure><p><code>changeyourpassword</code>可以修改成自己的密码。</p><p>修改好之后，注意切换成英文输入法，然后按一下 <code>esc</code>，然后 <code>:wq</code> 保存退出。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim env.conf</span><br></pre></td></tr></table></figure><p>输入：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">APP_NAME=咕咕的小卖部</span><br><span class="line">APP_ENV=local</span><br><span class="line">APP_KEY=base64:rKwRuI6eRpCw/9e2XZKKGj/Yx3iZy5e7+FQ6+aQl8Zg=</span><br><span class="line">APP_DEBUG=true</span><br><span class="line">APP_URL=https://你的域名</span><br><span class="line"></span><br><span class="line">LOG_CHANNEL=stack</span><br><span class="line"></span><br><span class="line"># 数据库配置</span><br><span class="line">DB_CONNECTION=mysql</span><br><span class="line">DB_HOST=db</span><br><span class="line">DB_PORT=3306</span><br><span class="line">DB_DATABASE=dujiaoka</span><br><span class="line">DB_USERNAME=dujiaoka</span><br><span class="line">DB_PASSWORD=changeyourpassword</span><br><span class="line"></span><br><span class="line"># redis配置</span><br><span class="line">REDIS_HOST=redis</span><br><span class="line">REDIS_PASSWORD=</span><br><span class="line">REDIS_PORT=6379</span><br><span class="line"></span><br><span class="line">BROADCAST_DRIVER=log</span><br><span class="line">SESSION_DRIVER=file</span><br><span class="line">SESSION_LIFETIME=120</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 缓存配置</span><br><span class="line"># file为磁盘文件  redis为内存级别</span><br><span class="line"># redis为内存需要安装好redis服务端并配置</span><br><span class="line">CACHE_DRIVER=redis</span><br><span class="line"></span><br><span class="line"># 异步消息队列</span><br><span class="line"># sync为同步  redis为异步</span><br><span class="line"># 使用redis异步需要安装好redis服务端并配置</span><br><span class="line">QUEUE_CONNECTION=redis</span><br><span class="line"></span><br><span class="line"># 后台语言</span><br><span class="line">## zh_CN 简体中文</span><br><span class="line">## zh_TW 繁体中文</span><br><span class="line">## en    英文</span><br><span class="line">DUJIAO_ADMIN_LANGUAGE=zh_CN</span><br><span class="line"></span><br><span class="line"># 后台登录地址</span><br><span class="line">ADMIN_ROUTE_PREFIX=/admin</span><br><span class="line"></span><br><span class="line"># 是否开启https (前端开启了后端也必须为true)</span><br><span class="line"># 后台登录出现0err或者其他登录异常问题，大概率是开启了https而后台没有开启，把下面的false改为true即可</span><br><span class="line">ADMIN_HTTPS=true</span><br></pre></td></tr></table></figure><p>这边可以不用动，因为后续我们安装的时候填的信息会覆盖这里面的内容，修改好之后，注意切换成英文输入法，然后按一下 <code>esc</code>，然后 <code>:wq</code> 保存退出。</p><h3 id="6-3-打开服务器防火墙（非必需）并访问网页"><a href="#6-3-打开服务器防火墙（非必需）并访问网页" class="headerlink" title="6.3 打开服务器防火墙（非必需）并访问网页"></a>6.3 打开服务器防火墙（非必需）并访问网页</h3><p>打开防火墙的端口 <code>8090</code></p><p>举例，腾讯云打开方法如下（部分服务商没有自带的面板防火墙，就不用这步操作了）：</p><img src="https://img.laoda.de/i/2022/06/30/zlio5h-2.webp" alt="image-20220630215240864" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/06/30/10h3dqt-2.webp" alt="image-20220630220546335" style="zoom:33%;" /><p>图中示例填的是 <code>5230</code>，备注填的是 <code>memos</code>，这边我们填 <code>8090</code>，示例填 <code>shop</code> ，确定即可（如果你在 docker-compose 文件里换了 <code>9009</code>，这边就需要填 <code>9009</code>，以此类推）</p><img src="https://img.laoda.de/i/2022/08/19/o4byqz-2.webp" alt="image-20220819145844555" style="zoom:33%;" /><p>查看端口是否被占用（以 <code>8090</code> 为例），输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:8090  <span class="comment">#查看 8090 端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果啥也没出现，表示端口未被占用，我们可以继续下面的操作了～</p><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装 lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用（被占用了就修改一下端口，比如改成 <code>8081</code>，注意 docker 命令行里和防火墙都要改）</p><p>最后：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/shop    <span class="comment"># 来到 dockercompose 文件所在的文件夹下</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>理论上我们就可以输入 <code>http://ip:8090</code> 访问安装了。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器 IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的 IP。</p><p>2、遇到访问不了的情况，请再次检查在宝塔面板的防火墙和服务商的后台防火墙是否打开对应了端口。</p></blockquote><p>有的小伙伴可能想搭建起来分享给其他人使用，如果后续想要分享给别人，IP + 端口太不优雅了，而且这个涉及到密码的，还是非常需要做https的！会让网页更安全！</p><p> <a href="https://loll.cc/ns">namesilo</a> 上面 xyz 后缀的域名一年就 7 块钱，可以年抛。（冷知识，namesilo上 6位数字的xyz续费永远都是0.99美元 &#x3D; &#x3D;）</p><p>如果想要长期使用，还是建议买 com 后缀的域名，更加正规一些，可以输入 <code>laodade</code> 来获得 1 美元的优惠（不知道现在还有没有）</p><p><a href="https://loll.cc/ns">namesilo</a> 自带隐私保护，咕咕一直在用这家，价格也是这些注册商里面比较低的，关键是他家不像其他家域名注册商，没有七七八八的套路！（就是后台界面有些<del>丑</del> 古老 &#x3D; &#x3D;）</p><p><a href="https://blog.laoda.de/archives/namesilo">【域名购买】Namesilo 优惠码和域名解析教程（附带服务器购买推荐和注意事项）</a></p><p>我们接着往下看！</p><h3 id="6-4-更新-shop"><a href="#6-4-更新-shop" class="headerlink" title="6.4 更新 shop"></a>6.4 更新 shop</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/shop</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/shop /root/data/docker_data/shop.archive  <span class="comment"># 万事先备份，以防万一</span></span><br><span class="line"></span><br><span class="line">docker-compose pull</span><br><span class="line"></span><br><span class="line">docker-compose up -d    <span class="comment"># 请不要使用 docker-compose stop 来停止容器，因为这么做需要额外的时间等待容器停止；docker-compose up -d 直接升级容器时会自动停止并立刻重建新的容器，完全没有必要浪费那些时间。</span></span><br><span class="line"></span><br><span class="line">docker image prune  <span class="comment"># prune 命令用来删除不再使用的 docker 对象。删除所有未被 tag 标记和未被容器使用的镜像</span></span><br></pre></td></tr></table></figure><p>提示：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WARNING! This will remove all dangling images.</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] </span><br></pre></td></tr></table></figure><p>输入 <code>y</code></p><p>利用 Docker 搭建的应用，更新非常容易～</p><h3 id="6-5-卸载-shop"><a href="#6-5-卸载-shop" class="headerlink" title="6.5 卸载 shop"></a>6.5 卸载 shop</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/shop</span><br><span class="line"></span><br><span class="line">docker-compose down</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/shop  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>可以卸载得很干净。</p><h2 id="7-反向代理"><a href="#7-反向代理" class="headerlink" title="7. 反向代理"></a>7. 反向代理</h2><p>我们要用域名而不是IP+端口的方式来访问我们的服务！</p><h3 id="7-1-利用-Nginx-Proxy-Manager"><a href="#7-1-利用-Nginx-Proxy-Manager" class="headerlink" title="7.1 利用 Nginx Proxy Manager"></a>7.1 利用 Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p><img src="https://img.laoda.de/i/2022/10/16/n6t02e-2.webp" alt="image-20221016140213282"></p><p>之后，登陆 Nginx Proxy Manager（不会的看这个：<strong>安装 Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称 NPM）会用到 <code>80</code>、<code>443</code> 端口，所以本机不能占用（比如原来就有 Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom: 33%;" /><img src="https://img.laoda.de/i/2023/05/27/lvep5w-0.webp" alt="image-20230527132253249" style="zoom:50%;" /><blockquote><p> 注意填写对应的 <code>域名</code>、<code>IP</code> 和 <code>端口</code>，按文章来的话，应该是 <code>8090</code></p></blockquote><p><strong>IP 填写：</strong></p><p>如果 Nginx Proxy Manager 和 shop 在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的 Docker 容器内部 IP。</p><img src="https://img.laoda.de/i/2022/09/29/pcdnz5-2.webp" style="zoom:50%;" /><p>否则直接填 <code>shop</code> 所在的服务器 IP 就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom: 33%;" /><p>再次打开，勾选这些：</p><img src="https://img.laoda.de/i/2022/10/16/n7nn6e-2.webp" alt="image-20221016140356324" style="zoom:50%;" /><p>然后就可以用域名来安装访问了。</p><h3 id="7-2-利用宝塔面板"><a href="#7-2-利用宝塔面板" class="headerlink" title="7.2 利用宝塔面板"></a>7.2 利用宝塔面板</h3><p>发现还是有不少小伙伴习惯用宝塔面板，这边也贴一个宝塔面板的反代配置：</p><p>直接新建一个站点，不要数据库，不要 php，纯静态即可。</p><p>然后打开下面的配置，修改 Nginx 的配置。</p><img src="https://img.laoda.de/i/2022/08/19/ov4xrt-2.webp" alt="image-20220819150345725" style="zoom:50%;" /><img src="https://img.laoda.de/i/2022/08/19/owbbkb-2.webp" alt="image-20220819150542867" style="zoom:50%;" /><p>代码如下：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:8090/;       <span class="comment"># 注意改成你实际使用的端口</span></span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此方法对 90% 的反向代理都能生效，然后就可以用域名来安装访问了。</p><p>有同学可能会问，为什么不直接用宝塔自带的反向代理功能。</p><img src="https://img.laoda.de/i/2022/08/19/oxf800-2.webp" alt="image-20220819150730128" style="zoom:50%;" /><p>也可以，不过咕咕自己之前遇到过当有多个网站需要反代的时候，在这边设置会报错的情况 &#x3D; &#x3D; </p><p>所以后来就不用了，直接用上面的方法来操作了。</p><h2 id="8-使用教程"><a href="#8-使用教程" class="headerlink" title="8. 使用教程"></a>8. 使用教程</h2><p>成功登录之后，我们填写信息，</p><p>注意数据库地址填<code>db</code>，Redis填<code>redis</code></p><p>填写完成后，点击保存。</p><p>提示默认的账户名和密码都是<code>admin</code></p><p>此时，我们先停止容器。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /root/data/docker_data/shop</span><br><span class="line"></span><br><span class="line">docker-compose down</span><br></pre></td></tr></table></figure><p>接着我们修改一下<code>docker-compose.yml</code>以及<code>env.conf</code>里面的内容。</p><p>分别把<code>- INSTALL=true</code> 改成<code>- INSTALL=false</code></p><p>把<code>APP_DEBUG=true</code>改成<code>APP_DEBUG=false</code></p><p>之后运行：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>然后在域名后面加上<code>/admin</code>，输入默认的账户密码<code>admin</code>就可以正常登录后台了！</p><p>记得改一下用户名和密码！</p><p><img src="https://img.laoda.de/i/2023/05/27/lw0kft-0.webp" alt="52bcda74f3021e1d47f6a4937c03e315.png"></p><h2 id="9-常见问题"><a href="#9-常见问题" class="headerlink" title="9. 常见问题"></a>9. 常见问题</h2><p>常见问题集锦：<a href="https://github.com/assimon/dujiaoka/wiki/problems">https://github.com/assimon/dujiaoka/wiki/problems</a></p><h2 id="10-结尾"><a href="#10-结尾" class="headerlink" title="10. 结尾"></a>10. 结尾</h2><p>祝大家用得开心，有问题可以去 GitHub 提 <a href="https://github.com/assimon/dujiaoka/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，有能力给项目做贡献的同学，也欢迎积极加入到 <a href="https://github.com/assimon/dujiaoka">项目</a> 中来，贡献自己的一份力量！</p><p>最后，感谢开发人员们的辛苦付出，让我们能用到这么优秀的项目！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>GitHub仓库：<a href="https://github.com/assimon/dujiaoka">https://github.com/assimon/dujiaoka</a><br>用到的Stille大佬镜像：<a href="https://hub.docker.com/r/stilleshan/dujiaoka">https://hub.docker.com/r/stilleshan/dujiaoka</a><br>Stille大佬博客：<a href="https://www.ioiox.com/archives/159.html">https://www.ioiox.com/archives/159.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;今天来和大家分享10分钟搭建一个发卡网站（发卡自动售货系统），人人都可以开一个自己的小店！&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.laoda.de/i/2023/05/27/ltjwxy-0.webp&quot; alt=&quot;2fdbd82cb67713a57fc4</summary>
      
    
    
    
    <category term="Docker系列" scheme="https://blog.laoda.de/categories/Docker%E7%B3%BB%E5%88%97/"/>
    
    
    <category term="独角发卡" scheme="https://blog.laoda.de/tags/%E7%8B%AC%E8%A7%92%E5%8F%91%E5%8D%A1/"/>
    
    <category term="个人商店" scheme="https://blog.laoda.de/tags/%E4%B8%AA%E4%BA%BA%E5%95%86%E5%BA%97/"/>
    
    <category term="发卡网站" scheme="https://blog.laoda.de/tags/%E5%8F%91%E5%8D%A1%E7%BD%91%E7%AB%99/"/>
    
  </entry>
  
  <entry>
    <title>不用虚拟信用卡如何在iOS上开通ChatGPT Plus（附3分钟免费完成美区ID申请）</title>
    <link href="https://blog.laoda.de/archives/ios-with-chatgpt/"/>
    <id>https://blog.laoda.de/archives/ios-with-chatgpt/</id>
    <published>2023-05-19T10:09:02.304Z</published>
    <updated>2023-05-25T00:53:55.697Z</updated>
    
    <content type="html"><![CDATA[<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><h3 id="2023-05-02"><a href="#2023-05-02" class="headerlink" title="2023-05-02"></a>2023-05-02</h3><p>有小伙伴反馈支付宝的礼品卡也不是非常稳，联系客服可能会有问题，建议大家还是用官网的礼品卡。</p><hr><p>补充说明，部分小伙伴新注册美区Apple ID会遇到礼品卡充值后在ChatGPT里面付款失败的情况。原因是这个Apple ID是新的，触发了风控。</p><p>这里有小伙伴提出了解决方法，大家可以试试。</p><p>问题：</p><blockquote><p>礼品卡充好了，为什么在chatgpt里付款的时候失败了呀</p></blockquote><p>解决方法：</p><blockquote><p>联系了美国apple客服，聊天解决的，需要客服后台帮你给权限，因为是新用户，只能付费购买APP，而付费订阅不行。</p><p>可以直接在线联系的，不需要什么理由，你就说发现注册完账号之后进行了充值，发现余额只能用来买APP，无法进行订阅付费。全程说英语，有礼貌一些，别着急，会给你处理好的。</p><p>昨天打了400电话问了下，客服说是我的美区id被风控了（可能是注册以来都用礼品卡或者没绑定银行卡的原因，没细问），询问了客服说明情况就给解除了风控（但是因为国内国外客服处理问题等了一天），刚才试了下已经可以开通并续费了。 (来自YouTube和评论区的反馈)</p></blockquote><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><h3 id="YouTube："><a href="#YouTube：" class="headerlink" title="YouTube："></a>YouTube：</h3><p>视频地址：<a href="https://youtu.be/tg75b0gZ5_U">https://youtu.be/tg75b0gZ5_U</a></p><h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><p>今天凌晨，OpenAI 正式在 App Store 推出了 ChatGPT 的 iOS app。</p><img src="https://img.laoda.de/i/2023/05/19/qsikzh-0.webp" alt="IMG_1E0E492F8321-1.jpeg" style="zoom:33%;" /><p>🔗  下载直达：<a href="https://apps.apple.com/app/openai-chatgpt/id6448311069">https://apps.apple.com/app/openai-chatgpt/id6448311069</a></p><p>注意，系统需要更新到iOS 16以上。</p><p>不过目前有且仅有美区Apple ID登录的App store才可以下载。（后面出个教程，5分钟搞定美区ID的免费申请）</p><blockquote><p>PS：<br>1、OpenAI 表示在未来几周内将会在更多国家和地区上线。<br>2、OpenAI 表示， ChatGPT 的 Android 应用很快就会到来。</p></blockquote><p>咕咕体验了一下，程序免费下载，界面简洁无任何广告，且支持跨设备同步历史记录。它还集成了 OpenAI 的开源语音识别系统 Whisper，支持语音输入。</p><p>ChatGPT app 很好地调动了 iPhone 中的 Haptic Engine，可以提供优秀的震动反馈。（在设置里会有 Haptic Feedback 震动反馈的开关）</p><p>🤖OpenAI 官方总结了 ChatGPT iOS 应用的几个功能亮点:</p><ul><li>即时回答: 不需要筛选广告或多个结果就能获得准确的信息。</li><li>量身定制的建议: 寻求烹饪、旅行计划或精心制作的信息方面的指导。</li><li>创作灵感: 产生礼物的想法，提纲演示，或者写一首完美的诗。</li><li>专业工具: 通过想法反馈、笔记总结和技术主题协助提高生产力。</li><li>学习机会: 探索新的语言，现代历史，更多领域可以你根据自己的需求挖掘。</li></ul><p>同时，ChatGPT Plus 用户可以在 iOS 上直接使用 GPT-4 。</p><p>之前苦恼如何开通 Plus 服务的朋友们，现在 iOS App 可以解决这个烦恼了。在 app 里登陆了账号之后，打开个人中心，可以直接选择升级到 ChatGPT Plus，然后通过 App Store 完成订阅支付，价格是依然是 US$19.99&#x2F;月。</p><p>咕咕将介绍两种付费购买的方式，无需海外信用卡！</p><h2 id="2-申请美区-Apple-ID"><a href="#2-申请美区-Apple-ID" class="headerlink" title="2. 申请美区 Apple ID"></a>2. 申请美区 Apple ID</h2><p>全程可以使用手机完成，而且无需开启魔法工具。</p><p>需要用到一个<a href="https://www.meiguodizhi.com/usa-address/oregon">美国地址</a>。</p><p>比如我们用这个：</p><p><img src="https://img.laoda.de/i/2023/05/19/qskxnn-0.webp" alt="c180c84bc77f713f01909c1a8bbb6aeb.png"></p><p>第一步，打开苹果官网，点击”账户”</p><p><img src="https://img.laoda.de/i/2023/05/19/qslxws-0.webp" alt="b9a50a2bc9a211320ca2ef70cccb88a9.png"></p><p>第二步，点击“立即创建您的Apple ID”</p><p>并按提示输入你的信息，唯一注意点是国家选择“美国”</p><p>电话号码用+86的，邮箱用qq邮箱都可以。</p><p><img src="https://img.laoda.de/i/2023/05/19/qsna32-0.webp" alt="6e7c26bbfc38efb4930c45a648d1405e.png"></p><p>注册过程中需要输入邮箱和手机接受到的验证码，完成注册后就可以退出或者直接关闭浏览器了。</p><p>然后我们打开手机上的“app store”</p><p>如果你这边已经登录了账号，可以先退出，然后在这边登录我们刚刚申请的Apple ID以及密码。</p><img src="https://img.laoda.de/i/2023/05/19/qsoz8v-0.webp" alt="4fff4789333463c99d2b7f6b67a98c7f.png" style="zoom:33%;" /><p>不出意外，成功登录上了，然后页面会刷新一下，你会看到此时app里面显示的都是英文了。</p><img src="https://img.laoda.de/i/2023/05/19/qsr3yp-0.webp" alt="b63ab947c46572ab52d168be55c5a8ce.png" style="zoom: 33%;" /><p>然后，随意下载一个app，会弹出来一个验证。</p><p>点击下一步，会让你添加支付方式和账单地址信息。</p><p>支付方式我们不用管。</p><p>直接填地址，用上面地址生成器产生的地址即可。（选填项可以不填）</p><p>填完之后确认，至此，你已经完成了美区Apple ID的申请，可以愉快下载东西了！</p><blockquote><p>一个经验分享：<br>我们有了一个美区和一个国区ID了，建议平时还是用国区的，美区的下载完之后就退掉，切回国区。不然你可能会不经意就用美区的id下载了好多应用，然后在换手机的时候你就会非常蛋疼。</p></blockquote><h2 id="3-充值开通ChatGPT-Plus"><a href="#3-充值开通ChatGPT-Plus" class="headerlink" title="3. 充值开通ChatGPT Plus"></a>3. 充值开通ChatGPT Plus</h2><h3 id="3-1-绑定美区PayPal充值"><a href="#3-1-绑定美区PayPal充值" class="headerlink" title="3.1 绑定美区PayPal充值"></a>3.1 绑定美区PayPal充值</h3><p>这边需要申请一个美区的 PayPal，然后绑定到你的Apple ID上。</p><p>美区的 PayPal是可以绑定国内发行的VISA卡的，不过风控比较厉害，咕咕因为是老号了，使用起来目前还算稳定。</p><p>绑定好之后的好处就是自动扣费，不用每个月去手动续费了。</p><p>如果大家有需求，后续可以考虑出个注册美区PayPal的教程。</p><p>没有美区PayPal的同学，这边建议大家用下面的礼品卡的方式来充值。</p><h3 id="3-2-通过礼品卡充值"><a href="#3-2-通过礼品卡充值" class="headerlink" title="3.2 通过礼品卡充值"></a>3.2 通过礼品卡充值</h3><p>重要提醒：礼品卡淘宝上也有卖，但是容易买到黑卡（简单来说就是通过盗刷信用卡或者不干净的钱撸的卡）如果你用这些卡充值了Apple ID，有极大的概率会导致Apple ID被封！尤其是如果这是你的主力Apple ID的话，风险极大，所以不建议大家在淘宝购买礼品卡。</p><h4 id="Apple官方礼品卡"><a href="#Apple官方礼品卡" class="headerlink" title="Apple官方礼品卡"></a>Apple官方礼品卡</h4><p>官方礼品卡地址：<a href="https://www.apple.com/shop/buy-giftcard/giftcard">https://www.apple.com/shop/buy-giftcard/giftcard</a></p><p><img src="https://img.laoda.de/i/2023/05/19/qssh83-0.webp" alt="3023d402375e1dbe8fd1c54e55967f80.png"></p><h4 id="支付宝礼品卡"><a href="#支付宝礼品卡" class="headerlink" title="支付宝礼品卡"></a>支付宝礼品卡</h4><ul><li>打开支付宝切换到美国的地址“旧金山”</li><li>点击最下面的中间一栏【出境】选项，选择【折扣礼卡】</li><li>拉到最下面一栏选择【更多大牌折扣礼卡】，点进去在搜索栏搜索“app store”，注册邮箱账号密码然后就可以选择美元金额充值</li><li>充值成功就可以点进去查看礼品卡号码，有的甚至秒到账。</li></ul><p><img src="https://img.laoda.de/i/2023/05/19/qstw8c-0.webp" alt="05e05f21a2a4994e1687d2aafa397d46.png"></p><p>Plus用户还可以开家庭共享！</p><img src="https://img.laoda.de/i/2023/05/19/twnep2-0.webp" alt="IMG_7602 2" style="zoom:33%;" /><p>祝大家使用愉快！</p><p>有问题可以在留言区交流！</p><h2 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h2><p><a href="https://blog.laoda.de/archives/chatgpt-plus-depay">【保姆级教程】从零开通ChatGPT Plus</a></p><p><a href="https://blog.laoda.de/archives/chatgpt-plugins-prompts">玩转ChatGPT必备的插件&amp;客户端&amp;Prompts</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;更新&quot;&gt;&lt;a href=&quot;#更新&quot; class=&quot;headerlink&quot; title=&quot;更新&quot;&gt;&lt;/a&gt;更新&lt;/h2&gt;&lt;h3 id=&quot;2023-05-02&quot;&gt;&lt;a href=&quot;#2023-05-02&quot; class=&quot;headerlink&quot; title=&quot;2023-</summary>
      
    
    
    
    <category term="有用的小知识" scheme="https://blog.laoda.de/categories/%E6%9C%89%E7%94%A8%E7%9A%84%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="ChatGPT" scheme="https://blog.laoda.de/tags/ChatGPT/"/>
    
    <category term="ChatGPT Plus" scheme="https://blog.laoda.de/tags/ChatGPT-Plus/"/>
    
    <category term="OpenAI" scheme="https://blog.laoda.de/tags/OpenAI/"/>
    
  </entry>
  
  <entry>
    <title>RackNerd 洛杉矶DC-02优化线路VPS促销，$14.99/年，可申请IPv6</title>
    <link href="https://blog.laoda.de/archives/racknerd-memorial-day-sale-dc02/"/>
    <id>https://blog.laoda.de/archives/racknerd-memorial-day-sale-dc02/</id>
    <published>2023-05-13T06:43:58.594Z</published>
    <updated>2023-05-13T06:43:58.594Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.laoda.de/tags/racknerd/">RackNerd</a>的洛杉矶优化线路VPS开始促销，具体机房为该商家的洛杉矶DC-02优化线路机房，最低配为$14.99&#x2F;年，配置为1核心&#x2F;1GB内存&#x2F;20GB SSD空间&#x2F;3TB流量&#x2F;1Gbps端口&#x2F;KVM虚拟。性价比不错，付款商家支持支付宝，PayPal等。</p><p><img src="https://img.laoda.de/i/2023/05/13/nr0h3n-0.webp" alt="image-20230513143559388"></p><h2 id="1、官网"><a href="#1、官网" class="headerlink" title="1、官网"></a>1、官网</h2><p><strong>官方网站：<a href="https://my.racknerd.com/aff.php?aff=1158">https://www.racknerd.com</a></strong></p><p><strong>Racknerd相关介绍：</strong> <a href="https://blog.laoda.de/archives/vps-racknerd">【VPS选购分享】Racknerd——曾经的“四大金刚”，如今的性价比之王</a></p><p>以下是racknerd目前的促销便宜VPS，可以围观。</p><p><a href="https://blog.laoda.de/vps.html">RackNerd 在售机型推荐</a></p><h2 id="2、洛杉矶优化线路-DC-02"><a href="#2、洛杉矶优化线路-DC-02" class="headerlink" title="2、洛杉矶优化线路-DC-02"></a>2、洛杉矶优化线路-DC-02</h2><p>VPS特征：KVM虚拟，纯SSD raid10阵列，1Gbps带宽，自带一个IPv4，支持rdns，solusvm面板管理。</p><p>Los Angeles DC02 (Test IP: 204.13.154.3)</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1核</td><td>1G</td><td>20G</td><td>3T&#x2F;月</td><td>$14.99&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=770">链接</a></strong></td></tr><tr><td>2核</td><td>2G</td><td>30G</td><td>4T&#x2F;月</td><td>$23.99&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=771">链接</a></strong></td></tr><tr><td>2核</td><td>3G</td><td>38G</td><td>5T&#x2F;月</td><td>$33.99&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=772">链接</a></strong></td></tr><tr><td>3核</td><td>4G</td><td>50G</td><td>6T&#x2F;月</td><td>$49.99&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=773">链接</a></strong></td></tr></tbody></table><h2 id="3、以下为racknerd的往期促销"><a href="#3、以下为racknerd的往期促销" class="headerlink" title="3、以下为racknerd的往期促销"></a>3、以下为racknerd的往期促销</h2><h3 id="复活节促销VPS"><a href="#复活节促销VPS" class="headerlink" title="复活节促销VPS"></a>复活节促销VPS</h3><p>VPS特征：KVM虚拟，纯SSD raid10阵列，1Gbps带宽，自带一个IPv4，支持rdns，solusvm面板管理。可选节点为西雅图&#x2F;圣何塞&#x2F;达拉斯&#x2F;芝加哥&#x2F;新泽西&#x2F;亚特兰大&#x2F;纽约。</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1核</td><td>840M</td><td>10G</td><td>1T&#x2F;月</td><td>$10.78&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=766">链接</a></strong></td></tr><tr><td>1核</td><td>1.2G</td><td>30G</td><td>3T&#x2F;月</td><td>$14.98&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=767">链接</a></strong></td></tr><tr><td>2核</td><td>2G</td><td>45G</td><td>5T&#x2F;月</td><td>$21.98&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=768">链接</a></strong></td></tr><tr><td>3核</td><td>5G</td><td>100G</td><td>10T&#x2F;月</td><td>$58.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=769">链接</a></strong></td></tr></tbody></table><h3 id="2023年元旦-中国春节促销"><a href="#2023年元旦-中国春节促销" class="headerlink" title="2023年元旦+中国春节促销"></a>2023年元旦+中国春节促销</h3><p>VPS特征：KVM虚拟，纯SSD raid10阵列，1Gbps带宽，自带一个IPv4，支持rdns，solusvm面板管理。</p><p>可选节点为洛杉矶DC-02, 芝加哥, 达拉斯, 新泽西, 亚特兰大, 圣何塞, 西雅图, 纽约。</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1核</td><td>512M</td><td>10G</td><td>1.5T&#x2F;月</td><td>$10.18&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=734">链接</a></strong></td></tr><tr><td>1核</td><td>1G</td><td>25G</td><td>4T&#x2F;月</td><td>$12.98&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=735">链接</a></strong></td></tr><tr><td>2核</td><td>2.5G</td><td>45G</td><td>6T&#x2F;月</td><td>$24.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=736">链接</a></strong></td></tr><tr><td>4核</td><td>4G</td><td>70G</td><td>10T&#x2F;月</td><td>$46.68&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=737">链接</a></strong></td></tr></tbody></table><h3 id="其他年付10美元左右VPS"><a href="#其他年付10美元左右VPS" class="headerlink" title="其他年付10美元左右VPS"></a>其他年付10美元左右VPS</h3><p>数据中心可选：洛杉矶、圣何塞、达拉斯、芝加哥、新泽西、亚特兰大、纽约、荷兰(阿姆斯特丹)</p><p>VPS特征：KVM虚拟，纯SSD raid10阵列，1Gbps带宽，自带一个IPv4，支持rdns，solusvm面板管理。</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1核</td><td>768M</td><td>10G</td><td>1T&#x2F;月</td><td>$10.28&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=695">链接</a></strong></td></tr><tr><td>1核</td><td>768M</td><td>10G</td><td>2T&#x2F;月</td><td>$11.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=679">链接</a></strong></td></tr><tr><td>1核</td><td>1G</td><td>16G</td><td>3T&#x2F;月</td><td>$14.98&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=680">链接</a></strong></td></tr><tr><td>1核</td><td>1.2G</td><td>18G</td><td>2T&#x2F;月</td><td>$14.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=670">链接</a></strong></td></tr><tr><td>1核</td><td>1.5G</td><td>30G</td><td>3T&#x2F;月</td><td>$16.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=696">链接</a></strong></td></tr></tbody></table><h3 id="年付60刀-5个ipv4"><a href="#年付60刀-5个ipv4" class="headerlink" title="年付60刀 - 5个ipv4"></a>年付60刀 - 5个ipv4</h3><p>默认配置5个ipv4。</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1核</td><td>1.5G</td><td>20G</td><td>3T&#x2F;月</td><td>$60&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=563">链接</a></strong></td></tr></tbody></table><h3 id="内存1-5G-2-5G套餐"><a href="#内存1-5G-2-5G套餐" class="headerlink" title="内存1.5G-2.5G套餐"></a>内存1.5G-2.5G套餐</h3><p>数据中心可选：洛杉矶、圣何塞、达拉斯、芝加哥、新泽西、亚特兰大、纽约、荷兰(阿姆斯特丹)</p><p>VPS特征：KVM虚拟，纯SSD raid10阵列，1Gbps带宽，自带一个IPv4，支持rdns，solusvm面板管理。</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1核</td><td>1.5G</td><td>30G</td><td>3T&#x2F;月</td><td>$25.95&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=319">链接</a></strong></td></tr><tr><td>2核</td><td>2G</td><td>25G</td><td>4T&#x2F;月</td><td>$20.98&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=681">链接</a></strong></td></tr><tr><td>2核</td><td>2G</td><td>35G</td><td>4T&#x2F;月</td><td>$38.78&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=280">链接</a></strong></td></tr><tr><td>2核</td><td>2.5G</td><td>40G</td><td>3T&#x2F;月</td><td>$25.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=671">链接</a></strong></td></tr><tr><td>2核</td><td>2.5G</td><td>60G</td><td>7T&#x2F;月</td><td>$28.55&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=697">链接</a></strong></td></tr><tr><td>2核</td><td>2.5G</td><td>40G</td><td>5T&#x2F;月</td><td>$29.50&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=211">链接</a></strong></td></tr><tr><td>2核</td><td>2.5G</td><td>50G</td><td>5T&#x2F;月</td><td>$39.95&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=320">链接</a></strong></td></tr></tbody></table><h3 id="内存3G-8G套餐"><a href="#内存3G-8G套餐" class="headerlink" title="内存3G-8G套餐"></a>内存3G-8G套餐</h3><p>数据中心可选：洛杉矶、圣何塞、达拉斯、芝加哥、新泽西、亚特兰大、纽约、荷兰(阿姆斯特丹)</p><p>VPS特征：KVM虚拟，纯SSD raid10阵列，1Gbps带宽，自带一个IPv4，支持rdns，solusvm面板管理。</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>2核</td><td>3G</td><td>35G</td><td>5T&#x2F;月</td><td>$29.99&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=473">链接</a></strong></td></tr><tr><td>3核</td><td>3.5G</td><td>36G</td><td>5T&#x2F;月</td><td>$30.19&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=125">链接</a></strong></td></tr><tr><td>2核</td><td>3.5G</td><td>60G</td><td>6T&#x2F;月</td><td>$35.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=672">链接</a></strong></td></tr><tr><td>2核</td><td>3.5G</td><td>80G</td><td>10T&#x2F;月</td><td>$38.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=698">链接</a></strong></td></tr><tr><td>3核</td><td>4G</td><td>50G</td><td>10T&#x2F;月</td><td>$45.89&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=474">链接</a></strong></td></tr><tr><td>3核</td><td>4.5G</td><td>100G</td><td>12T&#x2F;月</td><td>$48.77&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=699">链接</a></strong></td></tr><tr><td>4核</td><td>8G</td><td>100G</td><td>5T&#x2F;月</td><td>$89.00&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=312">链接</a></strong></td></tr></tbody></table><h3 id="AMD-NVMe系列便宜VPS套餐"><a href="#AMD-NVMe系列便宜VPS套餐" class="headerlink" title="AMD+NVMe系列便宜VPS套餐"></a>AMD+NVMe系列便宜VPS套餐</h3><p>可选纽约，圣何塞，达拉斯，亚特兰大。特征，kvm虚拟，AMD Ryzen 9 3900X、DDR4、NVMe SSD、1Gbps口带宽，默认一个IPv4，不支持Windows。</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>NVMe</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1核</td><td>512M</td><td>6G</td><td>400G&#x2F;月</td><td>$15&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=302">链接</a></strong></td></tr><tr><td>1核</td><td>1G</td><td>20G</td><td>2T&#x2F;月</td><td>$32&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=303">链接</a></strong></td></tr><tr><td>1核</td><td>1.5G</td><td>22G</td><td>3T&#x2F;月</td><td>$35&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=308">链接</a></strong></td></tr><tr><td>2核</td><td>2.5G</td><td>40G</td><td>6T&#x2F;月</td><td>$69&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=309">链接</a></strong></td></tr></tbody></table><h3 id="AMD-NVME系列windows-vps套餐"><a href="#AMD-NVME系列windows-vps套餐" class="headerlink" title="AMD+NVME系列windows vps套餐"></a>AMD+NVME系列windows vps套餐</h3><p>可选机房洛杉矶，达拉斯，纽约，亚特兰大。</p><p>VPS特征：KVM虚拟，AMD Ryzen 9 3900x+ddr4+NVMe SSD阵列+1Gbps带宽，默认一个IPv4，solusvm管理，windows中英文授权版系统（版本为2012和2016系统）。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>NVMe</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>2G</td><td>1核</td><td>35G</td><td>2T&#x2F;月</td><td>$60&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=700">链接</a></strong></td></tr><tr><td>2.5G</td><td>1核</td><td>40G</td><td>3.5T&#x2F;月</td><td>$69&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=435">链接</a></strong></td></tr><tr><td>3G</td><td>2核</td><td>35G</td><td>3T&#x2F;月</td><td>$78.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=346">链接</a></strong></td></tr><tr><td>3.5G</td><td>2核</td><td>60G</td><td>3.5T&#x2F;月</td><td>$99&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=701">链接</a></strong></td></tr><tr><td>4G</td><td>3核</td><td>60G</td><td>6T&#x2F;月</td><td>$115&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=436">链接</a></strong></td></tr><tr><td>8G</td><td>3核</td><td>150G</td><td>10T&#x2F;月</td><td>$219&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=702">链接</a></strong></td></tr><tr><td>12G</td><td>4核</td><td>160G</td><td>12T&#x2F;月</td><td>$289&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=437">链接</a></strong></td></tr></tbody></table><h3 id="稍大硬盘VPS套餐"><a href="#稍大硬盘VPS套餐" class="headerlink" title="稍大硬盘VPS套餐"></a>稍大硬盘VPS套餐</h3><p>可选机房：圣何塞&#x2F;达拉斯&#x2F;芝加哥&#x2F;新泽西&#x2F;亚特兰大&#x2F;纽约&#x2F;荷兰</p><p><strong>特征</strong>：1Gbps带宽，自带一个IPv4，solusvm管理，硬盘SSD cached，洛杉矶MC机房！</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>硬盘</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>2核</td><td>2G</td><td>50G</td><td>4T&#x2F;月</td><td>$36&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=61">链接</a></strong></td></tr><tr><td>3核</td><td>4G</td><td>80G</td><td>5T&#x2F;月</td><td>$59&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=62">链接</a></strong></td></tr><tr><td>4核</td><td>6G</td><td>140G</td><td>6T&#x2F;月</td><td>$95&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=63">链接</a></strong></td></tr><tr><td>4核</td><td>8G</td><td>100G</td><td>5T&#x2F;月</td><td>$89&#x2F;年</td><td><a href="https://my.racknerd.com/aff.php?aff=1158&pid=312"><strong>链接</strong></a></td></tr><tr><td>4核</td><td>8G</td><td>200G</td><td>8T&#x2F;月</td><td>$135&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=64">链接</a></strong></td></tr></tbody></table><h2 id="4、网络测试"><a href="#4、网络测试" class="headerlink" title="4、网络测试"></a>4、网络测试</h2><p><strong>洛杉矶DC02：</strong> 204.13.154.3，<a href="http://lg-lax02.racknerd.com/1000MB.test">http://lg-lax02.racknerd.com/1000MB.test</a></p><p><strong>洛杉矶DC05：</strong> 5.181.135.8，<a href="http://lg-lax05.racknerd.com/1000MB.test">http://lg-lax05.racknerd.com/1000MB.test</a></p><p><strong>圣何塞：</strong> 192.210.207.88，<a href="http://lg-sj.racknerd.com/1000MB.test">http://lg-sj.racknerd.com/1000MB.test</a></p><p><strong>西雅图：</strong> 192.3.253.2，<a href="http://lg-sea.racknerd.com/1000MB.test">http://lg-sea.racknerd.com/1000MB.test</a></p><p><strong>新泽西：</strong> 192.3.165.30，<a href="http://lg-nj.racknerd.com/1000MB.test">http://lg-nj.racknerd.com/1000MB.test</a></p><p><strong>达拉斯</strong>：198.23.249.100，<a href="http://lg-dal.racknerd.com/1000MB.test">http://lg-dal.racknerd.com/1000MB.test</a></p><p><strong>芝加哥：</strong> 198.23.228.15，<a href="http://lg-chi.racknerd.com/1000MB.test">http://lg-chi.racknerd.com/1000MB.test</a></p><p><strong>阿什本</strong>：107.173.166.10，<a href="http://lg-ash.racknerd.com/1000MB.test">http://lg-ash.racknerd.com/1000MB.test</a></p><p><strong>亚特兰大：</strong> 107.173.164.160，<a href="http://lg-atl.racknerd.com/1000MB.test">http://lg-atl.racknerd.com/1000MB.test</a></p><p><strong>荷兰.阿姆斯特丹：</strong> 23.94.101.88，<a href="http://lg-ams.racknerd.com/1000MB.test">http://lg-ams.racknerd.com/1000MB.test</a></p><p><strong>水牛城：</strong> 192.3.81.8，<a href="http://lg-ny.racknerd.com/1000MB.test">http://lg-ny.racknerd.com/1000MB.test</a></p><h2 id="5、推荐阅读"><a href="#5、推荐阅读" class="headerlink" title="5、推荐阅读"></a>5、推荐阅读</h2><p><a href="https://blog.laoda.de/vps.html">RackNerd 在售机型推荐</a></p><p><a href="https://blog.laoda.de/archives/vps-racknerd">【VPS选购分享】Racknerd——曾经的“四大金刚”，如今的性价比之王</a></p><p><a href="https://blog.laoda.de/archives/cheap-vps-racknerd">【国外便宜高性价比的VPS 推荐】——RackNerd</a></p><p><a href="https://blog.laoda.de/archives/racknerd-easter-2023">2023 - RackNerd 活动汇总 整理帖！附最新复活节活动套餐</a></p><p><a href="https://blog.laoda.de/archives/racknerd-vps-issues">RackNerd（RN）双十一优惠&amp;&amp; RN VPS在售促销特价+流量翻倍+迁移+邮箱+push方法整理</a></p><p><a href="https://blog.laoda.de/archives/racknerd-bf-2022-01?cid=5016">#2022黑五# RackNerd：美国便宜VPS低至$10&#x2F;年～</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://blog.laoda.de/tags/racknerd/&quot;&gt;RackNerd&lt;/a&gt;的洛杉矶优化线路VPS开始促销，具体机房为该商家的洛杉矶DC-02优化线路机房，最低配为$14.99&amp;#x2F;年，配置为1核心&amp;#x2F;1GB内存&amp;#x</summary>
      
    
    
    
    <category term="VPS推荐" scheme="https://blog.laoda.de/categories/VPS%E6%8E%A8%E8%8D%90/"/>
    
    
    <category term="Racknerd" scheme="https://blog.laoda.de/tags/Racknerd/"/>
    
    <category term="美国VPS" scheme="https://blog.laoda.de/tags/%E7%BE%8E%E5%9B%BDVPS/"/>
    
  </entry>
  
  <entry>
    <title>【VPS选购经验分享】可解锁ChatGPT！莱卡云新上线美国三网回程CN2 GIA线路测评</title>
    <link href="https://blog.laoda.de/archives/lca-us-cn2-gia/"/>
    <id>https://blog.laoda.de/archives/lca-us-cn2-gia/</id>
    <published>2023-05-08T15:08:15.473Z</published>
    <updated>2023-05-08T15:11:55.599Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://gao.ee/lca">莱卡云</a>是一家国内正规备案的云服务器商家，隶属于广东莱卡信息技术有限公司，主要从事VPS、虚拟主机等云计算产品业务，目前有香港CN2 GIA，美国CN2 GIA，日本CN2 等线路售卖，之前我们介绍过香港CN2 GIA（相对大陆来说最好的非大陆线路）——<a href="https://blog.laoda.de/archives/vps-lcayun">【VPS选购分享】莱卡云 —— 三网香港CN2 GIA，香港服务器又多了一个选择，可以月付尝鲜～</a>，上一期好玩儿的Docker项目也提到了新上线的美国三网CN2 GIA的线路，这边就来简单测评一下。</p><h2 id="1、机器情况"><a href="#1、机器情况" class="headerlink" title="1、机器情况"></a>1、机器情况</h2><p>咕咕测试的机器基本情况：</p><ul><li>CPU核心：2核</li><li>内存：1G</li><li>硬盘：30G</li><li>带宽：10Mbps</li><li>IP地址：1IPv4</li><li>线路：三网 CN2 GIA</li><li>系统：Debian 11</li></ul><p>购买地址：<a href="https://gao.ee/lca">莱卡云美国三网CN2 GIA服务器</a></p><p><img src="https://img.laoda.de/i/2023/05/08/1142pmz-0.webp" alt="image-20230508224407283"></p><p><img src="https://img.laoda.de/i/2023/05/08/1284ppd-0.webp" alt="image-20230508231135178"></p><p>服务器下行有50M，上传是10M，不适合用来魔法，自带一个快照，非常适合建站或者用来反代尤其是美国的服务器。</p><h2 id="2、IP信息测试"><a href="#2、IP信息测试" class="headerlink" title="2、IP信息测试"></a>2、IP信息测试</h2><p><img src="https://img.laoda.de/i/2023/05/07/j2kwxa-0.webp" alt="image-20230507115317961"></p><h2 id="3、ChatGPT解锁测试"><a href="#3、ChatGPT解锁测试" class="headerlink" title="3、ChatGPT解锁测试"></a>3、ChatGPT解锁测试</h2><p><img src="https://img.laoda.de/i/2023/05/07/ismtrm-0.webp" alt="image-20230507113646273"></p><h2 id="4、三网线路测试"><a href="#4、三网线路测试" class="headerlink" title="4、三网线路测试"></a>4、三网线路测试</h2><h3 id="电信"><a href="#电信" class="headerlink" title="电信"></a>电信</h3><p><img src="https://img.laoda.de/i/2023/05/07/j0b6zs-0.webp" alt="image-20230507114932830"></p><h3 id="联通"><a href="#联通" class="headerlink" title="联通"></a>联通</h3><p><img src="https://img.laoda.de/i/2023/05/07/j0q21d-0.webp"></p><h3 id="移动"><a href="#移动" class="headerlink" title="移动"></a>移动</h3><p><img src="https://img.laoda.de/i/2023/05/07/j0xb1n-0.webp" alt="image-20230507115039401"></p><h3 id="教育网"><a href="#教育网" class="headerlink" title="教育网"></a>教育网</h3><p><img src="https://img.laoda.de/i/2023/05/07/j1bhky-0.webp" alt="image-20230507115104896"></p><h2 id="5、Ping值测试"><a href="#5、Ping值测试" class="headerlink" title="5、Ping值测试"></a>5、Ping值测试</h2><h3 id="国内"><a href="#国内" class="headerlink" title="国内"></a>国内</h3><p><img src="https://img.laoda.de/i/2023/05/07/j1x1al-0.webp" alt="image-20230507115205743"></p><h3 id="海外"><a href="#海外" class="headerlink" title="海外"></a>海外</h3><p><img src="https://img.laoda.de/i/2023/05/07/j2018r-0.webp" alt="image-20230507115218823"></p><h2 id=""><a href="#" class="headerlink" title=""></a></h2><h2 id="6、抖动、丢包情况（晚上10-49分-晚高峰）"><a href="#6、抖动、丢包情况（晚上10-49分-晚高峰）" class="headerlink" title="6、抖动、丢包情况（晚上10:49分 晚高峰）"></a>6、抖动、丢包情况（晚上10:49分 晚高峰）</h2><p><img src="https://img.laoda.de/i/2023/05/08/117urop-0.webp" alt="img_ObWlK3s2"></p><h2 id="7、总结"><a href="#7、总结" class="headerlink" title="7、总结"></a>7、总结</h2><p>总体来说还是不错的，这个机器最看重的就是线路，三网回程CN2 GIA，属于顶级线路（电信双程CN2，联通回程CN2，去程骨干直连，移动回程CN2，去程CMI），晚高峰也不会卡顿，舒服的一匹，CPU一般，磁盘IO也还行，自带一个快照，非常适合建站或者做反向代理服务器。</p><p>不适合富强的用户！</p><h2 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h2><p><a href="https://blog.laoda.de/vps.html">VPS在售推荐</a></p><p><a href="https://blog.laoda.de/archives/vps-choose">VPS服务器选购不完全指南</a></p><p><a href="https://blog.laoda.de/archives/cn2">【VPS各种线路】如何分辨CN2 GIA与CN2 GT？</a></p><p><a href="https://blog.laoda.de/archives/vps-lcayun">【VPS选购分享】莱卡云 —— 三网香港CN2 GIA，香港服务器又多了一个选择，可以月付尝鲜～</a></p><p><a href="https://blog.laoda.de/archives/vps-route">【VPS选购小常识】VPS线路解析不完全指南 什么是CN2 GIA？什么是AS9929、AS4837？什么是CU VIP？什么是移动CMI？如何判断回程路由？</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://gao.ee/lca&quot;&gt;莱卡云&lt;/a&gt;是一家国内正规备案的云服务器商家，隶属于广东莱卡信息技术有限公司，主要从事VPS、虚拟主机等云计算产品业务，目前有香港CN2 GIA，美国CN2 GIA，日本CN2 等线路售卖，之前我们介绍过香港CN2</summary>
      
    
    
    
    <category term="VPS推荐" scheme="https://blog.laoda.de/categories/VPS%E6%8E%A8%E8%8D%90/"/>
    
    
    <category term="美国VPS" scheme="https://blog.laoda.de/tags/%E7%BE%8E%E5%9B%BDVPS/"/>
    
    <category term="CN2 GIA" scheme="https://blog.laoda.de/tags/CN2-GIA/"/>
    
    <category term="香港VPS" scheme="https://blog.laoda.de/tags/%E9%A6%99%E6%B8%AFVPS/"/>
    
    <category term="莱卡云" scheme="https://blog.laoda.de/tags/%E8%8E%B1%E5%8D%A1%E4%BA%91/"/>
    
  </entry>
  
  <entry>
    <title>【好玩儿的Docker项目】随时随地访问你的VPS！Sshwifty——一款专为Web设计的SSH和Telnet连接器</title>
    <link href="https://blog.laoda.de/archives/docker-compose-install-sshwifty/"/>
    <id>https://blog.laoda.de/archives/docker-compose-install-sshwifty/</id>
    <published>2023-05-08T14:02:57.481Z</published>
    <updated>2023-05-08T15:15:11.838Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>咕咕咕咕，我也是你的老粉丝了，从b站追到油管，很感谢你的教程，跟着你玩了很多有意思的docker项目。请问可不可以出一期docker webssh的教程呀，就是搭建网页版ssh工具，毕竟网页版更方便，有的电脑没装putty和finalshell。</p></blockquote><p>最近小伙伴@风雪纸鸢 反馈想要搞个方便SSH的工具，其实Mac（或者Linux）是直接可以用系统的终端（terminal）来进行SSH的，但是考虑到看咕咕博客的小伙伴还是以Windows系统居多，</p><p><img src="https://img.laoda.de/i/2023/05/06/r2pb6z-0.webp" alt="image-20230506163711113"></p><p>而且有时候电脑不在身边，可能也会有用手机来登录服务器的需求，咕咕决定还是来水一个教程。</p><blockquote><p>什么是SSH？</p><p>SSH（Secure Shell）是一种网络协议，用于安全地远程登录到计算机系统。它提供了加密的通信和身份验证，因此可以在不安全的网络上安全地传输数据。通过SSH，您可以远程连接到运行SSH服务器的计算机，并使用远程终端访问该计算机的命令行界面。SSH协议支持密码和公钥认证，您可以使用密码和用户名对远程服务器进行身份验证，或者使用公钥认证机制来更加安全地完成身份验证。SSH协议是Linux系统中非常重要的一个组件，尤其是在远程管理服务器时，SSH可以保障管理的安全性和可靠性。</p></blockquote><p>简单来说，就是你可以通过SSH来远程登录到你的Linux服务器。（类似的如果是Windows的话，咕咕推荐用的是 Microsoft Remote Desktop）</p><h2 id="1-Sshwifty简单介绍"><a href="#1-Sshwifty简单介绍" class="headerlink" title="1. Sshwifty简单介绍"></a>1. Sshwifty简单介绍</h2><p><img src="https://img.laoda.de/i/2023/05/02/oxutah-0.webp" alt="image-20230502150802907"></p><p>Sshwifty是一款专为Web设计的SSH和Telnet连接器。它可以部署在您的计算机或服务器上，为任何兼容（标准）的Web浏览器提供SSH和Telnet访问界面。</p><p><img src="https://img.laoda.de/i/2023/05/06/rbqz7o-0.webp" alt="80ecb8fccea8e6d12e28deb45cfc6669.png"></p><p>为什么你需要一个这个玩意儿呢？其实对于咕咕来说，还挺有用的，因为服务器多，有的服务器从国内访问线路很垃圾，如果用的本地的SSH，容易断连，非常影响心情，现在如果用一台对国内线路比较好一点的机器搭建（比如说之前旧款的<a href="https://loll.cc/tx">腾讯云香港轻量</a>或者之前介绍过的<a href="https://gao.ee/lca">莱卡云香港CN2 GIA</a> ），然后一般这个机器到你原来本地线路垃圾的服务器之间的线路会好很多，这样你再SSH登录，就不卡了！（有点<a href="https://blog.laoda.de/archives/nginxproxymanager">反向代理</a>的味道在里面）</p><p><a href="https://gao.ee/lca">莱卡云美国CN2 GIA</a>购买地址：<a href="https://gao.ee/lca">https://gao.ee/lca</a></p><p><img src="https://img.laoda.de/i/2023/05/08/1296g6q-0.webp" alt="image-20230508231311759"></p><p>机房位置在美国zenlayer数据中心，三网CN2优化线路，大陆访问快速响应，支持<a href="https://blog.laoda.de/archives/chatgpt-plus-depay">ChatGPT</a> 。</p><p><img src="https://img.laoda.de/i/2023/05/07/ismtrm-0.webp" alt="image-20230507113646273"></p><p>测评后续放出。</p><p>测评：<a href="https://blog.laoda.de/archives/lca-us-cn2-gia">【VPS选购经验分享】可解锁ChatGPT！莱卡云新上线美国三网回程CN2 GIA线路测评</a></p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p>直接丢几个图：</p><p><img src="https://img.laoda.de/i/2023/05/02/oz1611-0.webp" alt="image-20230502151000790"></p><p>填入你服务器的<code>IP:SSH端口</code>，用户名等信息：</p><p><img src="https://img.laoda.de/i/2023/05/02/ozue9x-0.webp" alt="image-20230502151137584"></p><p>同意！<br><img src="https://img.laoda.de/i/2023/05/02/p09wwt-0.webp" alt="image-20230502151210223"></p><p>输入服务器密码：</p><p><img src="https://img.laoda.de/i/2023/05/02/p0eolj-0.webp" alt="image-20230502151232423"></p><p>成功连接！</p><p><img src="https://img.laoda.de/i/2023/05/02/p0t5m7-0.webp" alt="image-20230502151300152"></p><p>还可以查看延时：</p><p><img src="https://img.laoda.de/i/2023/05/02/p0x966-0.webp" alt="image-20230502151319150"></p><p>查看授信的服务（这些都是在你的本地浏览器端的，并不会泄漏你的服务器信息）：</p><p><img src="https://img.laoda.de/i/2023/05/02/p1jov0-0.webp" alt="image-20230502151423770"></p><p>还可以改变字体大小：</p><p><img src="https://img.laoda.de/i/2023/05/02/p1pc3c-0.webp" alt="image-20230502151449135"></p><p><img src="https://img.laoda.de/i/2023/05/02/p2te03-0.webp" alt="image-20230502151635926"></p><p><img src="https://img.laoda.de/i/2023/05/06/rboc65-0.webp" alt="image-20230502151731968"></p><p>大致就这些了，主要就用一下登录功能其实，更多细节大家可以自行尝试。</p><p>官方演示 Demo: <a href="https://sshwifty-demo.nirui.org/">https://sshwifty-demo.nirui.org</a><br>咕咕的Demo：<a href="https://webssh.gugu.ovh/">https://webssh.gugu.ovh</a><br>Docker镜像地址：<a href="https://hub.docker.com/r/niruix/sshwifty">https://hub.docker.com/r/niruix/sshwifty</a><br>GitHub官方地址：<a href="https://github.com/nirui/sshwifty">https://github.com/nirui/sshwifty</a></p><p>你其实可以直接使用官方的demo，但是可能官方demo你访问起来也卡，我们今天是来折腾的，就搭建一个真正属于自己的这个应用！</p><h2 id="3-快速开始"><a href="#3-快速开始" class="headerlink" title="3. 快速开始"></a>3. 快速开始</h2><p>这边直接丢出核心的 <code>docker-compose.yaml</code> 文件，熟悉 docker 环境的老伙伴儿们可以直接拷贝搭建！</p><p>sshwifty 部署：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">sshwifty:</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;8090:8182&#x27;</span>             <span class="comment"># 8090可以改成任意服务器没有使用过的端口，8182不要修改</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">sshwifty</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">&#x27;niruix/sshwifty:latest&#x27;</span></span><br></pre></td></tr></table></figure><p>没有看错，就是这么简短，而且并没有文件夹映射到服务器上。</p><p>以下是服务器部署的详细搭建教程。</p><h2 id="4-搭建环境"><a href="#4-搭建环境" class="headerlink" title="4. 搭建环境"></a>4. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器 24 元 &#x2F; 月 VPS 一台</del> 咕咕自己搭建用的是硅谷的<a href="https://loll.cc/tx">腾讯轻量应用服务器</a> ，（这次最好选 非大陆的，而且线路还不错的机器）如果是小白刚开始玩的话，也可以选择 <a href="https://gao.ee/lca">莱卡云 美国CN2 GIA</a> 的服务器，（莱卡云服务器介绍：<a href="https://blog.laoda.de/archives/vps-lcayun">点击查看</a>）或者<a href="https://blog.laoda.de/vps.html">Racknerd</a>的玩具服务器（注意地区选美国西部城市的）</li><li>系统：Debian 11 （<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD 脚本</a> 非必需 DD，用原来的系统也 OK，之后教程都是用 Debian 或者 Ubuntu 搭建～）</li><li>安装好 Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需但建议】域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>【非必需】提前安装好宝塔面板海外版本 aapanel，并安装好 Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程选用】安装好 Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><blockquote><p>服务器要求：内存建议1G，能安装Docker即可～</p></blockquote><h2 id="5-搭建视频"><a href="#5-搭建视频" class="headerlink" title="5. 搭建视频"></a>5. 搭建视频</h2><h3 id="5-1-YouTube："><a href="#5-1-YouTube：" class="headerlink" title="5.1 YouTube："></a>5.1 YouTube：</h3><p>视频地址：<a href="https://youtu.be/8ajRc7EyQnE">https://youtu.be/8ajRc7EyQnE</a></p><h3 id="5-2-哔哩哔哩"><a href="#5-2-哔哩哔哩" class="headerlink" title="5.2 哔哩哔哩"></a>5.2 哔哩哔哩</h3><p>哔哩哔哩【高清版本可以点击去吐槽到 B 站观看】：<joe-bilibili bvid="BV1ko4y1c7NQ"></joe-bilibili></p><h2 id="6-搭建方式"><a href="#6-搭建方式" class="headerlink" title="6. 搭建方式"></a>6. 搭建方式</h2><p>如果你不是用的腾讯云的轻量应用服务器，可以直接跳到 6.1 部分。</p><h3 id="安装系统（腾讯云轻量应用服务器）"><a href="#安装系统（腾讯云轻量应用服务器）" class="headerlink" title="安装系统（腾讯云轻量应用服务器）"></a>安装系统（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlyhcz-2.webp" alt="e59713fba8726d3cb55ae11bca83fe3c.png"></p><p>腾讯云轻量服务器最大的特点就是 “轻量”，相比 CVM，更适合小白上手，这边我们之间选择 Docker 基础镜像，就可以省去后面安装 Docker 的步骤 <del>（如果你非要用国内的服务器，这边装的 Docker 镜像还会帮你配置好国内镜像源，让你加速访问 docker 镜像资源）</del> 不要用国内的 。</p><h3 id="登陆（腾讯云轻量应用服务器）"><a href="#登陆（腾讯云轻量应用服务器）" class="headerlink" title="登陆（腾讯云轻量应用服务器）"></a>登陆（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlzlj7-2.webp" alt="2722040ee311eb4a9ebf2a4945bf38f4.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm0gv8-2.webp" alt="c0b5d360053746c4095d592967ee401f.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm1vqw-2.webp" alt="e0ba858f021b846ad0abc27acf5008c2.png"></p><h3 id="6-1-安装-Docker-与-Nginx-Proxy-Manager"><a href="#6-1-安装-Docker-与-Nginx-Proxy-Manager" class="headerlink" title="6.1 安装 Docker 与 Nginx Proxy Manager"></a>6.1 安装 Docker 与 Nginx Proxy Manager</h3><p>可以直接参考这篇内容：</p><p><a href="https://blog.laoda.de/archives/nginxproxymanager">https://blog.laoda.de/archives/nginxproxymanager</a></p><h3 id="6-2-创建安装目录"><a href="#6-2-创建安装目录" class="headerlink" title="6.2 创建安装目录"></a>6.2 创建安装目录</h3><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/sshwifty</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/sshwifty</span><br></pre></td></tr></table></figure><p>这边我们直接用 docker 的方式安装。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure><p>英文输入法下，按 <code>i</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">sshwifty:</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;8090:8182&#x27;</span>             <span class="comment"># 8090可以改成任意服务器没有使用过的端口，8182不要修改</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">sshwifty</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">&#x27;niruix/sshwifty:latest&#x27;</span></span><br></pre></td></tr></table></figure><p>修改好之后，注意切换成英文输入法，然后按一下 <code>esc</code>，然后 <code>:wq</code> 保存退出。</p><h3 id="6-3-打开服务器防火墙（非必需）并访问网页"><a href="#6-3-打开服务器防火墙（非必需）并访问网页" class="headerlink" title="6.3 打开服务器防火墙（非必需）并访问网页"></a>6.3 打开服务器防火墙（非必需）并访问网页</h3><p>打开防火墙的端口 <code>8090</code></p><p>举例，腾讯云打开方法如下（部分服务商没有自带的面板防火墙，就不用这步操作了）：</p><img src="https://img.laoda.de/i/2022/06/30/zlio5h-2.webp" alt="image-20220630215240864" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/06/30/10h3dqt-2.webp" alt="image-20220630220546335" style="zoom:33%;" /><p>图中示例填的是 <code>5230</code>，备注填的是 <code>memos</code>，这边我们填 <code>8090</code>，示例填 <code>sshwifty</code> ，确定即可（如果你在 docker-compose 文件里换了 <code>9009</code>，这边就需要填 <code>9009</code>，以此类推）</p><img src="https://img.laoda.de/i/2022/08/19/o4byqz-2.webp" alt="image-20220819145844555" style="zoom:33%;" /><p>查看端口是否被占用（以 <code>8090</code> 为例），输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:8090  <span class="comment">#查看 8090 端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果啥也没出现，表示端口未被占用，我们可以继续下面的操作了～</p><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装 lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用（被占用了就修改一下端口，比如改成 <code>8081</code>，注意 docker 命令行里和防火墙都要改）</p><p>最后：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/sshwifty    <span class="comment"># 来到 dockercompose 文件所在的文件夹下</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>理论上我们就可以输入 <code>http://ip:8090</code> 访问安装了。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器 IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的 IP。</p><p>2、遇到访问不了的情况，请再次检查在宝塔面板的防火墙和服务商的后台防火墙是否打开对应了端口。</p></blockquote><p>有的小伙伴可能想搭建起来分享给其他人使用，如果后续想要分享给别人，IP + 端口太不优雅了，而且这个涉及到密码的，还是非常需要做https的！会让网页更安全！</p><p> <a href="https://loll.cc/ns">namesilo</a> 上面 xyz 后缀的域名一年就 7 块钱，可以年抛。（冷知识，namesilo上 6位数字的xyz续费永远都是0.99美元 &#x3D; &#x3D;）</p><p>如果想要长期使用，还是建议买 com 后缀的域名，更加正规一些，可以输入 <code>laodade</code> 来获得 1 美元的优惠（不知道现在还有没有）</p><p><a href="https://loll.cc/ns">namesilo</a> 自带隐私保护，咕咕一直在用这家，价格也是这些注册商里面比较低的，关键是他家不像其他家域名注册商，没有七七八八的套路！（就是后台界面有些<del>丑</del> 古老 &#x3D; &#x3D;）</p><p><a href="https://blog.laoda.de/archives/namesilo">【域名购买】Namesilo 优惠码和域名解析教程（附带服务器购买推荐和注意事项）</a></p><p>我们接着往下看！</p><h3 id="6-4-更新-sshwifty"><a href="#6-4-更新-sshwifty" class="headerlink" title="6.4 更新 sshwifty"></a>6.4 更新 sshwifty</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/sshwifty</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/sshwifty /root/data/docker_data/sshwifty.archive  <span class="comment"># 万事先备份，以防万一</span></span><br><span class="line"></span><br><span class="line">docker-compose pull</span><br><span class="line"></span><br><span class="line">docker-compose up -d    <span class="comment"># 请不要使用 docker-compose stop 来停止容器，因为这么做需要额外的时间等待容器停止；docker-compose up -d 直接升级容器时会自动停止并立刻重建新的容器，完全没有必要浪费那些时间。</span></span><br><span class="line"></span><br><span class="line">docker image prune  <span class="comment"># prune 命令用来删除不再使用的 docker 对象。删除所有未被 tag 标记和未被容器使用的镜像</span></span><br></pre></td></tr></table></figure><p>提示：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WARNING! This will remove all dangling images.</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] </span><br></pre></td></tr></table></figure><p>输入 <code>y</code></p><p>利用 Docker 搭建的应用，更新非常容易～</p><h3 id="6-5-卸载-sshwifty"><a href="#6-5-卸载-sshwifty" class="headerlink" title="6.5 卸载 sshwifty"></a>6.5 卸载 sshwifty</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/sshwifty</span><br><span class="line"></span><br><span class="line">docker-compose down</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/sshwifty  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>可以卸载得很干净。</p><h2 id="7-反向代理"><a href="#7-反向代理" class="headerlink" title="7. 反向代理"></a>7. 反向代理</h2><p>我们要用域名而不是IP+端口的方式来访问我们的服务！</p><h3 id="7-1-利用-Nginx-Proxy-Manager"><a href="#7-1-利用-Nginx-Proxy-Manager" class="headerlink" title="7.1 利用 Nginx Proxy Manager"></a>7.1 利用 Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p><img src="https://img.laoda.de/i/2022/10/16/n6t02e-2.webp" alt="image-20221016140213282"></p><p>之后，登陆 Nginx Proxy Manager（不会的看这个：<strong>安装 Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称 NPM）会用到 <code>80</code>、<code>443</code> 端口，所以本机不能占用（比如原来就有 Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom: 33%;" /><img src="https://img.laoda.de/i/2023/05/08/itr6ch-0.webp" alt="image-20230403155113921" style="zoom:50%;" /><p>记得要打开NPM的<code>websocket support</code> !</p><blockquote><p> 注意填写对应的 <code>域名</code>、<code>IP</code> 和 <code>端口</code>，按文章来的话，应该是 <code>8090</code></p></blockquote><p><strong>IP 填写：</strong></p><p>如果 Nginx Proxy Manager 和 sshwifty 在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的 Docker 容器内部 IP。</p><p><img src="https://img.laoda.de/i/2022/09/29/pcdnz5-2.webp"></p><p>否则直接填 <code>sshwifty</code> 所在的服务器 IP 就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom: 33%;" /><p>再次打开，勾选这些：</p><p><img src="https://img.laoda.de/i/2022/10/16/n7nn6e-2.webp" alt="image-20221016140356324"></p><p>然后就可以用域名来安装访问了。</p><h3 id="7-2-利用宝塔面板"><a href="#7-2-利用宝塔面板" class="headerlink" title="7.2 利用宝塔面板"></a>7.2 利用宝塔面板</h3><p>发现还是有不少小伙伴习惯用宝塔面板，这边也贴一个宝塔面板的反代配置：</p><p>直接新建一个站点，不要数据库，不要 php，纯静态即可。</p><p>然后打开下面的配置，修改 Nginx 的配置。</p><p><img src="https://img.laoda.de/i/2022/08/19/ov4xrt-2.webp" alt="image-20220819150345725"></p><p><img src="https://img.laoda.de/i/2022/08/19/owbbkb-2.webp" alt="image-20220819150542867"></p><p>代码如下：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:8090/;       <span class="comment"># 注意改成你实际使用的端口</span></span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此方法对 90% 的反向代理都能生效，然后就可以用域名来安装访问了。</p><p>有同学可能会问，为什么不直接用宝塔自带的反向代理功能。</p><p><img src="https://img.laoda.de/i/2022/08/19/oxf800-2.webp" alt="image-20220819150730128"></p><p>也可以，不过咕咕自己之前遇到过当有多个网站需要反代的时候，在这边设置会报错的情况 &#x3D; &#x3D; </p><p>所以后来就不用了，直接用上面的方法来操作了。</p><h2 id="8-使用教程"><a href="#8-使用教程" class="headerlink" title="8. 使用教程"></a>8. 使用教程</h2><p>前面已经展示过了！这边等录视频的时候可以再说说，大家自己摸索一下！</p><h2 id="9-待完善的地方"><a href="#9-待完善的地方" class="headerlink" title="9. 待完善的地方"></a>9. 待完善的地方</h2><p>暂无</p><h2 id="10-结尾"><a href="#10-结尾" class="headerlink" title="10. 结尾"></a>10. 结尾</h2><p>祝大家用得开心，有问题可以去 GitHub 提 <a href="https://github.com/nirui/sshwifty/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，有能力给项目做贡献的同学，也欢迎积极加入到 <a href="https://github.com/nirui/sshwifty">项目</a> 中来，贡献自己的一份力量！</p><p>最后，感谢开发人员们的辛苦付出，让我们能用到这么优秀的项目！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>官方演示 Demo: sshwifty-demo.nirui.org<br>Docker镜像地址：<a href="https://hub.docker.com/r/niruix/sshwifty">https://hub.docker.com/r/niruix/sshwifty</a><br>GitHub官方地址：<a href="https://github.com/nirui/sshwifty">https://github.com/nirui/sshwifty</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;咕咕咕咕，我也是你的老粉丝了，从b站追到油管，很感谢你的教程，跟着你玩了很多有意思的docker项目。请问可不可以出一期docker webssh的教程呀，就是搭建网页版ssh工具，毕竟网页版更方便，有的电脑没装putty和finalshell。&lt;</summary>
      
    
    
    
    <category term="Docker系列" scheme="https://blog.laoda.de/categories/Docker%E7%B3%BB%E5%88%97/"/>
    
    <category term="有用的小知识" scheme="https://blog.laoda.de/categories/Docker%E7%B3%BB%E5%88%97/%E6%9C%89%E7%94%A8%E7%9A%84%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="SSH中断" scheme="https://blog.laoda.de/tags/SSH%E4%B8%AD%E6%96%AD/"/>
    
    <category term="SSH" scheme="https://blog.laoda.de/tags/SSH/"/>
    
    <category term="远程访问" scheme="https://blog.laoda.de/tags/%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE/"/>
    
  </entry>
  
  <entry>
    <title>RackNerd VPS自助IPv4更换功能正式上线，72小时内更换免费！</title>
    <link href="https://blog.laoda.de/archives/racknerd-free-ipv4-replacement-within-72-hours/"/>
    <id>https://blog.laoda.de/archives/racknerd-free-ipv4-replacement-within-72-hours/</id>
    <published>2023-04-30T04:37:57.305Z</published>
    <updated>2023-04-30T04:38:23.414Z</updated>
    
    <content type="html"><![CDATA[<p>首先祝小伙伴们劳动节快乐！最近咕咕比较忙，等空下来马上继续和大家分享好玩的项目 &#x3D; &#x3D; </p><p>今天在路上刷tg的时候看到RackNerd VPS自助IPv4更换功能正式上线了，这对一些小伙伴来说绝对是一个好消息，就来水一篇文章～</p><p>操作非常简单，只需要到你的用户后台，点击你需要更换的VPS，在左边有一个”Change IP”的选项 (如图)，点击后按照说明操作即可。</p><p><img src="https://img.laoda.de/i/2023/04/30/k75u2w-0.webp" alt="IMG_7407"></p><ul><li>VPS如果是3天内 (购买后72小时内)，更换IP是免费的，系统不会生成账单；</li><li>VPS如果是购买后72小时需要更换IP的，系统会生成一个$3的一次性付费账单，支付后系统会自动更换IP。</li></ul><blockquote><p>注意：如果您有工单（ticket）是OPEN的状态，更换IP的按钮是不可用的，必须先关闭工单。</p></blockquote><h2 id="1、官网"><a href="#1、官网" class="headerlink" title="1、官网"></a>1、官网</h2><p><strong>官方网站：<a href="https://my.racknerd.com/aff.php?aff=1158">https://www.racknerd.com</a></strong></p><p><strong>Racknerd相关介绍：</strong> <a href="https://blog.laoda.de/archives/vps-racknerd">【VPS选购分享】Racknerd——曾经的“四大金刚”，如今的性价比之王</a></p><p>以下是racknerd目前的促销便宜VPS，可以围观。</p><p><a href="https://blog.laoda.de/vps.html">RackNerd 在售机型推荐</a></p><h2 id="2、复活节促销VPS"><a href="#2、复活节促销VPS" class="headerlink" title="2、复活节促销VPS"></a>2、复活节促销VPS</h2><p>VPS特征：KVM虚拟，纯SSD raid10阵列，1Gbps带宽，自带一个IPv4，支持rdns，solusvm面板管理。可选节点为西雅图&#x2F;圣何塞&#x2F;达拉斯&#x2F;芝加哥&#x2F;新泽西&#x2F;亚特兰大&#x2F;纽约。</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1核</td><td>840M</td><td>10G</td><td>1T&#x2F;月</td><td>$10.78&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=766">链接</a></strong></td></tr><tr><td>1核</td><td>1.2G</td><td>30G</td><td>3T&#x2F;月</td><td>$14.98&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=767">链接</a></strong></td></tr><tr><td>2核</td><td>2G</td><td>45G</td><td>5T&#x2F;月</td><td>$21.98&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=768">链接</a></strong></td></tr><tr><td>3核</td><td>5G</td><td>100G</td><td>10T&#x2F;月</td><td>$58.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=769">链接</a></strong></td></tr></tbody></table><p><strong>以下是往期促销，还可以买！</strong></p><h2 id="2、2023年元旦-中国春节促销"><a href="#2、2023年元旦-中国春节促销" class="headerlink" title="2、2023年元旦+中国春节促销"></a>2、2023年元旦+中国春节促销</h2><p>VPS特征：KVM虚拟，纯SSD raid10阵列，1Gbps带宽，自带一个IPv4，支持rdns，solusvm面板管理。</p><p>可选节点为洛杉矶DC-02, 芝加哥, 达拉斯, 新泽西, 亚特兰大, 圣何塞, 西雅图, 纽约。</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1核</td><td>512M</td><td>10G</td><td>1.5T&#x2F;月</td><td>$10.18&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=734">链接</a></strong></td></tr><tr><td>1核</td><td>1G</td><td>25G</td><td>4T&#x2F;月</td><td>$12.98&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=735">链接</a></strong></td></tr><tr><td>2核</td><td>2.5G</td><td>45G</td><td>6T&#x2F;月</td><td>$24.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=736">链接</a></strong></td></tr><tr><td>4核</td><td>4G</td><td>70G</td><td>10T&#x2F;月</td><td>$46.68&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=737">链接</a></strong></td></tr></tbody></table><h2 id="3、其他年付10美元左右VPS"><a href="#3、其他年付10美元左右VPS" class="headerlink" title="3、其他年付10美元左右VPS"></a>3、其他年付10美元左右VPS</h2><p>数据中心可选：洛杉矶、圣何塞、达拉斯、芝加哥、新泽西、亚特兰大、纽约、荷兰(阿姆斯特丹)</p><p>VPS特征：KVM虚拟，纯SSD raid10阵列，1Gbps带宽，自带一个IPv4，支持rdns，solusvm面板管理。</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1核</td><td>768M</td><td>10G</td><td>1T&#x2F;月</td><td>$10.28&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=695">链接</a></strong></td></tr><tr><td>1核</td><td>768M</td><td>10G</td><td>2T&#x2F;月</td><td>$11.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=679">链接</a></strong></td></tr><tr><td>1核</td><td>1G</td><td>16G</td><td>3T&#x2F;月</td><td>$14.98&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=680">链接</a></strong></td></tr><tr><td>1核</td><td>1.2G</td><td>18G</td><td>2T&#x2F;月</td><td>$14.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=670">链接</a></strong></td></tr><tr><td>1核</td><td>1.5G</td><td>30G</td><td>3T&#x2F;月</td><td>$16.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=696">链接</a></strong></td></tr></tbody></table><h2 id="4、年付60刀-5个ipv4"><a href="#4、年付60刀-5个ipv4" class="headerlink" title="4、年付60刀 - 5个ipv4"></a>4、年付60刀 - 5个ipv4</h2><p>默认配置5个ipv4。</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1核</td><td>1.5G</td><td>20G</td><td>3T&#x2F;月</td><td>$60&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=563">链接</a></strong></td></tr></tbody></table><h2 id="5、内存1-5G-2-5G套餐"><a href="#5、内存1-5G-2-5G套餐" class="headerlink" title="5、内存1.5G-2.5G套餐"></a>5、内存1.5G-2.5G套餐</h2><p>数据中心可选：洛杉矶、圣何塞、达拉斯、芝加哥、新泽西、亚特兰大、纽约、荷兰(阿姆斯特丹)</p><p>VPS特征：KVM虚拟，纯SSD raid10阵列，1Gbps带宽，自带一个IPv4，支持rdns，solusvm面板管理。</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1核</td><td>1.5G</td><td>30G</td><td>3T&#x2F;月</td><td>$25.95&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=319">链接</a></strong></td></tr><tr><td>2核</td><td>2G</td><td>25G</td><td>4T&#x2F;月</td><td>$20.98&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=681">链接</a></strong></td></tr><tr><td>2核</td><td>2G</td><td>35G</td><td>4T&#x2F;月</td><td>$38.78&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=280">链接</a></strong></td></tr><tr><td>2核</td><td>2.5G</td><td>40G</td><td>3T&#x2F;月</td><td>$25.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=671">链接</a></strong></td></tr><tr><td>2核</td><td>2.5G</td><td>60G</td><td>7T&#x2F;月</td><td>$28.55&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=697">链接</a></strong></td></tr><tr><td>2核</td><td>2.5G</td><td>40G</td><td>5T&#x2F;月</td><td>$29.50&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=211">链接</a></strong></td></tr><tr><td>2核</td><td>2.5G</td><td>50G</td><td>5T&#x2F;月</td><td>$39.95&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=320">链接</a></strong></td></tr></tbody></table><h2 id="6、内存3G-8G套餐"><a href="#6、内存3G-8G套餐" class="headerlink" title="6、内存3G-8G套餐"></a>6、内存3G-8G套餐</h2><p>数据中心可选：洛杉矶、圣何塞、达拉斯、芝加哥、新泽西、亚特兰大、纽约、荷兰(阿姆斯特丹)</p><p>VPS特征：KVM虚拟，纯SSD raid10阵列，1Gbps带宽，自带一个IPv4，支持rdns，solusvm面板管理。</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>2核</td><td>3G</td><td>35G</td><td>5T&#x2F;月</td><td>$29.99&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=473">链接</a></strong></td></tr><tr><td>3核</td><td>3.5G</td><td>36G</td><td>5T&#x2F;月</td><td>$30.19&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=125">链接</a></strong></td></tr><tr><td>2核</td><td>3.5G</td><td>60G</td><td>6T&#x2F;月</td><td>$35.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=672">链接</a></strong></td></tr><tr><td>2核</td><td>3.5G</td><td>80G</td><td>10T&#x2F;月</td><td>$38.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=698">链接</a></strong></td></tr><tr><td>3核</td><td>4G</td><td>50G</td><td>10T&#x2F;月</td><td>$45.89&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=474">链接</a></strong></td></tr><tr><td>3核</td><td>4.5G</td><td>100G</td><td>12T&#x2F;月</td><td>$48.77&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=699">链接</a></strong></td></tr><tr><td>4核</td><td>8G</td><td>100G</td><td>5T&#x2F;月</td><td>$89.00&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=312">链接</a></strong></td></tr></tbody></table><h2 id="7、AMD-NVMe系列便宜VPS套餐"><a href="#7、AMD-NVMe系列便宜VPS套餐" class="headerlink" title="7、AMD+NVMe系列便宜VPS套餐"></a>7、AMD+NVMe系列便宜VPS套餐</h2><p>可选纽约，圣何塞，达拉斯，亚特兰大。特征，kvm虚拟，AMD Ryzen 9 3900X、DDR4、NVMe SSD、1Gbps口带宽，默认一个IPv4，不支持Windows。</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>NVMe</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1核</td><td>512M</td><td>6G</td><td>400G&#x2F;月</td><td>$15&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=302">链接</a></strong></td></tr><tr><td>1核</td><td>1G</td><td>20G</td><td>2T&#x2F;月</td><td>$32&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=303">链接</a></strong></td></tr><tr><td>1核</td><td>1.5G</td><td>22G</td><td>3T&#x2F;月</td><td>$35&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=308">链接</a></strong></td></tr><tr><td>2核</td><td>2.5G</td><td>40G</td><td>6T&#x2F;月</td><td>$69&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=309">链接</a></strong></td></tr></tbody></table><h2 id="8、AMD-NVME系列windows-vps套餐"><a href="#8、AMD-NVME系列windows-vps套餐" class="headerlink" title="8、AMD+NVME系列windows vps套餐"></a>8、AMD+NVME系列windows vps套餐</h2><p>可选机房洛杉矶，达拉斯，纽约，亚特兰大。</p><p>VPS特征：KVM虚拟，AMD Ryzen 9 3900x+ddr4+NVMe SSD阵列+1Gbps带宽，默认一个IPv4，solusvm管理，windows中英文授权版系统（版本为2012和2016系统）。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>NVMe</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>2G</td><td>1核</td><td>35G</td><td>2T&#x2F;月</td><td>$60&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=700">链接</a></strong></td></tr><tr><td>2.5G</td><td>1核</td><td>40G</td><td>3.5T&#x2F;月</td><td>$69&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=435">链接</a></strong></td></tr><tr><td>3G</td><td>2核</td><td>35G</td><td>3T&#x2F;月</td><td>$78.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=346">链接</a></strong></td></tr><tr><td>3.5G</td><td>2核</td><td>60G</td><td>3.5T&#x2F;月</td><td>$99&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=701">链接</a></strong></td></tr><tr><td>4G</td><td>3核</td><td>60G</td><td>6T&#x2F;月</td><td>$115&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=436">链接</a></strong></td></tr><tr><td>8G</td><td>3核</td><td>150G</td><td>10T&#x2F;月</td><td>$219&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=702">链接</a></strong></td></tr><tr><td>12G</td><td>4核</td><td>160G</td><td>12T&#x2F;月</td><td>$289&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=437">链接</a></strong></td></tr></tbody></table><h2 id="9、稍大硬盘VPS套餐"><a href="#9、稍大硬盘VPS套餐" class="headerlink" title="9、稍大硬盘VPS套餐"></a>9、稍大硬盘VPS套餐</h2><p>可选机房：圣何塞&#x2F;达拉斯&#x2F;芝加哥&#x2F;新泽西&#x2F;亚特兰大&#x2F;纽约&#x2F;荷兰</p><p><strong>特征</strong>：1Gbps带宽，自带一个IPv4，solusvm管理，硬盘SSD cached，洛杉矶MC机房！</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>硬盘</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>2核</td><td>2G</td><td>50G</td><td>4T&#x2F;月</td><td>$36&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=61">链接</a></strong></td></tr><tr><td>3核</td><td>4G</td><td>80G</td><td>5T&#x2F;月</td><td>$59&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=62">链接</a></strong></td></tr><tr><td>4核</td><td>6G</td><td>140G</td><td>6T&#x2F;月</td><td>$95&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=63">链接</a></strong></td></tr><tr><td>4核</td><td>8G</td><td>100G</td><td>5T&#x2F;月</td><td>$89&#x2F;年</td><td><a href="https://my.racknerd.com/aff.php?aff=1158&pid=312"><strong>链接</strong></a></td></tr><tr><td>4核</td><td>8G</td><td>200G</td><td>8T&#x2F;月</td><td>$135&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=64">链接</a></strong></td></tr></tbody></table><h2 id="10、网络测试"><a href="#10、网络测试" class="headerlink" title="10、网络测试"></a>10、网络测试</h2><p><strong>洛杉矶DC02：</strong> 204.13.154.3，<a href="http://lg-lax02.racknerd.com/1000MB.test">http://lg-lax02.racknerd.com/1000MB.test</a></p><p><strong>洛杉矶DC05：</strong> 5.181.135.8，<a href="http://lg-lax05.racknerd.com/1000MB.test">http://lg-lax05.racknerd.com/1000MB.test</a></p><p><strong>圣何塞：</strong> 192.210.207.88，<a href="http://lg-sj.racknerd.com/1000MB.test">http://lg-sj.racknerd.com/1000MB.test</a></p><p><strong>西雅图：</strong> 192.3.253.2，<a href="http://lg-sea.racknerd.com/1000MB.test">http://lg-sea.racknerd.com/1000MB.test</a></p><p><strong>新泽西：</strong> 192.3.165.30，<a href="http://lg-nj.racknerd.com/1000MB.test">http://lg-nj.racknerd.com/1000MB.test</a></p><p><strong>达拉斯</strong>：198.23.249.100，<a href="http://lg-dal.racknerd.com/1000MB.test">http://lg-dal.racknerd.com/1000MB.test</a></p><p><strong>芝加哥：</strong> 198.23.228.15，<a href="http://lg-chi.racknerd.com/1000MB.test">http://lg-chi.racknerd.com/1000MB.test</a></p><p><strong>阿什本</strong>：107.173.166.10，<a href="http://lg-ash.racknerd.com/1000MB.test">http://lg-ash.racknerd.com/1000MB.test</a></p><p><strong>亚特兰大：</strong> 107.173.164.160，<a href="http://lg-atl.racknerd.com/1000MB.test">http://lg-atl.racknerd.com/1000MB.test</a></p><p><strong>荷兰.阿姆斯特丹：</strong> 23.94.101.88，<a href="http://lg-ams.racknerd.com/1000MB.test">http://lg-ams.racknerd.com/1000MB.test</a></p><p><strong>水牛城：</strong> 192.3.81.8，<a href="http://lg-ny.racknerd.com/1000MB.test">http://lg-ny.racknerd.com/1000MB.test</a></p><h2 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h2><p><a href="https://blog.laoda.de/vps.html">RackNerd 在售机型推荐</a></p><p><a href="https://blog.laoda.de/archives/vps-racknerd">【VPS选购分享】Racknerd——曾经的“四大金刚”，如今的性价比之王</a></p><p><a href="https://blog.laoda.de/archives/cheap-vps-racknerd">【国外便宜高性价比的VPS 推荐】——RackNerd</a></p><p><a href="https://blog.laoda.de/archives/racknerd-easter-2023">2023 - RackNerd 活动汇总 整理帖！附最新复活节活动套餐</a></p><p><a href="https://blog.laoda.de/archives/racknerd-vps-issues">RackNerd（RN）双十一优惠&amp;&amp; RN VPS在售促销特价+流量翻倍+迁移+邮箱+push方法整理</a></p><p><a href="https://blog.laoda.de/archives/racknerd-bf-2022-01?cid=5016">#2022黑五# RackNerd：美国便宜VPS低至$10&#x2F;年～</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;首先祝小伙伴们劳动节快乐！最近咕咕比较忙，等空下来马上继续和大家分享好玩的项目 &amp;#x3D; &amp;#x3D; &lt;/p&gt;
&lt;p&gt;今天在路上刷tg的时候看到RackNerd VPS自助IPv4更换功能正式上线了，这对一些小伙伴来说绝对是一个好消息，就来水一篇文章～&lt;/p&gt;
&lt;p&gt;</summary>
      
    
    
    
    <category term="VPS推荐" scheme="https://blog.laoda.de/categories/VPS%E6%8E%A8%E8%8D%90/"/>
    
    
    <category term="Racknerd" scheme="https://blog.laoda.de/tags/Racknerd/"/>
    
    <category term="美国VPS" scheme="https://blog.laoda.de/tags/%E7%BE%8E%E5%9B%BDVPS/"/>
    
    <category term="欧洲VPS" scheme="https://blog.laoda.de/tags/%E6%AC%A7%E6%B4%B2VPS/"/>
    
  </entry>
  
  <entry>
    <title>用ChatGPT帮你写一个VPS定时自动备份脚本</title>
    <link href="https://blog.laoda.de/archives/chatgpt-script-about-vps-backup/"/>
    <id>https://blog.laoda.de/archives/chatgpt-script-about-vps-backup/</id>
    <published>2023-04-17T04:58:52.497Z</published>
    <updated>2023-04-17T05:00:30.367Z</updated>
    
    <content type="html"><![CDATA[<p>咕咕在后台经常会遇到小伙伴留言修改咕咕在后台经常会遇到小伙伴留言:</p><p><strong>“我要如何备份自己服务器上的数据？”</strong></p><p>其实之前博客里发过类似的内容：</p><p><a href="https://blog.laoda.de/archives/docker-issues">【有用的小知识】Docker容器如何更新？如何迁移应用？如何卸载？</a></p><p><a href="https://blog.laoda.de/archives/backup-server-series">【服务器备份系列】聊一聊服务器备份那些事儿｜VPS备份总览</a></p><p>对于一些喜欢折腾的小伙伴来说，经常会买一些奇奇怪怪的商家的服务器，这些商家提供的机器可能非常便宜，甚至免费，但也可能会随时会删机、或者跑路，大家的担心其实是有必要的。</p><p>当然博客推荐的商家都是咕咕自己也上车的商家，还是非常靠谱的。</p><p>然而，不管用的是啥服务器，不管商家有多高的在线率保证，只要你的数据对你来说是重要的，都非常建议多异地备份。</p><p>最近在用ChatGPT，想到其实完全可以让它来给我们写一个定时自动备份的脚本。</p><p>马上开整。</p><h2 id="1-提的需求"><a href="#1-提的需求" class="headerlink" title="1. 提的需求"></a>1. 提的需求</h2><blockquote><p>写一个Linux自动备份脚本，把A服务器上的<code>/root/data/docker_data</code>文件夹的内容压缩之后每天早上4点30分自动备份到B服务器上的<code>/root/data/backup</code>目录下，要求最多保留3份备份。</p><p>其中B服务器的SSH端口为<code>2222</code>，B服务器上的<code>/root/data/backup</code>目录已经创建好了。</p></blockquote><p>说明：</p><ul><li>熟悉咕咕的小伙伴都知道，我们docker搭建的项目都放在了<code>/root/data/docker_data</code>这个文件夹下面，里面包含了各个容器的数据和配置文件，迁移服务器最关键的东西都在这里了（image镜像不在这边，也不需要备份，我们可以直接在docker hub上拉取）</li><li><code>“每天早上4点30分”</code> 是因为对于网站来说，这个时间段网址访问人数相对较少，服务器负载小</li></ul><h2 id="2-ChatGPT的回答"><a href="#2-ChatGPT的回答" class="headerlink" title="2. ChatGPT的回答"></a>2. ChatGPT的回答</h2><p>以下是一个可以完成所需任务的bash脚本。请将以下脚本保存为<code>backup.sh</code>。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i    <span class="comment"># 切换到root用户</span></span><br><span class="line"></span><br><span class="line">vim backup.sh   <span class="comment"># 编辑back.sh文件</span></span><br></pre></td></tr></table></figure><p>写入以下内容：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务器A上的源目录</span></span><br><span class="line">SRC_DIR=<span class="string">&quot;/root/data/docker_data&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务器B上的目标目录</span></span><br><span class="line">DST_DIR=<span class="string">&quot;/root/data/backup&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务器B的IP地址</span></span><br><span class="line">SERVER_B_IP=<span class="string">&quot;your_server_b_ip&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务器B的SSH用户名</span></span><br><span class="line">SSH_USER=<span class="string">&quot;your_ssh_username&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务器B的SSH端口</span></span><br><span class="line">SSH_PORT=<span class="string">&quot;2222&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份文件前缀</span></span><br><span class="line">BACKUP_NAME_PREFIX=<span class="string">&quot;docker_data_backup&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 压缩文件格式</span></span><br><span class="line">ARCHIVE_FORMAT=<span class="string">&quot;tar.gz&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成备份文件名</span></span><br><span class="line">current_date=$(<span class="built_in">date</span> +<span class="string">&quot;%Y%m%d_%H%M%S&quot;</span>)</span><br><span class="line">backup_filename=<span class="string">&quot;<span class="variable">$&#123;BACKUP_NAME_PREFIX&#125;</span>_<span class="variable">$&#123;current_date&#125;</span>.<span class="variable">$&#123;ARCHIVE_FORMAT&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 压缩源目录</span></span><br><span class="line">tar -czf <span class="string">&quot;<span class="variable">$&#123;backup_filename&#125;</span>&quot;</span> -C <span class="string">&quot;<span class="variable">$&#123;SRC_DIR&#125;</span>&quot;</span> .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 传输备份文件到服务器B</span></span><br><span class="line">scp -P <span class="string">&quot;<span class="variable">$&#123;SSH_PORT&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;backup_filename&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;SSH_USER&#125;</span>@<span class="variable">$&#123;SERVER_B_IP&#125;</span>:<span class="variable">$&#123;DST_DIR&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除本地备份文件</span></span><br><span class="line"><span class="built_in">rm</span> -f <span class="string">&quot;<span class="variable">$&#123;backup_filename&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 保留最多3个备份文件</span></span><br><span class="line">ssh -p <span class="string">&quot;<span class="variable">$&#123;SSH_PORT&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;SSH_USER&#125;</span>@<span class="variable">$&#123;SERVER_B_IP&#125;</span>&quot;</span> <span class="string">&quot;ls -t <span class="variable">$&#123;DST_DIR&#125;</span>/<span class="variable">$&#123;BACKUP_NAME_PREFIX&#125;</span>* | tail -n +4 | xargs --no-run-if-empty rm -f&quot;</span></span><br></pre></td></tr></table></figure><p>接下来，我们需要在服务器A上配置cron job以实现每天早上4点30分自动执行上面的备份脚本。请按照以下步骤操作：</p><ol><li>使用<code>chmod</code>命令为脚本添加可执行权限：</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x backup.sh</span><br></pre></td></tr></table></figure><p>接下来，我们需要在A服务器上安装并配置SSH免密登录到B服务器。请在A服务器上执行以下命令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装sshpass（如已安装，请忽略）</span></span><br><span class="line">sudo apt-get install sshpass</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成SSH密钥</span></span><br><span class="line">ssh-keygen -t rsa -b 4096</span><br><span class="line"></span><br><span class="line"><span class="comment"># 一路回车即可</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将公钥复制到B服务器</span></span><br><span class="line">ssh-copy-id -i ~/.ssh/id_rsa.pub -p 服务器端口 user@B服务器IP地址</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以检测一下，A服务器直接用<code>ssh -p 服务器端口 user@B服务器IP地址</code>是否可以免密登录B服务器，如果可以，说明可以继续下一步。</p><ol start="2"><li>使用<code>crontab -e</code>命令打开服务器A上的cron配置：</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">crontab -e</span><br></pre></td></tr></table></figure><ol start="3"><li>在打开的cron配置文件中，添加以下一行内容以设置每天早上4点30分执行<code>backup.sh</code>脚本。请确保将<code>/path/to/backup.sh</code>替换为实际的脚本文件路径。</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">30 4 * * * /root/backup.sh</span><br></pre></td></tr></table></figure><ol start="4"><li>保存并关闭cron配置文件。</li></ol><p>现在，每天早上4点30分，脚本将自动执行，并将<code>/root/data/docker_data</code>目录压缩备份到服务器B的<code>/root/data/backup</code>目录下，同时保留最多3份备份。</p><h2 id="3-测试"><a href="#3-测试" class="headerlink" title="3. 测试"></a>3. 测试</h2><p>测试了一下，没啥问题。</p><p><img src="https://img.laoda.de/i/2023/04/17/kjp3yx-0.webp" alt="image-20230417124239725"></p><p>修改了一下文件路径，备份了一下halo博客的，也正常：</p><p><img src="https://img.laoda.de/i/2023/04/17/kjil4a-0.webp" alt="image-20230417124208679"></p><p>舒服了，甲骨文可以愉快得用起来了，再也不怕商家跑路了！</p><blockquote><p><strong>友情提示：</strong> 其实不管用的是啥服务器，不管商家有多高的在线率保证，只要你的数据对你来说是重要的，都要多异地备份。</p></blockquote><h2 id="4-总结"><a href="#4-总结" class="headerlink" title="4. 总结"></a>4. 总结</h2><p>用上了ChatGPT，写一些简单的脚本对于没有什么代码基础的我们来说，已经不再是问题。</p><p>推荐阅读：</p><p><a href="https://blog.laoda.de/archives/play-with-chatgpt">从注册到畅玩ChatGPT——目前世界上最先进的民用AI聊天机器人</a></p><p><a href="https://blog.laoda.de/archives/chatgpt-plus-depay">【保姆级教程】从零开通ChatGPT Plus</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;咕咕在后台经常会遇到小伙伴留言修改咕咕在后台经常会遇到小伙伴留言:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;“我要如何备份自己服务器上的数据？”&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;其实之前博客里发过类似的内容：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.laoda.de</summary>
      
    
    
    
    <category term="有用的小知识" scheme="https://blog.laoda.de/categories/%E6%9C%89%E7%94%A8%E7%9A%84%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="ChatGPT" scheme="https://blog.laoda.de/tags/ChatGPT/"/>
    
    <category term="自动备份" scheme="https://blog.laoda.de/tags/%E8%87%AA%E5%8A%A8%E5%A4%87%E4%BB%BD/"/>
    
  </entry>
  
  <entry>
    <title>Depay/Dupay 替代品来了！知名开源 Web3 钱包 OneKey 推出虚拟卡服务，可开通ChatGPT</title>
    <link href="https://blog.laoda.de/archives/onekey-card-tutorial/"/>
    <id>https://blog.laoda.de/archives/onekey-card-tutorial/</id>
    <published>2023-04-14T13:02:33.876Z</published>
    <updated>2023-07-01T04:09:20.381Z</updated>
    
    <content type="html"><![CDATA[<p>知名开源 Web3 钱包 OneKey 推出虚拟卡服务</p><p><img src="https://img.laoda.de/i/2023/04/14/w3onnm-0.webp" alt="3a275f04d4f93c24d20d7057cec96835.png"></p><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><h3 id="2023-06-14"><a href="#2023-06-14" class="headerlink" title="2023-06-14"></a>2023-06-14</h3><p>OneKey card新增优选美国卡，可以开通ChatGPT Plus了！</p><img src="https://img.laoda.de/i/2023/06/14/m9292v-0.webp" alt="image-20230614134546403" style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/06/14/m9ekxp-0.webp" alt="image-20230614134604001" style="zoom:33%;" /><h3 id="2023-06-01"><a href="#2023-06-01" class="headerlink" title="2023-06-01"></a>2023-06-01</h3><p>目前<a href="https://gao.ee/depay">depay</a>已经恢复，老用户可以正常使用，不过新用户暂时还不能注册。</p><p>OneKey卡4146港区卡支持支付宝、微信！暂不支持开通ChatGPT。</p><h3 id="2023-05-30"><a href="#2023-05-30" class="headerlink" title="2023-05-30"></a>2023-05-30</h3><p>UPDATE:  现在支持UDST入金了</p><img src="https://img.laoda.de/i/2023/05/30/r3irur-0.webp" alt="image-20230530163848433" style="zoom: 25%;" /><h3 id="2023-05-27"><a href="#2023-05-27" class="headerlink" title="2023-05-27"></a>2023-05-27</h3><p>OneKey为之前4288卡头的美国卡(最早)的用户免费新增加了一张卡，旧卡余额可以转到新卡，新卡可以正常用于ChatGPT、Midjourney、Twitter等场景使用。</p><p>吐槽一下，depay这么久了还没恢复，还是OneKey靠谱一点……</p><p><img src="https://img.laoda.de/i/2023/05/27/up2kv3-0.webp"></p><h3 id="2023-05-25"><a href="#2023-05-25" class="headerlink" title="2023-05-25"></a>2023-05-25</h3><p>Onekey Card将在下周二左右开放新美国卡段</p><p>Onekey Card目前为止总共有两个批次的卡段，分别为<br>— 4288卡头的美国卡(最早)<br>— 4931卡头的香港卡(最近)</p><p>老用户基本都是4288美国卡，老的美国卡是支持OpenAI的，但是4288美国卡前段时间已经被风控了，几乎所有平台无法消费。<br>在美国卡段分配完之后，现在开的卡统一位香港VISA卡，但是不能开通OpenAI。</p><p>难道老用户4288没救了吗?</p><p>官方原话为：“即将给所有4288卡段用户替换一个新的支持 ChatGPT 的卡段，最迟下周二替换完成，余额将会转移到这个新卡上。到时候已有香港卡的用户也可以开这个卡。上线后会给大家说一下。”。意味着原本的4288卡头已经无法使用，请使用新的美国卡头代替。</p><p><img src="https://img.laoda.de/i/2023/05/25/vh8kpx-0.webp" alt="image-20230525190338644"></p><p>关于新卡账号等级继承：<br>开卡之后，Plan等级是不会变化的。意味着不会出现如GOLD变Silver的情况。</p><p>此外，同个账户之间的卡，将支持互转，并且0手续费。</p><h3 id="2023-05-15"><a href="#2023-05-15" class="headerlink" title="2023-05-15"></a>2023-05-15</h3><p>注意，据小伙伴反馈，Onekey美国开头已经没有了，目前新开卡为香港卡头，香港开头不支持开通ChatGPT PLUS（其他的都正常）。如果想去用OneKey开Plus的暂时别上车了。</p><p>还是建议等<a href="https://gao.ee/depay">depay</a>恢复注册再试试。</p><h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h2><p>🔑 OneKey 也发布虚拟卡了，作用类似 <a href="https://gao.ee/depay">DePay</a>，是一张发行地美国的 Visa 卡。</p><blockquote><p>OneKey 是一家位于新加坡的区块链公司。之前主要是做加密货币管理工具的（硬件钱包），之前完成了两千万美元的融资，根据第三方统计OneKey目前已经托管了数十亿美元的加密货币资产，拥有上万名用户。</p><p>相关阅读：<br><a href="https://forum.conflux.fun/t/onekey/12467">区块链钱包安全知识大科普——OneKey专访</a><br><a href="https://www.chaincatcher.com/article/2079939">对话 OneKey 王一石：硬件钱包覆盖率可能不到 5%，但红利期仍然很远</a></p></blockquote><p>🔗 申请链接：<a href="https://gao.ee/onekey">https://gao.ee/onekey</a>  目前是公测期间需要填写邀请码激活：<code>1U7IPF</code></p><h3 id="1-1-特别注意（先说坑）"><a href="#1-1-特别注意（先说坑）" class="headerlink" title="1.1 特别注意（先说坑）"></a>1.1 特别注意（先说坑）</h3><p>⚠️注意：</p><p>1、需要身份证实名+人脸认证，所以如果你想将它用与 黑&#x2F;灰 活动还是放弃吧！</p><p>2、目前公测阶段需要 20 USD 以上（需要用加密货币充值）</p><p>3、目前必须使用邀请码才能注册，<a href="https://gao.ee/onekey">链接</a>已包含咕咕的邀请码<code>1U7IPF</code></p><p>4、虽说是信用卡，其实是预付制的信用卡（即需要卡内有额度才能消费，不能透支，相当于借记卡）</p><p>5、费率相对还是比较高的</p><p>咕咕实测花费174.75RMB（充值了25USDT转换成USDC），成功给卡充值23.5美元（161.02RMB），损耗13.73RMB</p><p><img src="https://img.laoda.de/i/2023/04/14/1145ye0-0.webp" alt="image-20230414224423144"></p><p>卡头是<code>4288</code></p><h3 id="1-2-特点"><a href="#1-2-特点" class="headerlink" title="1.2 特点"></a>1.2 特点</h3><ul><li>目前必须使用邀请码才能注册</li><li>只能使用 Google 登录，只支持虚拟币充值</li><li>初始注册用户的充值费率是 2.1%，月费 1USDC（通过 USDC 充值，损耗在 2.1%～1.5%，相对于<a href="https://gao.ee/depay">Depay</a>来说手续费还是比较高）</li><li>支持绑定支付宝、微信</li><li>Web3 大厂，风险等级低（相对于Depay来说）</li></ul><h3 id="1-3-充值"><a href="#1-3-充值" class="headerlink" title="1.3 充值"></a>1.3 充值</h3><p>购买虚拟货币可以用<a href="https://gao.ee/okx">欧易</a>或者是<a href="https://gao.ee/bian">币安</a>来完成。</p><p> <strong>欧易</strong>：<a href="https://gao.ee/okx">https://gao.ee/okx</a>（通过链接注册后注册者和邀请者都会收到15%的返佣比例，邀请码<code>65534142</code>）</p><p><strong>币安</strong>：<a href="https://gao.ee/bian">https://gao.ee/bian</a>（通过链接注册后注册者和邀请者都会收到10%的返佣比例，邀请码<code>I76Y2IDH</code>）</p><h4 id="OneKey-Card-支持充值的网络和币种"><a href="#OneKey-Card-支持充值的网络和币种" class="headerlink" title="OneKey Card 支持充值的网络和币种"></a>OneKey Card 支持充值的网络和币种</h4><table><thead><tr><th>币种</th><th>网络</th></tr></thead><tbody><tr><td>USDC</td><td>EthereumPolygon (Coming Soon)TronAlgorandAvalancheFlow</td></tr><tr><td>USDT（即将支持）</td><td>EthereumTronPolygonAvalanche</td></tr></tbody></table><p><strong>充值错代币很难追回，请注意充值正确的币种，目前只支持 USDC 。</strong></p><p><strong>充值错代币很难追回，请注意充值正确的币种，目前只支持 USDC 。</strong></p><p><strong>充值错代币很难追回，请注意充值正确的币种，目前只支持 USDC 。</strong></p><h3 id="1-4-总结"><a href="#1-4-总结" class="headerlink" title="1.4 总结"></a>1.4 总结</h3><p>此类虚拟卡虽然说是信用卡，但其实都是预付卡。咕咕都不建议在卡上面放太多钱，一般钱放<a href="(https://help.onekey.so/hc/zh-cn/articles/360004133595-%E5%8C%BA%E5%9D%97%E9%93%BE%E9%92%B1%E5%8C%85%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86)">区块链钱包</a>里头，用的时候再充值到卡上即可，这样风险最低，即使商家跑路，也可以把我们的风险降到最低。</p><p>延伸阅读：<a href="https://help.onekey.so/hc/zh-cn/articles/360004133595-%E5%8C%BA%E5%9D%97%E9%93%BE%E9%92%B1%E5%8C%85%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86">区块链钱包基础知识</a></p><hr><h2 id="2-详细注册流程（咕咕实测）"><a href="#2-详细注册流程（咕咕实测）" class="headerlink" title="2. 详细注册流程（咕咕实测）"></a>2. 详细注册流程（咕咕实测）</h2><h3 id="2-1-注册-OneKey-Card"><a href="#2-1-注册-OneKey-Card" class="headerlink" title="2.1 注册 OneKey Card"></a>2.1 注册 OneKey Card</h3><p>点击链接：<a href="https://gao.ee/onekey">https://gao.ee/onekey</a> 进入注册界面，点击 【sign in with Google】，使用谷歌账户注册</p><p><img src="https://img.laoda.de/i/2023/04/14/xmntpt-0.webp" alt="card01.png"></p><p>账号注册后，点击 【Activate】开通，激活卡</p><p><img src="https://img.laoda.de/i/2023/04/14/w6t34e-0.webp" alt="image-20230414194634029"></p><p>点击 <code>VISA</code></p><p>目前是公测期间需要填写邀请码激活：<code>1U7IPF</code></p><p><img src="https://img.laoda.de/i/2023/04/14/w6wcig-0.webp" alt="image-20230414194648964"></p><p>填基础信息，</p><p><img src="https://img.laoda.de/i/2023/04/14/w7bri7-0.webp" alt="image-20230414194720849"></p><h3 id="2-2-实名认证"><a href="#2-2-实名认证" class="headerlink" title="2.2 实名认证"></a>2.2 实名认证</h3><p>进行实名认证，信息添加完毕后，点击 【Next】</p><p>非国内的身份需要人工审核，，一般提交之后一个工作日内会审核完的。</p><p>咕咕这边大概15s审核完毕。</p><p><img src="https://img.laoda.de/i/2023/04/14/w7jshs-0.webp" alt="image-20230414194757894"></p><p>需要完成人脸识别，点击 【Please complete face verification】，微信扫码进行验证。<br>非中国大陆无法人脸识别自动审核。<br>实名认证完成后，您的邮箱将收到一封实名认证完成的邮件。</p><p><img src="https://img.laoda.de/i/2023/04/14/xnwsk4-0.webp" alt="card11.png"></p><p>KYC，微信扫码人脸认证</p><img src="https://img.laoda.de/i/2023/04/14/w9px1i-0.webp" alt="image-20230414195123593" style="zoom:50%;" /><p>人脸录制视频10s左右，</p><img src="https://img.laoda.de/i/2023/04/14/wbfv4s-0.webp" alt="IMG_7228" style="zoom:33%;" /><p>开始审核，</p><img src="https://img.laoda.de/i/2023/04/14/wbiekw-0.webp" alt="image-20230414195424167" style="zoom:33%;" /><p>核验成功！</p><img src="https://img.laoda.de/i/2023/04/14/wbmie0-0.webp" alt="IMG_7231" style="zoom:33%;" /><p>回到电脑上，</p><img src="https://img.laoda.de/i/2023/04/14/wavmc9-0.webp" alt="image-20230414195316492" style="zoom:50%;" /><p>此时就能看到已经开通好了，</p><img src="https://img.laoda.de/i/2023/04/14/wclfc8-0.webp" alt="image-20230414195607128" style="zoom:50%;" /><h3 id="2-3-绑定谷歌二步验证"><a href="#2-3-绑定谷歌二步验证" class="headerlink" title="2.3 绑定谷歌二步验证"></a>2.3 绑定谷歌二步验证</h3><p>实名认证完成后，需要绑定 Google 身份验证器，才能开始使用</p><p><img src="https://img.laoda.de/i/2023/04/14/xocl0c-0.webp" alt="card12.png"></p><p><img src="https://img.laoda.de/i/2023/04/14/x40gbx-0.webp" alt="image-20230414200210680"></p><p>使用谷歌验证码 App 扫描二维码，抄写备份密钥（此密钥可让您在手机丢失时恢复您的 Google 身份验证器）</p><p><img src="https://img.laoda.de/i/2023/04/14/xouedq-0.webp" alt="card15.png"></p><p>输入谷歌验证吗和邮箱验证码，完成绑定。</p><p><img src="https://img.laoda.de/i/2023/04/14/x6grx7-0.webp" alt="image-20230414200623174"></p><p><img src="https://img.laoda.de/i/2023/04/14/x6lhqd-0.webp" alt="image-20230414200645186"></p><h3 id="2-4-充值-OneKey-Card"><a href="#2-4-充值-OneKey-Card" class="headerlink" title="2.4 充值 OneKey Card"></a>2.4 充值 OneKey Card</h3><p>实名认证完成后，点击【Top Up】进行充值，公测阶段需要 20 USD 以上</p><p><img src="https://img.laoda.de/i/2023/04/14/xpndmg-0.webp" alt="card17.png"></p><p>点击 USDC ，选择要充值的链进行充值。（暂时先开放了 USDC 充值）</p><p><strong>充值错代币很难追回，请注意充值正确的币种，目前只支持 USDC 。</strong></p><p><img src="https://img.laoda.de/i/2023/04/14/xq0n6z-0.webp" alt="card30.png"></p><p>咕咕这边网络选择的也是TRX</p><p><img src="https://img.laoda.de/i/2023/04/14/x5zpwj-0.webp" alt="image-20230414200542905"></p><p>以下是卡片的钱包地址信息，</p><p><img src="https://img.laoda.de/i/2023/04/14/xdjl5k-0.webp" alt="image-20230414201812329"></p><p>咕咕通过上一期<a href="https://iwanlab.com/chatgpt-plus-depay/">【保姆级教程】从零开通ChatGPT Plus</a>介绍的<a href="https://gao.ee/okx">欧易</a>完成充币，</p><img src="https://img.laoda.de/i/2023/04/14/xeaf04-0.webp" alt="image-20230414201936564" style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/04/14/xedqoz-0.webp" alt="image-20230414201952037" style="zoom: 33%;" /><p>注意我们选了<code>TRX</code>，对应的链就是<code>USDC-TRC20</code>，</p><img src="https://img.laoda.de/i/2023/04/14/xeq3zz-0.webp" alt="image-20230414202009941" style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/04/14/xfgngq-0.webp" alt="image-20230414202133744" style="zoom:33%;" /><p>过一会儿，刷新网页，已经充值成功了。</p><img src="https://img.laoda.de/i/2023/04/14/xfahyc-0.webp" alt="image-20230414202104644" style="zoom:33%;" /><p>实测花费174.75RMB，充值23.5美元（161.02RMB），损耗13.73RMB</p><h3 id="2-5-绑定-OneKey-Card"><a href="#2-5-绑定-OneKey-Card" class="headerlink" title="2.5 绑定 OneKey Card"></a>2.5 绑定 OneKey Card</h3><p>充值完成后，回到账户主页，点击 【CVV】<a href="https://help.onekey.so/hc/article_attachments/6762025420943"><img src="https://help.onekey.so/hc/article_attachments/6762025420943" alt="card21.png"></a></p><p>输入谷歌二次验证码，查看 OneKey Card 信息</p><p><a href="https://help.onekey.so/hc/article_attachments/6762025430671"><img src="https://help.onekey.so/hc/article_attachments/6762025430671" alt="card22.png"></a></p><p><strong>绑定微信支付相关明细：</strong></p><ul><li><strong>线下支付</strong>。需要商家使用的 pos 机支持相应通道（Visa 或 Master），仅支持银联将无法支付</li><li><strong>线上支付</strong>。支付成功与否受「平台使用的收单工具的风控要求」及「账户信誉度及消费频率」影响</li></ul><h3 id="2-6-绑定支付宝"><a href="#2-6-绑定支付宝" class="headerlink" title="2.6 绑定支付宝"></a>2.6 绑定支付宝</h3><p>1.打开支付宝，点击【我的】–【银行卡】</p><p>2.点击添加银行卡</p><p>3.输入开通的卡号</p><p>4.输入 姓名、日期、安全码</p><p>5.绑定完成</p><p>6.开始使用</p><p><a href="https://help.onekey.so/hc/article_attachments/6762367957775"><img src="https://help.onekey.so/hc/article_attachments/6762367957775" alt="bd00.png"></a></p><h3 id="2-7-绑定微信"><a href="#2-7-绑定微信" class="headerlink" title="2.7 绑定微信"></a>2.7 绑定微信</h3><p>1.打开微信，点击【我】–【服务】</p><p>2.点击【钱包】</p><p>3.点击【银行卡】</p><p>4.点击 【添加银行卡】</p><p>5.输入支付密码</p><p>6.输入 OneKey Card 卡号</p><p>7.添加银行卡信息</p><p>8.点击下一步，完成绑定</p><p><a href="https://help.onekey.so/hc/article_attachments/6763126733327"><img src="https://help.onekey.so/hc/article_attachments/6763126733327" alt="wx.png"></a></p><p>消费场景的要求<br>1.如果是线下场景，使用微信支付，要看商家使用的pos机是否支持VISA通道，仅支持银联的那种是不行的。（即使支持微信支付，也不一定支持对应卡的通道）<br>2.如果是线上场景，主要是看平台风控的要求，有些账户信誉好、消费频繁等等可能会允许使用，但是有些账户如果风险比较高的话会被风控拒绝。这个是线上商家使用的收单工具和风控的严松决定的。</p><hr><p>以下内容摘自OneKey官网文档<a href="https://help.onekey.so/hc/zh-cn/categories/360000170236-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97">使用指南</a></p><h2 id="3-具体使用"><a href="#3-具体使用" class="headerlink" title="3. 具体使用"></a>3. 具体使用</h2><h3 id="3-1-如何使用-OneKey-Card？"><a href="#3-1-如何使用-OneKey-Card？" class="headerlink" title="3.1 如何使用 OneKey Card？"></a>3.1 如何使用 OneKey Card？</h3><p>登录后，点击「激活」选择您的卡片以及完成身份验证信息，即可领取卡片。</p><p>在使用卡片之前，需要进行充值，再获取CVV信息绑定到您的支付渠道使用。</p><h3 id="3-2-绑定微信支付相关明细："><a href="#3-2-绑定微信支付相关明细：" class="headerlink" title="3.2 绑定微信支付相关明细："></a>3.2 <strong>绑定微信支付相关明细：</strong></h3><ul><li><strong>线下支付</strong>。需要商家使用的 pos 机支持相应通道（Visa 或 Master），仅支持银联将无法支付</li><li><strong>线上支付</strong>。支付成功与否受「平台使用的收单工具的风控要求」及「账户信誉度及消费频率」影响</li></ul><h3 id="3-3-支付渠道使用建议"><a href="#3-3-支付渠道使用建议" class="headerlink" title="3.3 支付渠道使用建议"></a>3.3 支付渠道使用建议</h3><table><thead><tr><th>支付渠道</th><th>详情</th></tr></thead><tbody><tr><td>支付宝</td><td>小额订单消费无需额外手续费；超过200元，支付宝收取3%手续费</td></tr><tr><td>淘宝</td><td>绑卡消费，任何金额都会收取 3% 手续费</td></tr><tr><td>微信支付</td><td>京东、拼多多无额外手续费</td></tr><tr><td>美团</td><td>绑定后每次点外卖需要另外输入CVV和有效日期如果提示暂不支持该银行，直接在下一步输入CVV和有效日期即可</td></tr></tbody></table><h3 id="3-4-使用场景"><a href="#3-4-使用场景" class="headerlink" title="3.4 使用场景"></a>3.4 使用场景</h3><table><thead><tr><th>场景</th><th>服务</th></tr></thead><tbody><tr><td>支付渠道</td><td>Paypal, Google Pay, 支付宝 Alipay, 微信支付 WeChat Pay</td></tr><tr><td>线上购物</td><td>亚马逊, 沃尔玛, ebay, Shopee, Lazada, 京东, 淘宝, 拼多多</td></tr><tr><td>线上服务</td><td>OpenAI &#x2F; ChatGPT Plus API</td></tr><tr><td>生活服务</td><td>美团</td></tr></tbody></table><h3 id="3-5-如果线上支付渠道有疑问怎么办？"><a href="#3-5-如果线上支付渠道有疑问怎么办？" class="headerlink" title="3.5 如果线上支付渠道有疑问怎么办？"></a>3.5 如果线上支付渠道有疑问怎么办？</h3><p>这些渠道如果支付失败，或遇到风控，向客服声明是本人的虚拟卡即可。</p><h2 id="4-OneKey-Card-开通-ChatGPT-Plus-OpenAI-API-被拒了怎么办？"><a href="#4-OneKey-Card-开通-ChatGPT-Plus-OpenAI-API-被拒了怎么办？" class="headerlink" title="4. OneKey Card 开通 ChatGPT Plus &#x2F; OpenAI API 被拒了怎么办？"></a>4. OneKey Card 开通 ChatGPT Plus &#x2F; OpenAI API 被拒了怎么办？</h2><h3 id="4-1-ChatGPT-使用须知"><a href="#4-1-ChatGPT-使用须知" class="headerlink" title="4.1 ChatGPT 使用须知"></a>4.1 ChatGPT 使用须知</h3><p>ChatGPT 目前仅接受特定地区开通，信用卡所属地也需要是对应可用区域。检查 IP 较为严格。</p><p>如果您不在美国或者其他可用区域内，请注意进行以下操作。</p><h3 id="4-2-建议"><a href="#4-2-建议" class="headerlink" title="4.2 建议"></a>4.2 建议</h3><ul><li>浏览器开启「无痕模式」</li><li>生成并使用跟IP一样的账单地址</li><li>如果还是不行，考虑切换 IP。有些 VPN 服务的 IP 使用人数太多，被高概率风控，推荐使用更好的 VPN 服务。</li></ul><h2 id="5-常见问题"><a href="#5-常见问题" class="headerlink" title="5. 常见问题"></a>5. 常见问题</h2><h3 id="5-1-需要使用OneKey硬件钱包或App才能开卡吗？"><a href="#5-1-需要使用OneKey硬件钱包或App才能开卡吗？" class="headerlink" title="5.1 需要使用OneKey硬件钱包或App才能开卡吗？"></a>5.1 需要使用OneKey硬件钱包或App才能开卡吗？</h3><p>不需要。但是推荐您使用 OneKey 硬件钱包管理您的数字资产，在需要消费的时候将资金充值到 OneKey Card 账户上。</p><h3 id="5-2-这需要绑定到某个区块链账户进行自动扣款吗？"><a href="#5-2-这需要绑定到某个区块链账户进行自动扣款吗？" class="headerlink" title="5.2 这需要绑定到某个区块链账户进行自动扣款吗？"></a>5.2 这需要绑定到某个区块链账户进行自动扣款吗？</h3><p>不需要。您只需注册或登录 OneKey Card 网站，在完成身份认证后，对该卡片的数字资产地址进行充值使用，将会按照充值时汇率换算为美元可供消费。</p><h3 id="5-3-支持什么币种和网络充值？"><a href="#5-3-支持什么币种和网络充值？" class="headerlink" title="5.3 支持什么币种和网络充值？"></a>5.3 支持什么币种和网络充值？</h3><p>请查看帮助中心页面：<a href="https://help.onekey.so/hc/zh-cn/articles/6726726855823">支持充值的币种和网络</a></p><h3 id="5-4-OneKey-Card-是信用卡吗？"><a href="#5-4-OneKey-Card-是信用卡吗？" class="headerlink" title="5.4 OneKey Card 是信用卡吗？"></a>5.4 OneKey Card 是信用卡吗？</h3><p>不是。这是预付卡，不可透支。</p><h3 id="5-5-在转账到-OneKey-Card-以后依然是自托管模式的资产吗？"><a href="#5-5-在转账到-OneKey-Card-以后依然是自托管模式的资产吗？" class="headerlink" title="5.5 在转账到 OneKey Card 以后依然是自托管模式的资产吗？"></a>5.5 在转账到 OneKey Card 以后依然是自托管模式的资产吗？</h3><p>不是。您的资金从 OneKey 钱包转出前，依然是自托管模式的资产，一旦转到 OneKey Card 账户后，将不再是自托管模式的方式。在 OneKey Card 账户收到数字资产后，会转换为美元并转移到发卡机构，如：Visa、MasterCard。</p><h3 id="5-6-有额度上限吗？"><a href="#5-6-有额度上限吗？" class="headerlink" title="5.6 有额度上限吗？"></a>5.6 有额度上限吗？</h3><p>无额度上限，请尽情使用。</p><p>更多文档内容，可以参考官网：<a href="https://help.onekey.so/hc/zh-cn/categories/360000170236-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97">使用指南</a></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>OneKey 帮助中心：<a href="https://help.onekey.so/hc/zh-cn/categories/360000170236-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97">https://help.onekey.so/hc/zh-cn/categories/360000170236-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;知名开源 Web3 钱包 OneKey 推出虚拟卡服务&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.laoda.de/i/2023/04/14/w3onnm-0.webp&quot; alt=&quot;3a275f04d4f93c24d20d7057cec96835.png&quot;&gt;</summary>
      
    
    
    
    <category term="有用的小知识" scheme="https://blog.laoda.de/categories/%E6%9C%89%E7%94%A8%E7%9A%84%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    
    <category term="Web3.0相关" scheme="https://blog.laoda.de/categories/%E6%9C%89%E7%94%A8%E7%9A%84%E5%B0%8F%E7%9F%A5%E8%AF%86/Web3-0%E7%9B%B8%E5%85%B3/"/>
    
    
    <category term="Depay" scheme="https://blog.laoda.de/tags/Depay/"/>
    
    <category term="Dupay" scheme="https://blog.laoda.de/tags/Dupay/"/>
    
    <category term="OneKey" scheme="https://blog.laoda.de/tags/OneKey/"/>
    
    <category term="加密货币" scheme="https://blog.laoda.de/tags/%E5%8A%A0%E5%AF%86%E8%B4%A7%E5%B8%81/"/>
    
    <category term="USDT" scheme="https://blog.laoda.de/tags/USDT/"/>
    
    <category term="USDC" scheme="https://blog.laoda.de/tags/USDC/"/>
    
    <category term="欧易" scheme="https://blog.laoda.de/tags/%E6%AC%A7%E6%98%93/"/>
    
    <category term="币安" scheme="https://blog.laoda.de/tags/%E5%B8%81%E5%AE%89/"/>
    
  </entry>
  
  <entry>
    <title>2023 - RackNerd 活动汇总 整理帖！附最新复活节活动套餐</title>
    <link href="https://blog.laoda.de/archives/racknerd-easter-2023/"/>
    <id>https://blog.laoda.de/archives/racknerd-easter-2023/</id>
    <published>2023-04-14T08:05:21.580Z</published>
    <updated>2023-04-14T08:06:58.221Z</updated>
    
    <content type="html"><![CDATA[<p>如果你还不了解 <a href="https://blog.laoda.de/tags/racknerd">RackNerd</a>，可以看这篇文章：<a href="https://blog.laoda.de/archives/cheap-vps-racknerd">【VPS选购分享】Racknerd——曾经的“四大金刚”，如今的性价比之王</a></p><p>更多套餐可以参考这边：<a href="https://blog.laoda.de/vps.html">https://blog.laoda.de/vps.html</a></p><h2 id="不同机房IP测试"><a href="#不同机房IP测试" class="headerlink" title="不同机房IP测试"></a>不同机房IP测试</h2><ul><li>德克萨斯州达拉斯(测试IP: 198.23.249.100)</li><li>纽约(测试(IP: 192.3.81.8)</li><li>新泽西州(测试IP: 192.3.165.30)</li><li>亚特兰大(测试IP: 107.173.164.160)</li><li>伊利诺伊州芝加哥(测试IP: 198.23.228.15)</li><li>德克萨斯州达拉斯(测试IP: 198.23.249.100)</li><li>西雅图(测试IP: 192.3.253.2)</li><li>加利福尼亚州 圣何塞(测试IP: 192.210.207.88) [热门机房，补货可选了]</li></ul><h3 id="注意："><a href="#注意：" class="headerlink" title="注意："></a><strong>注意：</strong></h3><p>RN的所有小鸡 购后都可以在LET论坛（lowendtalk）以下地址回复帖子申请流量翻倍：</p><p>申请地址：<a href="https://lowendtalk.com/discussion/182479/official-b-l-a-c-k-f-r-i-d-a-y-thread-community-endorsed-take-a-peek-racknerds-black-friday#latest">https://lowendtalk.com/discussion/182479/official-b-l-a-c-k-f-r-i-d-a-y-thread-community-endorsed-take-a-peek-racknerds-black-friday#latest</a></p><p>在LET帖子回帖: <code>Double the bandwidth.  Order: xxxxxxxxx</code> (下单后邮件里有10位Order号) 即可。申请后等待一两天即可。</p><h2 id="最新复活节活动套餐"><a href="#最新复活节活动套餐" class="headerlink" title="最新复活节活动套餐"></a><strong>最新复活节活动套餐</strong></h2><h3 id="840MB套餐"><a href="#840MB套餐" class="headerlink" title="840MB套餐"></a><strong>840MB套餐</strong></h3><ul><li>1x vCPU 核心</li><li>840 MB 内存</li><li>10 GB SSD</li><li>1 TB 月流量</li><li>价格: $10.78&#x2F;年</li><li>订购链接: <a href="https://my.racknerd.com/aff.php?aff=1158&pid=766">点击购买</a></li></ul><h3 id="1-2GB-套餐"><a href="#1-2GB-套餐" class="headerlink" title="1.2GB 套餐"></a><strong>1.2GB 套餐</strong></h3><ul><li>1x vCPU 核心</li><li>1.2 GB 内存</li><li>30 GB SSD</li><li>3 TB 月流量</li><li>价格: $14.98&#x2F;年</li><li>订购链接: <a href="https://my.racknerd.com/aff.php?aff=1158&pid=767">点击购买</a></li></ul><h3 id="2GB-套餐"><a href="#2GB-套餐" class="headerlink" title="2GB 套餐"></a><strong>2GB 套餐</strong></h3><ul><li>2x vCPU 核心</li><li>2 GB 内存</li><li>45 GB SSD</li><li>5 TB 月流量</li><li>价格: $21.98&#x2F;年</li><li>订购链接: <a href="https://my.racknerd.com/aff.php?aff=1158&pid=768">点击购买</a></li></ul><h3 id="5GB-套餐"><a href="#5GB-套餐" class="headerlink" title="5GB 套餐"></a><strong>5GB 套餐</strong></h3><ul><li>3x vCPU 核心</li><li>5 GB 内存</li><li>100 GB SSD</li><li>10 TB 月流量</li><li>价格: $58.88&#x2F;年</li><li>订购链接: <a href="https://my.racknerd.com/aff.php?aff=1158&pid=769">点击购买</a></li></ul><p><strong>以下是RN之前的活动，目前都还可以下单，供参考和对比</strong></p><h2 id="2023年新年活动"><a href="#2023年新年活动" class="headerlink" title="2023年新年活动"></a><strong>2023年新年活动</strong></h2><h3 id="512-MB-套餐"><a href="#512-MB-套餐" class="headerlink" title="512 MB 套餐"></a>512 MB 套餐</h3><ul><li>512 MB 内存</li><li>1 CPU 核心</li><li>10 GB 高速SSD存储</li><li>1500 GB 月流量</li><li>1 Gbps 带宽</li><li>1 个IPv4 地址</li><li>可选机房: 芝加哥, 达拉斯, 新泽西, 亚特兰大, 圣何塞, 西雅图, 纽约</li><li>$10.18 &#x2F;年 (续费同价)</li><li>订购链接:<a href="https://my.racknerd.com/aff.php?aff=1158&pid=734">点击购买</a></li></ul><p><del>备注：目前圣何塞机房已无法选</del> 有了！</p><h3 id="1-GB-套餐"><a href="#1-GB-套餐" class="headerlink" title="1 GB 套餐"></a>1 GB 套餐</h3><ul><li>1 GB 内存</li><li>1 CPU 核心</li><li>25 GB 高速SSD存储</li><li>4000 GB 月流量</li><li>1 Gbps 带宽</li><li>1 个IPv4 地址</li><li>可选机房: 芝加哥, 达拉斯, 新泽西, 亚特兰大, 圣何塞, 西雅图, 纽约</li><li>$12.98 &#x2F;年 (续费同价)</li><li>订购链接:<a href="https://my.racknerd.com/aff.php?aff=1158&pid=735">点击购买</a></li></ul><h3 id="2-5-GB-套餐"><a href="#2-5-GB-套餐" class="headerlink" title="2.5 GB 套餐"></a>2.5 GB 套餐</h3><ul><li>2.5 GB 内存</li><li>2 CPU 核心</li><li>45 GB 高速SSD存储</li><li>6000 GB 月流量</li><li>1 Gbps 带宽</li><li>1 个IPv4 地址</li><li>可选机房: 洛杉矶DC-02, 芝加哥, 达拉斯, 新泽西, 亚特兰大, 圣何塞, 西雅图, 纽约</li><li>$24.88 &#x2F;年 (续费同价)</li><li>订购链接:<a href="https://my.racknerd.com/aff.php?aff=1158&pid=736">点击购买</a></li></ul><h3 id="4-GB-套餐"><a href="#4-GB-套餐" class="headerlink" title="4 GB 套餐"></a>4 GB 套餐</h3><ul><li>4 GB 内存</li><li>3 CPU 核心</li><li>70 GB 高速SSD存储</li><li>10000 GB 月流量</li><li>1 Gbps 带宽</li><li>1 个IPv4 地址</li><li>可选机房: 洛杉矶DC-02, 芝加哥, 达拉斯, 新泽西, 亚特兰大, 圣何塞, 西雅图, 纽约</li><li>$46.68 &#x2F;年 (续费同价)</li><li>订购链接:<a href="https://my.racknerd.com/aff.php?aff=1158&pid=737">点击购买</a></li></ul><h2 id="2022黑五的套餐"><a href="#2022黑五的套餐" class="headerlink" title="2022黑五的套餐"></a><strong>2022黑五的套餐</strong></h2><p>去年黑五的链接还可以下单，可以对比参考</p><h3 id="768-MB-套餐"><a href="#768-MB-套餐" class="headerlink" title="768 MB 套餐"></a>768 MB 套餐</h3><ul><li>768 MB 内存</li><li>1 CPU 核心</li><li>10 GB 高速SSD存储</li><li>1000 GB 月流量</li><li>1 Gbps 带宽</li><li>1 个IPv4 地址</li><li>$10.28 &#x2F;年 (续费同价)</li><li>订购链接:<a href="https://my.racknerd.com/aff.php?aff=1158&pid=695">点击购买</a></li></ul><h3 id="1-5-GB-套餐"><a href="#1-5-GB-套餐" class="headerlink" title="1.5 GB 套餐"></a>1.5 GB 套餐</h3><ul><li>1.5 GB 内存</li><li>1 CPU 核心</li><li>30 GB 高速SSD存储</li><li>3000 GB 月流量</li><li>1 Gbps 带宽</li><li>1 个IPv4 地址</li><li>$16.88 &#x2F;年 (续费同价)</li><li>订购链接:<a href="https://my.racknerd.com/aff.php?aff=1158&pid=696">点击购买</a></li></ul><h3 id="2-5-GB-套餐-1"><a href="#2-5-GB-套餐-1" class="headerlink" title="2.5 GB 套餐"></a>2.5 GB 套餐</h3><ul><li>2.5 GB 内存</li><li>2 CPU 核心</li><li>60 GB 高速SSD存储</li><li>7000 GB 月流量</li><li>1 Gbps 带宽</li><li>1 个IPv4 地址</li><li>$28.55 &#x2F;年 (续费同价)</li><li>订购链接:<a href="https://my.racknerd.com/aff.php?aff=1158&pid=697">点击购买</a></li></ul><h3 id="3-5-GB-套餐"><a href="#3-5-GB-套餐" class="headerlink" title="3.5 GB 套餐"></a>3.5 GB 套餐</h3><ul><li>3.5 GB 内存</li><li>2 CPU 核心</li><li>80 GB 高速SSD存储</li><li>10000 GB 月流量</li><li>1 Gbps 带宽</li><li>1 个IPv4</li><li>$38.88 &#x2F;年 (续费同价)</li><li>订购链接:<a href="https://my.racknerd.com/aff.php?aff=1158&pid=698">点击购买</a></li></ul><h3 id="4-5-GB-套餐"><a href="#4-5-GB-套餐" class="headerlink" title="4.5 GB 套餐"></a>4.5 GB 套餐</h3><ul><li>4.5 GB 内存</li><li>3 CPU 核心</li><li>100 GB 高速SSD存储</li><li>12000 GB 月流量</li><li>1 Gbps 带宽</li><li>1 个IPv4 地址</li><li>$48.77 &#x2F;年 (续费同价)</li><li>订购链接:<a href="https://my.racknerd.com/aff.php?aff=1158&pid=699">点击购买</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;如果你还不了解 &lt;a href=&quot;https://blog.laoda.de/tags/racknerd&quot;&gt;RackNerd&lt;/a&gt;，可以看这篇文章：&lt;a href=&quot;https://blog.laoda.de/archives/cheap-vps-racknerd&quot;&gt;【V</summary>
      
    
    
    
    <category term="VPS推荐" scheme="https://blog.laoda.de/categories/VPS%E6%8E%A8%E8%8D%90/"/>
    
    
    <category term="Racknerd" scheme="https://blog.laoda.de/tags/Racknerd/"/>
    
    <category term="复活节" scheme="https://blog.laoda.de/tags/%E5%A4%8D%E6%B4%BB%E8%8A%82/"/>
    
  </entry>
  
  <entry>
    <title>【好玩儿的Docker项目】任何地方无障碍快速访问！ChatGPT Next Web——一键免费部署你的私人 ChatGPT 网页应用</title>
    <link href="https://blog.laoda.de/archives/docker-compose-install-chatgpt-next-web/"/>
    <id>https://blog.laoda.de/archives/docker-compose-install-chatgpt-next-web/</id>
    <published>2023-04-10T15:13:33.749Z</published>
    <updated>2023-05-06T09:11:43.222Z</updated>
    
    <content type="html"><![CDATA[<p>今天来分享一个私人 ChatGPT 网页应用——ChatGPT Next Web，让你随时随地方便使用ChatGPT！</p><p><img src="https://img.laoda.de/i/2023/04/10/r3hz62-0.webp" alt="主界面"></p><h2 id="1-ChatGPT-Next-Web-简单介绍（来自GitHub）"><a href="#1-ChatGPT-Next-Web-简单介绍（来自GitHub）" class="headerlink" title="1. ChatGPT Next Web 简单介绍（来自GitHub）"></a>1. ChatGPT Next Web 简单介绍（来自GitHub）</h2><h3 id="1-1-主要功能"><a href="#1-1-主要功能" class="headerlink" title="1.1 主要功能"></a>1.1 主要功能</h3><ul><li>在 1 分钟内使用 Vercel <strong>免费一键部署</strong></li><li>精心设计的 UI，响应式设计，支持深色模式</li><li>极快的首屏加载速度（~100kb）</li><li>海量的内置 prompt 列表，来自<a href="https://github.com/PlexPt/awesome-chatgpt-prompts-zh">中文</a>和<a href="https://github.com/f/awesome-chatgpt-prompts">英文</a></li><li>自动压缩上下文聊天记录，在节省 Token 的同时支持超长对话</li><li>一键导出聊天记录，完整的 Markdown 支持</li><li>拥有自己的域名？好上加好，绑定后即可在任何地方<strong>无障碍</strong>快速访问</li></ul><p>废话不多说，我们马上开始搭建！</p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p><img src="https://img.laoda.de/i/2023/04/10/sd3eht-0.webp" alt="1ffad7a7971a6a5442756d5a51fbc22f.png"></p><p>演示 Demo: <a href="https://chat-gpt-next-web.vercel.app/">https://chat-gpt-next-web.vercel.app/</a><br>反馈 Issues: <a href="https://github.com/Yidadaa/ChatGPT-Next-Web/issues">https://github.com/Yidadaa/ChatGPT-Next-Web/issues</a><br>加入 Discord: <a href="https://discord.gg/zrhvHCr79N">https://discord.gg/zrhvHCr79N</a><br>打赏开发者: <a href="https://user-images.githubusercontent.com/16968934/227772541-5bcd52d8-61b7-488c-a203-0330d8006e2b.jpg">请项目原作者喝咖啡</a></p><p>官方有两种搭建方式，第一种无需服务器，直接部署在Vercel 上；第二种部署在自己的服务器上。</p><h2 id="3-开始使用"><a href="#3-开始使用" class="headerlink" title="3. 开始使用"></a>3. 开始使用</h2><h3 id="3-1-部署在Vercel上（可能需要一个域名）"><a href="#3-1-部署在Vercel上（可能需要一个域名）" class="headerlink" title="3.1 部署在Vercel上（可能需要一个域名）"></a>3.1 部署在Vercel上（可能需要一个域名）</h3><ol><li>准备好你的 <a href="https://platform.openai.com/account/api-keys">OpenAI API Key</a>;</li><li>点击右侧按钮开始部署： <a href="https://vercel.com/new/clone?repository-url=https://github.com/Yidadaa/ChatGPT-Next-Web&env=OPENAI_API_KEY&env=CODE&project-name=chatgpt-next-web&repository-name=ChatGPT-Next-Web">Deploy with Vercel</a>，直接使用 Github 账号登录即可，记得在环境变量页填入 API Key 和<a href="https://github.com/Yidadaa/ChatGPT-Next-Web/blob/main/README_CN.md#%E9%85%8D%E7%BD%AE%E9%A1%B5%E9%9D%A2%E8%AE%BF%E9%97%AE%E5%AF%86%E7%A0%81">页面访问密码</a> CODE；</li><li>部署完毕后，即可开始使用；</li><li>（可选）<a href="https://vercel.com/docs/concepts/projects/domains/add-a-domain">绑定自定义域名</a>：Vercel 分配的域名 DNS 在某些区域被污染了，绑定自定义域名即可直连。</li></ol><h3 id="3-2-部署在自己的服务器上"><a href="#3-2-部署在自己的服务器上" class="headerlink" title="3.2 部署在自己的服务器上"></a>3.2 部署在自己的服务器上</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">chatgpt-next-web:</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;8090:3000&#x27;</span></span><br><span class="line">        <span class="attr">environment:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">OPENAI_API_KEY=sk-xxxx</span>    <span class="comment"># 填写你的API KEY</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">CODE=your-password</span>    <span class="comment"># 填一个密码，不然你的额度很快就会被刷完</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">yidadaa/chatgpt-next-web</span></span><br></pre></td></tr></table></figure><p>这边直接丢出核心的 <code>docker-compose.yaml</code> 文件，熟悉 docker 环境的小伙伴可以直接拷贝搭建。</p><p><strong>注意：</strong></p><p><code>OPENAI_API_KEY</code> 可以参考咕咕去年12月写的文章：<a href="https://blog.laoda.de/archives/play-with-chatgpt">从注册到畅玩ChatGPT——目前世界上最先进的民用AI聊天机器人</a>注册完成ChatGPT之后，访问：<a href="https://platform.openai.com/account/api-keys">https://platform.openai.com/account/api-keys</a> 获取。</p><p><img src="https://img.laoda.de/i/2023/04/10/sd98us-0.webp" alt="2af1a9097e385d570fd60a55d5e31976.png"></p><p>推荐阅读：<a href="https://blog.laoda.de/archives/chatgpt-and-openai">大白话！简单解释ChatGPT和OpenAI还有API KEYS</a></p><p> <code>CODE</code> 记得千万写上，不然网页暴露在互联网上，很快你的API额度就会被刷完。</p><p>以下是服务器部署的详细搭建教程。</p><h2 id="4-搭建环境"><a href="#4-搭建环境" class="headerlink" title="4. 搭建环境"></a>4. 搭建环境</h2><blockquote><p>更正：貌似被block也没事，我们是调用API的方式。</p></blockquote><p>选用服务器先测试一下是否可以访问ChatGPT：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -Ls https://cpp.li/openai)</span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2023/04/10/sddes0-0.webp" alt="28ee855c0e93ff28e03853fc50c6089b.png"></p><ul><li>服务器：<del>腾讯香港轻量应用服务器 24 元 &#x2F; 月 VPS 一台</del> 咕咕自己搭建用的是硅谷的<a href="https://loll.cc/tx">腾讯轻量应用服务器</a> ，（这次最好选 <strong>欧美的服务器</strong>）如果是小白刚开始玩的话，也可以选择购买 <a href="https://gao.ee/lca">莱卡云</a> 的服务器，（莱卡云服务器介绍：<a href="https://blog.laoda.de/archives/vps-lcayun">点击查看</a>）</li><li>系统：Debian 11 （<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD 脚本</a> 非必需 DD，用原来的系统也 OK，之后教程都是用 Debian 或者 Ubuntu 搭建～）</li><li>安装好 Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需但建议】域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>【非必需】提前安装好宝塔面板海外版本 aapanel，并安装好 Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程选用】安装好 Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><blockquote><p>服务器要求：内存建议1G 以上。</p></blockquote><h2 id="5-搭建视频"><a href="#5-搭建视频" class="headerlink" title="5. 搭建视频"></a>5. 搭建视频</h2><h3 id="5-1-YouTube："><a href="#5-1-YouTube：" class="headerlink" title="5.1 YouTube："></a>5.1 YouTube：</h3><p>视频地址：<a href="https://youtu.be/C97PAwJ9fkA">https://youtu.be/C97PAwJ9fkA</a></p><h3 id="5-2-哔哩哔哩"><a href="#5-2-哔哩哔哩" class="headerlink" title="5.2 哔哩哔哩"></a>5.2 哔哩哔哩</h3><p>哔哩哔哩【高清版本可以点击去吐槽到 B 站观看】：<joe-bilibili bvid="BV1w84y1M7zG"></joe-bilibili></p><h2 id="6-搭建方式"><a href="#6-搭建方式" class="headerlink" title="6. 搭建方式"></a>6. 搭建方式</h2><p>如果你不是用的腾讯云的轻量应用服务器，可以直接跳到 6.1 部分。</p><h3 id="安装系统（腾讯云轻量应用服务器）"><a href="#安装系统（腾讯云轻量应用服务器）" class="headerlink" title="安装系统（腾讯云轻量应用服务器）"></a>安装系统（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlyhcz-2.webp" alt="e59713fba8726d3cb55ae11bca83fe3c.png"></p><p>腾讯云轻量服务器最大的特点就是 “轻量”，相比 CVM，更适合小白上手，这边我们之间选择 Docker 基础镜像，就可以省去后面安装 Docker 的步骤 <del>（如果你非要用国内的服务器，这边装的 Docker 镜像还会帮你配置好国内镜像源，让你加速访问 docker 镜像资源）</del> 不要用国内的 。</p><h3 id="登陆（腾讯云轻量应用服务器）"><a href="#登陆（腾讯云轻量应用服务器）" class="headerlink" title="登陆（腾讯云轻量应用服务器）"></a>登陆（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlzlj7-2.webp" alt="2722040ee311eb4a9ebf2a4945bf38f4.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm0gv8-2.webp" alt="c0b5d360053746c4095d592967ee401f.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm1vqw-2.webp" alt="e0ba858f021b846ad0abc27acf5008c2.png"></p><h3 id="6-1-安装-Docker-与-Nginx-Proxy-Manager"><a href="#6-1-安装-Docker-与-Nginx-Proxy-Manager" class="headerlink" title="6.1 安装 Docker 与 Nginx Proxy Manager"></a>6.1 安装 Docker 与 Nginx Proxy Manager</h3><p>可以直接参考这篇内容：</p><p><a href="https://blog.laoda.de/archives/nginxproxymanager">https://blog.laoda.de/archives/nginxproxymanager</a></p><h3 id="6-2-创建安装目录"><a href="#6-2-创建安装目录" class="headerlink" title="6.2 创建安装目录"></a>6.2 创建安装目录</h3><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/chatgpt-web</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/chatgpt-web</span><br></pre></td></tr></table></figure><p>这边我们直接用 docker 的方式安装。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure><p>英文输入法下，按 <code>i</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">chatgpt-next-web:</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;8090:3000&#x27;</span></span><br><span class="line">        <span class="attr">environment:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">OPENAI_API_KEY=sk-xxxx</span>    <span class="comment"># 填写你的API KEY</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">CODE=your-password</span>    <span class="comment"># 填一个密码，不然你的额度很快就会被刷完</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">yidadaa/chatgpt-next-web</span></span><br></pre></td></tr></table></figure><p>修改好之后，注意切换成英文输入法，然后按一下 <code>esc</code>，然后 <code>:wq</code> 保存退出。</p><h3 id="6-3-打开服务器防火墙（非必需）并访问网页"><a href="#6-3-打开服务器防火墙（非必需）并访问网页" class="headerlink" title="6.3 打开服务器防火墙（非必需）并访问网页"></a>6.3 打开服务器防火墙（非必需）并访问网页</h3><p>打开防火墙的端口 <code>8090</code></p><p>举例，腾讯云打开方法如下（部分服务商没有自带的面板防火墙，就不用这步操作了）：</p><img src="https://img.laoda.de/i/2022/06/30/zlio5h-2.webp" alt="image-20220630215240864" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/06/30/10h3dqt-2.webp" alt="image-20220630220546335" style="zoom:33%;" /><p>图中示例填的是 <code>5230</code>，备注填的是 <code>memos</code>，这边我们填 <code>8090</code>，示例填 <code>chatgpt-web</code> ，确定即可（如果你在 docker-compose 文件里换了 <code>9009</code>，这边就需要填 <code>9009</code>，以此类推）</p><img src="https://img.laoda.de/i/2022/08/19/o4byqz-2.webp" alt="image-20220819145844555" style="zoom:33%;" /><p>查看端口是否被占用（以 <code>8090</code> 为例），输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:8090  <span class="comment">#查看 8090 端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果啥也没出现，表示端口未被占用，我们可以继续下面的操作了～</p><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装 lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用（被占用了就修改一下端口，比如改成 <code>8081</code>，注意 docker 命令行里和防火墙都要改）</p><p>最后：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/chatgpt-web    <span class="comment"># 来到 dockercompose 文件所在的文件夹下</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>理论上我们就可以输入 <code>http://ip:8090</code> 访问安装了。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器 IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的 IP。</p><p>2、遇到访问不了的情况，请再次检查在宝塔面板的防火墙和服务商的后台防火墙是否打开对应了端口。</p></blockquote><p>有的小伙伴可能想搭建起来分享给其他人使用，如果后续想要分享给别人，IP + 端口太不优雅了，咕咕建议大家还是搞一个域名，容易记，看起来也更正规一点。这样可以做 https，会让网页更安全。</p><p>而且 <a href="https://loll.cc/ns">namesilo</a> 上面 xyz 后缀的域名一年就 7 块钱，可以年抛。（冷知识，namesilo上 6位数字的xyz续费永远都是0.99美元 &#x3D; &#x3D;）</p><p>如果想要长期使用，还是建议买 com 后缀的域名，更加正规一些，可以输入 <code>laodade</code> 来获得 1 美元的优惠（不知道现在还有没有）</p><p><a href="https://loll.cc/ns">namesilo</a> 自带隐私保护，咕咕一直在用这家，价格也是这些注册商里面比较低的，关键是他家不像其他家域名注册商，没有七七八八的套路！（就是后台界面有些<del>丑</del> 古老 &#x3D; &#x3D;）</p><p><a href="https://blog.laoda.de/archives/namesilo">【域名购买】Namesilo 优惠码和域名解析教程（附带服务器购买推荐和注意事项）</a></p><p>我们接着往下看！</p><h3 id="6-4-更新-chatgpt-web"><a href="#6-4-更新-chatgpt-web" class="headerlink" title="6.4 更新 chatgpt-web"></a>6.4 更新 chatgpt-web</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/chatgpt-web</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/chatgpt-web /root/data/docker_data/chatgpt-web.archive  <span class="comment"># 万事先备份，以防万一</span></span><br><span class="line"></span><br><span class="line">docker-compose pull</span><br><span class="line"></span><br><span class="line">docker-compose up -d    <span class="comment"># 请不要使用 docker-compose stop 来停止容器，因为这么做需要额外的时间等待容器停止；docker-compose up -d 直接升级容器时会自动停止并立刻重建新的容器，完全没有必要浪费那些时间。</span></span><br><span class="line"></span><br><span class="line">docker image prune  <span class="comment"># prune 命令用来删除不再使用的 docker 对象。删除所有未被 tag 标记和未被容器使用的镜像</span></span><br></pre></td></tr></table></figure><p>提示：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WARNING! This will remove all dangling images.</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] </span><br></pre></td></tr></table></figure><p>输入 <code>y</code></p><p>利用 Docker 搭建的应用，更新非常容易～</p><h3 id="6-5-卸载-chatgpt-web"><a href="#6-5-卸载-chatgpt-web" class="headerlink" title="6.5 卸载 chatgpt-web"></a>6.5 卸载 chatgpt-web</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/chatgpt-web</span><br><span class="line"></span><br><span class="line">docker-compose down</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/chatgpt-web  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>可以卸载得很干净。</p><h2 id="7-反向代理"><a href="#7-反向代理" class="headerlink" title="7. 反向代理"></a>7. 反向代理</h2><p>我们要用域名而不是IP+端口的方式来访问我们的服务！</p><h3 id="7-1-利用-Nginx-Proxy-Manager"><a href="#7-1-利用-Nginx-Proxy-Manager" class="headerlink" title="7.1 利用 Nginx Proxy Manager"></a>7.1 利用 Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p><img src="https://img.laoda.de/i/2022/10/16/n6t02e-2.webp" alt="image-20221016140213282"></p><p>之后，登陆 Nginx Proxy Manager（不会的看这个：<strong>安装 Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称 NPM）会用到 <code>80</code>、<code>443</code> 端口，所以本机不能占用（比如原来就有 Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom: 33%;" /><img src="https://img.laoda.de/i/2023/05/06/f9sfof-0.webp" alt="image-20230403155113921" style="zoom:50%;" /><blockquote><p> 注意填写对应的 <code>域名</code>、<code>IP</code> 和 <code>端口</code>，按文章来的话，应该是 <code>8090</code></p></blockquote><p><strong>IP 填写：</strong></p><p>如果 Nginx Proxy Manager 和 chatgpt-web 在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的 Docker 容器内部 IP。</p><p><img src="https://img.laoda.de/i/2022/09/29/pcdnz5-2.webp"></p><p>否则直接填 <code>chatgpt-web</code> 所在的服务器 IP 就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom: 33%;" /><p>再次打开，勾选这些：</p><p><img src="https://img.laoda.de/i/2022/10/16/n7nn6e-2.webp" alt="image-20221016140356324"></p><p>然后就可以用域名来安装访问了。</p><h3 id="7-2-利用宝塔面板"><a href="#7-2-利用宝塔面板" class="headerlink" title="7.2 利用宝塔面板"></a>7.2 利用宝塔面板</h3><p>发现还是有不少小伙伴习惯用宝塔面板，这边也贴一个宝塔面板的反代配置：</p><p>直接新建一个站点，不要数据库，不要 php，纯静态即可。</p><p>然后打开下面的配置，修改 Nginx 的配置。</p><p><img src="https://img.laoda.de/i/2022/08/19/ov4xrt-2.webp" alt="image-20220819150345725"></p><p><img src="https://img.laoda.de/i/2022/08/19/owbbkb-2.webp" alt="image-20220819150542867"></p><p>代码如下：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:8090/;       <span class="comment"># 注意改成你实际使用的端口</span></span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此方法对 90% 的反向代理都能生效，然后就可以用域名来安装访问了。</p><p>有同学可能会问，为什么不直接用宝塔自带的反向代理功能。</p><p><img src="https://img.laoda.de/i/2022/08/19/oxf800-2.webp" alt="image-20220819150730128"></p><p>也可以，不过咕咕自己之前遇到过当有多个网站需要反代的时候，在这边设置会报错的情况 &#x3D; &#x3D; </p><p>所以后来就不用了，直接用上面的方法来操作了。</p><h2 id="8-使用教程"><a href="#8-使用教程" class="headerlink" title="8. 使用教程"></a>8. 使用教程</h2><p>这边等录视频的时候好好说，大家自己摸索一下 &#x3D; &#x3D;</p><p>记得输入之前<code>docker-compose.yml</code> 里面的密码～</p><p><img src="https://img.laoda.de/i/2023/04/10/sdp3cg-0.webp" alt="image-20230410171603073"></p><p><img src="https://img.laoda.de/i/2023/04/10/sds34i-0.webp" alt="image-20230410171616981"></p><p>大家可以自己先尝试看看，不难，详细的操作的话等咕咕周末搞个视频见出来。</p><h2 id="9-待完善的地方"><a href="#9-待完善的地方" class="headerlink" title="9. 待完善的地方"></a>9. 待完善的地方</h2><p>暂无</p><h2 id="10-结尾"><a href="#10-结尾" class="headerlink" title="10. 结尾"></a>10. 结尾</h2><p>祝大家用得开心，有问题可以去 GitHub 提 <a href="https://github.com/Yidadaa/ChatGPT-Next-Web/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，有能力给ChatGPT Next Web做贡献的同学，也欢迎积极加入到 <a href="https://github.com/Yidadaa/ChatGPT-Next-Web">项目</a> 中来，贡献自己的一份力量！</p><p>最后，感谢ChatGPT Next Web 开发人员们的辛苦付出，让我们能用到这么优秀的项目！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>演示 Demo: <a href="https://chat-gpt-next-web.vercel.app/">https://chat-gpt-next-web.vercel.app/</a><br>GitHub: <a href="https://github.com/Yidadaa/ChatGPT-Next-Web">https://github.com/Yidadaa/ChatGPT-Next-Web</a></p><h2 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h2><p><a href="https://blog.laoda.de/archives/chatgpt-plus-depay">【保姆级教程】从零开通ChatGPT Plus</a></p><p><a href="https://blog.laoda.de/archives/play-with-chatgpt">从注册到畅玩ChatGPT——目前世界上最先进的民用AI聊天机器人</a></p><p><a href="https://blog.laoda.de/archives/chatgpt-plugins-prompts">玩转ChatGPT必备的插件&amp;客户端&amp;Prompts</a></p><p><a href="https://blog.laoda.de/archives/chatgpt-and-openai">大白话！简单解释ChatGPT和OpenAI还有API KEYS</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;今天来分享一个私人 ChatGPT 网页应用——ChatGPT Next Web，让你随时随地方便使用ChatGPT！&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.laoda.de/i/2023/04/10/r3hz62-0.webp&quot; alt=&quot;主界面&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="Docker系列" scheme="https://blog.laoda.de/categories/Docker%E7%B3%BB%E5%88%97/"/>
    
    
    <category term="ChatGPT" scheme="https://blog.laoda.de/tags/ChatGPT/"/>
    
    <category term="OpenAI" scheme="https://blog.laoda.de/tags/OpenAI/"/>
    
  </entry>
  
  <entry>
    <title>咕咕开设了一个知识星球</title>
    <link href="https://blog.laoda.de/archives/my-knowledge-planet/"/>
    <id>https://blog.laoda.de/archives/my-knowledge-planet/</id>
    <published>2023-04-07T02:19:57.370Z</published>
    <updated>2023-04-07T02:20:00.167Z</updated>
    
    <content type="html"><![CDATA[<p>大家好！我是咕咕。最近，由于工作和生活的繁忙，时间精力变得非常有限。为了能集中精力更好地回答小伙伴的问题和满足大家的不同需求，我尝试开设了一个付费项目——知识星球。</p><h2 id="🔥知识星球优势🔥"><a href="#🔥知识星球优势🔥" class="headerlink" title="🔥知识星球优势🔥"></a>🔥知识星球优势🔥</h2><ul><li>优先回答：在知识星球里的提问，我会在每天的休息时间第一时间回答（需要是正经的内容 &#x3D; &#x3D; ）；</li><li>系统教程：前期会以更新Linux、搭建网站等基础教程为主，让小白用户轻松掌握技能，也会不定期分享一些好玩的内容；</li><li>小白友好：星球内容目前定位于小白用户，老鸟的话个人感觉其实不是很有必要加入了，当然想要支持咕咕的也可以，咕咕也会不定期在星球里送一些服务器啥的。</li></ul><h2 id="💰加入费用💰"><a href="#💰加入费用💰" class="headerlink" title="💰加入费用💰"></a>💰加入费用💰</h2><p>1年365人民币，1天1块钱。</p><h2 id="🌟如何加入🌟"><a href="#🌟如何加入🌟" class="headerlink" title="🌟如何加入🌟"></a>🌟如何加入🌟</h2><p>点击下方链接，就可以加入了。</p><p>加入星球：<a href="https://t.zsxq.com/0csBuffuG">https://t.zsxq.com/0csBuffuG</a></p><img src="https://img.laoda.de/i/2023/04/07/fmvyh3-0.webp" alt="28885848525581T4" style="zoom:33%;" /><h3 id="❗注意❗"><a href="#❗注意❗" class="headerlink" title="❗注意❗"></a><strong>❗注意❗</strong></h3><p>当然，博客评论区的留言咕咕依然会尽量回答的，只是时间和精力有限，无法保证回答速度。如果你觉得需要更快速、更专业的回答，欢迎加入知识星球！</p><p>🌈一起学习，共同进步！生命不息，折腾不止！期待在知识星球与你相遇！🌈</p><p>点击加入👉【<a href="https://t.zsxq.com/0csBuffuG">知识星球——咕咕的VPS折腾群</a>】👈，开启折腾之旅！</p><img src="https://img.laoda.de/i/2023/04/07/fo5kso-0.webp" alt="28885848525581T3" style="zoom: 25%;" />]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;大家好！我是咕咕。最近，由于工作和生活的繁忙，时间精力变得非常有限。为了能集中精力更好地回答小伙伴的问题和满足大家的不同需求，我尝试开设了一个付费项目——知识星球。&lt;/p&gt;
&lt;h2 id=&quot;🔥知识星球优势🔥&quot;&gt;&lt;a href=&quot;#🔥知识星球优势🔥&quot; class=&quot;h</summary>
      
    
    
    
    <category term="有用的小知识" scheme="https://blog.laoda.de/categories/%E6%9C%89%E7%94%A8%E7%9A%84%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="知识星球" scheme="https://blog.laoda.de/tags/%E7%9F%A5%E8%AF%86%E6%98%9F%E7%90%83/"/>
    
  </entry>
  
  <entry>
    <title>【好玩儿的Docker项目】创建个人主页！LittleLink——一个类似LinkTree功能的开源项目，非常适合创建个人链接聚合页！</title>
    <link href="https://blog.laoda.de/archives/docker-compose-install-littlelink/"/>
    <id>https://blog.laoda.de/archives/docker-compose-install-littlelink/</id>
    <published>2023-04-03T08:34:33.977Z</published>
    <updated>2023-05-06T01:25:59.659Z</updated>
    
    <content type="html"><![CDATA[<p>今天来分享一个类似LinkTree功能的开源项目——LittleLink。</p><p><img src="https://img.laoda.de/i/2023/04/03/p81gty-0.webp" alt="LittleLink Custom"></p><p>大致实现一个这样的效果。</p><p><img src="https://img.laoda.de/i/2023/04/03/pc7s1k-0.webp" alt="WX20230403-152256@2x"></p><p><img src="https://img.laoda.de/i/2023/04/03/pc9uot-0.gif" alt="2023-04-03 15-21-54.2023-04-03 15_23_06"></p><p><img src="https://img.laoda.de/i/2023/04/03/ph5m89-0.webp" alt="image-20230403154044492"></p><p>基本上页面的内容都可以自定义，你可以添加任意多的社交平台链接在上面，自带后台，方便修改。Docker搭建方便省力。</p><h2 id="1-LittleLink-简单介绍（GitHub翻译）"><a href="#1-LittleLink-简单介绍（GitHub翻译）" class="headerlink" title="1. LittleLink 简单介绍（GitHub翻译）"></a>1. LittleLink 简单介绍（GitHub翻译）</h2><p>LittleLink Custom 提供了一种独特的在线链接管理和分享解决方案。我们的平台提供了一个类似于 Linktree 的网站，使用户可以克服社交媒体平台上只能添加一个链接的限制。通过链接到您的 LittleLink Custom 页面，用户可以轻松访问他们需要的所有链接，集中在一个方便的位置。</p><p>我们的平台允许用户在自己的 Web 服务器或 Web 托管提供商上托管他们的链接，确保易于访问和控制他们的在线存在。此外，其他用户可以注册并创建自己的链接，使其成为管理多个链接的企业和组织的理想解决方案。</p><p>我们的平台还包括管理面板，使用户可以轻松访问其他用户的链接，这使其成为管理多个链接的企业和组织的理想解决方案。总的来说，LittleLink Custom 为简化在线存在提供了高效和用户友好的解决方案。</p><p>LittleLink Custom 是 LittleLink Admin 的一个分支，其目标是使管理面板更易于使用和设置，特别适合没有经验和第一次使用的用户，还增加了许多定制功能，以便根据个人用户的 LittleLink 页面进行主题定制。</p><p>LittleLink Custom 的开发旨在简化对 LittleLink 和 LittleLink Admin 的使用和设置，特别适合具有最少编码经验或有限的 Web 托管知识的个人用户。这个项目的设计方式允许将 LittleLink Custom 目录拖放到您的 Web 托管的根目录上，消除了源代码操作或处理复杂终端命令的需求。</p><p>除了用户友好的设置过程外，这个分支还提供了许多定制功能，以增强用户体验，包括根据操作系统或浏览器主题设置自动应用的暗黑模式，以及美观的响应式设计的轻便不显眼的 CSS 动画效果。这些和其他小的改变，在组合起来时，提供了一个显著的功能集，使 LittleLink Custom 与其他分支有所区别。</p><p><strong>总结，它就是一个可以高度自定义的个人链接聚合页。</strong></p><p>支持：</p><ul><li>多用户注册</li><li>自定义css</li><li>添加各种链接</li><li>自定义页脚</li><li>自定义主题</li><li>链接点击次数统计</li><li>支持docker部署，简单快捷</li></ul><p>等等等等……</p><p>如何你是一个自媒体人员，有很多自己的社交平台，这个项目就非常适合你。</p><p>废话不多说，我们马上开始搭建！</p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p>官网：<a href="https://littlelink-custom.com/">https://littlelink-custom.com/</a><br>咕咕的Demo：<a href="https://gugu.ge/">https://gugu.ge/</a><br>官方的Demo：<a href="https://littlelink-custom.llc.ovh/">https://littlelink-custom.llc.ovh/</a><br>GitHub地址：<a href="https://github.com/JulianPrieber/littlelink-custom">https://github.com/JulianPrieber/littlelink-custom</a><br>GitHub地址：<a href="https://github.com/JulianPrieber/llc-docker">https://github.com/JulianPrieber/llc-docker</a><br>官方Docker页面：<a href="https://hub.docker.com/r/julianprieber/littlelink-custom">https://hub.docker.com/r/julianprieber/littlelink-custom</a><br>文档页面：<a href="https://docs.littlelink-custom.com/">https://docs.littlelink-custom.com/</a></p><p>这边直接丢出核心的 <code>docker-compose.yaml</code> 文件，熟悉 docker 环境的小伙伴可以直接拷贝搭建。</p><p><code>littlelink</code> 部署：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">littlelink-custom:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">julianprieber/littlelink-custom</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">littlelink-custom</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">littlelink-custom</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">HTTP_SERVER_NAME:</span> <span class="string">&quot;gugu.ge&quot;</span>   <span class="comment"># gugu.ge 改成自己的域名</span></span><br><span class="line">      <span class="attr">HTTPS_SERVER_NAME:</span> <span class="string">&quot;gugu.ge&quot;</span> <span class="comment"># gugu.ge 改成自己的域名</span></span><br><span class="line">      <span class="attr">SERVER_ADMIN:</span> <span class="string">&quot;admin@gugu.com&quot;</span> <span class="comment"># admin@gugu.com 改成自己的账号</span></span><br><span class="line">      <span class="attr">TZ:</span> <span class="string">&quot;Asia/Shanghai&quot;</span></span><br><span class="line">      <span class="attr">PHP_MEMORY_LIMIT:</span> <span class="string">&quot;512M&quot;</span></span><br><span class="line">      <span class="attr">UPLOAD_MAX_FILESIZE:</span> <span class="string">&quot;16M&quot;</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8088:80&quot;</span>     <span class="comment"># 8088 可以改成没用过的端口</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8090:443&quot;</span>    <span class="comment"># 8090 可以改成没用过的端口</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">llc:/htdocs</span></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line">  <span class="attr">llc:</span></span><br></pre></td></tr></table></figure><p>注意：</p><p><code>&quot;8088:80&quot;</code> 和 <code>&quot;8090:443&quot;</code> 其实只要一个就行，同理，<code>HTTP_SERVER_NAME</code> 和 <code>HTTPS_SERVER_NAME</code> 也一样。</p><p>但俩个都写也不影响。</p><p>以下是详细搭建教程。</p><h2 id="3-搭建环境"><a href="#3-搭建环境" class="headerlink" title="3. 搭建环境"></a>3. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器 24 元 &#x2F; 月 VPS 一台</del> 咕咕自己搭建用的是<a href="https://loll.cc/tx">腾讯轻量应用服务器</a> ，（最好是选 <strong>非大陆（香港）的服务器</strong>）如果是小白刚开始玩的话，还可以购买 <a href="https://blog.laoda.de/archives/cheap-vps-racknerd">Racknerd</a> 的服务器，最低一年不到 100 块（不过这个建议选择 1G 内存以上的机器）（Racknerd 服务器介绍：<a href="https://blog.laoda.de/archives/cheap-vps-racknerd">点击查看</a>）</li><li>系统：Debian 11 （<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD 脚本</a> 非必需 DD，用原来的系统也 OK，之后教程都是用 Debian 或者 Ubuntu 搭建～）</li><li>安装好 Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需但建议】域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>【非必需】提前安装好宝塔面板海外版本 aapanel，并安装好 Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程选用】安装好 Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><blockquote><p>服务器要求：内存建议1G 以上。</p></blockquote><h2 id="4-搭建视频（周末争取补上，最近比较忙-）"><a href="#4-搭建视频（周末争取补上，最近比较忙-）" class="headerlink" title="4. 搭建视频（周末争取补上，最近比较忙 &#x3D; &#x3D;）"></a>4. 搭建视频（周末争取补上，最近比较忙 &#x3D; &#x3D;）</h2><h3 id="4-1-YouTube："><a href="#4-1-YouTube：" class="headerlink" title="4.1 YouTube："></a>4.1 YouTube：</h3><p>视频地址：</p><h3 id="4-2-哔哩哔哩"><a href="#4-2-哔哩哔哩" class="headerlink" title="4.2 哔哩哔哩"></a>4.2 哔哩哔哩</h3><h2 id="5-搭建方式"><a href="#5-搭建方式" class="headerlink" title="5. 搭建方式"></a>5. 搭建方式</h2><p>如果你不是用的腾讯云的轻量应用服务器，可以直接跳到 5.1 部分。</p><h3 id="安装系统（腾讯云轻量应用服务器）"><a href="#安装系统（腾讯云轻量应用服务器）" class="headerlink" title="安装系统（腾讯云轻量应用服务器）"></a>安装系统（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlyhcz-2.webp" alt="e59713fba8726d3cb55ae11bca83fe3c.png"></p><p>腾讯云轻量服务器最大的特点就是 “轻量”，相比 CVM，更适合小白上手，这边我们之间选择 Docker 基础镜像，就可以省去后面安装 Docker 的步骤（如果你非要用国内的服务器，这边装的 Docker 镜像还会帮你配置好国内镜像源，让你加速访问 docker 镜像资源）。</p><h3 id="登陆（腾讯云轻量应用服务器）"><a href="#登陆（腾讯云轻量应用服务器）" class="headerlink" title="登陆（腾讯云轻量应用服务器）"></a>登陆（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlzlj7-2.webp" alt="2722040ee311eb4a9ebf2a4945bf38f4.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm0gv8-2.webp" alt="c0b5d360053746c4095d592967ee401f.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm1vqw-2.webp" alt="e0ba858f021b846ad0abc27acf5008c2.png"></p><h3 id="5-1-安装-Docker-与-Nginx-Proxy-Manager"><a href="#5-1-安装-Docker-与-Nginx-Proxy-Manager" class="headerlink" title="5.1 安装 Docker 与 Nginx Proxy Manager"></a>5.1 安装 Docker 与 Nginx Proxy Manager</h3><p>可以直接参考这篇内容：</p><p><a href="https://blog.laoda.de/archives/nginxproxymanager">https://blog.laoda.de/archives/nginxproxymanager</a></p><h3 id="5-2-创建安装目录"><a href="#5-2-创建安装目录" class="headerlink" title="5.2 创建安装目录"></a>5.2 创建安装目录</h3><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/littlelink</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/littlelink</span><br></pre></td></tr></table></figure><p>这边我们直接用 docker 的方式安装。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure><p>英文输入法下，按 <code>i</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">littlelink-custom:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">julianprieber/littlelink-custom</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">littlelink-custom</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">littlelink-custom</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">HTTP_SERVER_NAME:</span> <span class="string">&quot;gugu.ge&quot;</span>   <span class="comment"># gugu.ge 改成自己的域名</span></span><br><span class="line">      <span class="attr">HTTPS_SERVER_NAME:</span> <span class="string">&quot;gugu.ge&quot;</span> <span class="comment"># gugu.ge 改成自己的域名</span></span><br><span class="line">      <span class="attr">SERVER_ADMIN:</span> <span class="string">&quot;admin@gugu.com&quot;</span> <span class="comment"># admin@gugu.com 改成自己的账号</span></span><br><span class="line">      <span class="attr">TZ:</span> <span class="string">&quot;Asia/Shanghai&quot;</span></span><br><span class="line">      <span class="attr">PHP_MEMORY_LIMIT:</span> <span class="string">&quot;512M&quot;</span></span><br><span class="line">      <span class="attr">UPLOAD_MAX_FILESIZE:</span> <span class="string">&quot;16M&quot;</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8088:80&quot;</span>     <span class="comment"># 8088 可以改成没用过的端口</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8090:443&quot;</span>    <span class="comment"># 8090 可以改成没用过的端口</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">llc:/htdocs</span></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line">  <span class="attr">llc:</span></span><br></pre></td></tr></table></figure><p>修改好之后，注意切换成英文输入法，然后按一下 <code>esc</code>，然后 <code>:wq</code> 保存退出。</p><h3 id="5-3-打开服务器防火墙（非必需）并访问网页"><a href="#5-3-打开服务器防火墙（非必需）并访问网页" class="headerlink" title="5.3 打开服务器防火墙（非必需）并访问网页"></a>5.3 打开服务器防火墙（非必需）并访问网页</h3><p>打开防火墙的端口 <code>8090</code></p><p>举例，腾讯云打开方法如下（部分服务商没有自带的面板防火墙，就不用这步操作了）：</p><img src="https://img.laoda.de/i/2022/06/30/zlio5h-2.webp" alt="image-20220630215240864" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/06/30/10h3dqt-2.webp" alt="image-20220630220546335" style="zoom:33%;" /><p>图中示例填的是 <code>5230</code>，备注填的是 <code>memos</code>，这边我们填 <code>8090</code>，示例填 <code>littlelink</code> ，确定即可（如果你在 docker-compose 文件里换了 <code>9009</code>，这边就需要填 <code>9009</code>，以此类推）</p><img src="https://img.laoda.de/i/2022/08/19/o4byqz-2.webp" alt="image-20220819145844555" style="zoom:33%;" /><p>查看端口是否被占用（以 <code>8090</code> 为例），输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:8090  <span class="comment">#查看 8090 端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果啥也没出现，表示端口未被占用，我们可以继续下面的操作了～</p><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装 lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用（被占用了就修改一下端口，比如改成 <code>8081</code>，注意 docker 命令行里和防火墙都要改）</p><p>最后：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/littlelink    <span class="comment"># 来到 dockercompose 文件所在的文件夹下</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>理论上我们就可以输入 <code>http://ip:8090</code> 访问安装了。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器 IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的 IP。</p><p>2、遇到访问不了的情况，请再次检查在宝塔面板的防火墙和服务商的后台防火墙是否打开对应了端口。</p></blockquote><p>有的小伙伴可能想搭建起来分享给其他人使用，如果后续想要分享给别人，IP + 端口太不优雅了，咕咕建议大家还是搞一个域名，容易记，看起来也更正规一点。这样可以做 https，会让网页更安全。</p><p>而且 <a href="https://loll.cc/ns">namesilo</a> 上面 xyz 后缀的域名一年就 7 块钱，可以年抛。（冷知识，namesilo上 6位数字的xyz续费永远都是0.99美元 &#x3D; &#x3D;）</p><p>如果想要长期使用，还是建议买 com 后缀的域名，更加正规一些，可以输入 <code>laodade</code> 来获得 1 美元的优惠（不知道现在还有没有）</p><p><a href="https://loll.cc/ns">namesilo</a> 自带隐私保护，咕咕一直在用这家，价格也是这些注册商里面比较低的，关键是他家不像其他家域名注册商，没有七七八八的套路！（就是后台界面有些<del>丑</del> 古老 &#x3D; &#x3D;）</p><p><a href="https://blog.laoda.de/archives/namesilo">【域名购买】Namesilo 优惠码和域名解析教程（附带服务器购买推荐和注意事项）</a></p><p>我们接着往下看！</p><h3 id="5-4-更新-littlelink"><a href="#5-4-更新-littlelink" class="headerlink" title="5.4 更新 littlelink"></a>5.4 更新 littlelink</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/littlelink</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/littlelink /root/data/docker_data/littlelink.archive  <span class="comment"># 万事先备份，以防万一</span></span><br><span class="line"></span><br><span class="line">docker-compose pull</span><br><span class="line"></span><br><span class="line">docker-compose up -d    <span class="comment"># 请不要使用 docker-compose stop 来停止容器，因为这么做需要额外的时间等待容器停止；docker-compose up -d 直接升级容器时会自动停止并立刻重建新的容器，完全没有必要浪费那些时间。</span></span><br><span class="line"></span><br><span class="line">docker image prune  <span class="comment"># prune 命令用来删除不再使用的 docker 对象。删除所有未被 tag 标记和未被容器使用的镜像</span></span><br></pre></td></tr></table></figure><p>提示：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WARNING! This will remove all dangling images.</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] </span><br></pre></td></tr></table></figure><p>输入 <code>y</code></p><p>利用 Docker 搭建的应用，更新非常容易～</p><h3 id="5-5-卸载-littlelink"><a href="#5-5-卸载-littlelink" class="headerlink" title="5.5 卸载 littlelink"></a>5.5 卸载 littlelink</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/littlelink</span><br><span class="line"></span><br><span class="line">docker-compose down</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/littlelink  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>可以卸载得很干净。</p><h2 id="6-反向代理"><a href="#6-反向代理" class="headerlink" title="6. 反向代理"></a>6. 反向代理</h2><p>我们要用域名而不是IP+端口的方式来访问我们的服务！</p><h3 id="6-1-利用-Nginx-Proxy-Manager"><a href="#6-1-利用-Nginx-Proxy-Manager" class="headerlink" title="6.1 利用 Nginx Proxy Manager"></a>6.1 利用 Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p><img src="https://img.laoda.de/i/2022/10/16/n6t02e-2.webp" alt="image-20221016140213282"></p><p>之后，登陆 Nginx Proxy Manager（不会的看这个：<strong>安装 Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称 NPM）会用到 <code>80</code>、<code>443</code> 端口，所以本机不能占用（比如原来就有 Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom: 33%;" /><img src="https://img.laoda.de/i/2023/04/03/pnip9i-0.webp" alt="image-20230403155113921" style="zoom:50%;" /><blockquote><p> 注意填写对应的 <code>域名</code>、<code>IP</code> 和 <code>端口</code>，按文章来的话，应该是 <code>8090</code></p></blockquote><p><strong>IP 填写：</strong></p><p>如果 Nginx Proxy Manager 和 littlelink 在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的 Docker 容器内部 IP。</p><p><img src="https://img.laoda.de/i/2022/09/29/pcdnz5-2.webp"></p><p>否则直接填 <code>littlelink</code> 所在的服务器 IP 就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom: 33%;" /><p>再次打开，勾选这些：</p><p><img src="https://img.laoda.de/i/2022/10/16/n7nn6e-2.webp" alt="image-20221016140356324"></p><p>然后就可以用域名来安装访问了。</p><h3 id="6-2-利用宝塔面板"><a href="#6-2-利用宝塔面板" class="headerlink" title="6.2 利用宝塔面板"></a>6.2 利用宝塔面板</h3><p>发现还是有不少小伙伴习惯用宝塔面板，这边也贴一个宝塔面板的反代配置：</p><p>直接新建一个站点，不要数据库，不要 php，纯静态即可。</p><p>然后打开下面的配置，修改 Nginx 的配置。</p><p><img src="https://img.laoda.de/i/2022/08/19/ov4xrt-2.webp" alt="image-20220819150345725"></p><p><img src="https://img.laoda.de/i/2022/08/19/owbbkb-2.webp" alt="image-20220819150542867"></p><p>代码如下：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:8088/;       <span class="comment"># 注意改成你实际使用的端口</span></span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此方法对 90% 的反向代理都能生效，然后就可以用域名来安装访问了。</p><p>有同学可能会问，为什么不直接用宝塔自带的反向代理功能。</p><p><img src="https://img.laoda.de/i/2022/08/19/oxf800-2.webp" alt="image-20220819150730128"></p><p>也可以，不过咕咕自己之前遇到过当有多个网站需要反代的时候，在这边设置会报错的情况 &#x3D; &#x3D; </p><p>所以后来就不用了，直接用上面的方法来操作了。</p><h2 id="7-使用教程"><a href="#7-使用教程" class="headerlink" title="7. 使用教程"></a>7. 使用教程</h2><p>这边等录视频的时候好好说，这边先丢图，大家自己摸索一下 &#x3D; &#x3D;</p><p>第一次登录：</p><p><img src="https://img.laoda.de/i/2023/04/03/ov2nbl-0.webp" alt="image-20230403150336195"></p><p>点击下一步：</p><p><img src="https://img.laoda.de/i/2023/04/03/ov4te3-0.webp" alt="image-20230403150346123"></p><p>下一步：</p><p><img src="https://img.laoda.de/i/2023/04/03/ov6joy-0.webp" alt="image-20230403150355008"></p><p>下一步：</p><p>输入自己的邮箱和密码之类的东西，看图：</p><p><img src="https://img.laoda.de/i/2023/04/03/ovppgi-0.webp" alt="image-20230403150444061"></p><ul><li><p>是否允许注册？</p></li><li><p>是否要验证邮箱（注册的时候）？</p></li><li><p>是否把你的页面设置为主页？</p></li><li><p>项目名字</p></li></ul><p>这些之后都可以在后台改的，不用担心。</p><p><img src="https://img.laoda.de/i/2023/04/03/ow4o21-0.webp" alt="image-20230403150513614"></p><p>目前首页的样子：</p><p><img src="https://img.laoda.de/i/2023/04/03/ow7azp-0.webp" alt="image-20230403150525839"></p><p>登录：</p><p><img src="https://img.laoda.de/i/2023/04/03/owa106-0.webp" alt="image-20230403150539361"></p><p>可以自动升级一下：</p><p><img src="https://img.laoda.de/i/2023/04/03/owosr5-0.webp" alt="image-20230403150607610"></p><p>目前我们的个人页面的样子，很丑 &#x3D; &#x3D;</p><p><img src="https://img.laoda.de/i/2023/04/03/owuozn-0.webp" alt="image-20230403150635357"></p><p>登录后台看看：</p><p><img src="https://img.laoda.de/i/2023/04/03/oxzymz-0.webp" alt="image-20230403150827558"></p><p>添加个人网址：</p><p><img src="https://img.laoda.de/i/2023/04/03/oyhyuf-0.webp" alt="image-20230403150911568"></p><p>除了自带图标的网站，还可以加入自定义网站：</p><p><img src="https://img.laoda.de/i/2023/04/03/oyo8n8-0.webp" alt="image-20230403150940454"></p><p>修改个人页面的信息：</p><p><img src="https://img.laoda.de/i/2023/04/03/p0vwsp-0.webp" alt="image-20230403151312874"></p><p>上传背景图：</p><p><img src="https://img.laoda.de/i/2023/04/03/p1jcrh-0.webp" alt="image-20230403151422192"></p><p>修改主题和上传背景图之后的预览：</p><p><img src="https://img.laoda.de/i/2023/04/03/p1qy0p-0.webp" alt="image-20230403151457070"></p><p><img src="https://img.laoda.de/i/2023/04/03/p3a1iy-0.webp" alt="image-20230403151714436"></p><p>大家可以自己先尝试看看，不难，详细的操作的话等咕咕周末搞个视频见出来。</p><h2 id="8-待完善的地方"><a href="#8-待完善的地方" class="headerlink" title="8. 待完善的地方"></a>8. 待完善的地方</h2><p>1、背景图默认保存的是第一次上传的图片，之后替换<del>不了</del> 很慢（BUG）</p><p>2、把页面首页改成自己的个人页之后，后续想要登录后台，需要在网址后面加<code>/home</code>，比如：<code>https://gugu.ge/home</code></p><h2 id="9-结尾"><a href="#9-结尾" class="headerlink" title="9. 结尾"></a>9. 结尾</h2><p>祝大家用得开心，有问题可以去 GitHub 提 <a href="https://github.com/JulianPrieber/llc-docker/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，littlelink的生态还在慢慢建立当中，有能力给项目做贡献的同学，也欢迎积极加入到 <a href="https://github.com/JulianPrieber/llc-docker">项目</a> 中来，贡献自己的一份力量！</p><p>最后，感谢littlelink团队的辛苦付出，让我们能用到这么优秀的项目！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>官网：<a href="https://littlelink-custom.com/">https://littlelink-custom.com/</a><br>官方的Demo：<a href="https://littlelink-custom.llc.ovh/">https://littlelink-custom.llc.ovh/</a><br>GitHub地址：<a href="https://github.com/JulianPrieber/littlelink-custom">https://github.com/JulianPrieber/littlelink-custom</a><br>GitHub地址：<a href="https://github.com/JulianPrieber/llc-docker">https://github.com/JulianPrieber/llc-docker</a><br>官方Docker页面：<a href="https://hub.docker.com/r/julianprieber/littlelink-custom">https://hub.docker.com/r/julianprieber/littlelink-custom</a><br>文档页面：<a href="https://docs.littlelink-custom.com/">https://docs.littlelink-custom.com/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;今天来分享一个类似LinkTree功能的开源项目——LittleLink。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.laoda.de/i/2023/04/03/p81gty-0.webp&quot; alt=&quot;LittleLink Custom&quot;&gt;&lt;/p&gt;
&lt;p&gt;大</summary>
      
    
    
    
    <category term="Docker系列" scheme="https://blog.laoda.de/categories/Docker%E7%B3%BB%E5%88%97/"/>
    
    
    <category term="LinkTree" scheme="https://blog.laoda.de/tags/LinkTree/"/>
    
    <category term="LittleLink" scheme="https://blog.laoda.de/tags/LittleLink/"/>
    
    <category term="个人主页" scheme="https://blog.laoda.de/tags/%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5/"/>
    
  </entry>
  
  <entry>
    <title>【VPS选购经验分享】CN2 GIA+9929优化线路，V.PS新鸡荷兰阿姆斯特丹 Ryzen 7950x Mini VPS，年付39.95欧元！</title>
    <link href="https://blog.laoda.de/archives/vps-hosting/"/>
    <id>https://blog.laoda.de/archives/vps-hosting/</id>
    <published>2023-04-02T15:56:37.551Z</published>
    <updated>2023-05-08T15:44:02.120Z</updated>
    
    <content type="html"><![CDATA[<p>不推荐购买，虽然咕咕的号目前还在，但是商家有删号历史，客服非常任性。</p><p>详情请见：</p><p><a href="https://hostloc.com/thread-1167684-1-1.html">V.PS 账户被封了 里面有服务还在运行 大家有遇到吗</a></p><p><a href="https://hostloc.com/thread-1167831-1-1.html">【V.PS】让VIRMACH 都自愧不如</a></p><p>买鸡还是要牢记：远离国人商家。</p><hr><p><img src="https://img.laoda.de/i/2023/04/02/12x8kcw-0.webp" alt="image-20230402235353291"></p><p>V.PS 是 xTom 旗下的一个 VPS 商家。</p><p>xTom是一家在德国境内成立的私人控股的服务器托管公司。 拥有全球各地数个数据中心，包括法兰克福，阿姆斯特丹，香港，东京，大坂，弗里蒙特，纽约和悉尼，这些数据中心拥有优质带宽，如Level 3，Telia，NTT和中国电信。xTom是德国最受欢迎的网络服务商之一。</p><p><a href="https://vps.hosting/?affid=985">V.PS</a>新上架荷兰阿姆斯特丹 Ryzen 7950x Mini VPS，线路为CN2 GIA + 9929 优化线路，CPU单核跑分2000+，共有2个套餐，mini和mini plus，最低配mini vps，年付39.95欧元。</p><p>CPU加线路看起来非常不错，咕咕也入手了一台，给大家试试水～</p><p><img src="https://img.laoda.de/i/2023/04/02/12x2844-0.webp" alt="image-20230402235316979"></p><h2 id="1-官网"><a href="#1-官网" class="headerlink" title="1. 官网"></a>1. 官网</h2><p><strong>网址：<a href="https://vps.hosting/?affid=985">https://v.ps</a></strong></p><blockquote><p>注意：</p><p>注册新账号的话需要使用真实点的信息，要不不能用PayPal。</p><p>这家退款政策严格：账号只能退1次，并且必须购买＜14天，流量没超10G等</p></blockquote><p>咕咕就被判定欺诈了 &#x3D; &#x3D;</p><p>咕咕去邮箱里点击验证账号，</p><img src="https://img.laoda.de/i/2023/04/03/2ou5o-0.webp" alt="image-20230403000450494" style="zoom:50%;" /><p>然后用的支付宝付款的 &#x3D; &#x3D;</p><h2 id="2-荷兰mini套餐"><a href="#2-荷兰mini套餐" class="headerlink" title="2. 荷兰mini套餐"></a>2. 荷兰mini套餐</h2><p>特征：KVM虚拟，SSD RAID10阵列，1Gbps带宽，自带一个IPv4，CN2 GIA+9929优化线路</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>SSD</strong></th><th><strong>带宽@流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1G</td><td>1核</td><td>15G</td><td>1G@1T</td><td>€39.95&#x2F;年</td><td><strong><a href="https://vps.hosting/cart/?cmd=cart&action=add&id=196&aff=985">链接</a></strong></td></tr><tr><td>2G</td><td>1核</td><td>20G</td><td>1G@2T</td><td>€49.95&#x2F;年</td><td><strong><a href="https://vps.hosting/?cmd=cart&action=add&id=197&aff=985">链接</a></strong></td></tr></tbody></table><p>咕咕买的是€39.95&#x2F;年这款。</p><h2 id="3-VPS测试"><a href="#3-VPS测试" class="headerlink" title="3. VPS测试"></a>3. VPS测试</h2><h3 id="3-1-基本情况"><a href="#3-1-基本情况" class="headerlink" title="3.1 基本情况"></a>3.1 基本情况</h3><p><img src="https://img.laoda.de/i/2023/04/02/12swerr-0.webp" alt="image-20230402234617613"></p><h3 id="3-2-速度测试"><a href="#3-2-速度测试" class="headerlink" title="3.2 速度测试"></a>3.2 速度测试</h3><p><img src="https://img.laoda.de/i/2023/04/02/12srhlg-0.webp" alt="image-20230402234559505"></p><h3 id="3-3-回程线路"><a href="#3-3-回程线路" class="headerlink" title="3.3 回程线路"></a>3.3 回程线路</h3><h4 id="上海电信"><a href="#上海电信" class="headerlink" title="上海电信"></a>上海电信</h4><p>回程CN2 GIA，非常舒服。</p><p><img src="https://img.laoda.de/i/2023/04/02/12t0fei-0.webp" alt="image-20230402234639998"></p><h4 id="上海联通"><a href="#上海联通" class="headerlink" title="上海联通"></a>上海联通</h4><p>回程联通AS9929。</p><p><img src="https://img.laoda.de/i/2023/04/02/12tds6s-0.webp" alt="image-20230402234702506"></p><h4 id="上海移动"><a href="#上海移动" class="headerlink" title="上海移动"></a>上海移动</h4><p>通过走联通4837，再走移动自己的线路。</p><p><img src="https://img.laoda.de/i/2023/04/02/12tgm4f-0.webp" alt="image-20230402234715405"></p><h4 id="北京教育网"><a href="#北京教育网" class="headerlink" title="北京教育网"></a>北京教育网</h4><p>走联通9929回国。</p><p><img src="https://img.laoda.de/i/2023/04/02/12to0in-0.webp" alt="image-20230402234746736"></p><p>Share result:<br> · <a href="https://www.speedtest.net/result/c/fdc6a788-25f4-4821-bf97-0c69aca736c3">https://www.speedtest.net/result/c/fdc6a788-25f4-4821-bf97-0c69aca736c3</a><br> · <a href="https://paste.ubuntu.com/p/2Yw3tJbG99/">https://paste.ubuntu.com/p/2Yw3tJbG99/</a></p><h3 id="3-4-PING值"><a href="#3-4-PING值" class="headerlink" title="3.4 PING值"></a>3.4 PING值</h3><p>荷兰，这个ping值可以的。</p><p><img src="https://img.laoda.de/i/2023/04/02/12v8eib-0.webp" alt="image-20230402235015011"></p><p><img src="https://img.laoda.de/i/2023/04/02/12vaqmg-0.webp" alt="image-20230402235026578"></p><h3 id="3-5-网络测试"><a href="#3-5-网络测试" class="headerlink" title="3.5 网络测试"></a>3.5 网络测试</h3><p>晚上11点30分</p><p><img src="https://img.laoda.de/i/2023/04/02/12uuorl-0.webp" alt="image-20230402234945643"></p><p><img src="https://img.laoda.de/i/2023/04/02/12upbne-0.webp" alt="image-20230402234918698"></p><h2 id="4-其他"><a href="#4-其他" class="headerlink" title="4. 其他"></a>4. 其他</h2><h3 id="4-1-速度测试和-Looking-Glass（官方提供）"><a href="#4-1-速度测试和-Looking-Glass（官方提供）" class="headerlink" title="4.1 速度测试和 Looking Glass（官方提供）"></a>4.1 速度测试和 Looking Glass（官方提供）</h3><p>Test IPv4: 78.142.195.195</p><p>Test IPv6: 2a0c:59c0:12::10b</p><p>Test file: <a href="https://ams.lg.v.ps/100MB.test">https://ams.lg.v.ps/100MB.test</a></p><p>Looking glass: <a href="https://ams.lg.v.ps/">https://ams.lg.v.ps/</a></p><p>Speedtest: <a href="https://ams.speedtest.v.ps/">https://ams.speedtest.v.ps/</a></p><h3 id="4-2-YABS-Benchmark（官方提供）"><a href="#4-2-YABS-Benchmark（官方提供）" class="headerlink" title="4.2 YABS Benchmark（官方提供）"></a>4.2 YABS Benchmark（官方提供）</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Sun 02 Apr 2023 02:34:55 PM UTC</span><br><span class="line"></span><br><span class="line">Basic System Information:</span><br><span class="line">---------------------------------</span><br><span class="line">Uptime     : 0 days, 0 hours, 3 minutes</span><br><span class="line">Processor  : AMD Ryzen 9 7950X 16-Core Processor</span><br><span class="line">CPU cores  : 1 @ 4491.572 MHz</span><br><span class="line">AES-NI     : ✔ Enabled</span><br><span class="line">VM-x/AMD-V : ✔ Enabled</span><br><span class="line">RAM        : 1.9 GiB</span><br><span class="line">Swap       : 256.0 MiB</span><br><span class="line">Disk       : 19.6 GiB</span><br><span class="line">Distro     : Debian GNU/Linux 11 (bullseye)</span><br><span class="line">Kernel     : 5.10.0-21-cloud-amd64</span><br><span class="line">VM Type    : KVM</span><br><span class="line">Net Online : IPv4 &amp; IPv6</span><br><span class="line"></span><br><span class="line">IPv4 Network Information:</span><br><span class="line">---------------------------------</span><br><span class="line">ISP        : xTom GmbH</span><br><span class="line">ASN        : AS3214 xTom GmbH</span><br><span class="line">Host       : xTom</span><br><span class="line">Location   : Amsterdam, North Holland (NH)</span><br><span class="line">Country    : Netherlands</span><br><span class="line"></span><br><span class="line">fio Disk Speed Tests (Mixed R/W 50/50):</span><br><span class="line">---------------------------------</span><br><span class="line">Block Size | 4k            (IOPS) | 64k           (IOPS)</span><br><span class="line">  ------   | ---            ----  | ----           ----</span><br><span class="line">Read       | 102.65 MB/s  (25.6k) | 1.05 GB/s    (16.4k)</span><br><span class="line">Write      | 102.92 MB/s  (25.7k) | 1.05 GB/s    (16.5k)</span><br><span class="line">Total      | 205.58 MB/s  (51.3k) | 2.11 GB/s    (33.0k)</span><br><span class="line">           |                      |</span><br><span class="line">Block Size | 512k          (IOPS) | 1m            (IOPS)</span><br><span class="line">  ------   | ---            ----  | ----           ----</span><br><span class="line">Read       | 1.02 GB/s     (2.0k) | 1.01 GB/s      (990)</span><br><span class="line">Write      | 1.08 GB/s     (2.1k) | 1.08 GB/s     (1.0k)</span><br><span class="line">Total      | 2.10 GB/s     (4.1k) | 2.09 GB/s     (2.0k)</span><br><span class="line"></span><br><span class="line">Geekbench 5 Benchmark Test:</span><br><span class="line">---------------------------------</span><br><span class="line">Test            | Value</span><br><span class="line">                |</span><br><span class="line">Single Core     | 2195</span><br><span class="line">Multi Core      | 2259</span><br><span class="line">Full Test       | https://browser.geekbench.com/v5/cpu/20990976</span><br><span class="line"></span><br><span class="line">YABS completed <span class="keyword">in</span> 2 min 11 sec</span><br></pre></td></tr></table></figure><h2 id="5-总结"><a href="#5-总结" class="headerlink" title="5. 总结"></a>5. 总结</h2><p>还不错，咕咕会用一段时间，看看稳不稳定。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;不推荐购买，虽然咕咕的号目前还在，但是商家有删号历史，客服非常任性。&lt;/p&gt;
&lt;p&gt;详情请见：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://hostloc.com/thread-1167684-1-1.html&quot;&gt;V.PS 账户被封了 里面有服务还在运行 大家有遇到吗&lt;</summary>
      
    
    
    
    <category term="VPS推荐" scheme="https://blog.laoda.de/categories/VPS%E6%8E%A8%E8%8D%90/"/>
    
    
    <category term="欧洲VPS" scheme="https://blog.laoda.de/tags/%E6%AC%A7%E6%B4%B2VPS/"/>
    
    <category term="xTom" scheme="https://blog.laoda.de/tags/xTom/"/>
    
  </entry>
  
</feed>
