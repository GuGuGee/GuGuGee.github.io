<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>分享一下自己在VPS/NAS/本地电脑上是怎么备份数据的</title>
      <link href="/archives/321-backup/"/>
      <url>/archives/321-backup/</url>
      
        <content type="html"><![CDATA[<p>今天在整理文件，正好稍微梳理一下自己在不同设备上的备份方法，简单和大家分享下。（有不对的地方或者更好的建议欢迎评论区指出～）</p><p>先简单介绍一个ChatGPT给出的321备份策略（有很多种说法，这个是其中一种）：</p><img src="https://img.laoda.de/i/2023/09/22/spa8o4-0.webp" alt="8f3274298133f20b777c479310e1df5b.png" style="zoom:50%;" /><blockquote><p>321备份原则是一种数据备份策略，旨在防止数据丢失。具体来说，它建议按照以下方式备份数据：</p><ul><li>3份备份：也就是最少拥有你数据的三个副本。比如说，一个在你的电脑硬盘上（原始数据），剩下的两个在其他不同的存储媒介上。</li><li>2种不同的存储类型：这意味着你不能把所有的备份都放在同一种存储设备上，例如仅使用硬盘做备份。第二份备份应储存在不同的设备或系统上，比如外部硬盘，网络附加存储（NAS），DVD，云存储等。</li><li>1份离线（或离站）备份：这意味着你需要有一份备份是存储在离开你的日常工作区域的区域中的，最好是在完全不同的地理位置。这是为了防止像火灾、洪水这种可能摧毁你现场数据和备份的灾难。</li></ul></blockquote><p>按照321备份原则做好数据备份，你就具备了充分保护数据，防止灾难性数据丢失的准备。</p><h2 id="服务器上的数据备份"><a href="#服务器上的数据备份" class="headerlink" title="服务器上的数据备份"></a>服务器上的数据备份</h2><img src="https://img.laoda.de/i/2023/09/22/spbwf8-0.webp" alt="5fed802585c251d8d30d5536f32b9a8e.png" style="zoom: 67%;" /><p>这个适合那些手头上VPS不止一台的小伙伴使用。（最好有一台机器硬盘大一点）</p><p>其实之前也和大家已经介绍过了——<a href="https://blog.laoda.de/archives/chatgpt-script-about-vps-backup/index.html">用ChatGPT帮你写一个VPS定时自动备份脚本</a>，不少小伙伴总喜欢尝试一些奇奇怪怪的VPS商家，这些商家说不定哪天就跑路了，但是架不住人家便宜啊，就是忍不住剁手要买，搭配这个脚本，可以让你少丢失一些数据。（开玩笑，任何VPS商家都有丢失数据的可能性，如果你觉得你的数据重要，就一定记得备份）</p><p>这边以Debian 11 系统为例子，如果看咕咕视频比较多的，应该都知道咕咕推荐大家玩docker把各个项目都放<code>/root/data/docker_data</code>目录下（其实更好的是把配置文件和数据分开放），这个脚本就是备份我们的docker项目的，实现的功能如下：</p><p>把A服务器上的<code>/root/data/docker_data</code>目录下的文件每天早上4点钟定时备份到B服务器的<code>/root/data/backup_data</code>文件夹下，</p><ul><li>备份文件在B服务器上最多保存3份，并以时间戳命名。</li><li>B服务器的IP地址是：<code>150.117.211.107</code>, ssh端口是<code>222</code>。（按需修改）</li><li>备份的日志保存在A服务器的<code>/root/logs</code>文件夹下，并且日志包含时间信息</li><li>备份和传输的过程可以显示进度条，并且有提示信息，并且进度条最多显示100%（安装好pv，临时备份文件放在<code>/tmp</code>目录下，上传完成之后可以删掉）</li><li>保留文件原有的属性（所有者等信息）</li><li>恢复备份的时候，只有<code>/root/data/docker_data</code>中的内容而不包括<code>/root/data/...</code>完整路径</li></ul><p>咕咕这边用的备份服务器是<a href="https://blog.laoda.de/archives/vps-hosthatch/index.html">Hosthatch</a>家的大盘鸡，当时65刀&#x2F;3年的价格，有1T的硬盘，还有无限流量的BUG（标的20T，实际不统计流量），还不错的。（他家有过丢数据的情况，所以这个机器咕咕就用来跑下载和备份用了）</p><img src="https://img.laoda.de/i/2023/09/22/spmiwk-0.webp" alt="df9c744aa798d9df038870d916816c2c.png" style="zoom:33%;" /><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line">cd ~</span><br><span class="line">apt update -y &amp;&amp; apt upgrade -y </span><br><span class="line">apt install pv rsync -y    # 注意A、B服务器上都装上rsync</span><br><span class="line">mkdir script</span><br><span class="line">vim backup.sh</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Variables</span></span><br><span class="line">SOURCE_DIR=<span class="string">&quot;/root/data/docker_data/&quot;</span></span><br><span class="line">DEST_DIR=<span class="string">&quot;/root/data/backup_data/&quot;</span></span><br><span class="line">REMOTE_IP=<span class="string">&quot;150.117.211.107&quot;</span></span><br><span class="line">SSH_PORT=222</span><br><span class="line">TMP_BACKUP=<span class="string">&quot;/tmp/data_backup_<span class="subst">$(date +&#x27;%Y%m%d%H%M%S&#x27;)</span>.tar.gz&quot;</span></span><br><span class="line">LOG_FILE=<span class="string">&quot;/root/logs/backup_<span class="subst">$(date +&#x27;%Y%m%d&#x27;)</span>.log&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Start backup</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="subst">$(date)</span> - Starting backup...&quot;</span> | <span class="built_in">tee</span> -a <span class="variable">$LOG_FILE</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create the backup with tar, display progress with pv</span></span><br><span class="line">tar czfP - <span class="variable">$SOURCE_DIR</span> --absolute-names --transform <span class="string">&#x27;s|^/root/data/||&#x27;</span> | pv -p -t -e -r -s $(<span class="built_in">du</span> -sb <span class="variable">$SOURCE_DIR</span> | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>) &gt; <span class="variable">$TMP_BACKUP</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Rsync the backup to the remote server, displaying progress</span></span><br><span class="line">rsync -avhP --remove-source-files -e <span class="string">&quot;ssh -p <span class="variable">$SSH_PORT</span>&quot;</span> <span class="variable">$TMP_BACKUP</span> root@<span class="variable">$REMOTE_IP</span>:<span class="variable">$DEST_DIR</span> | <span class="built_in">tee</span> -a <span class="variable">$LOG_FILE</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Remove backups in B server exceeding 3</span></span><br><span class="line">ssh -p <span class="variable">$SSH_PORT</span> root@<span class="variable">$REMOTE_IP</span> <span class="string">&quot;cd <span class="variable">$DEST_DIR</span> &amp;&amp; (ls -t | head -n 3; ls) | sort | uniq -u | xargs rm -f&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Cleanup temp file in case rsync failed to remove it</span></span><br><span class="line"><span class="built_in">rm</span> -f <span class="variable">$TMP_BACKUP</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="subst">$(date)</span> - Backup completed.&quot;</span> | <span class="built_in">tee</span> -a <span class="variable">$LOG_FILE</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x backup.sh</span><br></pre></td></tr></table></figure><p>A服务器创建好文件夹</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"><span class="built_in">mkdir</span> logs</span><br></pre></td></tr></table></figure><p>B服务器创建好文件夹</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /root/data/backup_data/</span><br></pre></td></tr></table></figure><p>A、B服务器之间创建免密码登录</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 在A服务器上</span></span><br><span class="line"></span><br><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line">ssh-keygen    <span class="comment"># 一路回车即可</span></span><br><span class="line"></span><br><span class="line">ssh-copy-id -i ~/.ssh/id_rsa.pub -p 222 root@150.117.211.107</span><br></pre></td></tr></table></figure><p>每天早上4点执行备份：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">crontab -e</span><br></pre></td></tr></table></figure><p>在crontab界面中输入：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0 4 * * * /root/script/backup.sh</span><br></pre></td></tr></table></figure><blockquote><p>脚本操作包含敏感操作，如远程登录、文件传输等，在执行前，应确保所有操作、路径和细节均无问题。<br>可以根据需要修改脚本，比如修改备份文件名、备份路径、备份文件最多保留数目等参数。</p></blockquote><p>咕咕的站点都在<a href="https://blog.laoda.de/archives/vps-bandwagonhost/index.html">搬瓦工</a>和<a href="https://blog.laoda.de/archives/vps-hetzner/index.html">Hetzner</a>上，其中搬瓦工有免费的自动备份，Hetzner也有收费的自动备份功能，咕咕都用上了，搭配这个脚本，一定程度上减少了数据丢失的风险。</p><h2 id="NAS的数据备份"><a href="#NAS的数据备份" class="headerlink" title="NAS的数据备份"></a>NAS的数据备份</h2><img src="https://img.laoda.de/i/2023/09/22/spokpd-0.webp" alt="37f639a2a4f8f78bbdf60881c93d9d9d.png" style="zoom: 33%;" /><p>咕咕之前用的威联通TS-453BMini（8G版本），系统还是比较复杂的（上周挂了小黄鱼打算出掉，有想要接盘的吗）</p><p>前俩周淘了一台群晖的Synology DS920+，发现这个系统才友好嘛。这边就以群晖来举例子。</p><p>首先说说RAID的事情。</p><p>这边直接放出我自己个人的做法：</p><p>不组RAID，不做SHR，全部四块硬盘用的都是BASIC。</p><p>简单聊一下为啥。</p><ul><li>SHR 群晖自己的RAID模式，适合小白，本质上是根据硬盘数量帮你自动组RAID1、RAID5之类的</li><li>RAID0 读写速度翻倍，享受全部硬盘容量，但是一块坏了，数据就全丢了，风险太高（如果你是纯搞PT刷流量可以考虑）</li><li>RAID1 其实本质就是一块硬盘完全同步另一块硬盘的数据，同步的作用，的确是可以一定程度帮忙恢复数据的（一块硬盘坏了），但是对我来说，重要的数据即使丢了一点也很可惜，还是得备份，而且RAID1还损失了一半的硬盘空间。</li><li>RAID5 也有一定的容错能力，但是据说恢复数据非常非常慢，而且最好等你新硬盘到了再拆坏掉的硬盘，不然期间又坏了一块硬盘，你的数据就都没了。而且恢复期间服务用不了，比较讨厌。</li><li>JBOD 这个曾经是咕咕在类似OVH和HZ独立服务器上最想要弄的模式，因为搞PT下载，一个盘只有2T不够用（qb挂载的问题只能有一个路径，换另一个路径似乎这个路径下就做不了种了），把4块2T合在一起，直接变8T就很爽了。最近才知道原来这种情况下万一有一块硬盘坏了，数据也是全丢的，那不如直接上RAID0 了（如果有错误，欢迎评论区指出）</li></ul><p>所以咕咕最后的选择是全部BASIC模式，类似Windows上的CDEF盘一样，彼此不干扰，重要的数据自己再备份。</p><p>备份方案：</p><p>Cloud Sync 挂载 Onedrive备份重要文件（强烈建议大家可以搞一个office365的家庭版）</p><img src="https://img.laoda.de/i/2023/09/22/sppms8-0.webp" alt="5173fadaa9fd2565de71f60e5420355e.png" style="zoom:33%;" /><p>再用 USB Copy，备份一份到移动硬盘上。（咕咕用的是很多年以前的LaCie 1T版本，但是花了529 &#x3D; &#x3D; 没怎么关注移动硬盘了，欢迎大家在评论区推荐性价比高的）</p><img src="https://img.laoda.de/i/2023/09/22/spqu2n-0.webp" alt="a19985c50a9eb7654adcedf0a97845af.png" style="zoom: 33%;" /><p>这样一来，也符合321备份原则，可以放心数据安全问题了。</p><blockquote><p>PS：其实不管是群晖还是威联通，本质都是Linux系统，也都能算“服务器”，完全也可以用前面服务器备份的方法来搞，不过既然这边有现成的套件，咕咕就用套件了</p></blockquote><h2 id="本地电脑的数据备份"><a href="#本地电脑的数据备份" class="headerlink" title="本地电脑的数据备份"></a>本地电脑的数据备份</h2><img src="https://img.laoda.de/i/2023/09/22/sps79s-0.webp" alt="a942fdeea69f1f44966d93cfa84f4cf2.png" style="zoom:80%;" /><p>这边咕咕用的就比较多了，咕咕日常使用的是MacBook Air，我开通了iCloud的2T套餐，手上又有家庭版的1T的Onedrive还有<a href="https://blog.laoda.de/archives/docker-compose-install-nextcloud-aio/index.html">自建的Nextcloud</a></p><p>这边我都用了 &#x3D; &#x3D;</p><p>文稿和桌面文件夹用iCloud同步，和家里的MacMini配合使用起来还不错。</p><p>工作的文件大部分都在Onedrive里头，这个Windows电脑、Mac电脑都能同步，上下班不用再背电脑回去了。</p><p>挂载Nextcloud一般放一些个人的资料。Nextcloud有一个问题就是它没办法和iCloud和Onedrive一样有个“释放本地空间”的功能，这样会比较占本地的空间，没法想下载下载想释放空间释放空间，有点遗憾。</p><p>以上。写的有点粗糙，希望能够给大家有所启发。</p><p>有问题，或者文中有什么错误的地方也欢迎大家在评论区交流指正。</p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 备份 </tag>
            
            <tag> NAS </tag>
            
            <tag> iCloud </tag>
            
            <tag> Onedrive </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>下架多年，重磅回归！搬瓦工传家宝49美元 CN2 GIA套餐回来了！这次还有限量版免费更换IP套餐！</title>
      <link href="/archives/bwg-promotion-2023/"/>
      <url>/archives/bwg-promotion-2023/</url>
      
        <content type="html"><![CDATA[<p><strong>车已经开走了！</strong></p><p>非常建议大家使用新邮箱购买！万一不要了可以出手。（49刀这款之前二手市场溢价贼高 &#x3D; &#x3D;）</p><p>咕咕已经入手一个了 &#x3D; &#x3D;</p><p><img src="https://img.laoda.de/i/2023/09/12/zmh8f5-0.webp" alt="image-20230912215404833"></p><p>一张图告诉你为啥要买：</p><img src="https://img.laoda.de/i/2023/09/13/tyk9g9-0.webp" alt="image-20230913181155450" style="zoom:67%;" /><p>偷懒，以下是ChatGPT生成的：</p><p>亲爱的网络爱好者们，搬瓦工正在推出他们的全新套餐——FREEDOM PLAN。这个精心打造的计划，仅适用于 DC2 AO Coresite 机房，只需$89&#x2F;年，就可以享受2核 CPU、2GB 内存、40GB SSD 硬盘、2000GB 流量以及高达2.5Gbps的带宽——这是你所需要的一切，尽在这个包里！</p><p>最值得一提的是，此套餐独有的优惠——每两周都可以免费更换一次 IP 地址。想象一下这样的自由和便利，每14天，都有新的开始等你接受。更为独特的是，你无需为更换 IP 换得头痛而烦恼，一切都已在这份套餐里包含了。</p><p>不仅如此，今天是个特殊的日子，搬瓦工正与前所未有的慷慨心情为你重新上架一款备受热爱的产品——洛杉矶DC6 CN2 GIA-E限量版。这款产品已经下架多年，如今又重磅回归，仅需$46.59&#x2F;年。别忘了，还有 DC9、日本软银等多款限量版套餐都重新上架了。</p><p>这是一个不可多得的机会，无论你是刚入手的初学者，还是寻求网络性能升级的专业人士，我们的新款优化线路的产品都能满足你的需求。如果你一直在寻找一款性价比高的机器，那么今天就是你找寻的那一天。别犹豫！立即享受搬瓦工为你实现的一切网络自由的可能性吧。</p><p><img src="https://img.laoda.de/i/2023/09/12/xx85tb-0.webp" alt="搬瓦工，上架两周免费更换IP套餐年付89美元，并补货美西DC6/DC9/日本软银等限量套餐/年付49美元起"></p><h4 id="1、官网"><a href="#1、官网" class="headerlink" title="1、官网"></a>1、官网</h4><p><strong>网址</strong>： <strong><a href="https://bwh81.net/aff.php?aff=67086">https://bwh81.net</a></strong></p><p>日常6.81%优惠码：<a href="https://bwh81.net/aff.php?aff=67086">BWHNCXNVXV</a></p><p>搬瓦工介绍：<a href="https://blog.laoda.de/archives/vps-bandwagonhost">https://blog.laoda.de/archives/vps-bandwagonhost</a></p><h4 id="2、搬瓦工年付-49-99美元-CN2-GIA套餐补货（最推荐！！！）"><a href="#2、搬瓦工年付-49-99美元-CN2-GIA套餐补货（最推荐！！！）" class="headerlink" title="2、搬瓦工年付$49.99美元 CN2 GIA套餐补货（最推荐！！！）"></a>2、搬瓦工年付$49.99美元 CN2 GIA套餐补货（最推荐！！！）</h4><p>SPECIAL 10G KVM PROMO V5 - LOS ANGELES - CN2 GIA LIMITED EDITION</p><p>三网CN2 GIA（移动去程直连）线路。可选 DC6 CN2 GIA-E、DC9 CN2 GIA、日本软银、荷兰联通 9929 等机房。</p><p>可用机房预览：</p><p><img src="https://img.laoda.de/i/2023/09/13/91awo-0.webp" alt="image-20230913001515552"></p><p>测试IP：65.49.131.102</p><ul><li>内存：512M</li><li>CPU：1核</li><li>硬盘：10G SSD</li><li>流量：500G&#x2F;月</li><li>带宽：1Gbps</li><li>价格：$49.99&#x2F;年（可使用：<a href="https://bwh81.net/aff.php?aff=67086">BWHNCXNVXV</a>）</li><li><a href="https://bwh81.net/aff.php?aff=67086&pid=94"><strong>购买链接</strong></a></li></ul><h4 id="3、FREEDOM-PLAN-限量版套餐-不可切换机房（对IP有需求的推荐！！！）"><a href="#3、FREEDOM-PLAN-限量版套餐-不可切换机房（对IP有需求的推荐！！！）" class="headerlink" title="3、FREEDOM PLAN 限量版套餐 -不可切换机房（对IP有需求的推荐！！！）"></a>3、FREEDOM PLAN 限量版套餐 -不可切换机房（对IP有需求的推荐！！！）</h4><p>特色：每两周可免费更换一次 IP 地址。</p><p>网络：三网双程直连，走的都是各自的骨干线路。</p><p>测试 IP：65.49.198.195</p><ul><li>内存：2G</li><li>CPU：2核</li><li>硬盘：40G SSD</li><li>流量：2000G&#x2F;月</li><li>带宽：2.5Gbps</li><li>价格：$89&#x2F;年（可使用：<a href="https://bwh81.net/aff.php?aff=67086">BWHNCXNVXV</a> 优惠6.81%，折后价$82.94美元。）</li><li><a href="https://bwh81.net/aff.php?aff=67086&pid=133"><strong>购买链接</strong></a></li></ul><h4 id="4、DC9-CN2-GIA-限量版-VPS补货"><a href="#4、DC9-CN2-GIA-限量版-VPS补货" class="headerlink" title="4、DC9 CN2 GIA 限量版 VPS补货"></a>4、DC9 CN2 GIA 限量版 VPS补货</h4><p>SPECIAL 20G KVM PROMO V3 - LOS ANGELES - CN2 GIA LIMITED EDITION DC9 VPS</p><p>三网CN2 GIA（移动去程直连）线路。可使用 DC9 CN2 GIA、DC3 CN2 等机房（不能用 DC6、软银、EUNL_9）</p><p>测试IP：65.49.131.102</p><ul><li>内存：1G</li><li>CPU：1核</li><li>硬盘：20G SSD</li><li>流量：500G&#x2F;月</li><li>带宽：1Gbps</li><li>价格：$79.99&#x2F;年（可使用：<a href="https://bwh81.net/aff.php?aff=67086">BWHNCXNVXV </a> 优惠6.58%，折后 $74.73&#x2F;年）</li><li><a href="https://bwh81.net/aff.php?aff=67086&pid=112"><strong>购买链接</strong></a></li></ul><h4 id="4、DC6-CN2-GIA-E-限量版-VPS-89-9美元款（建站推荐！！！）"><a href="#4、DC6-CN2-GIA-E-限量版-VPS-89-9美元款（建站推荐！！！）" class="headerlink" title="4、DC6 CN2 GIA-E 限量版 VPS - 89.9美元款（建站推荐！！！）"></a>4、DC6 CN2 GIA-E 限量版 VPS - 89.9美元款（建站推荐！！！）</h4><p>三网CN2 GIA（移动去程直连）线路。可切换机房：美西DC6（USCA_6）、DC9（USCA_9）、日本软银 (JPOS_1)、荷兰（EUNL_9）等</p><blockquote><p>目前可在购买后升级到 CN2 GIA-E 40G 限量版，仅需10美元配置翻倍。</p></blockquote><ul><li>内存：1G</li><li>CPU：1核</li><li>硬盘：20G SSD</li><li>流量：500G&#x2F;月</li><li>带宽：1Gbps</li><li>价格：$89.99&#x2F;年（可使用：<a href="https://bwh81.net/aff.php?aff=67086">BWHNCXNVXV</a> 优惠6.81%，折后价83.86美元。）</li><li><a href="https://bwh81.net/aff.php?aff=67086&pid=105"><strong>购买链接</strong></a></li></ul><h4 id="5、日本软银限量版套餐补货"><a href="#5、日本软银限量版套餐补货" class="headerlink" title="5、日本软银限量版套餐补货"></a>5、日本软银限量版套餐补货</h4><p>三网双程都是走的日本软银，此外移动去程为cmi线路。日本软银 (JPOS_1)，不可更换机房。</p><ul><li>内存：512M</li><li>CPU：1核</li><li>硬盘：10G SSD（RAID-10）</li><li>流量：500G&#x2F;月</li><li>带宽：1Gbps</li><li>价格：$69.99&#x2F;年（可使用：<a href="https://bwh81.net/aff.php?aff=67086">BWHNCXNVXV </a> 优惠6.58%）</li><li><a href="https://bwh81.net/aff.php?aff=67086&pid=104"><strong>购买链接</strong></a></li></ul>]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CN2 GIA </tag>
            
            <tag> 搬瓦工 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>无惧DDOS，无需开放额外端口，无需服务器，随时随地访问局域网Web应用——Cloudflare Tunnel</title>
      <link href="/archives/cloudflare-tunnel/"/>
      <url>/archives/cloudflare-tunnel/</url>
      
        <content type="html"><![CDATA[<p>利用这个方法，可以让你在局域网（尤其是NAS）上搭建的web应用支持公网访问，成本低而且操作简单！</p><p>如果是博客的话还可以有效防止DDOS攻击！</p><blockquote><p>对于联通用户可能不太友好，据咕咕所知很多地区联通用户访问不了Cloudflare的节点</p></blockquote><h2 id="1-视频"><a href="#1-视频" class="headerlink" title="1. 视频"></a>1. 视频</h2><p>文字比较简略，强烈建议搭配视频食用！</p><p>YouTube：<a href="https://youtu.be/Q_xB3433WTg">https://youtu.be/Q_xB3433WTg</a></p><p>哔哩哔哩：<a href="https://www.bilibili.com/video/BV1pj411C78j/">https://www.bilibili.com/video/BV1pj411C78j/</a></p><h2 id="2-准备工作"><a href="#2-准备工作" class="headerlink" title="2. 准备工作"></a>2. 准备工作</h2><ul><li>一个域名（推荐<a href="https://loll/cc.ns">Namesilo</a>注册，输入优惠码<code>laodade</code>或者<code>gugugee</code>可以便宜1美元）</li><li>一张外币信用卡或者PayPal</li></ul><h2 id="3-配置域名"><a href="#3-配置域名" class="headerlink" title="3. 配置域名"></a>3. 配置域名</h2><h3 id="3-1-注册Namesilo"><a href="#3-1-注册Namesilo" class="headerlink" title="3.1 注册Namesilo"></a>3.1 注册Namesilo</h3><p><img src="https://img.laoda.de/i/2023/09/09/vq76zf-0.webp" alt="fea8081ce89bea90ea01ef29cd2fce7a.png"></p><h3 id="3-2-注册CloudFlare"><a href="#3-2-注册CloudFlare" class="headerlink" title="3.2 注册CloudFlare"></a>3.2 注册CloudFlare</h3><p><img src="https://img.laoda.de/i/2023/09/09/vr7bz2-0.webp" alt="ab221202a98a188093d1ed8bf1630f5c.png"></p><h3 id="3-3-更换DNS解析"><a href="#3-3-更换DNS解析" class="headerlink" title="3.3 更换DNS解析"></a>3.3 更换DNS解析</h3><p><img src="https://img.laoda.de/i/2023/09/09/w1lfqa-0.webp" alt="image-20230909193757157"></p><h2 id="4-开通CloudFlare-Tunnel"><a href="#4-开通CloudFlare-Tunnel" class="headerlink" title="4. 开通CloudFlare Tunnel"></a>4. 开通CloudFlare Tunnel</h2><p>绑定一个支付方式，实际CF并不会扣钱。</p><p><img src="https://img.laoda.de/i/2023/09/09/xrzzrt-0.webp" alt="2023-09-09-0002"></p><h2 id="5-群晖配置Cloudflared"><a href="#5-群晖配置Cloudflared" class="headerlink" title="5. 群晖配置Cloudflared"></a>5. 群晖配置Cloudflared</h2><h3 id="5-1-使用图形化界面安装Cloudflared"><a href="#5-1-使用图形化界面安装Cloudflared" class="headerlink" title="5.1 使用图形化界面安装Cloudflared"></a>5.1 使用图形化界面安装Cloudflared</h3><p><img src="https://img.laoda.de/i/2023/09/09/vszu81-0.webp" alt="image-20230909192313776"></p><p><img src="https://img.laoda.de/i/2023/09/09/vt5hum-0.webp" alt="image-20230909192339730"></p><p><img src="https://img.laoda.de/i/2023/09/09/vtlx6v-0.webp" alt="image-20230909192415905"></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --restart=always cloudflare/cloudflared:latest tunnel --no-autoupdate run --token eyJhIjoiNGQ4ZGY0ZjVjODJjYmY0MmUwNjg3NmRmZWZmZmZlODIieLCJ0IjoiODY3YjgzNGMtNWFkYy00O0TI3LTkyN2MtYmQyNWUzYzk5MTUyIiwicyI6Ik1EVmpaalEwT0RVdE1URmlPUzAwTW1JeExUZ3wlOVGNr0TjJFeU9EZzFNV1kxTTJNMyJ9</span><br></pre></td></tr></table></figure><p>命令填：<code>tunnel run --token eyJhIjoiNGQ4ZGY0ZjVjODJjYmY0MmUwNjg3NmRmZWZmZmZlODIieLCJ0IjoiODY3YjgzNGMtNWFkYy00O0TI3LTkyN2MtYmQyNWUzYzk5MTUyIiwicyI6Ik1EVmpaalEwT0RVdE1URmlPUzAwTW1JeExUZ3wlOVGNr0TjJFeU9EZzFNV1kxTTJNMyJ9</code>即可。</p><h3 id="5-2-使用命令行安装Cloudflared（推荐）"><a href="#5-2-使用命令行安装Cloudflared（推荐）" class="headerlink" title="5.2 使用命令行安装Cloudflared（推荐）"></a>5.2 使用命令行安装Cloudflared（推荐）</h3><h4 id="5-2-1-打开SSH"><a href="#5-2-1-打开SSH" class="headerlink" title="5.2.1 打开SSH"></a>5.2.1 打开SSH</h4><p><img src="https://img.laoda.de/i/2023/09/09/vrewat-0.webp" alt="f319dbbe140bba2de1c8672eb28adea3.png"></p><h4 id="5-2-2-运行"><a href="#5-2-2-运行" class="headerlink" title="5.2.2 运行"></a>5.2.2 运行</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --restart=always cloudflare/cloudflared:latest tunnel --no-autoupdate run --token eyJhIjoiNGQ4ZGY0ZjVjODJjYmY0MmUwNjg3NmRmZWZmZmZlODIieLCJ0IjoiODY3YjgzNGMtNWFkYy00O0TI3LTkyN2MtYmQyNWUzYzk5MTUyIiwicyI6Ik1EVmpaalEwT0RVdE1URmlPUzAwTW1JeExUZ3wlOVGNr0TjJFeU9EZzFNV1kxTTJNMyJ9</span><br></pre></td></tr></table></figure><p>这条命令的完整解释如下：</p><ul><li><p><code>docker run</code>: 这是用来启动一个新容器的命令。</p></li><li><p><code>-d</code>: 这个选项让 Docker 在后台运行这个容器，并且返回容器 ID。</p></li><li><p><code>--restart=always</code>: 如上所述，这将设置容器的重启策略为始终重启。</p></li><li><p><code>cloudflare/cloudflared:latest</code>: 这是你想运行的 Docker 镜像。具体来说，你正在运行 Cloudflare 的 <code>cloudflared</code> 镜像的最新版本。</p></li><li><p><code>tunnel --no-autoupdate run --token eyJhI...J9</code>: 这些是传递给 <code>cloudflared</code> 镜像的参数，用于配置和运行你的 tunnel。</p></li></ul><p>这条命令将启动一个新的 <code>cloudflared</code> 容器，这个容器将始终在后台运行，并在停止后自动重新启动。</p><h2 id="6-CF后台配置"><a href="#6-CF后台配置" class="headerlink" title="6. CF后台配置"></a>6. CF后台配置</h2><p><img src="https://img.laoda.de/i/2023/09/09/w6c4s4-0.webp" alt="tunnel-0001"></p><p><img src="https://img.laoda.de/i/2023/09/09/w6o85h-0.webp" alt="tunnel-0003"></p><p><img src="https://img.laoda.de/i/2023/09/09/w6u68w-0.webp" alt="tunnel-0004"></p><p><img src="https://img.laoda.de/i/2023/09/09/w6wb6z-0.webp" alt="tunnel-0005"></p><p><img src="https://img.laoda.de/i/2023/09/09/w78iec-0.webp" alt="tunnel-0006"></p><p><img src="https://img.laoda.de/i/2023/09/09/w7b09s-0.webp" alt="tunnel-0007"></p><h2 id="7-添加额外认证"><a href="#7-添加额外认证" class="headerlink" title="7. 添加额外认证"></a>7. 添加额外认证</h2><p><img src="https://img.laoda.de/i/2023/09/09/w7e4k8-0.webp" alt="tunnel-0008"></p><p><img src="https://img.laoda.de/i/2023/09/09/w7ifp5-0.webp" alt="tunnel-0009"></p><p><img src="https://img.laoda.de/i/2023/09/09/w7suox-0.webp" alt="tunnel-0011"></p><p><img src="https://img.laoda.de/i/2023/09/09/w7uoar-0.webp" alt="tunnel-0012"></p><p><img src="https://img.laoda.de/i/2023/09/09/w7wkpv-0.webp" alt="tunnel-0013"></p><p><img src="https://img.laoda.de/i/2023/09/09/w8195d-0.webp" alt="tunnel-0017"></p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NAS </tag>
            
            <tag> Cloudflare Tunnel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩儿的Docker项目】Nextcloud All-in-One 全新搭建分享，拒绝繁琐配置，开箱即用！维护简单！</title>
      <link href="/archives/docker-compose-install-nextcloud-aio/"/>
      <url>/archives/docker-compose-install-nextcloud-aio/</url>
      
        <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h2><img src="https://img.laoda.de/i/2023/08/25/rbpf7g-0.webp" alt="IMG_9771C6762B1A-1.jpeg" style="zoom:33%;" /><p>百度网盘，咕咕已经好久没用了，准确来说，百度的产品，咕咕已经好久没用了，今天收到了这条短信，打算偷偷用公司的百度会员把之前存的一些老古董学习资料转移备份一波。</p><p>问题来了，东西放哪？</p><p>咕咕目前用的主力存储空间是：</p><ul><li>1T的office 365的Onedrive</li><li>1T的Google One</li><li>2T的iCloud 家庭组</li></ul><p>这些都是第三方的大厂，而且相对来说比较靠谱。</p><p>然而，谷歌也不乏因为用户图库里面有小孩子下体的照片，误判为儿童色情内容，把用户账号封禁的例子。要想要真正把数据掌握在自己手里，还是得多备份。</p><p>或者说，自建一个网盘，多备份。</p><p>Nextcloud是非常有名的开源网盘，功能丰富。</p><p>之前和大家介绍过Nextcloud的搭建方法：</p><p>宝塔版本：</p><p><a href="https://blog.laoda.de/archives/nextcloud-aapanel-install/index.html">【好玩的项目】可能是史上最全的基于宝塔面板（海外版 aapanel）的 Nextcloud 网盘搭建教程！</a></p><p>无面板版本：<br><a href="https://blog.laoda.de/archives/docker-compose-install-nextcloud/index.html">【好玩儿的 Docker 项目】可能是目前全网最完整的 Docker 搭建 Nextcloud 教程（包含安全与设置警告报错信息的解决方法）</a></p><p>以上任意一个搭建方法，搭完之后都要处理一堆的问题，很是累人。</p><p>根据小伙伴们的反馈，用上述方法搭建完成之后，想要装onlyoffice等一些插件也会多多少少遇到一些奇奇怪怪的问题。</p><p>今天我们就来分享如何彻底解决以上安装Nextcloud的痛点。</p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p>直接丢几个图：</p><img src="https://img.laoda.de/i/2023/08/25/rbrisj-0.webp" alt="5d00cf8124b264eacc182aba357bd3fd.png" style="zoom: 33%;" /><img src="https://img.laoda.de/i/2023/08/25/rbugyf-0.webp" alt="2fb495fb09994de60f232fff0335b16b.png" style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/08/25/rbvqbx-0.webp" alt="e0ddba048766714b8c2f66c8bfa58369.png" style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/08/25/rc5xl9-0.webp" alt="348e8be10f8ee969184740aae3df03b9.png" style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/08/25/rc7cu0-0.webp" alt="4d4f7027061390bac462a74e8f0b6a11.png" style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/08/25/rc9g7x-0.webp" alt="1b6cf331c449698c1cf0c812814767a6.png" style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/08/25/rcaz1j-0.webp" alt="f9015a710ade4e45cc21e94b37fa2765.png" style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/08/25/rccdiu-0.webp" alt="039659b98a430182355bcbd237cd502a.png" style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/08/25/rcdn10-0.webp" alt="5955d14f93f6f115c6cb83eb83b6e2ba.png" style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/08/25/rcesnv-0.webp" alt="18bb49ff699fe6c4e401837fa89f96d4.png" style="zoom:33%;" /><h3 id="2-1-特点"><a href="#2-1-特点" class="headerlink" title="2.1 特点"></a>2.1 特点</h3><ul><li>支持docker一键部署，用容器部署容器</li><li>更新简单</li><li>高性能后端</li><li>支持全局搜索</li><li>支持Nextcloud Talk</li><li>支持ClamAV（Nextcloud的杀毒软件后端）</li><li>支持全套办公套件</li><li>支持备份（基于BorgBackup）</li><li>省心省力</li><li>文档及其丰富（各种地方的搭建教程均有）<br>……</li></ul><h2 id="3-相关地址"><a href="#3-相关地址" class="headerlink" title="3. 相关地址"></a>3. 相关地址</h2><p>GitHub官方仓库：<a href="https://github.com/nextcloud/all-in-one">https://github.com/nextcloud/all-in-one</a><br>官方Docker镜像：<a href="https://hub.docker.com/r/nextcloud/all-in-one">https://hub.docker.com/r/nextcloud/all-in-one</a><br>官方反代相关文档地址：<a href="https://github.com/nextcloud/all-in-one/blob/main/reverse-proxy.md">https://github.com/nextcloud/all-in-one/blob/main/reverse-proxy.md</a> （支持各种反代）</p><h2 id="4-搭建环境"><a href="#4-搭建环境" class="headerlink" title="4. 搭建环境"></a>4. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器 24 元 &#x2F; 月 VPS 一台</del> 咕咕演示搭建用的是香港的<a href="https://loll.cc/tx">腾讯轻量应用服务器</a> ，（最好选 非大陆的，而且线路还不错的机器）如果是小白刚开始玩的话，也可以选择<a href="https://blog.laoda.de/vps/">Racknerd</a>的高性价比服务器（注意地区选美国西部城市的）</li><li>系统：Debian 11 （<a href="https://blog.laoda.de/archives/useful-script/">DD 脚本</a> 非必需 DD，用原来的系统也 OK，之后教程都是用 Debian 或者 Ubuntu 搭建～）</li><li>安装好 Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker/">相关脚本</a>）</li><li>【非必需但建议】域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo/">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>【非必需】提前安装好宝塔面板海外版本 aapanel，并安装好 Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程选用】安装好 Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager/">相关教程</a>）</li></ul><blockquote><p>服务器要求：内存建议2G以上，越大越好！硬盘也是越大越好</p></blockquote><h2 id="5-搭建视频"><a href="#5-搭建视频" class="headerlink" title="5. 搭建视频"></a>5. 搭建视频</h2><h3 id="5-1-YouTube"><a href="#5-1-YouTube" class="headerlink" title="5.1 YouTube"></a>5.1 YouTube</h3><p>视频地址：<a href="https://youtu.be/CapStYi-Djs">https://youtu.be/CapStYi-Djs</a></p><h3 id="5-2-哔哩哔哩"><a href="#5-2-哔哩哔哩" class="headerlink" title="5.2 哔哩哔哩"></a>5.2 哔哩哔哩</h3><p>哔哩哔哩：<a href="https://www.bilibili.com/video/BV1Yu4y1X7yX">https://www.bilibili.com/video/BV1Yu4y1X7yX</a></p><h2 id="6-搭建方式"><a href="#6-搭建方式" class="headerlink" title="6. 搭建方式"></a>6. 搭建方式</h2><p>如果你不是用的腾讯云的轻量应用服务器，可以直接跳到 6.1 部分。</p><h3 id="安装系统（腾讯云轻量应用服务器）"><a href="#安装系统（腾讯云轻量应用服务器）" class="headerlink" title="安装系统（腾讯云轻量应用服务器）"></a>安装系统（腾讯云轻量应用服务器）</h3><img src="https://img.laoda.de/i/2022/08/16/zlyhcz-2.webp" alt="e59713fba8726d3cb55ae11bca83fe3c.png" style="zoom:33%;" /><p>腾讯云轻量服务器最大的特点就是 “轻量”，相比 CVM，更适合小白上手，这边我们之间选择 Docker 基础镜像，就可以省去后面安装 Docker 的步骤 <del>（如果你非要用国内的服务器，这边装的 Docker 镜像还会帮你配置好国内镜像源，让你加速访问 docker 镜像资源）</del> 不建议用国内的 。</p><h3 id="登陆（腾讯云轻量应用服务器）"><a href="#登陆（腾讯云轻量应用服务器）" class="headerlink" title="登陆（腾讯云轻量应用服务器）"></a>登陆（腾讯云轻量应用服务器）</h3><img src="https://img.laoda.de/i/2022/08/16/zlzlj7-2.webp" alt="2722040ee311eb4a9ebf2a4945bf38f4.png" style="zoom:25%;" /><img src="https://img.laoda.de/i/2022/08/16/zm0gv8-2.webp" alt="c0b5d360053746c4095d592967ee401f.png" style="zoom:25%;" /><img src="https://img.laoda.de/i/2022/08/16/zm1vqw-2.webp" alt="e0ba858f021b846ad0abc27acf5008c2.png" style="zoom:25%;" /><h3 id="6-1-安装-Docker-与-Nginx-Proxy-Manager"><a href="#6-1-安装-Docker-与-Nginx-Proxy-Manager" class="headerlink" title="6.1 安装 Docker 与 Nginx Proxy Manager"></a>6.1 安装 Docker 与 Nginx Proxy Manager</h3><p>可以直接参考这篇内容：</p><p><a href="https://blog.laoda.de/archives/nginxproxymanager/">https://blog.laoda.de/archives/nginxproxymanager/</a></p><h3 id="6-2-创建安装目录"><a href="#6-2-创建安装目录" class="headerlink" title="6.2 创建安装目录"></a>6.2 创建安装目录</h3><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/aio-nextcloud</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/aio-nextcloud</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure><p>英文输入法下，按 <code>i</code></p><p>以下是咕咕修改的，可以看看有啥不一样（具体见视频）</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3.8&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line"> <span class="attr">nextcloud_aio_mastercontainer:</span></span><br><span class="line">   <span class="attr">name:</span> <span class="string">nextcloud_aio_mastercontainer</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"> <span class="attr">nextcloud:</span></span><br><span class="line">   <span class="attr">image:</span> <span class="string">nextcloud/all-in-one:latest</span></span><br><span class="line">   <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">   <span class="attr">container_name:</span> <span class="string">nextcloud-aio-mastercontainer</span></span><br><span class="line">   <span class="attr">volumes:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">nextcloud_aio_mastercontainer:/mnt/docker-aio-config</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">/var/run/docker.sock:/var/run/docker.sock:ro</span></span><br><span class="line">   <span class="attr">ports:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="number">8090</span><span class="string">:8080</span> <span class="comment"># change the port on the left side if it&#x27;s already in use on your host system.</span></span><br><span class="line">   <span class="attr">environment:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">APACHE_PORT=11000</span>  <span class="comment"># change this port number if 11000 is already in use on your host system.</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">APACHE_DISABLE_REWRITE_IP=1</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">NEXTCLOUD_TRUSTED_DOMAINS=pan.gugu.ovh</span> <span class="number">31.22</span><span class="number">.109</span><span class="number">.18</span> <span class="comment"># Your domain name + proxy host IP</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">TRUSTED_PROXIES=31.22.109.18</span> <span class="comment"># proxy host IP</span></span><br></pre></td></tr></table></figure><p>大家修改好之后，注意切换成英文输入法，然后按一下 <code>esc</code>，然后 <code>:wq</code> 保存退出。</p><h3 id="6-3-打开服务器防火墙（非必需）并访问网页"><a href="#6-3-打开服务器防火墙（非必需）并访问网页" class="headerlink" title="6.3 打开服务器防火墙（非必需）并访问网页"></a>6.3 打开服务器防火墙（非必需）并访问网页</h3><p>打开防火墙的端口 <code>8090</code>和<code>11000</code></p><p>举例，腾讯云打开方法如下（部分服务商没有自带的面板防火墙，就不用这步操作了）：</p><img src="https://img.laoda.de/i/2022/06/30/zlio5h-2.webp" alt="image-20220630215240864" style="zoom: 25%;" /><img src="https://img.laoda.de/i/2022/06/30/10h3dqt-2.webp" alt="image-20220630220546335" style="zoom: 25%;" /><p>图中示例填的是 <code>5230</code>，备注填的是 <code>memos</code>，这边我们填 <code>8090</code>，示例填 <code>aio-nextcloud</code> ，确定即可（如果你在 docker-compose 文件里换了 <code>9009</code>，这边就需要填 <code>9009</code>，以此类推）</p><img src="https://img.laoda.de/i/2022/08/19/o4byqz-2.webp" alt="image-20220819145844555" style="zoom: 25%;" /><p>查看端口是否被占用（以 <code>8090</code> 为例），输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:8090  <span class="comment">#查看 8090 端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果啥也没出现，表示端口未被占用，我们可以继续下面的操作了～</p><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装 lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用（被占用了就修改一下端口，比如改成 <code>8081</code>，注意 docker 命令行里和防火墙都要改）</p><p>理论上我们就可以输入 <code>http://ip:8090</code> 访问了。</p><p>但是这边我们需要先搞一下反向代理！</p><p>做反向代理前，你需要一个域名！</p><p> <a href="https://loll.cc/ns">namesilo</a> 上面 xyz 后缀的域名一年就 7 块钱，可以年抛。（冷知识，namesilo上 6位数字的xyz续费永远都是0.99美元 &#x3D; &#x3D;）</p><p>如果想要长期使用，还是建议买 com 后缀的域名，更加正规一些，可以输入 <code>laodade</code> 来获得 1 美元的优惠（不知道现在还有没有）</p><p><a href="https://loll.cc/ns">namesilo</a> 自带隐私保护，咕咕一直在用这家，价格也是这些注册商里面比较低的，关键是他家不像其他家域名注册商，没有七七八八的套路！（就是后台界面有些<del>丑</del> 古老 &#x3D; &#x3D;）</p><p><a href="https://blog.laoda.de/archives/namesilo/">【域名购买】Namesilo 优惠码和域名解析教程（附带服务器购买推荐和注意事项）</a></p><p>我们接着往下看！</p><h2 id="7-反向代理"><a href="#7-反向代理" class="headerlink" title="7. 反向代理"></a>7. 反向代理</h2><h3 id="7-1-利用-Nginx-Proxy-Manager"><a href="#7-1-利用-Nginx-Proxy-Manager" class="headerlink" title="7.1 利用 Nginx Proxy Manager"></a>7.1 利用 Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo/">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><img src="https://img.laoda.de/i/2022/10/16/n6t02e-2.webp" alt="image-20221016140213282" style="zoom:33%;" /><p>之后，登陆 Nginx Proxy Manager（不会的看这个：<strong>安装 Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager/">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称 NPM）会用到 <code>80</code>、<code>443</code> 端口，所以本机不能占用（比如原来就有 Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2023/08/25/rcrfvt-0.webp" alt="c1352ab7d41b750af109fe70df9838fb.png" style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/08/25/rcsx5o-0.webp" alt="a289ca549a9d1d79348aefac66486f2e.png" style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/08/25/rcuk4b-0.webp" alt="e1f240a840f498e5869a29dc0f9348bd.png" style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/08/25/rcvy7u-0.webp" alt="b8c1b61838dc0ca9a2c6d8d220fb97d5.png" style="zoom:33%;" /><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">client_body_buffer_size</span> <span class="number">512k</span>;</span><br><span class="line"><span class="attribute">proxy_read_timeout</span> <span class="number">86400s</span>;</span><br><span class="line"><span class="attribute">client_max_body_size</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><blockquote><p>注意填写对应的 <code>域名</code>、<code>IP</code> 和 <code>端口</code>，按文章来的话，应该是 <code>11000</code></p></blockquote><p><strong>IP 填写：</strong></p><p>如果 Nginx Proxy Manager 和 aio-nextcloud 在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的 Docker 容器内部 IP。</p><img src="https://img.laoda.de/i/2022/09/29/pcdnz5-2.webp" style="zoom:50%;" /><p>否则直接填 <code>aio-nextcloud</code> 所在的服务器 IP 就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom: 33%;" /><p>然后输入：<a href="https://ip:8090/">https://ip:8090</a> 进入安装页面。</p><h3 id="7-2-利用宝塔面板"><a href="#7-2-利用宝塔面板" class="headerlink" title="7.2 利用宝塔面板"></a>7.2 利用宝塔面板</h3><p>发现还是有不少小伙伴习惯用宝塔面板，这边也贴一个宝塔面板的反代配置：</p><p>直接新建一个站点，不要数据库，不要 php，纯静态即可。</p><p>然后打开下面的配置，修改 Nginx 的配置。</p><img src="https://img.laoda.de/i/2022/08/19/ov4xrt-2.webp" alt="image-20220819150345725" style="zoom: 33%;" /><img src="https://img.laoda.de/i/2022/08/19/owbbkb-2.webp" alt="image-20220819150542867" style="zoom: 33%;" /><p>代码如下：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:11000/;       <span class="comment"># 注意改成你实际使用的端口</span></span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此方法对 90% 的反向代理都能生效，然后就可以用域名来安装访问了。</p><p>有同学可能会问，为什么不直接用宝塔自带的反向代理功能。</p><img src="https://img.laoda.de/i/2022/08/19/oxf800-2.webp" alt="image-20220819150730128" style="zoom: 33%;" /><p>也可以，不过咕咕自己之前遇到过当有多个网站需要反代的时候，在这边设置会报错的情况 &#x3D; &#x3D;</p><p>所以后来就不用了，直接用上面的方法来操作了。</p><h2 id="8-使用教程"><a href="#8-使用教程" class="headerlink" title="8. 使用教程"></a>8. 使用教程</h2><p>建议参考视频，或者结合官方文档食用：<a href="https://github.com/nextcloud/all-in-one">https://github.com/nextcloud/all-in-one</a></p><h3 id="8-1-登录"><a href="#8-1-登录" class="headerlink" title="8.1 登录"></a>8.1 登录</h3><p>输入<code>https://ip:8090</code>，登录nextcloud后台安装页面。</p><p>记住这个密码：</p><img src="https://img.laoda.de/i/2023/08/25/rddvv2-0.webp" alt="403eecf1f240d71c1fb50ed58b6bc92e.png" style="zoom: 33%;" /><p>输入密码：</p><img src="https://img.laoda.de/i/2023/08/25/rdflfi-0.webp" alt="04a2c5341a79f40a5452faa45c466001.png" style="zoom:33%;" /><p>输入你在<code>docker-compose.yml</code>填的域名：</p><img src="https://img.laoda.de/i/2023/08/25/rdi7xw-0.webp" alt="692c6b9a57842b0f893f68d83bb3ac26.png" style="zoom:33%;" /><p>选择想要额外安装的容器（我这边全选了，注意全选的话内存官方建议8G以上）</p><img src="https://img.laoda.de/i/2023/08/25/rdjszs-0.webp" alt="ed7035cb2b4d39a1aecf14b03880bc09.png" style="zoom:33%;" /><p>等全绿了说明安装好了，这个过程根据你服务器的性能时间长短不一，慢的可能要10分钟。</p><img src="https://img.laoda.de/i/2023/08/25/re5x6j-0.webp" alt="2ee0014bea22791be8fea1c10aa99044.png" style="zoom:33%;" /><p>耐心等待之后，搞定啦！</p><img src="https://img.laoda.de/i/2023/08/25/re7vkj-0.webp" alt="21bdcf0cb22e65f6a1b42efd6a835eef.png" style="zoom:33%;" /><h3 id="8-2-更新-aio-nextcloud"><a href="#8-2-更新-aio-nextcloud" class="headerlink" title="8.2 更新 aio-nextcloud"></a>8.2 更新 aio-nextcloud</h3><p>同样进入安装页面，点击更新即可。</p><h3 id="8-3-卸载-aio-nextcloud"><a href="#8-3-卸载-aio-nextcloud" class="headerlink" title="8.3 卸载 aio-nextcloud"></a>8.3 卸载 aio-nextcloud</h3><p>同样进入安装页面，先停止所有容器。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/aio-nextcloud</span><br><span class="line"></span><br><span class="line">docker-compose down</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/aio-nextcloud  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>你还需要查看一下volume，删除volume。</p><p>可以卸载得很干净。</p><h2 id="9-常见问题"><a href="#9-常见问题" class="headerlink" title="9. 常见问题"></a>9. 常见问题</h2><h3 id="9-1-导出数据插件似乎有问题"><a href="#9-1-导出数据插件似乎有问题" class="headerlink" title="9.1 导出数据插件似乎有问题"></a>9.1 导出数据插件似乎有问题</h3><img src="https://img.laoda.de/i/2023/08/25/reaatk-0.webp" alt="b280834aa5396bbb25e508e1c999eed1.png" style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/08/25/s4haku-0.webp" alt="3d2724e28a18c0fafb237ec58880c923.png" style="zoom:33%;" /><h3 id="9-2-迁移服务器很丝滑"><a href="#9-2-迁移服务器很丝滑" class="headerlink" title="9.2 迁移服务器很丝滑"></a>9.2 迁移服务器很丝滑</h3><p>咕咕实测很顺利，主要就是找到你备份的那个borg文件夹位置（备份的密码也千万记得），把他迁移到新的服务器上，然后重新运行一下<code>docker-compose.yml</code>文件即可</p><p>登录安装页面之后，选择恢复文件（注意选对borg的路径），输入密码，后台就会先起一个borg的容器，等备份恢复了之后，再次登录安装页面，再启动其他的容器即可。</p><p>下面是几张咕咕自测的参考图：</p><img src="https://img.laoda.de/i/2023/08/25/s4x05z-0.webp" alt="002f91235efbdd321995f71877645c16.png" style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/08/25/s6tp39-0.webp" alt="1f7eeac788a7110a479e7238ab2512e2.png" style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/08/25/s74w6e-0.webp" alt="17348b5f7579b56c827631cf75fbfe47.png" style="zoom:33%;" /><p>9.3 删除备份（更换备份文件夹路径）</p><p>本地先删除原来的borg文件夹，然后在服务器输入<code>sudo docker exec nextcloud-aio-mastercontainer rm /mnt/docker-aio-config/data/borg.config</code> 之后通过Nextcloud后台进入管理页面：</p><img src="https://img.laoda.de/i/2023/09/19/nnja10-0.webp" alt="image-20230919143024342" style="zoom:50%;" /><p>就可以重新设置一个备份目录了。</p><h2 id="10-结尾"><a href="#10-结尾" class="headerlink" title="10. 结尾"></a>10. 结尾</h2><p>祝大家用得开心，有问题可以去 GitHub 提 <a href="https://github.com/nextcloud/all-in-one/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，有能力给项目做贡献的同学，也欢迎积极加入到 <a href="https://github.com/nextcloud/all-in-one">项目</a> 中来，贡献自己的一份力量！</p><p>最后，感谢开发人员们的辛苦付出，让我们能用到这么优秀的项目！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>GitHub官方仓库：<a href="https://github.com/nextcloud/all-in-one">https://github.com/nextcloud/all-in-one</a><br>官方Docker镜像地址：hub.docker.com&#x2F;r&#x2F;nextcloud&#x2F;all-in-one</p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker部署 </tag>
            
            <tag> DockerCompose </tag>
            
            <tag> Nextcloud </tag>
            
            <tag> 开源网盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hetzner独立服务器（拍卖机）测评及折腾不完全指南</title>
      <link href="/archives/hetzner-dedicated-sb/"/>
      <url>/archives/hetzner-dedicated-sb/</url>
      
        <content type="html"><![CDATA[<p>咕咕斥巨资买了一台Hetzner的独立服务器（<a href="https://www.hetzner.com/sb">拍卖机</a>），官方售价27.7欧&#x2F;月。</p><img src="https://img.laoda.de/i/2023/08/24/rc87dd-0.webp" alt="image.png" style="zoom:50%;" /><p>下面就来简单测评一下，供大家参考。</p><p>关于Hetzner的介绍，大家可以移步至：<a href="https://blog.laoda.de/archives/vps-hetzner/index.html">【VPS 选购分享】Hetzner—— 欧洲阿里云！性能小钢炮！非常适合跑业务，还有适合刷 PT 的神鸡！</a></p><h3 id="概览"><a href="#概览" class="headerlink" title="概览"></a>概览</h3><p>首先还是请出秋水的 bench.sh 脚本，这个脚本可以查看 Linux 系统信息，还可以测试网络带宽及硬盘读写速率。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -qO- bench.sh | bash</span><br></pre></td></tr></table></figure><p>运行后如图：</p><img src="https://img.laoda.de/i/2023/08/23/sjs0x8-0.webp" alt="image.png" style="zoom:33%;" /><p>上图第一部分就是 Linux 的详细信息，可以看到 CPU 型号、8核心、内存64G、硬盘买的时候是说512Gx2也就是1T（但是显示是936.7G）、Dedicated 杜甫、Hz自建机房，机房位置纽伦堡等信息。</p><p>第二部分也就是硬盘读写速率，硬盘一般分为 HHD、SSD、NVMe 三类， 正常 SSD 硬盘的 IO 一般在 300MB&#x2F;S 左右，差一点 200MB&#x2F;S 左右，100MB&#x2F;S 以下这种的就是石头盘了，没法用。这边咕咕的是NVMe的盘，正常应该就是900-1000MB&#x2F;S。</p><p>第三部分就是上传下载速率了，这个可以看出服务器的带宽，上传下载的速率，这个机器是 1G 口的基本也跑满了，国内稍微有点差。</p><p>总结一下，上面大家要注意的几个点：</p><p>1、如果是VPS，虚拟方式一定注意是不是 KVM，因为有些商家用的 OpenVZ 虚拟技术而故意不说明，OpenVZ 的缺点是不能修改内核也就不能开启 BBR 和可以随意超售。独立服务器的话，一般就是显示Dedicated了。</p><p>2、硬盘的 IO 差，一般是因为母鸡超售过多造成了，看 IO 数值就可以看出 VPS 有没有超售。独立服务器的话没有超售一说，如果你选的HDD硬盘（假设两块硬盘），觉得IO速度实在过低，还可以选择组raid 0，这样速度会翻倍，但是raid 0 只要有一块硬盘坏了，数据都会丢失，这个得权衡考量。</p><p>3、Speed 测速可以直观地看出 VPS 的带宽，一般G口就是 1000Mbps，百兆口也就是 100Mbps，10G 口也就是高于10000Mbps</p><h3 id="线路测试"><a href="#线路测试" class="headerlink" title="线路测试"></a>线路测试</h3><p>线路测试包括去程和回程，去程是针对的上传数据，回程一般是指下载数据也就是 VPS 回传数据。因此一个 IP 的路由好坏，看回程才有参考价值，去程反而不是那么重要了。</p><p>下面就看看回程路由：</p><h4 id="回程测试"><a href="#回程测试" class="headerlink" title="回程测试"></a>回程测试</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -qO- git.io/besttrace | bash</span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2023/08/23/snxui6-0.webp" alt="image.png" style="zoom:33%;" /><p>这个机器电信回程是直连的，移动和联通脚本问题没测，回程应该不是很理想，线路不咋地，这也是这台机器最大的缺点。（一般这种情况下，会考虑套CloudFlare的CDN使用，所谓带上套，大家都一样，众生平等。）</p><h4 id="去程测试"><a href="#去程测试" class="headerlink" title="去程测试"></a>去程测试</h4><p>下面看看去程，一般来说流量是不对等的，回复流量基本上是请求流量的数倍。</p><p>就比如，你浏览本站的文章，点击一个网址就可以了，电脑把网址发到本博位于国外的服务器，数据一般小于 1KB。但是本站回复你文章内容，里面的文字、图片、脚本等各种资源，压缩后至少也是几十KB，这个过程中去程和回程数据有数倍的差异。如果你看的是油管的视频，出国的流量可能就几兆，但是传过来的视频可能上G，数据相差上百倍。</p><p>所以你应该明白了上面为什么说去程没啥参考价值，因为它压根就不堵。当然，既然写到了去程这个话题，还是留下测试去程的方法：</p><p>打开下面的网址，左边选择你附近的服务器，然后右边填上你的 VPS IP 就可以查看去程路由了：</p><p><a href="https://tools.ipip.net/traceroute.php">https://tools.ipip.net/traceroute.php</a></p><p>上海电信</p><img src="https://img.laoda.de/i/2023/08/24/pgiamt-0.webp" alt="image.png" style="zoom:33%;" />上海联通<img src="https://img.laoda.de/i/2023/08/24/ph1aif-0.webp" alt="image.png" style="zoom:33%;" />上海移动<img src="https://img.laoda.de/i/2023/08/24/phimjb-0.webp" alt="image.png" style="zoom:33%;" /><h4 id="ping值查询"><a href="#ping值查询" class="headerlink" title="ping值查询"></a>ping值查询</h4><p>当然，不能忘了各运营商的 ping 值查询，这算是一个直观且简单的查询方式，如图，如果下面国内部分全线飘红，说明丢包严重，ping 值亚洲 VPS 在 100ms 左右属正常范围，美帝 VPS 在 250ms 左右属正常范围，欧洲在250-300ms左右。</p><p>当然，这些数值受时段的影响比较大，建议北京时间 22：00 - 23：00 高峰期（俗称晚高峰）测试。</p><p><a href="https://ping.pe/">https://ping.pe</a></p><img src="https://img.laoda.de/i/2023/08/24/pgd2k1-0.webp" alt="image.png" style="zoom:33%;" /><p>国内惨不忍睹 &#x3D; &#x3D;</p><h3 id="CPU性能测试"><a href="#CPU性能测试" class="headerlink" title="CPU性能测试"></a>CPU性能测试</h3><p>还是请出秋水的 UnixBench 脚本来测试。</p><p>UnixBench 是一个类 Unix 系（Unix，BSD，Linux）统下的性能测试工具，一个开源工具，被广泛用与测试 Linux 系统主机的性能。UnixBench 的主要测试项目有：系统调用、读写、进程、管道、运算、C库等系统基准性能提供测试数据。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget --no-check-certificate https://github.com/teddysun/across/raw/master/unixbench.sh &amp;&amp; <span class="built_in">chmod</span> +x unixbench.sh &amp;&amp; ./unixbench.sh</span><br></pre></td></tr></table></figure><p>上面脚本运行需要1个小时左右，运行完会显示类似下面的数据：</p><img src="https://img.laoda.de/i/2023/08/24/pdjnqs-0.webp" alt="image.png" style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/08/24/pdml4w-0.webp" alt="image.png" style="zoom:33%;" /><p>上部分是单核跑分数据，下部分是多核跑分数据。VPS的话单核跑分有500分以上属于正常水平，低于500分就属于性能很弱了。这边独立服务器跑这个分还凑合。</p><h3 id="取消RAID"><a href="#取消RAID" class="headerlink" title="取消RAID"></a>取消RAID</h3><p>默认两块硬盘的话，Hz会自动给你装raid1，即只有一块硬盘的容量，另一块硬盘相当于是备份用的，如果不是特别重要的数据的话，一般会考虑不组raid，这样我们硬盘空间就能完整利用起来了。（除非你是刷PT，不然不建议组raid0）</p><p>首先进入Hetzner的控制后台，找到服务器，选择Rescue (救援模式)，设置完成后重启服务器：</p><img src="https://img.laoda.de/i/2023/08/24/stv0vm-0.webp" alt="db415600eb005d470c09fd338f7f27be.png" style="zoom: 50%;" /><img src="https://img.laoda.de/i/2023/08/24/stw94z-0.webp" alt="236306b87b7c8295cc25c721d6a46561.png" style="zoom:50%;" /><img src="https://img.laoda.de/i/2023/08/24/stx8ap-0.webp" alt="5c7acaad58ed198ac754cb94e74f614a.png" style="zoom: 33%;" /><p>重启完成后登录服务器，现在看到的就是救援模式；</p><p><img src="https://img.laoda.de/i/2023/08/24/szy5ss-0.webp" alt="9dc758f8e60573ffe32cdf0e1fb44dd6.png"></p><p>在救援模式下输入下面命令后按回车</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">installimage</span><br></pre></td></tr></table></figure><p>然后选择你需要安装的系统</p><img src="https://img.laoda.de/i/2023/08/24/stz8g5-0.webp" alt="06c362326cabb91bd216ae76ee798f14.png" style="zoom: 67%;" /><img src="https://img.laoda.de/i/2023/08/24/su02er-0.webp" alt="8d9d81282bce722db89e7e7ac4e50ec7.png" style="zoom:67%;" /><img src="https://img.laoda.de/i/2023/08/24/su0y4v-0.webp" alt="c461ed3a9c975677bd038f827098197c.png" style="zoom:67%;" /><p>选择完成后编辑配置文件；</p><img src="https://img.laoda.de/i/2023/08/24/su26pp-0.webp" alt="abdc141b5e5dfc486318cbf763ce1f9e.png" style="zoom:67%;" /><img src="https://img.laoda.de/i/2023/08/24/su37zd-0.webp" alt="d0f924a8fd74f22a9dbe66fb0ca95c86.png" style="zoom:67%;" /><p>RAID设置区分</p><blockquote><p>NO RIAD：一般情况建议不设置RAID，这样既保证空间大小，也保证了安全性.；<br>RIAD 0：好处：速度快，合并容量，缺点：两个硬盘只要挂一个，那么文件全都挂了；<br>RIAD 1：好处：同时把文件写入到两个硬盘，坏一个也没事，缺点：浪费空间，读写速度稍微有降低；</p></blockquote><p>编辑完成后按<code>F10</code> 保存配置文件；</p><img src="https://img.laoda.de/i/2023/08/24/sud8iq-0.webp" alt="c19dc65b5c83a0c3d03ab736157776d6.png" style="zoom:67%;" /><p>选择<code>yes</code>回车</p><img src="https://img.laoda.de/i/2023/08/24/sueih2-0.webp" alt="6e66366167554e244f22932995008919.png" style="zoom:67%;" /><p>等待程序执行完毕：</p><img src="https://img.laoda.de/i/2023/08/24/sug4lq-0.webp" alt="4f76ddbe0e13c78abc3292f036583b8d.png" style="zoom:67%;" /><p>程序执行完成后输入<code>reboot</code>重启即可：</p><p><img src="https://img.laoda.de/i/2023/08/24/szyi1k-0.webp" alt="be0a4c045730c8b0514dc9bd992b685e.png"></p><p>重启后登录新系统可以查看之前的分区情况</p><p><img src="https://img.laoda.de/i/2023/08/24/szylul-0.webp" alt="d5505acc2f1effc967dd3f2bebb34fa3.png"></p><p><code>RAID 0</code>和<code>RAID 1</code>的测试对比</p><p>RAID 0</p><p><img src="https://img.laoda.de/i/2023/08/24/szyzeg-0.webp" alt="87c7f18154d25fd529849906175821b2.png"></p><p>RAID 1</p><p><img src="https://img.laoda.de/i/2023/08/24/szzayf-0.webp" alt="25a31dcba8adf129773f98274fea79bc.png"></p><p>无RAID</p><p><img src="https://img.laoda.de/i/2023/08/24/szzjl3-0.webp" alt="adbfd0ca48584412ad41baa6bb7a8fbf.png"></p><h3 id="installimage命令一把梭"><a href="#installimage命令一把梭" class="headerlink" title="installimage命令一把梭"></a>installimage命令一把梭</h3><p>上面的方法是图形化一步一步来搞的，其实你也可以直接用一条命令直接自动安装。</p><p>还是利用官方的installimage命令。</p><p>一般你想要知道一个命令支持哪些参数，都可以用<code>命令 -h</code>或者<code>命令 --help</code>来查看。</p><p>比如</p><p><code>installimage -h</code> 或者 <code>installimage --help</code></p><p>以下是installimage命令的参数：</p><p>这是 <code>installimage</code> 的使用说明，该脚本支持多种参数，以下是每个参数的简要描述：</p><ol><li><code>-h</code>: 显示帮助信息。</li><li><code>-a</code>: 自动模式 &#x2F; 批处理模式 - 结合下面的选项使用可以无需进一步交互地进行安装。</li><li><code>-c &lt;configfile&gt;</code>: 使用指定的配置文件进行自动设置。</li><li><code>-x &lt;post-install&gt;</code>: 使用此文件作为安装后脚本，安装完成后在 chroot 环境中执行。</li><li><code>-n &lt;hostname&gt;</code>: 设置指定的主机名。</li><li><code>-r &lt;yes|no&gt;</code>: 是否激活软件 RAID。</li><li><code>-l &lt;0|1|5|6|10&gt;</code>: 设置指定的 RAID 级别。</li><li><code>-i &lt;imagepath&gt;</code>: 使用指定的 IMAGE 进行安装。</li><li><code>-g</code>: 强制验证带有分离的 GPG 签名的图像文件。如果图像无效，安装将中止。</li><li><code>-p &lt;partitions&gt;</code>: 定义要创建的分区。</li><li><code>-v &lt;logical volumes&gt;</code>: 定义要创建的逻辑卷。</li><li><code>-d &lt;drives&gt;</code>: 要使用的驱动器的 &#x2F;dev 名称。</li><li><code>-f &lt;yes|no&gt;</code>: 是否格式化第二块驱动器（如果不用于 RAID）。</li><li><code>-s &lt;de|en&gt;</code>: 用于不同事务的语言（例如 PLESK）。</li><li><code>-z PLESK_&lt;Version&gt;</code>: 安装像 PLESK 这样的可选软件。</li><li><code>-K &lt;path/url&gt;</code>: 从文件&#x2F;URL 安装 SSH 密钥。</li><li><code>-t &lt;yes|no&gt;</code>: 接管救援系统的 SSH 公钥。</li><li><code>-u &lt;yes|no&gt;</code>: 是否允许 USB 驱动器。</li><li><code>-G &lt;yes|no&gt;</code>: 是否生成新的 SSH 主机密钥（默认为 yes）。</li></ol><p>这些选项允许用户在不进入交互式模式的情况下，通过指定适当的参数来自动化服务器的安装过程。在实际使用中，您需要根据具体需求选择和组合这些参数。</p><h4 id="installimage命令设置raid安装"><a href="#installimage命令设置raid安装" class="headerlink" title="installimage命令设置raid安装"></a>installimage命令设置raid安装</h4><p>直接对话<a href="https://blog.laoda.de/archives/chatgpt-plus-depay/index.html">ChatGPT</a>，让它帮个小忙。</p><p>问：</p><figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">`installimage -n hostname -a -r 0 -d sda,sdb -p /boot:ext3:1024M,/:ext4:all -i /root/images/Debian-1101-bullseye-amd64-base.tar.gz`所以这个命令写的有问题吗</span><br></pre></td></tr></table></figure><p>答：</p><p>让我们逐一检查您给出的 <code>installimage</code> 命令的参数：</p><ol><li><code>-n hostname</code>: 设置主机名为 “hostname”。</li><li><code>-a</code>: 启用自动模式。</li><li><code>-r 0</code>: 指定 RAID 类型为 RAID 0。</li><li><code>-d sda,sdb</code>: 指定两个设备 <code>/dev/sda</code> 和 <code>/dev/sdb</code> 用于 RAID 0。</li><li><code>-p /boot:ext3:1024M,/:ext4:all</code>: 分区信息，其中 <code>/boot</code> 分区使用 <code>ext3</code> 文件系统大小为 1024M，<code>/</code> 根分区使用 <code>ext4</code> 文件系统，占据所有剩余空间。</li><li><code>-i /root/images/Debian-1101-bullseye-amd64-base.tar.gz</code>: 指定安装镜像路径。</li></ol><p>从给出的使用说明中，这些参数似乎都是正确的。但有一点需要注意：</p><p>在使用 RAID 0 时，您指定了 <code>-r 0</code>，这是正确的，但根据使用说明，还需要指定 RAID 级别 <code>-l</code>。尽管在您的命令中没有明确使用 <code>-l</code>，但由于您使用了 <code>-r 0</code>，这可能意味着 RAID 0 是默认选项。然而，为了确保没有遗漏或误解，建议明确指定 RAID 级别，即添加 <code>-l 0</code>。</p><p>所以，更完整的命令可能是：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">installimage -n hostname -a -r yes -l 0 -d sda,sdb -p /boot:ext3:1024M,/:ext4:all -i /root/images/Debian-1101-bullseye-amd64-base.tar.gz</span><br></pre></td></tr></table></figure><p>但再次，这取决于 <code>installimage</code> 的具体实现和版本。上述命令应该是正确的，但在真正执行之前，建议再次检查您的具体环境和文档以确保一切正确。</p><h4 id="installimage命令不设置raid安装"><a href="#installimage命令不设置raid安装" class="headerlink" title="installimage命令不设置raid安装"></a>installimage命令不设置raid安装</h4><p>同理，如果你不想做raid，假设你有sda、sdb还有一块nvme0n1，你打算把系统装在nvme0n1上（靠谱一些），然后把sda和sdb当作存储盘之后单独挂载，你可以用诸如下面的命令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">installimage -n hz -a -d nvme0n1 -p /boot:ext3:1024M,/:ext4:all -i /root/images/Debian-stable-64-minimal.tar.gz</span><br></pre></td></tr></table></figure><p>这个路径可能要根据实际情况修改一下<code>/root/images/Debian-stable-64-minimal.tar.gz</code></p><p>你可以在救援模式中输入:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls -al /root/images/</span><br></pre></td></tr></table></figure><p>查看你想要的系统版本然后替换到上面命令中。</p><p>这样你安装完之后，系统就在<code>nvme0n1</code>盘上了，另外两块硬盘需要你手动格式化并挂载。</p><h3 id="硬盘挂载"><a href="#硬盘挂载" class="headerlink" title="硬盘挂载"></a>硬盘挂载</h3><p>好的，下面是详细的步骤，描述如何为 <code>/dev/nvme1n1</code> 创建一个分区并挂载它。请注意，这些操作可能导致数据丢失，所以在开始前，请确保已备份所有重要数据。</p><p>这边以<code>nvme1n1</code>这块硬盘为例子，有可能你的是<code>/dev/sdb</code> 、<code>/dev/sda</code>  这种，其实是一样的，以此类推。</p><p>具体你的硬盘叫啥，可以登录到救援模式查看（一登录成功上方就有提示）</p><img src="https://img.laoda.de/i/2023/08/24/u1b4za-0.webp" alt="image-20230824181616538" style="zoom:50%;" /><h4 id="1-创建分区"><a href="#1-创建分区" class="headerlink" title="1. 创建分区"></a>1. 创建分区</h4><p>使用 <code>fdisk</code> 命令为 <code>/dev/nvme1n1</code> 创建一个新分区。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo fdisk /dev/nvme1n1</span><br></pre></td></tr></table></figure><p>在 <code>fdisk</code> 命令界面:</p><ol><li>输入 <code>p</code> 并回车，以查看现有分区。</li><li>输入 <code>n</code> 并回车，开始创建新分区。</li><li>选择分区类型（主分区或逻辑分区）。通常，输入 <code>p</code> 选择主分区。</li><li>选择分区号。通常情况下，默认选项应该是可以的。</li><li>为起始和结束扇区选择默认值，这将使用整个磁盘。</li><li>输入 <code>w</code> 并回车，写入分区表并退出。</li></ol><h4 id="2-格式化分区"><a href="#2-格式化分区" class="headerlink" title="2. 格式化分区"></a>2. 格式化分区</h4><p>假设你创建的分区是 <code>/dev/nvme1n1p1</code>（这取决于你之前的选择和现有分区），你可以使用以下命令将其格式化为 <code>ext4</code> 文件系统：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo mkfs.ext4 /dev/nvme1n1p1</span><br></pre></td></tr></table></figure><h4 id="3-挂载分区"><a href="#3-挂载分区" class="headerlink" title="3. 挂载分区"></a>3. 挂载分区</h4><p>首先，创建一个挂载点：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">mkdir</span> /mnt/mydrive</span><br></pre></td></tr></table></figure><p>然后，挂载新分区到这个挂载点：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo mount /dev/nvme1n1p1 /mnt/mydrive</span><br></pre></td></tr></table></figure><h4 id="4-开机自动挂载"><a href="#4-开机自动挂载" class="headerlink" title="4. 开机自动挂载"></a>4. 开机自动挂载</h4><p>要使得每次开机都自动挂载这个分区，需要修改 <code>/etc/fstab</code> 文件。首先，获取 UUID：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo blkid</span><br></pre></td></tr></table></figure><p>找到 <code>/dev/nvme1n1p1</code> 的 UUID。接着，编辑 <code>/etc/fstab</code>：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo nano /etc/fstab</span><br></pre></td></tr></table></figure><p>在文件的底部添加以下内容（替换你的 UUID）：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">UUID=你的UUID  /mnt/mydrive  ext4  defaults  0  2</span><br></pre></td></tr></table></figure><p>保存并退出。</p><p>这样，每次启动时，新分区都会自动挂载到 <code>/mnt/mydrive</code>。</p><p>以上就是创建、格式化和挂载新分区的步骤。确保每一步都仔细检查，避免任何可能的错误。</p><h4 id="合并sda和sdb（使用-LVM-将-sda-和-sdb-合并为一个逻辑卷）"><a href="#合并sda和sdb（使用-LVM-将-sda-和-sdb-合并为一个逻辑卷）" class="headerlink" title="合并sda和sdb（使用 LVM 将 sda 和 sdb 合并为一个逻辑卷）"></a>合并sda和sdb（使用 LVM 将 sda 和 sdb 合并为一个逻辑卷）</h4><p>假如想要把sda和sdb合并成一个硬盘，挂载，你可以：</p><p>问：</p><figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">我有一块nvme0n1,还有sda，sdb，我想把系统安装在nvme0n1上，然后把sda和sdb合并成一块硬盘，用来存放文件，我是不是要定义要创建的逻辑卷？请问我应该怎么做，帮我写一个完整的安装脚本</span><br></pre></td></tr></table></figure><p>答：</p><p>为了满足您的需求，我们可以使用以下策略：</p><ol><li>将操作系统安装在 <code>nvme0n1</code> 上。</li><li>使用 LVM 将 <code>sda</code> 和 <code>sdb</code> 合并为一个逻辑卷并用于存储。</li></ol><p>以下是您可以使用的 <code>installimage</code> 命令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">installimage -n hostname -a -d nvme0n1 -p /boot:ext3:1024M,/:ext4:all -i /root/images/Debian-1101-bullseye-amd64-base.tar.gz</span><br></pre></td></tr></table></figure><p>此命令将 Debian 11.01 Bullseye 安装在 <code>nvme0n1</code> 上，其中 <code>/boot</code> 使用 <code>ext3</code> 文件系统，大小为 1024M，根 <code>/</code> 使用 <code>ext4</code> 文件系统，占据所有剩余空间。</p><p>安装操作系统后，您可以使用以下步骤将 <code>sda</code> 和 <code>sdb</code> 合并为一个 LVM 逻辑卷：</p><ol><li><p>创建物理卷：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pvcreate /dev/sda</span><br><span class="line">pvcreate /dev/sdb</span><br></pre></td></tr></table></figure></li><li><p>创建一个名为 <code>myvg</code> 的卷组，其中包含 <code>sda</code> 和 <code>sdb</code>：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vgcreate myvg /dev/sda /dev/sdb</span><br></pre></td></tr></table></figure></li><li><p>使用上面创建的卷组创建一个名为 <code>mylv</code> 的逻辑卷，占据所有可用空间：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lvcreate -l 100%FREE -n mylv myvg</span><br></pre></td></tr></table></figure></li><li><p>格式化逻辑卷并挂载它：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkfs.ext4 /dev/myvg/mylv</span><br><span class="line"><span class="built_in">mkdir</span> /data</span><br><span class="line">mount /dev/myvg/mylv /data</span><br></pre></td></tr></table></figure></li><li><p>为了确保每次启动时都能自动挂载，需要在 <code>/etc/fstab</code> 中添加一行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;/dev/myvg/mylv /data ext4 defaults 0 0&quot;</span> &gt;&gt; /etc/fstab</span><br></pre></td></tr></table></figure></li></ol><p>以上步骤在操作系统安装后执行，可以将它们写入一个脚本中，然后在安装操作系统后手动运行。或者，您可以使用 <code>installimage</code> 的 <code>-x</code> 参数指定一个脚本，该脚本将在安装后自动执行上述步骤。</p><p>以下是一个脚本，名为 <code>post_install.sh</code>，用于在操作系统安装后设置和挂载逻辑卷：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建物理卷</span></span><br><span class="line">pvcreate /dev/sda</span><br><span class="line">pvcreate /dev/sdb</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个名为 `myvg` 的卷组</span></span><br><span class="line">vgcreate myvg /dev/sda /dev/sdb</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用上面创建的卷组创建一个名为 `mylv` 的逻辑卷</span></span><br><span class="line">lvcreate -l 100%FREE -n mylv myvg</span><br><span class="line"></span><br><span class="line"><span class="comment"># 格式化逻辑卷</span></span><br><span class="line">mkfs.ext4 /dev/myvg/mylv</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建数据目录并挂载逻辑卷</span></span><br><span class="line"><span class="built_in">mkdir</span> /data</span><br><span class="line">mount /dev/myvg/mylv /data</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新 /etc/fstab 以在启动时自动挂载逻辑卷</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;/dev/myvg/mylv /data ext4 defaults 0 0&quot;</span> &gt;&gt; /etc/fstab</span><br></pre></td></tr></table></figure><p>您可以将上述脚本保存为 <code>post_install.sh</code>，然后为其赋予执行权限：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x post_install.sh</span><br></pre></td></tr></table></figure><p>然后，您可以使用以下 <code>installimage</code> 命令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">installimage -n hostname -a -d nvme0n1 -p /boot:ext3:1024M,/:ext4:all -i /root/images/Debian-1101-bullseye-amd64-base.tar.gz -x /path/to/post_install.sh</span><br></pre></td></tr></table></figure><p>请确保将 <code>/path/to/</code> 替换为您保存 <code>post_install.sh</code> 脚本的实际路径。</p><p>这样，当 <code>installimage</code> 完成操作系统的安装后，它将自动运行 <code>post_install.sh</code> 脚本来设置和挂载逻辑卷。</p><h3 id="救援模式恢复密码"><a href="#救援模式恢复密码" class="headerlink" title="救援模式恢复密码"></a>救援模式恢复密码</h3><p>如果您在Hetzner使用独立服务器（Dedicated Server）并且忘记了root登录密码，您可以通过以下步骤重置密码：</p><ol><li><p><strong>登录Hetzner Robot控制面板</strong>:<br>打开浏览器，访问 <a href="https://robot.hetzner.com/">Hetzner Robot</a>，然后登录您的账户。</p></li><li><p><strong>选择您的服务器</strong>:<br>在控制面板中，找到并选择您需要重置密码的服务器。</p></li><li><p><strong>启动救援系统</strong>:<br>在服务器的管理页面上，找到“Rescue”或“救援系统”选项并启动它。Hetzner的救援系统允许您启动一个小型的Linux环境，这样您就可以访问服务器的硬盘并对其进行操作。</p></li><li><p><strong>重启服务器到救援系统</strong>:<br>一旦您启动了救援系统，需要重新启动服务器以进入该系统。您可以在Robot控制面板中找到并点击“重启”按钮。</p></li><li><p><strong>通过SSH登录到救援系统</strong>:<br>当服务器重启并运行救援系统时，您应该能够使用提供的SSH凭据（通常是root和一个临时密码）登录到服务器。</p></li><li><p><strong>挂载服务器的文件系统</strong>:<br>一旦您登录到救援系统，您需要挂载服务器的主文件系统。这通常可以通过以下命令完成（假设您的根文件系统在<code>/dev/sda1</code>上）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mount /dev/sda1 /mnt</span><br></pre></td></tr></table></figure></li></ol><p>注意，如果取消挂载，试另一块硬盘的话，可以先执行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">unmount /mnt</span><br></pre></td></tr></table></figure><ol start="7"><li><p><strong>重置root密码</strong>:<br>挂载文件系统后，您可以使用<code>chroot</code>命令更改root密码。如下：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chroot</span> /mnt</span><br><span class="line">passwd root</span><br></pre></td></tr></table></figure><p>按照提示输入新的密码。</p></li><li><p><strong>重启服务器到主系统</strong>:<br>一旦您完成了密码重置，退出chroot环境，然后从救援模式重启服务器回到主系统。您可以在Robot控制面板中完成这一步。</p></li><li><p><strong>登录并测试新密码</strong>:<br>当服务器重启并运行主系统时，尝试使用新的root密码登录。确保您可以成功登录并且所有服务都在正常运行。</p></li></ol><p>请注意，这些步骤是基于Hetzner的独立服务器的通常操作。具体的步骤可能会因Hetzner的系统更新或其他原因而有所不同。如果您遇到任何问题，建议联系Hetzner的技术支持以获得更多帮助。</p><p>输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsblk</span><br></pre></td></tr></table></figure><p>输出：</p><img src="https://img.laoda.de/i/2023/08/24/sc8bx4-0.webp" alt="image.png" style="zoom:50%;" /><p>从您提供的 <code>lsblk</code> 输出来看：</p><ul><li><code>sda</code> 磁盘只有一个分区 <code>sda1</code>，大小为 476.9G，目前已经挂载到 <code>/mnt</code>。</li><li><code>sdb</code> 磁盘有三个分区：<ul><li><code>sdb1</code> 大小为 32G</li><li><code>sdb2</code> 大小为 1G</li><li><code>sdb3</code> 大小为 443.9G</li></ul></li></ul><p>这里的关键是确定哪一个分区是您的根文件系统。考虑到 <code>sda1</code> 已经挂载到 <code>/mnt</code>，您可能已经检查了它。但我们还需要检查 <code>sdb</code> 的分区，尤其是 <code>sdb3</code>，因为它的大小与一个主要的文件系统相匹配。</p><p>下面是如何检查 <code>sdb</code> 的分区：</p><ol><li><p><strong>挂载并检查 <code>sdb1</code></strong>:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mount /dev/sdb1 /mnt</span><br><span class="line"><span class="built_in">ls</span> /mnt</span><br></pre></td></tr></table></figure><p>如果这里有 <code>bin</code>, <code>etc</code>, <code>home</code>, <code>root</code>, <code>usr</code> 等目录，那么这可能是您的根文件系统。</p></li><li><p><strong>如果 <code>sdb1</code> 不是根文件系统，尝试挂载并检查 <code>sdb3</code></strong>:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">umount /mnt</span><br><span class="line">mount /dev/sdb3 /mnt</span><br><span class="line"><span class="built_in">ls</span> /mnt</span><br></pre></td></tr></table></figure><p>同样，查找典型的根文件系统目录。</p></li></ol><p>您提供的信息不足以确定哪个分区是引导分区或是否有单独的 <code>/home</code> 分区，但上述步骤应该可以帮助您确定哪个是根文件系统。如果您还不确定，请告诉我您在每个分区上看到的主要目录，这样我可以为您提供更多的指导。</p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p>SunPma’Blog：<a href="https://sunpma.com/656.html">https://sunpma.com/656.html</a><br>主机会话：<a href="https://hostalk.net/posts/vps_test.html">https://hostalk.net/posts/vps_test.html</a><br><a href="https://www.openos.org/post/196/">https://www.openos.org/post/196/</a><br><a href="https://wiki.hetzner.de/index.php/Installimage/en">https://wiki.hetzner.de/index.php/Installimage/en</a></p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hetzner </tag>
            
            <tag> 服务器测评 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩儿的Docker项目】Umami替代品，又一款网站流量统计工具——Plausible</title>
      <link href="/archives/docker-compose-install-plausible/"/>
      <url>/archives/docker-compose-install-plausible/</url>
      
        <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h2><p>之前和大家介绍过一款精美的网站流量统计工具——<a href="https://blog.laoda.de/archives/umami/index.html">Umami</a></p><p><img src="https://img.laoda.de/i/2023/08/08/qhd3n3-0.webp"></p><p>最近，Umami爆出一个严重的安全漏洞（某位小伙伴在博客评论区提醒我的，感谢），</p><p><img src="https://img.laoda.de/i/2023/08/08/qhefts-0.webp" alt="4ce9d75b54d9ead867e1b5ea75f95fe2.png"></p><p>分享的网站数据链接可能会导致的你的网站统计数据被重置。</p><p>这个对个人来说还好，毕竟没多少访问量，但是对于小型团队，尤其是要做数据分析的（同比、环比）的用户来说，还是比较讨厌的。（希望社区的维护人员应该在尽力解决这个问题了。）</p><p>这一期，我们就趁着机会，来介绍另一个流量统计的项目——Plausible。</p><blockquote><p>Plausible Analytics 是一个简单、开源、轻量级（&lt; 1 KB）且注重隐私的 Google Analytics 替代品。Plausible 被超过10,000个付费订阅用户信任，用于提供他们网站和业务洞察力。我们完全独立、自筹资金并自给自足。</p></blockquote><p>来自<a href="https://plausible.io/docs">官方Docs</a></p><p><img src="https://img.laoda.de/i/2023/08/08/qhh4c5-0.webp" alt="f7d8459c33258f930f7b4fa230448ef8.png"></p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p>直接丢几个图：</p><p><img src="https://img.laoda.de/i/2023/08/08/qhipan-0.webp" alt="62fead07032a298c61a3cb14f0300e4e.png"></p><p><img src="https://img.laoda.de/i/2023/08/08/qhsh9z-0.webp" alt="af05ea78d49628ae5e95ef7aa4fa0141.png"></p><p><img src="https://img.laoda.de/i/2023/08/08/qhtise-0.webp" alt="bcdabf1f64a40e3b128c36ba822978aa.png"></p><h3 id="2-1-特点"><a href="#2-1-特点" class="headerlink" title="2.1 特点"></a>2.1 特点</h3><ul><li>支持docker一键部署，轻量级Docker镜像（使用Alpine Linux）</li><li>支持谷歌API，链接谷歌分析、谷歌关键词工具</li><li>支持自定义事件</li><li>颜值高</li></ul><h2 id="3-相关地址"><a href="#3-相关地址" class="headerlink" title="3. 相关地址"></a>3. 相关地址</h2><p>咕咕的Demo：<a href="https://plausible.laoda.de/share/blog.laoda.de?auth=hUyCbI97k9n5qouBij3N7">本站流量情况</a><br>GitHub官方仓库：<a href="https://github.com/plausible/analytics">https://github.com/plausible/analytics</a><br>官方文档地址：<a href="https://plausible.io/docs">https://plausible.io/docs</a></p><h2 id="4-搭建环境"><a href="#4-搭建环境" class="headerlink" title="4. 搭建环境"></a>4. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器 24 元 &#x2F; 月 VPS 一台</del> 咕咕自己搭建用的是香港的<a href="https://loll.cc/tx">腾讯轻量应用服务器</a> ，（最好选 非大陆的，而且线路还不错的机器）如果是小白刚开始玩的话，也可以选择 <a href="https://gao.ee/lca">莱卡云 美国CN2 GIA</a> 的服务器，（莱卡云服务器介绍：<a href="https://blog.laoda.de/archives/vps-lcayun/">点击查看</a>）或者<a href="https://blog.laoda.de/vps/">Racknerd</a>的高性价比服务器（注意地区选美国西部城市的）</li><li>系统：Debian 11 （<a href="https://blog.laoda.de/archives/useful-script/">DD 脚本</a> 非必需 DD，用原来的系统也 OK，之后教程都是用 Debian 或者 Ubuntu 搭建～）</li><li>安装好 Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker/">相关脚本</a>）</li><li>【非必需但建议】域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo/">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>【非必需】提前安装好宝塔面板海外版本 aapanel，并安装好 Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程选用】安装好 Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager/">相关教程</a>）</li></ul><blockquote><p>服务器要求：内存建议1G以上</p></blockquote><h2 id="5-搭建视频"><a href="#5-搭建视频" class="headerlink" title="5. 搭建视频"></a>5. 搭建视频</h2><h3 id="5-1-YouTube"><a href="#5-1-YouTube" class="headerlink" title="5.1 YouTube"></a>5.1 YouTube</h3><p>视频地址：<a href="https://youtu.be/U0tXcsqVSMo">https://youtu.be/U0tXcsqVSMo</a></p><h3 id="5-2-哔哩哔哩"><a href="#5-2-哔哩哔哩" class="headerlink" title="5.2 哔哩哔哩"></a>5.2 哔哩哔哩</h3><p>哔哩哔哩：<a href="https://www.bilibili.com/video/BV1Hh4y1Q7tH/">https://www.bilibili.com/video/BV1Hh4y1Q7tH/</a></p><h2 id="6-搭建方式"><a href="#6-搭建方式" class="headerlink" title="6. 搭建方式"></a>6. 搭建方式</h2><p>如果你不是用的腾讯云的轻量应用服务器，可以直接跳到 6.1 部分。</p><h3 id="安装系统（腾讯云轻量应用服务器）"><a href="#安装系统（腾讯云轻量应用服务器）" class="headerlink" title="安装系统（腾讯云轻量应用服务器）"></a>安装系统（腾讯云轻量应用服务器）</h3><img src="https://img.laoda.de/i/2022/08/16/zlyhcz-2.webp" alt="e59713fba8726d3cb55ae11bca83fe3c.png" style="zoom:33%;" /><p>腾讯云轻量服务器最大的特点就是 “轻量”，相比 CVM，更适合小白上手，这边我们之间选择 Docker 基础镜像，就可以省去后面安装 Docker 的步骤 <del>（如果你非要用国内的服务器，这边装的 Docker 镜像还会帮你配置好国内镜像源，让你加速访问 docker 镜像资源）</del> 不建议用国内的 。</p><h3 id="登陆（腾讯云轻量应用服务器）"><a href="#登陆（腾讯云轻量应用服务器）" class="headerlink" title="登陆（腾讯云轻量应用服务器）"></a>登陆（腾讯云轻量应用服务器）</h3><img src="https://img.laoda.de/i/2022/08/16/zlzlj7-2.webp" alt="2722040ee311eb4a9ebf2a4945bf38f4.png" style="zoom:25%;" /><img src="https://img.laoda.de/i/2022/08/16/zm0gv8-2.webp" alt="c0b5d360053746c4095d592967ee401f.png" style="zoom:25%;" /><img src="https://img.laoda.de/i/2022/08/16/zm1vqw-2.webp" alt="e0ba858f021b846ad0abc27acf5008c2.png" style="zoom:25%;" /><h3 id="6-1-安装-Docker-与-Nginx-Proxy-Manager"><a href="#6-1-安装-Docker-与-Nginx-Proxy-Manager" class="headerlink" title="6.1 安装 Docker 与 Nginx Proxy Manager"></a>6.1 安装 Docker 与 Nginx Proxy Manager</h3><p>可以直接参考这篇内容：</p><p><a href="https://blog.laoda.de/archives/nginxproxymanager/">https://blog.laoda.de/archives/nginxproxymanager/</a></p><h3 id="6-2-创建安装目录"><a href="#6-2-创建安装目录" class="headerlink" title="6.2 创建安装目录"></a>6.2 创建安装目录</h3><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/plausible</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/plausible</span><br><span class="line"></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/plausible/hosting</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> hosting</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure><p>英文输入法下，按 <code>i</code></p><p>以下是咕咕修改的，可以看看有啥不一样（具体见视频）</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3.3&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">mail:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">bytemark/smtp</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">plausible_db:</span></span><br><span class="line">    <span class="comment"># supported versions are 12, 13, and 14</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">postgres:14-alpine</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./db-data:/var/lib/postgresql/data</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">POSTGRES_PASSWORD=postgres</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">plausible_events_db:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">clickhouse/clickhouse-server:23.3.7.5-alpine</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./event-data:/var/lib/clickhouse</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./clickhouse/clickhouse-config.xml:/etc/clickhouse-server/config.d/logging.xml:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./clickhouse/clickhouse-user-config.xml:/etc/clickhouse-server/users.d/logging.xml:ro</span></span><br><span class="line">    <span class="attr">ulimits:</span></span><br><span class="line">      <span class="attr">nofile:</span></span><br><span class="line">        <span class="attr">soft:</span> <span class="number">262144</span></span><br><span class="line">        <span class="attr">hard:</span> <span class="number">262144</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">plausible:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">plausible/analytics:v2.0</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">sh</span> <span class="string">-c</span> <span class="string">&quot;sleep 10 &amp;&amp; /entrypoint.sh db createdb &amp;&amp; /entrypoint.sh db migrate &amp;&amp; /entrypoint.sh run&quot;</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">plausible_db</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">plausible_events_db</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mail</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8090</span><span class="string">:8000</span></span><br><span class="line">    <span class="attr">env_file:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">plausible-conf.env</span></span><br></pre></td></tr></table></figure><p>大家可以用默认的设置，也可以和咕咕一样修改一下，修改好之后，注意切换成英文输入法，然后按一下 <code>esc</code>，然后 <code>:wq</code> 保存退出。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl rand -<span class="built_in">base64</span> 64 | <span class="built_in">tr</span> -d <span class="string">&#x27;\n&#x27;</span> ; <span class="built_in">echo</span></span><br></pre></td></tr></table></figure><p>保存下来。</p><p>打开环境配置文件：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim plausible-conf.env</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BASE_URL=填你打算给plausible准备的域名，比如https://analytics.baidu.com</span><br><span class="line">SECRET_KEY_BASE=填刚刚生成的那个密钥</span><br></pre></td></tr></table></figure><p>修改好之后，注意切换成英文输入法，然后按一下 <code>esc</code>，然后 <code>:wq</code> 保存退出。</p><p>更多参数配置，请看文档：<a href="https://plausible.io/docs/self-hosting-configuration">https://plausible.io/docs/self-hosting-configuration</a></p><h3 id="6-3-打开服务器防火墙（非必需）并访问网页"><a href="#6-3-打开服务器防火墙（非必需）并访问网页" class="headerlink" title="6.3 打开服务器防火墙（非必需）并访问网页"></a>6.3 打开服务器防火墙（非必需）并访问网页</h3><p>打开防火墙的端口 <code>8090</code></p><p>举例，腾讯云打开方法如下（部分服务商没有自带的面板防火墙，就不用这步操作了）：</p><img src="https://img.laoda.de/i/2022/06/30/zlio5h-2.webp" alt="image-20220630215240864" style="zoom: 25%;" /><img src="https://img.laoda.de/i/2022/06/30/10h3dqt-2.webp" alt="image-20220630220546335" style="zoom: 25%;" /><p>图中示例填的是 <code>5230</code>，备注填的是 <code>memos</code>，这边我们填 <code>8090</code>，示例填 <code>plausible</code> ，确定即可（如果你在 docker-compose 文件里换了 <code>9009</code>，这边就需要填 <code>9009</code>，以此类推）</p><img src="https://img.laoda.de/i/2022/08/19/o4byqz-2.webp" alt="image-20220819145844555" style="zoom: 25%;" /><p>查看端口是否被占用（以 <code>8090</code> 为例），输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:8090  <span class="comment">#查看 8090 端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果啥也没出现，表示端口未被占用，我们可以继续下面的操作了～</p><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装 lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用（被占用了就修改一下端口，比如改成 <code>8081</code>，注意 docker 命令行里和防火墙都要改）</p><p>理论上我们就可以输入 <code>http://ip:8090</code> 访问了。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器 IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的 IP。</p><p>2、遇到访问不了的情况，请再次检查在宝塔面板的防火墙和服务商的后台防火墙是否打开对应了端口。</p></blockquote><p>一般情况下，我们都需要给网页加上https！让网页更安全！</p><p> <a href="https://loll.cc/ns">namesilo</a> 上面 xyz 后缀的域名一年就 7 块钱，可以年抛。（冷知识，namesilo上 6位数字的xyz续费永远都是0.99美元 &#x3D; &#x3D;）</p><p>如果想要长期使用，还是建议买 com 后缀的域名，更加正规一些，可以输入 <code>laodade</code> 来获得 1 美元的优惠（不知道现在还有没有）</p><p><a href="https://loll.cc/ns">namesilo</a> 自带隐私保护，咕咕一直在用这家，价格也是这些注册商里面比较低的，关键是他家不像其他家域名注册商，没有七七八八的套路！（就是后台界面有些<del>丑</del> 古老 &#x3D; &#x3D;）</p><p><a href="https://blog.laoda.de/archives/namesilo/">【域名购买】Namesilo 优惠码和域名解析教程（附带服务器购买推荐和注意事项）</a></p><p>我们接着往下看！</p><h2 id="7-反向代理"><a href="#7-反向代理" class="headerlink" title="7. 反向代理"></a>7. 反向代理</h2><p>我们要用域名而不是IP+端口的方式来访问我们的服务！</p><h3 id="7-1-利用-Nginx-Proxy-Manager"><a href="#7-1-利用-Nginx-Proxy-Manager" class="headerlink" title="7.1 利用 Nginx Proxy Manager"></a>7.1 利用 Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo/">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><img src="https://img.laoda.de/i/2022/10/16/n6t02e-2.webp" alt="image-20221016140213282" style="zoom:33%;" /><p>之后，登陆 Nginx Proxy Manager（不会的看这个：<strong>安装 Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager/">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称 NPM）会用到 <code>80</code>、<code>443</code> 端口，所以本机不能占用（比如原来就有 Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom: 33%;" /><img src="https://img.laoda.de/i/2023/05/27/lvep5w-0.webp" alt="image-20230527132253249" style="zoom: 33%;" /><blockquote><p>注意填写对应的 <code>域名</code>、<code>IP</code> 和 <code>端口</code>，按文章来的话，应该是 <code>8090</code></p></blockquote><p><strong>IP 填写：</strong></p><p>如果 Nginx Proxy Manager 和 plausible 在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的 Docker 容器内部 IP。</p><img src="https://img.laoda.de/i/2022/09/29/pcdnz5-2.webp" style="zoom:50%;" /><p>否则直接填 <code>plausible</code> 所在的服务器 IP 就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom: 33%;" /><p>再次打开，勾选这些：</p><img src="https://img.laoda.de/i/2022/10/16/n7nn6e-2.webp" alt="image-20221016140356324" style="zoom:50%;" /><p>然后就可以用域名来安装访问了。</p><h3 id="7-2-利用宝塔面板"><a href="#7-2-利用宝塔面板" class="headerlink" title="7.2 利用宝塔面板"></a>7.2 利用宝塔面板</h3><p>发现还是有不少小伙伴习惯用宝塔面板，这边也贴一个宝塔面板的反代配置：</p><p>直接新建一个站点，不要数据库，不要 php，纯静态即可。</p><p>然后打开下面的配置，修改 Nginx 的配置。</p><img src="https://img.laoda.de/i/2022/08/19/ov4xrt-2.webp" alt="image-20220819150345725" style="zoom: 33%;" /><img src="https://img.laoda.de/i/2022/08/19/owbbkb-2.webp" alt="image-20220819150542867" style="zoom: 33%;" /><p>代码如下：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:8090/;       <span class="comment"># 注意改成你实际使用的端口</span></span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此方法对 90% 的反向代理都能生效，然后就可以用域名来安装访问了。</p><p>有同学可能会问，为什么不直接用宝塔自带的反向代理功能。</p><img src="https://img.laoda.de/i/2022/08/19/oxf800-2.webp" alt="image-20220819150730128" style="zoom: 33%;" /><p>也可以，不过咕咕自己之前遇到过当有多个网站需要反代的时候，在这边设置会报错的情况 &#x3D; &#x3D;</p><p>所以后来就不用了，直接用上面的方法来操作了。</p><h2 id="8-使用教程"><a href="#8-使用教程" class="headerlink" title="8. 使用教程"></a>8. 使用教程</h2><p>建议参考视频，或者结合官方文档食用：<a href="https://plausible.io/docs">https://plausible.io/docs</a></p><h3 id="8-1-登录"><a href="#8-1-登录" class="headerlink" title="8.1 登录"></a>8.1 登录</h3><p>输入域名，登录Plausible</p><p><img src="https://img.laoda.de/i/2023/08/08/qhx308-0.webp" alt="c3fea4fa25e9ee495bdb3c6395ff0519.png"></p><h3 id="8-2-填写需要统计的网站的名称"><a href="#8-2-填写需要统计的网站的名称" class="headerlink" title="8.2 填写需要统计的网站的名称"></a>8.2 填写需要统计的网站的名称</h3><p><img src="https://img.laoda.de/i/2023/08/08/qhycg6-0.webp" alt="d7aff08aa538238172bc5ad6de2186b5.png"></p><h3 id="8-3-获取统计代码"><a href="#8-3-获取统计代码" class="headerlink" title="8.3 获取统计代码"></a>8.3 获取统计代码</h3><p><img src="https://img.laoda.de/i/2023/08/08/qi00em-0.webp" alt="8e4030aabf1d1548446f1bd8f4f2b38c.png"></p><p>将这串js代码放到网站的<code>&lt;head&gt;&lt;/head&gt;</code>之间就行。</p><p>比如Hexo博客（以<a href="https://github.com/jerryc127/hexo-theme-butterfly">Butterfly</a>主题为例子）：</p><p><img src="https://img.laoda.de/i/2023/08/08/qi1l4m-0.webp" alt="e51d8f5b49a4691a154abb5f565bb1ff.png"></p><p>Halo博客（以<a href="https://blog.laoda.de/archives/docker-compose-install-halo-version-2/">Halo 2.0</a>为例子）：</p><img src="https://img.laoda.de/i/2023/08/08/qi46fo-0.webp" alt="be1e31f92a0c393d793ca39209a15c36.png" style="zoom: 33%;" /><p>WordPress博客（以<a href="https://gao.ee/justnews">JustNews</a>主题为例子）：</p><img src="https://img.laoda.de/i/2023/08/08/qie8hb-0.webp" alt="b5341063d3728312825a8b3b1bb3b6cd.png" style="zoom:33%;" /><h3 id="8-4-查看统计数据"><a href="#8-4-查看统计数据" class="headerlink" title="8.4 查看统计数据"></a>8.4 查看统计数据</h3><p>没什么问题的话，访问一下你的网站，很快这边就能显示数据啦。</p><img src="https://img.laoda.de/i/2023/08/08/qifvmh-0.webp" alt="c3b71dbd83f26694dc82e8121269c8c3.png" style="zoom:33%;" /><p>更高级的功能，比如如何连接谷歌统计等等，请结合官方文档食用：<a href="https://plausible.io/docs">https://plausible.io/docs</a></p><h3 id="8-5-更新-plausible"><a href="#8-5-更新-plausible" class="headerlink" title="8.5 更新 plausible"></a>8.5 更新 plausible</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/plausible</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/plausible /root/data/docker_data/plausible.archive  <span class="comment"># 万事先备份，以防万一</span></span><br><span class="line"></span><br><span class="line">docker-compose pull</span><br><span class="line"></span><br><span class="line">docker-compose up -d    <span class="comment"># 请不要使用 docker-compose stop 来停止容器，因为这么做需要额外的时间等待容器停止；docker-compose up -d 直接升级容器时会自动停止并立刻重建新的容器，完全没有必要浪费那些时间。</span></span><br><span class="line"></span><br><span class="line">docker image prune  <span class="comment"># prune 命令用来删除不再使用的 docker 对象。删除所有未被 tag 标记和未被容器使用的镜像</span></span><br></pre></td></tr></table></figure><p>提示：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WARNING! This will remove all dangling images.</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] </span><br></pre></td></tr></table></figure><p>输入 <code>y</code></p><p>利用 Docker 搭建的应用，更新非常容易～</p><h3 id="8-6-卸载-plausible"><a href="#8-6-卸载-plausible" class="headerlink" title="8.6 卸载 plausible"></a>8.6 卸载 plausible</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/plausible</span><br><span class="line"></span><br><span class="line">docker-compose down</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/plausible  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>可以卸载得很干净。</p><h2 id="9-常见问题"><a href="#9-常见问题" class="headerlink" title="9. 常见问题"></a>9. 常见问题</h2><p>如果不想让别人注册你的plausible，可以选择关闭注册功能，或者开启邀请注册，具体操作如下：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/plausible/hosting</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">vim plausible-conf.env</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>添加：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">DISABLE_REGISTRATION=invite_only</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">DISABLE_REGISTRATION=<span class="literal">true</span></span><br></pre></td></tr></table></figure><p>完整的env配置如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BASE_URL=填你打算给plausible准备的域名，比如https://analytics.baidu.com</span><br><span class="line">SECRET_KEY_BASE=填刚刚生成的那个密钥</span><br><span class="line">DISABLE_REGISTRATION=invite_only</span><br></pre></td></tr></table></figure><p>更多参数配置，请看文档：<a href="https://plausible.io/docs/self-hosting-configuration">https://plausible.io/docs/self-hosting-configuration</a></p><h2 id="10-结尾"><a href="#10-结尾" class="headerlink" title="10. 结尾"></a>10. 结尾</h2><p>祝大家用得开心，有问题可以去 GitHub 提 <a href="https://github.com/plausible/analytics/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，有能力给项目做贡献的同学，也欢迎积极加入到 <a href="https://github.com/plausible/analytics">项目</a> 中来，贡献自己的一份力量！</p><p>最后，感谢开发人员们的辛苦付出，让我们能用到这么优秀的项目！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>GitHub官方仓库：<a href="https://github.com/plausible/analytics">https://github.com/plausible/analytics</a><br>官方文档地址：<a href="https://plausible.io/docs">https://plausible.io/docs</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Umami </tag>
            
            <tag> 谷歌统计 </tag>
            
            <tag> 百度统计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>免费12个月使用！体验AWS——目前世界上最大的云服务器提供商家！（含DD教程）</title>
      <link href="/archives/aws-free/"/>
      <url>/archives/aws-free/</url>
      
        <content type="html"><![CDATA[<h2 id="更新记录"><a href="#更新记录" class="headerlink" title="更新记录"></a>更新记录</h2><p>更新了文末使用注意事项。</p><p>更新了EC2 每个月可以用100G流量的说明。</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p><img src="https://img.laoda.de/i/2023/08/03/dy68sc-0.webp" alt="54f5c741679d226ad992c348d6bcca2e.png"></p><p>几乎每个大厂都可以免费体验一定时长的云服务，比如GCP、Azure，甲骨文甚至还有可以永久免费的服务器。</p><p><img src="https://img.laoda.de/i/2023/08/03/dzsptl-0.webp" alt="33bb560749fb4dc108fd22aa7efe27e3.png"></p><p>这一期，我们就来免费体验一下世界上最大的云服务器提供商——亚马逊的云服务 (<a href="https://gao.ee/aws">AWS</a>)</p><p><img src="https://img.laoda.de/i/2023/08/03/dyi6b7-0.webp" alt="a6008202f607ebee921a0e39d19cd8d6.png"></p><blockquote><p>世界上最大的云服务器提供商是亚马逊网络服务 (AWS)。AWS 是一家全球性云计算平台，提供计算、存储、数据库、网络、分析、机器学习、人工智能、移动、开发工具和企业应用等多种服务。AWS 在全球拥有超过 200 个区域和 70 多个国家&#x2F;地区的数据中心。</p><p>2022 年，AWS 的收入为 540.5 亿美元，比 2021 年增长了 37%。AWS 是世界上最受欢迎的云计算平台，拥有超过 300 万客户。AWS 的客户包括小型企业、中型企业和大型企业，以及政府机构和非营利组织。</p><p>AWS 的优势包括：</p><p>广泛的服务：AWS 提供广泛的服务，满足企业的各种需求。<br>可靠性：AWS 拥有全球最可靠的数据中心网络。<br>安全性：AWS 提供最先进的安全功能。<br>成本效益：AWS 的价格非常合理。</p></blockquote><p>来源：bard.google.com</p><p><a href="https://gao.ee/aws">AWS</a>其实可以免费<del>白嫖</del>体验很多产品，比如云服务器（ec2），云存储（S3），CDN相关产品（网站提速），lightsail（VPS,搭建远程桌面）SES (群发邮件)，Amazon Chime （视频会议）等等等等，大家可以随意尝试。</p><p>这边我们玩服务器多一些，就来白嫖12个月的EC2吧。</p><p><img src="https://img.laoda.de/i/2023/07/19/10w0lwk-0.webp" alt="74853af64cc16c50f361471e346b97ba.png"></p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>AWS 免费体验地址：<a href="https://gao.ee/aws">https://gao.ee/aws</a></p><p>正式开始之前，建议你准备：</p><ul><li>一个邮箱</li><li>一个可以接受验证码的手机号（大家可以用自己的手机号接受验证码，正常国内的能收到码，也可以可以选择GV或者是到<a href="https://5sim.net/zh">5sim.net</a>上找接码，看是最低6卢布（大概5毛钱）一条）</li><li>一张信用卡（只是授权一下，并不会要你钱，可以是虚拟卡，比如咕咕用的<a href="https://blog.laoda.de/archives/onekey-card-tutorial">OneKey Card</a>）</li><li>注册账号的时候不要挂代理</li></ul><h2 id="开始注册"><a href="#开始注册" class="headerlink" title="开始注册"></a>开始注册</h2><p>点击创建<a href="https://gao.ee/aws">AWS账户</a>，一步一步完成注册即可，地址填拼音。</p><p>具体可以看视频。</p><p>YouTube视频地址：<a href="https://youtu.be/r6Mr5tBCnvc">https://youtu.be/r6Mr5tBCnvc</a></p><p>bilibili视频地址：<a href="https://www.bilibili.com/video/BV1VP411t7ia/">https://www.bilibili.com/video/BV1VP411t7ia/</a></p><img src="https://img.laoda.de/i/2023/07/19/10wadak-0.webp" alt="b16ce8b66a52d72e800af237395260e4.png" style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/07/19/10wbyp2-0.webp" alt="634cfafb4f2c40764ae6a21fa62f61ed.png" style="zoom:33%;" /><p>没什么问题的话，你会看到这个界面。</p><p><img src="https://img.laoda.de/i/2023/07/19/10wd9bi-0.webp" alt="d0ee6d255c695ffd6ac1b83c17fd3828.png"></p><p>信用卡验证预扣款截图：</p><p><img src="https://img.laoda.de/i/2023/07/19/10weg2q-0.webp" alt="517e9a1ec1a10e77e29c553d273b5a61.png"></p><h2 id="AWS后台概览"><a href="#AWS后台概览" class="headerlink" title="AWS后台概览"></a>AWS后台概览</h2><p>选择服务器地区：</p><p><img src="https://img.laoda.de/i/2023/07/19/10wflzn-0.webp" alt="2c17a641badf9ab13cacc453ca4e1b65.png"></p><p>创建实例：</p><p><img src="https://img.laoda.de/i/2023/07/19/10wgygv-0.webp" alt="1f331693624de7d3afb6c74212e785b9.png"></p><p>输入名称：</p><p><img src="https://img.laoda.de/i/2023/07/19/10wiapn-0.webp" alt="6cfd3d5ecad6d7a995d653d6d2f23c48.png"></p><p>选择系统：</p><p><img src="https://img.laoda.de/i/2023/07/19/10wkpgg-0.webp" alt="a8e3e0ba03287d2dbfb0676de8778316.png"></p><p>打开<code>22</code>、<code>80</code>、<code>443</code>端口：</p><p><img src="https://img.laoda.de/i/2023/07/19/10wlpkr-0.webp" alt="9f49cf1bf1bd666895b1f4b56e6b57fe.png"></p><p>修改硬盘大小：</p><p><img src="https://img.laoda.de/i/2023/07/19/10wvluk-0.webp" alt="1d90fc5f95ec2db36bbce5438f4703ba.png"> </p><p>启动实例失败，需要我们创建一个密钥对：</p><p><img src="https://img.laoda.de/i/2023/07/19/10wwvdi-0.webp" alt="de088cbcc6a9fd7008bef38acb241a5e.png"></p><img src="https://img.laoda.de/i/2023/07/19/10wybtd-0.webp" alt="b1067d9e84116a9eacf9ea05e4ea2ad3.png" style="zoom:33%;" /><p>再次启动实例：</p><img src="https://img.laoda.de/i/2023/07/19/10x04g2-0.webp" alt="a37dbccb9e3c3338ca3e036509a0e79f.png" style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/07/19/10x1vtf-0.webp" alt="e3767553bf2908ccc8dcf8bb86e41eec.png" style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/07/19/10x3gyw-0.webp" alt="df8ede3760eee791cf9fa7ca22974e98.png" style="zoom:33%;" /><p>连接服务器：</p><img src="https://img.laoda.de/i/2023/07/19/10x54lb-0.webp" alt="8370b0de6fdba51d82a7d5201b89fe20.png" style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/07/19/10x6if8-0.webp" alt="9754a9c6fab6875769d9229495dd5481.png" style="zoom:33%;" /><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 400 密钥地址</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -i 密钥位置 admin@ip</span><br></pre></td></tr></table></figure><p>即可登录。</p><img src="https://img.laoda.de/i/2023/07/19/10x88my-0.webp" alt="d1a5f5fb28805e4c0cb7faa98c09f5c0.png" style="zoom:33%;" /><h2 id="DD一个干净的Debian-11"><a href="#DD一个干净的Debian-11" class="headerlink" title="DD一个干净的Debian 11"></a>DD一个干净的Debian 11</h2><p>默认的登录方式其实是最安全的，但是对我们来说难免太不方便了，我们希望可以随时随地用密钥登录，这边我们就来完全重装一下这台机器的系统吧。</p><p>dd 脚本（大概5-10分钟）</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(wget --no-check-certificate -qO- <span class="string">&#x27;https://raw.githubusercontent.com/MoeClub/Note/master/InstallNET.sh&#x27;</span>) -d 11 -v 64 -p <span class="string">&quot;自定义root密码&quot;</span> -port <span class="string">&quot;自定义ssh端口&quot;</span></span><br></pre></td></tr></table></figure><p>这边我的dd脚本是这样的：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(wget --no-check-certificate -qO- <span class="string">&#x27;https://raw.githubusercontent.com/MoeClub/Note/master/InstallNET.sh&#x27;</span>) -d 11 -v 64 -p <span class="string">&quot;password123&quot;</span> -port <span class="string">&quot;222&quot;</span></span><br></pre></td></tr></table></figure><p>我把密码改成了<code>password123</code>，SSH端口改成了<code>222</code></p><p>直接输入到命令行即可。</p><h2 id="AWS-开启后台端口的方法"><a href="#AWS-开启后台端口的方法" class="headerlink" title="AWS 开启后台端口的方法"></a>AWS 开启后台端口的方法</h2><p>默认我们的这台机器只开了22端口（我们视频里也勾选了80、443端口）</p><p>所以现在总共只打开了三个端口，我们还需要开启<code>222</code>端口，不然一会儿SSH连接不上。</p><p>这边我们尝试开启<code>222</code>端口。</p><img src="https://img.laoda.de/i/2023/07/19/10xityv-0.webp" alt="aa27bc877189bfa406ed75f1735b4338.png" style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/07/19/10xk07i-0.webp" alt="144f461d39264ba6c24b52b745431063.png" style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/07/19/10xlhrf-0.webp" alt="49ec2f94666cef05c6c7528b55482c7a.png" style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/07/19/10xmzmx-0.webp" alt="078eac72fa962f787e6d4c2db2601b33.png" style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/07/19/10xoe1m-0.webp" alt="123a36565da4b5ee0513e2a4d16d8841.png" style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/07/19/10xpxss-0.webp" alt="2fae84dc62654a8a2420eb26dca2d8dc.png" style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/07/19/10xr52a-0.webp" alt="940357987a82d82f77554bcbdd3e3060.png" style="zoom:33%;" /><p>开启之后，我们尝试登录机器。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh root@ip -p 222</span><br></pre></td></tr></table></figure><p>成功登录！</p><img src="https://img.laoda.de/i/2023/07/19/10xslee-0.webp" alt="0472055b9aa4ee416dd36d594dda8f02.png" style="zoom:33%;" /><p>好了，现在你就有一台干净系统的机器啦，下一期我们介绍一下如何在这个机器上装一个好玩儿的Docker项目，在这个免费使用的12个月里面好好折腾它！</p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul><li>服务器免费政策是每月750小时，也就是说如果只开一个Instance，一个月最多只能开31天(744个小时)。如果起了好几个Instance，你就面临付款的风险了。</li><li>Instance计时是以小时做单位，如果你一个小时之内start &#x2F;stop 5次服务器的话，你会被记5个小时。</li><li>服务器使用过程中流量，I&#x2F;O次数等等很多信息都有免费的上限，一般个人学习实验是够的，如果乱用，也有需要付款的风险。</li><li>免费期是12个月，12月之内一定要终止你使用的AWS服务，否则会被计费。</li><li>不清楚的情况下，不要乱点其他服务，不然被收费了都不知道为什么</li><li>如果是自己的信用卡，记得给信用卡锁一下每日额度，避免不小心被乱扣费</li></ul><p>感谢<a href="https://www.jianshu.com/p/acc8b52b3c4f">@JamFF</a></p>]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AWS </tag>
            
            <tag> 亚马逊云服务 </tag>
            
            <tag> EC2 </tag>
            
            <tag> 免费服务器 </tag>
            
            <tag> 新加坡服务器 </tag>
            
            <tag> 亚太服务器 </tag>
            
            <tag> 低延迟 </tag>
            
            <tag> DD新系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩儿的Docker项目】80、90回忆杀，10分钟搭建复古中文 DOS 游戏，最多畅玩1898款！</title>
      <link href="/archives/docker-compose-install-chinese-dos-games/"/>
      <url>/archives/docker-compose-install-chinese-dos-games/</url>
      
        <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h2><p>小学的时候，班上有几个同学家里比较富裕，爸爸妈妈给他们买了步步高电子词典，本来是学习的工具，但是有一天发现可以下载游戏，于是学习机就变成了游戏机。</p><p>我当时没有这个机器，只能看着他们玩，还记得又一次把作业给同学抄，然后借他的步步高玩了金庸群侠传，非常上头。后来还玩了伏魔记、魔塔……</p><p>一晃眼，现在都工作好多年了……</p><p>今天就让我们重温一下儿时的游戏吧。</p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p>直接丢几个图：</p><p><img src="https://img.laoda.de/i/2023/07/22/10tjkvw-0.webp" alt="2d2152aefff4cd3ac04ecb2ecb40e274.png"></p><p><img src="https://img.laoda.de/i/2023/07/22/10tl4tg-0.webp" alt="0883c841c73871b1341edfd1e2599c3f.png"></p><p><img src="https://img.laoda.de/i/2023/07/22/10u0cnp-0.webp" alt="fb998df7fa96a7b4f8cdc8cf76faf7c8.png"></p><p><img src="https://img.laoda.de/i/2023/07/22/10u1g9d-0.webp" alt="7ea1d4f1b4afddf85ccf03e96fb99f3f.png"></p><p><img src="https://img.laoda.de/i/2023/07/22/10u2shj-0.webp" alt="b22232140b0564a01e554112536644dd.png"></p><img src="https://img.laoda.de/i/2023/07/22/118uku3-0.webp" alt="image-20230722225209477" style="zoom: 50%;" /><img src="https://img.laoda.de/i/2023/07/22/11931dd-0.webp" alt="image-20230722225248152" style="zoom:50%;" /><h3 id="2-1-特点"><a href="#2-1-特点" class="headerlink" title="2.1 特点"></a>2.1 特点</h3><ul><li>支持docker一键部署</li><li>中文 DOS 游戏合集，目前共有 1898 款游戏</li><li>支持存档</li></ul><h2 id="3-相关地址"><a href="#3-相关地址" class="headerlink" title="3. 相关地址"></a>3. 相关地址</h2><p>咕咕的Demo：<a href="https://games.gugu.ovh/">https://games.gugu.ovh/</a><br>GitHub官方仓库：<a href="https://github.com/rwv/chinese-dos-games">https://github.com/rwv/chinese-dos-games</a></p><h2 id="4-搭建环境"><a href="#4-搭建环境" class="headerlink" title="4. 搭建环境"></a>4. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器 24 元 &#x2F; 月 VPS 一台</del> 咕咕自己搭建用的是香港的<a href="https://loll.cc/tx">腾讯轻量应用服务器</a> ，（这次最好选带宽比较大的，而且线路还不错的机器）如果是小白刚开始玩的话，可以选择<a href="https://blog.laoda.de/vps/">Racknerd</a>的高性价比服务器（注意地区选美国西部城市的）</li><li>系统：Debian 11 （<a href="https://blog.laoda.de/archives/useful-script/">DD 脚本</a> 非必需 DD，用原来的系统也 OK，之后教程都是用 Debian 或者 Ubuntu 搭建～）</li><li>安装好 Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker/">相关脚本</a>）</li><li>【非必需但建议】域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo/">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>【非必需】提前安装好宝塔面板海外版本 aapanel，并安装好 Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程选用】安装好 Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager/">相关教程</a>）</li></ul><blockquote><p>服务器要求：带宽最好大一些，硬盘能大一些也最好，1898 款游戏大概36G，需要手动下载一下。</p></blockquote><h2 id="5-搭建视频"><a href="#5-搭建视频" class="headerlink" title="5. 搭建视频"></a>5. 搭建视频</h2><h3 id="5-1-YouTube"><a href="#5-1-YouTube" class="headerlink" title="5.1 YouTube"></a>5.1 YouTube</h3><p>视频地址：<a href="https://youtu.be/B_tZLDbBN0I">https://youtu.be/B_tZLDbBN0I</a></p><h3 id="5-2-哔哩哔哩"><a href="#5-2-哔哩哔哩" class="headerlink" title="5.2 哔哩哔哩"></a>5.2 哔哩哔哩</h3><p>哔哩哔哩：<a href="https://www.bilibili.com/video/BV1nc411w7JD/">https://www.bilibili.com/video/BV1nc411w7JD/</a></p><h2 id="6-搭建方式"><a href="#6-搭建方式" class="headerlink" title="6. 搭建方式"></a>6. 搭建方式</h2><p>如果你不是用的腾讯云的轻量应用服务器，可以直接跳到 6.1 部分。</p><h3 id="安装系统（腾讯云轻量应用服务器）"><a href="#安装系统（腾讯云轻量应用服务器）" class="headerlink" title="安装系统（腾讯云轻量应用服务器）"></a>安装系统（腾讯云轻量应用服务器）</h3><img src="https://img.laoda.de/i/2022/08/16/zlyhcz-2.webp" alt="e59713fba8726d3cb55ae11bca83fe3c.png" style="zoom:33%;" /><p>腾讯云轻量服务器最大的特点就是 “轻量”，相比 CVM，更适合小白上手，这边我们之间选择 Docker 基础镜像，就可以省去后面安装 Docker 的步骤 <del>（如果你非要用国内的服务器，这边装的 Docker 镜像还会帮你配置好国内镜像源，让你加速访问 docker 镜像资源）</del> 不建议用国内的 。</p><h3 id="登陆（腾讯云轻量应用服务器）"><a href="#登陆（腾讯云轻量应用服务器）" class="headerlink" title="登陆（腾讯云轻量应用服务器）"></a>登陆（腾讯云轻量应用服务器）</h3><img src="https://img.laoda.de/i/2022/08/16/zlzlj7-2.webp" alt="2722040ee311eb4a9ebf2a4945bf38f4.png" style="zoom:25%;" /><img src="https://img.laoda.de/i/2022/08/16/zm0gv8-2.webp" alt="c0b5d360053746c4095d592967ee401f.png" style="zoom:25%;" /><img src="https://img.laoda.de/i/2022/08/16/zm1vqw-2.webp" alt="e0ba858f021b846ad0abc27acf5008c2.png" style="zoom:25%;" /><h3 id="6-1-安装-Docker-与-Nginx-Proxy-Manager"><a href="#6-1-安装-Docker-与-Nginx-Proxy-Manager" class="headerlink" title="6.1 安装 Docker 与 Nginx Proxy Manager"></a>6.1 安装 Docker 与 Nginx Proxy Manager</h3><p>可以直接参考这篇内容：</p><p><a href="https://blog.laoda.de/archives/nginxproxymanager/">https://blog.laoda.de/archives/nginxproxymanager/</a></p><h3 id="6-2-创建安装目录"><a href="#6-2-创建安装目录" class="headerlink" title="6.2 创建安装目录"></a>6.2 创建安装目录</h3><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/games</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/games</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure><p>英文输入法下，按 <code>i</code></p><p>这边有两种搭建方式，因为36G的游戏做成docker的镜像太大了，所以作者只是将40多个经典的DOS游戏封装到了docker的镜像里面，所以你的服务器如果硬盘不够大，可以直接用默认的方式安装。</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">dosgame-web-docker:</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">dosgame</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;8090:262&#x27;</span>  <span class="comment">#8090可以改成其他服务器没被占用的端口</span></span><br><span class="line"><span class="comment">#         volumes:</span></span><br><span class="line"><span class="comment">#             - &#x27;/root/data/docker_data/games/chinese-dos-games:/app/static/games&#x27;</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">&#x27;oldiy/dosgame-web-docker:latest&#x27;</span></span><br></pre></td></tr></table></figure><p>修改好之后，注意切换成英文输入法，然后按一下 <code>esc</code>，然后 <code>:wq</code> 保存退出。</p><p>如果你的服务器硬盘大于36G，那你可以尝试直接装1989款游戏。</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">dosgame-web-docker:</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">dosgame</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;8090:262&#x27;</span>  <span class="comment">#8090可以改成其他服务器没被占用的端口</span></span><br><span class="line">        <span class="attr">volumes:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;/root/data/docker_data/games/chinese-dos-games:/app/static/games&#x27;</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">&#x27;oldiy/dosgame-web-docker:latest&#x27;</span></span><br></pre></td></tr></table></figure><p>修改好之后，注意切换成英文输入法，然后按一下 <code>esc</code>，然后 <code>:wq</code> 保存退出。</p><p>然后在</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/games/</span><br><span class="line"></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/rwv/chinese-dos-games.git</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> chinese-dos-games/</span><br><span class="line"></span><br><span class="line">python3 download_data.py</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2023/07/24/s4abll-0.webp" alt="image-20230724170023076"></p><p>注意这边下载默认是下载1989款游戏的，总共36G左右，如果你的服务器的下载带宽不大的话，可能需要非常非常久。这也是这边推荐大家用海外的服务器的原因，带宽普遍较大，比如<a href="https://blog.laoda.de/vps/">Racknerd</a>（注意选美西地区），下载是G口的速度，理论值在128M&#x2F;s，下载起来相对较快。</p><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: git: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>输入:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt update -y</span><br><span class="line">apt install git -y</span><br></pre></td></tr></table></figure><p>再重新运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/rwv/chinese-dos-games.git</span><br></pre></td></tr></table></figure><p>即可。</p><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: python: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>说明电脑上没装python，你需要装一个</p><p>这边还是以Debian系统为例：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line"></span><br><span class="line">sudo apt install python3</span><br><span class="line"></span><br><span class="line">python3 download_data.py</span><br></pre></td></tr></table></figure><p>即可。</p><p>如果你担心SSH断开，或者你不想一直等着，想让它后台慢慢下载，可以试试咕咕之前分享过的Screen的使用方法：<a href="https://blog.laoda.de/archives/how-to-use-linux-screen/">Linux 实用工具 Screen —— 再也不怕因为网络连接中断杀死任务了！</a></p><p>下载完成之后，你可以运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> -l /root/data/docker_data/games/chinese-dos-games/bin | grep <span class="string">&quot;^-&quot;</span> | <span class="built_in">wc</span> -l</span><br></pre></td></tr></table></figure><p>查看文件夹中的文件数量。不出意外应该显示<code>1898</code></p><p>你也可以用：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">du</span> -sh /root/data/docker_data/games</span><br></pre></td></tr></table></figure><p>计算文件夹的总大小，不出意外应该显示：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">36G /root/data/docker_data/games</span><br></pre></td></tr></table></figure><p>没什么问题的话，我们可以运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/games</span><br><span class="line"></span><br><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/root/data/docker_data/games</span><br><span class="line"></span><br><span class="line">docker compose up -d</span><br></pre></td></tr></table></figure><p>取决于你的docker compose的版本，新的是没有<code>-</code>的</p><p>等待拉取镜像即可。</p><h3 id="6-3-打开服务器防火墙（非必需）并访问网页"><a href="#6-3-打开服务器防火墙（非必需）并访问网页" class="headerlink" title="6.3 打开服务器防火墙（非必需）并访问网页"></a>6.3 打开服务器防火墙（非必需）并访问网页</h3><p>如果你是阿里云、腾讯云、甲骨文、azure等大厂的机器，可能需要打开防火墙的端口 <code>8090</code></p><p>举例，腾讯云打开方法如下（部分服务商没有自带的面板防火墙，就不用这步操作了）：</p><img src="https://img.laoda.de/i/2022/06/30/zlio5h-2.webp" alt="image-20220630215240864" style="zoom: 25%;" /><img src="https://img.laoda.de/i/2022/06/30/10h3dqt-2.webp" alt="image-20220630220546335" style="zoom: 25%;" /><p>图中示例填的是 <code>5230</code>，备注填的是 <code>memos</code>，这边我们填 <code>8090</code>，示例填 <code>games</code> ，确定即可（如果你在 docker-compose 文件里换了 <code>9009</code>，这边就需要填 <code>9009</code>，以此类推）</p><img src="https://img.laoda.de/i/2022/08/19/o4byqz-2.webp" alt="image-20220819145844555" style="zoom: 25%;" /><p>查看端口是否被占用（以 <code>8090</code> 为例），输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:8090  <span class="comment">#查看 8090 端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果啥也没出现，表示端口未被占用，我们可以继续下面的操作了～</p><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装 lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用（被占用了就修改一下端口，比如改成 <code>8081</code>，注意 docker 命令行里和防火墙都要改）</p><p>最后：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/games    <span class="comment"># 来到 dockercompose 文件所在的文件夹下</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>理论上，等出现绿色的<code>done</code>字样，</p><p>我们就可以输入 <code>http://ip:8090</code> 访问了。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器 IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的 IP。</p><p>2、遇到访问不了的情况，请再次检查在宝塔面板的防火墙和服务商的后台防火墙是否打开对应了端口。</p></blockquote><p>不过现在我们还是用IP+端口的方式访问的，不够优雅，一般情况下，我们都需要给网页加上https！让网页更安全！</p><p> <a href="https://loll.cc/ns">namesilo</a> 上面 xyz 后缀的域名一年就 7 块钱，可以年抛。（冷知识，namesilo上 6位数字的xyz续费永远都是0.99美元 &#x3D; &#x3D;）</p><p>如果想要长期使用，还是建议买 com 后缀的域名，更加正规一些，可以输入 <code>gugugege</code> 来获得 1 美元的优惠（失效的话可以评论区反馈一下～）</p><p><a href="https://loll.cc/ns">namesilo</a> 自带隐私保护，咕咕一直在用这家，价格也是这些注册商里面比较低的，关键是他家不像其他家域名注册商，没有七七八八的套路！（就是后台界面有些<del>丑</del> 古老 &#x3D; &#x3D;）</p><p><a href="https://blog.laoda.de/archives/namesilo/">【域名购买】Namesilo 优惠码和域名解析教程（附带服务器购买推荐和注意事项）</a></p><p>我们接着往下看！</p><h2 id="7-反向代理"><a href="#7-反向代理" class="headerlink" title="7. 反向代理"></a>7. 反向代理</h2><p>我们要用域名而不是IP+端口的方式来访问我们的服务！</p><h3 id="7-1-利用-Nginx-Proxy-Manager"><a href="#7-1-利用-Nginx-Proxy-Manager" class="headerlink" title="7.1 利用 Nginx Proxy Manager"></a>7.1 利用 Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo/">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><img src="https://img.laoda.de/i/2022/10/16/n6t02e-2.webp" alt="image-20221016140213282" style="zoom:33%;" /><p>之后，登陆 Nginx Proxy Manager（不会的看这个：<strong>安装 Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager/">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称 NPM）会用到 <code>80</code>、<code>443</code> 端口，所以本机不能占用（比如原来就有 Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom: 33%;" /><img src="https://img.laoda.de/i/2023/05/27/lvep5w-0.webp" alt="image-20230527132253249" style="zoom: 33%;" /><blockquote><p>注意填写对应的 <code>域名</code>、<code>IP</code> 和 <code>端口</code>，按文章来的话，应该是 <code>8090</code></p></blockquote><p><strong>IP 填写：</strong></p><p>如果 Nginx Proxy Manager 和 games 在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的 Docker 容器内部 IP。</p><img src="https://img.laoda.de/i/2022/09/29/pcdnz5-2.webp" style="zoom:50%;" /><p>否则直接填 <code>games</code> 所在的服务器 IP 就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom: 33%;" /><p>再次打开，勾选这些：</p><img src="https://img.laoda.de/i/2022/10/16/n7nn6e-2.webp" alt="image-20221016140356324" style="zoom:50%;" /><p>然后就可以用域名来安装访问了。</p><h3 id="7-2-利用宝塔面板"><a href="#7-2-利用宝塔面板" class="headerlink" title="7.2 利用宝塔面板"></a>7.2 利用宝塔面板</h3><p>发现还是有不少小伙伴习惯用宝塔面板，这边也贴一个宝塔面板的反代配置：</p><p>直接新建一个站点，不要数据库，不要 php，纯静态即可。</p><p>然后打开下面的配置，修改 Nginx 的配置。</p><img src="https://img.laoda.de/i/2022/08/19/ov4xrt-2.webp" alt="image-20220819150345725" style="zoom: 33%;" /><img src="https://img.laoda.de/i/2022/08/19/owbbkb-2.webp" alt="image-20220819150542867" style="zoom: 33%;" /><p>代码如下：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:8090/;       <span class="comment"># 注意改成你实际使用的端口</span></span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此方法对 90% 的反向代理都能生效，然后就可以用域名来安装访问了。</p><p>有同学可能会问，为什么不直接用宝塔自带的反向代理功能。</p><img src="https://img.laoda.de/i/2022/08/19/oxf800-2.webp" alt="image-20220819150730128" style="zoom: 33%;" /><p>也可以，不过咕咕自己之前遇到过当有多个网站需要反代的时候，在这边设置会报错的情况 &#x3D; &#x3D;</p><p>所以后来就不用了，直接用上面的方法来操作了。</p><h2 id="8-使用教程"><a href="#8-使用教程" class="headerlink" title="8. 使用教程"></a>8. 使用教程</h2><p>参考视频。</p><h3 id="8-1-更新-games"><a href="#8-1-更新-games" class="headerlink" title="8.1 更新 games"></a>8.1 更新 games</h3><p>一般应该不需要怎么更新，作者停更很久了，不过这边还是提供一下docker-compose安装的应用的基本更新方法。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/games</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/games /root/data/docker_data/games.archive  <span class="comment"># 万事先备份，以防万一</span></span><br><span class="line"></span><br><span class="line">docker-compose pull</span><br><span class="line"></span><br><span class="line">docker-compose up -d    <span class="comment"># 请不要使用 docker-compose stop 来停止容器，因为这么做需要额外的时间等待容器停止；docker-compose up -d 直接升级容器时会自动停止并立刻重建新的容器，完全没有必要浪费那些时间。</span></span><br><span class="line"></span><br><span class="line">docker image prune  <span class="comment"># prune 命令用来删除不再使用的 docker 对象。删除所有未被 tag 标记和未被容器使用的镜像</span></span><br></pre></td></tr></table></figure><p>提示：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WARNING! This will remove all dangling images.</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] </span><br></pre></td></tr></table></figure><p>输入 <code>y</code></p><p>利用 Docker 搭建的应用，更新非常容易～</p><h3 id="8-2-卸载-games"><a href="#8-2-卸载-games" class="headerlink" title="8.2 卸载 games"></a>8.2 卸载 games</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/games</span><br><span class="line"></span><br><span class="line">docker-compose down</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/games  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>可以卸载得很干净。</p><h2 id="9-常见问题"><a href="#9-常见问题" class="headerlink" title="9. 常见问题"></a>9. 常见问题</h2><ul><li><p>部分游戏没有按键说明，可能需要自己在键盘尝试一下，一般就是<code>shift</code>、<code>alt</code>、<code>enter</code>、<code>空格</code>、<code>command</code>、<code>z</code>、<code>x</code>这几个键，大家自己试试看。</p></li><li><p>部分游戏可能有bug，大家可以<a href="https://github.com/rwv/chinese-dos-games/issues">反馈一下</a>。</p></li></ul><h2 id="10-结尾"><a href="#10-结尾" class="headerlink" title="10. 结尾"></a>10. 结尾</h2><p>祝大家用得开心，有问题可以去 GitHub 提 <a href="https://github.com/rwv/chinese-dos-games/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，有能力给项目做贡献的同学，也欢迎积极加入到 <a href="https://github.com/rwv/chinese-dos-games/">项目</a> 中来，贡献自己的一份力量！</p><p>最后，感谢开发人员们的辛苦付出，让我们能用到这么优秀的项目！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>GitHub官方仓库：<a href="https://github.com/rwv/chinese-dos-games/">https://github.com/rwv/chinese-dos-games/</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker部署 </tag>
            
            <tag> DockerCompose </tag>
            
            <tag> DOS 游戏 </tag>
            
            <tag> 复古游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩儿的Docker项目】5分钟搭建一个又小又快的文本、代码粘贴工具—— Hasty Paste</title>
      <link href="/archives/docker-compose-install-hasty-paste/"/>
      <url>/archives/docker-compose-install-hasty-paste/</url>
      
        <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h2><p>Hasty Paste 是一个快速粘贴文本并共享的地方，主要用于共享调试日志等，以帮助开发人员提供技术支持。该项目的目标是既快又小。</p><p>之前介绍过的类似项目：<a href="https://blog.laoda.de/archives/docker-compose-install-microbin/">【好玩儿的 Docker 项目】10 分钟搭建一个巨好用的粘贴板工具 ——MicroBin</a></p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p>直接丢几个图：</p><p><img src="https://img.laoda.de/i/2023/07/18/x2x1rn-0.webp" alt="361535150c7231d1b5defa5005cbd426.png"></p><p><img src="https://img.laoda.de/i/2023/07/18/x2vsm9-0.webp" alt="43c0d6c3ba13d306e53029e874caca1a.png"></p><p><img src="https://img.laoda.de/i/2023/07/18/x2usc3-0.webp" alt="7479c1257d5e50aec04b7e900d7b48cd.png"></p><h3 id="2-1-特点"><a href="#2-1-特点" class="headerlink" title="2.1 特点"></a>2.1 特点</h3><ul><li>支持docker一键部署，轻量级Docker镜像（使用Alpine Linux）</li><li>支持快速粘贴和保存，分享一些文本</li><li>公开访问，无需身份验证</li><li>随机生成的ID，可选择使用“长”ID以减少暴力攻击</li><li>支持添加过期时间</li><li>支持深色主题</li><li>可选语法高亮显示</li><li>不需要JavaScript</li><li>REST API接口</li><li>支持S3对象存储</li><li>支持缓存（内部和Redis）</li></ul><h2 id="3-相关地址"><a href="#3-相关地址" class="headerlink" title="3. 相关地址"></a>3. 相关地址</h2><p>咕咕的Demo：<a href="https://paste-test.gugu.ovh/">https://paste-test.gugu.ovh/</a><br>GitHub官方仓库：<a href="https://github.com/enchant97/hasty-paste">https://github.com/enchant97/hasty-paste</a><br>官方文档地址：<a href="https://enchantedcode.co.uk/hasty-paste/">https://enchantedcode.co.uk/hasty-paste/</a></p><h2 id="4-搭建环境"><a href="#4-搭建环境" class="headerlink" title="4. 搭建环境"></a>4. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器 24 元 &#x2F; 月 VPS 一台</del> 咕咕自己搭建用的是硅谷的<a href="https://loll.cc/tx">腾讯轻量应用服务器</a> ，（这次最好选 非大陆的，而且线路还不错的机器）如果是小白刚开始玩的话，也可以选择 <a href="https://gao.ee/lca">莱卡云 美国CN2 GIA</a> 的服务器，（莱卡云服务器介绍：<a href="https://blog.laoda.de/archives/vps-lcayun/">点击查看</a>）或者<a href="https://blog.laoda.de/vps/">Racknerd</a>的高性价比服务器（注意地区选美国西部城市的）</li><li>系统：Debian 11 （<a href="https://blog.laoda.de/archives/useful-script/">DD 脚本</a> 非必需 DD，用原来的系统也 OK，之后教程都是用 Debian 或者 Ubuntu 搭建～）</li><li>安装好 Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker/">相关脚本</a>）</li><li>【非必需但建议】域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo/">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>【非必需】提前安装好宝塔面板海外版本 aapanel，并安装好 Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程选用】安装好 Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager/">相关教程</a>）</li></ul><blockquote><p>服务器要求：内存建议1G，能安装Docker即可～</p></blockquote><h2 id="5-搭建视频"><a href="#5-搭建视频" class="headerlink" title="5. 搭建视频"></a>5. 搭建视频</h2><h3 id="5-1-YouTube"><a href="#5-1-YouTube" class="headerlink" title="5.1 YouTube"></a>5.1 YouTube</h3><p>视频地址：<a href="https://youtu.be/R35imcsDfDo">https://youtu.be/R35imcsDfDo</a></p><h3 id="5-2-哔哩哔哩"><a href="#5-2-哔哩哔哩" class="headerlink" title="5.2 哔哩哔哩"></a>5.2 哔哩哔哩</h3><p>哔哩哔哩：<a href="https://www.bilibili.com/video/BV12V411N7M1/">https://www.bilibili.com/video/BV12V411N7M1/</a></p><h2 id="6-搭建方式"><a href="#6-搭建方式" class="headerlink" title="6. 搭建方式"></a>6. 搭建方式</h2><p>如果你不是用的腾讯云的轻量应用服务器，可以直接跳到 6.1 部分。</p><h3 id="安装系统（腾讯云轻量应用服务器）"><a href="#安装系统（腾讯云轻量应用服务器）" class="headerlink" title="安装系统（腾讯云轻量应用服务器）"></a>安装系统（腾讯云轻量应用服务器）</h3><img src="https://img.laoda.de/i/2022/08/16/zlyhcz-2.webp" alt="e59713fba8726d3cb55ae11bca83fe3c.png" style="zoom:33%;" /><p>腾讯云轻量服务器最大的特点就是 “轻量”，相比 CVM，更适合小白上手，这边我们之间选择 Docker 基础镜像，就可以省去后面安装 Docker 的步骤 <del>（如果你非要用国内的服务器，这边装的 Docker 镜像还会帮你配置好国内镜像源，让你加速访问 docker 镜像资源）</del> 不建议用国内的 。</p><h3 id="登陆（腾讯云轻量应用服务器）"><a href="#登陆（腾讯云轻量应用服务器）" class="headerlink" title="登陆（腾讯云轻量应用服务器）"></a>登陆（腾讯云轻量应用服务器）</h3><img src="https://img.laoda.de/i/2022/08/16/zlzlj7-2.webp" alt="2722040ee311eb4a9ebf2a4945bf38f4.png" style="zoom:25%;" /><img src="https://img.laoda.de/i/2022/08/16/zm0gv8-2.webp" alt="c0b5d360053746c4095d592967ee401f.png" style="zoom:25%;" /><img src="https://img.laoda.de/i/2022/08/16/zm1vqw-2.webp" alt="e0ba858f021b846ad0abc27acf5008c2.png" style="zoom:25%;" /><h3 id="6-1-安装-Docker-与-Nginx-Proxy-Manager"><a href="#6-1-安装-Docker-与-Nginx-Proxy-Manager" class="headerlink" title="6.1 安装 Docker 与 Nginx Proxy Manager"></a>6.1 安装 Docker 与 Nginx Proxy Manager</h3><p>可以直接参考这篇内容：</p><p><a href="https://blog.laoda.de/archives/nginxproxymanager/">https://blog.laoda.de/archives/nginxproxymanager/</a></p><h3 id="6-2-创建安装目录"><a href="#6-2-创建安装目录" class="headerlink" title="6.2 创建安装目录"></a>6.2 创建安装目录</h3><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/hastypaste</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/hastypaste</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure><p>英文输入法下，按 <code>i</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">paste-bin:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">ghcr.io/enchant97/hasty-paste:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">hasty-paste</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8090</span><span class="string">:8000</span> <span class="comment"># 左边的8090可以自行修改成服务器上没有使用的端口</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data:/app/data</span></span><br></pre></td></tr></table></figure><p>修改好之后，注意切换成英文输入法，然后按一下 <code>esc</code>，然后 <code>:wq</code> 保存退出。</p><h3 id="6-3-打开服务器防火墙（非必需）并访问网页"><a href="#6-3-打开服务器防火墙（非必需）并访问网页" class="headerlink" title="6.3 打开服务器防火墙（非必需）并访问网页"></a>6.3 打开服务器防火墙（非必需）并访问网页</h3><p>打开防火墙的端口 <code>8090</code></p><p>举例，腾讯云打开方法如下（部分服务商没有自带的面板防火墙，就不用这步操作了）：</p><img src="https://img.laoda.de/i/2022/06/30/zlio5h-2.webp" alt="image-20220630215240864" style="zoom: 25%;" /><img src="https://img.laoda.de/i/2022/06/30/10h3dqt-2.webp" alt="image-20220630220546335" style="zoom: 25%;" /><p>图中示例填的是 <code>5230</code>，备注填的是 <code>memos</code>，这边我们填 <code>8090</code>，示例填 <code>hastypaste</code> ，确定即可（如果你在 docker-compose 文件里换了 <code>9009</code>，这边就需要填 <code>9009</code>，以此类推）</p><img src="https://img.laoda.de/i/2022/08/19/o4byqz-2.webp" alt="image-20220819145844555" style="zoom: 25%;" /><p>查看端口是否被占用（以 <code>8090</code> 为例），输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:8090  <span class="comment">#查看 8090 端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果啥也没出现，表示端口未被占用，我们可以继续下面的操作了～</p><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装 lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用（被占用了就修改一下端口，比如改成 <code>8081</code>，注意 docker 命令行里和防火墙都要改）</p><p>最后：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/hastypaste    <span class="comment"># 来到 dockercompose 文件所在的文件夹下</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> 777 data</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>理论上我们就可以输入 <code>http://ip:8090</code> 访问了。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器 IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的 IP。</p><p>2、遇到访问不了的情况，请再次检查在宝塔面板的防火墙和服务商的后台防火墙是否打开对应了端口。</p></blockquote><p>一般情况下，我们都需要给网页加上https！让网页更安全！</p><p> <a href="https://loll.cc/ns">namesilo</a> 上面 xyz 后缀的域名一年就 7 块钱，可以年抛。（冷知识，namesilo上 6位数字的xyz续费永远都是0.99美元 &#x3D; &#x3D;）</p><p>如果想要长期使用，还是建议买 com 后缀的域名，更加正规一些，可以输入 <code>laodade</code> 来获得 1 美元的优惠（不知道现在还有没有）</p><p><a href="https://loll.cc/ns">namesilo</a> 自带隐私保护，咕咕一直在用这家，价格也是这些注册商里面比较低的，关键是他家不像其他家域名注册商，没有七七八八的套路！（就是后台界面有些<del>丑</del> 古老 &#x3D; &#x3D;）</p><p><a href="https://blog.laoda.de/archives/namesilo/">【域名购买】Namesilo 优惠码和域名解析教程（附带服务器购买推荐和注意事项）</a></p><p>我们接着往下看！</p><h2 id="7-反向代理"><a href="#7-反向代理" class="headerlink" title="7. 反向代理"></a>7. 反向代理</h2><p>我们要用域名而不是IP+端口的方式来访问我们的服务！</p><h3 id="7-1-利用-Nginx-Proxy-Manager"><a href="#7-1-利用-Nginx-Proxy-Manager" class="headerlink" title="7.1 利用 Nginx Proxy Manager"></a>7.1 利用 Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo/">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><img src="https://img.laoda.de/i/2022/10/16/n6t02e-2.webp" alt="image-20221016140213282" style="zoom:33%;" /><p>之后，登陆 Nginx Proxy Manager（不会的看这个：<strong>安装 Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager/">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称 NPM）会用到 <code>80</code>、<code>443</code> 端口，所以本机不能占用（比如原来就有 Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom: 33%;" /><img src="https://img.laoda.de/i/2023/05/27/lvep5w-0.webp" alt="image-20230527132253249" style="zoom: 33%;" /><blockquote><p>注意填写对应的 <code>域名</code>、<code>IP</code> 和 <code>端口</code>，按文章来的话，应该是 <code>8090</code></p></blockquote><p><strong>IP 填写：</strong></p><p>如果 Nginx Proxy Manager 和 hastypaste 在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的 Docker 容器内部 IP。</p><img src="https://img.laoda.de/i/2022/09/29/pcdnz5-2.webp" style="zoom:50%;" /><p>否则直接填 <code>hastypaste</code> 所在的服务器 IP 就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom: 33%;" /><p>再次打开，勾选这些：</p><img src="https://img.laoda.de/i/2022/10/16/n7nn6e-2.webp" alt="image-20221016140356324" style="zoom:50%;" /><p>然后就可以用域名来安装访问了。</p><h3 id="7-2-利用宝塔面板"><a href="#7-2-利用宝塔面板" class="headerlink" title="7.2 利用宝塔面板"></a>7.2 利用宝塔面板</h3><p>发现还是有不少小伙伴习惯用宝塔面板，这边也贴一个宝塔面板的反代配置：</p><p>直接新建一个站点，不要数据库，不要 php，纯静态即可。</p><p>然后打开下面的配置，修改 Nginx 的配置。</p><img src="https://img.laoda.de/i/2022/08/19/ov4xrt-2.webp" alt="image-20220819150345725" style="zoom: 33%;" /><img src="https://img.laoda.de/i/2022/08/19/owbbkb-2.webp" alt="image-20220819150542867" style="zoom: 33%;" /><p>代码如下：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:8090/;       <span class="comment"># 注意改成你实际使用的端口</span></span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此方法对 90% 的反向代理都能生效，然后就可以用域名来安装访问了。</p><p>有同学可能会问，为什么不直接用宝塔自带的反向代理功能。</p><img src="https://img.laoda.de/i/2022/08/19/oxf800-2.webp" alt="image-20220819150730128" style="zoom: 33%;" /><p>也可以，不过咕咕自己之前遇到过当有多个网站需要反代的时候，在这边设置会报错的情况 &#x3D; &#x3D;</p><p>所以后来就不用了，直接用上面的方法来操作了。</p><h2 id="8-使用教程"><a href="#8-使用教程" class="headerlink" title="8. 使用教程"></a>8. 使用教程</h2><p>参考视频，或者官方文档：<a href="https://enchantedcode.co.uk/hasty-paste/install.html">https://enchantedcode.co.uk/hasty-paste/install.html</a></p><h3 id="8-1-更新-hastypaste"><a href="#8-1-更新-hastypaste" class="headerlink" title="8.1 更新 hastypaste"></a>8.1 更新 hastypaste</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/hastypaste</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/hastypaste /root/data/docker_data/hastypaste.archive  <span class="comment"># 万事先备份，以防万一</span></span><br><span class="line"></span><br><span class="line">docker-compose pull</span><br><span class="line"></span><br><span class="line">docker-compose up -d    <span class="comment"># 请不要使用 docker-compose stop 来停止容器，因为这么做需要额外的时间等待容器停止；docker-compose up -d 直接升级容器时会自动停止并立刻重建新的容器，完全没有必要浪费那些时间。</span></span><br><span class="line"></span><br><span class="line">docker image prune  <span class="comment"># prune 命令用来删除不再使用的 docker 对象。删除所有未被 tag 标记和未被容器使用的镜像</span></span><br></pre></td></tr></table></figure><p>提示：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WARNING! This will remove all dangling images.</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] </span><br></pre></td></tr></table></figure><p>输入 <code>y</code></p><p>利用 Docker 搭建的应用，更新非常容易～</p><h3 id="8-2-卸载-hastypaste"><a href="#8-2-卸载-hastypaste" class="headerlink" title="8.2 卸载 hastypaste"></a>8.2 卸载 hastypaste</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/hastypaste</span><br><span class="line"></span><br><span class="line">docker-compose down</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/hastypaste  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>可以卸载得很干净。</p><h2 id="9-常见问题"><a href="#9-常见问题" class="headerlink" title="9. 常见问题"></a>9. 常见问题</h2><p>暂未发现</p><h2 id="10-结尾"><a href="#10-结尾" class="headerlink" title="10. 结尾"></a>10. 结尾</h2><p>祝大家用得开心，有问题可以去 GitHub 提 <a href="https://github.com/enchant97/hasty-paste/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，有能力给项目做贡献的同学，也欢迎积极加入到 <a href="https://github.com/enchant97/hasty-paste/">项目</a> 中来，贡献自己的一份力量！</p><blockquote><p>目前这个项目非常需要维护人员，欢迎小伙伴贡献自己的力量。</p></blockquote><p>最后，感谢开发人员们的辛苦付出，让我们能用到这么优秀的项目！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>GitHub官方仓库：<a href="https://github.com/enchant97/hasty-paste">https://github.com/enchant97/hasty-paste</a><br>官方文档地址：<a href="https://enchantedcode.co.uk/hasty-paste/">https://enchantedcode.co.uk/hasty-paste/</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker部署 </tag>
            
            <tag> DockerCompose </tag>
            
            <tag> paste </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客Butterfly主题配置记录（附简单聊一下之前博客的问题）</title>
      <link href="/archives/hexo-butterfly-config/"/>
      <url>/archives/hexo-butterfly-config/</url>
      
        <content type="html"><![CDATA[<h2 id="简单聊一下之前博客的问题"><a href="#简单聊一下之前博客的问题" class="headerlink" title="简单聊一下之前博客的问题"></a>简单聊一下之前博客的问题</h2><p>博客前段时间不确定是DNS解析的问题还是被攻击了，导致无法访问。（期间更换了高防服务器依旧无果，只要用<code>blog.laoda.de</code>或者<code>iwanlab.com</code>一反代，源站服务器CPU立马飙升到100%，不管是OVH还是HZ，但是换别的域名反代源站CPU占用一直保持在3-5%的水平）</p><p><img src="https://img.laoda.de/i/2023/07/12/12dg711-0.webp"></p><p>通过top查看是java的进程占用过多（机器上架设了halo，是基于Java的）</p><p><img src="https://img.laoda.de/i/2023/07/12/12ruyhd-0.webp"></p><p>但是我有其他服务器也搭建了halo的博客，那个基本只有20-60%的占用</p><p><img src="https://img.laoda.de/i/2023/07/12/12sttd0-0.webp"></p><p>折腾了好久，做了以下尝试，均没有效果：</p><p>1、利用hetzner的备份功能，直接找一台新的服务器部署，然后反代（还是用瓦工，同一个域名），源站服务器CPU在反代之前一直是0-5%占用，一旦反代，飙升到200%（2核心的）</p><p>2、 直接换反代服务器（换成了斯巴达，同一个域名），效果同上，没反代之前是cpu低占用，一旦反代，直接飙满；</p><p>3、停用Wordpress，重新用docker部署另一个halo博客，用同一个域名，依旧如上，换了一个域名之后，恢复正常。</p><p>猜想会不会是这个域名的问题，于是我用了 <a href="http://www.aaa.com/">www.aaa.com</a> 依旧采用源站+反代的模式，正常了，cpu在5%左右。</p><p>然后我把aaa.com 301重定向到了 <a href="http://www.aaa.com/">www.aaa.com</a> 今天一天正常，结果刚刚，源站服务器cpu又爆了</p><p>心力交瘁，于是就想索性换到无后台的静态博客Hexo吧，正好以前也弄过，有经验，这样后台没有数据处理，应该就没问题了。</p><blockquote><p>想不到折腾了近三年，还是回到了Hexo &#x3D; &#x3D;</p></blockquote><p>又用上了当时折腾博客一眼相中的Butterfly主题（当时记得只有300+ star，现在已经是5K+了）</p><p>因为Hexo没有后台，很多东西需要自己手动来配置一下的，期间有些内容也是网上搜索得到的答案，为了防止遗忘，咕咕这边特别记录一下一些我认为的重点，同时也给想要使用Hexo博客的新手小伙伴一些参考吧。</p><h2 id="Hexo博客配置记录"><a href="#Hexo博客配置记录" class="headerlink" title="Hexo博客配置记录"></a>Hexo博客配置记录</h2><h3 id="将Hexo博客自动部署到服务器"><a href="#将Hexo博客自动部署到服务器" class="headerlink" title="将Hexo博客自动部署到服务器"></a>将Hexo博客自动部署到服务器</h3><p>下面的很多内容网上都能找到各种解决方案，这边先把网上没有的，咕咕自己折腾的分享给大家。</p><p>之前用Hexo博客，最大的痛点就是：<strong>我怎么样才能一键把我本地生成的博客推送到我的服务器上？</strong></p><blockquote><p>其实可以推送到GitHub，但是GitHub访问比较慢，很多地区的联通宽带甚至无法访问，咕咕这边有<a href="https://bwh81.net/aff.php?aff=67086&pid=87">搬瓦工</a>的<a href="https://blog.laoda.de/archives/vps-route/">三网CN2 GIA</a>的服务器，国内访问速度很不错，所以想着部署在搬瓦工上，给国内不管是使用移动、联通还是电信宽带的小伙伴们都能提供一个良好的访问体验。</p></blockquote><p>其实，在现在的博客里有一个方法：<a href="https://blog.laoda.de/archives/hexo-building/">将 Hexo 部署到阿里云轻量服务器（保姆级教程）</a> （这个是转载的当时一位大佬的博客，大概是3年前，当时自己跟着一步一步做成功了，也很激动。）</p><p>但是这个方法说实话配置起来还是比较复杂的。</p><p>有没有简单一点的方法呢？</p><p>突然想到，现在不是有<a href="https://blog.laoda.de/archives/chatgpt-plus-depay/">ChatGPT</a>吗？之前一直不会写脚本，现在把需求给ChatGPT，让它帮忙写一个自动部署脚本不就行了？</p><p>于是有了下面要介绍的这个脚本。</p><p>先说一下我的环境与目的：</p><ul><li><a href="https://bwh81.net/aff.php?aff=67086&pid=87">搬瓦工服务器</a>一台，IP：<code>173.242.118.113</code> SSH端口:<code>3451</code> ，安装了<a href="https://blog.laoda.de/archives/nginxproxymanager/">Nginx Proxy Manager</a>（你也可以是任意的一台服务器，比如<a href="https://loll.cc/tx">腾讯云</a>、<a href="https://blog.laoda.de/vps/">Racknerd</a>等等，可以是任意系统，只要也安装上Nginx Proxy Manager即可）</li><li>本地使用MacBook Air（需要python和rsync，Windows的同学也不要慌，下面有windows的安装方法）</li><li>Hexo文件存放在<code>/Users/gugu/blog</code>，Hexo的public文件（就是我们需要上传到服务器的）路径是<code>/Users/gugu/blog/public</code></li><li>目标把本地<code>/Users/gugu/blog/public</code>的内容发送到服务器的<code>/root/data/docker_data/npm/data/blog</code></li></ul><p>直接把需求仍给ChatGPT，看看回答：</p><p>Prompt：</p><blockquote><p>我需要把本地mac电脑上，<code>/Users/gugu/blog/public</code>文件夹里面的内容，上传到服务器的<code>/root/data/docker_data/npm/data/blog</code>里，服务器的IP：<code>173.242.118.113</code> ，SSH端口：<code>3451</code> ，请帮我写一个自动化脚本。</p></blockquote><p>ChatGPT回答：</p><blockquote><p>这里是一个基本的bash脚本，使用<code>rsync</code>命令通过SSH协议上传文件，<code>rsync</code>可以保持源文件和目标文件之间的一致性，非常适合用于备份和镜像。如果<code>rsync</code>命令在你的机器上没有安装，它应该在大多数Linux发行版和MacOS上通过包管理器（如apt，yum，brew等）就可以安装。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义源路径、目标路径、服务器地址</span></span><br><span class="line">SOURCE_PATH=<span class="string">&#x27;/Users/gugu/blog/public&#x27;</span></span><br><span class="line">DEST_PATH=<span class="string">&#x27;/root/data/docker_data/npm/data/blog&#x27;</span></span><br><span class="line">SERVER_IP=<span class="string">&#x27;173.242.118.113&#x27;</span></span><br><span class="line">SSH_PORT=3451</span><br><span class="line"></span><br><span class="line"><span class="comment"># rsync命令</span></span><br><span class="line">rsync -avz -e <span class="string">&quot;ssh -p <span class="variable">$SSH_PORT</span>&quot;</span> --progress <span class="variable">$SOURCE_PATH</span> username@<span class="variable">$SERVER_IP</span>:<span class="variable">$DEST_PATH</span></span><br></pre></td></tr></table></figure><p>这个脚本使用了<code>rsync</code>的以下选项：</p><ul><li><code>-a</code>：这是”归档”模式，可以保留文件的所有属性和权限,同时递归地拷贝文件夹。</li><li><code>-v</code>：这是”详细”模式，表示输出详细信息。</li><li><code>-z</code>：使用gzip压缩数据，可以加快传输速度。</li><li><code>-e</code>：使用指定的传输命令，如ssh，并可以附带上其他选项，如 <code>-p</code>用于指定端口。</li></ul><p>在<code>rsync</code>命令的最后，你需要替换<code>username</code>为你登录目标服务器的用户名。请注意，这个脚本默认认为你已经设置了从你的Mac电脑到服务器的无密码SSH登录。如果尚未设置，你需要在运行脚本时手动输入密码，或者设置SSH密钥无密码登录。</p><p>将上述脚本保存为如<code>sync.sh</code>文件，你可以在终端中通过以下命令来运行它：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash sync.sh</span><br></pre></td></tr></table></figure><p>确保你的脚本有执行权限，如果没有，你可以使用下面的命令来给你的脚本添加执行权限：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x sync.sh</span><br></pre></td></tr></table></figure><p>然后你可以简单地通过以下命令运行脚本：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./sync.sh</span><br></pre></td></tr></table></figure></blockquote><p>注意：这边的<code>sync.sh</code>文件我们可以放在Hexo博客的根目录。</p><p>Windows安装Rsync：</p><blockquote><p>由于Windows自身并没有类似于<code>rsync</code>的命令，你需要下载和安装Cygwin，这是一个在Windows下提供类UNIX环境支持的软件，其中包含了大量GNU和开源工具，包括<code>rsync</code>。</p><p>以下是具体步骤：</p><ol><li><p>下载并安装Cygwin:</p><ul><li>访问Cygwin的官方网站（<a href="https://www.cygwin.com/%EF%BC%89%E5%B9%B6%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E7%A8%8B%E5%BA%8F%E3%80%82">https://www.cygwin.com/）并下载安装程序。</a></li><li>运行下载的<code>setup-x86.exe</code>（32位系统）或<code>setup-x86_64.exe</code>（64位系统）文件。</li><li>在Cygwin Setup的包选择界面，输入<code>rsync</code>在搜索框中，然后在搜索结果中找到对应的<code>rsync</code>包，在SpinBox中将Skip更改为对应的版本，点击下一步完成安装。</li></ul></li><li><p>设置Path环境变量:</p><ul><li>右击电脑上的“此电脑”图标或者”My Computer”，选择“属性”或者”Properties”。</li><li>在弹出界面中，选择“高级系统设置”或者”Advanced System Settings”。</li><li>在“系统属性”或者”System Properties”窗口中，点击“环境变量”或者”Environment Variables”。</li><li>在“环境变量”窗口中，系统变量栏找到Path，点击编辑或者”Edit”，在变量值的末尾添加<code>;C:\cygwin64\bin</code>（64位系统，32位系统则添加<code>;C:\cygwin\bin</code>），点击“确定”或者”OK”。</li></ul></li><li><p>测试<code>rsync</code>是否安装成功:</p><ul><li>打开命令提示符（CMD）或者Powershell，输入<code>rsync --version</code>并按回车。</li><li>如果显示rsync的版本信息，那么rsync已经安装成功。</li></ul></li></ol><p>注意：安装Cygwin时可能需要管理员权限。同时也请注意保证Cygwin软件包的完整性和安全性，以免引入恶意软件。</p></blockquote><p>Windows安装python：</p><blockquote><p>在Windows上安装Python的步骤如下：</p><ol><li><p>访问Python的官方网站： <a href="https://www.python.org/">https://www.python.org/</a></p></li><li><p>鼠标悬停在顶部菜单栏的“Downloads”选项上，它会显示最新版本的Python供你下载。如果你需要安装其他版本的Python，可以点击“Downloads”选项进入下载页面，查看并选择你需要的版本。</p></li><li><p>点击下载Python对应版本的安装器，通常你应该选择64位安装包，除非你知道自己的电脑是32位的。文件应为”python-x.x.x-amd64.exe”格式，其中”x.x.x”代表Python的版本。</p></li><li><p>运行下载的安装程序，选择“Customize installation”，然后点击“Next”。</p></li><li><p>在下一个页面，可以看到一个“Add Python to PATH”选项，记得勾选它。这样可以使得Python在你的系统路径（PATH环境变量）中，这样你就可以在命令提示符（cmd）中直接运行Python。接下来点击”Install Now”开始安装。</p></li><li><p>安装完成后，点击“Close”。</p></li><li><p>验证Python是否正确安装：打开命令提示符（cmd），然后输入<code>python --version</code>，如果正确输出了Python的版本号，那么Python就安装成功了。</p></li></ol><p>注意：介于权限问题，你可能需要管理员权限来完成Python的安装。</p></blockquote><p>我们当然是想着能偷懒就偷懒，不输入密码，于是接着提问：</p><p>Prompt：</p><blockquote><p>如何安装rsync? 我本地是mac电脑，服务器是Debian11，另外如何配置无密码访问？</p></blockquote><p>ChatGPT回答：</p><blockquote><p><strong>在Mac上安装rsync：</strong></p><p>Mac系统通常预装了rsync，你可以通过输入以下命令在终端检查rsync是否已经安装：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rsync --version</span><br></pre></td></tr></table></figure><p>如果rsync已经安装，这个命令会显示其版本号。如果rsync没有安装，你需要通过brew来安装。</p><p>首先，如果你还没有安装brew，你需要安装它。在终端执行以下命令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/bin/bash -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure><p>然后，你可以使用brew安装rsync：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install rsync</span><br></pre></td></tr></table></figure><p><strong>在Debian11服务器上安装rsync：</strong></p><p>在Debian系统上，你可以使用apt来安装rsync。运行以下命令安装rsync：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install rsync</span><br></pre></td></tr></table></figure><p><strong>配置SSH密钥无密码访问：</strong></p><p>无密码登录的设置基于SSH公私钥对的认证。基本的步骤如下：</p><ol><li><p>在本地Mac上生成SSH公私钥对。在终端中输入以下命令：</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen</span><br></pre></td></tr></table></figure><p> 然后按提示操作。默认情况下，公私钥对会被保存在<code>~/.ssh/id_rsa.pub</code>（公钥）和<code>~/.ssh/id_rsa</code>（私钥）。如果需要，你可以在生成时设置一个密码，但是如果你想实现无密码登录，这里就不要设置密码。</p></li><li><p>将生成的公钥复制到服务器上。在终端输入以下命令：</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-copy-id -i ~/.ssh/id_rsa.pub -p 3451 username@173.242.118.113</span><br></pre></td></tr></table></figure><p> 这里需要将<code>username</code>替换为你的用户名。这个命令会将你的公钥添加到服务器上的<code>~/.ssh/authorized_keys</code>文件中，这样服务器就可以识别你的本地机器了。</p></li><li><p>测试无密码登录。你可以尝试ssh登录服务器：</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -p 3451 username@173.242.118.113</span><br></pre></td></tr></table></figure><p> 如果一切顺利，你应该能够不输入密码就登录服务器了。</p></li></ol></blockquote><p>注意：这边的brew的安装，由于网络原因，用ChatGPT提供的方法可能装不上，可以尝试用这个方法：[M1 芯片 Mac 上 Homebrew 安装](M1 芯片 Mac 上 Homebrew 安装)   或者直接看作者的GitHub：<a href="https://github.com/ineo6/homebrew-install">https://github.com/ineo6/homebrew-install</a></p><p>好了，接下来我们到服务器上操作一下。</p><p>其实关于如何在把静态网站部署在NPM上，咕咕也有过分享：<a href="https://blog.laoda.de/archives/host-static-sites-on-npm/">如何在 Nginx Proxy Manager（NPM）上部署静态网站</a></p><p>直接看这篇就行了。</p><p>注意只要新建一个文件夹：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/npm/data/blog</span><br></pre></td></tr></table></figure><p>然后参考上面文章，把<code>/data/demo10.gao.ee</code>改成<code>/data/blog</code>就行。</p><p>好了，可以来测试一下了！</p><p>以后写好文章之后发布，就只需要三步：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line"></span><br><span class="line">hexo g</span><br><span class="line"></span><br><span class="line">./sync.sh</span><br></pre></td></tr></table></figure><p>很舒服了，而且文章什么的都保存在你的本地，也比较有安全感。（当然你可以选择把这个也上传到服务器里，双保险）</p><blockquote><p>以下为咕咕在Hexo Butterfly主题下安装的插件，不过理论上是Hexo博客都可用的。</p><p>注意以下插件均到Hexo根目录安装。</p></blockquote><h3 id="Hexo-Butterfly文章置顶插件"><a href="#Hexo-Butterfly文章置顶插件" class="headerlink" title="Hexo Butterfly文章置顶插件"></a>Hexo Butterfly文章置顶插件</h3><p>卸载<code>hexo-generator-index</code>，然后安装<code>hexo-generator-index-pin-top</code></p><p>注意到Hexo根目录安装。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm uninstall hexo-generator-index --save</span><br><span class="line">npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure><p>使用方法：</p><p>在需要置顶的文章的Front-matter中加上top: true&#x2F;数字即可，数字越大，文章越靠前。</p><p>例如</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cover: </span><br><span class="line">top: 1 <span class="comment">#这里加一个top就行</span></span><br><span class="line">abbrlink: 1d543</span><br><span class="line"><span class="built_in">date</span>: 2023-07-15 10:32:05</span><br></pre></td></tr></table></figure><h3 id="Hexo-Butterfly-sitemap插件"><a href="#Hexo-Butterfly-sitemap插件" class="headerlink" title="Hexo Butterfly sitemap插件"></a>Hexo Butterfly sitemap插件</h3><p>站点地图即 <a href="https://baike.baidu.com/item/sitemap/6241567?fr=aladdin">sitemap</a>， 是一个页面，上面放置了网站上需要搜索引擎抓取的所有页面的链接。站点地图可以告诉搜索引擎网站上有哪些可供抓取的网页，以便搜索引擎可以更加智能地抓取网站。所以我们首先需要生成一个站点地图。</p><p>安装 Google 的站点地图生成插件：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure><p>然后来到 Hexo 根目录配置文件 <code>config.yml</code>，在下面添加：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 站点地图</span></span><br><span class="line"><span class="attr">sitemap:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">sitemap.xml</span></span><br></pre></td></tr></table></figure><p>然后重新推送到服务器，访问如下 URL:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://你的域名/sitemap.xml</span><br></pre></td></tr></table></figure><p>看看网页中有没有出现代码。有的话就成功。</p><p>比如咕咕的sitemap就是：<a href="https://blog.laoda.de/sitemap.xml">https://blog.laoda.de/sitemap.xml</a></p><p>参考：<a href="https://qmike.top/posts/2a1b5a62">https://qmike.top/posts/2a1b5a62</a></p><h3 id="Hexo-Butterfly-RSS插件"><a href="#Hexo-Butterfly-RSS插件" class="headerlink" title="Hexo Butterfly RSS插件"></a>Hexo Butterfly RSS插件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><p>在hexo的主配置文件<code>_config.yml</code>中任意位置添加以下代码：</p><p><img src="https://img.laoda.de/i/2023/07/15/h2lp1b-0.webp" alt="image-20230715103228334"></p><p>比如咕咕的RSS：<a href="https://blog.laoda.de/atom.xml">https://blog.laoda.de/atom.xml</a></p><p>参考：<a href="https://www.cnblogs.com/MoYu-zc/p/14395965.html">https://www.cnblogs.com/MoYu-zc/p/14395965.html</a></p><h3 id="Hexo-Butterfly-本地搜索插件"><a href="#Hexo-Butterfly-本地搜索插件" class="headerlink" title="Hexo Butterfly 本地搜索插件"></a>Hexo Butterfly 本地搜索插件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><p>同时修改主题配置文件：</p><p><img src="https://img.laoda.de/i/2023/07/15/h1cmwc-0.webp" alt="image-20230715103018077"></p><h3 id="持续更新中"><a href="#持续更新中" class="headerlink" title="持续更新中"></a>持续更新中</h3>]]></content>
      
      
      <categories>
          
          <category> 网站搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Butterfly </tag>
            
            <tag> ChatGPT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开箱即用！一款注重隐私、安全可控的IOS自定义通知推送工具——Bark，配合Uptime Kuma搭建网站监控！</title>
      <link href="/archives/docker-compose-install-bark/"/>
      <url>/archives/docker-compose-install-bark/</url>
      
        <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h2><p>免费、简单、安全，开箱即用！</p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p>直接丢几个图：</p><img src="https://img.laoda.de/i/2023/06/26/skv0ci-0.webp" alt="IMG_8A07D54D57DD-1.jpeg" style="zoom:25%;" /><h3 id="2-1-特点"><a href="#2-1-特点" class="headerlink" title="2.1 特点"></a>2.1 特点</h3><ul><li>免费、轻量！简单调用接口即可给自己的iPhone发送推送。</li><li>依赖苹果APNs，及时、稳定、可靠</li><li>不会消耗设备的电量， 基于系统推送服务与推送扩展，APP本体并不需要运行。</li><li>隐私安全，可以通过一些方式确保包含作者本人在内的所有人都无法窃取你的隐私。点击详细了解如何保障<a href="https://bark.day.app/#/privacy">隐私安全</a></li></ul><h2 id="3-相关地址"><a href="#3-相关地址" class="headerlink" title="3. 相关地址"></a>3. 相关地址</h2><p>GitHub官方仓库：<a href="https://github.com/Finb/bark-server">https://github.com/Finb/bark-server</a><br>官方文档地址：<a href="https://bark.day.app/">https://bark.day.app/</a><br>作者博客：<a href="https://day.app/2018/06/bark-server-document/">https://day.app/2018/06/bark-server-document/</a></p><h2 id="4-搭建环境"><a href="#4-搭建环境" class="headerlink" title="4. 搭建环境"></a>4. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器 24 元 &#x2F; 月 VPS 一台</del> 咕咕自己搭建用的是硅谷的<a href="https://loll.cc/tx">腾讯轻量应用服务器</a> ，（这次最好选 非大陆的，而且线路还不错的机器）如果是小白刚开始玩的话，也可以选择 <a href="https://gao.ee/lca">莱卡云 美国CN2 GIA</a> 的服务器，（莱卡云服务器介绍：<a href="https://blog.laoda.de/archives/vps-lcayun/">点击查看</a>）或者<a href="https://blog.laoda.de/vps/">Racknerd</a>的高性价比服务器（注意地区选美国西部城市的）</li><li>系统：Debian 11 （<a href="https://blog.laoda.de/archives/useful-script/">DD 脚本</a> 非必需 DD，用原来的系统也 OK，之后教程都是用 Debian 或者 Ubuntu 搭建～）</li><li>安装好 Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker/">相关脚本</a>）</li><li>【非必需但建议】域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo/">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>【非必需】提前安装好宝塔面板海外版本 aapanel，并安装好 Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程选用】安装好 Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager/">相关教程</a>）</li></ul><blockquote><p>服务器要求：内存建议1G，能安装Docker即可～</p></blockquote><h2 id="5-搭建视频"><a href="#5-搭建视频" class="headerlink" title="5. 搭建视频"></a>5. 搭建视频</h2><h3 id="5-1-YouTube"><a href="#5-1-YouTube" class="headerlink" title="5.1 YouTube"></a>5.1 YouTube</h3><p>视频地址：<a href="https://youtu.be/Pfrla3su_Js">https://youtu.be/Pfrla3su_Js</a></p><h3 id="5-2-哔哩哔哩"><a href="#5-2-哔哩哔哩" class="headerlink" title="5.2 哔哩哔哩"></a>5.2 哔哩哔哩</h3><p>哔哩哔哩：<a href="https://www.bilibili.com/video/BV1qP411e7Qm/">https://www.bilibili.com/video/BV1qP411e7Qm/</a></p><h2 id="6-搭建方式"><a href="#6-搭建方式" class="headerlink" title="6. 搭建方式"></a>6. 搭建方式</h2><p>如果你不是用的腾讯云的轻量应用服务器，可以直接跳到 6.1 部分。</p><h3 id="安装系统（腾讯云轻量应用服务器）"><a href="#安装系统（腾讯云轻量应用服务器）" class="headerlink" title="安装系统（腾讯云轻量应用服务器）"></a>安装系统（腾讯云轻量应用服务器）</h3><img src="https://img.laoda.de/i/2022/08/16/zlyhcz-2.webp" alt="e59713fba8726d3cb55ae11bca83fe3c.png" style="zoom:33%;" /><p>腾讯云轻量服务器最大的特点就是 “轻量”，相比 CVM，更适合小白上手，这边我们之间选择 Docker 基础镜像，就可以省去后面安装 Docker 的步骤 <del>（如果你非要用国内的服务器，这边装的 Docker 镜像还会帮你配置好国内镜像源，让你加速访问 docker 镜像资源）</del> 不建议用国内的 。</p><h3 id="登陆（腾讯云轻量应用服务器）"><a href="#登陆（腾讯云轻量应用服务器）" class="headerlink" title="登陆（腾讯云轻量应用服务器）"></a>登陆（腾讯云轻量应用服务器）</h3><img src="https://img.laoda.de/i/2022/08/16/zlzlj7-2.webp" alt="2722040ee311eb4a9ebf2a4945bf38f4.png" style="zoom:25%;" /><img src="https://img.laoda.de/i/2022/08/16/zm0gv8-2.webp" alt="c0b5d360053746c4095d592967ee401f.png" style="zoom:25%;" /><img src="https://img.laoda.de/i/2022/08/16/zm1vqw-2.webp" alt="e0ba858f021b846ad0abc27acf5008c2.png" style="zoom:25%;" /><h3 id="6-1-安装-Docker-与-Nginx-Proxy-Manager"><a href="#6-1-安装-Docker-与-Nginx-Proxy-Manager" class="headerlink" title="6.1 安装 Docker 与 Nginx Proxy Manager"></a>6.1 安装 Docker 与 Nginx Proxy Manager</h3><p>可以直接参考这篇内容：</p><p><a href="https://iwanlab.com/nginx-proxy-manager/">https://iwanlab.com/nginx-proxy-manager/</a></p><h3 id="6-2-创建安装目录"><a href="#6-2-创建安装目录" class="headerlink" title="6.2 创建安装目录"></a>6.2 创建安装目录</h3><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/bark</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/bark</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure><p>英文输入法下，按 <code>i</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.8&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">bark-server:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">finab/bark-server</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">bark-server</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data:/data</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8090:8080&quot;</span>  <span class="comment"># 左边的8090可以自行修改成服务器上没有使用的端口</span></span><br></pre></td></tr></table></figure><p>修改好之后，注意切换成英文输入法，然后按一下 <code>esc</code>，然后 <code>:wq</code> 保存退出。</p><h3 id="6-3-打开服务器防火墙（非必需）并访问网页"><a href="#6-3-打开服务器防火墙（非必需）并访问网页" class="headerlink" title="6.3 打开服务器防火墙（非必需）并访问网页"></a>6.3 打开服务器防火墙（非必需）并访问网页</h3><p>打开防火墙的端口 <code>8090</code></p><p>举例，腾讯云打开方法如下（部分服务商没有自带的面板防火墙，就不用这步操作了）：</p><img src="https://img.laoda.de/i/2022/06/30/zlio5h-2.webp" alt="image-20220630215240864" style="zoom: 25%;" /><img src="https://img.laoda.de/i/2022/06/30/10h3dqt-2.webp" alt="image-20220630220546335" style="zoom: 25%;" /><p>图中示例填的是 <code>5230</code>，备注填的是 <code>memos</code>，这边我们填 <code>8090</code>，示例填 <code>bark</code> ，确定即可（如果你在 docker-compose 文件里换了 <code>9009</code>，这边就需要填 <code>9009</code>，以此类推）</p><img src="https://img.laoda.de/i/2022/08/19/o4byqz-2.webp" alt="image-20220819145844555" style="zoom: 25%;" /><p>查看端口是否被占用（以 <code>8090</code> 为例），输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:8090  <span class="comment">#查看 8090 端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果啥也没出现，表示端口未被占用，我们可以继续下面的操作了～</p><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装 lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用（被占用了就修改一下端口，比如改成 <code>8081</code>，注意 docker 命令行里和防火墙都要改）</p><p>最后：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/bark    <span class="comment"># 来到 dockercompose 文件所在的文件夹下</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>理论上我们就可以输入 <code>http://ip:8090/ping</code> 访问了。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器 IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的 IP。</p><p>2、遇到访问不了的情况，请再次检查在宝塔面板的防火墙和服务商的后台防火墙是否打开对应了端口。</p></blockquote><img src="https://img.laoda.de/i/2023/06/26/slfwwq-0.webp" alt="5c6c9207637033970fd9f0c2c502aaa8.png" style="zoom: 33%;" /><p>出现<code>code:200</code>代表安装成功！</p><p>因为这个涉及到个人消息的，所以非常需要https！会让网页更安全！</p><p> <a href="https://loll.cc/ns">namesilo</a> 上面 xyz 后缀的域名一年就 7 块钱，可以年抛。（冷知识，namesilo上 6位数字的xyz续费永远都是0.99美元 &#x3D; &#x3D;）</p><p>如果想要长期使用，还是建议买 com 后缀的域名，更加正规一些，可以输入 <code>laodade</code> 来获得 1 美元的优惠（不知道现在还有没有）</p><p><a href="https://loll.cc/ns">namesilo</a> 自带隐私保护，咕咕一直在用这家，价格也是这些注册商里面比较低的，关键是他家不像其他家域名注册商，没有七七八八的套路！（就是后台界面有些<del>丑</del> 古老 &#x3D; &#x3D;）</p><p><a href="https://iwanlab.com/namesilo">【域名购买】Namesilo 优惠码和域名解析教程（附带服务器购买推荐和注意事项）</a></p><p>我们接着往下看！</p><h2 id="7-反向代理"><a href="#7-反向代理" class="headerlink" title="7. 反向代理"></a>7. 反向代理</h2><p>我们要用域名而不是IP+端口的方式来访问我们的服务！</p><h3 id="7-1-利用-Nginx-Proxy-Manager"><a href="#7-1-利用-Nginx-Proxy-Manager" class="headerlink" title="7.1 利用 Nginx Proxy Manager"></a>7.1 利用 Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://iwanlab.com/namesilo/">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><img src="https://img.laoda.de/i/2022/10/16/n6t02e-2.webp" alt="image-20221016140213282" style="zoom:33%;" /><p>之后，登陆 Nginx Proxy Manager（不会的看这个：<strong>安装 Nginx Proxy Manager</strong>（<a href="https://iwanlab.com/nginx-proxy-manager/">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称 NPM）会用到 <code>80</code>、<code>443</code> 端口，所以本机不能占用（比如原来就有 Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom: 33%;" /><img src="https://img.laoda.de/i/2023/05/27/lvep5w-0.webp" alt="image-20230527132253249" style="zoom: 33%;" /><blockquote><p>注意填写对应的 <code>域名</code>、<code>IP</code> 和 <code>端口</code>，按文章来的话，应该是 <code>8090</code></p></blockquote><p><strong>IP 填写：</strong></p><p>如果 Nginx Proxy Manager 和 bark 在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的 Docker 容器内部 IP。</p><img src="https://img.laoda.de/i/2022/09/29/pcdnz5-2.webp" style="zoom:50%;" /><p>否则直接填 <code>bark</code> 所在的服务器 IP 就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom: 33%;" /><p>再次打开，勾选这些：</p><img src="https://img.laoda.de/i/2022/10/16/n7nn6e-2.webp" alt="image-20221016140356324" style="zoom:50%;" /><p>然后就可以用域名来安装访问了。</p><h3 id="7-2-利用宝塔面板"><a href="#7-2-利用宝塔面板" class="headerlink" title="7.2 利用宝塔面板"></a>7.2 利用宝塔面板</h3><p>发现还是有不少小伙伴习惯用宝塔面板，这边也贴一个宝塔面板的反代配置：</p><p>直接新建一个站点，不要数据库，不要 php，纯静态即可。</p><p>然后打开下面的配置，修改 Nginx 的配置。</p><img src="https://img.laoda.de/i/2022/08/19/ov4xrt-2.webp" alt="image-20220819150345725" style="zoom: 33%;" /><img src="https://img.laoda.de/i/2022/08/19/owbbkb-2.webp" alt="image-20220819150542867" style="zoom: 33%;" /><p>代码如下：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:8090/;       <span class="comment"># 注意改成你实际使用的端口</span></span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此方法对 90% 的反向代理都能生效，然后就可以用域名来安装访问了。</p><p>有同学可能会问，为什么不直接用宝塔自带的反向代理功能。</p><img src="https://img.laoda.de/i/2022/08/19/oxf800-2.webp" alt="image-20220819150730128" style="zoom: 33%;" /><p>也可以，不过咕咕自己之前遇到过当有多个网站需要反代的时候，在这边设置会报错的情况 &#x3D; &#x3D;</p><p>所以后来就不用了，直接用上面的方法来操作了。</p><h2 id="8-使用教程"><a href="#8-使用教程" class="headerlink" title="8. 使用教程"></a>8. 使用教程</h2><p>参考视频，或者官方文档：<a href="https://bark.day.app/#/tutorial">https://bark.day.app/#/tutorial</a></p><h3 id="iOS"><a href="#iOS" class="headerlink" title="iOS"></a>iOS</h3><p>在 <code>APP Store</code> 里找到 <code>Bark</code></p><p>打开 <code>APP</code>，默认指向了官方服务器 <code>api.day.app</code>，需要点右上角的 <code>+</code> 号来添加我们前面搭建的私有服务器：</p><img src="https://img.laoda.de/i/2023/06/26/sln5b0-0.webp" alt="c4a53736051c675cbff711ffeb5ec91a.png" style="zoom:33%;" /><p>在 <code>APP</code>端填入你的服务器 <code>IP</code>或域名：</p><img src="https://img.laoda.de/i/2023/06/26/sm4ws5-0.webp" alt="4feba2a8cd724a158f94c99a6c74bd59.png" style="zoom: 25%;" /><p>添加成功之后，要 <code>允许</code> 发消息通知：</p><img src="https://img.laoda.de/i/2023/06/26/sm7p7s-0.webp" alt="046502e4cd8a24680cbd22a8cb02b9b1.png" style="zoom:25%;" /><p>点中间的注册设备：</p><img src="https://img.laoda.de/i/2023/06/26/sm99xv-0.webp" alt="7d1ff1a29599ecf097782e79c8e5fdfe.png" style="zoom:25%;" /><p>会显示不同内容的发送格式</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#  推送内容</span><br><span class="line">https://bark.gugu.ovh/Xy4ssdd2pARjLfFY/这里改成你自己的推送内容</span><br><span class="line"></span><br><span class="line"># 推送标题</span><br><span class="line">https://bark.gugu.ovh/Xy4ssdd2pARjLfFY/推送标题/这里改成你自己的推送内容</span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2023/06/26/smb7z9-0.webp" alt="53d945659fd6737f4d92e320f9168274.png" style="zoom:25%;" /><p>其中域名后面的一串字符 <code>Xy4ssdd2pARjLfFY</code> 就是用来标识设备的唯一码，别人知道这个码，然后知道你的这个域名，就可以给你推送消息了，所以注意保管好不要泄漏。</p><p>接下来你就可以用命令行、<code>API</code> 调试工具或者 <code>chrome</code>插件，来向<code>iphone</code> 发送消息</p><h3 id="Chrome"><a href="#Chrome" class="headerlink" title="Chrome"></a>Chrome</h3><p>Chrome插件：</p><img src="https://img.laoda.de/i/2023/06/26/smlz9c-0.webp" alt="1da8b329d0b6944511fa1fee3cb2890b.png" style="zoom:33%;" /><p>安装完成后，点浏览器上的插件图标，会弹出提示</p><p><img src="https://img.laoda.de/i/2023/06/26/smo92x-0.webp" alt="img"></p><p><code>Default Push Content</code> 是指缺省推送的内容，<code>Clipboard</code>是剪贴板中的内容，<code>Current page URL</code> 是当前打开网页的地址</p><p>找到下面的<code>New device push URL</code></p><img src="https://img.laoda.de/i/2023/06/26/sms193-0.webp" alt="img" style="zoom: 67%;" /><p>填入前面获取的地址，<code>https://bark.gugu.ovh/Xy4ssdd2pARjLfFY</code></p><blockquote><p>如果你有多台iPhone，<code>Alias</code> （别名）要填一下，用来区分不同的手机</p></blockquote><img src="https://img.laoda.de/i/2023/06/26/smuj1p-0.webp" alt="02e03b76ec16769b43e87e11f8b989a0.png" style="zoom: 33%;" /><p>在网页上选取内容后，右键找到 <code>Push To Device</code></p><img src="https://img.laoda.de/i/2023/06/26/smwwj4-0.webp" alt="405c404554edc2acd7d08560154265a3.png" style="zoom:33%;" /><p>手机端就会收到发送的消息</p><img src="https://img.laoda.de/i/2023/06/26/sn7970-0.webp" alt="9badcd63aeda2536be39ab6e09ab1e0a.png" style="zoom:25%;" /><h3 id="Uptim-Kuma使用实例"><a href="#Uptim-Kuma使用实例" class="headerlink" title="Uptim Kuma使用实例"></a>Uptim Kuma使用实例</h3><p>安装教程：<a href="https://iwanlab.com/uptimekuma-install/">【好玩的Docker项目】搭建一个专属自己的网站监控——Uptime Kuma</a></p><p>进入设置：</p><img src="https://img.laoda.de/i/2023/06/26/sn97tm-0.webp" alt="ff0682029b207137bf40dc0ad24817a6.png" style="zoom:33%;" /><p>选择Bark：</p><img src="https://img.laoda.de/i/2023/06/26/snb4ae-0.webp" alt="74b5be25747d23f7cf5cff9de1a6b465.png" style="zoom:33%;" /><p>接入点填写：</p><p><code>https://域名/设备ID</code></p><p>Bark群组这边记得填写英文：</p><img src="https://img.laoda.de/i/2023/06/26/sncw7j-0.webp" alt="53f2d32d9db9ab87dbbbb8e209b2071d.png" style="zoom:33%;" /><p>如果你填写了中文，需要把他转成浏览器可以识别的字符：</p><img src="https://img.laoda.de/i/2023/06/26/snf7iu-0.webp" alt="24b0ae4007dba9fed69761602b00cf93.png" style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/06/26/snhfl3-0.webp" alt="8af6535933c9ddfe753529c10952df4d.png" style="zoom:33%;" /><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">%E7%BD%91%E7%AB%99%E7%8A%B6%E6%80%81%E9%80%9A%E7%9F%A5</span><br></pre></td></tr></table></figure><p>否则会遇到<code>Request path contains unescaped characters </code>的错误</p><img src="https://img.laoda.de/i/2023/06/26/snjbyv-0.webp" alt="23c14183a9b7cde5a89a2eb6b9f7a226.png" style="zoom:33%;" /><p>测试成功，iPhone上会收到这样的信息：</p><img src="https://img.laoda.de/i/2023/06/26/snuwzc-0.webp" alt="IMG_11A65204D6F2-1.jpeg" style="zoom:25%;" /><h3 id="8-1-更新-bark"><a href="#8-1-更新-bark" class="headerlink" title="8.1 更新 bark"></a>8.1 更新 bark</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/bark</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/bark /root/data/docker_data/bark.archive  <span class="comment"># 万事先备份，以防万一</span></span><br><span class="line"></span><br><span class="line">docker-compose pull</span><br><span class="line"></span><br><span class="line">docker-compose up -d    <span class="comment"># 请不要使用 docker-compose stop 来停止容器，因为这么做需要额外的时间等待容器停止；docker-compose up -d 直接升级容器时会自动停止并立刻重建新的容器，完全没有必要浪费那些时间。</span></span><br><span class="line"></span><br><span class="line">docker image prune  <span class="comment"># prune 命令用来删除不再使用的 docker 对象。删除所有未被 tag 标记和未被容器使用的镜像</span></span><br></pre></td></tr></table></figure><p>提示：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WARNING! This will remove all dangling images.</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] </span><br></pre></td></tr></table></figure><p>输入 <code>y</code></p><p>利用 Docker 搭建的应用，更新非常容易～</p><h3 id="8-2-卸载-bark"><a href="#8-2-卸载-bark" class="headerlink" title="8.2 卸载 bark"></a>8.2 卸载 bark</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/bark</span><br><span class="line"></span><br><span class="line">docker-compose down</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/bark  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>可以卸载得很干净。</p><h2 id="9-常见问题"><a href="#9-常见问题" class="headerlink" title="9. 常见问题"></a>9. 常见问题</h2><p>参考官方FAQ：<a href="https://bark.day.app/#/faq">https://bark.day.app/#/faq</a></p><h2 id="10-结尾"><a href="#10-结尾" class="headerlink" title="10. 结尾"></a>10. 结尾</h2><p>祝大家用得开心，有问题可以去 GitHub 提 <a href="https://github.com/Finb/bark-server/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，有能力给项目做贡献的同学，也欢迎积极加入到 <a href="https://github.com/Finb/bark-server">项目</a> 中来，贡献自己的一份力量！</p><p>最后，感谢开发人员们的辛苦付出，让我们能用到这么优秀的项目！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>GitHub官方仓库：<a href="https://github.com/Finb/bark-server">https://github.com/Finb/bark-server</a></p><p>官方文档地址：<a href="https://bark.day.app/">https://bark.day.app</a></p><p>作者博客：<a href="https://day.app/2018/06/bark-server-document/">https://day.app/2018/06/bark-server-document/</a></p><p><a href="https://www.v2ex.com/t/467407">https://www.v2ex.com/t/467407</a></p><p><a href="https://day.app/2018/06/bark-server-document/">https://day.app/2018/06/bark-server-document/</a></p><p><a href="https://github.com/Finb/Bark/blob/master/README.md">https://github.com/Finb/Bark/blob/master/README.md</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker部署 </tag>
            
            <tag> DockerCompose </tag>
            
            <tag> Bark </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客换域名+框架啦！</title>
      <link href="/archives/turn-to-wordpress/"/>
      <url>/archives/turn-to-wordpress/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.laoda.de/i/2023/06/19/ilixux-0.webp" alt="image-20230619112451731"></p><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><h3 id="YouTube："><a href="#YouTube：" class="headerlink" title="YouTube："></a>YouTube：</h3><p>视频地址：<a href="https://youtu.be/LM4WmyVtLjY">https://youtu.be/LM4WmyVtLjY</a></p><h3 id="哔哩哔哩"><a href="#哔哩哔哩" class="headerlink" title="哔哩哔哩"></a>哔哩哔哩</h3><p>【高清版本可以点击去吐槽到 B 站观看】：</p><p><joe-bilibili bvid="BV1Mm4y1i7tY"></joe-bilibili></p><p>为了给小伙伴们更好地体验，咕咕斥巨资购买了<a href="https://gao.ee/justnews">justnews</a>主题，博客又换回了<a href="https://iwanlab.com/">WordPress</a>了。</p><p>同时为了照顾大家的习惯，尽可能还原了之前Halo主题的风格。</p><p>Wordpress之前咕咕也和大家有过介绍——<a href="https://iwanlab.com/blog-choosing/">Hexo还是Hugo？Typecho还是WordPress？读完这篇或许你就有答案了！</a>，基本上就是相对Halo比较笨重，自定义程度更高（<del>意味着可以放更多的广告位了</del>），后续会逐步把文章搬过来，以后就在新的博客这边更新内容！</p><p>新的博客地址：<a href="https://iwanlab.com/">https://iwanlab.com/</a></p><p>因为后续考虑到会更新一些加密货币、Web3、数字移民的内容，所以咕咕给网站取名为：“<strong>爱玩实验室</strong>”，<code>iwan</code>（爱玩）+<code>lab</code>（实验室）并采用了主流的<code>com</code>域名后缀。</p><p>之后，旧的博客就不再维护更新啦，以后的内容都放在<a href="https://iwanlab.com/">爱玩实验室</a>这个新网站里</p><p>希望能和大家一直一起折腾捣鼓一些好玩儿的东西。</p><h2 id="几大更新"><a href="#几大更新" class="headerlink" title="几大更新"></a>几大更新</h2><h3 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h3><p>因为咕咕一直用的<a href="https://halo.run/">Halo</a>的<a href="https://github.com/qinhua/halo-theme-joe2.0">Joe</a>这款主题，主题作者可能工作比较忙，暂时还未适配Halo2.0，而Halo1.x 已经停止维护了，Halo1.x有一个普遍的问题就是搜索有时候可能不是很准（不过在Halo2.0以后已经有一个非常强大的搜索系统了），可能有不少小伙伴遇到过部分关键词搜索不到结果的情况，这次换新之后应该会好一些了。</p><h3 id="快讯"><a href="#快讯" class="headerlink" title="快讯"></a>快讯</h3><p>右侧栏目新增了快讯功能，会第一时间更新一些VPS到货或者是即时性比较强的信息。</p><h2 id="待完善"><a href="#待完善" class="headerlink" title="待完善"></a>待完善</h2><p>这个主题有一个缺点就是友情链接不太好整，只能显示在首页底部，之前加友链的小伙伴们比较多，全部显示出来不现实，后续尝试看看能不能搞个专门的页面来显示。</p><p>后续可能会考虑加入论坛功能。</p>]]></content>
      
      
      <categories>
          
          <category> 网站搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爱玩实验室 </tag>
            
            <tag> 博客迁移 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>打开Pandora的魔盒，丝滑地使用ChatGPT！不用API，完全免费，甚至可以搭建在本地！</title>
      <link href="/archives/docker-compose-install-pandora/"/>
      <url>/archives/docker-compose-install-pandora/</url>
      
        <content type="html"><![CDATA[<h3 id="ChatGPT使用时可能会遇到："><a href="#ChatGPT使用时可能会遇到：" class="headerlink" title="ChatGPT使用时可能会遇到："></a>ChatGPT使用时可能会遇到：</h3><h4 id="1-Please-stand-by-while-we-are-checking-your-browser…"><a href="#1-Please-stand-by-while-we-are-checking-your-browser…" class="headerlink" title="1. Please stand by, while we are checking your browser…"></a>1. Please stand by, while we are checking your browser…</h4><p>动不动来一下，有时候还不动或者出人机验证。痛！</p><p><img src="https://img.laoda.de/i/2023/06/05/o2jy8g-0.webp"></p><h4 id="2-Access-denied-Sorry-you-have-been-blocked"><a href="#2-Access-denied-Sorry-you-have-been-blocked" class="headerlink" title="2. Access denied. Sorry, you have been blocked"></a>2. Access denied. Sorry, you have been blocked</h4><p>经典问题，只能到处找可用VPN，费时费力，更费钱。移动端访问更难。痛！</p><p><img src="https://img.laoda.de/i/2023/06/05/o2lqoj-0.webp"></p><h4 id="3-ChatGPT-is-at-capacity-right-now"><a href="#3-ChatGPT-is-at-capacity-right-now" class="headerlink" title="3. ChatGPT is at capacity right now"></a>3. ChatGPT is at capacity right now</h4><p>系统负载高，白嫖用户不给用。痛！</p><p><img src="https://img.laoda.de/i/2023/06/05/o2vnlk-0.webp"></p><h4 id="4-This-content-may-violate-our-content-policy"><a href="#4-This-content-may-violate-our-content-policy" class="headerlink" title="4. This content may violate our content policy."></a>4. This content may violate our content policy.</h4><p>道德审查，多触发几次可能就封号了。痛！！！</p><p><img src="https://img.laoda.de/i/2023/06/05/o2x813-0.webp"></p><h4 id="5-Something-went-wrong"><a href="#5-Something-went-wrong" class="headerlink" title="5. Something went wrong."></a>5. Something went wrong.</h4><p>吃着火锅唱着歌，突然就出故障了。痛！</p><p><img src="https://img.laoda.de/i/2023/06/05/o2y6df-0.webp"></p><h4 id="6-手机和电脑的模型不通用，顾这个就顾不到那个，痛！"><a href="#6-手机和电脑的模型不通用，顾这个就顾不到那个，痛！" class="headerlink" title="6. 手机和电脑的模型不通用，顾这个就顾不到那个，痛！"></a>6. 手机和电脑的模型不通用，顾这个就顾不到那个，痛！</h4><p><img src="https://img.laoda.de/i/2023/06/05/o31y0l-0.webp"></p><h4 id="7-蹦字慢吞吞，卡顿不流畅，不知道的甚至想换电脑。痛！"><a href="#7-蹦字慢吞吞，卡顿不流畅，不知道的甚至想换电脑。痛！" class="headerlink" title="7. 蹦字慢吞吞，卡顿不流畅，不知道的甚至想换电脑。痛！"></a>7. 蹦字慢吞吞，卡顿不流畅，不知道的甚至想换电脑。痛！</h4><h4 id="8-想把-ChatGPT-接到其他系统，结果只能接个差强人意的-gpt-3-5-turbo。痛！"><a href="#8-想把-ChatGPT-接到其他系统，结果只能接个差强人意的-gpt-3-5-turbo。痛！" class="headerlink" title="8. 想把 ChatGPT 接到其他系统，结果只能接个差强人意的 gpt-3.5-turbo。痛！"></a>8. 想把 <code>ChatGPT</code> 接到其他系统，结果只能接个差强人意的 <code>gpt-3.5-turbo</code>。痛！</h4><p>一次看完上面的噩梦，血压上来了，拳头硬了！太痛了！！！以上痛点，<code>Pandora</code> 一次全部解决。</p><p>咕咕在之前有介绍过<a href="https://blog.laoda.de/archives/docker-compose-install-chatgpt-next-web">【好玩儿的Docker项目】任何地方无障碍快速访问！ChatGPT Next Web——一键免费部署你的私人 ChatGPT 网页应用</a>，这个是采用调用OpenAI的API的方式来实现的无需富强使用ChatGPT的方法。（付费，需要绑定支付方式）</p><p>不过，小伙伴们如果认真对比，就会发现，同样的问题，你通过ChatGPT Next Web问和通过ChatGPT官网提问，ChatGPT Next Web似乎回答的要“笨”一些。</p><p>具体咕咕在这篇文章中也有过提及：<a href="https://blog.laoda.de/archives/chatgpt-and-openai">大白话！简单解释ChatGPT和OpenAI还有API KEYS</a> 有兴趣的可以看一下。</p><p>今天我们就是来解决这个“笨”的问题的。</p><p>我们今天直接来搭建一个和ChatGPT官网99%一样的网站，让你感受一下比直接访问ChatGPT官网还丝滑的体验。（可以完全免费使用）</p><p>PS：本项目还可以搭建在软路由上，局域网内使用！</p><p>本地搭建的话，装好docker，其他的操作步骤和下文一致。</p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p>直接丢几个图：</p><p>CLI版本界面：</p><p><img src="https://img.laoda.de/i/2023/06/05/o3jsxv-0.webp" alt="alt Screenshot5"></p><p>Web版本：</p><p><img src="https://img.laoda.de/i/2023/06/05/o3p1iz-0.webp" alt="alt Screenshot10"></p><p><img src="https://img.laoda.de/i/2023/06/05/sc27ij-0.webp" alt="8427936d974f5a3cc4f6992adb6554c8.png"></p><h2 id="3-相关地址"><a href="#3-相关地址" class="headerlink" title="3. 相关地址"></a>3. 相关地址</h2><p>GitHub官方仓库：<a href="https://github.com/pengzhile/pandora">https://github.com/pengzhile/pandora</a></p><h2 id="4-搭建环境"><a href="#4-搭建环境" class="headerlink" title="4. 搭建环境"></a>4. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器 24 元 &#x2F; 月 VPS 一台</del> 咕咕自己搭建用的是硅谷的<a href="https://loll.cc/tx">腾讯轻量应用服务器</a> ，（这次最好选 非大陆的，而且线路还不错的机器）如果是小白刚开始玩的话，也可以选择 <a href="https://gao.ee/lca">莱卡云 美国CN2 GIA</a> 的服务器，（莱卡云服务器介绍：<a href="https://blog.laoda.de/archives/vps-lcayun">点击查看</a>）或者<a href="https://blog.laoda.de/vps.html">Racknerd</a>的高性价比服务器（注意地区选美国西部城市的）</li><li>系统：Debian 11 （<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD 脚本</a> 非必需 DD，用原来的系统也 OK，之后教程都是用 Debian 或者 Ubuntu 搭建～）</li><li>安装好 Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需但建议】域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>【非必需】提前安装好宝塔面板海外版本 aapanel，并安装好 Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程选用】安装好 Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><blockquote><p>服务器要求：内存建议1G，能安装Docker即可～</p></blockquote><h2 id="5-搭建视频（晚点补一个）"><a href="#5-搭建视频（晚点补一个）" class="headerlink" title="5. 搭建视频（晚点补一个）"></a>5. 搭建视频（晚点补一个）</h2><h3 id="5-1-YouTube："><a href="#5-1-YouTube：" class="headerlink" title="5.1 YouTube："></a>5.1 YouTube：</h3><p>视频地址：</p><h3 id="5-2-哔哩哔哩"><a href="#5-2-哔哩哔哩" class="headerlink" title="5.2 哔哩哔哩"></a>5.2 哔哩哔哩</h3><p>哔哩哔哩【高清版本可以点击去吐槽到 B 站观看】：<joe-bilibili bvid=""></joe-bilibili></p><h2 id="6-搭建方式"><a href="#6-搭建方式" class="headerlink" title="6. 搭建方式"></a>6. 搭建方式</h2><p>如果你不是用的腾讯云的轻量应用服务器，可以直接跳到 6.1 部分。</p><h3 id="安装系统（腾讯云轻量应用服务器）"><a href="#安装系统（腾讯云轻量应用服务器）" class="headerlink" title="安装系统（腾讯云轻量应用服务器）"></a>安装系统（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlyhcz-2.webp" alt="e59713fba8726d3cb55ae11bca83fe3c.png"></p><p>腾讯云轻量服务器最大的特点就是 “轻量”，相比 CVM，更适合小白上手，这边我们之间选择 Docker 基础镜像，就可以省去后面安装 Docker 的步骤 <del>（如果你非要用国内的服务器，这边装的 Docker 镜像还会帮你配置好国内镜像源，让你加速访问 docker 镜像资源）</del> 不要用国内的 。</p><h3 id="登陆（腾讯云轻量应用服务器）"><a href="#登陆（腾讯云轻量应用服务器）" class="headerlink" title="登陆（腾讯云轻量应用服务器）"></a>登陆（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlzlj7-2.webp" alt="2722040ee311eb4a9ebf2a4945bf38f4.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm0gv8-2.webp" alt="c0b5d360053746c4095d592967ee401f.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm1vqw-2.webp" alt="e0ba858f021b846ad0abc27acf5008c2.png"></p><h3 id="6-1-安装-Docker-与-Nginx-Proxy-Manager"><a href="#6-1-安装-Docker-与-Nginx-Proxy-Manager" class="headerlink" title="6.1 安装 Docker 与 Nginx Proxy Manager"></a>6.1 安装 Docker 与 Nginx Proxy Manager</h3><p>可以直接参考这篇内容：</p><p><a href="https://blog.laoda.de/archives/nginxproxymanager">https://blog.laoda.de/archives/nginxproxymanager</a></p><h3 id="6-2-创建安装目录"><a href="#6-2-创建安装目录" class="headerlink" title="6.2 创建安装目录"></a>6.2 创建安装目录</h3><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/pandora</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/pandora</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="获取Access-Token"><a href="#获取Access-Token" class="headerlink" title="获取Access Token"></a>获取Access Token</h2><p>官方登录（有且仅有这一步需要魔法上网），然后访问 <a href="http://chat.openai.com/api/auth/session">这里</a> 拿 <code>Access Token</code></p><p><img src="https://img.laoda.de/i/2023/06/05/sc5kxz-0.webp" alt="0acf608e58c86a0a8624191320e75f5b.png"></p><p>这边我们不直接粘贴到yaml文件里，先保存起来，后续登录的时候我们再粘贴。</p><p>Access Token 有效期 <del>14</del> 30 天，期间访问不需要梯子。这意味着你在手机上也可随意使用。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure><p>英文输入法下，按 <code>i</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"> </span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">app:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">pengzhile/pandora</span> <span class="comment"># 不带tga的话，总是使用 latest ,更新时重新 pull 该 tag 镜像即可</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8090</span><span class="string">:8090</span>  <span class="comment"># 左边的3002可以自行修改成服务器上没有使用的端口</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">PANDORA_CLOUD:</span> <span class="string">cloud</span></span><br><span class="line">      <span class="comment"># 二选一</span></span><br><span class="line">      <span class="attr">PANDORA_SERVER:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span><span class="string">:8090</span></span><br><span class="line">      <span class="comment">#PANDORA_ACCESS_TOKEN: eyxxxx</span></span><br></pre></td></tr></table></figure><p>这边我们环境变量选择了<code>PANDORA_SERVER:</code>,当然你如果是局域网使用也可以选<code>PANDORA_ACCESS_TOKEN</code></p><p>修改好之后，注意切换成英文输入法，然后按一下 <code>esc</code>，然后 <code>:wq</code> 保存退出。</p><h3 id="6-3-打开服务器防火墙（非必需）并访问网页"><a href="#6-3-打开服务器防火墙（非必需）并访问网页" class="headerlink" title="6.3 打开服务器防火墙（非必需）并访问网页"></a>6.3 打开服务器防火墙（非必需）并访问网页</h3><p>打开防火墙的端口 <code>8090</code></p><p>举例，腾讯云打开方法如下（部分服务商没有自带的面板防火墙，就不用这步操作了）：</p><img src="https://img.laoda.de/i/2022/06/30/zlio5h-2.webp" alt="image-20220630215240864" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/06/30/10h3dqt-2.webp" alt="image-20220630220546335" style="zoom:33%;" /><p>图中示例填的是 <code>5230</code>，备注填的是 <code>memos</code>，这边我们填 <code>8090</code>，示例填 <code>pandora</code> ，确定即可（如果你在 docker-compose 文件里换了 <code>9009</code>，这边就需要填 <code>9009</code>，以此类推）</p><img src="https://img.laoda.de/i/2022/08/19/o4byqz-2.webp" alt="image-20220819145844555" style="zoom:33%;" /><p>查看端口是否被占用（以 <code>8090</code> 为例），输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:8090  <span class="comment">#查看 8090 端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果啥也没出现，表示端口未被占用，我们可以继续下面的操作了～</p><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装 lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用（被占用了就修改一下端口，比如改成 <code>8081</code>，注意 docker 命令行里和防火墙都要改）</p><p>最后：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/pandora    <span class="comment"># 来到 dockercompose 文件所在的文件夹下</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>理论上我们就可以输入 <code>http://ip:8090</code> 访问安装了。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器 IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的 IP。</p><p>2、遇到访问不了的情况，请再次检查在宝塔面板的防火墙和服务商的后台防火墙是否打开对应了端口。</p></blockquote><p>有的小伙伴可能想搭建起来分享给其他人使用，如果后续想要分享给别人，IP + 端口太不优雅了，而且这个涉及到密码的，还是非常需要做https的！会让网页更安全！</p><p> <a href="https://loll.cc/ns">namesilo</a> 上面 xyz 后缀的域名一年就 7 块钱，可以年抛。（冷知识，namesilo上 6位数字的xyz续费永远都是0.99美元 &#x3D; &#x3D;）</p><p>如果想要长期使用，还是建议买 com 后缀的域名，更加正规一些，可以输入 <code>laodade</code> 来获得 1 美元的优惠（不知道现在还有没有）</p><p><a href="https://loll.cc/ns">namesilo</a> 自带隐私保护，咕咕一直在用这家，价格也是这些注册商里面比较低的，关键是他家不像其他家域名注册商，没有七七八八的套路！（就是后台界面有些<del>丑</del> 古老 &#x3D; &#x3D;）</p><p><a href="https://blog.laoda.de/archives/namesilo">【域名购买】Namesilo 优惠码和域名解析教程（附带服务器购买推荐和注意事项）</a></p><p>我们接着往下看！</p><h2 id="7-反向代理"><a href="#7-反向代理" class="headerlink" title="7. 反向代理"></a>7. 反向代理</h2><p>我们要用域名而不是IP+端口的方式来访问我们的服务！</p><h3 id="7-1-利用-Nginx-Proxy-Manager"><a href="#7-1-利用-Nginx-Proxy-Manager" class="headerlink" title="7.1 利用 Nginx Proxy Manager"></a>7.1 利用 Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p><img src="https://img.laoda.de/i/2022/10/16/n6t02e-2.webp" alt="image-20221016140213282"></p><p>之后，登陆 Nginx Proxy Manager（不会的看这个：<strong>安装 Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称 NPM）会用到 <code>80</code>、<code>443</code> 端口，所以本机不能占用（比如原来就有 Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom: 33%;" /><img src="https://img.laoda.de/i/2023/05/27/lvep5w-0.webp" alt="image-20230527132253249" style="zoom:50%;" /><blockquote><p> 注意填写对应的 <code>域名</code>、<code>IP</code> 和 <code>端口</code>，按文章来的话，应该是 <code>8090</code></p></blockquote><p><strong>IP 填写：</strong></p><p>如果 Nginx Proxy Manager 和 pandora 在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的 Docker 容器内部 IP。</p><img src="https://img.laoda.de/i/2022/09/29/pcdnz5-2.webp" style="zoom:50%;" /><p>否则直接填 <code>pandora</code> 所在的服务器 IP 就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom: 33%;" /><p>再次打开，勾选这些：</p><img src="https://img.laoda.de/i/2022/10/16/n7nn6e-2.webp" alt="image-20221016140356324" style="zoom:50%;" /><p>然后就可以用域名来安装访问了。</p><h3 id="7-2-利用宝塔面板"><a href="#7-2-利用宝塔面板" class="headerlink" title="7.2 利用宝塔面板"></a>7.2 利用宝塔面板</h3><p>发现还是有不少小伙伴习惯用宝塔面板，这边也贴一个宝塔面板的反代配置：</p><p>直接新建一个站点，不要数据库，不要 php，纯静态即可。</p><p>然后打开下面的配置，修改 Nginx 的配置。</p><img src="https://img.laoda.de/i/2022/08/19/ov4xrt-2.webp" alt="image-20220819150345725" style="zoom:50%;" /><img src="https://img.laoda.de/i/2022/08/19/owbbkb-2.webp" alt="image-20220819150542867" style="zoom:50%;" /><p>代码如下：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:8090/;       <span class="comment"># 注意改成你实际使用的端口</span></span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此方法对 90% 的反向代理都能生效，然后就可以用域名来安装访问了。</p><p>有同学可能会问，为什么不直接用宝塔自带的反向代理功能。</p><img src="https://img.laoda.de/i/2022/08/19/oxf800-2.webp" alt="image-20220819150730128" style="zoom:50%;" /><p>也可以，不过咕咕自己之前遇到过当有多个网站需要反代的时候，在这边设置会报错的情况 &#x3D; &#x3D; </p><p>所以后来就不用了，直接用上面的方法来操作了。</p><h2 id="8-使用教程"><a href="#8-使用教程" class="headerlink" title="8. 使用教程"></a>8. 使用教程</h2><p>输入IP+端口或者是域名之后，</p><p><img src="https://img.laoda.de/i/2023/06/05/sci877-0.webp" alt="23a3ea1fdfe6197db3158800b4b6df84.png"></p><p>点击<code>Continue with Access Token</code>，然后输入我们前面获取的<code>Access Token</code>就可以开始愉快使用啦！</p><h3 id="8-1-更新-pandora"><a href="#8-1-更新-pandora" class="headerlink" title="8.1 更新 pandora"></a>8.1 更新 pandora</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/pandora</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/pandora /root/data/docker_data/pandora.archive  <span class="comment"># 万事先备份，以防万一</span></span><br><span class="line"></span><br><span class="line">docker-compose pull</span><br><span class="line"></span><br><span class="line">docker-compose up -d    <span class="comment"># 请不要使用 docker-compose stop 来停止容器，因为这么做需要额外的时间等待容器停止；docker-compose up -d 直接升级容器时会自动停止并立刻重建新的容器，完全没有必要浪费那些时间。</span></span><br><span class="line"></span><br><span class="line">docker image prune  <span class="comment"># prune 命令用来删除不再使用的 docker 对象。删除所有未被 tag 标记和未被容器使用的镜像</span></span><br></pre></td></tr></table></figure><p>提示：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WARNING! This will remove all dangling images.</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] </span><br></pre></td></tr></table></figure><p>输入 <code>y</code></p><p>利用 Docker 搭建的应用，更新非常容易～</p><h3 id="8-2-卸载-pandora"><a href="#8-2-卸载-pandora" class="headerlink" title="8.2 卸载 pandora"></a>8.2 卸载 pandora</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/pandora</span><br><span class="line"></span><br><span class="line">docker-compose down</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/pandora  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>可以卸载得很干净。</p><h2 id="9-注意事项"><a href="#9-注意事项" class="headerlink" title="9. 注意事项"></a>9. 注意事项</h2><ul><li>这项目代理部分是闭源的，绑了信用卡或者对隐私要求高的需要考虑一下</li><li>开源项目可以魔改，但请保留原作者信息。确需去除，请联系作者，以免失去技术支持。</li><li>因为之后<code>ChatGPT</code>的API变动，作者可能不会跟进修复。</li></ul><h2 id="10-结尾"><a href="#10-结尾" class="headerlink" title="10. 结尾"></a>10. 结尾</h2><p>祝大家用得开心，有问题可以去 GitHub 提 <a href="https://github.com/pengzhile/pandora/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，有能力给项目做贡献的同学，也欢迎积极加入到 <a href="https://github.com/pengzhile/pandora">项目</a> 中来，贡献自己的一份力量！</p><p>最后，感谢开发人员们的辛苦付出，让我们能用到这么优秀的项目！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>GitHub仓库：<a href="https://github.com/pengzhile/pandora">https://github.com/pengzhile/pandora</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ChatGPT </tag>
            
            <tag> OpenAI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用Docker搭建独角数卡的USDT支付方式，轻松收取加密货币！｜好玩儿的Docker项目</title>
      <link href="/archives/docker-compose-install-epusdt/"/>
      <url>/archives/docker-compose-install-epusdt/</url>
      
        <content type="html"><![CDATA[<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p>邮件smtp的配置忘记讲了，大家可以到谷歌搜索一下应该有很多教程，关键词“smtp配置”</p><h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><p>继上一篇<a href="https://blog.laoda.de/archives/docker-compose-install-dujiaoka">利用Docker轻松搭建独角发卡！人人都可以开一个线上小店｜好玩儿的Docker项目</a>之后，我们今天来为我们的小店搭建一个USDT的付款方式。（支付宝当面付也可以搭建，用门头照，不过之前有个梗——“当面付当面抓”；第三方支付也可以搭建，但是咕咕没什么经验，里面手续费有的抽成很高，故这俩都不再展开，有兴趣的自行谷歌搜索）</p><p>搭建方式首发于<a href="https://www.ioiox.com/archives/167.html">Stille大佬</a></p><p>咕咕这边附自己的实操记录，补充一些细节部分。</p><p><img src="https://img.laoda.de/i/2023/05/29/u81tv0-0.webp" alt="2fdbd82cb67713a57fc4f6f3c46d255d.png"></p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><img src="https://img.laoda.de/i/2023/05/29/u8d1x6-0.webp" alt="3272e7b023b72356ccf3451105e63bc4.png" style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/05/29/u8esvt-0.webp" alt="190d22480fa75637480428044b863aad.png" style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/05/29/u8gacv-0.webp" alt="b73c19b402e63a45f52be419463429ac.png" style="zoom:33%;" /><h2 id="3-相关地址"><a href="#3-相关地址" class="headerlink" title="3. 相关地址"></a>3. 相关地址</h2><p>咕咕的Demo：<a href="https://shop.gugu.ee/">https://shop.gugu.ee</a></p><p>GitHub官方仓库：<a href="https://github.com/assimon/epusdt">https://github.com/assimon/epusdt</a></p><p>此次用到的GitHub仓库：<a href="https://github.com/stilleshan/dockerfiles/tree/main/epusdt">https://github.com/stilleshan/dockerfiles/tree/main/epusdt</a></p><h2 id="4-搭建环境"><a href="#4-搭建环境" class="headerlink" title="4. 搭建环境"></a>4. 搭建环境</h2><ul><li>服务器：咕咕自己搭建用的是<a href="https://blog.laoda.de/vps.html">Racknerd</a>的高性价比服务器（注意地区选美国西部城市的）这个涉及支付和加密货币，不建议用国内的服务器</li><li>系统：Debian 11 （<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD 脚本</a> 非必需 DD，用原来的系统也 OK，之后教程都是用 Debian 或者 Ubuntu 搭建～）</li><li>安装好 Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需但建议】域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>【非必需】提前安装好宝塔面板海外版本 aapanel，并安装好 Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程选用】安装好 Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li><li>一个telegram号<blockquote><p>服务器要求：内存建议1G，能安装Docker即可～</p></blockquote></li></ul><h2 id="5-搭建视频"><a href="#5-搭建视频" class="headerlink" title="5. 搭建视频"></a>5. 搭建视频</h2><h3 id="5-1-YouTube："><a href="#5-1-YouTube：" class="headerlink" title="5.1 YouTube："></a>5.1 YouTube：</h3><p>视频地址：<a href="https://youtu.be/QeKk5O-B2DQ">https://youtu.be/QeKk5O-B2DQ</a></p><h2 id="6-搭建方式"><a href="#6-搭建方式" class="headerlink" title="6. 搭建方式"></a>6. 搭建方式</h2><h3 id="6-1-安装-Docker-与-Nginx-Proxy-Manager"><a href="#6-1-安装-Docker-与-Nginx-Proxy-Manager" class="headerlink" title="6.1 安装 Docker 与 Nginx Proxy Manager"></a>6.1 安装 Docker 与 Nginx Proxy Manager</h3><p>可以直接参考这篇内容：</p><p><a href="https://blog.laoda.de/archives/nginxproxymanager">https://blog.laoda.de/archives/nginxproxymanager</a></p><h3 id="6-2-新建telegram机器人并获取token"><a href="#6-2-新建telegram机器人并获取token" class="headerlink" title="6.2 新建telegram机器人并获取token"></a>6.2 新建telegram机器人并获取token</h3><img src="https://img.laoda.de/i/2023/05/29/u8nsrh-0.webp" alt="d724b2a0ee43b9093a9cc1f6e20793f4.png" style="zoom:33%;" /><p>搜索<code>BotFather</code> 注意有很多假冒的，别弄错了</p><img src="https://img.laoda.de/i/2023/05/29/u8yirv-0.webp" alt="18cf40c8db0a5715a4629d08e7cfb909.png" style="zoom:33%;" /><p><code>/newbot</code> 一步一步按照提示创建即可</p><img src="https://img.laoda.de/i/2023/05/29/u9mces-0.webp" alt="826c0c730672266a6780c31d978b048f.png" style="zoom:33%;" /><p>创建成功之后，这边就会获得一个API的token，类似：<code>6247111111:Asdajkdaksdhkajshi6aUa6pXH4Rxc</code></p><h3 id="6-3-获取telegram-id"><a href="#6-3-获取telegram-id" class="headerlink" title="6.3 获取telegram id"></a>6.3 获取telegram id</h3><p>搜索：<code>https://t.me/getmyid_bot</code></p><img src="https://img.laoda.de/i/2023/05/29/u9o4d3-0.webp" alt="979c7ad1a8834b4607d8a85147acb4f0.png" style="zoom:33%;" /><p>得到你的user ID，类似：<code>980888097</code></p><h3 id="6-4-创建安装目录"><a href="#6-4-创建安装目录" class="headerlink" title="6.4 创建安装目录"></a>6.4 创建安装目录</h3><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/epusdt</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/epusdt</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这边我们直接用 docker 的方式安装。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure><p>英文输入法下，按 <code>i</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">db:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mariadb:focal</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_ROOT_PASSWORD=changeyourpassword</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_DATABASE=epusdt</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_USER=epusdt</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_PASSWORD=changeyourpassword</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./mysql:/var/lib/mysql</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis:alpine</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./redis:/data</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">epusdt:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">stilleshan/epusdt</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./epusdt.conf:/app/.env</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8000</span><span class="string">:8000</span></span><br></pre></td></tr></table></figure><ul><li>修改<code>MYSQL_ROOT_PASSWORD</code>数据库<code>root</code>密码</li><li>修改<code>MYSQL_PASSWORD</code>数据库用户密码</li><li>用户名和数据库名不用修改</li><li>如服务器<code>8000</code>端口可能被占用,需修改epusdt映射端口,例如<code>58000:8000</code></li></ul><p>修改好之后，注意切换成英文输入法，然后按一下 <code>esc</code>，然后 <code>:wq</code> 保存退出。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim epusdt.conf</span><br></pre></td></tr></table></figure><p>输入：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">app_name=epusdt</span><br><span class="line">#下面配置你的域名，收银台会需要</span><br><span class="line">app_uri=https://你的域名</span><br><span class="line">#是否开启debug，默认false</span><br><span class="line">app_debug=false</span><br><span class="line">#http服务监听端口</span><br><span class="line">http_listen=:8000</span><br><span class="line"></span><br><span class="line">#静态资源文件目录</span><br><span class="line">static_path=/static</span><br><span class="line">#缓存路径</span><br><span class="line">runtime_root_path=/runtime</span><br><span class="line"></span><br><span class="line">#日志配置</span><br><span class="line">log_save_path=/logs</span><br><span class="line">log_max_size=32</span><br><span class="line">log_max_age=7</span><br><span class="line">max_backups=3</span><br><span class="line"></span><br><span class="line"># mysql配置</span><br><span class="line">mysql_host=db</span><br><span class="line">mysql_port=3306</span><br><span class="line">mysql_user=epusdt</span><br><span class="line">mysql_passwd=changeyourpassword</span><br><span class="line"># 请修改 epusdt 数据库密码</span><br><span class="line">mysql_database=epusdt</span><br><span class="line">mysql_table_prefix=</span><br><span class="line">mysql_max_idle_conns=10</span><br><span class="line">mysql_max_open_conns=100</span><br><span class="line">mysql_max_life_time=6</span><br><span class="line"></span><br><span class="line"># redis配置</span><br><span class="line">redis_host=redis</span><br><span class="line">redis_port=6379</span><br><span class="line">redis_passwd=</span><br><span class="line">redis_db=5</span><br><span class="line">redis_pool_size=5</span><br><span class="line">redis_max_retries=3</span><br><span class="line">redis_idle_timeout=1000</span><br><span class="line"></span><br><span class="line"># 消息队列配置</span><br><span class="line">queue_concurrency=10</span><br><span class="line">queue_level_critical=6</span><br><span class="line">queue_level_default=3</span><br><span class="line">queue_level_low=1</span><br><span class="line"></span><br><span class="line">#机器人Apitoken</span><br><span class="line">tg_bot_token=你的tg机器人token</span><br><span class="line">#telegram代理url(大陆地区服务器可使用一台国外服务器做反代tg的url)，如果运行的本来就是境外服务器，则无需填写</span><br><span class="line">tg_proxy=</span><br><span class="line">#管理员userid</span><br><span class="line">tg_manage=你的tgid</span><br><span class="line"></span><br><span class="line">#api接口认证token</span><br><span class="line">api_auth_token=changeyourpassword</span><br><span class="line"></span><br><span class="line">#订单过期时间(单位分钟)</span><br><span class="line">order_expiration_time=10</span><br><span class="line"></span><br><span class="line">#强制汇率(设置此参数后每笔交易将按照此汇率计算，例如:6.4)</span><br><span class="line">forced_usdt_rate=</span><br></pre></td></tr></table></figure><p>注意：</p><ul><li>修改第 3 行<code>app_uri</code>为上文为<code>epusdt</code>准备的独立域名</li><li>修改第 24 行<code>mysql_passwd</code>为上节<code>MYSQL_PASSWORD</code>的<strong>用户密码</strong><code>(注意:非 root 密码)</code></li><li>修改第 55 行<code>api_auth_token=123qweASD</code>创建一个密码用于<code>dujiaoka 支付设置</code>中使用</li><li>注意:因为本项目是独立部署到 docker compose 内,所以第 21,33 行已经修改为<code>db</code>,<code>redis</code>,<code>不能使用 127.0.0.1</code>.</li><li>修改第 48 行<code>tg_bot_token=</code>为上文创建的 Telegram Bot 的<code>Token</code></li><li>修改第 52 行<code>tg_manage=</code>为上文创建的 Telegram Bot 的<code>ID</code></li></ul><p>修改好之后，注意切换成英文输入法，然后按一下 <code>esc</code>，然后 <code>:wq</code> 保存退出。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim epusdt.sql</span><br></pre></td></tr></table></figure><p>输入：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- auto-generated definition</span><br><span class="line">create table orders</span><br><span class="line">(</span><br><span class="line">    id                   int auto_increment</span><br><span class="line">        primary key,</span><br><span class="line">    trade_id             varchar(32)    not null comment &#x27;epusdt订单号&#x27;,</span><br><span class="line">    order_id             varchar(32)    not null comment &#x27;客户交易id&#x27;,</span><br><span class="line">    block_transaction_id varchar(128)   null comment &#x27;区块唯一编号&#x27;,</span><br><span class="line">    actual_amount        decimal(19, 4) not null comment &#x27;订单实际需要支付的金额，保留4位小数&#x27;,</span><br><span class="line">    amount               decimal(19, 4) not null comment &#x27;订单金额，保留4位小数&#x27;,</span><br><span class="line">    token                varchar(50)    not null comment &#x27;所属钱包地址&#x27;,</span><br><span class="line">    status               int default 1  not null comment &#x27;1：等待支付，2：支付成功，3：已过期&#x27;,</span><br><span class="line">    notify_url           varchar(128)   not null comment &#x27;异步回调地址&#x27;,</span><br><span class="line">    redirect_url         varchar(128)   null comment &#x27;同步回调地址&#x27;,</span><br><span class="line">    callback_num         int default 0  null comment &#x27;回调次数&#x27;,</span><br><span class="line">    callback_confirm     int default 2  null comment &#x27;回调是否已确认？ 1是 2否&#x27;,</span><br><span class="line">    created_at           timestamp      null,</span><br><span class="line">    updated_at           timestamp      null,</span><br><span class="line">    deleted_at           timestamp      null,</span><br><span class="line">    constraint orders_order_id_uindex</span><br><span class="line">        unique (order_id),</span><br><span class="line">    constraint orders_trade_id_uindex</span><br><span class="line">        unique (trade_id)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">create index orders_block_transaction_id_index</span><br><span class="line">    on orders (block_transaction_id);</span><br><span class="line"></span><br><span class="line">-- auto-generated definition</span><br><span class="line">create table wallet_address</span><br><span class="line">(</span><br><span class="line">    id         int auto_increment</span><br><span class="line">        primary key,</span><br><span class="line">    token      varchar(50)   not null comment &#x27;钱包token&#x27;,</span><br><span class="line">    status     int default 1 not null comment &#x27;1:启用 2:禁用&#x27;,</span><br><span class="line">    created_at timestamp     null,</span><br><span class="line">    updated_at timestamp     null,</span><br><span class="line">    deleted_at timestamp     null</span><br><span class="line">)</span><br><span class="line">    comment &#x27;钱包表&#x27;;</span><br><span class="line"></span><br><span class="line">create index wallet_address_token_index</span><br><span class="line">    on wallet_address (token);</span><br></pre></td></tr></table></figure><p>不用修改，直接切换成英文输入法，然后按一下 <code>esc</code>，然后 <code>:wq</code> 保存退出。</p><h3 id="6-3-打开服务器防火墙（非必需）并访问网页"><a href="#6-3-打开服务器防火墙（非必需）并访问网页" class="headerlink" title="6.3 打开服务器防火墙（非必需）并访问网页"></a>6.3 打开服务器防火墙（非必需）并访问网页</h3><p>打开防火墙的端口 <code>8090</code></p><p>举例，腾讯云打开方法如下（部分服务商没有自带的面板防火墙，就不用这步操作了）：</p><img src="https://img.laoda.de/i/2022/06/30/zlio5h-2.webp" alt="image-20220630215240864" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/06/30/10h3dqt-2.webp" alt="image-20220630220546335" style="zoom:33%;" /><p>图中示例填的是 <code>5230</code>，备注填的是 <code>memos</code>，这边我们填 <code>8090</code>，示例填 <code>epusdt</code> ，确定即可（如果你在 docker-compose 文件里换了 <code>9009</code>，这边就需要填 <code>9009</code>，以此类推）</p><img src="https://img.laoda.de/i/2022/08/19/o4byqz-2.webp" alt="image-20220819145844555" style="zoom:33%;" /><p>查看端口是否被占用（以 <code>8090</code> 为例），输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:8090  <span class="comment">#查看 8090 端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果啥也没出现，表示端口未被占用，我们可以继续下面的操作了～</p><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装 lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用（被占用了就修改一下端口，比如改成 <code>8081</code>，注意 docker 命令行里和防火墙都要改）</p><p>最后：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/epusdt    <span class="comment"># 来到 dockercompose 文件所在的文件夹下</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><h3 id="6-6-初始化数据库"><a href="#6-6-初始化数据库" class="headerlink" title="6.6 初始化数据库"></a>6.6 初始化数据库</h3><p>将下述命令中的<code>-pCHANGE_YOUR_PASSWORD</code>的密码改为上述设置的新密码,注意需要保留前缀<code>-p</code>,例如上文修改密码<code>MYSQL_PASSWORD=aaabbbccc</code>,此处则为<code>-paaabbbccc</code>.</p><p>如下图执行后无任何显示代表成功,否则将会报错.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -i epusdt-db-1 sh -c <span class="string">&#x27;exec mysql -uepusdt -pCHANGE_YOUR_PASSWORD epusdt&#x27;</span> &lt; epusdt.sql</span><br></pre></td></tr></table></figure><h3 id="6-7-重启服务"><a href="#6-7-重启服务" class="headerlink" title="6.7 重启服务"></a>6.7 重启服务</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose down</span><br><span class="line">docker-compose up -d</span><br><span class="line"><span class="comment"># 或 restart 重启</span></span><br><span class="line">docker-compose restart</span><br></pre></td></tr></table></figure><h3 id="6-8-检查服务"><a href="#6-8-检查服务" class="headerlink" title="6.8 检查服务"></a>6.8 检查服务</h3><p>查看<code>epusdt</code>服务,如下图所示<code>http server started on [::]:8000</code>则表示成功.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker logs -f 你的容器<span class="built_in">id</span></span><br></pre></td></tr></table></figure><p>通过docker ps 可以查看到容器id</p><p><img src="https://img.laoda.de/i/2023/05/29/u9t99y-0.webp" alt="13835bd2f7c08e284127581808a5d544.png"></p><p>咕咕这边就是：<code>usdt_epusdt_1</code></p><p>所以：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker logs -f usdt_epusdt_1</span><br></pre></td></tr></table></figure><p>理论上我们就可以输入 <code>http://ip:8090</code> 访问安装了，但是我们这边先做反代。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器 IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的 IP。</p><p>2、遇到访问不了的情况，请再次检查在宝塔面板的防火墙和服务商的后台防火墙是否打开对应了端口。</p></blockquote><p>这个涉及到钱的，还是非常需要做https的！会让网页更安全！</p><p> <a href="https://loll.cc/ns">namesilo</a> 上面 xyz 后缀的域名一年就 7 块钱，可以年抛。（冷知识，namesilo上 6位数字的xyz续费永远都是0.99美元 &#x3D; &#x3D;）</p><p>如果想要长期使用，还是建议买 com 后缀的域名，更加正规一些，可以输入 <code>laodade</code> 来获得 1 美元的优惠（不知道现在还有没有）</p><p><a href="https://loll.cc/ns">namesilo</a> 自带隐私保护，咕咕一直在用这家，价格也是这些注册商里面比较低的，关键是他家不像其他家域名注册商，没有七七八八的套路！（就是后台界面有些<del>丑</del> 古老 &#x3D; &#x3D;）</p><p><a href="https://blog.laoda.de/archives/namesilo">【域名购买】Namesilo 优惠码和域名解析教程（附带服务器购买推荐和注意事项）</a></p><p>我们接着往下看！</p><h3 id="6-4-更新-epusdt"><a href="#6-4-更新-epusdt" class="headerlink" title="6.4 更新 epusdt"></a>6.4 更新 epusdt</h3><p>插一个更新和卸载的方法，docker搭建通用。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/epusdt</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/epusdt /root/data/docker_data/epusdt.archive  <span class="comment"># 万事先备份，以防万一</span></span><br><span class="line"></span><br><span class="line">docker-compose pull</span><br><span class="line"></span><br><span class="line">docker-compose up -d    <span class="comment"># 请不要使用 docker-compose stop 来停止容器，因为这么做需要额外的时间等待容器停止；docker-compose up -d 直接升级容器时会自动停止并立刻重建新的容器，完全没有必要浪费那些时间。</span></span><br><span class="line"></span><br><span class="line">docker image prune  <span class="comment"># prune 命令用来删除不再使用的 docker 对象。删除所有未被 tag 标记和未被容器使用的镜像</span></span><br></pre></td></tr></table></figure><p>提示：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WARNING! This will remove all dangling images.</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] </span><br></pre></td></tr></table></figure><p>输入 <code>y</code></p><p>利用 Docker 搭建的应用，更新非常容易～</p><h3 id="6-5-卸载-epusdt"><a href="#6-5-卸载-epusdt" class="headerlink" title="6.5 卸载 epusdt"></a>6.5 卸载 epusdt</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/epusdt</span><br><span class="line"></span><br><span class="line">docker-compose down</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/epusdt  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>可以卸载得很干净。</p><h2 id="7-反向代理"><a href="#7-反向代理" class="headerlink" title="7. 反向代理"></a>7. 反向代理</h2><p>我们要用域名而不是IP+端口的方式来访问我们的服务！</p><h3 id="7-1-利用-Nginx-Proxy-Manager"><a href="#7-1-利用-Nginx-Proxy-Manager" class="headerlink" title="7.1 利用 Nginx Proxy Manager"></a>7.1 利用 Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p><img src="https://img.laoda.de/i/2022/10/16/n6t02e-2.webp" alt="image-20221016140213282"></p><p>之后，登陆 Nginx Proxy Manager（不会的看这个：<strong>安装 Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称 NPM）会用到 <code>80</code>、<code>443</code> 端口，所以本机不能占用（比如原来就有 Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom: 33%;" /><img src="https://img.laoda.de/i/2023/05/29/udf30a-0.webp" alt="image-20230529183650557" style="zoom:33%;" /><blockquote><p> 注意填写对应的 <code>域名</code>、<code>IP</code> 和 <code>端口</code>，按文章来的话，应该是 <code>8090</code></p></blockquote><p><strong>IP 填写：</strong></p><p>如果 Nginx Proxy Manager 和 epusdt 在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的 Docker 容器内部 IP。</p><img src="https://img.laoda.de/i/2022/09/29/pcdnz5-2.webp" style="zoom:33%;" /><p>否则直接填 <code>epusdt</code> 所在的服务器 IP 就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom: 33%;" /><p>再次打开，勾选这些：</p><img src="https://img.laoda.de/i/2022/10/16/n7nn6e-2.webp" alt="image-20221016140356324" style="zoom:33%;" /><p>然后就可以用域名来安装访问了。</p><p>访问域名显示<code>hello epusdt, https://github.com/assimon/epusdt</code>表示成功。</p><img src="https://img.laoda.de/i/2023/05/29/udytv6-0.webp" alt="image-20230529183743600" style="zoom:33%;" /><h3 id="7-2-利用宝塔面板"><a href="#7-2-利用宝塔面板" class="headerlink" title="7.2 利用宝塔面板"></a>7.2 利用宝塔面板</h3><p>发现还是有不少小伙伴习惯用宝塔面板，这边也贴一个宝塔面板的反代配置：</p><p>直接新建一个站点，不要数据库，不要 php，纯静态即可。</p><p>然后打开下面的配置，修改 Nginx 的配置。</p><img src="https://img.laoda.de/i/2022/08/19/ov4xrt-2.webp" alt="image-20220819150345725" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/08/19/owbbkb-2.webp" alt="image-20220819150542867" style="zoom:33%;" /><p>代码如下：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:8090/;       <span class="comment"># 注意改成你实际使用的端口</span></span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此方法对 90% 的反向代理都能生效，然后就可以用域名来安装访问了。</p><p>有同学可能会问，为什么不直接用宝塔自带的反向代理功能。</p><img src="https://img.laoda.de/i/2022/08/19/oxf800-2.webp" alt="image-20220819150730128" style="zoom:33%;" /><p>也可以，不过咕咕自己之前遇到过当有多个网站需要反代的时候，在这边设置会报错的情况 &#x3D; &#x3D; </p><p>所以后来就不用了，直接用上面的方法来操作了。</p><h2 id="8-使用教程"><a href="#8-使用教程" class="headerlink" title="8. 使用教程"></a>8. 使用教程</h2><h3 id="8-1-配置支付-dujiaoka"><a href="#8-1-配置支付-dujiaoka" class="headerlink" title="8.1 配置支付 - dujiaoka"></a>8.1 配置支付 - dujiaoka</h3><h4 id="登录-dujiaoka-后台-配置-支付配置"><a href="#登录-dujiaoka-后台-配置-支付配置" class="headerlink" title="登录 dujiaoka 后台 - 配置 - 支付配置"></a>登录 dujiaoka 后台 - 配置 - 支付配置</h4><p>最下面开启<code>epusdt</code>,并点击编辑.<br>注意:dujiaoka 2.0.5 版本及以上才默认支持<code>epusdt</code>,其他版本请自行升级或者手动安装插件.<br><img src="https://img.laoda.de/i/2023/05/29/ufhyvy-0.webp" alt="image-20230529183959619"></p><h4 id="修改参数"><a href="#修改参数" class="headerlink" title="修改参数"></a>修改参数</h4><ul><li>商户ID修改为上述创建的密码<code>changeyourpassword</code></li><li>商户密钥填写API地址<code>https://上文准备的usdt域名.com/api/v1/order/create-transaction</code> 比如咕咕这边就是：<code>https://testusdt.gugu.ovh/api/v1/order/create-transaction</code></li></ul><p><img src="https://img.laoda.de/i/2023/05/29/ug9qoz-0.webp" alt="image-20230529184130322"></p><h4 id="设置-usdt-收款地址"><a href="#设置-usdt-收款地址" class="headerlink" title="设置 usdt 收款地址"></a>设置 usdt 收款地址</h4><p>先点击机器人，</p><img src="https://img.laoda.de/i/2023/05/29/uaafap-0.webp" alt="dbe73336a273ccecfba4cb5bb7820590.png" style="zoom:33%;" /><p>再创建<code>usdt</code>收款地址则完成所有部署。</p><img src="https://img.laoda.de/i/2023/05/29/uaclb6-0.webp" alt="7f6416593f82007ce4ba65aa88be0812.png" style="zoom:33%;" /><p>可以自己测试一下。</p><h2 id="9-结尾"><a href="#9-结尾" class="headerlink" title="9. 结尾"></a>9. 结尾</h2><p>祝大家用得开心，有问题可以去 GitHub 提 <a href="https://github.com/assimon/epusdt/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，有能力给项目做贡献的同学，也欢迎积极加入到 <a href="https://github.com/assimon/epusdt">项目</a> 中来，贡献自己的一份力量！</p><p>最后，感谢开发人员们的辛苦付出，让我们能用到这么优秀的项目！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>GitHub仓库：<a href="https://github.com/assimon/epusdt">https://github.com/assimon/epusdt</a><br>用到的Stille大佬镜像：<a href="https://github.com/stilleshan/dockerfiles/tree/main/epusdt">https://github.com/stilleshan/dockerfiles/tree/main/epusdt</a><br>Stille大佬博客：<a href="https://www.ioiox.com/archives/167.html">https://www.ioiox.com/archives/167.html</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> USDT </tag>
            
            <tag> 独角发卡 </tag>
            
            <tag> 个人商店 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用Docker轻松搭建独角发卡！人人都可以开一个线上小店｜好玩儿的Docker项目</title>
      <link href="/archives/docker-compose-install-dujiaoka/"/>
      <url>/archives/docker-compose-install-dujiaoka/</url>
      
        <content type="html"><![CDATA[<p>今天来和大家分享10分钟搭建一个发卡网站（发卡自动售货系统），人人都可以开一个自己的小店！</p><p><img src="https://img.laoda.de/i/2023/05/27/ltjwxy-0.webp" alt="2fdbd82cb67713a57fc4f6f3c46d255d.png"></p><h2 id="1-独角数卡简单介绍"><a href="#1-独角数卡简单介绍" class="headerlink" title="1. 独角数卡简单介绍"></a>1. 独角数卡简单介绍</h2><h3 id="系统优势"><a href="#系统优势" class="headerlink" title="系统优势"></a>系统优势</h3><ul><li>采用业界流行的laravel框架，安全及稳定性提升。</li><li>支持自定义前端模板功能</li><li>支持国际化多语言包（需自行翻译）</li><li>代码全部开源，所有扩展包采用composer加载，代码所有内容可溯源！</li><li>长期技术更新支持！</li></ul><h3 id="支付接口已集成"><a href="#支付接口已集成" class="headerlink" title="支付接口已集成"></a>支付接口已集成</h3><ul><li>支付宝当面付</li><li>支付宝PC支付</li><li>支付宝手机支付</li><li>payjs微信扫码.</li><li>Paysapi(支付宝&#x2F;微信).</li><li>码支付(QQ&#x2F;支付宝&#x2F;微信)</li><li>微信企业扫码支付</li><li>Paypal支付(默认美元)</li><li>V免签支付</li><li>全网易支付支持(通用彩虹版)</li><li>stripe</li></ul><p>附上GitHub上的免责声明：</p><ul><li>独角数卡程序是免费开源的产品，仅用于学习交流使用！</li><li>不可用于任何违反中华人民共和国(含台湾省)或使用者所在地区法律法规的用途。</li><li>因为作者即本人仅完成代码的开发和开源活动(开源即任何人都可以下载使用)，从未参与用户的任何运营和盈利活动。</li><li>且不知晓用户后续将程序源代码用于何种用途，故用户使用过程中所带来的任何法律责任即由用户自己承担。</li></ul><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p>直接丢几个图：</p><p>官方unicorn模板<br><img src="https://img.laoda.de/i/2023/05/27/ltx2qq-0.webp" alt="b2dadec68644afb18d40ff0ec8c505c2.png"></p><p>luna模板<br><img src="https://img.laoda.de/i/2023/05/27/lu5gfb-0.webp" alt="bcdad678a33552c231b29848b6a7ae74.png"></p><p>hyper模板</p><p><img src="https://img.laoda.de/i/2023/05/27/lu6q2p-0.webp" alt="33f8dd0a6ad28d1c9ab6215f6535fa65.png"></p><p><img src="https://img.laoda.de/i/2023/05/27/lu7vnx-0.webp" alt="52bcda74f3021e1d47f6a4937c03e315.png"></p><p><img src="https://img.laoda.de/i/2023/05/27/lu8v2j-0.webp" alt="947496dab4b8c28453339aa9577ad4c4.png"></p><p><img src="https://img.laoda.de/i/2023/05/27/luinl8-0.webp" alt="6ea2947a4f4321c77d6a5119d229e26e.png"></p><p><img src="https://img.laoda.de/i/2023/05/27/lujxtf-0.webp" alt="15ee4197043787f8f6c26cdf8f96084f.png"></p><h2 id="3-相关地址"><a href="#3-相关地址" class="headerlink" title="3. 相关地址"></a>3. 相关地址</h2><p>咕咕的Demo：<a href="https://shop.gugu.ee/">https://shop.gugu.ee</a><br>GitHub官方仓库：<a href="https://github.com/assimon/dujiaoka">https://github.com/assimon/dujiaoka</a><br>Docker镜像地址：<a href="https://hub.docker.com/r/stilleshan/dujiaoka">https://hub.docker.com/r/stilleshan/dujiaoka</a> （同时支持 X86 和 ARM 架构）来自：<a href="https://www.ioiox.com/archives/159.html">Stille大佬</a></p><h2 id="4-搭建环境"><a href="#4-搭建环境" class="headerlink" title="4. 搭建环境"></a>4. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器 24 元 &#x2F; 月 VPS 一台</del> 咕咕自己搭建用的是硅谷的<a href="https://loll.cc/tx">腾讯轻量应用服务器</a> ，（这次最好选 非大陆的，而且线路还不错的机器）如果是小白刚开始玩的话，也可以选择 <a href="https://gao.ee/lca">莱卡云 美国CN2 GIA</a> 的服务器，（莱卡云服务器介绍：<a href="https://blog.laoda.de/archives/vps-lcayun">点击查看</a>）或者<a href="https://blog.laoda.de/vps.html">Racknerd</a>的高性价比服务器（注意地区选美国西部城市的）</li><li>系统：Debian 11 （<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD 脚本</a> 非必需 DD，用原来的系统也 OK，之后教程都是用 Debian 或者 Ubuntu 搭建～）</li><li>安装好 Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需但建议】域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>【非必需】提前安装好宝塔面板海外版本 aapanel，并安装好 Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程选用】安装好 Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><blockquote><p>服务器要求：内存建议1G，能安装Docker即可～</p></blockquote><h2 id="5-搭建视频"><a href="#5-搭建视频" class="headerlink" title="5. 搭建视频"></a>5. 搭建视频</h2><h3 id="5-1-YouTube："><a href="#5-1-YouTube：" class="headerlink" title="5.1 YouTube："></a>5.1 YouTube：</h3><p>视频地址：<a href="https://youtu.be/V_lCnvu8aDY">https://youtu.be/V_lCnvu8aDY</a></p><h2 id="6-搭建方式"><a href="#6-搭建方式" class="headerlink" title="6. 搭建方式"></a>6. 搭建方式</h2><p>如果你不是用的腾讯云的轻量应用服务器，可以直接跳到 6.1 部分。</p><h3 id="安装系统（腾讯云轻量应用服务器）"><a href="#安装系统（腾讯云轻量应用服务器）" class="headerlink" title="安装系统（腾讯云轻量应用服务器）"></a>安装系统（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlyhcz-2.webp" alt="e59713fba8726d3cb55ae11bca83fe3c.png"></p><p>腾讯云轻量服务器最大的特点就是 “轻量”，相比 CVM，更适合小白上手，这边我们之间选择 Docker 基础镜像，就可以省去后面安装 Docker 的步骤 <del>（如果你非要用国内的服务器，这边装的 Docker 镜像还会帮你配置好国内镜像源，让你加速访问 docker 镜像资源）</del> 不要用国内的 。</p><h3 id="登陆（腾讯云轻量应用服务器）"><a href="#登陆（腾讯云轻量应用服务器）" class="headerlink" title="登陆（腾讯云轻量应用服务器）"></a>登陆（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlzlj7-2.webp" alt="2722040ee311eb4a9ebf2a4945bf38f4.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm0gv8-2.webp" alt="c0b5d360053746c4095d592967ee401f.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm1vqw-2.webp" alt="e0ba858f021b846ad0abc27acf5008c2.png"></p><h3 id="6-1-安装-Docker-与-Nginx-Proxy-Manager"><a href="#6-1-安装-Docker-与-Nginx-Proxy-Manager" class="headerlink" title="6.1 安装 Docker 与 Nginx Proxy Manager"></a>6.1 安装 Docker 与 Nginx Proxy Manager</h3><p>可以直接参考这篇内容：</p><p><a href="https://blog.laoda.de/archives/nginxproxymanager">https://blog.laoda.de/archives/nginxproxymanager</a></p><h3 id="6-2-创建安装目录"><a href="#6-2-创建安装目录" class="headerlink" title="6.2 创建安装目录"></a>6.2 创建安装目录</h3><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/shop</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/shop</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> storage uploads</span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> -R 777 storage uploads</span><br><span class="line"><span class="comment"># 创建数据目录用于挂载</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">touch</span> env.conf</span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> -R 777 env.conf</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这边我们直接用 docker 的方式安装。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure><p>英文输入法下，按 <code>i</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">web:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">stilleshan/dujiaoka</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">        <span class="comment"># - INSTALL=false</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">INSTALL=true</span></span><br><span class="line">        <span class="comment"># - MODIFY=true</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./env.conf:/dujiaoka/.env</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./uploads:/dujiaoka/public/uploads</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./storage:/dujiaoka/storage</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8090</span><span class="string">:80</span>         <span class="comment"># 8090可以改成任意服务器没有使用过的端口，80不要修改</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line"> </span><br><span class="line">  <span class="attr">db:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mariadb:focal</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_ROOT_PASSWORD=changeyourpassword</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_DATABASE=dujiaoka</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_USER=dujiaoka</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_PASSWORD=changeyourpassword</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./mysql:/var/lib/mysql</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis:alpine</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./redis:/data</span></span><br></pre></td></tr></table></figure><p><code>changeyourpassword</code>可以修改成自己的密码。</p><p>修改好之后，注意切换成英文输入法，然后按一下 <code>esc</code>，然后 <code>:wq</code> 保存退出。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim env.conf</span><br></pre></td></tr></table></figure><p>输入：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">APP_NAME=咕咕的小卖部</span><br><span class="line">APP_ENV=local</span><br><span class="line">APP_KEY=base64:rKwRuI6eRpCw/9e2XZKKGj/Yx3iZy5e7+FQ6+aQl8Zg=</span><br><span class="line">APP_DEBUG=true</span><br><span class="line">APP_URL=https://你的域名</span><br><span class="line"></span><br><span class="line">LOG_CHANNEL=stack</span><br><span class="line"></span><br><span class="line"># 数据库配置</span><br><span class="line">DB_CONNECTION=mysql</span><br><span class="line">DB_HOST=db</span><br><span class="line">DB_PORT=3306</span><br><span class="line">DB_DATABASE=dujiaoka</span><br><span class="line">DB_USERNAME=dujiaoka</span><br><span class="line">DB_PASSWORD=changeyourpassword</span><br><span class="line"></span><br><span class="line"># redis配置</span><br><span class="line">REDIS_HOST=redis</span><br><span class="line">REDIS_PASSWORD=</span><br><span class="line">REDIS_PORT=6379</span><br><span class="line"></span><br><span class="line">BROADCAST_DRIVER=log</span><br><span class="line">SESSION_DRIVER=file</span><br><span class="line">SESSION_LIFETIME=120</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 缓存配置</span><br><span class="line"># file为磁盘文件  redis为内存级别</span><br><span class="line"># redis为内存需要安装好redis服务端并配置</span><br><span class="line">CACHE_DRIVER=redis</span><br><span class="line"></span><br><span class="line"># 异步消息队列</span><br><span class="line"># sync为同步  redis为异步</span><br><span class="line"># 使用redis异步需要安装好redis服务端并配置</span><br><span class="line">QUEUE_CONNECTION=redis</span><br><span class="line"></span><br><span class="line"># 后台语言</span><br><span class="line">## zh_CN 简体中文</span><br><span class="line">## zh_TW 繁体中文</span><br><span class="line">## en    英文</span><br><span class="line">DUJIAO_ADMIN_LANGUAGE=zh_CN</span><br><span class="line"></span><br><span class="line"># 后台登录地址</span><br><span class="line">ADMIN_ROUTE_PREFIX=/admin</span><br><span class="line"></span><br><span class="line"># 是否开启https (前端开启了后端也必须为true)</span><br><span class="line"># 后台登录出现0err或者其他登录异常问题，大概率是开启了https而后台没有开启，把下面的false改为true即可</span><br><span class="line">ADMIN_HTTPS=true</span><br></pre></td></tr></table></figure><p>这边可以不用动，因为后续我们安装的时候填的信息会覆盖这里面的内容，修改好之后，注意切换成英文输入法，然后按一下 <code>esc</code>，然后 <code>:wq</code> 保存退出。</p><h3 id="6-3-打开服务器防火墙（非必需）并访问网页"><a href="#6-3-打开服务器防火墙（非必需）并访问网页" class="headerlink" title="6.3 打开服务器防火墙（非必需）并访问网页"></a>6.3 打开服务器防火墙（非必需）并访问网页</h3><p>打开防火墙的端口 <code>8090</code></p><p>举例，腾讯云打开方法如下（部分服务商没有自带的面板防火墙，就不用这步操作了）：</p><img src="https://img.laoda.de/i/2022/06/30/zlio5h-2.webp" alt="image-20220630215240864" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/06/30/10h3dqt-2.webp" alt="image-20220630220546335" style="zoom:33%;" /><p>图中示例填的是 <code>5230</code>，备注填的是 <code>memos</code>，这边我们填 <code>8090</code>，示例填 <code>shop</code> ，确定即可（如果你在 docker-compose 文件里换了 <code>9009</code>，这边就需要填 <code>9009</code>，以此类推）</p><img src="https://img.laoda.de/i/2022/08/19/o4byqz-2.webp" alt="image-20220819145844555" style="zoom:33%;" /><p>查看端口是否被占用（以 <code>8090</code> 为例），输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:8090  <span class="comment">#查看 8090 端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果啥也没出现，表示端口未被占用，我们可以继续下面的操作了～</p><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装 lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用（被占用了就修改一下端口，比如改成 <code>8081</code>，注意 docker 命令行里和防火墙都要改）</p><p>最后：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/shop    <span class="comment"># 来到 dockercompose 文件所在的文件夹下</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>理论上我们就可以输入 <code>http://ip:8090</code> 访问安装了。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器 IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的 IP。</p><p>2、遇到访问不了的情况，请再次检查在宝塔面板的防火墙和服务商的后台防火墙是否打开对应了端口。</p></blockquote><p>有的小伙伴可能想搭建起来分享给其他人使用，如果后续想要分享给别人，IP + 端口太不优雅了，而且这个涉及到密码的，还是非常需要做https的！会让网页更安全！</p><p> <a href="https://loll.cc/ns">namesilo</a> 上面 xyz 后缀的域名一年就 7 块钱，可以年抛。（冷知识，namesilo上 6位数字的xyz续费永远都是0.99美元 &#x3D; &#x3D;）</p><p>如果想要长期使用，还是建议买 com 后缀的域名，更加正规一些，可以输入 <code>laodade</code> 来获得 1 美元的优惠（不知道现在还有没有）</p><p><a href="https://loll.cc/ns">namesilo</a> 自带隐私保护，咕咕一直在用这家，价格也是这些注册商里面比较低的，关键是他家不像其他家域名注册商，没有七七八八的套路！（就是后台界面有些<del>丑</del> 古老 &#x3D; &#x3D;）</p><p><a href="https://blog.laoda.de/archives/namesilo">【域名购买】Namesilo 优惠码和域名解析教程（附带服务器购买推荐和注意事项）</a></p><p>我们接着往下看！</p><h3 id="6-4-更新-shop"><a href="#6-4-更新-shop" class="headerlink" title="6.4 更新 shop"></a>6.4 更新 shop</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/shop</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/shop /root/data/docker_data/shop.archive  <span class="comment"># 万事先备份，以防万一</span></span><br><span class="line"></span><br><span class="line">docker-compose pull</span><br><span class="line"></span><br><span class="line">docker-compose up -d    <span class="comment"># 请不要使用 docker-compose stop 来停止容器，因为这么做需要额外的时间等待容器停止；docker-compose up -d 直接升级容器时会自动停止并立刻重建新的容器，完全没有必要浪费那些时间。</span></span><br><span class="line"></span><br><span class="line">docker image prune  <span class="comment"># prune 命令用来删除不再使用的 docker 对象。删除所有未被 tag 标记和未被容器使用的镜像</span></span><br></pre></td></tr></table></figure><p>提示：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WARNING! This will remove all dangling images.</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] </span><br></pre></td></tr></table></figure><p>输入 <code>y</code></p><p>利用 Docker 搭建的应用，更新非常容易～</p><h3 id="6-5-卸载-shop"><a href="#6-5-卸载-shop" class="headerlink" title="6.5 卸载 shop"></a>6.5 卸载 shop</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/shop</span><br><span class="line"></span><br><span class="line">docker-compose down</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/shop  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>可以卸载得很干净。</p><h2 id="7-反向代理"><a href="#7-反向代理" class="headerlink" title="7. 反向代理"></a>7. 反向代理</h2><p>我们要用域名而不是IP+端口的方式来访问我们的服务！</p><h3 id="7-1-利用-Nginx-Proxy-Manager"><a href="#7-1-利用-Nginx-Proxy-Manager" class="headerlink" title="7.1 利用 Nginx Proxy Manager"></a>7.1 利用 Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p><img src="https://img.laoda.de/i/2022/10/16/n6t02e-2.webp" alt="image-20221016140213282"></p><p>之后，登陆 Nginx Proxy Manager（不会的看这个：<strong>安装 Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称 NPM）会用到 <code>80</code>、<code>443</code> 端口，所以本机不能占用（比如原来就有 Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom: 33%;" /><img src="https://img.laoda.de/i/2023/05/27/lvep5w-0.webp" alt="image-20230527132253249" style="zoom:50%;" /><blockquote><p> 注意填写对应的 <code>域名</code>、<code>IP</code> 和 <code>端口</code>，按文章来的话，应该是 <code>8090</code></p></blockquote><p><strong>IP 填写：</strong></p><p>如果 Nginx Proxy Manager 和 shop 在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的 Docker 容器内部 IP。</p><img src="https://img.laoda.de/i/2022/09/29/pcdnz5-2.webp" style="zoom:50%;" /><p>否则直接填 <code>shop</code> 所在的服务器 IP 就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom: 33%;" /><p>再次打开，勾选这些：</p><img src="https://img.laoda.de/i/2022/10/16/n7nn6e-2.webp" alt="image-20221016140356324" style="zoom:50%;" /><p>然后就可以用域名来安装访问了。</p><h3 id="7-2-利用宝塔面板"><a href="#7-2-利用宝塔面板" class="headerlink" title="7.2 利用宝塔面板"></a>7.2 利用宝塔面板</h3><p>发现还是有不少小伙伴习惯用宝塔面板，这边也贴一个宝塔面板的反代配置：</p><p>直接新建一个站点，不要数据库，不要 php，纯静态即可。</p><p>然后打开下面的配置，修改 Nginx 的配置。</p><img src="https://img.laoda.de/i/2022/08/19/ov4xrt-2.webp" alt="image-20220819150345725" style="zoom:50%;" /><img src="https://img.laoda.de/i/2022/08/19/owbbkb-2.webp" alt="image-20220819150542867" style="zoom:50%;" /><p>代码如下：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:8090/;       <span class="comment"># 注意改成你实际使用的端口</span></span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此方法对 90% 的反向代理都能生效，然后就可以用域名来安装访问了。</p><p>有同学可能会问，为什么不直接用宝塔自带的反向代理功能。</p><img src="https://img.laoda.de/i/2022/08/19/oxf800-2.webp" alt="image-20220819150730128" style="zoom:50%;" /><p>也可以，不过咕咕自己之前遇到过当有多个网站需要反代的时候，在这边设置会报错的情况 &#x3D; &#x3D; </p><p>所以后来就不用了，直接用上面的方法来操作了。</p><h2 id="8-使用教程"><a href="#8-使用教程" class="headerlink" title="8. 使用教程"></a>8. 使用教程</h2><p>成功登录之后，我们填写信息，</p><p>注意数据库地址填<code>db</code>，Redis填<code>redis</code></p><p>填写完成后，点击保存。</p><p>提示默认的账户名和密码都是<code>admin</code></p><p>此时，我们先停止容器。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /root/data/docker_data/shop</span><br><span class="line"></span><br><span class="line">docker-compose down</span><br></pre></td></tr></table></figure><p>接着我们修改一下<code>docker-compose.yml</code>以及<code>env.conf</code>里面的内容。</p><p>分别把<code>- INSTALL=true</code> 改成<code>- INSTALL=false</code></p><p>把<code>APP_DEBUG=true</code>改成<code>APP_DEBUG=false</code></p><p>之后运行：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>然后在域名后面加上<code>/admin</code>，输入默认的账户密码<code>admin</code>就可以正常登录后台了！</p><p>记得改一下用户名和密码！</p><p><img src="https://img.laoda.de/i/2023/05/27/lw0kft-0.webp" alt="52bcda74f3021e1d47f6a4937c03e315.png"></p><h2 id="9-常见问题"><a href="#9-常见问题" class="headerlink" title="9. 常见问题"></a>9. 常见问题</h2><p>常见问题集锦：<a href="https://github.com/assimon/dujiaoka/wiki/problems">https://github.com/assimon/dujiaoka/wiki/problems</a></p><h2 id="10-结尾"><a href="#10-结尾" class="headerlink" title="10. 结尾"></a>10. 结尾</h2><p>祝大家用得开心，有问题可以去 GitHub 提 <a href="https://github.com/assimon/dujiaoka/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，有能力给项目做贡献的同学，也欢迎积极加入到 <a href="https://github.com/assimon/dujiaoka">项目</a> 中来，贡献自己的一份力量！</p><p>最后，感谢开发人员们的辛苦付出，让我们能用到这么优秀的项目！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>GitHub仓库：<a href="https://github.com/assimon/dujiaoka">https://github.com/assimon/dujiaoka</a><br>用到的Stille大佬镜像：<a href="https://hub.docker.com/r/stilleshan/dujiaoka">https://hub.docker.com/r/stilleshan/dujiaoka</a><br>Stille大佬博客：<a href="https://www.ioiox.com/archives/159.html">https://www.ioiox.com/archives/159.html</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 发卡网站 </tag>
            
            <tag> 独角发卡 </tag>
            
            <tag> 个人商店 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>不用虚拟信用卡如何在iOS上开通ChatGPT Plus（附3分钟免费完成美区ID申请）</title>
      <link href="/archives/ios-with-chatgpt/"/>
      <url>/archives/ios-with-chatgpt/</url>
      
        <content type="html"><![CDATA[<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><h3 id="2023-05-02"><a href="#2023-05-02" class="headerlink" title="2023-05-02"></a>2023-05-02</h3><p>有小伙伴反馈支付宝的礼品卡也不是非常稳，联系客服可能会有问题，建议大家还是用官网的礼品卡。</p><hr><p>补充说明，部分小伙伴新注册美区Apple ID会遇到礼品卡充值后在ChatGPT里面付款失败的情况。原因是这个Apple ID是新的，触发了风控。</p><p>这里有小伙伴提出了解决方法，大家可以试试。</p><p>问题：</p><blockquote><p>礼品卡充好了，为什么在chatgpt里付款的时候失败了呀</p></blockquote><p>解决方法：</p><blockquote><p>联系了美国apple客服，聊天解决的，需要客服后台帮你给权限，因为是新用户，只能付费购买APP，而付费订阅不行。</p><p>可以直接在线联系的，不需要什么理由，你就说发现注册完账号之后进行了充值，发现余额只能用来买APP，无法进行订阅付费。全程说英语，有礼貌一些，别着急，会给你处理好的。</p><p>昨天打了400电话问了下，客服说是我的美区id被风控了（可能是注册以来都用礼品卡或者没绑定银行卡的原因，没细问），询问了客服说明情况就给解除了风控（但是因为国内国外客服处理问题等了一天），刚才试了下已经可以开通并续费了。 (来自YouTube和评论区的反馈)</p></blockquote><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><h3 id="YouTube："><a href="#YouTube：" class="headerlink" title="YouTube："></a>YouTube：</h3><p>视频地址：<a href="https://youtu.be/tg75b0gZ5_U">https://youtu.be/tg75b0gZ5_U</a></p><h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><p>今天凌晨，OpenAI 正式在 App Store 推出了 ChatGPT 的 iOS app。</p><img src="https://img.laoda.de/i/2023/05/19/qsikzh-0.webp" alt="IMG_1E0E492F8321-1.jpeg" style="zoom:33%;" /><p>🔗  下载直达：<a href="https://apps.apple.com/app/openai-chatgpt/id6448311069">https://apps.apple.com/app/openai-chatgpt/id6448311069</a></p><p>注意，系统需要更新到iOS 16以上。</p><p>不过目前有且仅有美区Apple ID登录的App store才可以下载。（后面出个教程，5分钟搞定美区ID的免费申请）</p><blockquote><p>PS：<br>1、OpenAI 表示在未来几周内将会在更多国家和地区上线。<br>2、OpenAI 表示， ChatGPT 的 Android 应用很快就会到来。</p></blockquote><p>咕咕体验了一下，程序免费下载，界面简洁无任何广告，且支持跨设备同步历史记录。它还集成了 OpenAI 的开源语音识别系统 Whisper，支持语音输入。</p><p>ChatGPT app 很好地调动了 iPhone 中的 Haptic Engine，可以提供优秀的震动反馈。（在设置里会有 Haptic Feedback 震动反馈的开关）</p><p>🤖OpenAI 官方总结了 ChatGPT iOS 应用的几个功能亮点:</p><ul><li>即时回答: 不需要筛选广告或多个结果就能获得准确的信息。</li><li>量身定制的建议: 寻求烹饪、旅行计划或精心制作的信息方面的指导。</li><li>创作灵感: 产生礼物的想法，提纲演示，或者写一首完美的诗。</li><li>专业工具: 通过想法反馈、笔记总结和技术主题协助提高生产力。</li><li>学习机会: 探索新的语言，现代历史，更多领域可以你根据自己的需求挖掘。</li></ul><p>同时，ChatGPT Plus 用户可以在 iOS 上直接使用 GPT-4 。</p><p>之前苦恼如何开通 Plus 服务的朋友们，现在 iOS App 可以解决这个烦恼了。在 app 里登陆了账号之后，打开个人中心，可以直接选择升级到 ChatGPT Plus，然后通过 App Store 完成订阅支付，价格是依然是 US$19.99&#x2F;月。</p><p>咕咕将介绍两种付费购买的方式，无需海外信用卡！</p><h2 id="2-申请美区-Apple-ID"><a href="#2-申请美区-Apple-ID" class="headerlink" title="2. 申请美区 Apple ID"></a>2. 申请美区 Apple ID</h2><p>全程可以使用手机完成，而且无需开启魔法工具。</p><p>需要用到一个<a href="https://www.meiguodizhi.com/usa-address/oregon">美国地址</a>。</p><p>比如我们用这个：</p><p><img src="https://img.laoda.de/i/2023/05/19/qskxnn-0.webp" alt="c180c84bc77f713f01909c1a8bbb6aeb.png"></p><p>第一步，打开苹果官网，点击”账户”</p><p><img src="https://img.laoda.de/i/2023/05/19/qslxws-0.webp" alt="b9a50a2bc9a211320ca2ef70cccb88a9.png"></p><p>第二步，点击“立即创建您的Apple ID”</p><p>并按提示输入你的信息，唯一注意点是国家选择“美国”</p><p>电话号码用+86的，邮箱用qq邮箱都可以。</p><p><img src="https://img.laoda.de/i/2023/05/19/qsna32-0.webp" alt="6e7c26bbfc38efb4930c45a648d1405e.png"></p><p>注册过程中需要输入邮箱和手机接受到的验证码，完成注册后就可以退出或者直接关闭浏览器了。</p><p>然后我们打开手机上的“app store”</p><p>如果你这边已经登录了账号，可以先退出，然后在这边登录我们刚刚申请的Apple ID以及密码。</p><img src="https://img.laoda.de/i/2023/05/19/qsoz8v-0.webp" alt="4fff4789333463c99d2b7f6b67a98c7f.png" style="zoom:33%;" /><p>不出意外，成功登录上了，然后页面会刷新一下，你会看到此时app里面显示的都是英文了。</p><img src="https://img.laoda.de/i/2023/05/19/qsr3yp-0.webp" alt="b63ab947c46572ab52d168be55c5a8ce.png" style="zoom: 33%;" /><p>然后，随意下载一个app，会弹出来一个验证。</p><p>点击下一步，会让你添加支付方式和账单地址信息。</p><p>支付方式我们不用管。</p><p>直接填地址，用上面地址生成器产生的地址即可。（选填项可以不填）</p><p>填完之后确认，至此，你已经完成了美区Apple ID的申请，可以愉快下载东西了！</p><blockquote><p>一个经验分享：<br>我们有了一个美区和一个国区ID了，建议平时还是用国区的，美区的下载完之后就退掉，切回国区。不然你可能会不经意就用美区的id下载了好多应用，然后在换手机的时候你就会非常蛋疼。</p></blockquote><h2 id="3-充值开通ChatGPT-Plus"><a href="#3-充值开通ChatGPT-Plus" class="headerlink" title="3. 充值开通ChatGPT Plus"></a>3. 充值开通ChatGPT Plus</h2><h3 id="3-1-绑定美区PayPal充值"><a href="#3-1-绑定美区PayPal充值" class="headerlink" title="3.1 绑定美区PayPal充值"></a>3.1 绑定美区PayPal充值</h3><p>这边需要申请一个美区的 PayPal，然后绑定到你的Apple ID上。</p><p>美区的 PayPal是可以绑定国内发行的VISA卡的，不过风控比较厉害，咕咕因为是老号了，使用起来目前还算稳定。</p><p>绑定好之后的好处就是自动扣费，不用每个月去手动续费了。</p><p>如果大家有需求，后续可以考虑出个注册美区PayPal的教程。</p><p>没有美区PayPal的同学，这边建议大家用下面的礼品卡的方式来充值。</p><h3 id="3-2-通过礼品卡充值"><a href="#3-2-通过礼品卡充值" class="headerlink" title="3.2 通过礼品卡充值"></a>3.2 通过礼品卡充值</h3><p>重要提醒：礼品卡淘宝上也有卖，但是容易买到黑卡（简单来说就是通过盗刷信用卡或者不干净的钱撸的卡）如果你用这些卡充值了Apple ID，有极大的概率会导致Apple ID被封！尤其是如果这是你的主力Apple ID的话，风险极大，所以不建议大家在淘宝购买礼品卡。</p><h4 id="Apple官方礼品卡"><a href="#Apple官方礼品卡" class="headerlink" title="Apple官方礼品卡"></a>Apple官方礼品卡</h4><p>官方礼品卡地址：<a href="https://www.apple.com/shop/buy-giftcard/giftcard">https://www.apple.com/shop/buy-giftcard/giftcard</a></p><p><img src="https://img.laoda.de/i/2023/05/19/qssh83-0.webp" alt="3023d402375e1dbe8fd1c54e55967f80.png"></p><h4 id="支付宝礼品卡"><a href="#支付宝礼品卡" class="headerlink" title="支付宝礼品卡"></a>支付宝礼品卡</h4><ul><li>打开支付宝切换到美国的地址“旧金山”</li><li>点击最下面的中间一栏【出境】选项，选择【折扣礼卡】</li><li>拉到最下面一栏选择【更多大牌折扣礼卡】，点进去在搜索栏搜索“app store”，注册邮箱账号密码然后就可以选择美元金额充值</li><li>充值成功就可以点进去查看礼品卡号码，有的甚至秒到账。</li></ul><p><img src="https://img.laoda.de/i/2023/05/19/qstw8c-0.webp" alt="05e05f21a2a4994e1687d2aafa397d46.png"></p><p>Plus用户还可以开家庭共享！</p><img src="https://img.laoda.de/i/2023/05/19/twnep2-0.webp" alt="IMG_7602 2" style="zoom:33%;" /><p>祝大家使用愉快！</p><p>有问题可以在留言区交流！</p><h2 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h2><p><a href="https://blog.laoda.de/archives/chatgpt-plus-depay">【保姆级教程】从零开通ChatGPT Plus</a></p><p><a href="https://blog.laoda.de/archives/chatgpt-plugins-prompts">玩转ChatGPT必备的插件&amp;客户端&amp;Prompts</a></p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ChatGPT </tag>
            
            <tag> ChatGPT Plus </tag>
            
            <tag> OpenAI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RackNerd 洛杉矶DC-02优化线路VPS促销，$14.99/年，可申请IPv6</title>
      <link href="/archives/racknerd-memorial-day-sale-dc02/"/>
      <url>/archives/racknerd-memorial-day-sale-dc02/</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.laoda.de/tags/racknerd/">RackNerd</a>的洛杉矶优化线路VPS开始促销，具体机房为该商家的洛杉矶DC-02优化线路机房，最低配为$14.99&#x2F;年，配置为1核心&#x2F;1GB内存&#x2F;20GB SSD空间&#x2F;3TB流量&#x2F;1Gbps端口&#x2F;KVM虚拟。性价比不错，付款商家支持支付宝，PayPal等。</p><p><img src="https://img.laoda.de/i/2023/05/13/nr0h3n-0.webp" alt="image-20230513143559388"></p><h2 id="1、官网"><a href="#1、官网" class="headerlink" title="1、官网"></a>1、官网</h2><p><strong>官方网站：<a href="https://my.racknerd.com/aff.php?aff=1158">https://www.racknerd.com</a></strong></p><p><strong>Racknerd相关介绍：</strong> <a href="https://blog.laoda.de/archives/vps-racknerd">【VPS选购分享】Racknerd——曾经的“四大金刚”，如今的性价比之王</a></p><p>以下是racknerd目前的促销便宜VPS，可以围观。</p><p><a href="https://blog.laoda.de/vps.html">RackNerd 在售机型推荐</a></p><h2 id="2、洛杉矶优化线路-DC-02"><a href="#2、洛杉矶优化线路-DC-02" class="headerlink" title="2、洛杉矶优化线路-DC-02"></a>2、洛杉矶优化线路-DC-02</h2><p>VPS特征：KVM虚拟，纯SSD raid10阵列，1Gbps带宽，自带一个IPv4，支持rdns，solusvm面板管理。</p><p>Los Angeles DC02 (Test IP: 204.13.154.3)</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1核</td><td>1G</td><td>20G</td><td>3T&#x2F;月</td><td>$14.99&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=770">链接</a></strong></td></tr><tr><td>2核</td><td>2G</td><td>30G</td><td>4T&#x2F;月</td><td>$23.99&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=771">链接</a></strong></td></tr><tr><td>2核</td><td>3G</td><td>38G</td><td>5T&#x2F;月</td><td>$33.99&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=772">链接</a></strong></td></tr><tr><td>3核</td><td>4G</td><td>50G</td><td>6T&#x2F;月</td><td>$49.99&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=773">链接</a></strong></td></tr></tbody></table><h2 id="3、以下为racknerd的往期促销"><a href="#3、以下为racknerd的往期促销" class="headerlink" title="3、以下为racknerd的往期促销"></a>3、以下为racknerd的往期促销</h2><h3 id="复活节促销VPS"><a href="#复活节促销VPS" class="headerlink" title="复活节促销VPS"></a>复活节促销VPS</h3><p>VPS特征：KVM虚拟，纯SSD raid10阵列，1Gbps带宽，自带一个IPv4，支持rdns，solusvm面板管理。可选节点为西雅图&#x2F;圣何塞&#x2F;达拉斯&#x2F;芝加哥&#x2F;新泽西&#x2F;亚特兰大&#x2F;纽约。</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1核</td><td>840M</td><td>10G</td><td>1T&#x2F;月</td><td>$10.78&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=766">链接</a></strong></td></tr><tr><td>1核</td><td>1.2G</td><td>30G</td><td>3T&#x2F;月</td><td>$14.98&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=767">链接</a></strong></td></tr><tr><td>2核</td><td>2G</td><td>45G</td><td>5T&#x2F;月</td><td>$21.98&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=768">链接</a></strong></td></tr><tr><td>3核</td><td>5G</td><td>100G</td><td>10T&#x2F;月</td><td>$58.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=769">链接</a></strong></td></tr></tbody></table><h3 id="2023年元旦-中国春节促销"><a href="#2023年元旦-中国春节促销" class="headerlink" title="2023年元旦+中国春节促销"></a>2023年元旦+中国春节促销</h3><p>VPS特征：KVM虚拟，纯SSD raid10阵列，1Gbps带宽，自带一个IPv4，支持rdns，solusvm面板管理。</p><p>可选节点为洛杉矶DC-02, 芝加哥, 达拉斯, 新泽西, 亚特兰大, 圣何塞, 西雅图, 纽约。</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1核</td><td>512M</td><td>10G</td><td>1.5T&#x2F;月</td><td>$10.18&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=734">链接</a></strong></td></tr><tr><td>1核</td><td>1G</td><td>25G</td><td>4T&#x2F;月</td><td>$12.98&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=735">链接</a></strong></td></tr><tr><td>2核</td><td>2.5G</td><td>45G</td><td>6T&#x2F;月</td><td>$24.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=736">链接</a></strong></td></tr><tr><td>4核</td><td>4G</td><td>70G</td><td>10T&#x2F;月</td><td>$46.68&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=737">链接</a></strong></td></tr></tbody></table><h3 id="其他年付10美元左右VPS"><a href="#其他年付10美元左右VPS" class="headerlink" title="其他年付10美元左右VPS"></a>其他年付10美元左右VPS</h3><p>数据中心可选：洛杉矶、圣何塞、达拉斯、芝加哥、新泽西、亚特兰大、纽约、荷兰(阿姆斯特丹)</p><p>VPS特征：KVM虚拟，纯SSD raid10阵列，1Gbps带宽，自带一个IPv4，支持rdns，solusvm面板管理。</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1核</td><td>768M</td><td>10G</td><td>1T&#x2F;月</td><td>$10.28&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=695">链接</a></strong></td></tr><tr><td>1核</td><td>768M</td><td>10G</td><td>2T&#x2F;月</td><td>$11.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=679">链接</a></strong></td></tr><tr><td>1核</td><td>1G</td><td>16G</td><td>3T&#x2F;月</td><td>$14.98&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=680">链接</a></strong></td></tr><tr><td>1核</td><td>1.2G</td><td>18G</td><td>2T&#x2F;月</td><td>$14.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=670">链接</a></strong></td></tr><tr><td>1核</td><td>1.5G</td><td>30G</td><td>3T&#x2F;月</td><td>$16.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=696">链接</a></strong></td></tr></tbody></table><h3 id="年付60刀-5个ipv4"><a href="#年付60刀-5个ipv4" class="headerlink" title="年付60刀 - 5个ipv4"></a>年付60刀 - 5个ipv4</h3><p>默认配置5个ipv4。</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1核</td><td>1.5G</td><td>20G</td><td>3T&#x2F;月</td><td>$60&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=563">链接</a></strong></td></tr></tbody></table><h3 id="内存1-5G-2-5G套餐"><a href="#内存1-5G-2-5G套餐" class="headerlink" title="内存1.5G-2.5G套餐"></a>内存1.5G-2.5G套餐</h3><p>数据中心可选：洛杉矶、圣何塞、达拉斯、芝加哥、新泽西、亚特兰大、纽约、荷兰(阿姆斯特丹)</p><p>VPS特征：KVM虚拟，纯SSD raid10阵列，1Gbps带宽，自带一个IPv4，支持rdns，solusvm面板管理。</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1核</td><td>1.5G</td><td>30G</td><td>3T&#x2F;月</td><td>$25.95&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=319">链接</a></strong></td></tr><tr><td>2核</td><td>2G</td><td>25G</td><td>4T&#x2F;月</td><td>$20.98&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=681">链接</a></strong></td></tr><tr><td>2核</td><td>2G</td><td>35G</td><td>4T&#x2F;月</td><td>$38.78&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=280">链接</a></strong></td></tr><tr><td>2核</td><td>2.5G</td><td>40G</td><td>3T&#x2F;月</td><td>$25.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=671">链接</a></strong></td></tr><tr><td>2核</td><td>2.5G</td><td>60G</td><td>7T&#x2F;月</td><td>$28.55&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=697">链接</a></strong></td></tr><tr><td>2核</td><td>2.5G</td><td>40G</td><td>5T&#x2F;月</td><td>$29.50&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=211">链接</a></strong></td></tr><tr><td>2核</td><td>2.5G</td><td>50G</td><td>5T&#x2F;月</td><td>$39.95&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=320">链接</a></strong></td></tr></tbody></table><h3 id="内存3G-8G套餐"><a href="#内存3G-8G套餐" class="headerlink" title="内存3G-8G套餐"></a>内存3G-8G套餐</h3><p>数据中心可选：洛杉矶、圣何塞、达拉斯、芝加哥、新泽西、亚特兰大、纽约、荷兰(阿姆斯特丹)</p><p>VPS特征：KVM虚拟，纯SSD raid10阵列，1Gbps带宽，自带一个IPv4，支持rdns，solusvm面板管理。</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>2核</td><td>3G</td><td>35G</td><td>5T&#x2F;月</td><td>$29.99&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=473">链接</a></strong></td></tr><tr><td>3核</td><td>3.5G</td><td>36G</td><td>5T&#x2F;月</td><td>$30.19&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=125">链接</a></strong></td></tr><tr><td>2核</td><td>3.5G</td><td>60G</td><td>6T&#x2F;月</td><td>$35.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=672">链接</a></strong></td></tr><tr><td>2核</td><td>3.5G</td><td>80G</td><td>10T&#x2F;月</td><td>$38.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=698">链接</a></strong></td></tr><tr><td>3核</td><td>4G</td><td>50G</td><td>10T&#x2F;月</td><td>$45.89&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=474">链接</a></strong></td></tr><tr><td>3核</td><td>4.5G</td><td>100G</td><td>12T&#x2F;月</td><td>$48.77&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=699">链接</a></strong></td></tr><tr><td>4核</td><td>8G</td><td>100G</td><td>5T&#x2F;月</td><td>$89.00&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=312">链接</a></strong></td></tr></tbody></table><h3 id="AMD-NVMe系列便宜VPS套餐"><a href="#AMD-NVMe系列便宜VPS套餐" class="headerlink" title="AMD+NVMe系列便宜VPS套餐"></a>AMD+NVMe系列便宜VPS套餐</h3><p>可选纽约，圣何塞，达拉斯，亚特兰大。特征，kvm虚拟，AMD Ryzen 9 3900X、DDR4、NVMe SSD、1Gbps口带宽，默认一个IPv4，不支持Windows。</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>NVMe</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1核</td><td>512M</td><td>6G</td><td>400G&#x2F;月</td><td>$15&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=302">链接</a></strong></td></tr><tr><td>1核</td><td>1G</td><td>20G</td><td>2T&#x2F;月</td><td>$32&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=303">链接</a></strong></td></tr><tr><td>1核</td><td>1.5G</td><td>22G</td><td>3T&#x2F;月</td><td>$35&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=308">链接</a></strong></td></tr><tr><td>2核</td><td>2.5G</td><td>40G</td><td>6T&#x2F;月</td><td>$69&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=309">链接</a></strong></td></tr></tbody></table><h3 id="AMD-NVME系列windows-vps套餐"><a href="#AMD-NVME系列windows-vps套餐" class="headerlink" title="AMD+NVME系列windows vps套餐"></a>AMD+NVME系列windows vps套餐</h3><p>可选机房洛杉矶，达拉斯，纽约，亚特兰大。</p><p>VPS特征：KVM虚拟，AMD Ryzen 9 3900x+ddr4+NVMe SSD阵列+1Gbps带宽，默认一个IPv4，solusvm管理，windows中英文授权版系统（版本为2012和2016系统）。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>NVMe</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>2G</td><td>1核</td><td>35G</td><td>2T&#x2F;月</td><td>$60&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=700">链接</a></strong></td></tr><tr><td>2.5G</td><td>1核</td><td>40G</td><td>3.5T&#x2F;月</td><td>$69&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=435">链接</a></strong></td></tr><tr><td>3G</td><td>2核</td><td>35G</td><td>3T&#x2F;月</td><td>$78.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=346">链接</a></strong></td></tr><tr><td>3.5G</td><td>2核</td><td>60G</td><td>3.5T&#x2F;月</td><td>$99&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=701">链接</a></strong></td></tr><tr><td>4G</td><td>3核</td><td>60G</td><td>6T&#x2F;月</td><td>$115&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=436">链接</a></strong></td></tr><tr><td>8G</td><td>3核</td><td>150G</td><td>10T&#x2F;月</td><td>$219&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=702">链接</a></strong></td></tr><tr><td>12G</td><td>4核</td><td>160G</td><td>12T&#x2F;月</td><td>$289&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=437">链接</a></strong></td></tr></tbody></table><h3 id="稍大硬盘VPS套餐"><a href="#稍大硬盘VPS套餐" class="headerlink" title="稍大硬盘VPS套餐"></a>稍大硬盘VPS套餐</h3><p>可选机房：圣何塞&#x2F;达拉斯&#x2F;芝加哥&#x2F;新泽西&#x2F;亚特兰大&#x2F;纽约&#x2F;荷兰</p><p><strong>特征</strong>：1Gbps带宽，自带一个IPv4，solusvm管理，硬盘SSD cached，洛杉矶MC机房！</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>硬盘</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>2核</td><td>2G</td><td>50G</td><td>4T&#x2F;月</td><td>$36&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=61">链接</a></strong></td></tr><tr><td>3核</td><td>4G</td><td>80G</td><td>5T&#x2F;月</td><td>$59&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=62">链接</a></strong></td></tr><tr><td>4核</td><td>6G</td><td>140G</td><td>6T&#x2F;月</td><td>$95&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=63">链接</a></strong></td></tr><tr><td>4核</td><td>8G</td><td>100G</td><td>5T&#x2F;月</td><td>$89&#x2F;年</td><td><a href="https://my.racknerd.com/aff.php?aff=1158&pid=312"><strong>链接</strong></a></td></tr><tr><td>4核</td><td>8G</td><td>200G</td><td>8T&#x2F;月</td><td>$135&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=64">链接</a></strong></td></tr></tbody></table><h2 id="4、网络测试"><a href="#4、网络测试" class="headerlink" title="4、网络测试"></a>4、网络测试</h2><p><strong>洛杉矶DC02：</strong> 204.13.154.3，<a href="http://lg-lax02.racknerd.com/1000MB.test">http://lg-lax02.racknerd.com/1000MB.test</a></p><p><strong>洛杉矶DC05：</strong> 5.181.135.8，<a href="http://lg-lax05.racknerd.com/1000MB.test">http://lg-lax05.racknerd.com/1000MB.test</a></p><p><strong>圣何塞：</strong> 192.210.207.88，<a href="http://lg-sj.racknerd.com/1000MB.test">http://lg-sj.racknerd.com/1000MB.test</a></p><p><strong>西雅图：</strong> 192.3.253.2，<a href="http://lg-sea.racknerd.com/1000MB.test">http://lg-sea.racknerd.com/1000MB.test</a></p><p><strong>新泽西：</strong> 192.3.165.30，<a href="http://lg-nj.racknerd.com/1000MB.test">http://lg-nj.racknerd.com/1000MB.test</a></p><p><strong>达拉斯</strong>：198.23.249.100，<a href="http://lg-dal.racknerd.com/1000MB.test">http://lg-dal.racknerd.com/1000MB.test</a></p><p><strong>芝加哥：</strong> 198.23.228.15，<a href="http://lg-chi.racknerd.com/1000MB.test">http://lg-chi.racknerd.com/1000MB.test</a></p><p><strong>阿什本</strong>：107.173.166.10，<a href="http://lg-ash.racknerd.com/1000MB.test">http://lg-ash.racknerd.com/1000MB.test</a></p><p><strong>亚特兰大：</strong> 107.173.164.160，<a href="http://lg-atl.racknerd.com/1000MB.test">http://lg-atl.racknerd.com/1000MB.test</a></p><p><strong>荷兰.阿姆斯特丹：</strong> 23.94.101.88，<a href="http://lg-ams.racknerd.com/1000MB.test">http://lg-ams.racknerd.com/1000MB.test</a></p><p><strong>水牛城：</strong> 192.3.81.8，<a href="http://lg-ny.racknerd.com/1000MB.test">http://lg-ny.racknerd.com/1000MB.test</a></p><h2 id="5、推荐阅读"><a href="#5、推荐阅读" class="headerlink" title="5、推荐阅读"></a>5、推荐阅读</h2><p><a href="https://blog.laoda.de/vps.html">RackNerd 在售机型推荐</a></p><p><a href="https://blog.laoda.de/archives/vps-racknerd">【VPS选购分享】Racknerd——曾经的“四大金刚”，如今的性价比之王</a></p><p><a href="https://blog.laoda.de/archives/cheap-vps-racknerd">【国外便宜高性价比的VPS 推荐】——RackNerd</a></p><p><a href="https://blog.laoda.de/archives/racknerd-easter-2023">2023 - RackNerd 活动汇总 整理帖！附最新复活节活动套餐</a></p><p><a href="https://blog.laoda.de/archives/racknerd-vps-issues">RackNerd（RN）双十一优惠&amp;&amp; RN VPS在售促销特价+流量翻倍+迁移+邮箱+push方法整理</a></p><p><a href="https://blog.laoda.de/archives/racknerd-bf-2022-01?cid=5016">#2022黑五# RackNerd：美国便宜VPS低至$10&#x2F;年～</a></p>]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Racknerd </tag>
            
            <tag> 美国VPS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【VPS选购经验分享】可解锁ChatGPT！莱卡云新上线美国三网回程CN2 GIA线路测评</title>
      <link href="/archives/lca-us-cn2-gia/"/>
      <url>/archives/lca-us-cn2-gia/</url>
      
        <content type="html"><![CDATA[<p><a href="https://gao.ee/lca">莱卡云</a>是一家国内正规备案的云服务器商家，隶属于广东莱卡信息技术有限公司，主要从事VPS、虚拟主机等云计算产品业务，目前有香港CN2 GIA，美国CN2 GIA，日本CN2 等线路售卖，之前我们介绍过香港CN2 GIA（相对大陆来说最好的非大陆线路）——<a href="https://blog.laoda.de/archives/vps-lcayun">【VPS选购分享】莱卡云 —— 三网香港CN2 GIA，香港服务器又多了一个选择，可以月付尝鲜～</a>，上一期好玩儿的Docker项目也提到了新上线的美国三网CN2 GIA的线路，这边就来简单测评一下。</p><h2 id="1、机器情况"><a href="#1、机器情况" class="headerlink" title="1、机器情况"></a>1、机器情况</h2><p>咕咕测试的机器基本情况：</p><ul><li>CPU核心：2核</li><li>内存：1G</li><li>硬盘：30G</li><li>带宽：10Mbps</li><li>IP地址：1IPv4</li><li>线路：三网 CN2 GIA</li><li>系统：Debian 11</li></ul><p>购买地址：<a href="https://gao.ee/lca">莱卡云美国三网CN2 GIA服务器</a></p><p><img src="https://img.laoda.de/i/2023/05/08/1142pmz-0.webp" alt="image-20230508224407283"></p><p><img src="https://img.laoda.de/i/2023/05/08/1284ppd-0.webp" alt="image-20230508231135178"></p><p>服务器下行有50M，上传是10M，不适合用来魔法，自带一个快照，非常适合建站或者用来反代尤其是美国的服务器。</p><h2 id="2、IP信息测试"><a href="#2、IP信息测试" class="headerlink" title="2、IP信息测试"></a>2、IP信息测试</h2><p><img src="https://img.laoda.de/i/2023/05/07/j2kwxa-0.webp" alt="image-20230507115317961"></p><h2 id="3、ChatGPT解锁测试"><a href="#3、ChatGPT解锁测试" class="headerlink" title="3、ChatGPT解锁测试"></a>3、ChatGPT解锁测试</h2><p><img src="https://img.laoda.de/i/2023/05/07/ismtrm-0.webp" alt="image-20230507113646273"></p><h2 id="4、三网线路测试"><a href="#4、三网线路测试" class="headerlink" title="4、三网线路测试"></a>4、三网线路测试</h2><h3 id="电信"><a href="#电信" class="headerlink" title="电信"></a>电信</h3><p><img src="https://img.laoda.de/i/2023/05/07/j0b6zs-0.webp" alt="image-20230507114932830"></p><h3 id="联通"><a href="#联通" class="headerlink" title="联通"></a>联通</h3><p><img src="https://img.laoda.de/i/2023/05/07/j0q21d-0.webp"></p><h3 id="移动"><a href="#移动" class="headerlink" title="移动"></a>移动</h3><p><img src="https://img.laoda.de/i/2023/05/07/j0xb1n-0.webp" alt="image-20230507115039401"></p><h3 id="教育网"><a href="#教育网" class="headerlink" title="教育网"></a>教育网</h3><p><img src="https://img.laoda.de/i/2023/05/07/j1bhky-0.webp" alt="image-20230507115104896"></p><h2 id="5、Ping值测试"><a href="#5、Ping值测试" class="headerlink" title="5、Ping值测试"></a>5、Ping值测试</h2><h3 id="国内"><a href="#国内" class="headerlink" title="国内"></a>国内</h3><p><img src="https://img.laoda.de/i/2023/05/07/j1x1al-0.webp" alt="image-20230507115205743"></p><h3 id="海外"><a href="#海外" class="headerlink" title="海外"></a>海外</h3><p><img src="https://img.laoda.de/i/2023/05/07/j2018r-0.webp" alt="image-20230507115218823"></p><h2 id=""><a href="#" class="headerlink" title=""></a></h2><h2 id="6、抖动、丢包情况（晚上10-49分-晚高峰）"><a href="#6、抖动、丢包情况（晚上10-49分-晚高峰）" class="headerlink" title="6、抖动、丢包情况（晚上10:49分 晚高峰）"></a>6、抖动、丢包情况（晚上10:49分 晚高峰）</h2><p><img src="https://img.laoda.de/i/2023/05/08/117urop-0.webp" alt="img_ObWlK3s2"></p><h2 id="7、总结"><a href="#7、总结" class="headerlink" title="7、总结"></a>7、总结</h2><p>总体来说还是不错的，这个机器最看重的就是线路，三网回程CN2 GIA，属于顶级线路（电信双程CN2，联通回程CN2，去程骨干直连，移动回程CN2，去程CMI），晚高峰也不会卡顿，舒服的一匹，CPU一般，磁盘IO也还行，自带一个快照，非常适合建站或者做反向代理服务器。</p><p>不适合富强的用户！</p><h2 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h2><p><a href="https://blog.laoda.de/vps.html">VPS在售推荐</a></p><p><a href="https://blog.laoda.de/archives/vps-choose">VPS服务器选购不完全指南</a></p><p><a href="https://blog.laoda.de/archives/cn2">【VPS各种线路】如何分辨CN2 GIA与CN2 GT？</a></p><p><a href="https://blog.laoda.de/archives/vps-lcayun">【VPS选购分享】莱卡云 —— 三网香港CN2 GIA，香港服务器又多了一个选择，可以月付尝鲜～</a></p><p><a href="https://blog.laoda.de/archives/vps-route">【VPS选购小常识】VPS线路解析不完全指南 什么是CN2 GIA？什么是AS9929、AS4837？什么是CU VIP？什么是移动CMI？如何判断回程路由？</a></p>]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 美国VPS </tag>
            
            <tag> CN2 GIA </tag>
            
            <tag> 香港VPS </tag>
            
            <tag> 莱卡云 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩儿的Docker项目】随时随地访问你的VPS！Sshwifty——一款专为Web设计的SSH和Telnet连接器</title>
      <link href="/archives/docker-compose-install-sshwifty/"/>
      <url>/archives/docker-compose-install-sshwifty/</url>
      
        <content type="html"><![CDATA[<blockquote><p>咕咕咕咕，我也是你的老粉丝了，从b站追到油管，很感谢你的教程，跟着你玩了很多有意思的docker项目。请问可不可以出一期docker webssh的教程呀，就是搭建网页版ssh工具，毕竟网页版更方便，有的电脑没装putty和finalshell。</p></blockquote><p>最近小伙伴@风雪纸鸢 反馈想要搞个方便SSH的工具，其实Mac（或者Linux）是直接可以用系统的终端（terminal）来进行SSH的，但是考虑到看咕咕博客的小伙伴还是以Windows系统居多，</p><p><img src="https://img.laoda.de/i/2023/05/06/r2pb6z-0.webp" alt="image-20230506163711113"></p><p>而且有时候电脑不在身边，可能也会有用手机来登录服务器的需求，咕咕决定还是来水一个教程。</p><blockquote><p>什么是SSH？</p><p>SSH（Secure Shell）是一种网络协议，用于安全地远程登录到计算机系统。它提供了加密的通信和身份验证，因此可以在不安全的网络上安全地传输数据。通过SSH，您可以远程连接到运行SSH服务器的计算机，并使用远程终端访问该计算机的命令行界面。SSH协议支持密码和公钥认证，您可以使用密码和用户名对远程服务器进行身份验证，或者使用公钥认证机制来更加安全地完成身份验证。SSH协议是Linux系统中非常重要的一个组件，尤其是在远程管理服务器时，SSH可以保障管理的安全性和可靠性。</p></blockquote><p>简单来说，就是你可以通过SSH来远程登录到你的Linux服务器。（类似的如果是Windows的话，咕咕推荐用的是 Microsoft Remote Desktop）</p><h2 id="1-Sshwifty简单介绍"><a href="#1-Sshwifty简单介绍" class="headerlink" title="1. Sshwifty简单介绍"></a>1. Sshwifty简单介绍</h2><p><img src="https://img.laoda.de/i/2023/05/02/oxutah-0.webp" alt="image-20230502150802907"></p><p>Sshwifty是一款专为Web设计的SSH和Telnet连接器。它可以部署在您的计算机或服务器上，为任何兼容（标准）的Web浏览器提供SSH和Telnet访问界面。</p><p><img src="https://img.laoda.de/i/2023/05/06/rbqz7o-0.webp" alt="80ecb8fccea8e6d12e28deb45cfc6669.png"></p><p>为什么你需要一个这个玩意儿呢？其实对于咕咕来说，还挺有用的，因为服务器多，有的服务器从国内访问线路很垃圾，如果用的本地的SSH，容易断连，非常影响心情，现在如果用一台对国内线路比较好一点的机器搭建（比如说之前旧款的<a href="https://loll.cc/tx">腾讯云香港轻量</a>或者之前介绍过的<a href="https://gao.ee/lca">莱卡云香港CN2 GIA</a> ），然后一般这个机器到你原来本地线路垃圾的服务器之间的线路会好很多，这样你再SSH登录，就不卡了！（有点<a href="https://blog.laoda.de/archives/nginxproxymanager">反向代理</a>的味道在里面）</p><p><a href="https://gao.ee/lca">莱卡云美国CN2 GIA</a>购买地址：<a href="https://gao.ee/lca">https://gao.ee/lca</a></p><p><img src="https://img.laoda.de/i/2023/05/08/1296g6q-0.webp" alt="image-20230508231311759"></p><p>机房位置在美国zenlayer数据中心，三网CN2优化线路，大陆访问快速响应，支持<a href="https://blog.laoda.de/archives/chatgpt-plus-depay">ChatGPT</a> 。</p><p><img src="https://img.laoda.de/i/2023/05/07/ismtrm-0.webp" alt="image-20230507113646273"></p><p>测评后续放出。</p><p>测评：<a href="https://blog.laoda.de/archives/lca-us-cn2-gia">【VPS选购经验分享】可解锁ChatGPT！莱卡云新上线美国三网回程CN2 GIA线路测评</a></p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p>直接丢几个图：</p><p><img src="https://img.laoda.de/i/2023/05/02/oz1611-0.webp" alt="image-20230502151000790"></p><p>填入你服务器的<code>IP:SSH端口</code>，用户名等信息：</p><p><img src="https://img.laoda.de/i/2023/05/02/ozue9x-0.webp" alt="image-20230502151137584"></p><p>同意！<br><img src="https://img.laoda.de/i/2023/05/02/p09wwt-0.webp" alt="image-20230502151210223"></p><p>输入服务器密码：</p><p><img src="https://img.laoda.de/i/2023/05/02/p0eolj-0.webp" alt="image-20230502151232423"></p><p>成功连接！</p><p><img src="https://img.laoda.de/i/2023/05/02/p0t5m7-0.webp" alt="image-20230502151300152"></p><p>还可以查看延时：</p><p><img src="https://img.laoda.de/i/2023/05/02/p0x966-0.webp" alt="image-20230502151319150"></p><p>查看授信的服务（这些都是在你的本地浏览器端的，并不会泄漏你的服务器信息）：</p><p><img src="https://img.laoda.de/i/2023/05/02/p1jov0-0.webp" alt="image-20230502151423770"></p><p>还可以改变字体大小：</p><p><img src="https://img.laoda.de/i/2023/05/02/p1pc3c-0.webp" alt="image-20230502151449135"></p><p><img src="https://img.laoda.de/i/2023/05/02/p2te03-0.webp" alt="image-20230502151635926"></p><p><img src="https://img.laoda.de/i/2023/05/06/rboc65-0.webp" alt="image-20230502151731968"></p><p>大致就这些了，主要就用一下登录功能其实，更多细节大家可以自行尝试。</p><p>官方演示 Demo: <a href="https://sshwifty-demo.nirui.org/">https://sshwifty-demo.nirui.org</a><br>咕咕的Demo：<a href="https://webssh.gugu.ovh/">https://webssh.gugu.ovh</a><br>Docker镜像地址：<a href="https://hub.docker.com/r/niruix/sshwifty">https://hub.docker.com/r/niruix/sshwifty</a><br>GitHub官方地址：<a href="https://github.com/nirui/sshwifty">https://github.com/nirui/sshwifty</a></p><p>你其实可以直接使用官方的demo，但是可能官方demo你访问起来也卡，我们今天是来折腾的，就搭建一个真正属于自己的这个应用！</p><h2 id="3-快速开始"><a href="#3-快速开始" class="headerlink" title="3. 快速开始"></a>3. 快速开始</h2><p>这边直接丢出核心的 <code>docker-compose.yaml</code> 文件，熟悉 docker 环境的老伙伴儿们可以直接拷贝搭建！</p><p>sshwifty 部署：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">sshwifty:</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;8090:8182&#x27;</span>             <span class="comment"># 8090可以改成任意服务器没有使用过的端口，8182不要修改</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">sshwifty</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">&#x27;niruix/sshwifty:latest&#x27;</span></span><br></pre></td></tr></table></figure><p>没有看错，就是这么简短，而且并没有文件夹映射到服务器上。</p><p>以下是服务器部署的详细搭建教程。</p><h2 id="4-搭建环境"><a href="#4-搭建环境" class="headerlink" title="4. 搭建环境"></a>4. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器 24 元 &#x2F; 月 VPS 一台</del> 咕咕自己搭建用的是硅谷的<a href="https://loll.cc/tx">腾讯轻量应用服务器</a> ，（这次最好选 非大陆的，而且线路还不错的机器）如果是小白刚开始玩的话，也可以选择 <a href="https://gao.ee/lca">莱卡云 美国CN2 GIA</a> 的服务器，（莱卡云服务器介绍：<a href="https://blog.laoda.de/archives/vps-lcayun">点击查看</a>）或者<a href="https://blog.laoda.de/vps.html">Racknerd</a>的玩具服务器（注意地区选美国西部城市的）</li><li>系统：Debian 11 （<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD 脚本</a> 非必需 DD，用原来的系统也 OK，之后教程都是用 Debian 或者 Ubuntu 搭建～）</li><li>安装好 Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需但建议】域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>【非必需】提前安装好宝塔面板海外版本 aapanel，并安装好 Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程选用】安装好 Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><blockquote><p>服务器要求：内存建议1G，能安装Docker即可～</p></blockquote><h2 id="5-搭建视频"><a href="#5-搭建视频" class="headerlink" title="5. 搭建视频"></a>5. 搭建视频</h2><h3 id="5-1-YouTube："><a href="#5-1-YouTube：" class="headerlink" title="5.1 YouTube："></a>5.1 YouTube：</h3><p>视频地址：<a href="https://youtu.be/8ajRc7EyQnE">https://youtu.be/8ajRc7EyQnE</a></p><h3 id="5-2-哔哩哔哩"><a href="#5-2-哔哩哔哩" class="headerlink" title="5.2 哔哩哔哩"></a>5.2 哔哩哔哩</h3><p>哔哩哔哩【高清版本可以点击去吐槽到 B 站观看】：<joe-bilibili bvid="BV1ko4y1c7NQ"></joe-bilibili></p><h2 id="6-搭建方式"><a href="#6-搭建方式" class="headerlink" title="6. 搭建方式"></a>6. 搭建方式</h2><p>如果你不是用的腾讯云的轻量应用服务器，可以直接跳到 6.1 部分。</p><h3 id="安装系统（腾讯云轻量应用服务器）"><a href="#安装系统（腾讯云轻量应用服务器）" class="headerlink" title="安装系统（腾讯云轻量应用服务器）"></a>安装系统（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlyhcz-2.webp" alt="e59713fba8726d3cb55ae11bca83fe3c.png"></p><p>腾讯云轻量服务器最大的特点就是 “轻量”，相比 CVM，更适合小白上手，这边我们之间选择 Docker 基础镜像，就可以省去后面安装 Docker 的步骤 <del>（如果你非要用国内的服务器，这边装的 Docker 镜像还会帮你配置好国内镜像源，让你加速访问 docker 镜像资源）</del> 不要用国内的 。</p><h3 id="登陆（腾讯云轻量应用服务器）"><a href="#登陆（腾讯云轻量应用服务器）" class="headerlink" title="登陆（腾讯云轻量应用服务器）"></a>登陆（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlzlj7-2.webp" alt="2722040ee311eb4a9ebf2a4945bf38f4.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm0gv8-2.webp" alt="c0b5d360053746c4095d592967ee401f.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm1vqw-2.webp" alt="e0ba858f021b846ad0abc27acf5008c2.png"></p><h3 id="6-1-安装-Docker-与-Nginx-Proxy-Manager"><a href="#6-1-安装-Docker-与-Nginx-Proxy-Manager" class="headerlink" title="6.1 安装 Docker 与 Nginx Proxy Manager"></a>6.1 安装 Docker 与 Nginx Proxy Manager</h3><p>可以直接参考这篇内容：</p><p><a href="https://blog.laoda.de/archives/nginxproxymanager">https://blog.laoda.de/archives/nginxproxymanager</a></p><h3 id="6-2-创建安装目录"><a href="#6-2-创建安装目录" class="headerlink" title="6.2 创建安装目录"></a>6.2 创建安装目录</h3><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/sshwifty</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/sshwifty</span><br></pre></td></tr></table></figure><p>这边我们直接用 docker 的方式安装。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure><p>英文输入法下，按 <code>i</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">sshwifty:</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;8090:8182&#x27;</span>             <span class="comment"># 8090可以改成任意服务器没有使用过的端口，8182不要修改</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">sshwifty</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">&#x27;niruix/sshwifty:latest&#x27;</span></span><br></pre></td></tr></table></figure><p>修改好之后，注意切换成英文输入法，然后按一下 <code>esc</code>，然后 <code>:wq</code> 保存退出。</p><h3 id="6-3-打开服务器防火墙（非必需）并访问网页"><a href="#6-3-打开服务器防火墙（非必需）并访问网页" class="headerlink" title="6.3 打开服务器防火墙（非必需）并访问网页"></a>6.3 打开服务器防火墙（非必需）并访问网页</h3><p>打开防火墙的端口 <code>8090</code></p><p>举例，腾讯云打开方法如下（部分服务商没有自带的面板防火墙，就不用这步操作了）：</p><img src="https://img.laoda.de/i/2022/06/30/zlio5h-2.webp" alt="image-20220630215240864" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/06/30/10h3dqt-2.webp" alt="image-20220630220546335" style="zoom:33%;" /><p>图中示例填的是 <code>5230</code>，备注填的是 <code>memos</code>，这边我们填 <code>8090</code>，示例填 <code>sshwifty</code> ，确定即可（如果你在 docker-compose 文件里换了 <code>9009</code>，这边就需要填 <code>9009</code>，以此类推）</p><img src="https://img.laoda.de/i/2022/08/19/o4byqz-2.webp" alt="image-20220819145844555" style="zoom:33%;" /><p>查看端口是否被占用（以 <code>8090</code> 为例），输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:8090  <span class="comment">#查看 8090 端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果啥也没出现，表示端口未被占用，我们可以继续下面的操作了～</p><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装 lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用（被占用了就修改一下端口，比如改成 <code>8081</code>，注意 docker 命令行里和防火墙都要改）</p><p>最后：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/sshwifty    <span class="comment"># 来到 dockercompose 文件所在的文件夹下</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>理论上我们就可以输入 <code>http://ip:8090</code> 访问安装了。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器 IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的 IP。</p><p>2、遇到访问不了的情况，请再次检查在宝塔面板的防火墙和服务商的后台防火墙是否打开对应了端口。</p></blockquote><p>有的小伙伴可能想搭建起来分享给其他人使用，如果后续想要分享给别人，IP + 端口太不优雅了，而且这个涉及到密码的，还是非常需要做https的！会让网页更安全！</p><p> <a href="https://loll.cc/ns">namesilo</a> 上面 xyz 后缀的域名一年就 7 块钱，可以年抛。（冷知识，namesilo上 6位数字的xyz续费永远都是0.99美元 &#x3D; &#x3D;）</p><p>如果想要长期使用，还是建议买 com 后缀的域名，更加正规一些，可以输入 <code>laodade</code> 来获得 1 美元的优惠（不知道现在还有没有）</p><p><a href="https://loll.cc/ns">namesilo</a> 自带隐私保护，咕咕一直在用这家，价格也是这些注册商里面比较低的，关键是他家不像其他家域名注册商，没有七七八八的套路！（就是后台界面有些<del>丑</del> 古老 &#x3D; &#x3D;）</p><p><a href="https://blog.laoda.de/archives/namesilo">【域名购买】Namesilo 优惠码和域名解析教程（附带服务器购买推荐和注意事项）</a></p><p>我们接着往下看！</p><h3 id="6-4-更新-sshwifty"><a href="#6-4-更新-sshwifty" class="headerlink" title="6.4 更新 sshwifty"></a>6.4 更新 sshwifty</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/sshwifty</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/sshwifty /root/data/docker_data/sshwifty.archive  <span class="comment"># 万事先备份，以防万一</span></span><br><span class="line"></span><br><span class="line">docker-compose pull</span><br><span class="line"></span><br><span class="line">docker-compose up -d    <span class="comment"># 请不要使用 docker-compose stop 来停止容器，因为这么做需要额外的时间等待容器停止；docker-compose up -d 直接升级容器时会自动停止并立刻重建新的容器，完全没有必要浪费那些时间。</span></span><br><span class="line"></span><br><span class="line">docker image prune  <span class="comment"># prune 命令用来删除不再使用的 docker 对象。删除所有未被 tag 标记和未被容器使用的镜像</span></span><br></pre></td></tr></table></figure><p>提示：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WARNING! This will remove all dangling images.</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] </span><br></pre></td></tr></table></figure><p>输入 <code>y</code></p><p>利用 Docker 搭建的应用，更新非常容易～</p><h3 id="6-5-卸载-sshwifty"><a href="#6-5-卸载-sshwifty" class="headerlink" title="6.5 卸载 sshwifty"></a>6.5 卸载 sshwifty</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/sshwifty</span><br><span class="line"></span><br><span class="line">docker-compose down</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/sshwifty  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>可以卸载得很干净。</p><h2 id="7-反向代理"><a href="#7-反向代理" class="headerlink" title="7. 反向代理"></a>7. 反向代理</h2><p>我们要用域名而不是IP+端口的方式来访问我们的服务！</p><h3 id="7-1-利用-Nginx-Proxy-Manager"><a href="#7-1-利用-Nginx-Proxy-Manager" class="headerlink" title="7.1 利用 Nginx Proxy Manager"></a>7.1 利用 Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p><img src="https://img.laoda.de/i/2022/10/16/n6t02e-2.webp" alt="image-20221016140213282"></p><p>之后，登陆 Nginx Proxy Manager（不会的看这个：<strong>安装 Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称 NPM）会用到 <code>80</code>、<code>443</code> 端口，所以本机不能占用（比如原来就有 Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom: 33%;" /><img src="https://img.laoda.de/i/2023/05/08/itr6ch-0.webp" alt="image-20230403155113921" style="zoom:50%;" /><p>记得要打开NPM的<code>websocket support</code> !</p><blockquote><p> 注意填写对应的 <code>域名</code>、<code>IP</code> 和 <code>端口</code>，按文章来的话，应该是 <code>8090</code></p></blockquote><p><strong>IP 填写：</strong></p><p>如果 Nginx Proxy Manager 和 sshwifty 在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的 Docker 容器内部 IP。</p><p><img src="https://img.laoda.de/i/2022/09/29/pcdnz5-2.webp"></p><p>否则直接填 <code>sshwifty</code> 所在的服务器 IP 就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom: 33%;" /><p>再次打开，勾选这些：</p><p><img src="https://img.laoda.de/i/2022/10/16/n7nn6e-2.webp" alt="image-20221016140356324"></p><p>然后就可以用域名来安装访问了。</p><h3 id="7-2-利用宝塔面板"><a href="#7-2-利用宝塔面板" class="headerlink" title="7.2 利用宝塔面板"></a>7.2 利用宝塔面板</h3><p>发现还是有不少小伙伴习惯用宝塔面板，这边也贴一个宝塔面板的反代配置：</p><p>直接新建一个站点，不要数据库，不要 php，纯静态即可。</p><p>然后打开下面的配置，修改 Nginx 的配置。</p><p><img src="https://img.laoda.de/i/2022/08/19/ov4xrt-2.webp" alt="image-20220819150345725"></p><p><img src="https://img.laoda.de/i/2022/08/19/owbbkb-2.webp" alt="image-20220819150542867"></p><p>代码如下：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:8090/;       <span class="comment"># 注意改成你实际使用的端口</span></span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此方法对 90% 的反向代理都能生效，然后就可以用域名来安装访问了。</p><p>有同学可能会问，为什么不直接用宝塔自带的反向代理功能。</p><p><img src="https://img.laoda.de/i/2022/08/19/oxf800-2.webp" alt="image-20220819150730128"></p><p>也可以，不过咕咕自己之前遇到过当有多个网站需要反代的时候，在这边设置会报错的情况 &#x3D; &#x3D; </p><p>所以后来就不用了，直接用上面的方法来操作了。</p><h2 id="8-使用教程"><a href="#8-使用教程" class="headerlink" title="8. 使用教程"></a>8. 使用教程</h2><p>前面已经展示过了！这边等录视频的时候可以再说说，大家自己摸索一下！</p><h2 id="9-待完善的地方"><a href="#9-待完善的地方" class="headerlink" title="9. 待完善的地方"></a>9. 待完善的地方</h2><p>暂无</p><h2 id="10-结尾"><a href="#10-结尾" class="headerlink" title="10. 结尾"></a>10. 结尾</h2><p>祝大家用得开心，有问题可以去 GitHub 提 <a href="https://github.com/nirui/sshwifty/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，有能力给项目做贡献的同学，也欢迎积极加入到 <a href="https://github.com/nirui/sshwifty">项目</a> 中来，贡献自己的一份力量！</p><p>最后，感谢开发人员们的辛苦付出，让我们能用到这么优秀的项目！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>官方演示 Demo: sshwifty-demo.nirui.org<br>Docker镜像地址：<a href="https://hub.docker.com/r/niruix/sshwifty">https://hub.docker.com/r/niruix/sshwifty</a><br>GitHub官方地址：<a href="https://github.com/nirui/sshwifty">https://github.com/nirui/sshwifty</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSH中断 </tag>
            
            <tag> SSH </tag>
            
            <tag> 远程访问 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RackNerd VPS自助IPv4更换功能正式上线，72小时内更换免费！</title>
      <link href="/archives/racknerd-free-ipv4-replacement-within-72-hours/"/>
      <url>/archives/racknerd-free-ipv4-replacement-within-72-hours/</url>
      
        <content type="html"><![CDATA[<p>首先祝小伙伴们劳动节快乐！最近咕咕比较忙，等空下来马上继续和大家分享好玩的项目 &#x3D; &#x3D; </p><p>今天在路上刷tg的时候看到RackNerd VPS自助IPv4更换功能正式上线了，这对一些小伙伴来说绝对是一个好消息，就来水一篇文章～</p><p>操作非常简单，只需要到你的用户后台，点击你需要更换的VPS，在左边有一个”Change IP”的选项 (如图)，点击后按照说明操作即可。</p><p><img src="https://img.laoda.de/i/2023/04/30/k75u2w-0.webp" alt="IMG_7407"></p><ul><li>VPS如果是3天内 (购买后72小时内)，更换IP是免费的，系统不会生成账单；</li><li>VPS如果是购买后72小时需要更换IP的，系统会生成一个$3的一次性付费账单，支付后系统会自动更换IP。</li></ul><blockquote><p>注意：如果您有工单（ticket）是OPEN的状态，更换IP的按钮是不可用的，必须先关闭工单。</p></blockquote><h2 id="1、官网"><a href="#1、官网" class="headerlink" title="1、官网"></a>1、官网</h2><p><strong>官方网站：<a href="https://my.racknerd.com/aff.php?aff=1158">https://www.racknerd.com</a></strong></p><p><strong>Racknerd相关介绍：</strong> <a href="https://blog.laoda.de/archives/vps-racknerd">【VPS选购分享】Racknerd——曾经的“四大金刚”，如今的性价比之王</a></p><p>以下是racknerd目前的促销便宜VPS，可以围观。</p><p><a href="https://blog.laoda.de/vps.html">RackNerd 在售机型推荐</a></p><h2 id="2、复活节促销VPS"><a href="#2、复活节促销VPS" class="headerlink" title="2、复活节促销VPS"></a>2、复活节促销VPS</h2><p>VPS特征：KVM虚拟，纯SSD raid10阵列，1Gbps带宽，自带一个IPv4，支持rdns，solusvm面板管理。可选节点为西雅图&#x2F;圣何塞&#x2F;达拉斯&#x2F;芝加哥&#x2F;新泽西&#x2F;亚特兰大&#x2F;纽约。</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1核</td><td>840M</td><td>10G</td><td>1T&#x2F;月</td><td>$10.78&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=766">链接</a></strong></td></tr><tr><td>1核</td><td>1.2G</td><td>30G</td><td>3T&#x2F;月</td><td>$14.98&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=767">链接</a></strong></td></tr><tr><td>2核</td><td>2G</td><td>45G</td><td>5T&#x2F;月</td><td>$21.98&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=768">链接</a></strong></td></tr><tr><td>3核</td><td>5G</td><td>100G</td><td>10T&#x2F;月</td><td>$58.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=769">链接</a></strong></td></tr></tbody></table><p><strong>以下是往期促销，还可以买！</strong></p><h2 id="2、2023年元旦-中国春节促销"><a href="#2、2023年元旦-中国春节促销" class="headerlink" title="2、2023年元旦+中国春节促销"></a>2、2023年元旦+中国春节促销</h2><p>VPS特征：KVM虚拟，纯SSD raid10阵列，1Gbps带宽，自带一个IPv4，支持rdns，solusvm面板管理。</p><p>可选节点为洛杉矶DC-02, 芝加哥, 达拉斯, 新泽西, 亚特兰大, 圣何塞, 西雅图, 纽约。</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1核</td><td>512M</td><td>10G</td><td>1.5T&#x2F;月</td><td>$10.18&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=734">链接</a></strong></td></tr><tr><td>1核</td><td>1G</td><td>25G</td><td>4T&#x2F;月</td><td>$12.98&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=735">链接</a></strong></td></tr><tr><td>2核</td><td>2.5G</td><td>45G</td><td>6T&#x2F;月</td><td>$24.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=736">链接</a></strong></td></tr><tr><td>4核</td><td>4G</td><td>70G</td><td>10T&#x2F;月</td><td>$46.68&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=737">链接</a></strong></td></tr></tbody></table><h2 id="3、其他年付10美元左右VPS"><a href="#3、其他年付10美元左右VPS" class="headerlink" title="3、其他年付10美元左右VPS"></a>3、其他年付10美元左右VPS</h2><p>数据中心可选：洛杉矶、圣何塞、达拉斯、芝加哥、新泽西、亚特兰大、纽约、荷兰(阿姆斯特丹)</p><p>VPS特征：KVM虚拟，纯SSD raid10阵列，1Gbps带宽，自带一个IPv4，支持rdns，solusvm面板管理。</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1核</td><td>768M</td><td>10G</td><td>1T&#x2F;月</td><td>$10.28&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=695">链接</a></strong></td></tr><tr><td>1核</td><td>768M</td><td>10G</td><td>2T&#x2F;月</td><td>$11.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=679">链接</a></strong></td></tr><tr><td>1核</td><td>1G</td><td>16G</td><td>3T&#x2F;月</td><td>$14.98&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=680">链接</a></strong></td></tr><tr><td>1核</td><td>1.2G</td><td>18G</td><td>2T&#x2F;月</td><td>$14.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=670">链接</a></strong></td></tr><tr><td>1核</td><td>1.5G</td><td>30G</td><td>3T&#x2F;月</td><td>$16.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=696">链接</a></strong></td></tr></tbody></table><h2 id="4、年付60刀-5个ipv4"><a href="#4、年付60刀-5个ipv4" class="headerlink" title="4、年付60刀 - 5个ipv4"></a>4、年付60刀 - 5个ipv4</h2><p>默认配置5个ipv4。</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1核</td><td>1.5G</td><td>20G</td><td>3T&#x2F;月</td><td>$60&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=563">链接</a></strong></td></tr></tbody></table><h2 id="5、内存1-5G-2-5G套餐"><a href="#5、内存1-5G-2-5G套餐" class="headerlink" title="5、内存1.5G-2.5G套餐"></a>5、内存1.5G-2.5G套餐</h2><p>数据中心可选：洛杉矶、圣何塞、达拉斯、芝加哥、新泽西、亚特兰大、纽约、荷兰(阿姆斯特丹)</p><p>VPS特征：KVM虚拟，纯SSD raid10阵列，1Gbps带宽，自带一个IPv4，支持rdns，solusvm面板管理。</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1核</td><td>1.5G</td><td>30G</td><td>3T&#x2F;月</td><td>$25.95&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=319">链接</a></strong></td></tr><tr><td>2核</td><td>2G</td><td>25G</td><td>4T&#x2F;月</td><td>$20.98&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=681">链接</a></strong></td></tr><tr><td>2核</td><td>2G</td><td>35G</td><td>4T&#x2F;月</td><td>$38.78&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=280">链接</a></strong></td></tr><tr><td>2核</td><td>2.5G</td><td>40G</td><td>3T&#x2F;月</td><td>$25.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=671">链接</a></strong></td></tr><tr><td>2核</td><td>2.5G</td><td>60G</td><td>7T&#x2F;月</td><td>$28.55&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=697">链接</a></strong></td></tr><tr><td>2核</td><td>2.5G</td><td>40G</td><td>5T&#x2F;月</td><td>$29.50&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=211">链接</a></strong></td></tr><tr><td>2核</td><td>2.5G</td><td>50G</td><td>5T&#x2F;月</td><td>$39.95&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=320">链接</a></strong></td></tr></tbody></table><h2 id="6、内存3G-8G套餐"><a href="#6、内存3G-8G套餐" class="headerlink" title="6、内存3G-8G套餐"></a>6、内存3G-8G套餐</h2><p>数据中心可选：洛杉矶、圣何塞、达拉斯、芝加哥、新泽西、亚特兰大、纽约、荷兰(阿姆斯特丹)</p><p>VPS特征：KVM虚拟，纯SSD raid10阵列，1Gbps带宽，自带一个IPv4，支持rdns，solusvm面板管理。</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>2核</td><td>3G</td><td>35G</td><td>5T&#x2F;月</td><td>$29.99&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=473">链接</a></strong></td></tr><tr><td>3核</td><td>3.5G</td><td>36G</td><td>5T&#x2F;月</td><td>$30.19&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=125">链接</a></strong></td></tr><tr><td>2核</td><td>3.5G</td><td>60G</td><td>6T&#x2F;月</td><td>$35.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=672">链接</a></strong></td></tr><tr><td>2核</td><td>3.5G</td><td>80G</td><td>10T&#x2F;月</td><td>$38.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=698">链接</a></strong></td></tr><tr><td>3核</td><td>4G</td><td>50G</td><td>10T&#x2F;月</td><td>$45.89&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=474">链接</a></strong></td></tr><tr><td>3核</td><td>4.5G</td><td>100G</td><td>12T&#x2F;月</td><td>$48.77&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=699">链接</a></strong></td></tr><tr><td>4核</td><td>8G</td><td>100G</td><td>5T&#x2F;月</td><td>$89.00&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=312">链接</a></strong></td></tr></tbody></table><h2 id="7、AMD-NVMe系列便宜VPS套餐"><a href="#7、AMD-NVMe系列便宜VPS套餐" class="headerlink" title="7、AMD+NVMe系列便宜VPS套餐"></a>7、AMD+NVMe系列便宜VPS套餐</h2><p>可选纽约，圣何塞，达拉斯，亚特兰大。特征，kvm虚拟，AMD Ryzen 9 3900X、DDR4、NVMe SSD、1Gbps口带宽，默认一个IPv4，不支持Windows。</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>NVMe</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1核</td><td>512M</td><td>6G</td><td>400G&#x2F;月</td><td>$15&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=302">链接</a></strong></td></tr><tr><td>1核</td><td>1G</td><td>20G</td><td>2T&#x2F;月</td><td>$32&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=303">链接</a></strong></td></tr><tr><td>1核</td><td>1.5G</td><td>22G</td><td>3T&#x2F;月</td><td>$35&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=308">链接</a></strong></td></tr><tr><td>2核</td><td>2.5G</td><td>40G</td><td>6T&#x2F;月</td><td>$69&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=309">链接</a></strong></td></tr></tbody></table><h2 id="8、AMD-NVME系列windows-vps套餐"><a href="#8、AMD-NVME系列windows-vps套餐" class="headerlink" title="8、AMD+NVME系列windows vps套餐"></a>8、AMD+NVME系列windows vps套餐</h2><p>可选机房洛杉矶，达拉斯，纽约，亚特兰大。</p><p>VPS特征：KVM虚拟，AMD Ryzen 9 3900x+ddr4+NVMe SSD阵列+1Gbps带宽，默认一个IPv4，solusvm管理，windows中英文授权版系统（版本为2012和2016系统）。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>NVMe</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>2G</td><td>1核</td><td>35G</td><td>2T&#x2F;月</td><td>$60&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=700">链接</a></strong></td></tr><tr><td>2.5G</td><td>1核</td><td>40G</td><td>3.5T&#x2F;月</td><td>$69&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=435">链接</a></strong></td></tr><tr><td>3G</td><td>2核</td><td>35G</td><td>3T&#x2F;月</td><td>$78.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=346">链接</a></strong></td></tr><tr><td>3.5G</td><td>2核</td><td>60G</td><td>3.5T&#x2F;月</td><td>$99&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=701">链接</a></strong></td></tr><tr><td>4G</td><td>3核</td><td>60G</td><td>6T&#x2F;月</td><td>$115&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=436">链接</a></strong></td></tr><tr><td>8G</td><td>3核</td><td>150G</td><td>10T&#x2F;月</td><td>$219&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=702">链接</a></strong></td></tr><tr><td>12G</td><td>4核</td><td>160G</td><td>12T&#x2F;月</td><td>$289&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=437">链接</a></strong></td></tr></tbody></table><h2 id="9、稍大硬盘VPS套餐"><a href="#9、稍大硬盘VPS套餐" class="headerlink" title="9、稍大硬盘VPS套餐"></a>9、稍大硬盘VPS套餐</h2><p>可选机房：圣何塞&#x2F;达拉斯&#x2F;芝加哥&#x2F;新泽西&#x2F;亚特兰大&#x2F;纽约&#x2F;荷兰</p><p><strong>特征</strong>：1Gbps带宽，自带一个IPv4，solusvm管理，硬盘SSD cached，洛杉矶MC机房！</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>硬盘</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>2核</td><td>2G</td><td>50G</td><td>4T&#x2F;月</td><td>$36&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=61">链接</a></strong></td></tr><tr><td>3核</td><td>4G</td><td>80G</td><td>5T&#x2F;月</td><td>$59&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=62">链接</a></strong></td></tr><tr><td>4核</td><td>6G</td><td>140G</td><td>6T&#x2F;月</td><td>$95&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=63">链接</a></strong></td></tr><tr><td>4核</td><td>8G</td><td>100G</td><td>5T&#x2F;月</td><td>$89&#x2F;年</td><td><a href="https://my.racknerd.com/aff.php?aff=1158&pid=312"><strong>链接</strong></a></td></tr><tr><td>4核</td><td>8G</td><td>200G</td><td>8T&#x2F;月</td><td>$135&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=64">链接</a></strong></td></tr></tbody></table><h2 id="10、网络测试"><a href="#10、网络测试" class="headerlink" title="10、网络测试"></a>10、网络测试</h2><p><strong>洛杉矶DC02：</strong> 204.13.154.3，<a href="http://lg-lax02.racknerd.com/1000MB.test">http://lg-lax02.racknerd.com/1000MB.test</a></p><p><strong>洛杉矶DC05：</strong> 5.181.135.8，<a href="http://lg-lax05.racknerd.com/1000MB.test">http://lg-lax05.racknerd.com/1000MB.test</a></p><p><strong>圣何塞：</strong> 192.210.207.88，<a href="http://lg-sj.racknerd.com/1000MB.test">http://lg-sj.racknerd.com/1000MB.test</a></p><p><strong>西雅图：</strong> 192.3.253.2，<a href="http://lg-sea.racknerd.com/1000MB.test">http://lg-sea.racknerd.com/1000MB.test</a></p><p><strong>新泽西：</strong> 192.3.165.30，<a href="http://lg-nj.racknerd.com/1000MB.test">http://lg-nj.racknerd.com/1000MB.test</a></p><p><strong>达拉斯</strong>：198.23.249.100，<a href="http://lg-dal.racknerd.com/1000MB.test">http://lg-dal.racknerd.com/1000MB.test</a></p><p><strong>芝加哥：</strong> 198.23.228.15，<a href="http://lg-chi.racknerd.com/1000MB.test">http://lg-chi.racknerd.com/1000MB.test</a></p><p><strong>阿什本</strong>：107.173.166.10，<a href="http://lg-ash.racknerd.com/1000MB.test">http://lg-ash.racknerd.com/1000MB.test</a></p><p><strong>亚特兰大：</strong> 107.173.164.160，<a href="http://lg-atl.racknerd.com/1000MB.test">http://lg-atl.racknerd.com/1000MB.test</a></p><p><strong>荷兰.阿姆斯特丹：</strong> 23.94.101.88，<a href="http://lg-ams.racknerd.com/1000MB.test">http://lg-ams.racknerd.com/1000MB.test</a></p><p><strong>水牛城：</strong> 192.3.81.8，<a href="http://lg-ny.racknerd.com/1000MB.test">http://lg-ny.racknerd.com/1000MB.test</a></p><h2 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h2><p><a href="https://blog.laoda.de/vps.html">RackNerd 在售机型推荐</a></p><p><a href="https://blog.laoda.de/archives/vps-racknerd">【VPS选购分享】Racknerd——曾经的“四大金刚”，如今的性价比之王</a></p><p><a href="https://blog.laoda.de/archives/cheap-vps-racknerd">【国外便宜高性价比的VPS 推荐】——RackNerd</a></p><p><a href="https://blog.laoda.de/archives/racknerd-easter-2023">2023 - RackNerd 活动汇总 整理帖！附最新复活节活动套餐</a></p><p><a href="https://blog.laoda.de/archives/racknerd-vps-issues">RackNerd（RN）双十一优惠&amp;&amp; RN VPS在售促销特价+流量翻倍+迁移+邮箱+push方法整理</a></p><p><a href="https://blog.laoda.de/archives/racknerd-bf-2022-01?cid=5016">#2022黑五# RackNerd：美国便宜VPS低至$10&#x2F;年～</a></p>]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Racknerd </tag>
            
            <tag> 美国VPS </tag>
            
            <tag> 欧洲VPS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用ChatGPT帮你写一个VPS定时自动备份脚本</title>
      <link href="/archives/chatgpt-script-about-vps-backup/"/>
      <url>/archives/chatgpt-script-about-vps-backup/</url>
      
        <content type="html"><![CDATA[<p>咕咕在后台经常会遇到小伙伴留言修改咕咕在后台经常会遇到小伙伴留言:</p><p><strong>“我要如何备份自己服务器上的数据？”</strong></p><p>其实之前博客里发过类似的内容：</p><p><a href="https://blog.laoda.de/archives/docker-issues">【有用的小知识】Docker容器如何更新？如何迁移应用？如何卸载？</a></p><p><a href="https://blog.laoda.de/archives/backup-server-series">【服务器备份系列】聊一聊服务器备份那些事儿｜VPS备份总览</a></p><p>对于一些喜欢折腾的小伙伴来说，经常会买一些奇奇怪怪的商家的服务器，这些商家提供的机器可能非常便宜，甚至免费，但也可能会随时会删机、或者跑路，大家的担心其实是有必要的。</p><p>当然博客推荐的商家都是咕咕自己也上车的商家，还是非常靠谱的。</p><p>然而，不管用的是啥服务器，不管商家有多高的在线率保证，只要你的数据对你来说是重要的，都非常建议多异地备份。</p><p>最近在用ChatGPT，想到其实完全可以让它来给我们写一个定时自动备份的脚本。</p><p>马上开整。</p><h2 id="1-提的需求"><a href="#1-提的需求" class="headerlink" title="1. 提的需求"></a>1. 提的需求</h2><blockquote><p>写一个Linux自动备份脚本，把A服务器上的<code>/root/data/docker_data</code>文件夹的内容压缩之后每天早上4点30分自动备份到B服务器上的<code>/root/data/backup</code>目录下，要求最多保留3份备份。</p><p>其中B服务器的SSH端口为<code>2222</code>，B服务器上的<code>/root/data/backup</code>目录已经创建好了。</p></blockquote><p>说明：</p><ul><li>熟悉咕咕的小伙伴都知道，我们docker搭建的项目都放在了<code>/root/data/docker_data</code>这个文件夹下面，里面包含了各个容器的数据和配置文件，迁移服务器最关键的东西都在这里了（image镜像不在这边，也不需要备份，我们可以直接在docker hub上拉取）</li><li><code>“每天早上4点30分”</code> 是因为对于网站来说，这个时间段网址访问人数相对较少，服务器负载小</li></ul><h2 id="2-ChatGPT的回答"><a href="#2-ChatGPT的回答" class="headerlink" title="2. ChatGPT的回答"></a>2. ChatGPT的回答</h2><p>以下是一个可以完成所需任务的bash脚本。请将以下脚本保存为<code>backup.sh</code>。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i    <span class="comment"># 切换到root用户</span></span><br><span class="line"></span><br><span class="line">vim backup.sh   <span class="comment"># 编辑back.sh文件</span></span><br></pre></td></tr></table></figure><p>写入以下内容：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务器A上的源目录</span></span><br><span class="line">SRC_DIR=<span class="string">&quot;/root/data/docker_data&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务器B上的目标目录</span></span><br><span class="line">DST_DIR=<span class="string">&quot;/root/data/backup&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务器B的IP地址</span></span><br><span class="line">SERVER_B_IP=<span class="string">&quot;your_server_b_ip&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务器B的SSH用户名</span></span><br><span class="line">SSH_USER=<span class="string">&quot;your_ssh_username&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务器B的SSH端口</span></span><br><span class="line">SSH_PORT=<span class="string">&quot;2222&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份文件前缀</span></span><br><span class="line">BACKUP_NAME_PREFIX=<span class="string">&quot;docker_data_backup&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 压缩文件格式</span></span><br><span class="line">ARCHIVE_FORMAT=<span class="string">&quot;tar.gz&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成备份文件名</span></span><br><span class="line">current_date=$(<span class="built_in">date</span> +<span class="string">&quot;%Y%m%d_%H%M%S&quot;</span>)</span><br><span class="line">backup_filename=<span class="string">&quot;<span class="variable">$&#123;BACKUP_NAME_PREFIX&#125;</span>_<span class="variable">$&#123;current_date&#125;</span>.<span class="variable">$&#123;ARCHIVE_FORMAT&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 压缩源目录</span></span><br><span class="line">tar -czf <span class="string">&quot;<span class="variable">$&#123;backup_filename&#125;</span>&quot;</span> -C <span class="string">&quot;<span class="variable">$&#123;SRC_DIR&#125;</span>&quot;</span> .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 传输备份文件到服务器B</span></span><br><span class="line">scp -P <span class="string">&quot;<span class="variable">$&#123;SSH_PORT&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;backup_filename&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;SSH_USER&#125;</span>@<span class="variable">$&#123;SERVER_B_IP&#125;</span>:<span class="variable">$&#123;DST_DIR&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除本地备份文件</span></span><br><span class="line"><span class="built_in">rm</span> -f <span class="string">&quot;<span class="variable">$&#123;backup_filename&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 保留最多3个备份文件</span></span><br><span class="line">ssh -p <span class="string">&quot;<span class="variable">$&#123;SSH_PORT&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;SSH_USER&#125;</span>@<span class="variable">$&#123;SERVER_B_IP&#125;</span>&quot;</span> <span class="string">&quot;ls -t <span class="variable">$&#123;DST_DIR&#125;</span>/<span class="variable">$&#123;BACKUP_NAME_PREFIX&#125;</span>* | tail -n +4 | xargs --no-run-if-empty rm -f&quot;</span></span><br></pre></td></tr></table></figure><p>接下来，我们需要在服务器A上配置cron job以实现每天早上4点30分自动执行上面的备份脚本。请按照以下步骤操作：</p><ol><li>使用<code>chmod</code>命令为脚本添加可执行权限：</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x backup.sh</span><br></pre></td></tr></table></figure><p>接下来，我们需要在A服务器上安装并配置SSH免密登录到B服务器。请在A服务器上执行以下命令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装sshpass（如已安装，请忽略）</span></span><br><span class="line">sudo apt-get install sshpass</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成SSH密钥</span></span><br><span class="line">ssh-keygen -t rsa -b 4096</span><br><span class="line"></span><br><span class="line"><span class="comment"># 一路回车即可</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将公钥复制到B服务器</span></span><br><span class="line">ssh-copy-id -i ~/.ssh/id_rsa.pub -p 服务器端口 user@B服务器IP地址</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以检测一下，A服务器直接用<code>ssh -p 服务器端口 user@B服务器IP地址</code>是否可以免密登录B服务器，如果可以，说明可以继续下一步。</p><ol start="2"><li>使用<code>crontab -e</code>命令打开服务器A上的cron配置：</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">crontab -e</span><br></pre></td></tr></table></figure><ol start="3"><li>在打开的cron配置文件中，添加以下一行内容以设置每天早上4点30分执行<code>backup.sh</code>脚本。请确保将<code>/path/to/backup.sh</code>替换为实际的脚本文件路径。</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">30 4 * * * /root/backup.sh</span><br></pre></td></tr></table></figure><ol start="4"><li>保存并关闭cron配置文件。</li></ol><p>现在，每天早上4点30分，脚本将自动执行，并将<code>/root/data/docker_data</code>目录压缩备份到服务器B的<code>/root/data/backup</code>目录下，同时保留最多3份备份。</p><h2 id="3-测试"><a href="#3-测试" class="headerlink" title="3. 测试"></a>3. 测试</h2><p>测试了一下，没啥问题。</p><p><img src="https://img.laoda.de/i/2023/04/17/kjp3yx-0.webp" alt="image-20230417124239725"></p><p>修改了一下文件路径，备份了一下halo博客的，也正常：</p><p><img src="https://img.laoda.de/i/2023/04/17/kjil4a-0.webp" alt="image-20230417124208679"></p><p>舒服了，甲骨文可以愉快得用起来了，再也不怕商家跑路了！</p><blockquote><p><strong>友情提示：</strong> 其实不管用的是啥服务器，不管商家有多高的在线率保证，只要你的数据对你来说是重要的，都要多异地备份。</p></blockquote><h2 id="4-总结"><a href="#4-总结" class="headerlink" title="4. 总结"></a>4. 总结</h2><p>用上了ChatGPT，写一些简单的脚本对于没有什么代码基础的我们来说，已经不再是问题。</p><p>推荐阅读：</p><p><a href="https://blog.laoda.de/archives/play-with-chatgpt">从注册到畅玩ChatGPT——目前世界上最先进的民用AI聊天机器人</a></p><p><a href="https://blog.laoda.de/archives/chatgpt-plus-depay">【保姆级教程】从零开通ChatGPT Plus</a></p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ChatGPT </tag>
            
            <tag> 自动备份 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Depay/Dupay 替代品来了！知名开源 Web3 钱包 OneKey 推出虚拟卡服务，可开通ChatGPT</title>
      <link href="/archives/onekey-card-tutorial/"/>
      <url>/archives/onekey-card-tutorial/</url>
      
        <content type="html"><![CDATA[<p>知名开源 Web3 钱包 OneKey 推出虚拟卡服务</p><p><img src="https://img.laoda.de/i/2023/04/14/w3onnm-0.webp" alt="3a275f04d4f93c24d20d7057cec96835.png"></p><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><h3 id="2023-08-08"><a href="#2023-08-08" class="headerlink" title="2023-08-08"></a>2023-08-08</h3><p>Onekey card 9月底将会停止中国大陆用户申请，已申请的不受影响，有需要的可以先搞一张备用了。</p><img src="https://img.laoda.de/i/2023/08/08/r8ofax-0.webp" alt="image-20230808164714666" style="zoom:50%;" /><h3 id="2023-06-14"><a href="#2023-06-14" class="headerlink" title="2023-06-14"></a>2023-06-14</h3><p>OneKey card新增优选美国卡，可以开通ChatGPT Plus了！</p><img src="https://img.laoda.de/i/2023/06/14/m9292v-0.webp" alt="image-20230614134546403" style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/06/14/m9ekxp-0.webp" alt="image-20230614134604001" style="zoom:33%;" /><h3 id="2023-06-01"><a href="#2023-06-01" class="headerlink" title="2023-06-01"></a>2023-06-01</h3><p>目前<a href="https://gao.ee/depay">depay</a>已经恢复，老用户可以正常使用，不过新用户暂时还不能注册。</p><p>OneKey卡4146港区卡支持支付宝、微信！暂不支持开通ChatGPT。</p><h3 id="2023-05-30"><a href="#2023-05-30" class="headerlink" title="2023-05-30"></a>2023-05-30</h3><p>UPDATE:  现在支持UDST入金了</p><img src="https://img.laoda.de/i/2023/05/30/r3irur-0.webp" alt="image-20230530163848433" style="zoom: 25%;" /><h3 id="2023-05-27"><a href="#2023-05-27" class="headerlink" title="2023-05-27"></a>2023-05-27</h3><p>OneKey为之前4288卡头的美国卡(最早)的用户免费新增加了一张卡，旧卡余额可以转到新卡，新卡可以正常用于ChatGPT、Midjourney、Twitter等场景使用。</p><p>吐槽一下，depay这么久了还没恢复，还是OneKey靠谱一点……</p><p><img src="https://img.laoda.de/i/2023/05/27/up2kv3-0.webp"></p><h3 id="2023-05-25"><a href="#2023-05-25" class="headerlink" title="2023-05-25"></a>2023-05-25</h3><p>Onekey Card将在下周二左右开放新美国卡段</p><p>Onekey Card目前为止总共有两个批次的卡段，分别为<br>— 4288卡头的美国卡(最早)<br>— 4931卡头的香港卡(最近)</p><p>老用户基本都是4288美国卡，老的美国卡是支持OpenAI的，但是4288美国卡前段时间已经被风控了，几乎所有平台无法消费。<br>在美国卡段分配完之后，现在开的卡统一位香港VISA卡，但是不能开通OpenAI。</p><p>难道老用户4288没救了吗?</p><p>官方原话为：“即将给所有4288卡段用户替换一个新的支持 ChatGPT 的卡段，最迟下周二替换完成，余额将会转移到这个新卡上。到时候已有香港卡的用户也可以开这个卡。上线后会给大家说一下。”。意味着原本的4288卡头已经无法使用，请使用新的美国卡头代替。</p><p><img src="https://img.laoda.de/i/2023/05/25/vh8kpx-0.webp" alt="image-20230525190338644"></p><p>关于新卡账号等级继承：<br>开卡之后，Plan等级是不会变化的。意味着不会出现如GOLD变Silver的情况。</p><p>此外，同个账户之间的卡，将支持互转，并且0手续费。</p><h3 id="2023-05-15"><a href="#2023-05-15" class="headerlink" title="2023-05-15"></a>2023-05-15</h3><p>注意，据小伙伴反馈，Onekey美国开头已经没有了，目前新开卡为香港卡头，香港开头不支持开通ChatGPT PLUS（其他的都正常）。如果想去用OneKey开Plus的暂时别上车了。</p><p>还是建议等<a href="https://gao.ee/depay">depay</a>恢复注册再试试。</p><h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h2><p>🔑 OneKey 也发布虚拟卡了，作用类似 <a href="https://gao.ee/depay">DePay</a>，是一张发行地美国的 Visa 卡。</p><blockquote><p>OneKey 是一家位于新加坡的区块链公司。之前主要是做加密货币管理工具的（硬件钱包），之前完成了两千万美元的融资，根据第三方统计OneKey目前已经托管了数十亿美元的加密货币资产，拥有上万名用户。</p><p>相关阅读：<br><a href="https://forum.conflux.fun/t/onekey/12467">区块链钱包安全知识大科普——OneKey专访</a><br><a href="https://www.chaincatcher.com/article/2079939">对话 OneKey 王一石：硬件钱包覆盖率可能不到 5%，但红利期仍然很远</a></p></blockquote><p>🔗 申请链接：<a href="https://gao.ee/onekey">https://gao.ee/onekey</a>  目前是公测期间需要填写邀请码激活：<code>1U7IPF</code></p><h3 id="1-1-特别注意（先说坑）"><a href="#1-1-特别注意（先说坑）" class="headerlink" title="1.1 特别注意（先说坑）"></a>1.1 特别注意（先说坑）</h3><p>⚠️注意：</p><p>1、需要身份证实名+人脸认证，所以如果你想将它用与 黑&#x2F;灰 活动还是放弃吧！</p><p>2、目前公测阶段需要 20 USD 以上（需要用加密货币充值）</p><p>3、目前必须使用邀请码才能注册，<a href="https://gao.ee/onekey">链接</a>已包含咕咕的邀请码<code>1U7IPF</code></p><p>4、虽说是信用卡，其实是预付制的信用卡（即需要卡内有额度才能消费，不能透支，相当于借记卡）</p><p>5、费率相对还是比较高的</p><p>咕咕实测花费174.75RMB（充值了25USDT转换成USDC），成功给卡充值23.5美元（161.02RMB），损耗13.73RMB</p><p><img src="https://img.laoda.de/i/2023/04/14/1145ye0-0.webp" alt="image-20230414224423144"></p><p>卡头是<code>4288</code></p><h3 id="1-2-特点"><a href="#1-2-特点" class="headerlink" title="1.2 特点"></a>1.2 特点</h3><ul><li>目前必须使用邀请码才能注册</li><li>只能使用 Google 登录，只支持虚拟币充值</li><li>初始注册用户的充值费率是 2.1%，月费 1USDC（通过 USDC 充值，损耗在 2.1%～1.5%，相对于<a href="https://gao.ee/depay">Depay</a>来说手续费还是比较高）</li><li>支持绑定支付宝、微信</li><li>Web3 大厂，风险等级低（相对于Depay来说）</li></ul><h3 id="1-3-充值"><a href="#1-3-充值" class="headerlink" title="1.3 充值"></a>1.3 充值</h3><p>购买虚拟货币可以用<a href="https://gao.ee/okx">欧易</a>或者是<a href="https://gao.ee/bian">币安</a>来完成。</p><p> <strong>欧易</strong>：<a href="https://gao.ee/okx">https://gao.ee/okx</a>（通过链接注册后注册者和邀请者都会收到15%的返佣比例，邀请码<code>65534142</code>）</p><p><strong>币安</strong>：<a href="https://gao.ee/bian">https://gao.ee/bian</a>（通过链接注册后注册者和邀请者都会收到10%的返佣比例，邀请码<code>I76Y2IDH</code>）</p><h4 id="OneKey-Card-支持充值的网络和币种"><a href="#OneKey-Card-支持充值的网络和币种" class="headerlink" title="OneKey Card 支持充值的网络和币种"></a>OneKey Card 支持充值的网络和币种</h4><table><thead><tr><th>币种</th><th>网络</th></tr></thead><tbody><tr><td>USDC</td><td>EthereumPolygon (Coming Soon)TronAlgorandAvalancheFlow</td></tr><tr><td>USDT（即将支持）</td><td>EthereumTronPolygonAvalanche</td></tr></tbody></table><p><strong>充值错代币很难追回，请注意充值正确的币种，目前只支持 USDC 。</strong></p><p><strong>充值错代币很难追回，请注意充值正确的币种，目前只支持 USDC 。</strong></p><p><strong>充值错代币很难追回，请注意充值正确的币种，目前只支持 USDC 。</strong></p><h3 id="1-4-总结"><a href="#1-4-总结" class="headerlink" title="1.4 总结"></a>1.4 总结</h3><p>此类虚拟卡虽然说是信用卡，但其实都是预付卡。咕咕都不建议在卡上面放太多钱，一般钱放<a href="(https://help.onekey.so/hc/zh-cn/articles/360004133595-%E5%8C%BA%E5%9D%97%E9%93%BE%E9%92%B1%E5%8C%85%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86)">区块链钱包</a>里头，用的时候再充值到卡上即可，这样风险最低，即使商家跑路，也可以把我们的风险降到最低。</p><p>延伸阅读：<a href="https://help.onekey.so/hc/zh-cn/articles/360004133595-%E5%8C%BA%E5%9D%97%E9%93%BE%E9%92%B1%E5%8C%85%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86">区块链钱包基础知识</a></p><hr><h2 id="2-详细注册流程（咕咕实测）"><a href="#2-详细注册流程（咕咕实测）" class="headerlink" title="2. 详细注册流程（咕咕实测）"></a>2. 详细注册流程（咕咕实测）</h2><h3 id="2-1-注册-OneKey-Card"><a href="#2-1-注册-OneKey-Card" class="headerlink" title="2.1 注册 OneKey Card"></a>2.1 注册 OneKey Card</h3><p>点击链接：<a href="https://gao.ee/onekey">https://gao.ee/onekey</a> 进入注册界面，点击 【sign in with Google】，使用谷歌账户注册</p><p><img src="https://img.laoda.de/i/2023/04/14/xmntpt-0.webp" alt="card01.png"></p><p>账号注册后，点击 【Activate】开通，激活卡</p><p><img src="https://img.laoda.de/i/2023/04/14/w6t34e-0.webp" alt="image-20230414194634029"></p><p>点击 <code>VISA</code></p><p>目前是公测期间需要填写邀请码激活：<code>1U7IPF</code></p><p><img src="https://img.laoda.de/i/2023/04/14/w6wcig-0.webp" alt="image-20230414194648964"></p><p>填基础信息，</p><p><img src="https://img.laoda.de/i/2023/04/14/w7bri7-0.webp" alt="image-20230414194720849"></p><h3 id="2-2-实名认证"><a href="#2-2-实名认证" class="headerlink" title="2.2 实名认证"></a>2.2 实名认证</h3><p>进行实名认证，信息添加完毕后，点击 【Next】</p><p>非国内的身份需要人工审核，，一般提交之后一个工作日内会审核完的。</p><p>咕咕这边大概15s审核完毕。</p><p><img src="https://img.laoda.de/i/2023/04/14/w7jshs-0.webp" alt="image-20230414194757894"></p><p>需要完成人脸识别，点击 【Please complete face verification】，微信扫码进行验证。<br>非中国大陆无法人脸识别自动审核。<br>实名认证完成后，您的邮箱将收到一封实名认证完成的邮件。</p><p><img src="https://img.laoda.de/i/2023/04/14/xnwsk4-0.webp" alt="card11.png"></p><p>KYC，微信扫码人脸认证</p><img src="https://img.laoda.de/i/2023/04/14/w9px1i-0.webp" alt="image-20230414195123593" style="zoom:50%;" /><p>人脸录制视频10s左右，</p><img src="https://img.laoda.de/i/2023/04/14/wbfv4s-0.webp" alt="IMG_7228" style="zoom:33%;" /><p>开始审核，</p><img src="https://img.laoda.de/i/2023/04/14/wbiekw-0.webp" alt="image-20230414195424167" style="zoom:33%;" /><p>核验成功！</p><img src="https://img.laoda.de/i/2023/04/14/wbmie0-0.webp" alt="IMG_7231" style="zoom:33%;" /><p>回到电脑上，</p><img src="https://img.laoda.de/i/2023/04/14/wavmc9-0.webp" alt="image-20230414195316492" style="zoom:50%;" /><p>此时就能看到已经开通好了，</p><img src="https://img.laoda.de/i/2023/04/14/wclfc8-0.webp" alt="image-20230414195607128" style="zoom:50%;" /><h3 id="2-3-绑定谷歌二步验证"><a href="#2-3-绑定谷歌二步验证" class="headerlink" title="2.3 绑定谷歌二步验证"></a>2.3 绑定谷歌二步验证</h3><p>实名认证完成后，需要绑定 Google 身份验证器，才能开始使用</p><p><img src="https://img.laoda.de/i/2023/04/14/xocl0c-0.webp" alt="card12.png"></p><p><img src="https://img.laoda.de/i/2023/04/14/x40gbx-0.webp" alt="image-20230414200210680"></p><p>使用谷歌验证码 App 扫描二维码，抄写备份密钥（此密钥可让您在手机丢失时恢复您的 Google 身份验证器）</p><p><img src="https://img.laoda.de/i/2023/04/14/xouedq-0.webp" alt="card15.png"></p><p>输入谷歌验证吗和邮箱验证码，完成绑定。</p><p><img src="https://img.laoda.de/i/2023/04/14/x6grx7-0.webp" alt="image-20230414200623174"></p><p><img src="https://img.laoda.de/i/2023/04/14/x6lhqd-0.webp" alt="image-20230414200645186"></p><h3 id="2-4-充值-OneKey-Card"><a href="#2-4-充值-OneKey-Card" class="headerlink" title="2.4 充值 OneKey Card"></a>2.4 充值 OneKey Card</h3><p>实名认证完成后，点击【Top Up】进行充值，公测阶段需要 20 USD 以上</p><p><img src="https://img.laoda.de/i/2023/04/14/xpndmg-0.webp" alt="card17.png"></p><p>点击 USDC ，选择要充值的链进行充值。（暂时先开放了 USDC 充值）</p><p><strong>充值错代币很难追回，请注意充值正确的币种，目前只支持 USDC 。</strong></p><p><img src="https://img.laoda.de/i/2023/04/14/xq0n6z-0.webp" alt="card30.png"></p><p>咕咕这边网络选择的也是TRX</p><p><img src="https://img.laoda.de/i/2023/04/14/x5zpwj-0.webp" alt="image-20230414200542905"></p><p>以下是卡片的钱包地址信息，</p><p><img src="https://img.laoda.de/i/2023/04/14/xdjl5k-0.webp" alt="image-20230414201812329"></p><p>咕咕通过上一期<a href="https://iwanlab.com/chatgpt-plus-depay/">【保姆级教程】从零开通ChatGPT Plus</a>介绍的<a href="https://gao.ee/okx">欧易</a>完成充币，</p><img src="https://img.laoda.de/i/2023/04/14/xeaf04-0.webp" alt="image-20230414201936564" style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/04/14/xedqoz-0.webp" alt="image-20230414201952037" style="zoom: 33%;" /><p>注意我们选了<code>TRX</code>，对应的链就是<code>USDC-TRC20</code>，</p><img src="https://img.laoda.de/i/2023/04/14/xeq3zz-0.webp" alt="image-20230414202009941" style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/04/14/xfgngq-0.webp" alt="image-20230414202133744" style="zoom:33%;" /><p>过一会儿，刷新网页，已经充值成功了。</p><img src="https://img.laoda.de/i/2023/04/14/xfahyc-0.webp" alt="image-20230414202104644" style="zoom:33%;" /><p>实测花费174.75RMB，充值23.5美元（161.02RMB），损耗13.73RMB</p><h3 id="2-5-绑定-OneKey-Card"><a href="#2-5-绑定-OneKey-Card" class="headerlink" title="2.5 绑定 OneKey Card"></a>2.5 绑定 OneKey Card</h3><p>充值完成后，回到账户主页，点击 【CVV】<a href="https://help.onekey.so/hc/article_attachments/6762025420943"><img src="https://help.onekey.so/hc/article_attachments/6762025420943" alt="card21.png"></a></p><p>输入谷歌二次验证码，查看 OneKey Card 信息</p><p><a href="https://help.onekey.so/hc/article_attachments/6762025430671"><img src="https://help.onekey.so/hc/article_attachments/6762025430671" alt="card22.png"></a></p><p><strong>绑定微信支付相关明细：</strong></p><ul><li><strong>线下支付</strong>。需要商家使用的 pos 机支持相应通道（Visa 或 Master），仅支持银联将无法支付</li><li><strong>线上支付</strong>。支付成功与否受「平台使用的收单工具的风控要求」及「账户信誉度及消费频率」影响</li></ul><h3 id="2-6-绑定支付宝"><a href="#2-6-绑定支付宝" class="headerlink" title="2.6 绑定支付宝"></a>2.6 绑定支付宝</h3><p>1.打开支付宝，点击【我的】–【银行卡】</p><p>2.点击添加银行卡</p><p>3.输入开通的卡号</p><p>4.输入 姓名、日期、安全码</p><p>5.绑定完成</p><p>6.开始使用</p><p><a href="https://help.onekey.so/hc/article_attachments/6762367957775"><img src="https://help.onekey.so/hc/article_attachments/6762367957775" alt="bd00.png"></a></p><h3 id="2-7-绑定微信"><a href="#2-7-绑定微信" class="headerlink" title="2.7 绑定微信"></a>2.7 绑定微信</h3><p>1.打开微信，点击【我】–【服务】</p><p>2.点击【钱包】</p><p>3.点击【银行卡】</p><p>4.点击 【添加银行卡】</p><p>5.输入支付密码</p><p>6.输入 OneKey Card 卡号</p><p>7.添加银行卡信息</p><p>8.点击下一步，完成绑定</p><p><a href="https://help.onekey.so/hc/article_attachments/6763126733327"><img src="https://help.onekey.so/hc/article_attachments/6763126733327" alt="wx.png"></a></p><p>消费场景的要求<br>1.如果是线下场景，使用微信支付，要看商家使用的pos机是否支持VISA通道，仅支持银联的那种是不行的。（即使支持微信支付，也不一定支持对应卡的通道）<br>2.如果是线上场景，主要是看平台风控的要求，有些账户信誉好、消费频繁等等可能会允许使用，但是有些账户如果风险比较高的话会被风控拒绝。这个是线上商家使用的收单工具和风控的严松决定的。</p><hr><p>以下内容摘自OneKey官网文档<a href="https://help.onekey.so/hc/zh-cn/categories/360000170236-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97">使用指南</a></p><h2 id="3-具体使用"><a href="#3-具体使用" class="headerlink" title="3. 具体使用"></a>3. 具体使用</h2><h3 id="3-1-如何使用-OneKey-Card？"><a href="#3-1-如何使用-OneKey-Card？" class="headerlink" title="3.1 如何使用 OneKey Card？"></a>3.1 如何使用 OneKey Card？</h3><p>登录后，点击「激活」选择您的卡片以及完成身份验证信息，即可领取卡片。</p><p>在使用卡片之前，需要进行充值，再获取CVV信息绑定到您的支付渠道使用。</p><h3 id="3-2-绑定微信支付相关明细："><a href="#3-2-绑定微信支付相关明细：" class="headerlink" title="3.2 绑定微信支付相关明细："></a>3.2 <strong>绑定微信支付相关明细：</strong></h3><ul><li><strong>线下支付</strong>。需要商家使用的 pos 机支持相应通道（Visa 或 Master），仅支持银联将无法支付</li><li><strong>线上支付</strong>。支付成功与否受「平台使用的收单工具的风控要求」及「账户信誉度及消费频率」影响</li></ul><h3 id="3-3-支付渠道使用建议"><a href="#3-3-支付渠道使用建议" class="headerlink" title="3.3 支付渠道使用建议"></a>3.3 支付渠道使用建议</h3><table><thead><tr><th>支付渠道</th><th>详情</th></tr></thead><tbody><tr><td>支付宝</td><td>小额订单消费无需额外手续费；超过200元，支付宝收取3%手续费</td></tr><tr><td>淘宝</td><td>绑卡消费，任何金额都会收取 3% 手续费</td></tr><tr><td>微信支付</td><td>京东、拼多多无额外手续费</td></tr><tr><td>美团</td><td>绑定后每次点外卖需要另外输入CVV和有效日期如果提示暂不支持该银行，直接在下一步输入CVV和有效日期即可</td></tr></tbody></table><h3 id="3-4-使用场景"><a href="#3-4-使用场景" class="headerlink" title="3.4 使用场景"></a>3.4 使用场景</h3><table><thead><tr><th>场景</th><th>服务</th></tr></thead><tbody><tr><td>支付渠道</td><td>Paypal, Google Pay, 支付宝 Alipay, 微信支付 WeChat Pay</td></tr><tr><td>线上购物</td><td>亚马逊, 沃尔玛, ebay, Shopee, Lazada, 京东, 淘宝, 拼多多</td></tr><tr><td>线上服务</td><td>OpenAI &#x2F; ChatGPT Plus API</td></tr><tr><td>生活服务</td><td>美团</td></tr></tbody></table><h3 id="3-5-如果线上支付渠道有疑问怎么办？"><a href="#3-5-如果线上支付渠道有疑问怎么办？" class="headerlink" title="3.5 如果线上支付渠道有疑问怎么办？"></a>3.5 如果线上支付渠道有疑问怎么办？</h3><p>这些渠道如果支付失败，或遇到风控，向客服声明是本人的虚拟卡即可。</p><h2 id="4-OneKey-Card-开通-ChatGPT-Plus-OpenAI-API-被拒了怎么办？"><a href="#4-OneKey-Card-开通-ChatGPT-Plus-OpenAI-API-被拒了怎么办？" class="headerlink" title="4. OneKey Card 开通 ChatGPT Plus &#x2F; OpenAI API 被拒了怎么办？"></a>4. OneKey Card 开通 ChatGPT Plus &#x2F; OpenAI API 被拒了怎么办？</h2><h3 id="4-1-ChatGPT-使用须知"><a href="#4-1-ChatGPT-使用须知" class="headerlink" title="4.1 ChatGPT 使用须知"></a>4.1 ChatGPT 使用须知</h3><p>ChatGPT 目前仅接受特定地区开通，信用卡所属地也需要是对应可用区域。检查 IP 较为严格。</p><p>如果您不在美国或者其他可用区域内，请注意进行以下操作。</p><h3 id="4-2-建议"><a href="#4-2-建议" class="headerlink" title="4.2 建议"></a>4.2 建议</h3><ul><li>浏览器开启「无痕模式」</li><li>生成并使用跟IP一样的账单地址</li><li>如果还是不行，考虑切换 IP。有些 VPN 服务的 IP 使用人数太多，被高概率风控，推荐使用更好的 VPN 服务。</li></ul><h2 id="5-常见问题"><a href="#5-常见问题" class="headerlink" title="5. 常见问题"></a>5. 常见问题</h2><h3 id="5-1-需要使用OneKey硬件钱包或App才能开卡吗？"><a href="#5-1-需要使用OneKey硬件钱包或App才能开卡吗？" class="headerlink" title="5.1 需要使用OneKey硬件钱包或App才能开卡吗？"></a>5.1 需要使用OneKey硬件钱包或App才能开卡吗？</h3><p>不需要。但是推荐您使用 OneKey 硬件钱包管理您的数字资产，在需要消费的时候将资金充值到 OneKey Card 账户上。</p><h3 id="5-2-这需要绑定到某个区块链账户进行自动扣款吗？"><a href="#5-2-这需要绑定到某个区块链账户进行自动扣款吗？" class="headerlink" title="5.2 这需要绑定到某个区块链账户进行自动扣款吗？"></a>5.2 这需要绑定到某个区块链账户进行自动扣款吗？</h3><p>不需要。您只需注册或登录 OneKey Card 网站，在完成身份认证后，对该卡片的数字资产地址进行充值使用，将会按照充值时汇率换算为美元可供消费。</p><h3 id="5-3-支持什么币种和网络充值？"><a href="#5-3-支持什么币种和网络充值？" class="headerlink" title="5.3 支持什么币种和网络充值？"></a>5.3 支持什么币种和网络充值？</h3><p>请查看帮助中心页面：<a href="https://help.onekey.so/hc/zh-cn/articles/6726726855823">支持充值的币种和网络</a></p><h3 id="5-4-OneKey-Card-是信用卡吗？"><a href="#5-4-OneKey-Card-是信用卡吗？" class="headerlink" title="5.4 OneKey Card 是信用卡吗？"></a>5.4 OneKey Card 是信用卡吗？</h3><p>不是。这是预付卡，不可透支。</p><h3 id="5-5-在转账到-OneKey-Card-以后依然是自托管模式的资产吗？"><a href="#5-5-在转账到-OneKey-Card-以后依然是自托管模式的资产吗？" class="headerlink" title="5.5 在转账到 OneKey Card 以后依然是自托管模式的资产吗？"></a>5.5 在转账到 OneKey Card 以后依然是自托管模式的资产吗？</h3><p>不是。您的资金从 OneKey 钱包转出前，依然是自托管模式的资产，一旦转到 OneKey Card 账户后，将不再是自托管模式的方式。在 OneKey Card 账户收到数字资产后，会转换为美元并转移到发卡机构，如：Visa、MasterCard。</p><h3 id="5-6-有额度上限吗？"><a href="#5-6-有额度上限吗？" class="headerlink" title="5.6 有额度上限吗？"></a>5.6 有额度上限吗？</h3><p>无额度上限，请尽情使用。</p><p>更多文档内容，可以参考官网：<a href="https://help.onekey.so/hc/zh-cn/categories/360000170236-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97">使用指南</a></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>OneKey 帮助中心：<a href="https://help.onekey.so/hc/zh-cn/categories/360000170236-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97">https://help.onekey.so/hc/zh-cn/categories/360000170236-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97</a></p>]]></content>
      
      
      <categories>
          
          <category> Web3相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Depay </tag>
            
            <tag> Dupay </tag>
            
            <tag> OneKey </tag>
            
            <tag> 加密货币 </tag>
            
            <tag> USDT </tag>
            
            <tag> USDC </tag>
            
            <tag> 欧易 </tag>
            
            <tag> 币安 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023 - RackNerd 活动汇总 整理帖！附最新复活节活动套餐</title>
      <link href="/archives/racknerd-easter-2023/"/>
      <url>/archives/racknerd-easter-2023/</url>
      
        <content type="html"><![CDATA[<p>如果你还不了解 <a href="https://blog.laoda.de/tags/racknerd">RackNerd</a>，可以看这篇文章：<a href="https://blog.laoda.de/archives/cheap-vps-racknerd">【VPS选购分享】Racknerd——曾经的“四大金刚”，如今的性价比之王</a></p><p>更多套餐可以参考这边：<a href="https://blog.laoda.de/vps.html">https://blog.laoda.de/vps.html</a></p><h2 id="不同机房IP测试"><a href="#不同机房IP测试" class="headerlink" title="不同机房IP测试"></a>不同机房IP测试</h2><ul><li>德克萨斯州达拉斯(测试IP: 198.23.249.100)</li><li>纽约(测试(IP: 192.3.81.8)</li><li>新泽西州(测试IP: 192.3.165.30)</li><li>亚特兰大(测试IP: 107.173.164.160)</li><li>伊利诺伊州芝加哥(测试IP: 198.23.228.15)</li><li>德克萨斯州达拉斯(测试IP: 198.23.249.100)</li><li>西雅图(测试IP: 192.3.253.2)</li><li>加利福尼亚州 圣何塞(测试IP: 192.210.207.88) [热门机房，补货可选了]</li></ul><h3 id="注意："><a href="#注意：" class="headerlink" title="注意："></a><strong>注意：</strong></h3><p>RN的所有小鸡 购后都可以在LET论坛（lowendtalk）以下地址回复帖子申请流量翻倍：</p><p>申请地址：<a href="https://lowendtalk.com/discussion/182479/official-b-l-a-c-k-f-r-i-d-a-y-thread-community-endorsed-take-a-peek-racknerds-black-friday#latest">https://lowendtalk.com/discussion/182479/official-b-l-a-c-k-f-r-i-d-a-y-thread-community-endorsed-take-a-peek-racknerds-black-friday#latest</a></p><p>在LET帖子回帖: <code>Double the bandwidth.  Order: xxxxxxxxx</code> (下单后邮件里有10位Order号) 即可。申请后等待一两天即可。</p><h2 id="最新复活节活动套餐"><a href="#最新复活节活动套餐" class="headerlink" title="最新复活节活动套餐"></a><strong>最新复活节活动套餐</strong></h2><h3 id="840MB套餐"><a href="#840MB套餐" class="headerlink" title="840MB套餐"></a><strong>840MB套餐</strong></h3><ul><li>1x vCPU 核心</li><li>840 MB 内存</li><li>10 GB SSD</li><li>1 TB 月流量</li><li>价格: $10.78&#x2F;年</li><li>订购链接: <a href="https://my.racknerd.com/aff.php?aff=1158&pid=766">点击购买</a></li></ul><h3 id="1-2GB-套餐"><a href="#1-2GB-套餐" class="headerlink" title="1.2GB 套餐"></a><strong>1.2GB 套餐</strong></h3><ul><li>1x vCPU 核心</li><li>1.2 GB 内存</li><li>30 GB SSD</li><li>3 TB 月流量</li><li>价格: $14.98&#x2F;年</li><li>订购链接: <a href="https://my.racknerd.com/aff.php?aff=1158&pid=767">点击购买</a></li></ul><h3 id="2GB-套餐"><a href="#2GB-套餐" class="headerlink" title="2GB 套餐"></a><strong>2GB 套餐</strong></h3><ul><li>2x vCPU 核心</li><li>2 GB 内存</li><li>45 GB SSD</li><li>5 TB 月流量</li><li>价格: $21.98&#x2F;年</li><li>订购链接: <a href="https://my.racknerd.com/aff.php?aff=1158&pid=768">点击购买</a></li></ul><h3 id="5GB-套餐"><a href="#5GB-套餐" class="headerlink" title="5GB 套餐"></a><strong>5GB 套餐</strong></h3><ul><li>3x vCPU 核心</li><li>5 GB 内存</li><li>100 GB SSD</li><li>10 TB 月流量</li><li>价格: $58.88&#x2F;年</li><li>订购链接: <a href="https://my.racknerd.com/aff.php?aff=1158&pid=769">点击购买</a></li></ul><p><strong>以下是RN之前的活动，目前都还可以下单，供参考和对比</strong></p><h2 id="2023年新年活动"><a href="#2023年新年活动" class="headerlink" title="2023年新年活动"></a><strong>2023年新年活动</strong></h2><h3 id="512-MB-套餐"><a href="#512-MB-套餐" class="headerlink" title="512 MB 套餐"></a>512 MB 套餐</h3><ul><li>512 MB 内存</li><li>1 CPU 核心</li><li>10 GB 高速SSD存储</li><li>1500 GB 月流量</li><li>1 Gbps 带宽</li><li>1 个IPv4 地址</li><li>可选机房: 芝加哥, 达拉斯, 新泽西, 亚特兰大, 圣何塞, 西雅图, 纽约</li><li>$10.18 &#x2F;年 (续费同价)</li><li>订购链接:<a href="https://my.racknerd.com/aff.php?aff=1158&pid=734">点击购买</a></li></ul><p><del>备注：目前圣何塞机房已无法选</del> 有了！</p><h3 id="1-GB-套餐"><a href="#1-GB-套餐" class="headerlink" title="1 GB 套餐"></a>1 GB 套餐</h3><ul><li>1 GB 内存</li><li>1 CPU 核心</li><li>25 GB 高速SSD存储</li><li>4000 GB 月流量</li><li>1 Gbps 带宽</li><li>1 个IPv4 地址</li><li>可选机房: 芝加哥, 达拉斯, 新泽西, 亚特兰大, 圣何塞, 西雅图, 纽约</li><li>$12.98 &#x2F;年 (续费同价)</li><li>订购链接:<a href="https://my.racknerd.com/aff.php?aff=1158&pid=735">点击购买</a></li></ul><h3 id="2-5-GB-套餐"><a href="#2-5-GB-套餐" class="headerlink" title="2.5 GB 套餐"></a>2.5 GB 套餐</h3><ul><li>2.5 GB 内存</li><li>2 CPU 核心</li><li>45 GB 高速SSD存储</li><li>6000 GB 月流量</li><li>1 Gbps 带宽</li><li>1 个IPv4 地址</li><li>可选机房: 洛杉矶DC-02, 芝加哥, 达拉斯, 新泽西, 亚特兰大, 圣何塞, 西雅图, 纽约</li><li>$24.88 &#x2F;年 (续费同价)</li><li>订购链接:<a href="https://my.racknerd.com/aff.php?aff=1158&pid=736">点击购买</a></li></ul><h3 id="4-GB-套餐"><a href="#4-GB-套餐" class="headerlink" title="4 GB 套餐"></a>4 GB 套餐</h3><ul><li>4 GB 内存</li><li>3 CPU 核心</li><li>70 GB 高速SSD存储</li><li>10000 GB 月流量</li><li>1 Gbps 带宽</li><li>1 个IPv4 地址</li><li>可选机房: 洛杉矶DC-02, 芝加哥, 达拉斯, 新泽西, 亚特兰大, 圣何塞, 西雅图, 纽约</li><li>$46.68 &#x2F;年 (续费同价)</li><li>订购链接:<a href="https://my.racknerd.com/aff.php?aff=1158&pid=737">点击购买</a></li></ul><h2 id="2022黑五的套餐"><a href="#2022黑五的套餐" class="headerlink" title="2022黑五的套餐"></a><strong>2022黑五的套餐</strong></h2><p>去年黑五的链接还可以下单，可以对比参考</p><h3 id="768-MB-套餐"><a href="#768-MB-套餐" class="headerlink" title="768 MB 套餐"></a>768 MB 套餐</h3><ul><li>768 MB 内存</li><li>1 CPU 核心</li><li>10 GB 高速SSD存储</li><li>1000 GB 月流量</li><li>1 Gbps 带宽</li><li>1 个IPv4 地址</li><li>$10.28 &#x2F;年 (续费同价)</li><li>订购链接:<a href="https://my.racknerd.com/aff.php?aff=1158&pid=695">点击购买</a></li></ul><h3 id="1-5-GB-套餐"><a href="#1-5-GB-套餐" class="headerlink" title="1.5 GB 套餐"></a>1.5 GB 套餐</h3><ul><li>1.5 GB 内存</li><li>1 CPU 核心</li><li>30 GB 高速SSD存储</li><li>3000 GB 月流量</li><li>1 Gbps 带宽</li><li>1 个IPv4 地址</li><li>$16.88 &#x2F;年 (续费同价)</li><li>订购链接:<a href="https://my.racknerd.com/aff.php?aff=1158&pid=696">点击购买</a></li></ul><h3 id="2-5-GB-套餐-1"><a href="#2-5-GB-套餐-1" class="headerlink" title="2.5 GB 套餐"></a>2.5 GB 套餐</h3><ul><li>2.5 GB 内存</li><li>2 CPU 核心</li><li>60 GB 高速SSD存储</li><li>7000 GB 月流量</li><li>1 Gbps 带宽</li><li>1 个IPv4 地址</li><li>$28.55 &#x2F;年 (续费同价)</li><li>订购链接:<a href="https://my.racknerd.com/aff.php?aff=1158&pid=697">点击购买</a></li></ul><h3 id="3-5-GB-套餐"><a href="#3-5-GB-套餐" class="headerlink" title="3.5 GB 套餐"></a>3.5 GB 套餐</h3><ul><li>3.5 GB 内存</li><li>2 CPU 核心</li><li>80 GB 高速SSD存储</li><li>10000 GB 月流量</li><li>1 Gbps 带宽</li><li>1 个IPv4</li><li>$38.88 &#x2F;年 (续费同价)</li><li>订购链接:<a href="https://my.racknerd.com/aff.php?aff=1158&pid=698">点击购买</a></li></ul><h3 id="4-5-GB-套餐"><a href="#4-5-GB-套餐" class="headerlink" title="4.5 GB 套餐"></a>4.5 GB 套餐</h3><ul><li>4.5 GB 内存</li><li>3 CPU 核心</li><li>100 GB 高速SSD存储</li><li>12000 GB 月流量</li><li>1 Gbps 带宽</li><li>1 个IPv4 地址</li><li>$48.77 &#x2F;年 (续费同价)</li><li>订购链接:<a href="https://my.racknerd.com/aff.php?aff=1158&pid=699">点击购买</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Racknerd </tag>
            
            <tag> 复活节 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩儿的Docker项目】任何地方无障碍快速访问！ChatGPT Next Web——一键免费部署你的私人 ChatGPT 网页应用</title>
      <link href="/archives/docker-compose-install-chatgpt-next-web/"/>
      <url>/archives/docker-compose-install-chatgpt-next-web/</url>
      
        <content type="html"><![CDATA[<p>今天来分享一个私人 ChatGPT 网页应用——ChatGPT Next Web，让你随时随地方便使用ChatGPT！</p><p><img src="https://img.laoda.de/i/2023/04/10/r3hz62-0.webp" alt="主界面"></p><h2 id="1-ChatGPT-Next-Web-简单介绍（来自GitHub）"><a href="#1-ChatGPT-Next-Web-简单介绍（来自GitHub）" class="headerlink" title="1. ChatGPT Next Web 简单介绍（来自GitHub）"></a>1. ChatGPT Next Web 简单介绍（来自GitHub）</h2><h3 id="1-1-主要功能"><a href="#1-1-主要功能" class="headerlink" title="1.1 主要功能"></a>1.1 主要功能</h3><ul><li>在 1 分钟内使用 Vercel <strong>免费一键部署</strong></li><li>精心设计的 UI，响应式设计，支持深色模式</li><li>极快的首屏加载速度（~100kb）</li><li>海量的内置 prompt 列表，来自<a href="https://github.com/PlexPt/awesome-chatgpt-prompts-zh">中文</a>和<a href="https://github.com/f/awesome-chatgpt-prompts">英文</a></li><li>自动压缩上下文聊天记录，在节省 Token 的同时支持超长对话</li><li>一键导出聊天记录，完整的 Markdown 支持</li><li>拥有自己的域名？好上加好，绑定后即可在任何地方<strong>无障碍</strong>快速访问</li></ul><p>废话不多说，我们马上开始搭建！</p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p><img src="https://img.laoda.de/i/2023/04/10/sd3eht-0.webp" alt="1ffad7a7971a6a5442756d5a51fbc22f.png"></p><p>演示 Demo: <a href="https://chat-gpt-next-web.vercel.app/">https://chat-gpt-next-web.vercel.app/</a><br>反馈 Issues: <a href="https://github.com/Yidadaa/ChatGPT-Next-Web/issues">https://github.com/Yidadaa/ChatGPT-Next-Web/issues</a><br>加入 Discord: <a href="https://discord.gg/zrhvHCr79N">https://discord.gg/zrhvHCr79N</a><br>打赏开发者: <a href="https://user-images.githubusercontent.com/16968934/227772541-5bcd52d8-61b7-488c-a203-0330d8006e2b.jpg">请项目原作者喝咖啡</a></p><p>官方有两种搭建方式，第一种无需服务器，直接部署在Vercel 上；第二种部署在自己的服务器上。</p><h2 id="3-开始使用"><a href="#3-开始使用" class="headerlink" title="3. 开始使用"></a>3. 开始使用</h2><h3 id="3-1-部署在Vercel上（可能需要一个域名）"><a href="#3-1-部署在Vercel上（可能需要一个域名）" class="headerlink" title="3.1 部署在Vercel上（可能需要一个域名）"></a>3.1 部署在Vercel上（可能需要一个域名）</h3><ol><li>准备好你的 <a href="https://platform.openai.com/account/api-keys">OpenAI API Key</a>;</li><li>点击右侧按钮开始部署： <a href="https://vercel.com/new/clone?repository-url=https://github.com/Yidadaa/ChatGPT-Next-Web&env=OPENAI_API_KEY&env=CODE&project-name=chatgpt-next-web&repository-name=ChatGPT-Next-Web">Deploy with Vercel</a>，直接使用 Github 账号登录即可，记得在环境变量页填入 API Key 和<a href="https://github.com/Yidadaa/ChatGPT-Next-Web/blob/main/README_CN.md#%E9%85%8D%E7%BD%AE%E9%A1%B5%E9%9D%A2%E8%AE%BF%E9%97%AE%E5%AF%86%E7%A0%81">页面访问密码</a> CODE；</li><li>部署完毕后，即可开始使用；</li><li>（可选）<a href="https://vercel.com/docs/concepts/projects/domains/add-a-domain">绑定自定义域名</a>：Vercel 分配的域名 DNS 在某些区域被污染了，绑定自定义域名即可直连。</li></ol><h3 id="3-2-部署在自己的服务器上"><a href="#3-2-部署在自己的服务器上" class="headerlink" title="3.2 部署在自己的服务器上"></a>3.2 部署在自己的服务器上</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">chatgpt-next-web:</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;8090:3000&#x27;</span></span><br><span class="line">        <span class="attr">environment:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">OPENAI_API_KEY=sk-xxxx</span>    <span class="comment"># 填写你的API KEY</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">CODE=your-password</span>    <span class="comment"># 填一个密码，不然你的额度很快就会被刷完</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">yidadaa/chatgpt-next-web</span></span><br></pre></td></tr></table></figure><p>这边直接丢出核心的 <code>docker-compose.yaml</code> 文件，熟悉 docker 环境的小伙伴可以直接拷贝搭建。</p><p><strong>注意：</strong></p><p><code>OPENAI_API_KEY</code> 可以参考咕咕去年12月写的文章：<a href="https://blog.laoda.de/archives/play-with-chatgpt">从注册到畅玩ChatGPT——目前世界上最先进的民用AI聊天机器人</a>注册完成ChatGPT之后，访问：<a href="https://platform.openai.com/account/api-keys">https://platform.openai.com/account/api-keys</a> 获取。</p><p><img src="https://img.laoda.de/i/2023/04/10/sd98us-0.webp" alt="2af1a9097e385d570fd60a55d5e31976.png"></p><p>推荐阅读：<a href="https://blog.laoda.de/archives/chatgpt-and-openai">大白话！简单解释ChatGPT和OpenAI还有API KEYS</a></p><p> <code>CODE</code> 记得千万写上，不然网页暴露在互联网上，很快你的API额度就会被刷完。</p><p>以下是服务器部署的详细搭建教程。</p><h2 id="4-搭建环境"><a href="#4-搭建环境" class="headerlink" title="4. 搭建环境"></a>4. 搭建环境</h2><blockquote><p>更正：貌似被block也没事，我们是调用API的方式。</p></blockquote><p>选用服务器先测试一下是否可以访问ChatGPT：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -Ls https://cpp.li/openai)</span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2023/04/10/sddes0-0.webp" alt="28ee855c0e93ff28e03853fc50c6089b.png"></p><ul><li>服务器：<del>腾讯香港轻量应用服务器 24 元 &#x2F; 月 VPS 一台</del> 咕咕自己搭建用的是硅谷的<a href="https://loll.cc/tx">腾讯轻量应用服务器</a> ，（这次最好选 <strong>欧美的服务器</strong>）如果是小白刚开始玩的话，也可以选择购买 <a href="https://gao.ee/lca">莱卡云</a> 的服务器，（莱卡云服务器介绍：<a href="https://blog.laoda.de/archives/vps-lcayun">点击查看</a>）</li><li>系统：Debian 11 （<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD 脚本</a> 非必需 DD，用原来的系统也 OK，之后教程都是用 Debian 或者 Ubuntu 搭建～）</li><li>安装好 Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需但建议】域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>【非必需】提前安装好宝塔面板海外版本 aapanel，并安装好 Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程选用】安装好 Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><blockquote><p>服务器要求：内存建议1G 以上。</p></blockquote><h2 id="5-搭建视频"><a href="#5-搭建视频" class="headerlink" title="5. 搭建视频"></a>5. 搭建视频</h2><h3 id="5-1-YouTube："><a href="#5-1-YouTube：" class="headerlink" title="5.1 YouTube："></a>5.1 YouTube：</h3><p>视频地址：<a href="https://youtu.be/C97PAwJ9fkA">https://youtu.be/C97PAwJ9fkA</a></p><h3 id="5-2-哔哩哔哩"><a href="#5-2-哔哩哔哩" class="headerlink" title="5.2 哔哩哔哩"></a>5.2 哔哩哔哩</h3><p>哔哩哔哩【高清版本可以点击去吐槽到 B 站观看】：<joe-bilibili bvid="BV1w84y1M7zG"></joe-bilibili></p><h2 id="6-搭建方式"><a href="#6-搭建方式" class="headerlink" title="6. 搭建方式"></a>6. 搭建方式</h2><p>如果你不是用的腾讯云的轻量应用服务器，可以直接跳到 6.1 部分。</p><h3 id="安装系统（腾讯云轻量应用服务器）"><a href="#安装系统（腾讯云轻量应用服务器）" class="headerlink" title="安装系统（腾讯云轻量应用服务器）"></a>安装系统（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlyhcz-2.webp" alt="e59713fba8726d3cb55ae11bca83fe3c.png"></p><p>腾讯云轻量服务器最大的特点就是 “轻量”，相比 CVM，更适合小白上手，这边我们之间选择 Docker 基础镜像，就可以省去后面安装 Docker 的步骤 <del>（如果你非要用国内的服务器，这边装的 Docker 镜像还会帮你配置好国内镜像源，让你加速访问 docker 镜像资源）</del> 不要用国内的 。</p><h3 id="登陆（腾讯云轻量应用服务器）"><a href="#登陆（腾讯云轻量应用服务器）" class="headerlink" title="登陆（腾讯云轻量应用服务器）"></a>登陆（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlzlj7-2.webp" alt="2722040ee311eb4a9ebf2a4945bf38f4.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm0gv8-2.webp" alt="c0b5d360053746c4095d592967ee401f.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm1vqw-2.webp" alt="e0ba858f021b846ad0abc27acf5008c2.png"></p><h3 id="6-1-安装-Docker-与-Nginx-Proxy-Manager"><a href="#6-1-安装-Docker-与-Nginx-Proxy-Manager" class="headerlink" title="6.1 安装 Docker 与 Nginx Proxy Manager"></a>6.1 安装 Docker 与 Nginx Proxy Manager</h3><p>可以直接参考这篇内容：</p><p><a href="https://blog.laoda.de/archives/nginxproxymanager">https://blog.laoda.de/archives/nginxproxymanager</a></p><h3 id="6-2-创建安装目录"><a href="#6-2-创建安装目录" class="headerlink" title="6.2 创建安装目录"></a>6.2 创建安装目录</h3><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/chatgpt-web</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/chatgpt-web</span><br></pre></td></tr></table></figure><p>这边我们直接用 docker 的方式安装。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure><p>英文输入法下，按 <code>i</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">chatgpt-next-web:</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;8090:3000&#x27;</span></span><br><span class="line">        <span class="attr">environment:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">OPENAI_API_KEY=sk-xxxx</span>    <span class="comment"># 填写你的API KEY</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">CODE=your-password</span>    <span class="comment"># 填一个密码，不然你的额度很快就会被刷完</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">yidadaa/chatgpt-next-web</span></span><br></pre></td></tr></table></figure><p>修改好之后，注意切换成英文输入法，然后按一下 <code>esc</code>，然后 <code>:wq</code> 保存退出。</p><h3 id="6-3-打开服务器防火墙（非必需）并访问网页"><a href="#6-3-打开服务器防火墙（非必需）并访问网页" class="headerlink" title="6.3 打开服务器防火墙（非必需）并访问网页"></a>6.3 打开服务器防火墙（非必需）并访问网页</h3><p>打开防火墙的端口 <code>8090</code></p><p>举例，腾讯云打开方法如下（部分服务商没有自带的面板防火墙，就不用这步操作了）：</p><img src="https://img.laoda.de/i/2022/06/30/zlio5h-2.webp" alt="image-20220630215240864" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/06/30/10h3dqt-2.webp" alt="image-20220630220546335" style="zoom:33%;" /><p>图中示例填的是 <code>5230</code>，备注填的是 <code>memos</code>，这边我们填 <code>8090</code>，示例填 <code>chatgpt-web</code> ，确定即可（如果你在 docker-compose 文件里换了 <code>9009</code>，这边就需要填 <code>9009</code>，以此类推）</p><img src="https://img.laoda.de/i/2022/08/19/o4byqz-2.webp" alt="image-20220819145844555" style="zoom:33%;" /><p>查看端口是否被占用（以 <code>8090</code> 为例），输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:8090  <span class="comment">#查看 8090 端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果啥也没出现，表示端口未被占用，我们可以继续下面的操作了～</p><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装 lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用（被占用了就修改一下端口，比如改成 <code>8081</code>，注意 docker 命令行里和防火墙都要改）</p><p>最后：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/chatgpt-web    <span class="comment"># 来到 dockercompose 文件所在的文件夹下</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>理论上我们就可以输入 <code>http://ip:8090</code> 访问安装了。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器 IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的 IP。</p><p>2、遇到访问不了的情况，请再次检查在宝塔面板的防火墙和服务商的后台防火墙是否打开对应了端口。</p></blockquote><p>有的小伙伴可能想搭建起来分享给其他人使用，如果后续想要分享给别人，IP + 端口太不优雅了，咕咕建议大家还是搞一个域名，容易记，看起来也更正规一点。这样可以做 https，会让网页更安全。</p><p>而且 <a href="https://loll.cc/ns">namesilo</a> 上面 xyz 后缀的域名一年就 7 块钱，可以年抛。（冷知识，namesilo上 6位数字的xyz续费永远都是0.99美元 &#x3D; &#x3D;）</p><p>如果想要长期使用，还是建议买 com 后缀的域名，更加正规一些，可以输入 <code>laodade</code> 来获得 1 美元的优惠（不知道现在还有没有）</p><p><a href="https://loll.cc/ns">namesilo</a> 自带隐私保护，咕咕一直在用这家，价格也是这些注册商里面比较低的，关键是他家不像其他家域名注册商，没有七七八八的套路！（就是后台界面有些<del>丑</del> 古老 &#x3D; &#x3D;）</p><p><a href="https://blog.laoda.de/archives/namesilo">【域名购买】Namesilo 优惠码和域名解析教程（附带服务器购买推荐和注意事项）</a></p><p>我们接着往下看！</p><h3 id="6-4-更新-chatgpt-web"><a href="#6-4-更新-chatgpt-web" class="headerlink" title="6.4 更新 chatgpt-web"></a>6.4 更新 chatgpt-web</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/chatgpt-web</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/chatgpt-web /root/data/docker_data/chatgpt-web.archive  <span class="comment"># 万事先备份，以防万一</span></span><br><span class="line"></span><br><span class="line">docker-compose pull</span><br><span class="line"></span><br><span class="line">docker-compose up -d    <span class="comment"># 请不要使用 docker-compose stop 来停止容器，因为这么做需要额外的时间等待容器停止；docker-compose up -d 直接升级容器时会自动停止并立刻重建新的容器，完全没有必要浪费那些时间。</span></span><br><span class="line"></span><br><span class="line">docker image prune  <span class="comment"># prune 命令用来删除不再使用的 docker 对象。删除所有未被 tag 标记和未被容器使用的镜像</span></span><br></pre></td></tr></table></figure><p>提示：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WARNING! This will remove all dangling images.</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] </span><br></pre></td></tr></table></figure><p>输入 <code>y</code></p><p>利用 Docker 搭建的应用，更新非常容易～</p><h3 id="6-5-卸载-chatgpt-web"><a href="#6-5-卸载-chatgpt-web" class="headerlink" title="6.5 卸载 chatgpt-web"></a>6.5 卸载 chatgpt-web</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/chatgpt-web</span><br><span class="line"></span><br><span class="line">docker-compose down</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/chatgpt-web  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>可以卸载得很干净。</p><h2 id="7-反向代理"><a href="#7-反向代理" class="headerlink" title="7. 反向代理"></a>7. 反向代理</h2><p>我们要用域名而不是IP+端口的方式来访问我们的服务！</p><h3 id="7-1-利用-Nginx-Proxy-Manager"><a href="#7-1-利用-Nginx-Proxy-Manager" class="headerlink" title="7.1 利用 Nginx Proxy Manager"></a>7.1 利用 Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p><img src="https://img.laoda.de/i/2022/10/16/n6t02e-2.webp" alt="image-20221016140213282"></p><p>之后，登陆 Nginx Proxy Manager（不会的看这个：<strong>安装 Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称 NPM）会用到 <code>80</code>、<code>443</code> 端口，所以本机不能占用（比如原来就有 Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom: 33%;" /><img src="https://img.laoda.de/i/2023/05/06/f9sfof-0.webp" alt="image-20230403155113921" style="zoom:50%;" /><blockquote><p> 注意填写对应的 <code>域名</code>、<code>IP</code> 和 <code>端口</code>，按文章来的话，应该是 <code>8090</code></p></blockquote><p><strong>IP 填写：</strong></p><p>如果 Nginx Proxy Manager 和 chatgpt-web 在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的 Docker 容器内部 IP。</p><p><img src="https://img.laoda.de/i/2022/09/29/pcdnz5-2.webp"></p><p>否则直接填 <code>chatgpt-web</code> 所在的服务器 IP 就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom: 33%;" /><p>再次打开，勾选这些：</p><p><img src="https://img.laoda.de/i/2022/10/16/n7nn6e-2.webp" alt="image-20221016140356324"></p><p>然后就可以用域名来安装访问了。</p><h3 id="7-2-利用宝塔面板"><a href="#7-2-利用宝塔面板" class="headerlink" title="7.2 利用宝塔面板"></a>7.2 利用宝塔面板</h3><p>发现还是有不少小伙伴习惯用宝塔面板，这边也贴一个宝塔面板的反代配置：</p><p>直接新建一个站点，不要数据库，不要 php，纯静态即可。</p><p>然后打开下面的配置，修改 Nginx 的配置。</p><p><img src="https://img.laoda.de/i/2022/08/19/ov4xrt-2.webp" alt="image-20220819150345725"></p><p><img src="https://img.laoda.de/i/2022/08/19/owbbkb-2.webp" alt="image-20220819150542867"></p><p>代码如下：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:8090/;       <span class="comment"># 注意改成你实际使用的端口</span></span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此方法对 90% 的反向代理都能生效，然后就可以用域名来安装访问了。</p><p>有同学可能会问，为什么不直接用宝塔自带的反向代理功能。</p><p><img src="https://img.laoda.de/i/2022/08/19/oxf800-2.webp" alt="image-20220819150730128"></p><p>也可以，不过咕咕自己之前遇到过当有多个网站需要反代的时候，在这边设置会报错的情况 &#x3D; &#x3D; </p><p>所以后来就不用了，直接用上面的方法来操作了。</p><h2 id="8-使用教程"><a href="#8-使用教程" class="headerlink" title="8. 使用教程"></a>8. 使用教程</h2><p>这边等录视频的时候好好说，大家自己摸索一下 &#x3D; &#x3D;</p><p>记得输入之前<code>docker-compose.yml</code> 里面的密码～</p><p><img src="https://img.laoda.de/i/2023/04/10/sdp3cg-0.webp" alt="image-20230410171603073"></p><p><img src="https://img.laoda.de/i/2023/04/10/sds34i-0.webp" alt="image-20230410171616981"></p><p>大家可以自己先尝试看看，不难，详细的操作的话等咕咕周末搞个视频见出来。</p><h2 id="9-待完善的地方"><a href="#9-待完善的地方" class="headerlink" title="9. 待完善的地方"></a>9. 待完善的地方</h2><p>暂无</p><h2 id="10-结尾"><a href="#10-结尾" class="headerlink" title="10. 结尾"></a>10. 结尾</h2><p>祝大家用得开心，有问题可以去 GitHub 提 <a href="https://github.com/Yidadaa/ChatGPT-Next-Web/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，有能力给ChatGPT Next Web做贡献的同学，也欢迎积极加入到 <a href="https://github.com/Yidadaa/ChatGPT-Next-Web">项目</a> 中来，贡献自己的一份力量！</p><p>最后，感谢ChatGPT Next Web 开发人员们的辛苦付出，让我们能用到这么优秀的项目！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>演示 Demo: <a href="https://chat-gpt-next-web.vercel.app/">https://chat-gpt-next-web.vercel.app/</a><br>GitHub: <a href="https://github.com/Yidadaa/ChatGPT-Next-Web">https://github.com/Yidadaa/ChatGPT-Next-Web</a></p><h2 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h2><p><a href="https://blog.laoda.de/archives/chatgpt-plus-depay">【保姆级教程】从零开通ChatGPT Plus</a></p><p><a href="https://blog.laoda.de/archives/play-with-chatgpt">从注册到畅玩ChatGPT——目前世界上最先进的民用AI聊天机器人</a></p><p><a href="https://blog.laoda.de/archives/chatgpt-plugins-prompts">玩转ChatGPT必备的插件&amp;客户端&amp;Prompts</a></p><p><a href="https://blog.laoda.de/archives/chatgpt-and-openai">大白话！简单解释ChatGPT和OpenAI还有API KEYS</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ChatGPT </tag>
            
            <tag> OpenAI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>咕咕开设了一个知识星球</title>
      <link href="/archives/my-knowledge-planet/"/>
      <url>/archives/my-knowledge-planet/</url>
      
        <content type="html"><![CDATA[<p>大家好！我是咕咕。最近，由于工作和生活的繁忙，时间精力变得非常有限。为了能集中精力更好地回答小伙伴的问题和满足大家的不同需求，我尝试开设了一个付费项目——知识星球。</p><h2 id="🔥知识星球优势🔥"><a href="#🔥知识星球优势🔥" class="headerlink" title="🔥知识星球优势🔥"></a>🔥知识星球优势🔥</h2><ul><li>优先回答：在知识星球里的提问，我会在每天的休息时间第一时间回答（需要是正经的内容 &#x3D; &#x3D; ）；</li><li>系统教程：前期会以更新Linux、搭建网站等基础教程为主，让小白用户轻松掌握技能，也会不定期分享一些好玩的内容；</li><li>小白友好：星球内容目前定位于小白用户，老鸟的话个人感觉其实不是很有必要加入了，当然想要支持咕咕的也可以，咕咕也会不定期在星球里送一些服务器啥的。</li></ul><h2 id="💰加入费用💰"><a href="#💰加入费用💰" class="headerlink" title="💰加入费用💰"></a>💰加入费用💰</h2><p>1年365人民币，1天1块钱。</p><h2 id="🌟如何加入🌟"><a href="#🌟如何加入🌟" class="headerlink" title="🌟如何加入🌟"></a>🌟如何加入🌟</h2><p>点击下方链接，就可以加入了。</p><p>加入星球：<a href="https://t.zsxq.com/0csBuffuG">https://t.zsxq.com/0csBuffuG</a></p><img src="https://img.laoda.de/i/2023/04/07/fmvyh3-0.webp" alt="28885848525581T4" style="zoom:33%;" /><h3 id="❗注意❗"><a href="#❗注意❗" class="headerlink" title="❗注意❗"></a><strong>❗注意❗</strong></h3><p>当然，博客评论区的留言咕咕依然会尽量回答的，只是时间和精力有限，无法保证回答速度。如果你觉得需要更快速、更专业的回答，欢迎加入知识星球！</p><p>🌈一起学习，共同进步！生命不息，折腾不止！期待在知识星球与你相遇！🌈</p><p>点击加入👉【<a href="https://t.zsxq.com/0csBuffuG">知识星球——咕咕的VPS折腾群</a>】👈，开启折腾之旅！</p><img src="https://img.laoda.de/i/2023/04/07/fo5kso-0.webp" alt="28885848525581T3" style="zoom: 25%;" />]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 知识星球 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩儿的Docker项目】创建个人主页！LittleLink——一个类似LinkTree功能的开源项目，非常适合创建个人链接聚合页！</title>
      <link href="/archives/docker-compose-install-littlelink/"/>
      <url>/archives/docker-compose-install-littlelink/</url>
      
        <content type="html"><![CDATA[<p>今天来分享一个类似LinkTree功能的开源项目——LittleLink。</p><p><img src="https://img.laoda.de/i/2023/04/03/p81gty-0.webp" alt="LittleLink Custom"></p><p>大致实现一个这样的效果。</p><p><img src="https://img.laoda.de/i/2023/04/03/pc7s1k-0.webp" alt="WX20230403-152256@2x"></p><p><img src="https://img.laoda.de/i/2023/04/03/pc9uot-0.gif" alt="2023-04-03 15-21-54.2023-04-03 15_23_06"></p><p><img src="https://img.laoda.de/i/2023/04/03/ph5m89-0.webp" alt="image-20230403154044492"></p><p>基本上页面的内容都可以自定义，你可以添加任意多的社交平台链接在上面，自带后台，方便修改。Docker搭建方便省力。</p><h2 id="1-LittleLink-简单介绍（GitHub翻译）"><a href="#1-LittleLink-简单介绍（GitHub翻译）" class="headerlink" title="1. LittleLink 简单介绍（GitHub翻译）"></a>1. LittleLink 简单介绍（GitHub翻译）</h2><p>LittleLink Custom 提供了一种独特的在线链接管理和分享解决方案。我们的平台提供了一个类似于 Linktree 的网站，使用户可以克服社交媒体平台上只能添加一个链接的限制。通过链接到您的 LittleLink Custom 页面，用户可以轻松访问他们需要的所有链接，集中在一个方便的位置。</p><p>我们的平台允许用户在自己的 Web 服务器或 Web 托管提供商上托管他们的链接，确保易于访问和控制他们的在线存在。此外，其他用户可以注册并创建自己的链接，使其成为管理多个链接的企业和组织的理想解决方案。</p><p>我们的平台还包括管理面板，使用户可以轻松访问其他用户的链接，这使其成为管理多个链接的企业和组织的理想解决方案。总的来说，LittleLink Custom 为简化在线存在提供了高效和用户友好的解决方案。</p><p>LittleLink Custom 是 LittleLink Admin 的一个分支，其目标是使管理面板更易于使用和设置，特别适合没有经验和第一次使用的用户，还增加了许多定制功能，以便根据个人用户的 LittleLink 页面进行主题定制。</p><p>LittleLink Custom 的开发旨在简化对 LittleLink 和 LittleLink Admin 的使用和设置，特别适合具有最少编码经验或有限的 Web 托管知识的个人用户。这个项目的设计方式允许将 LittleLink Custom 目录拖放到您的 Web 托管的根目录上，消除了源代码操作或处理复杂终端命令的需求。</p><p>除了用户友好的设置过程外，这个分支还提供了许多定制功能，以增强用户体验，包括根据操作系统或浏览器主题设置自动应用的暗黑模式，以及美观的响应式设计的轻便不显眼的 CSS 动画效果。这些和其他小的改变，在组合起来时，提供了一个显著的功能集，使 LittleLink Custom 与其他分支有所区别。</p><p><strong>总结，它就是一个可以高度自定义的个人链接聚合页。</strong></p><p>支持：</p><ul><li>多用户注册</li><li>自定义css</li><li>添加各种链接</li><li>自定义页脚</li><li>自定义主题</li><li>链接点击次数统计</li><li>支持docker部署，简单快捷</li></ul><p>等等等等……</p><p>如何你是一个自媒体人员，有很多自己的社交平台，这个项目就非常适合你。</p><p>废话不多说，我们马上开始搭建！</p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p>官网：<a href="https://littlelink-custom.com/">https://littlelink-custom.com/</a><br>咕咕的Demo：<a href="https://gugu.ge/">https://gugu.ge/</a><br>官方的Demo：<a href="https://littlelink-custom.llc.ovh/">https://littlelink-custom.llc.ovh/</a><br>GitHub地址：<a href="https://github.com/JulianPrieber/littlelink-custom">https://github.com/JulianPrieber/littlelink-custom</a><br>GitHub地址：<a href="https://github.com/JulianPrieber/llc-docker">https://github.com/JulianPrieber/llc-docker</a><br>官方Docker页面：<a href="https://hub.docker.com/r/julianprieber/littlelink-custom">https://hub.docker.com/r/julianprieber/littlelink-custom</a><br>文档页面：<a href="https://docs.littlelink-custom.com/">https://docs.littlelink-custom.com/</a></p><p>这边直接丢出核心的 <code>docker-compose.yaml</code> 文件，熟悉 docker 环境的小伙伴可以直接拷贝搭建。</p><p><code>littlelink</code> 部署：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">littlelink-custom:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">julianprieber/littlelink-custom</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">littlelink-custom</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">littlelink-custom</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">HTTP_SERVER_NAME:</span> <span class="string">&quot;gugu.ge&quot;</span>   <span class="comment"># gugu.ge 改成自己的域名</span></span><br><span class="line">      <span class="attr">HTTPS_SERVER_NAME:</span> <span class="string">&quot;gugu.ge&quot;</span> <span class="comment"># gugu.ge 改成自己的域名</span></span><br><span class="line">      <span class="attr">SERVER_ADMIN:</span> <span class="string">&quot;admin@gugu.com&quot;</span> <span class="comment"># admin@gugu.com 改成自己的账号</span></span><br><span class="line">      <span class="attr">TZ:</span> <span class="string">&quot;Asia/Shanghai&quot;</span></span><br><span class="line">      <span class="attr">PHP_MEMORY_LIMIT:</span> <span class="string">&quot;512M&quot;</span></span><br><span class="line">      <span class="attr">UPLOAD_MAX_FILESIZE:</span> <span class="string">&quot;16M&quot;</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8088:80&quot;</span>     <span class="comment"># 8088 可以改成没用过的端口</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8090:443&quot;</span>    <span class="comment"># 8090 可以改成没用过的端口</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">llc:/htdocs</span></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line">  <span class="attr">llc:</span></span><br></pre></td></tr></table></figure><p>注意：</p><p><code>&quot;8088:80&quot;</code> 和 <code>&quot;8090:443&quot;</code> 其实只要一个就行，同理，<code>HTTP_SERVER_NAME</code> 和 <code>HTTPS_SERVER_NAME</code> 也一样。</p><p>但俩个都写也不影响。</p><p>以下是详细搭建教程。</p><h2 id="3-搭建环境"><a href="#3-搭建环境" class="headerlink" title="3. 搭建环境"></a>3. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器 24 元 &#x2F; 月 VPS 一台</del> 咕咕自己搭建用的是<a href="https://loll.cc/tx">腾讯轻量应用服务器</a> ，（最好是选 <strong>非大陆（香港）的服务器</strong>）如果是小白刚开始玩的话，还可以购买 <a href="https://blog.laoda.de/archives/cheap-vps-racknerd">Racknerd</a> 的服务器，最低一年不到 100 块（不过这个建议选择 1G 内存以上的机器）（Racknerd 服务器介绍：<a href="https://blog.laoda.de/archives/cheap-vps-racknerd">点击查看</a>）</li><li>系统：Debian 11 （<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD 脚本</a> 非必需 DD，用原来的系统也 OK，之后教程都是用 Debian 或者 Ubuntu 搭建～）</li><li>安装好 Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需但建议】域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>【非必需】提前安装好宝塔面板海外版本 aapanel，并安装好 Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程选用】安装好 Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><blockquote><p>服务器要求：内存建议1G 以上。</p></blockquote><h2 id="4-搭建视频（周末争取补上，最近比较忙-）"><a href="#4-搭建视频（周末争取补上，最近比较忙-）" class="headerlink" title="4. 搭建视频（周末争取补上，最近比较忙 &#x3D; &#x3D;）"></a>4. 搭建视频（周末争取补上，最近比较忙 &#x3D; &#x3D;）</h2><h3 id="4-1-YouTube："><a href="#4-1-YouTube：" class="headerlink" title="4.1 YouTube："></a>4.1 YouTube：</h3><p>视频地址：</p><h3 id="4-2-哔哩哔哩"><a href="#4-2-哔哩哔哩" class="headerlink" title="4.2 哔哩哔哩"></a>4.2 哔哩哔哩</h3><h2 id="5-搭建方式"><a href="#5-搭建方式" class="headerlink" title="5. 搭建方式"></a>5. 搭建方式</h2><p>如果你不是用的腾讯云的轻量应用服务器，可以直接跳到 5.1 部分。</p><h3 id="安装系统（腾讯云轻量应用服务器）"><a href="#安装系统（腾讯云轻量应用服务器）" class="headerlink" title="安装系统（腾讯云轻量应用服务器）"></a>安装系统（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlyhcz-2.webp" alt="e59713fba8726d3cb55ae11bca83fe3c.png"></p><p>腾讯云轻量服务器最大的特点就是 “轻量”，相比 CVM，更适合小白上手，这边我们之间选择 Docker 基础镜像，就可以省去后面安装 Docker 的步骤（如果你非要用国内的服务器，这边装的 Docker 镜像还会帮你配置好国内镜像源，让你加速访问 docker 镜像资源）。</p><h3 id="登陆（腾讯云轻量应用服务器）"><a href="#登陆（腾讯云轻量应用服务器）" class="headerlink" title="登陆（腾讯云轻量应用服务器）"></a>登陆（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlzlj7-2.webp" alt="2722040ee311eb4a9ebf2a4945bf38f4.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm0gv8-2.webp" alt="c0b5d360053746c4095d592967ee401f.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm1vqw-2.webp" alt="e0ba858f021b846ad0abc27acf5008c2.png"></p><h3 id="5-1-安装-Docker-与-Nginx-Proxy-Manager"><a href="#5-1-安装-Docker-与-Nginx-Proxy-Manager" class="headerlink" title="5.1 安装 Docker 与 Nginx Proxy Manager"></a>5.1 安装 Docker 与 Nginx Proxy Manager</h3><p>可以直接参考这篇内容：</p><p><a href="https://blog.laoda.de/archives/nginxproxymanager">https://blog.laoda.de/archives/nginxproxymanager</a></p><h3 id="5-2-创建安装目录"><a href="#5-2-创建安装目录" class="headerlink" title="5.2 创建安装目录"></a>5.2 创建安装目录</h3><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/littlelink</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/littlelink</span><br></pre></td></tr></table></figure><p>这边我们直接用 docker 的方式安装。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure><p>英文输入法下，按 <code>i</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">littlelink-custom:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">julianprieber/littlelink-custom</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">littlelink-custom</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">littlelink-custom</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">HTTP_SERVER_NAME:</span> <span class="string">&quot;gugu.ge&quot;</span>   <span class="comment"># gugu.ge 改成自己的域名</span></span><br><span class="line">      <span class="attr">HTTPS_SERVER_NAME:</span> <span class="string">&quot;gugu.ge&quot;</span> <span class="comment"># gugu.ge 改成自己的域名</span></span><br><span class="line">      <span class="attr">SERVER_ADMIN:</span> <span class="string">&quot;admin@gugu.com&quot;</span> <span class="comment"># admin@gugu.com 改成自己的账号</span></span><br><span class="line">      <span class="attr">TZ:</span> <span class="string">&quot;Asia/Shanghai&quot;</span></span><br><span class="line">      <span class="attr">PHP_MEMORY_LIMIT:</span> <span class="string">&quot;512M&quot;</span></span><br><span class="line">      <span class="attr">UPLOAD_MAX_FILESIZE:</span> <span class="string">&quot;16M&quot;</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8088:80&quot;</span>     <span class="comment"># 8088 可以改成没用过的端口</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8090:443&quot;</span>    <span class="comment"># 8090 可以改成没用过的端口</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">llc:/htdocs</span></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line">  <span class="attr">llc:</span></span><br></pre></td></tr></table></figure><p>修改好之后，注意切换成英文输入法，然后按一下 <code>esc</code>，然后 <code>:wq</code> 保存退出。</p><h3 id="5-3-打开服务器防火墙（非必需）并访问网页"><a href="#5-3-打开服务器防火墙（非必需）并访问网页" class="headerlink" title="5.3 打开服务器防火墙（非必需）并访问网页"></a>5.3 打开服务器防火墙（非必需）并访问网页</h3><p>打开防火墙的端口 <code>8090</code></p><p>举例，腾讯云打开方法如下（部分服务商没有自带的面板防火墙，就不用这步操作了）：</p><img src="https://img.laoda.de/i/2022/06/30/zlio5h-2.webp" alt="image-20220630215240864" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/06/30/10h3dqt-2.webp" alt="image-20220630220546335" style="zoom:33%;" /><p>图中示例填的是 <code>5230</code>，备注填的是 <code>memos</code>，这边我们填 <code>8090</code>，示例填 <code>littlelink</code> ，确定即可（如果你在 docker-compose 文件里换了 <code>9009</code>，这边就需要填 <code>9009</code>，以此类推）</p><img src="https://img.laoda.de/i/2022/08/19/o4byqz-2.webp" alt="image-20220819145844555" style="zoom:33%;" /><p>查看端口是否被占用（以 <code>8090</code> 为例），输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:8090  <span class="comment">#查看 8090 端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果啥也没出现，表示端口未被占用，我们可以继续下面的操作了～</p><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装 lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用（被占用了就修改一下端口，比如改成 <code>8081</code>，注意 docker 命令行里和防火墙都要改）</p><p>最后：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/littlelink    <span class="comment"># 来到 dockercompose 文件所在的文件夹下</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>理论上我们就可以输入 <code>http://ip:8090</code> 访问安装了。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器 IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的 IP。</p><p>2、遇到访问不了的情况，请再次检查在宝塔面板的防火墙和服务商的后台防火墙是否打开对应了端口。</p></blockquote><p>有的小伙伴可能想搭建起来分享给其他人使用，如果后续想要分享给别人，IP + 端口太不优雅了，咕咕建议大家还是搞一个域名，容易记，看起来也更正规一点。这样可以做 https，会让网页更安全。</p><p>而且 <a href="https://loll.cc/ns">namesilo</a> 上面 xyz 后缀的域名一年就 7 块钱，可以年抛。（冷知识，namesilo上 6位数字的xyz续费永远都是0.99美元 &#x3D; &#x3D;）</p><p>如果想要长期使用，还是建议买 com 后缀的域名，更加正规一些，可以输入 <code>laodade</code> 来获得 1 美元的优惠（不知道现在还有没有）</p><p><a href="https://loll.cc/ns">namesilo</a> 自带隐私保护，咕咕一直在用这家，价格也是这些注册商里面比较低的，关键是他家不像其他家域名注册商，没有七七八八的套路！（就是后台界面有些<del>丑</del> 古老 &#x3D; &#x3D;）</p><p><a href="https://blog.laoda.de/archives/namesilo">【域名购买】Namesilo 优惠码和域名解析教程（附带服务器购买推荐和注意事项）</a></p><p>我们接着往下看！</p><h3 id="5-4-更新-littlelink"><a href="#5-4-更新-littlelink" class="headerlink" title="5.4 更新 littlelink"></a>5.4 更新 littlelink</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/littlelink</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/littlelink /root/data/docker_data/littlelink.archive  <span class="comment"># 万事先备份，以防万一</span></span><br><span class="line"></span><br><span class="line">docker-compose pull</span><br><span class="line"></span><br><span class="line">docker-compose up -d    <span class="comment"># 请不要使用 docker-compose stop 来停止容器，因为这么做需要额外的时间等待容器停止；docker-compose up -d 直接升级容器时会自动停止并立刻重建新的容器，完全没有必要浪费那些时间。</span></span><br><span class="line"></span><br><span class="line">docker image prune  <span class="comment"># prune 命令用来删除不再使用的 docker 对象。删除所有未被 tag 标记和未被容器使用的镜像</span></span><br></pre></td></tr></table></figure><p>提示：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WARNING! This will remove all dangling images.</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] </span><br></pre></td></tr></table></figure><p>输入 <code>y</code></p><p>利用 Docker 搭建的应用，更新非常容易～</p><h3 id="5-5-卸载-littlelink"><a href="#5-5-卸载-littlelink" class="headerlink" title="5.5 卸载 littlelink"></a>5.5 卸载 littlelink</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/littlelink</span><br><span class="line"></span><br><span class="line">docker-compose down</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/littlelink  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>可以卸载得很干净。</p><h2 id="6-反向代理"><a href="#6-反向代理" class="headerlink" title="6. 反向代理"></a>6. 反向代理</h2><p>我们要用域名而不是IP+端口的方式来访问我们的服务！</p><h3 id="6-1-利用-Nginx-Proxy-Manager"><a href="#6-1-利用-Nginx-Proxy-Manager" class="headerlink" title="6.1 利用 Nginx Proxy Manager"></a>6.1 利用 Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p><img src="https://img.laoda.de/i/2022/10/16/n6t02e-2.webp" alt="image-20221016140213282"></p><p>之后，登陆 Nginx Proxy Manager（不会的看这个：<strong>安装 Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称 NPM）会用到 <code>80</code>、<code>443</code> 端口，所以本机不能占用（比如原来就有 Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom: 33%;" /><img src="https://img.laoda.de/i/2023/04/03/pnip9i-0.webp" alt="image-20230403155113921" style="zoom:50%;" /><blockquote><p> 注意填写对应的 <code>域名</code>、<code>IP</code> 和 <code>端口</code>，按文章来的话，应该是 <code>8090</code></p></blockquote><p><strong>IP 填写：</strong></p><p>如果 Nginx Proxy Manager 和 littlelink 在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的 Docker 容器内部 IP。</p><p><img src="https://img.laoda.de/i/2022/09/29/pcdnz5-2.webp"></p><p>否则直接填 <code>littlelink</code> 所在的服务器 IP 就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom: 33%;" /><p>再次打开，勾选这些：</p><p><img src="https://img.laoda.de/i/2022/10/16/n7nn6e-2.webp" alt="image-20221016140356324"></p><p>然后就可以用域名来安装访问了。</p><h3 id="6-2-利用宝塔面板"><a href="#6-2-利用宝塔面板" class="headerlink" title="6.2 利用宝塔面板"></a>6.2 利用宝塔面板</h3><p>发现还是有不少小伙伴习惯用宝塔面板，这边也贴一个宝塔面板的反代配置：</p><p>直接新建一个站点，不要数据库，不要 php，纯静态即可。</p><p>然后打开下面的配置，修改 Nginx 的配置。</p><p><img src="https://img.laoda.de/i/2022/08/19/ov4xrt-2.webp" alt="image-20220819150345725"></p><p><img src="https://img.laoda.de/i/2022/08/19/owbbkb-2.webp" alt="image-20220819150542867"></p><p>代码如下：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:8088/;       <span class="comment"># 注意改成你实际使用的端口</span></span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此方法对 90% 的反向代理都能生效，然后就可以用域名来安装访问了。</p><p>有同学可能会问，为什么不直接用宝塔自带的反向代理功能。</p><p><img src="https://img.laoda.de/i/2022/08/19/oxf800-2.webp" alt="image-20220819150730128"></p><p>也可以，不过咕咕自己之前遇到过当有多个网站需要反代的时候，在这边设置会报错的情况 &#x3D; &#x3D; </p><p>所以后来就不用了，直接用上面的方法来操作了。</p><h2 id="7-使用教程"><a href="#7-使用教程" class="headerlink" title="7. 使用教程"></a>7. 使用教程</h2><p>这边等录视频的时候好好说，这边先丢图，大家自己摸索一下 &#x3D; &#x3D;</p><p>第一次登录：</p><p><img src="https://img.laoda.de/i/2023/04/03/ov2nbl-0.webp" alt="image-20230403150336195"></p><p>点击下一步：</p><p><img src="https://img.laoda.de/i/2023/04/03/ov4te3-0.webp" alt="image-20230403150346123"></p><p>下一步：</p><p><img src="https://img.laoda.de/i/2023/04/03/ov6joy-0.webp" alt="image-20230403150355008"></p><p>下一步：</p><p>输入自己的邮箱和密码之类的东西，看图：</p><p><img src="https://img.laoda.de/i/2023/04/03/ovppgi-0.webp" alt="image-20230403150444061"></p><ul><li><p>是否允许注册？</p></li><li><p>是否要验证邮箱（注册的时候）？</p></li><li><p>是否把你的页面设置为主页？</p></li><li><p>项目名字</p></li></ul><p>这些之后都可以在后台改的，不用担心。</p><p><img src="https://img.laoda.de/i/2023/04/03/ow4o21-0.webp" alt="image-20230403150513614"></p><p>目前首页的样子：</p><p><img src="https://img.laoda.de/i/2023/04/03/ow7azp-0.webp" alt="image-20230403150525839"></p><p>登录：</p><p><img src="https://img.laoda.de/i/2023/04/03/owa106-0.webp" alt="image-20230403150539361"></p><p>可以自动升级一下：</p><p><img src="https://img.laoda.de/i/2023/04/03/owosr5-0.webp" alt="image-20230403150607610"></p><p>目前我们的个人页面的样子，很丑 &#x3D; &#x3D;</p><p><img src="https://img.laoda.de/i/2023/04/03/owuozn-0.webp" alt="image-20230403150635357"></p><p>登录后台看看：</p><p><img src="https://img.laoda.de/i/2023/04/03/oxzymz-0.webp" alt="image-20230403150827558"></p><p>添加个人网址：</p><p><img src="https://img.laoda.de/i/2023/04/03/oyhyuf-0.webp" alt="image-20230403150911568"></p><p>除了自带图标的网站，还可以加入自定义网站：</p><p><img src="https://img.laoda.de/i/2023/04/03/oyo8n8-0.webp" alt="image-20230403150940454"></p><p>修改个人页面的信息：</p><p><img src="https://img.laoda.de/i/2023/04/03/p0vwsp-0.webp" alt="image-20230403151312874"></p><p>上传背景图：</p><p><img src="https://img.laoda.de/i/2023/04/03/p1jcrh-0.webp" alt="image-20230403151422192"></p><p>修改主题和上传背景图之后的预览：</p><p><img src="https://img.laoda.de/i/2023/04/03/p1qy0p-0.webp" alt="image-20230403151457070"></p><p><img src="https://img.laoda.de/i/2023/04/03/p3a1iy-0.webp" alt="image-20230403151714436"></p><p>大家可以自己先尝试看看，不难，详细的操作的话等咕咕周末搞个视频见出来。</p><h2 id="8-待完善的地方"><a href="#8-待完善的地方" class="headerlink" title="8. 待完善的地方"></a>8. 待完善的地方</h2><p>1、背景图默认保存的是第一次上传的图片，之后替换<del>不了</del> 很慢（BUG）</p><p>2、把页面首页改成自己的个人页之后，后续想要登录后台，需要在网址后面加<code>/home</code>，比如：<code>https://gugu.ge/home</code></p><h2 id="9-结尾"><a href="#9-结尾" class="headerlink" title="9. 结尾"></a>9. 结尾</h2><p>祝大家用得开心，有问题可以去 GitHub 提 <a href="https://github.com/JulianPrieber/llc-docker/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，littlelink的生态还在慢慢建立当中，有能力给项目做贡献的同学，也欢迎积极加入到 <a href="https://github.com/JulianPrieber/llc-docker">项目</a> 中来，贡献自己的一份力量！</p><p>最后，感谢littlelink团队的辛苦付出，让我们能用到这么优秀的项目！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>官网：<a href="https://littlelink-custom.com/">https://littlelink-custom.com/</a><br>官方的Demo：<a href="https://littlelink-custom.llc.ovh/">https://littlelink-custom.llc.ovh/</a><br>GitHub地址：<a href="https://github.com/JulianPrieber/littlelink-custom">https://github.com/JulianPrieber/littlelink-custom</a><br>GitHub地址：<a href="https://github.com/JulianPrieber/llc-docker">https://github.com/JulianPrieber/llc-docker</a><br>官方Docker页面：<a href="https://hub.docker.com/r/julianprieber/littlelink-custom">https://hub.docker.com/r/julianprieber/littlelink-custom</a><br>文档页面：<a href="https://docs.littlelink-custom.com/">https://docs.littlelink-custom.com/</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LinkTree </tag>
            
            <tag> LittleLink </tag>
            
            <tag> 个人主页 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【VPS选购经验分享】CN2 GIA+9929优化线路，V.PS新鸡荷兰阿姆斯特丹 Ryzen 7950x Mini VPS，年付39.95欧元！</title>
      <link href="/archives/vps-hosting/"/>
      <url>/archives/vps-hosting/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.laoda.de/i/2023/04/02/12x8kcw-0.webp" alt="image-20230402235353291"></p><p>V.PS 是 xTom 旗下的一个 VPS 商家。</p><p>xTom是一家在德国境内成立的私人控股的服务器托管公司。 拥有全球各地数个数据中心，包括法兰克福，阿姆斯特丹，香港，东京，大坂，弗里蒙特，纽约和悉尼，这些数据中心拥有优质带宽，如Level 3，Telia，NTT和中国电信。xTom是德国最受欢迎的网络服务商之一。</p><p><a href="https://vps.hosting/?affid=985">V.PS</a>新上架荷兰阿姆斯特丹 Ryzen 7950x Mini VPS，线路为CN2 GIA + 9929 优化线路，CPU单核跑分2000+，共有2个套餐，mini和mini plus，最低配mini vps，年付39.95欧元。</p><p>CPU加线路看起来非常不错，咕咕也入手了一台，给大家试试水～</p><p><img src="https://img.laoda.de/i/2023/04/02/12x2844-0.webp" alt="image-20230402235316979"></p><h2 id="1-官网"><a href="#1-官网" class="headerlink" title="1. 官网"></a>1. 官网</h2><p><strong>网址：<a href="https://vps.hosting/?affid=985">https://v.ps</a></strong></p><blockquote><p>注意：</p><p>注册新账号的话需要使用真实点的信息，要不不能用PayPal。</p><p>这家退款政策严格：账号只能退1次，并且必须购买＜14天，流量没超10G等</p></blockquote><p>咕咕就被判定欺诈了 &#x3D; &#x3D;</p><p>咕咕去邮箱里点击验证账号，</p><img src="https://img.laoda.de/i/2023/04/03/2ou5o-0.webp" alt="image-20230403000450494" style="zoom:50%;" /><p>然后用的支付宝付款的 &#x3D; &#x3D;</p><h2 id="2-荷兰mini套餐"><a href="#2-荷兰mini套餐" class="headerlink" title="2. 荷兰mini套餐"></a>2. 荷兰mini套餐</h2><p>特征：KVM虚拟，SSD RAID10阵列，1Gbps带宽，自带一个IPv4，CN2 GIA+9929优化线路</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>SSD</strong></th><th><strong>带宽@流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1G</td><td>1核</td><td>15G</td><td>1G@1T</td><td>€39.95&#x2F;年</td><td><strong><a href="https://vps.hosting/cart/?cmd=cart&action=add&id=196&aff=985">链接</a></strong></td></tr><tr><td>2G</td><td>1核</td><td>20G</td><td>1G@2T</td><td>€49.95&#x2F;年</td><td><strong><a href="https://vps.hosting/?cmd=cart&action=add&id=197&aff=985">链接</a></strong></td></tr></tbody></table><p>咕咕买的是€39.95&#x2F;年这款。</p><h2 id="3-VPS测试"><a href="#3-VPS测试" class="headerlink" title="3. VPS测试"></a>3. VPS测试</h2><h3 id="3-1-基本情况"><a href="#3-1-基本情况" class="headerlink" title="3.1 基本情况"></a>3.1 基本情况</h3><p><img src="https://img.laoda.de/i/2023/04/02/12swerr-0.webp" alt="image-20230402234617613"></p><h3 id="3-2-速度测试"><a href="#3-2-速度测试" class="headerlink" title="3.2 速度测试"></a>3.2 速度测试</h3><p><img src="https://img.laoda.de/i/2023/04/02/12srhlg-0.webp" alt="image-20230402234559505"></p><h3 id="3-3-回程线路"><a href="#3-3-回程线路" class="headerlink" title="3.3 回程线路"></a>3.3 回程线路</h3><h4 id="上海电信"><a href="#上海电信" class="headerlink" title="上海电信"></a>上海电信</h4><p>回程CN2 GIA，非常舒服。</p><p><img src="https://img.laoda.de/i/2023/04/02/12t0fei-0.webp" alt="image-20230402234639998"></p><h4 id="上海联通"><a href="#上海联通" class="headerlink" title="上海联通"></a>上海联通</h4><p>回程联通AS9929。</p><p><img src="https://img.laoda.de/i/2023/04/02/12tds6s-0.webp" alt="image-20230402234702506"></p><h4 id="上海移动"><a href="#上海移动" class="headerlink" title="上海移动"></a>上海移动</h4><p>通过走联通4837，再走移动自己的线路。</p><p><img src="https://img.laoda.de/i/2023/04/02/12tgm4f-0.webp" alt="image-20230402234715405"></p><h4 id="北京教育网"><a href="#北京教育网" class="headerlink" title="北京教育网"></a>北京教育网</h4><p>走联通9929回国。</p><p><img src="https://img.laoda.de/i/2023/04/02/12to0in-0.webp" alt="image-20230402234746736"></p><p>Share result:<br> · <a href="https://www.speedtest.net/result/c/fdc6a788-25f4-4821-bf97-0c69aca736c3">https://www.speedtest.net/result/c/fdc6a788-25f4-4821-bf97-0c69aca736c3</a><br> · <a href="https://paste.ubuntu.com/p/2Yw3tJbG99/">https://paste.ubuntu.com/p/2Yw3tJbG99/</a></p><h3 id="3-4-PING值"><a href="#3-4-PING值" class="headerlink" title="3.4 PING值"></a>3.4 PING值</h3><p>荷兰，这个ping值可以的。</p><p><img src="https://img.laoda.de/i/2023/04/02/12v8eib-0.webp" alt="image-20230402235015011"></p><p><img src="https://img.laoda.de/i/2023/04/02/12vaqmg-0.webp" alt="image-20230402235026578"></p><h3 id="3-5-网络测试"><a href="#3-5-网络测试" class="headerlink" title="3.5 网络测试"></a>3.5 网络测试</h3><p>晚上11点30分</p><p><img src="https://img.laoda.de/i/2023/04/02/12uuorl-0.webp" alt="image-20230402234945643"></p><p><img src="https://img.laoda.de/i/2023/04/02/12upbne-0.webp" alt="image-20230402234918698"></p><h2 id="4-其他"><a href="#4-其他" class="headerlink" title="4. 其他"></a>4. 其他</h2><h3 id="4-1-速度测试和-Looking-Glass（官方提供）"><a href="#4-1-速度测试和-Looking-Glass（官方提供）" class="headerlink" title="4.1 速度测试和 Looking Glass（官方提供）"></a>4.1 速度测试和 Looking Glass（官方提供）</h3><p>Test IPv4: 78.142.195.195</p><p>Test IPv6: 2a0c:59c0:12::10b</p><p>Test file: <a href="https://ams.lg.v.ps/100MB.test">https://ams.lg.v.ps/100MB.test</a></p><p>Looking glass: <a href="https://ams.lg.v.ps/">https://ams.lg.v.ps/</a></p><p>Speedtest: <a href="https://ams.speedtest.v.ps/">https://ams.speedtest.v.ps/</a></p><h3 id="4-2-YABS-Benchmark（官方提供）"><a href="#4-2-YABS-Benchmark（官方提供）" class="headerlink" title="4.2 YABS Benchmark（官方提供）"></a>4.2 YABS Benchmark（官方提供）</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Sun 02 Apr 2023 02:34:55 PM UTC</span><br><span class="line"></span><br><span class="line">Basic System Information:</span><br><span class="line">---------------------------------</span><br><span class="line">Uptime     : 0 days, 0 hours, 3 minutes</span><br><span class="line">Processor  : AMD Ryzen 9 7950X 16-Core Processor</span><br><span class="line">CPU cores  : 1 @ 4491.572 MHz</span><br><span class="line">AES-NI     : ✔ Enabled</span><br><span class="line">VM-x/AMD-V : ✔ Enabled</span><br><span class="line">RAM        : 1.9 GiB</span><br><span class="line">Swap       : 256.0 MiB</span><br><span class="line">Disk       : 19.6 GiB</span><br><span class="line">Distro     : Debian GNU/Linux 11 (bullseye)</span><br><span class="line">Kernel     : 5.10.0-21-cloud-amd64</span><br><span class="line">VM Type    : KVM</span><br><span class="line">Net Online : IPv4 &amp; IPv6</span><br><span class="line"></span><br><span class="line">IPv4 Network Information:</span><br><span class="line">---------------------------------</span><br><span class="line">ISP        : xTom GmbH</span><br><span class="line">ASN        : AS3214 xTom GmbH</span><br><span class="line">Host       : xTom</span><br><span class="line">Location   : Amsterdam, North Holland (NH)</span><br><span class="line">Country    : Netherlands</span><br><span class="line"></span><br><span class="line">fio Disk Speed Tests (Mixed R/W 50/50):</span><br><span class="line">---------------------------------</span><br><span class="line">Block Size | 4k            (IOPS) | 64k           (IOPS)</span><br><span class="line">  ------   | ---            ----  | ----           ----</span><br><span class="line">Read       | 102.65 MB/s  (25.6k) | 1.05 GB/s    (16.4k)</span><br><span class="line">Write      | 102.92 MB/s  (25.7k) | 1.05 GB/s    (16.5k)</span><br><span class="line">Total      | 205.58 MB/s  (51.3k) | 2.11 GB/s    (33.0k)</span><br><span class="line">           |                      |</span><br><span class="line">Block Size | 512k          (IOPS) | 1m            (IOPS)</span><br><span class="line">  ------   | ---            ----  | ----           ----</span><br><span class="line">Read       | 1.02 GB/s     (2.0k) | 1.01 GB/s      (990)</span><br><span class="line">Write      | 1.08 GB/s     (2.1k) | 1.08 GB/s     (1.0k)</span><br><span class="line">Total      | 2.10 GB/s     (4.1k) | 2.09 GB/s     (2.0k)</span><br><span class="line"></span><br><span class="line">Geekbench 5 Benchmark Test:</span><br><span class="line">---------------------------------</span><br><span class="line">Test            | Value</span><br><span class="line">                |</span><br><span class="line">Single Core     | 2195</span><br><span class="line">Multi Core      | 2259</span><br><span class="line">Full Test       | https://browser.geekbench.com/v5/cpu/20990976</span><br><span class="line"></span><br><span class="line">YABS completed <span class="keyword">in</span> 2 min 11 sec</span><br></pre></td></tr></table></figure><h2 id="5-总结"><a href="#5-总结" class="headerlink" title="5. 总结"></a>5. 总结</h2><p>还不错，咕咕会用一段时间，看看稳不稳定。</p>]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 欧洲VPS </tag>
            
            <tag> xTom </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RackNerd 美国便宜VPS 2023复活节促销，$10.78/年，可选西雅图/达拉斯/芝加哥/纽约/新泽西/亚特兰大</title>
      <link href="/archives/racknerd-easter-deals-2023/"/>
      <url>/archives/racknerd-easter-deals-2023/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.laoda.de/i/2023/03/26/o3l7vj-0.webp" alt="image-20230326145720013"></p><p><a href="https://www.blog.laoda.de/tags/racknerd/">RackNerd</a> 发布2023年复活节促销活动，共有4款便宜美国VPS，最低配$10.78&#x2F;年，配置为1核，840M内存，10G SSD，1G带宽@1T月流量。可选节点为西雅图&#x2F;圣何塞&#x2F;达拉斯&#x2F;芝加哥&#x2F;新泽西&#x2F;亚特兰大&#x2F;纽约。</p><p><img src="https://img.laoda.de/i/2023/03/26/gsci89-0.webp" alt="image-20230326101500274"></p><h2 id="1-官网"><a href="#1-官网" class="headerlink" title="1. 官网"></a>1. 官网</h2><p><strong>官方网站：<a href="https://my.racknerd.com/aff.php?aff=1158">https://www.racknerd.com</a></strong></p><p> <strong>商家详细介绍：<a href="https://blog.laoda.de/archives/vps-racknerd">【VPS选购分享】Racknerd——曾经的“四大金刚”，如今的性价比之王</a></strong></p><h2 id="2-复活节促销VPS"><a href="#2-复活节促销VPS" class="headerlink" title="2. 复活节促销VPS"></a>2. 复活节促销VPS</h2><p>VPS特征：KVM虚拟，纯SSD raid10阵列，1Gbps带宽，自带一个IPv4，支持rdns，solusvm面板管理。可选节点为西雅图&#x2F;圣何塞&#x2F;达拉斯&#x2F;芝加哥&#x2F;新泽西&#x2F;亚特兰大&#x2F;纽约。</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1核</td><td>840M</td><td>10G</td><td>1T&#x2F;月</td><td>$10.78&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=766">链接</a></strong></td></tr><tr><td>1核</td><td>1.2G</td><td>30G</td><td>3T&#x2F;月</td><td>$14.98&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=767">链接</a></strong></td></tr><tr><td>2核</td><td>2G</td><td>45G</td><td>5T&#x2F;月</td><td>$21.98&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=768">链接</a></strong></td></tr><tr><td>3核</td><td>5G</td><td>100G</td><td>10T&#x2F;月</td><td>$58.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=769">链接</a></strong></td></tr></tbody></table><h5 id="以下是往期促销，还可以买！"><a href="#以下是往期促销，还可以买！" class="headerlink" title="以下是往期促销，还可以买！"></a>以下是往期促销，还可以买！</h5><h2 id="3-2023年元旦-中国春节促销"><a href="#3-2023年元旦-中国春节促销" class="headerlink" title="3. 2023年元旦+中国春节促销"></a>3. 2023年元旦+中国春节促销</h2><p>VPS特征：KVM虚拟，纯SSD raid10阵列，1Gbps带宽，自带一个IPv4，支持rdns，solusvm面板管理。</p><p>可选节点为洛杉矶DC-02, 芝加哥, 达拉斯, 新泽西, 亚特兰大, 圣何塞, 西雅图, 纽约。</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1核</td><td>512M</td><td>10G</td><td>1.5T&#x2F;月</td><td>$10.18&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=734">链接</a></strong></td></tr><tr><td>1核</td><td>1G</td><td>25G</td><td>4T&#x2F;月</td><td>$12.98&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=735">链接</a></strong></td></tr><tr><td>2核</td><td>2.5G</td><td>45G</td><td>6T&#x2F;月</td><td>$24.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=736">链接</a></strong></td></tr><tr><td>3核</td><td>4G</td><td>70G</td><td>10T&#x2F;月</td><td>$46.68&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=737">链接</a></strong></td></tr></tbody></table><h2 id="4-其他年付10美元左右VPS"><a href="#4-其他年付10美元左右VPS" class="headerlink" title="4. 其他年付10美元左右VPS"></a>4. 其他年付10美元左右VPS</h2><p>数据中心可选：洛杉矶、圣何塞、达拉斯、芝加哥、新泽西、亚特兰大、纽约、荷兰(阿姆斯特丹)</p><p>VPS特征：KVM虚拟，纯SSD raid10阵列，1Gbps带宽，自带一个IPv4，支持rdns，solusvm面板管理。</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1核</td><td>768M</td><td>10G</td><td>1T&#x2F;月</td><td>$10.28&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=695">链接</a></strong></td></tr><tr><td>1核</td><td>768M</td><td>10G</td><td>2T&#x2F;月</td><td>$11.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=679">链接</a></strong></td></tr><tr><td>1核</td><td>1G</td><td>16G</td><td>3T&#x2F;月</td><td>$14.98&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=680">链接</a></strong></td></tr><tr><td>1核</td><td>1.2G</td><td>18G</td><td>2T&#x2F;月</td><td>$14.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=670">链接</a></strong></td></tr><tr><td>1核</td><td>1.5G</td><td>30G</td><td>3T&#x2F;月</td><td>$16.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=696">链接</a></strong></td></tr></tbody></table><h2 id="5-年付60刀-5个ipv4"><a href="#5-年付60刀-5个ipv4" class="headerlink" title="5. 年付60刀 - 5个ipv4"></a>5. 年付60刀 - 5个ipv4</h2><p>默认配置5个ipv4。</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1核</td><td>1.5G</td><td>20G</td><td>3T&#x2F;月</td><td>$60&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=563">链接</a></strong></td></tr></tbody></table><h2 id="6-内存1-5G-2-5G套餐"><a href="#6-内存1-5G-2-5G套餐" class="headerlink" title="6. 内存1.5G-2.5G套餐"></a>6. 内存1.5G-2.5G套餐</h2><p>数据中心可选：洛杉矶、圣何塞、达拉斯、芝加哥、新泽西、亚特兰大、纽约、荷兰(阿姆斯特丹)</p><p>VPS特征：KVM虚拟，纯SSD raid10阵列，1Gbps带宽，自带一个IPv4，支持rdns，solusvm面板管理。</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1核</td><td>1.5G</td><td>30G</td><td>3T&#x2F;月</td><td>$25.95&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=319">链接</a></strong></td></tr><tr><td>2核</td><td>2G</td><td>25G</td><td>4T&#x2F;月</td><td>$20.98&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=681">链接</a></strong></td></tr><tr><td>2核</td><td>2G</td><td>35G</td><td>4T&#x2F;月</td><td>$38.78&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=280">链接</a></strong></td></tr><tr><td>2核</td><td>2.5G</td><td>40G</td><td>3T&#x2F;月</td><td>$25.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=671">链接</a></strong></td></tr><tr><td>2核</td><td>2.5G</td><td>60G</td><td>7T&#x2F;月</td><td>$28.55&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=697">链接</a></strong></td></tr><tr><td>2核</td><td>2.5G</td><td>40G</td><td>5T&#x2F;月</td><td>$29.50&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=211">链接</a></strong></td></tr><tr><td>2核</td><td>2.5G</td><td>50G</td><td>5T&#x2F;月</td><td>$39.95&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=320">链接</a></strong></td></tr></tbody></table><h2 id="7-内存3G-8G套餐"><a href="#7-内存3G-8G套餐" class="headerlink" title="7. 内存3G-8G套餐"></a>7. 内存3G-8G套餐</h2><p>数据中心可选：洛杉矶、圣何塞、达拉斯、芝加哥、新泽西、亚特兰大、纽约、荷兰(阿姆斯特丹)</p><p>VPS特征：KVM虚拟，纯SSD raid10阵列，1Gbps带宽，自带一个IPv4，支持rdns，solusvm面板管理。</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>2核</td><td>3G</td><td>35G</td><td>5T&#x2F;月</td><td>$29.99&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=473">链接</a></strong></td></tr><tr><td>3核</td><td>3.5G</td><td>36G</td><td>5T&#x2F;月</td><td>$30.19&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=125">链接</a></strong></td></tr><tr><td>2核</td><td>3.5G</td><td>60G</td><td>6T&#x2F;月</td><td>$35.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=672">链接</a></strong></td></tr><tr><td>2核</td><td>3.5G</td><td>80G</td><td>10T&#x2F;月</td><td>$38.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=698">链接</a></strong></td></tr><tr><td>3核</td><td>4G</td><td>50G</td><td>10T&#x2F;月</td><td>$45.89&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=474">链接</a></strong></td></tr><tr><td>3核</td><td>4.5G</td><td>100G</td><td>12T&#x2F;月</td><td>$48.77&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=699">链接</a></strong></td></tr><tr><td>4核</td><td>8G</td><td>100G</td><td>5T&#x2F;月</td><td>$89.00&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=312">链接</a></strong></td></tr></tbody></table><h2 id="8-AMD-NVMe系列便宜VPS套餐"><a href="#8-AMD-NVMe系列便宜VPS套餐" class="headerlink" title="8. AMD+NVMe系列便宜VPS套餐"></a>8. AMD+NVMe系列便宜VPS套餐</h2><p>可选纽约，圣何塞，达拉斯，亚特兰大。特征，kvm虚拟，AMD Ryzen 9 3900X、DDR4、NVMe SSD、1Gbps口带宽，默认一个IPv4，不支持Windows。</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>NVMe</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1核</td><td>512M</td><td>6G</td><td>400G&#x2F;月</td><td>$15&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=302">链接</a></strong></td></tr><tr><td>1核</td><td>1G</td><td>20G</td><td>2T&#x2F;月</td><td>$32&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=303">链接</a></strong></td></tr><tr><td>1核</td><td>1.5G</td><td>22G</td><td>3T&#x2F;月</td><td>$35&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=308">链接</a></strong></td></tr><tr><td>2核</td><td>2.5G</td><td>40G</td><td>6T&#x2F;月</td><td>$69&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=309">链接</a></strong></td></tr></tbody></table><h2 id="9-AMD-NVME系列windows-vps套餐"><a href="#9-AMD-NVME系列windows-vps套餐" class="headerlink" title="9. AMD+NVME系列windows vps套餐"></a>9. AMD+NVME系列windows vps套餐</h2><p>可选机房洛杉矶，达拉斯，纽约，亚特兰大。</p><p>VPS特征：KVM虚拟，AMD Ryzen 9 3900x+ddr4+NVMe SSD阵列+1Gbps带宽，默认一个IPv4，solusvm管理，windows中英文授权版系统（版本为2012和2016系统）。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>NVMe</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>2G</td><td>1核</td><td>35G</td><td>2T&#x2F;月</td><td>$60&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=700">链接</a></strong></td></tr><tr><td>2.5G</td><td>1核</td><td>40G</td><td>3.5T&#x2F;月</td><td>$69&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=435">链接</a></strong></td></tr><tr><td>3G</td><td>2核</td><td>35G</td><td>3T&#x2F;月</td><td>$78.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=346">链接</a></strong></td></tr><tr><td>3.5G</td><td>2核</td><td>60G</td><td>3.5T&#x2F;月</td><td>$99&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=701">链接</a></strong></td></tr><tr><td>4G</td><td>3核</td><td>60G</td><td>6T&#x2F;月</td><td>$115&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=436">链接</a></strong></td></tr><tr><td>8G</td><td>3核</td><td>150G</td><td>10T&#x2F;月</td><td>$219&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=702">链接</a></strong></td></tr><tr><td>12G</td><td>4核</td><td>160G</td><td>12T&#x2F;月</td><td>$289&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=437">链接</a></strong></td></tr></tbody></table><h2 id="10-稍大硬盘VPS套餐"><a href="#10-稍大硬盘VPS套餐" class="headerlink" title="10. 稍大硬盘VPS套餐"></a>10. 稍大硬盘VPS套餐</h2><p>可选机房：圣何塞&#x2F;达拉斯&#x2F;芝加哥&#x2F;新泽西&#x2F;亚特兰大&#x2F;纽约&#x2F;荷兰</p><p><strong>特征</strong>：1Gbps带宽，自带一个IPv4，solusvm管理，硬盘SSD cached，洛杉矶MC机房！</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>硬盘</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>2核</td><td>2G</td><td>50G</td><td>4T&#x2F;月</td><td>$36&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=61">链接</a></strong></td></tr><tr><td>3核</td><td>4G</td><td>80G</td><td>5T&#x2F;月</td><td>$59&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=62">链接</a></strong></td></tr><tr><td>4核</td><td>6G</td><td>140G</td><td>6T&#x2F;月</td><td>$95&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=63">链接</a></strong></td></tr><tr><td>4核</td><td>8G</td><td>100G</td><td>5T&#x2F;月</td><td>$89&#x2F;年</td><td><a href="https://my.racknerd.com/aff.php?aff=1158&pid=312"><strong>链接</strong></a></td></tr><tr><td>4核</td><td>8G</td><td>200G</td><td>8T&#x2F;月</td><td>$135&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=64">链接</a></strong></td></tr></tbody></table><h2 id="11-网络测试"><a href="#11-网络测试" class="headerlink" title="11. 网络测试"></a>11. 网络测试</h2><p><strong>洛杉矶DC02：</strong> 204.13.154.3，<a href="http://lg-lax02.racknerd.com/1000MB.test">http://lg-lax02.racknerd.com/1000MB.test</a></p><p><strong>洛杉矶DC05：</strong> 5.181.135.8，<a href="http://lg-lax05.racknerd.com/1000MB.test">http://lg-lax05.racknerd.com/1000MB.test</a></p><p><strong>圣何塞：</strong> 192.210.207.88，<a href="http://lg-sj.racknerd.com/1000MB.test">http://lg-sj.racknerd.com/1000MB.test</a></p><p><strong>西雅图：</strong> 192.3.253.2，<a href="http://lg-sea.racknerd.com/1000MB.test">http://lg-sea.racknerd.com/1000MB.test</a></p><p><strong>新泽西：</strong> 192.3.165.30，<a href="http://lg-nj.racknerd.com/1000MB.test">http://lg-nj.racknerd.com/1000MB.test</a></p><p><strong>达拉斯</strong>：198.23.249.100，<a href="http://lg-dal.racknerd.com/1000MB.test">http://lg-dal.racknerd.com/1000MB.test</a></p><p><strong>芝加哥：</strong> 198.23.228.15，<a href="http://lg-chi.racknerd.com/1000MB.test">http://lg-chi.racknerd.com/1000MB.test</a></p><p><strong>阿什本</strong>：107.173.166.10，<a href="http://lg-ash.racknerd.com/1000MB.test">http://lg-ash.racknerd.com/1000MB.test</a></p><p><strong>亚特兰大：</strong> 107.173.164.160，<a href="http://lg-atl.racknerd.com/1000MB.test">http://lg-atl.racknerd.com/1000MB.test</a></p><p><strong>荷兰.阿姆斯特丹：</strong> 23.94.101.88，<a href="http://lg-ams.racknerd.com/1000MB.test">http://lg-ams.racknerd.com/1000MB.test</a></p><p><strong>水牛城：</strong> 192.3.81.8，<a href="http://lg-ny.racknerd.com/1000MB.test">http://lg-ny.racknerd.com/1000MB.test</a></p>]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Racknerd </tag>
            
            <tag> 美国VPS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CloudCone美国洛杉矶便宜VPS整理，年付$11起，1核/0.5G/20G硬盘/1G@2T流量</title>
      <link href="/archives/cloudcone-flash-sale-2023-02/"/>
      <url>/archives/cloudcone-flash-sale-2023-02/</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.laoda.de/tags/cloudcone/">CloudCone</a>的闪购活动开始，最低配15美元，配置是1核&#x2F;1G&#x2F;20G HDD（SSD Cached）&#x2F;1Gbps带宽@3T流量，洛杉矶DC2机房，不过该商家的以往促销还有不少便宜VPS，年付低至10美元，这篇文章咕咕就整理一下该商家的往期便宜VPS，感兴趣的小伙伴可以围观。</p><p><img src="https://img.laoda.de/i/2023/03/26/gofz02-0.webp" alt="image-20230326100848529"></p><h2 id="1-官网"><a href="#1-官网" class="headerlink" title="1. 官网"></a>1. 官网</h2><p><strong>网址：<a href="https://app.cloudcone.com.cn/?ref=6630">https://cloudcone.com/</a></strong></p><p>  <strong>商家详细介绍： <a href="https://blog.laoda.de/archives/vps-cloudcone">【VPS选购分享】Cloudcone—— 高性价比, 自研面板，客服退款干脆利落 廉价VPS</a></strong></p><h2 id="2-23年2月份闪购"><a href="#2-23年2月份闪购" class="headerlink" title="2. 23年2月份闪购"></a>2. 23年2月份闪购</h2><p>kvm虚拟，15美元就年付配置硬盘为纯HDD SSD Cached，第二款为纯SSD，默认都为1G口带宽，1个ipv4，3个ipv6，机房位于洛杉矶DC2机房。</p><p>注意，价格为终身优惠。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>硬盘</strong></th><th><strong>流量</strong></th><th><strong>年付</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1G</td><td>1核</td><td>30G HDD</td><td>3T&#x2F;月</td><td>$15</td><td><strong><a href="https://app.cloudcone.com.cn/vps/178/create?token=flash-2023-vps-1&ref=6630">链接</a></strong></td></tr><tr><td>2G</td><td>2核</td><td>40G SSD</td><td>6T&#x2F;月</td><td>$59.10</td><td><strong><a href="https://app.cloudcone.com.cn/vps/179/create?token=flash-2023-vps-2&ref=6630">链接</a></strong></td></tr></tbody></table><h2 id="3-23年情人节特惠-SC2-优惠"><a href="#3-23年情人节特惠-SC2-优惠" class="headerlink" title="3. 23年情人节特惠 - SC2 优惠"></a>3. 23年情人节特惠 - SC2 优惠</h2><p>kvm虚拟，硬盘为纯SSD RAID-10，1G口带宽，默认1个ipv4，3个ipv6，机房位于洛杉矶mc机房。有免费的自动快照，自动备份，防火墙托管等等。</p><p>注意，价格为终身优惠。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>硬盘</strong></th><th><strong>流量</strong></th><th><strong>年付</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1G</td><td>1核</td><td>20G</td><td>3T&#x2F;月</td><td>$32.94</td><td><strong><a href="https://app.cloudcone.com.cn/compute/1399/create?token=valentines-sc2-1&ref=6630">链接</a></strong></td></tr><tr><td>2G</td><td>2核</td><td>40G</td><td>6T&#x2F;月</td><td>$59.10</td><td><strong><a href="https://app.cloudcone.com.cn/compute/1400/create?token=valentines-sc2-2&ref=6630">链接</a></strong></td></tr><tr><td>4G</td><td>3核</td><td>80G</td><td>8T&#x2F;月</td><td>$104.99</td><td><strong><a href="https://app.cloudcone.com.cn/compute/1401/create?token=valentines-sc2-3&ref=6630">链接</a></strong></td></tr></tbody></table><h2 id="4-23年1月份促销"><a href="#4-23年1月份促销" class="headerlink" title="4. 23年1月份促销"></a>4. 23年1月份促销</h2><p>kvm虚拟，硬盘为带SSD缓存HDD，1G口带宽，默认1个ipv4，3个ipv6，机房位于洛杉矶DC2机房。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>硬盘</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>0.5G</td><td>1核</td><td>20G</td><td>2T&#x2F;月</td><td>$10.99&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/171/create?token=hashtag-2023-vps-1&ref=6630">链接</a></strong></td></tr><tr><td>1G</td><td>2核</td><td>40G</td><td>3T&#x2F;月</td><td>$16.8&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/172/create?token=hashtag-2023-vps-2&ref=6630">链接</a></strong></td></tr><tr><td>2G</td><td>2核</td><td>80G</td><td>3T&#x2F;月</td><td>$29.26&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/173/create?token=hashtag-2023-vps-3&ref=6630">链接</a></strong></td></tr><tr><td>3G</td><td>2核</td><td>110G</td><td>4T&#x2F;月</td><td>$41.44&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/174/create?token=hashtag-2023-vps-4&ref=6630">链接</a></strong></td></tr><tr><td>4G</td><td>4核</td><td>180G</td><td>5T&#x2F;月</td><td>$53.81&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/175/create?token=hashtag-2023-vps-5&ref=6630">链接</a></strong></td></tr><tr><td>8G</td><td>4核</td><td>280G</td><td>10T&#x2F;月</td><td>$101.75&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/176/create?token=hashtag-2023-vps-6&ref=6630">链接</a></strong></td></tr><tr><td>16G</td><td>8核</td><td>570G</td><td>10T&#x2F;月</td><td>$199&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/177/create?token=hashtag-2023-vps-7&ref=6630">链接</a></strong></td></tr></tbody></table><h2 id="5-22年促销整理-SC2云服务器促销套餐"><a href="#5-22年促销整理-SC2云服务器促销套餐" class="headerlink" title="5. 22年促销整理 - SC2云服务器促销套餐"></a>5. 22年促销整理 - SC2云服务器促销套餐</h2><p>kvm虚拟，纯 RAID 10 固态硬盘，1G口带宽，默认1个ipv4，3个ipv6，机房位于洛杉矶mc机房。有免费的自动快照，自动备份，防火墙托管等等。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>硬盘</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1G</td><td>1核</td><td>20G</td><td>3T&#x2F;月</td><td>$32.94&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/compute/1377/create?token=bf2022-sc2-1&ref=6630">链接</a></strong></td></tr><tr><td>2G</td><td>2核</td><td>40G</td><td>6T&#x2F;月</td><td>$59.1&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/compute/1378/create?token=bf2022-sc2-2&ref=6630">链接</a></strong></td></tr><tr><td>4G</td><td>3核</td><td>80G</td><td>8T&#x2F;月</td><td>$105&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/compute/1379/create?token=bf2022-sc2-3&ref=6630">链接</a></strong></td></tr><tr><td>8G</td><td>4核</td><td>160G</td><td>8T&#x2F;月</td><td>$200&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/compute/1380/create?token=bf2022-sc2-4&ref=6630">链接</a></strong></td></tr><tr><td>16G</td><td>8核</td><td>300G</td><td>10T&#x2F;月</td><td>$398&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/compute/1381/create?token=bf2022-sc2-5&ref=6630">链接</a></strong></td></tr><tr><td>32G</td><td>16核</td><td>600G</td><td>10T&#x2F;月</td><td>$750&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/compute/1382/create?token=bf2022-sc2-6&ref=6630">链接</a></strong></td></tr></tbody></table><h2 id="6-最后"><a href="#6-最后" class="headerlink" title="6. 最后"></a>6. 最后</h2><p>网络测试</p><p>IPv4：173.82.220.148</p><p>IPv6: 2607:f130:0:ef::2</p><p>下载：<a href="http://la.lg.cloudc.one/1000MB.test">http://la.lg.cloudc.one/1000MB.test</a></p><p>换IP技巧，如果IP有问题，解决方法如下：</p><p>1）马上销毁实例重开（有疑问可以看退款策略）</p><p>2）花$2USD换一个一定可用的IP。</p>]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cloudcone </tag>
            
            <tag> 美国VPS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>玩转ChatGPT必备的插件&amp;客户端&amp;Prompts</title>
      <link href="/archives/chatgpt-plugins-prompts/"/>
      <url>/archives/chatgpt-plugins-prompts/</url>
      
        <content type="html"><![CDATA[<p>在上一期，咕咕分享了<a href="https://blog.laoda.de/archives/chatgpt-plus-depay">【保姆级教程】从零开通ChatGPT Plus</a>，这一期咕咕就再来分享一下日常使用ChatGPT用到的一些插件&amp;客户端&amp;Prompts，看看有没有对大家有帮助的。</p><p>大家有好的插件或者Prompts推荐的，也欢迎在评论区分享出来！</p><p>让我们让ChatGPT Plus发挥出大于每个月140块钱的价值！</p><h2 id="1-客户端"><a href="#1-客户端" class="headerlink" title="1. 客户端"></a>1. 客户端</h2><h3 id="ChatGPT-桌面客户端（客户端）"><a href="#ChatGPT-桌面客户端（客户端）" class="headerlink" title="ChatGPT 桌面客户端（客户端）"></a>ChatGPT 桌面客户端（客户端）</h3><p><img src="https://img.laoda.de/i/2023/03/18/rfefcz-0.webp" alt="image-20230318165844326"></p><p>使用 Tauri 构建的ChatGPT桌面应用程序（支持Mac，Windows和Linux）</p><p>特色：</p><ul><li>支持多平台：macOS Linux Windows</li><li>支持文本转语音</li><li>支持导出 ChatGPT 历史记录（PNG、PDF 和 Markdown）<br>……</li></ul><p>注意一定在官网下载。</p><blockquote><p>目前发现有黑客利用 lencx&#x2F;ChatGPT 的热度，在 fork 项目后植入木马，重新构建安装程序。如果你身边有朋友正在使用此桌面应用，请提醒 TA 们不要随意下载不明链接。现在项目将删除其他安装途径，仅提供此下载链接 <a href="https://github.com/lencx/ChatGPT/releases">https://github.com/lencx/ChatGPT/releases</a></p></blockquote><p>GitHub地址：<a href="https://github.com/lencx/ChatGPT">https://github.com/lencx/ChatGPT</a></p><h2 id="2-插件"><a href="#2-插件" class="headerlink" title="2. 插件"></a>2. 插件</h2><h3 id="WebChatGPT（让ChatGPT联网）"><a href="#WebChatGPT（让ChatGPT联网）" class="headerlink" title="WebChatGPT（让ChatGPT联网）"></a>WebChatGPT（让ChatGPT联网）</h3><p>WebChatGPT：一款ChatGPT官网的浏览器扩展，可让ChatGPT4联网，可以一定程度解决GPT知识库在2021年的问题（相当于可以变身成为更强大的“NewBing”，解决NewBing每次回答问题很少的情况）。</p><p>缺点是开启了之后，就无法和它说“继续”了。</p><p>下载地址：<a href="https://github.com/qunash/chatgpt-advanced">https://github.com/qunash/chatgpt-advanced</a></p><p>演示效果：</p><p><img src="https://img.laoda.de/i/2023/03/18/rel0w7-0.webp" alt="d813f104698cc091e18a8e6db850c892.png"></p><p><img src="https://img.laoda.de/i/2023/03/18/ren1qa-0.webp" alt="87162d4738c9f03c1334006e5d063d34.png"></p><h3 id="Voice-Control-for-ChatGPT（语音交互）"><a href="#Voice-Control-for-ChatGPT（语音交互）" class="headerlink" title="Voice Control for ChatGPT（语音交互）"></a>Voice Control for ChatGPT（语音交互）</h3><p>你可以通过语音输入，ChatGPT也可以通过语音输出。</p><p>非常适合练口语。咕咕的应用场景是让ChatGPT充当雅思口语考官。</p><p><img src="https://img.laoda.de/i/2023/03/18/reo1z7-0.webp" alt="f9258ef0738ed1d9f95eff4d5545d271.png"></p><p>演示效果：</p><p><img src="https://img.laoda.de/i/2023/03/18/rep6zz-0.webp" alt="ea807764c5d1985bbd7884767a406ad7.png"></p><p>地址：<a href="https://chrome.google.com/webstore/search/voice%20chatgpt?hl=en">https://chrome.google.com/webstore/search/voice%20chatgpt?hl=en</a></p><h2 id="3-Prompts"><a href="#3-Prompts" class="headerlink" title="3. Prompts"></a>3. Prompts</h2><p>有了AI之后，如何描述你的问题，给出准确的关键词（Prompts）成为了最难的问题。</p><p><img src="https://img.laoda.de/i/2023/03/18/s5enpj-0.webp" alt="image-20230318170212107"></p><p><img src="https://img.laoda.de/i/2023/03/18/s5cqq3-0.webp" alt="image-20230318170202496"></p><p>以下就提供一些AI绘画和ChatGPT的Prompts给大家参考。</p><h3 id="AI绘画Prompts"><a href="#AI绘画Prompts" class="headerlink" title="AI绘画Prompts"></a>AI绘画Prompts</h3><p>网站：<a href="https://prompthero.com/">https://prompthero.com/</a></p><h3 id="ChatGPT-Shortcut（适合中文用户使用）"><a href="#ChatGPT-Shortcut（适合中文用户使用）" class="headerlink" title="ChatGPT Shortcut（适合中文用户使用）"></a>ChatGPT Shortcut（适合中文用户使用）</h3><p>ChatGPT Shortcut 是根据领域和功能划分的 ChatGPT 快捷指令表，可通过标签筛选、关键词搜索和一键复制来使用提示词，旨在简化你的工作流程并提高生产力。即使是初学者，你只需复制提示词，稍加修改后发送给 ChatGPT，就能获得指定输出，让你的生产力加倍！</p><p>地址：<a href="https://newzone.top/chatgpt/">https://newzone.top/chatgpt/</a></p><h3 id="Awesome-ChatGPT-Prompts"><a href="#Awesome-ChatGPT-Prompts" class="headerlink" title="Awesome ChatGPT Prompts"></a>Awesome ChatGPT Prompts</h3><p>地址：<a href="https://github.com/f/awesome-chatgpt-prompts">https://github.com/f/awesome-chatgpt-prompts</a></p><h3 id="Prompt-大全"><a href="#Prompt-大全" class="headerlink" title="Prompt 大全"></a>Prompt 大全</h3><p>地址：<a href="https://gpt.candobear.com/prompt">https://gpt.candobear.com/prompt</a></p><p>以上两个网站里面都有非常好的Prompts。</p><p>下面列举几个咕咕常用的Prompt，主要是英语相关的。</p><h4 id="专业翻译员"><a href="#专业翻译员" class="headerlink" title="专业翻译员"></a>专业翻译员</h4><p>直接输入即可</p><blockquote><p>I want you to act as an English translator, spelling corrector and improver. I will speak to you in any language and you will detect the language, translate it and answer in the corrected and improved version of my text, in English. I want you to replace my simplified A0-level words and sentences with more beautiful and elegant, upper level English words and sentences. Keep the meaning same, but make them more literary. I want you to only reply the correction, the improvements and nothing else, do not write explanations. My first sentence is “我是咕咕”</p></blockquote><p>之后，你输入任何语言，ChatGPT都会帮你翻译成表达非常高级的英文。</p><h4 id="雅思作文老师"><a href="#雅思作文老师" class="headerlink" title="雅思作文老师"></a>雅思作文老师</h4><p>直接输入作文问题即可。</p><p><img src="https://img.laoda.de/i/2023/03/18/sfocg0-0.webp" alt="image-20230318171936791"></p><h4 id="雅思口语老师"><a href="#雅思口语老师" class="headerlink" title="雅思口语老师"></a>雅思口语老师</h4><p>参考：<a href="https://www.bilibili.com/video/BV1AL411o7Ea">ChatGPT 教你如何通过雅思考试，你的私人外教</a></p><blockquote><p>I want you to act as an IELTS expert examiner, assess my answer and tell me what band I can get.</p></blockquote><p>之后输入</p><blockquote><p>assess my answer and tell me what band I can get 你的答案</p></blockquote><p>想要ChatGPT给你修改答案成高分的，可以输入：</p><blockquote><p>modify my answer  你的答案</p></blockquote><p>或者：</p><blockquote><p>give me band 9 answer </p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ChatGPT </tag>
            
            <tag> ChatGPT Plus </tag>
            
            <tag> Prompts </tag>
            
            <tag> AI绘画 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【保姆级教程】从零开通ChatGPT Plus</title>
      <link href="/archives/chatgpt-plus-depay/"/>
      <url>/archives/chatgpt-plus-depay/</url>
      
        <content type="html"><![CDATA[<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><h3 id="2023-07-14"><a href="#2023-07-14" class="headerlink" title="2023-07-14"></a>2023-07-14</h3><p>目前<a href="https://gao.ee/depay">depay</a>可以正常注册啦，并且已经改名叫<a href="https://gao.ee/dupay">dupay</a>啦，好久没关注了。</p><p>目前早上买KFC一直用这个卡 &#x3D; &#x3D;</p><h3 id="2023-06-01"><a href="#2023-06-01" class="headerlink" title="2023-06-01"></a>2023-06-01</h3><p>目前<a href="https://gao.ee/depay">depay</a>已经恢复，老用户可以正常充值消费使用。</p><p>不过新用户暂时还不能注册。</p><img src="https://img.laoda.de/i/2023/06/01/ur3uux-0.webp" alt="image-20230601185949568" style="zoom:33%;" /><h3 id="2023-05-16"><a href="#2023-05-16" class="headerlink" title="2023-05-16"></a>2023-05-16</h3><p>客服说已经在对接新上游了，账户也到账了部分资金，实测小额的消费还是可以的。如果卡里有余额的话，付个ChatGPT或者Midjourney还是可行的。</p><p>目前其他功能还未开放，也不能充值到卡里。</p><h3 id="2023-05-15"><a href="#2023-05-15" class="headerlink" title="2023-05-15"></a>2023-05-15</h3><p>注意，据小伙伴反馈，Onekey美国开头已经没有了，目前新开卡为香港卡头，香港开头不支持开通ChatGPT PLUS（其他的都正常）。如果想去用OneKey开Plus的暂时别上车了。</p><p>还是建议等<a href="https://gao.ee/depay">depay</a>恢复注册再试试。</p><h3 id="2023-05-13"><a href="#2023-05-13" class="headerlink" title="2023-05-13"></a>2023-05-13</h3><p>Depay暂时不可用，如果现在需要开通ChatGPT的同学，可以使用<a href="https://gao.ee/onekey">OneKey Card</a>：</p><p><a href="https://iwanlab.com/onekey-card-tutorial/">Depay 替代品来了！知名开源 Web3 钱包 OneKey 推出虚拟卡服务，可开通ChatGPT</a></p><p>公开测试费率优惠计划持续到 2023-07-21，目前不用月费。</p><hr><p>昨天咕咕昨天照例用depay付款买KFC早餐的时候发现一直扣款失败，到depay群里发现原来是卡的问题。</p><p>官方也在app右上角发了公告：</p><img src="https://img.laoda.de/i/2023/05/13/hez9ab-0.webp" alt="IMG_7B38C544F7F5-1" style="zoom: 25%;" /><p>简单来说就是由于银行问题，depay卡暂时使用不了，官方在积极沟通中。</p><p>如果急用的小伙伴，现在账号里的余额和卡里的余额都可以提取出来（咕咕刚全提出来了，等恢复了再充进去）</p><p>还是和之前一样的提醒，此类卡里最好不用放太多的钱，随用随冲，depay这个还好，如果万一遇到个黑心的卡商卷款跑路也是存在可能的。</p><h3 id="2023-04-30"><a href="#2023-04-30" class="headerlink" title="2023-04-30"></a>2023-04-30</h3><p>留言区部分小伙伴反馈开通不了的问题，很大概率都是IP黑了（同一个IP用的人太多了），可以多换几个IP试试（选欧洲的，相应地，地址也用欧洲）</p><p>咕咕目前还在用depay续费中，已经两个月了。</p><h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><p>最近ChatGPT 4发布了，很多功能让人眼前一亮，但目前只有月付20美元的尊贵Plus会员才能用。一直还在用免费18刀额度的ChatGPT 3.5的咕咕打算氪波金，升级一下ChatGPT Plus。</p><p>然而由于官方限制，ChatGPT在国内无法直接访问（咕咕有<a href="https://iwanlab.com/play-with-chatgpt/">教程</a>解决了），而ChatGPT Plus在此基础上还必须绑定美国的（欧洲的好像也行）信用卡才能开通，这门槛确实挡住了不少人……</p><p>不过方法总比困难多，咕咕经过一晚上的折腾，成功开通会员！</p><p><img src="https://img.laoda.de/i/2023/03/17/mxpnu-0.webp" alt="image-20230317003850676"></p><p><img src="https://img.laoda.de/i/2023/03/17/n82ms-0.webp" alt="image-20230317003858821"></p><p>这篇文章就和小伙伴们分享一下咕咕的曲线救国方案～</p><h2 id="2-结论与可行性分析"><a href="#2-结论与可行性分析" class="headerlink" title="2. 结论与可行性分析"></a>2. 结论与可行性分析</h2><p>先直接发结论，流程如下：</p><p>USDT（可以用<a href="https://gao.ee/okx">欧易</a>，咕咕自己有USDT）——美国信用卡（咕咕选的<a href="https://gao.ee/depay">Depay</a>）——ChatGPT（参考咕咕去年的<a href="https://iwanlab.com/play-with-chatgpt/">教程</a>）——ChatGPT Plus</p><blockquote><p>注意：本文章涉及的部分链接带有咕咕的推荐码，使用咕咕的推荐链接注册或者购买，咕咕可能会得到佣金, 但并不会影响你购买的价格（欧易的话用我的邀请码注册之后，发生交易行为我们都有机会可以获得15%的返还佣金），而且一定程度上也能支持博客的继续发展～</p></blockquote><img src="https://img.laoda.de/i/2023/03/21/qyq38c-0.webp" alt="咕咕的15%返利欧易推荐码" style="zoom:25%;" /><blockquote><p>PS：咕咕看了下，其实这个好像要求比较高，需要一直保持节点等级，一旦等级变成0，就没有了，有点坑 &#x3D; &#x3D;</p></blockquote><p>简单解释一下解题思路：</p><p>通过<a href="https://iwanlab.com/play-with-chatgpt/">从注册到畅玩ChatGPT——目前世界上最先进的民用AI聊天机器人</a>这篇分享，我们已经能使用普通版本的ChatGPT，想要升级，唯一的问题就是没有美国信用卡。</p><p><a href="https://gao.ee/depay">Depay</a>可以给我们开通美国的虚拟信用卡（准确地说是带有CVV安全码的预充值的借记卡），这个卡可以开通ChatGPT Plus（还有其他的很多功能，具体卡片的详细介绍见文末），但是需要使用USDT（一种加密货币）充值并激活卡。</p><p>所以问题变成了如何获得USDT。没有接触过的同学可以用<a href="https://gao.ee/okx">欧易</a>（一个加密货币的交易所）来买一点，咕咕因为自己还有一些，在Tronlink（一个加密货币的钱包）钱包里面，所以就不用买了。</p><p>有了USDT，把它转入Depay的钱包里面，就可以激活虚拟信用卡，然后去<a href="https://chat.openai.com/auth/login">OpenAI</a>的官网登录，绑卡，填地址（用<a href="https://www.meiguodizhi.com/usa-address/oregon">免税洲的地址</a>），确认，就能成功开通了。</p><p>开通会有一个撒花的动画。</p><p><img src="https://img.laoda.de/i/2023/03/17/mxpnu-0.webp" alt="image-20230317003850676"></p><p>然后，我们就能愉快地使用了！</p><p><img src="https://img.laoda.de/i/2023/03/17/fty5ia-0.webp" alt="image-20230317095728014"></p><p>下面开始顺序讲解。</p><p>这个文章是仓促写的（昨晚实测成功），咕咕也是刚接触不久，如果有不对的地方欢迎大家指正，也欢迎大家在评论区补充相关知识。</p><h2 id="3-开通步骤"><a href="#3-开通步骤" class="headerlink" title="3. 开通步骤"></a>3. 开通步骤</h2><p>你需要：</p><ul><li><p>科学的上网环境（美国或者欧洲的）</p></li><li><p>iPhone用户需要美区（非国区）的Apple ID</p></li><li><p>最好使用Chrome浏览器</p></li></ul><p>整个开通过程，预计花费150-210人民币（取决于开卡类型）</p><h3 id="3-1-获取USDT"><a href="#3-1-获取USDT" class="headerlink" title="3.1 获取USDT"></a>3.1 获取USDT</h3><p>这里咕咕以欧易为例子。</p><p>欧易注册地址：<a href="https://gao.ee/okx">https://gao.ee/okx</a>  （这里不用开代理，咕咕的推荐码：<code>65534142</code>  用邀请码注册之后，发生交易行为我们都有机会可以获得15%的返还佣金）</p><p>注意，欧易大陆似乎访问有问题，用的是备用域名，咕咕的短链接就是备用域名的。其实咕咕的钱包里面有USDT，但是因为想要写教程，咕咕也去注册了一下欧易。</p><p>因为Depay不接受人民币直接充值，所以我们必须借助交易所平台，来完成人民币—USDT—USD美元的兑换过程，等Depay账户里有USD美元了再给ChatGPT Plus 充值。</p><p>这里，对USDT不熟悉的朋友稍微解释一下，USDT是虚拟货币泰达币，跟USD美元锚定的，背后有大而不倒的金融机构担保，理论上来说只要USD在它就在，安全性不用太过担心。（不过我们也没必要一次性充值太多，用多少充多少即可，降低风险）</p><p>关于交易所，大陆受前两年国家整顿的政策影响，当下靠谱的大交易所目前咕咕听说的就欧易、币安了，这边我们选择注册一个欧易账号。<a href="https://gao.ee/okx">点击这里</a>–&gt;跳转官网注册<a href="https://gao.ee/okx">欧易</a>账号（注意不要开代理，直接访问即可）</p><p>等待欧易账号注册好，下载并安装APP，安装过程中如果系统提示有安全风险，注意此类APP一定要官网下载。</p><p>如果你是iPhone用户，那么要使用海外AppleID登录应用商店下载app，关于如何申请一个海外AppleID，这里暂时不多做赘述，大家可以自行搜索一下，其实就是注册普通账号，然后改一下国家，附上一个美国地址就行，美国地址可以用这个生成：<a href="https://www.meiguodizhi.com/usa-address/oregon">https://www.meiguodizhi.com/usa-address/oregon</a> 或者咕咕有时间再出一个教程。</p><p>耐心等待欧易App安装成功，点击App首页——购买或充值数字货币——我想要买币——选USDT——购买25USDT(大概￥170就行，注意如果你后续要开lite类型的Depay卡，这边需要多充值一些，具体看<code>3.2.2 申请第一张卡</code>)——支持支付宝、微信或者银行卡购买。</p><img src="https://img.laoda.de/i/2023/03/17/hdvok4-0.webp" alt="image-20230317105121549" style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/03/17/he1es9-0.webp" alt="image-20230317105148189" style="zoom:33%;" /><p>可以选择支付宝，一般会需要你加商家好友，然后转账。</p><img src="https://img.laoda.de/i/2023/03/17/hge42z-0.webp" alt="image-20230317105543818" style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/03/17/hf7g36-0.webp" alt="image-20230317105344859" style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/03/17/hfkq2l-0.webp" alt="image-20230317105406974" style="zoom:33%;" /><p>特别注意的是：新注册的欧易用户默认完成身份认证后，需要等待24小时才可以提现，如果你着急提现到Depay，你可以尝试找一下人工客服，说下你的诉求，有一定概率可以解除24小时等待。如果你真的特别着急，你也可以找depay代充，不过一般对方会按照汇率1:8收点劳务费，咕咕个人认为完全没必要，不必浪费钱。</p><img src="https://img.laoda.de/i/2023/03/17/hee92f-0.webp" alt="image-20230317105208496" style="zoom: 25%;" /><p>做完上面这一步，我们就完成了人民币——USDT的兑换。</p><blockquote><p>注意：虽然经常会听到身边朋友说谁谁谁炒币炒合约翻了几百倍财富自由了什么的，但还是不建议你去炒币，因为风险很大，人永远赚不到自己认知以外的钱，就算赚到了也会以另一种方式亏掉，很少人能管住自己的贪欲，确实有人赚钱，但是亏钱的更多，大家不要轻易尝试。</p></blockquote><h3 id="3-2-获取美国信用卡"><a href="#3-2-获取美国信用卡" class="headerlink" title="3.2 获取美国信用卡"></a>3.2 获取美国信用卡</h3><p>接着，我们来开卡。</p><p>因为ChatGPT Plus充值要求必须美国的信用卡，国内的双币卡、全币卡都不能用。所以我们用Depay来开一张美国虚拟银行卡。</p><p>关于Depay，大家可以看这个帖子：<a href="https://www.v2ex.com/t/912011">https://www.v2ex.com/t/912011</a></p><p>可以确定的是，这是华人开的公司，有以下特点：</p><ul><li><p>Depay Master Visa 卡支持绑定支付宝、微信支付、美团外卖、拼多多、Paypal(国区、美区、港区)、天猫国际版等等。</p></li><li><p>支持 ChatGPT Plus充值、Stripe 商户、google play 商店、youtube premium 、paypal 商户、美区苹果商店、和支持非 3DS 卡的电商网站。</p></li><li><p>支持国内苹果官网直接绑卡购买 iPhone 和 Mac ，可能会打电话问询，直接说即可。</p></li><li><p>支持 USDT 充值，然后使用 VISA&#x2F;master 卡直接消费，免去 OTC 兑换风险（好多人被封银行账户）</p></li><li><p>可以免 KYC 开卡（但有手续费和月费），支持 USDT 充值，实现完全匿名付款（这部分后面详细说）</p></li></ul><h4 id="3-2-1-注册Depay账号"><a href="#3-2-1-注册Depay账号" class="headerlink" title="3.2.1 注册Depay账号"></a>3.2.1 注册Depay账号</h4><p>点此<a href="https://gao.ee/depay">注册Depay账号</a>，可以用邮箱或者手机号，咕咕用的谷歌邮箱注册。（咕咕的推荐码是：<code>144000</code>）</p><p>咕咕使用过程中发现，Depay有个小问题就是有时候验证码接收比较慢，需要耐心等一下，如果超过2分钟还没有收到的话，可以重新获取一次验证码。</p><p>账号注册成功后，会让你下载它们的App安装，苹果手机需要登录海外的Apple账号，安卓手机可以直接<a href="https://www.depay.one/app/depay1.3.0.apk">下载apk安装</a> （注意此类APP一定要在官网下载）。耐心等待APP安装完毕，用刚刚注册的账号和密码登录Depay。</p><h4 id="3-2-2-申请第一张卡"><a href="#3-2-2-申请第一张卡" class="headerlink" title="3.2.2 申请第一张卡"></a>3.2.2 申请第一张卡</h4><p>点击界面左上角的“申请卡”开通虚拟信用卡，开卡的时候可以选0开卡费的，也可以选10USDT开卡费的，区别是0开卡费的需要你完成KYC认证，通俗点说就是需要你上传身份证(国内身份证没问题)或者护照认证，如果你暂时不想上传自己身份证或者护照实名的话，可以先选10USDT开卡费的，这样，下面你就要记得多转10USDT。高级卡、白金卡有10U和50U的开卡费，自己决定要不要开通，区别在于月费、手续费和额度。</p><p><img src="https://img.laoda.de/i/2023/03/17/i9w58d-0.webp" alt="mastercards费率"></p><p>咕咕这边是用的身份证认证了，开的Master的标准卡。</p><img src="https://img.laoda.de/i/2023/03/17/icg64x-0.webp" alt="image-20230317110927728" style="zoom: 33%;" /><p>大家可以按需选择。</p><blockquote><p>注意：如果你一开始就想匿名来用这张卡，请选择Lite卡。如果你是想尽快升级成更高级的卡的话，那就直接标准卡开卡，因为不管是高级卡、白金卡还是黑金卡都需要KYC。</p></blockquote><p>卡开通后，我们就可以往Depay里充值USDT 。</p><p>打开Depay App钱包，找到钱包——USDT——充币——复制你的充值地址，确认屏幕上显示主网是TRC20，<br>充值地址千万不要复制错！</p><img src="https://img.laoda.de/i/2023/03/17/ie2zl8-0.webp" alt="主网记得选择：TRC20" style="zoom:33%;" /><p>打开欧易App，找到首页——资产——提币——USDT——链上提币。<br>提币地址填Depay钱包里的充值地址，提币网络选TRC20 (千万不能选错，否则到不了账)，<br>数量选大于23USDT就行，够充值1个月ChatGPT Plus会员就行，然后提交，等待到账。</p><p>欧易提现到Depay成功后，充值完成之后，先把USDT换成USD，然后开通卡。</p><p>咕咕这边欧易也是新用户，所以就直接用Tronlink钱包里的USDT给Depay转账了，因为预计会一直续费Plus，咕咕直接转了70USDT。</p><img src="https://img.laoda.de/i/2023/03/17/id3na8-0.webp" alt="image-20230317111038026" style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/03/17/idh2ul-0.webp" alt="image-20230317111101614" style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/03/17/idl0xh-0.webp" alt="image-20230317111119001" style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/03/17/ieys57-0.webp" alt="image-20230317111351373" style="zoom:33%;" /><p>将兑换的美元存入卡中，激活后开通后，卡里就有钱了，咕咕这张卡的有效期是3年。</p><img src="https://img.laoda.de/i/2023/03/17/ifkcc1-0.webp" alt="image-20230317111450867" style="zoom:33%;" /><p>点击CVV安全码，接收一下验证码就能看到详细信息了。</p><img src="https://img.laoda.de/i/2023/03/17/ig5yrf-0.webp" alt="image-20230317111552203" style="zoom:33%;" /><p>注意保护信息，有了这个就可以使用信用卡来绑定开通ChatGPT Plus了。</p><blockquote><p>彩蛋：咕咕发现这个Depay还可以用来绑定Spotify，咕咕亲测可行，开通了美区的家庭组，一个月15.9刀，可以6个人共享！</p></blockquote><img src="https://img.laoda.de/i/2023/03/22/4czp-0.webp" alt="image-20230322000019164" style="zoom:25%;" /><p>不过这个咕咕填免税地址一直提示失效，只好填了一个加州的地址（估计和IP相关）</p><h3 id="4-开通ChatGPT账号"><a href="#4-开通ChatGPT账号" class="headerlink" title="4. 开通ChatGPT账号"></a>4. 开通ChatGPT账号</h3><p>这部分的内容不在赘述，没开通的小伙伴可以看这篇文章：<a href="https://iwanlab.com/play-with-chatgpt/">从注册到畅玩ChatGPT——目前世界上最先进的民用AI聊天机器人</a></p><h3 id="5-开通ChatGPT-Plus"><a href="#5-开通ChatGPT-Plus" class="headerlink" title="5. 开通ChatGPT Plus"></a>5. 开通ChatGPT Plus</h3><p>登录<a href="https://chat.openai.com/auth/login">官网</a>，注意用美国的环境（好像目前只有美国和欧洲可以升级Plus，如果不对请纠正），点击升级到Plus版本(升级的时候需要国际IP，升级完毕后不要求)：</p><blockquote><p>注意：上网环境尽量用美国和欧洲的IP，浏览器开启无痕模式。</p><p>如果你不确定自己的IP是不是美国或欧洲的，<a href="http://en.ipip.net/">http://en.ipip.net/</a> 查看。不要用那种很多人使用的代理，容易失败，如果失败了，多切换几个代理试试。</p></blockquote><p><img src="https://img.laoda.de/i/2023/03/17/imfos8-0.webp" alt="919629622adc924b13330394a73eee54.png"></p><p>弹出的订购页面，需要填写信用卡信息，直接填Depay提供的就好。</p><p>账单地址填一个美国免税洲的地址，没有的可以用这个生成一个：<a href="https://www.meiguodizhi.com/usa-address/oregon">https://www.meiguodizhi.com/usa-address/oregon</a><br><img src="https://img.laoda.de/i/2023/03/17/im5ffg-0.webp" alt="f4ebf03de3c54e45cf7c8c97a49dc7e2.png"></p><p>点击订阅，开始转圈圈……</p><p><img src="https://img.laoda.de/i/2023/03/17/im3crb-0.webp" alt="b84c35a3c8408d90fc823a19ab4728fb.png"></p><p>过了一会儿，提示订阅成功，满屏撒花！</p><p><img src="https://img.laoda.de/i/2023/03/17/im2fx3-0.webp" alt="60eb5c5153d0906c5cabdef06d02da65.png"></p><p>点击Continue，就可以用崭新的GPT 4啦！</p><p><img src="https://img.laoda.de/i/2023/03/17/im1hbp-0.webp" alt="814648340abda2e5ee55dbe654cd14d7.png"></p><p><img src="https://img.laoda.de/i/2023/03/17/im09un-0.webp" alt="31631bcccfb82c58601cbdd6dd0428a6.png"></p><p><img src="https://img.laoda.de/i/2023/03/17/ilza7g-0.webp" alt="9460097a765ea8253edad9f0ba20014c.png"></p><h4 id="5-1-ChatGPT-Plus初体验"><a href="#5-1-ChatGPT-Plus初体验" class="headerlink" title="5.1 ChatGPT Plus初体验"></a>5.1 ChatGPT Plus初体验</h4><p><img src="https://img.laoda.de/i/2023/03/17/ilwt00-0.webp" alt="image-20230317112516775"></p><p>当然，如果你只是想尝鲜，也可以取消自动订阅。</p><p>不过，我们的Depay信用卡其实没有透支功能，只是相当于借记卡，理论上说只要你不往卡里充钱，其实不必担心下个月被扣款。</p><p>当然，保险起见，你还是可以取消自动订阅，方法是：<br>打开ChatGPT首页并登录——左下角——My Account——Manage My Subscription——取消方案。</p><p><img src="https://img.laoda.de/i/2023/03/17/imkpll-0.webp" alt="48422380e940b2905e047fca9bde25b8.png"></p><p><img src="https://img.laoda.de/i/2023/03/17/imlnqh-0.webp" alt="bf2b1045f1430f3928a2e2358882db11.png"></p><h2 id="6-常见问题及提醒"><a href="#6-常见问题及提醒" class="headerlink" title="6. 常见问题及提醒"></a>6. 常见问题及提醒</h2><p>1、USDT的加密货币钱包，咕咕推荐：Tronlink，币安的Trust也不错，不过貌似手续费更高一些；</p><p>2、不要在Depay上存大量金额的货币，尽量用多少充多少；</p><p>3、账单地址记得填免税洲的地址，不然你会被收税，而且不低；</p><p>4、请一定要用美国IP访问，否则可能会遇到如下报错：</p><p><code>您的信用卡被拒绝了，请尝试用借记卡支付</code></p><p>5、不要想着炒币一夜暴富。</p><p>在大陆，想要顺利用上还真挺不容易的，所以大家好好利用吧。</p><p>如果能帮你解决很多问题，提高你的工作效率，那么我觉得一个月140块钱还是很值得的。（咕咕想用它来学雅思口语和作文，听说非常不错）</p><h2 id="7-补充资料"><a href="#7-补充资料" class="headerlink" title="7. 补充资料"></a>7. 补充资料</h2><h3 id="7-1-关于Depay"><a href="#7-1-关于Depay" class="headerlink" title="7.1 关于Depay"></a>7.1 关于Depay</h3><blockquote><p>一句话总结：别存大额的钱在里头，不想身份认证的开Lite卡即可。</p></blockquote><p>以下内容来自互联网上（忘记出处了 &#x3D; &#x3D;）：</p><p>Depay据称是一家为个人解决加密货币多场景应用的英国企业，持有美国MSB牌照，并接受Fincen（金融犯罪执法局）的合规监管，具有明确、合法的运营主体，满足金融监管规定的资本金要求、信息安全要求和KYC&#x2F;AML标准。</p><p>Depay支持USDT加密货币，内置英镑、欧元和美元电子账户，可自由进行英镑、欧元、美元等法定货币与USDT的交易和转账——解决加密货币与法币之间的出金入金问题，杜绝传统加密货币出金黑钱冻卡现象，畅享无国界电子货币支付。支持USDT稳定币这个桥梁，也就相当于支持包括BTC、ETH等在内的所有加密货币。</p><p>实际使用中，有以下几点总结：</p><ul><li>这家公司的业务主要针对中国大陆用户的需求——欧美用户不必使用此产品服务，它的注册过程中也明显是为中国用户准备的——中文服务和支持身份证实名验证。</li><li>它本身有一定手续费等服务费，USDT兑换USD产生1%左右的利润，充值USD美元等法币到万事达卡有1%左右的手续费（视不同的卡片套餐而不同），还有每个月不等的一点点月租费，所以它的盈利模式清晰，业务有利可图。</li><li>此美元外币预付信用卡在国内人民币支付场景中，可绑定微信和支付宝（支付宝本身另外收3%手续费，较坑）、京东，支持京东购物、中石化&#x2F;中石油加油卡、美团外卖、滴滴打车、Paypal、天猫国际版、Q币充值、拼多多、猫眼电影票赛事、唯品会等知名交易服务，但线下商超支持的机会不多，所以存在不完美的地方。</li><li>但作为一张日常消费替代卡，它实现了加密货币到人民币支付的无缝使用（国外支付就更不在话下），有较大的意义，更是方便了像上述支付ChatGPT会员等需要欧美银行卡（信用卡）支付的相应服务场景。此外，苹果手机用户也可以用此万事达卡号和一个美国家庭地址（自行找一个）开通美国Apple ID使用美区应用市场APP STORE，实现以前不能实现的事情。</li><li>Depay银行卡推出已有有一年多了，相信未来此类银行卡会越来越多，也会越来越好用——除非欧美金融监管政策有大变。</li><li>潜在风险方面，考虑到Depay这种小公司产品，为了把控个人整体资金安全风险，建议每次充值到Depay上的金额不宜过多，即使它将来万一因各种原因关闭运营，也不至于损失过多——但Depay是欧美合规金融服务，理论上不会没有底线。</li><li>因为众所周知的原因，为了国内外资金流动自由，有此需求的朋友可以先申请开卡再说，毕竟这种好玩的东西目前并不多见，你懂的。</li></ul><h3 id="7-2-关于欧易"><a href="#7-2-关于欧易" class="headerlink" title="7.2 关于欧易"></a>7.2 关于欧易</h3><p>这个咕咕其实说实话了解的不多，以下内容来自<a href="https://zh.wikipedia.org/zh-cn/%E6%AC%A7%E6%98%93">维基百科</a>：</p><p>欧易（英语：OKX；原名OKEx）是一间总部位于塞舌尔的加密货币交易所[2]，由徐明星于2017年创办[3]。该机构的主营业务是为用户提供多种加密资产交易服务。2021年2月2日，该交易所正式启用中文名“欧易”[4]。2022年1月，OKEx更名为OKX[5]。</p><p>欧易最初将总部设在中国北京[6]，后来，中国监管部门全面禁止虚拟货币交易[7]，该交易所于2021年10月13日发布了《关于中国大陆地区监管政策的通知》，宣布继续保持”退出中国大陆市场”的政策，不在该地区设立办公室和团队[8]。不过，据财新网透露，欧易虽然官方宣布在中国大陆不再设立办公室，但目前仍有包括大量工程师等在内的研发人员在该地区工作，他们以签约第三方外包公司的形式，继续为该机构工作[9]。</p><h2 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h2><p><a href="https://iwanlab.com/chatgpt-plugins-prompts/">玩转ChatGPT必备的插件&amp;客户端&amp;Prompts</a></p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Depay </tag>
            
            <tag> ChatGPT </tag>
            
            <tag> ChatGPT Plus </tag>
            
            <tag> ChatGPT 4 </tag>
            
            <tag> OKX </tag>
            
            <tag> 美国虚拟信用卡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩儿的Docker项目】好用又强大的开源建站工具——Halo 2.0</title>
      <link href="/archives/docker-compose-install-halo-version-2/"/>
      <url>/archives/docker-compose-install-halo-version-2/</url>
      
        <content type="html"><![CDATA[<h2 id="重要提示（如果你是halo的1-X用户）："><a href="#重要提示（如果你是halo的1-X用户）：" class="headerlink" title="重要提示（如果你是halo的1.X用户）："></a>重要提示（如果你是halo的1.X用户）：</h2><p>1、升级需谨慎，请提前备份好博客后再尝试升级</p><p>2、升级之前可以看看这个：<a href="https://docs.halo.run/getting-started/migrate-from-1.x">从 Halo 1.x 迁移</a></p><p>3、目前Joe主题还未适配Halo2.0，咕咕目前这个网站还没有升级</p><hr><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>早在很久之前，咕咕就发布过Halo博客的视频，当时是因为Hexo没有后台，编辑起来有点麻烦，在众多博客框架里面，偶然找到的Halo。</p><p>比起Hexo等静态博客，Halo自带后台和评论功能，非常省心；比起Wordpress，Halo搭建简单，Docker搭建，一行命令搞定，迁移更新也更方便。对于对主题要求没那么高，只是想要搭建一个博客好好写文章的小伙伴来说，Halo绝对是一个不二的选择。</p><p>更多阅读：<a href="https://blog.laoda.de/archives/blog-choosing">Hexo还是Hugo？Typecho还是Wordpress？读完这篇或许你就有答案了！</a></p><p>前不久，Halo官方迎来了大版本的更新，咕咕也在动态里发过，但是由于当时的bug还比较多，仙总还有其他的大佬们还在忙着改代码，而且halo2.0的生态需要重新建立，不少1.0里面优秀的主题还未移植适配2.0，考虑到使用体验，咕咕就暂时没有专门发视频来和大家分享。（咕咕的博客到现在用的还是Halo 1.x版本）</p><p>随着开发者们的不懈努力，Halo 在昨天晚上已经更新到了2.3.1，咕咕有个测试站点也跟着升级了一下，一番使用之后，发现现在是时候和大家分享一下全新的Halo 2.0了。</p><p><img src="https://img.laoda.de/i/2023/03/09/r7fyeq-0.webp" alt="image-20230309164507144"></p><p>我们今天主要来看一下全新的Halo2.x版本，以及试着安装Halo2.x，最后咕咕会推荐一个适配2.x的Hexo博客里面的同款主题～</p><h2 id="1-Halo2-0-简单介绍"><a href="#1-Halo2-0-简单介绍" class="headerlink" title="1. Halo2.0 简单介绍"></a>1. Halo2.0 简单介绍</h2><p>其实从slogan可以看出一些端倪。</p><p><img src="https://img.laoda.de/i/2023/03/09/r7lug7-0.webp" alt="image-20230309164535653"></p><p>Halo 1.x版本的是：</p><blockquote><p>Halo [ˈheɪloʊ]，一款现代化的开源博客&#x2F;CMS系统，值得一试。</p></blockquote><p><img src="https://img.laoda.de/i/2023/03/09/r7qew4-0.webp" alt="image-20230309164555903"></p><p>Halo 2.x版本改成了：</p><blockquote><p>Halo [ˈheɪloʊ]，好用又强大的开源建站工具。</p></blockquote><p>可见2.x版本，Halo已经不仅仅满足只用来搭建一个博客了，而是可以搭建任何网站。</p><p>由此带来的是功能的一系列升级。</p><p>我们简单来看看几个大的变化。</p><p><img src="https://img.laoda.de/i/2023/03/09/r8bnyd-0.webp" alt="image-20230309164654410"></p><h3 id="1-1-插件机制"><a href="#1-1-插件机制" class="headerlink" title="1.1 插件机制"></a>1.1 插件机制</h3><p>Halo 2.0 带来了灵活可扩展的插件机制，通过插件可以在运行时为系统添加丰富的功能，也可以保持 Halo 自身的简洁轻量。目前支持 Halo 2.0 的插件可以查阅：<a href="https://github.com/halo-sigs/awesome-halo">halo-sigs&#x2F;awesome-halo</a></p><h3 id="1-2-模板机制"><a href="#1-2-模板机制" class="headerlink" title="1.2 模板机制"></a>1.2 模板机制</h3><p>完善的模板系统，支持自定义配置，主题预览，多语言等功能。开发主题也十分方便，欢迎大家参与主题的开发。</p><h3 id="1-3-附件管理"><a href="#1-3-附件管理" class="headerlink" title="1.3 附件管理"></a>1.3 附件管理</h3><p>采用多策略存储模式，同时支持通过插件扩展外部存储位置，你可以更方便的管理你文章中的附件。</p><h3 id="1-4-搜索引擎"><a href="#1-4-搜索引擎" class="headerlink" title="1.4 搜索引擎"></a>1.4 搜索引擎</h3><p>Halo 2.0 带来了内置的全文搜索引擎支持，同时也支持通过插件扩展外部搜索引擎。</p><h3 id="1-5-多用户"><a href="#1-5-多用户" class="headerlink" title="1.5 多用户"></a>1.5 多用户</h3><p>与1.0相比，Halo 2.0增加了多用户机制，并且可以给不同的用户赋予不同的权限，多人管理维护一个网站变成了可能。</p><h3 id="1-6-一建部署"><a href="#1-6-一建部署" class="headerlink" title="1.6 一建部署"></a>1.6 一建部署</h3><p>采用了程序与用户配置分离的方式，迁移和备份成本大大降低。你只需要一条命令即可运行成功，同时也支持 Docker 部署。</p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p>文档地址：<a href="http://docs.halo.run/">http://docs.halo.run/</a><br>社区地址：<a href="https://bbs.halo.run/">https://bbs.halo.run/</a><br>官网地址：<a href="https://halo.run/">https://halo.run/</a><br>GitHub地址：<a href="https://github.com/halo-dev/halo">https://github.com/halo-dev/halo</a><br>Demo地址：<a href="https://demo.halo.run/">https://demo.halo.run</a><br>Demo后台：<a href="https://demo.halo.run/console">https://demo.halo.run/console</a><br>用户名：<code>demo</code><br>密码：<code>P@ssw0rd123..</code></p><p>这边直接丢出核心的 <code>docker-compose.yaml</code> 文件，熟悉 docker 环境的小伙伴可以直接拷贝搭建。</p><p><code>halo</code> 部署：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">halo:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">halohub/halo:2.6.0</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">halo</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">on-failure:3</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="attr">halodb:</span></span><br><span class="line">        <span class="attr">condition:</span> <span class="string">service_healthy</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">halo_network:</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./:/root/.halo2</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8090:8090&quot;</span></span><br><span class="line">    <span class="attr">command:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">--spring.r2dbc.url=r2dbc:pool:mysql://halodb:3306/halo</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">--spring.r2dbc.username=root</span></span><br><span class="line">      <span class="comment"># MySQL 的密码，请保证与下方 MYSQL_ROOT_PASSWORD 的变量值一致。</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">--spring.r2dbc.password=o#DwN&amp;JSa56</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">--spring.sql.init.platform=mysql</span></span><br><span class="line">      <span class="comment"># 外部访问地址，请根据实际需要修改</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">--halo.external-url=http://localhost:8090/</span></span><br><span class="line">      <span class="comment"># 初始化的超级管理员用户名</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">--halo.security.initializer.superadminusername=admin</span></span><br><span class="line">      <span class="comment"># 初始化的超级管理员密码</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">--halo.security.initializer.superadminpassword=P@88w0rd</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">halodb:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mysql:8.0.31</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">halodb</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">on-failure:3</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">halo_network:</span></span><br><span class="line">    <span class="attr">command:</span> </span><br><span class="line">      <span class="bullet">-</span> <span class="string">--default-authentication-plugin=mysql_native_password</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">--character-set-server=utf8mb4</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">--collation-server=utf8mb4_general_ci</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">--explicit_defaults_for_timestamp=true</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./mysql:/var/lib/mysql</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./mysqlBackup:/data/mysqlBackup</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;3306&quot;</span></span><br><span class="line">    <span class="attr">healthcheck:</span></span><br><span class="line">      <span class="attr">test:</span> [<span class="string">&quot;CMD&quot;</span>, <span class="string">&quot;mysqladmin&quot;</span>, <span class="string">&quot;ping&quot;</span>, <span class="string">&quot;-h&quot;</span>, <span class="string">&quot;127.0.0.1&quot;</span>, <span class="string">&quot;--silent&quot;</span>]</span><br><span class="line">      <span class="attr">interval:</span> <span class="string">3s</span></span><br><span class="line">      <span class="attr">retries:</span> <span class="number">5</span></span><br><span class="line">      <span class="attr">start_period:</span> <span class="string">30s</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="comment"># 请修改此密码，并对应修改上方 Halo 服务的 SPRING_R2DBC_PASSWORD 变量值</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_ROOT_PASSWORD=o#DwN&amp;JSa56</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_DATABASE=halo</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">halo_network:</span></span><br></pre></td></tr></table></figure><p>注意：<code>docker-compose.yml</code> 里面的<code>--halo.external-url=http://localhost:8090/</code> ，其中的<code>http://localhost:8090/</code>需要更改为你的域名，如果你打算用的域名是<code>abc.com</code>也就是要改成<code>--halo.external-url=https://abc.com</code></p><p>版本号<code>2.6.0</code>，可以看这边：<a href="https://github.com/halo-dev/halo/releases">https://github.com/halo-dev/halo/releases</a>   保证自己是新版本～</p><p>接着，千万记得改密码！！！</p><p>不然，你也会像这样：</p><p><img src="https://img.laoda.de/i/2023/03/09/r8ovzn-0.webp" alt="75799c30a3a90bd3e5dc2d6f3c6286d4.png"></p><p>PS：细心的小伙伴会发现，<code>docker-compose.yml</code>里面数据库<code>3306</code>并没有写成<code>3306:3306</code>，官网是写的后者，咕咕改成了前者，为的就是不在公网暴露halo数据库的端口，这样也能一定程度保障博客的安全。</p><p>以下是详细搭建教程。</p><h2 id="3-搭建环境"><a href="#3-搭建环境" class="headerlink" title="3. 搭建环境"></a>3. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器 24 元 &#x2F; 月 VPS 一台</del> 咕咕自己搭建用的是<a href="https://loll.cc/tx">腾讯轻量应用服务器</a> ，（最好是选 <strong>非大陆（香港）的服务器</strong>）如果是小白刚开始玩的话，还可以购买 <a href="https://blog.laoda.de/archives/cheap-vps-racknerd">Racknerd</a> 的服务器，最低一年不到 100 块（不过这个建议选择 1G 内存以上的机器）（Racknerd 服务器介绍：<a href="https://blog.laoda.de/archives/cheap-vps-racknerd">点击查看</a>）</li><li>系统：Debian 10 （<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD 脚本</a> 非必需 DD，用原来的系统也 OK，之后教程都是用 Debian 或者 Ubuntu 搭建～）</li><li>安装好 Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需但建议】域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>【非必需】提前安装好宝塔面板海外版本 aapanel，并安装好 Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程选用】安装好 Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><blockquote><p>服务器要求：内存建议1G 以上，硬盘可以大一些。</p></blockquote><h2 id="4-搭建视频（周末争取补上，最近比较忙-）"><a href="#4-搭建视频（周末争取补上，最近比较忙-）" class="headerlink" title="4. 搭建视频（周末争取补上，最近比较忙 &#x3D; &#x3D;）"></a>4. 搭建视频（周末争取补上，最近比较忙 &#x3D; &#x3D;）</h2><h3 id="4-1-YouTube："><a href="#4-1-YouTube：" class="headerlink" title="4.1 YouTube："></a>4.1 YouTube：</h3><p>视频地址：<a href="https://youtu.be/ZniH1cvLxZA">https://youtu.be/ZniH1cvLxZA</a></p><h3 id="4-2-哔哩哔哩-（审核中，中午12点30发布）"><a href="#4-2-哔哩哔哩-（审核中，中午12点30发布）" class="headerlink" title="4.2 哔哩哔哩 （审核中，中午12点30发布）"></a>4.2 哔哩哔哩 （审核中，中午12点30发布）</h3><p>【高清版本可以点击去吐槽到 B 站观看】：</p><p><joe-bilibili bvid="BV1wk4y1h7Ma"></joe-bilibili></p><h2 id="5-搭建方式"><a href="#5-搭建方式" class="headerlink" title="5. 搭建方式"></a>5. 搭建方式</h2><p>如果你不是用的腾讯云的轻量应用服务器，可以直接跳到 5.1 部分。</p><h3 id="安装系统（腾讯云轻量应用服务器）"><a href="#安装系统（腾讯云轻量应用服务器）" class="headerlink" title="安装系统（腾讯云轻量应用服务器）"></a>安装系统（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlyhcz-2.webp" alt="e59713fba8726d3cb55ae11bca83fe3c.png"></p><p>腾讯云轻量服务器最大的特点就是 “轻量”，相比 CVM，更适合小白上手，这边我们之间选择 Docker 基础镜像，就可以省去后面安装 Docker 的步骤（如果你非要用国内的服务器，这边装的 Docker 镜像还会帮你配置好国内镜像源，让你加速访问 docker 镜像资源）。</p><h3 id="登陆（腾讯云轻量应用服务器）"><a href="#登陆（腾讯云轻量应用服务器）" class="headerlink" title="登陆（腾讯云轻量应用服务器）"></a>登陆（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlzlj7-2.webp" alt="2722040ee311eb4a9ebf2a4945bf38f4.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm0gv8-2.webp" alt="c0b5d360053746c4095d592967ee401f.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm1vqw-2.webp" alt="e0ba858f021b846ad0abc27acf5008c2.png"></p><h3 id="5-1-安装-Docker-与-Nginx-Proxy-Manager"><a href="#5-1-安装-Docker-与-Nginx-Proxy-Manager" class="headerlink" title="5.1 安装 Docker 与 Nginx Proxy Manager"></a>5.1 安装 Docker 与 Nginx Proxy Manager</h3><p>可以直接参考这篇内容：</p><p><a href="https://blog.laoda.de/archives/nginxproxymanager">https://blog.laoda.de/archives/nginxproxymanager</a></p><h3 id="5-2-创建安装目录"><a href="#5-2-创建安装目录" class="headerlink" title="5.2 创建安装目录"></a>5.2 创建安装目录</h3><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/halo</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/halo</span><br></pre></td></tr></table></figure><p>这边我们直接用 docker 的方式安装。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure><p>英文输入法下，按 <code>i</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">halo:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">halohub/halo:2.6.0</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">halo</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">on-failure:3</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="attr">halodb:</span></span><br><span class="line">        <span class="attr">condition:</span> <span class="string">service_healthy</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">halo_network:</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./:/root/.halo2</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8090:8090&quot;</span></span><br><span class="line">    <span class="attr">command:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">--spring.r2dbc.url=r2dbc:pool:mysql://halodb:3306/halo</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">--spring.r2dbc.username=root</span></span><br><span class="line">      <span class="comment"># MySQL 的密码，请保证与下方 MYSQL_ROOT_PASSWORD 的变量值一致。</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">--spring.r2dbc.password=o#DwN&amp;JSa56</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">--spring.sql.init.platform=mysql</span></span><br><span class="line">      <span class="comment"># 外部访问地址，请根据实际需要修改</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">--halo.external-url=http://localhost:8090/</span></span><br><span class="line">      <span class="comment"># 初始化的超级管理员用户名</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">--halo.security.initializer.superadminusername=admin</span></span><br><span class="line">      <span class="comment"># 初始化的超级管理员密码</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">--halo.security.initializer.superadminpassword=P@88w0rd</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">halodb:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mysql:8.0.31</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">halodb</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">on-failure:3</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">halo_network:</span></span><br><span class="line">    <span class="attr">command:</span> </span><br><span class="line">      <span class="bullet">-</span> <span class="string">--default-authentication-plugin=mysql_native_password</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">--character-set-server=utf8mb4</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">--collation-server=utf8mb4_general_ci</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">--explicit_defaults_for_timestamp=true</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./mysql:/var/lib/mysql</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./mysqlBackup:/data/mysqlBackup</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;3306&quot;</span></span><br><span class="line">    <span class="attr">healthcheck:</span></span><br><span class="line">      <span class="attr">test:</span> [<span class="string">&quot;CMD&quot;</span>, <span class="string">&quot;mysqladmin&quot;</span>, <span class="string">&quot;ping&quot;</span>, <span class="string">&quot;-h&quot;</span>, <span class="string">&quot;127.0.0.1&quot;</span>, <span class="string">&quot;--silent&quot;</span>]</span><br><span class="line">      <span class="attr">interval:</span> <span class="string">3s</span></span><br><span class="line">      <span class="attr">retries:</span> <span class="number">5</span></span><br><span class="line">      <span class="attr">start_period:</span> <span class="string">30s</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="comment"># 请修改此密码，并对应修改上方 Halo 服务的 SPRING_R2DBC_PASSWORD 变量值</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_ROOT_PASSWORD=o#DwN&amp;JSa56</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_DATABASE=halo</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">halo_network:</span></span><br></pre></td></tr></table></figure><p>注意：<code>docker-compose.yml</code> 里面的<code>--halo.external-url=http://localhost:8090/</code> ，其中的<code>http://localhost:8090/</code>需要更改为你的域名，如果你打算用的域名是<code>abc.com</code>也就是要改成<code>--halo.external-url=https://abc.com</code></p><p>版本号<code>2.6.0</code>，可以看这边：<a href="https://github.com/halo-dev/halo/releases">https://github.com/halo-dev/halo/releases</a>   保证自己是新版本～</p><p>接着，千万记得改密码！！！</p><p>不然，你也会像这样：</p><p><img src="https://img.laoda.de/i/2023/03/09/r8scv7-0.webp" alt="75799c30a3a90bd3e5dc2d6f3c6286d4.png"></p><p>PS：细心的小伙伴会发现，<code>docker-compose.yml</code>里面数据库<code>3306</code>并没有写成<code>3306:3306</code>，官网是写的后者，咕咕改成了前者，为的就是不在公网暴露halo数据库的端口，这样也能一定程度保障博客的安全。</p><p>修改好之后，注意切换成英文输入法，然后按一下 <code>esc</code>，然后 <code>:wq</code> 保存退出。</p><h3 id="5-3-打开服务器防火墙（非必需）并访问网页"><a href="#5-3-打开服务器防火墙（非必需）并访问网页" class="headerlink" title="5.3 打开服务器防火墙（非必需）并访问网页"></a>5.3 打开服务器防火墙（非必需）并访问网页</h3><p>打开防火墙的端口 <code>8090</code></p><p>举例，腾讯云打开方法如下（部分服务商没有自带的面板防火墙，就不用这步操作了）：</p><img src="https://img.laoda.de/i/2022/06/30/zlio5h-2.webp" alt="image-20220630215240864" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/06/30/10h3dqt-2.webp" alt="image-20220630220546335" style="zoom:33%;" /><p>图中示例填的是 <code>5230</code>，备注填的是 <code>memos</code>，这边我们填 <code>8090</code>，示例填 <code>halo</code> ，确定即可（如果你在 docker-compose 文件里换了 <code>9009</code>，这边就需要填 <code>9009</code>，以此类推）</p><img src="https://img.laoda.de/i/2022/08/19/o4byqz-2.webp" alt="image-20220819145844555" style="zoom:33%;" /><p>查看端口是否被占用（以 <code>8090</code> 为例），输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:8090  <span class="comment">#查看 8090 端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果啥也没出现，表示端口未被占用，我们可以继续下面的操作了～</p><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装 lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用（被占用了就修改一下端口，比如改成 <code>8081</code>，注意 docker 命令行里和防火墙都要改）</p><p>最后：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/halo    <span class="comment"># 来到 dockercompose 文件所在的文件夹下</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>理论上我们就可以输入 <code>http://ip:8090</code> 访问安装了。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器 IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的 IP。</p><p>2、遇到访问不了的情况，请再次检查在宝塔面板的防火墙和服务商的后台防火墙是否打开对应了端口。</p></blockquote><p>有的小伙伴可能想搭建起来分享给其他人使用，如果后续想要分享给别人，IP + 端口太不优雅了，咕咕建议大家还是搞一个域名，容易记，看起来也更正规一点。这样可以做 https，会让网页更安全。</p><p>而且 <a href="https://loll.cc/ns">namesilo</a> 上面 xyz 后缀的域名一年就 7 块钱，可以年抛。</p><p>如果想要长期使用，还是建议买 com 后缀的域名，更加正规一些，可以输入 <code>laodade</code> 来获得 1 美元的优惠（不知道现在还有没有）</p><p><a href="https://loll.cc/ns">namesilo</a> 自带隐私保护，咕咕一直在用这家，价格也是这些注册商里面比较低的，关键是他家不像其他家域名注册商，没有七七八八的套路！（就是后台界面有些<del>丑</del> 古老 &#x3D; &#x3D;）</p><p><a href="https://blog.laoda.de/archives/namesilo">【域名购买】Namesilo 优惠码和域名解析教程（附带服务器购买推荐和注意事项）</a></p><p>我们接着往下看！</p><h3 id="5-4-更新-halo"><a href="#5-4-更新-halo" class="headerlink" title="5.4 更新 halo"></a>5.4 更新 halo</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/halo</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/halo /root/data/docker_data/halo.archive  <span class="comment"># 万事先备份，以防万一</span></span><br><span class="line"></span><br><span class="line">docker-compose pull</span><br><span class="line"></span><br><span class="line">docker-compose up -d    <span class="comment"># 请不要使用 docker-compose stop 来停止容器，因为这么做需要额外的时间等待容器停止；docker-compose up -d 直接升级容器时会自动停止并立刻重建新的容器，完全没有必要浪费那些时间。</span></span><br><span class="line"></span><br><span class="line">docker image prune  <span class="comment"># prune 命令用来删除不再使用的 docker 对象。删除所有未被 tag 标记和未被容器使用的镜像</span></span><br></pre></td></tr></table></figure><p>提示：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WARNING! This will remove all dangling images.</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] </span><br></pre></td></tr></table></figure><p>输入 <code>y</code></p><p>利用 Docker 搭建的应用，更新非常容易～</p><h3 id="5-5-卸载-halo"><a href="#5-5-卸载-halo" class="headerlink" title="5.5 卸载 halo"></a>5.5 卸载 halo</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/halo</span><br><span class="line"></span><br><span class="line">docker-compose down</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/halo  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>可以卸载得很干净。</p><h2 id="6-反向代理"><a href="#6-反向代理" class="headerlink" title="6. 反向代理"></a>6. 反向代理</h2><p>我们要用域名而不是IP+端口的方式来访问我们的服务！</p><h3 id="6-1-利用-Nginx-Proxy-Manager"><a href="#6-1-利用-Nginx-Proxy-Manager" class="headerlink" title="6.1 利用 Nginx Proxy Manager"></a>6.1 利用 Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p><img src="https://img.laoda.de/i/2022/10/16/n6t02e-2.webp" alt="image-20221016140213282"></p><p>之后，登陆 Nginx Proxy Manager（不会的看这个：<strong>安装 Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称 NPM）会用到 <code>80</code>、<code>443</code> 端口，所以本机不能占用（比如原来就有 Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom: 33%;" /><p><img src="https://img.laoda.de/i/2022/10/16/n7b9hm-2.webp" alt="image-20221016140258381"></p><blockquote><p> 注意填写对应的 <code>域名</code>、<code>IP</code> 和 <code>端口</code>，按文章来的话，应该是 <code>8090</code></p></blockquote><p><strong>IP 填写：</strong></p><p>如果 Nginx Proxy Manager 和 halo 在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的 Docker 容器内部 IP。</p><p><img src="https://img.laoda.de/i/2022/09/29/pcdnz5-2.webp"></p><p>否则直接填 <code>halo</code> 所在的服务器 IP 就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom: 33%;" /><p>再次打开，勾选这些：</p><p><img src="https://img.laoda.de/i/2022/10/16/n7nn6e-2.webp" alt="image-20221016140356324"></p><p>然后就可以用域名来安装访问了。</p><p>注意：<code>docker-compose.yml</code> 里面的<code>--halo.external-url=http://localhost:8090/</code> ，其中的<code>http://localhost:8090/</code>需要更改为你的域名，如果你的域名是<code>abc.com</code>也就是要改成<code>--halo.external-url=https://abc.com</code></p><h3 id="6-2-利用宝塔面板"><a href="#6-2-利用宝塔面板" class="headerlink" title="6.2 利用宝塔面板"></a>6.2 利用宝塔面板</h3><p>发现还是有不少小伙伴习惯用宝塔面板，这边也贴一个宝塔面板的反代配置：</p><p>直接新建一个站点，不要数据库，不要 php，纯静态即可。</p><p>然后打开下面的配置，修改 Nginx 的配置。</p><p><img src="https://img.laoda.de/i/2022/08/19/ov4xrt-2.webp" alt="image-20220819150345725"></p><p><img src="https://img.laoda.de/i/2022/08/19/owbbkb-2.webp" alt="image-20220819150542867"></p><p>代码如下：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:8090/;       <span class="comment"># 注意改成你实际使用的端口</span></span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此方法对 90% 的反向代理都能生效，然后就可以用域名来安装访问了。</p><p>有同学可能会问，为什么不直接用宝塔自带的反向代理功能。</p><p><img src="https://img.laoda.de/i/2022/08/19/oxf800-2.webp" alt="image-20220819150730128"></p><p>也可以，不过咕咕自己之前遇到过当有多个网站需要反代的时候，在这边设置会报错的情况 &#x3D; &#x3D; </p><p>所以后来就不用了，直接用上面的方法来操作了。</p><h2 id="7-使用教程"><a href="#7-使用教程" class="headerlink" title="7. 使用教程"></a>7. 使用教程</h2><h3 id="7-1-插件安装"><a href="#7-1-插件安装" class="headerlink" title="7.1 插件安装"></a>7.1 插件安装</h3><p>地址：<a href="https://github.com/halo-sigs/awesome-halo">https://github.com/halo-sigs/awesome-halo</a></p><p>大家可以自己先尝试看看，不难，详细的操作的话等咕咕周末搞个视频见出来。</p><h3 id="7-2-主题安装"><a href="#7-2-主题安装" class="headerlink" title="7.2 主题安装"></a>7.2 主题安装</h3><p>推荐 Butterfly 主题，地址：<a href="https://github.com/dhjddcn/halo-theme-butterfly">https://github.com/dhjddcn/halo-theme-butterfly</a></p><p>效果预览：<a href="https://dhjdd.cn/">https://dhjdd.cn/</a></p><p><img src="https://img.laoda.de/i/2023/03/09/r8wmuj-0.webp" alt="d0f270a704d629608b2e5303717b5a08.png"></p><p>这个大家也可以自己先尝试看看，详细的操作的话等咕咕周末搞个视频见出来。（这部分其实考虑可以出一个单独的视频）</p><p>PS：开发者如果需要云服务器用于项目开发的，欢迎联系咕咕，咕咕的有很多闲置的机器，可以免费赞助！</p><h2 id="8-待完善的地方"><a href="#8-待完善的地方" class="headerlink" title="8. 待完善的地方"></a>8. 待完善的地方</h2><p>1、插件商店，可以自由安装插件，而不必去GitHub自己下载</p><p>2、markdown的支持，这个咕咕觉得非常需要 &#x3D; &#x3D;</p><p>3、插件和主题能够后台平滑升级（目前似乎要手动重新下载新的）</p><p>4、友情链接、日志、图库的数据迁移（这块的数据1.0似乎还不能完美转移）</p><p>5、希望主题能够更丰富一些（这部分用的人多了，主题自然就丰富了，大家抓紧帮忙宣传一下 &#x3D; &#x3D;）</p><h2 id="9-结尾"><a href="#9-结尾" class="headerlink" title="9. 结尾"></a>9. 结尾</h2><p>祝大家用得开心，有问题可以去 GitHub 提 <a href="https://github.com/halo-dev/halo/issues">Issues</a>，也可以在评论区或者是<a href="https://bbs.halo.run/">Halo的官方论坛</a>互相交流探讨。</p><p>同时，Halo2.0的生态还在慢慢建立当中，有能力给项目做贡献的同学，也欢迎积极加入到 <a href="https://github.com/halo-dev/halo">项目</a> 中来，贡献自己的一份力量！</p><p>最后，感谢Halo团队的辛苦付出，让我们能用到这么优秀的博客！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>文档地址：<a href="http://docs.halo.run/">http://docs.halo.run/</a><br>社区地址：<a href="https://bbs.halo.run/">https://bbs.halo.run/</a><br>官网地址：<a href="https://halo.run/">https://halo.run/</a><br>GitHub地址：<a href="https://github.com/halo-dev/halo">https://github.com/halo-dev/halo</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Halo </tag>
            
            <tag> 个人博客 </tag>
            
            <tag> 网站搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>New Bing申请终于通过了！（附简单体验和防止跳转cnbing的方法）</title>
      <link href="/archives/hello-newbing/"/>
      <url>/archives/hello-newbing/</url>
      
        <content type="html"><![CDATA[<p>其实老早就申请了，一直在等候列表中……</p><p>今天想要查点东西，ChatGPT老登录不上，非常恼火，然后打开了Bing，发现还是在等候列表，按着提示下了一个bing的手机app，然后在电脑上用bing搜索了一上午的东西，下午午睡醒来，一打开邮件，发现已经通过了 &#x3D; &#x3D;（猜测微软故意的，不下它的app不给通过）</p><p><img src="https://img.laoda.de/i/2023/02/28/p0yiys-0.webp" alt="image-20230228151323322"></p><p>简单分享一下使用的体验，然后分享一个国内小伙伴如何防止bing自动跳转到cn.bing的方法。</p><h2 id="解决bing跳转cn-bing的方法"><a href="#解决bing跳转cn-bing的方法" class="headerlink" title="解决bing跳转cn.bing的方法"></a>解决bing跳转cn.bing的方法</h2><p>国内用bing非常难受，会自动跳转到 cn.bing.com，而众所周知的原因，cn.bing是没有new bing的功能的，即使你已经通过了申请 &#x3D; &#x3D;</p><p><img src="https://img.laoda.de/i/2023/02/28/p3z98v-0.webp" alt="image-20230228151831217"></p><p>所以，申请通过了之后，为了以后方便，我们需要解决的第一个问题就是——如何防止浏览器自动跳转cnbing </p><p>简单分享一下方法：</p><p>1、打开链接：<a href="https://microsoftedge.microsoft.com/addons/Microsoft-Edge-Extensions-Home?hl=zh-CN">Microsoft Edge 加载项</a></p><p>2、搜索：<code>header editor</code></p><p><img src="https://img.laoda.de/i/2023/02/28/o1cd71-0.webp" alt="image-20230228145342235"></p><p>3、安装之后填入下面的内容：</p><p><img src="https://img.laoda.de/i/2023/02/28/o0lmth-0.webp" alt="image-20230228145218105"></p><p>名称：Bing（随便写）</p><p>规则类型：修改请求头</p><p>匹配类型：正则表达式</p><p>匹配规则：<code>^http(s?)://www\.bing\.com/(.*)</code></p><p>执行类型：常规</p><p>头名称：<code>x-forwarded-for</code></p><p>头内容：<code>8.8.8.8</code></p><p>然后记得打开：</p><p><img src="https://img.laoda.de/i/2023/02/28/o2g2kp-0.webp" alt="image-20230228145527914"></p><p>想要它显示在地址栏边上，可以打开这个小眼睛：</p><p><img src="https://img.laoda.de/i/2023/02/28/o2edex-0.webp" alt="image-20230228145519758"></p><p>就可以愉快使用了！</p><p><img src="https://img.laoda.de/i/2023/02/28/p5mubz-0.gif"></p><h2 id="简单使用"><a href="#简单使用" class="headerlink" title="简单使用"></a>简单使用</h2><p>电脑上下了个Microsoft Edge的客户端，然后登录微软账号，搜索：</p><p><img src="https://img.laoda.de/i/2023/02/28/nxo4zr-0.webp" alt="image-20230228144725176"></p><p>点击<code>聊天</code>或者鼠标上滑就能触发互动模式了。</p><p><img src="https://img.laoda.de/i/2023/02/28/ny5l0v-0.webp" alt="image-20230228144806445"></p><p>比起ChatGPT，New Bing的特点是：</p><ul><li>不需要科学上网</li><li>回答问题实效性更好一些，可以知道去年世界杯冠军是谁（ChatGPT目前只知道2021年之前的内容）</li><li>回答的问题是会有参考来源的，猜测回答应该是在这些参考来源里面提炼总结出来的</li></ul><p>咕咕刚玩，了解不多，大家也可以评论区补充一下自己的使用体验。</p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> New Bing </tag>
            
            <tag> 申请New Bing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【VPS选购分享】搬瓦工限量款“THE CHICKEN”套餐，三网联通4837，年付39.99美元(1H/1G/20G/2.5G@1T流量)</title>
      <link href="/archives/vps-bandwagonhost-4837/"/>
      <url>/archives/vps-bandwagonhost-4837/</url>
      
        <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><p>搬瓦工早上推出了一款新的限量套餐——“THE CHICKEN”，这款套餐目前来说应该是瓦工最便宜的一款了，<a href="(https://blog.laoda.de/archives/vps-route)">三网4837线路</a>，半年付为26美元，年付39.99美元，配置为1H&#x2F;1G&#x2F;20G&#x2F;2.5G@1T流量，提供免费自动备份，自动快照，随时取消，支持rdns，30天退款保证。不过可惜的是，无法迁移机房。</p><p>因为怕一会儿没货，咕咕刚刚马上入手了一台，探针已挂，来做一个简单的测试。（测试中，结果马上更新）</p><h2 id="2-套餐（“THE-CHICKEN”）"><a href="#2-套餐（“THE-CHICKEN”）" class="headerlink" title="2. 套餐（“THE CHICKEN”）"></a>2. 套餐（“THE CHICKEN”）</h2><p>特点：美西佛利蒙特机房，<a href="(https://blog.laoda.de/archives/vps-route)">三网4837</a>，价格适中。缺点不能更换机房</p><ul><li>硬盘：20 GB SSD</li><li>内存：1G</li><li>CPU：1核</li><li>流量：1000 GB&#x2F;月</li><li>带宽：2.5Gbps</li><li>半年付：25.99美元 （折后24.28美元）</li><li>年付：39.99美元 （折后37.36美元）</li><li>优惠码：<a href="https://bwh81.net/the-plan?aff=67086">BWH3HYATVBJW</a></li><li>购买链接：<a href="https://bwh81.net/aff.php?aff=67086&pid=130"><strong>点击直达</strong></a></li></ul><h3 id="2-1-优点"><a href="#2-1-优点" class="headerlink" title="2.1 优点"></a>2.1 优点</h3><ul><li>三网4837，线路不错</li><li>百分之99.9的SLA保障</li><li>自动备份+ 免费快照（放数据比较放心，适合搭一个小站）</li></ul><h3 id="2-2-缺点"><a href="#2-2-缺点" class="headerlink" title="2.2 缺点"></a>2.2 缺点</h3><ul><li>硬件（CPU）稍微有点老</li><li>不能更换机房</li></ul><h3 id="2-3-注意点"><a href="#2-3-注意点" class="headerlink" title="2.3 注意点"></a>2.3 注意点</h3><ul><li>迁移机房一次，扣掉当月流量40GB</li><li>新账号30天内流量使用不超过10%，可以申请退款</li></ul><h2 id="3-测评（进行中）"><a href="#3-测评（进行中）" class="headerlink" title="3. 测评（进行中）"></a>3. 测评（进行中）</h2><p>出了一点状况，被判定滥用了……</p><p><img src="http://img.laoda.de/i/2023/02/25/hcswdf-2.webp" alt="image-20230225104940450"></p><h3 id="3-1-基本情况"><a href="#3-1-基本情况" class="headerlink" title="3.1 基本情况"></a>3.1 基本情况</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -qO- bench.sh | bash</span><br></pre></td></tr></table></figure><p><img src="http://img.laoda.de/i/2023/02/25/h6606z-2.webp" alt="image-20230225103826136"></p><h3 id="3-2-速度测试"><a href="#3-2-速度测试" class="headerlink" title="3.2 速度测试"></a>3.2 速度测试</h3><p>更新：原来是瓦工还没有调整策略 现在跑 bench，超速导致停机了……</p><p>实测是G口，现在测试的人太多了，一直卡住，还被判定成了dos攻击  &#x3D; &#x3D; </p><p><img src="http://img.laoda.de/i/2023/02/25/i7phmi-2.webp" alt="image-20230225110131757"></p><h3 id="3-3-回程线路"><a href="#3-3-回程线路" class="headerlink" title="3.3 回程线路"></a>3.3 回程线路</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -q route.f2k.pub -O route &amp;&amp; bash route</span><br></pre></td></tr></table></figure><h3 id="3-4-PING值"><a href="#3-4-PING值" class="headerlink" title="3.4 PING值"></a>3.4 PING值</h3><p><img src="http://img.laoda.de/i/2023/02/25/hhyan1-2.webp" alt="image-20230225105805570"></p><p><img src="http://img.laoda.de/i/2023/02/25/hi0crl-2.webp" alt="image-20230225105815989"></p><h3 id="3-5-网络测试"><a href="#3-5-网络测试" class="headerlink" title="3.5 网络测试"></a>3.5 网络测试</h3><p><img src="http://img.laoda.de/i/2023/02/25/hgvj5a-2.webp" alt="image-20230225105625132"></p><p><img src="http://img.laoda.de/i/2023/02/25/hgdofw-2.webp" alt="image-20230225105541226"></p><h2 id="4-延伸阅读"><a href="#4-延伸阅读" class="headerlink" title="4. 延伸阅读"></a>4. 延伸阅读</h2><p>咕咕的所有VPS：<a href="https://status.laoda.de/">https://status.laoda.de/</a></p><p>搬瓦工所有方案：<a href="https://bwg.laoda.de/">https://bwg.laoda.de/</a></p><p>搬瓦工不同方案选择：<a href="https://blog.laoda.de/archives/vps-bandwagonhost">https://blog.laoda.de/archives/vps-bandwagonhost</a></p><p>线路小知识：<a href="https://blog.laoda.de/archives/vps-route">【VPS选购小常识】VPS线路解析不完全指南 什么是CN2 GIA？什么是AS9929、AS4837？什么是CU VIP？什么是移动CMI？如何判断回程路由？</a></p>]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 美国VPS </tag>
            
            <tag> 搬瓦工 </tag>
            
            <tag> 4837 </tag>
            
            <tag> 自动备份 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩儿的Docker项目】10分钟搭建一个轻量、快速、美观的个人导航页面——Flare</title>
      <link href="/archives/docker-compose-install-flare/"/>
      <url>/archives/docker-compose-install-flare/</url>
      
        <content type="html"><![CDATA[<p><img src="http://img.laoda.de/i/2023/02/24/nf6m9s-2.webp" alt="17df619d649234415d70a10387c22a2e.png"></p><h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><p>一直有小伙伴想要咕咕介绍用docker搭建导航页面，今天咕咕就推荐一个<a href="https://soulteary.com/about/">苏洋</a>大佬受到<a href="https://github.com/pawelmalak/flame">Flame</a>启发，在此基础上优化而来的新项目<a href="https://github.com/soulteary/docker-flare">Flare</a><br>——一个轻量、快速、美观的个人导航页面，适用于 HomeLab 或其他注重私密的场景。</p><p>Flare的主要特点如下：</p><ul><li>支持Docker一键部署，维护（更新、迁移、卸载）方便</li><li>无任何数据库依赖</li><li>应用数据完全开放透明，100% 属于用户自己</li><li>支持在线编辑，内置 Material Design Icons 6k+ 图标，目前累计下载过万</li><li>支持 x86 以及常见的 ARM (ARM32v6、ARM32v7、ARM64v8)设备</li><li>应用资源消耗非常低（CPU: &lt; 1% MEM: &lt; 30M Docker Image: &lt; 10M）</li></ul><h3 id="1-1-相关地址"><a href="#1-1-相关地址" class="headerlink" title="1.1 相关地址"></a>1.1 相关地址</h3><p>Flare 官方 GitHub：<a href="https://github.com/soulteary/docker-flare">https://github.com/soulteary/docker-flare</a><br>Flare 原文作者的搭建日志（反向代理用的<code>Traefik</code>）：<a href="https://soulteary.com/2022/02/23/building-a-personal-bookmark-navigation-app-from-scratch-flare.html">https://soulteary.com/2022/02/23/building-a-personal-bookmark-navigation-app-from-scratch-flare.html</a><br>项目灵感来自：<a href="https://github.com/pawelmalak/flame">https://github.com/pawelmalak/flame</a></p><h2 id="2-项目展示（抄来自GitHub）"><a href="#2-项目展示（抄来自GitHub）" class="headerlink" title="2. 项目展示（抄来自GitHub）"></a>2. 项目展示（<del>抄</del>来自GitHub）</h2><h3 id="2-1-程序使用向导"><a href="#2-1-程序使用向导" class="headerlink" title="2.1 程序使用向导"></a>2.1 程序使用向导</h3><p>为了方便我们的使用，大佬制作了一个简单的向导程序，在 flare 启动之后，我们可以随时访问 <code>/guide</code>，获取 flare 基础界面功能的介绍。</p><p><img src="http://img.laoda.de/i/2023/02/24/nf963c-2.webp" alt="45e948de4ee54d183d9226f9bf602a76.png"></p><h3 id="2-2-程序在线编辑页面"><a href="#2-2-程序在线编辑页面" class="headerlink" title="2.2 程序在线编辑页面"></a>2.2 程序在线编辑页面</h3><p>为了满足随时随地编辑的需求，程序新增了“在线编辑”的页面。</p><p><img src="http://img.laoda.de/i/2023/02/24/nfaw2s-2.webp" alt="8ca44d828a415e3de2f36cc397ceb8be.png"></p><p>工具页面地址：<code>/editor</code></p><h3 id="2-3-程序帮助页面"><a href="#2-3-程序帮助页面" class="headerlink" title="2.3 程序帮助页面"></a>2.3 程序帮助页面</h3><p>为了减少不必要的地址记忆负担，程序新增了一个“帮助页面”，默认展示所有的程序内的工具页面。</p><p><img src="http://img.laoda.de/i/2023/02/24/nfd5de-2.webp" alt="a45f8ddaa4f2b7fca190c54bfb3e49d2.png"></p><p>工具页面地址：<code>/help</code></p><h3 id="2-4-图标"><a href="#2-4-图标" class="headerlink" title="2.4 图标"></a>2.4 图标</h3><p>为了方便小伙伴使用 flare，程序内置了来自 materialdesignicons.com 中所有的 Material Design Icons，你可以让你的每一个书签都拥有风格统一、高质量的矢量图标。</p><p><img src="https://img.laoda.de/i/2023/02/25/m0i79j-0.webp" alt="img"></p><p>启动 flare 之后，使用浏览器访问 &#x2F;icons&#x2F; 可以打开图标列表页面。</p><p>在页面中选择你喜欢的图标，鼠标点击之后，默认会将程序可以直接使用的“图标名称”保存在剪贴板，然后粘贴到配置文件中，flare 就会自动更新书签的图标啦。</p><p>（图标名称无需使用 - 连字符，并且大小写不敏感）</p><p>工具页面地址：<code>/icons</code></p><h3 id="2-5-程序性能"><a href="#2-5-程序性能" class="headerlink" title="2.5 程序性能"></a>2.5 程序性能</h3><p>“快”作为 Flare 对主要优势而言，自然是需要“满分”来加持。</p><p><img src="http://img.laoda.de/i/2023/02/24/nfnji6-2.webp" alt="f0560c57d3bd03eeef10bacecb3cfbeb.png"></p><p>如果你好奇这是如何实现的，可以阅读这篇文章：<a href="https://soulteary.com/2022/01/19/flare-production-record-application-frontend-and-backend-performance-optimization.html">《Flare 制作记录：应用前后端性能优化》</a>。</p><p>这边直接丢出核心的 <code>docker-compose.yaml</code> 文件，熟悉 docker 环境的老鸟可以直接拷贝搭建。</p><p><code>Flare</code> 部署：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.6&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">flare:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">soulteary/flare</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="comment"># 默认无需添加任何参数，如有特殊需求</span></span><br><span class="line">    <span class="comment"># 可阅读文档 https://github.com/soulteary/docker-flare/blob/main/docs/advanced-startup.md</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">flare</span></span><br><span class="line">    <span class="comment"># 启用账号登陆模式</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">flare</span> <span class="string">--nologin=0</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="comment"># 如需开启用户登陆模式，需要先设置 `nologin` 启动参数为 `0`</span></span><br><span class="line">      <span class="comment"># 如开启 `nologin`，未设置 FLARE_USER，则默认用户为 `flare`</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">FLARE_USER=flare</span></span><br><span class="line">      <span class="comment"># 指定你自己的账号密码，如未设置 `FLARE_USER`，则会默认生成密码并展示在应用启动日志中</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">FLARE_PASS=flare</span></span><br><span class="line">      <span class="comment"># 是否开启“使用向导”，访问 `/guide`</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">FLARE_GUIDE=1</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">3020</span><span class="string">:5005</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./app:/app</span></span><br></pre></td></tr></table></figure><p>以下是详细搭建教程，小白也能一步一步搭建成功。</p><h2 id="3-搭建环境"><a href="#3-搭建环境" class="headerlink" title="3. 搭建环境"></a>3. 搭建环境</h2><ul><li>服务器：咕咕这次搭建用的是<a href="https://www.lcayun.com/aff/DCVNCQKA">莱卡云香港CN2 GIA 标配版 28元&#x2F;月版本</a> ，（最好是选 <strong>非大陆（香港）的服务器</strong>）如果是小白刚开始玩的话，还可以购买 <a href="https://blog.laoda.de/archives/cheap-vps-racknerd">Racknerd</a> 的服务器，最低一年不到 100 块（不过这个建议选择 1G 内存以上的机器）（Racknerd 服务器各种型号：<a href="https://blog.laoda.de/vps.html">点击查看</a>）</li></ul><p><a href="https://www.lcayun.com/aff/DCVNCQKA"><img src="http://img.laoda.de/i/2023/02/24/nfqd7u-2.webp" alt="莱卡云香港CN2 GIA 标配版 28元/月版本"></a></p><ul><li>系统：Debian 11 （<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD 脚本</a> 非必需 DD，用原来的系统也 OK，之后教程都是用 Debian 或者 Ubuntu 搭建～）</li><li>安装好 Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需但建议】域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>【非必需】提前安装好宝塔面板海外版本 aapanel，并安装好 Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本次选用】安装好 Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><blockquote><p>服务器要求：内存建议1G，硬盘可以大一些。</p></blockquote><h2 id="4-搭建视频"><a href="#4-搭建视频" class="headerlink" title="4. 搭建视频"></a>4. 搭建视频</h2><h3 id="4-1-YouTube"><a href="#4-1-YouTube" class="headerlink" title="4.1 YouTube"></a>4.1 YouTube</h3><p>YouTube：<a href="https://youtu.be/Qsvx3AHZnYw">https://youtu.be/Qsvx3AHZnYw</a></p><h3 id="4-2-哔哩哔哩"><a href="#4-2-哔哩哔哩" class="headerlink" title="4.2 哔哩哔哩"></a>4.2 哔哩哔哩</h3><p>哔哩哔哩【高清版本可以点击去吐槽到 B 站观看】：<joe-bilibili bvid="BV1So4y1h7LZ"></joe-bilibili></p><h2 id="5-搭建方式"><a href="#5-搭建方式" class="headerlink" title="5. 搭建方式"></a>5. 搭建方式</h2><p>因为之前很多小伙伴买了腾讯云的轻量应用服务器，咕咕这边也顺带讲一下腾讯云的一些特殊配置，请如果你不是用的腾讯云的轻量应用服务器，可以直接跳到 5.1 部分。</p><h3 id="安装系统（腾讯云轻量应用服务器）"><a href="#安装系统（腾讯云轻量应用服务器）" class="headerlink" title="安装系统（腾讯云轻量应用服务器）"></a>安装系统（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlyhcz-2.webp" alt="e59713fba8726d3cb55ae11bca83fe3c.png"></p><p>腾讯云轻量服务器最大的特点就是 “轻量”，相比 CVM，更适合小白上手，这边我们之间选择 Docker 基础镜像，就可以省去后面安装 Docker 的步骤（如果你非要用国内的服务器，这边装的 Docker 镜像还会帮你配置好国内镜像源，让你加速访问 docker 镜像资源）。</p><h3 id="登陆（腾讯云轻量应用服务器）"><a href="#登陆（腾讯云轻量应用服务器）" class="headerlink" title="登陆（腾讯云轻量应用服务器）"></a>登陆（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlzlj7-2.webp" alt="2722040ee311eb4a9ebf2a4945bf38f4.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm0gv8-2.webp" alt="c0b5d360053746c4095d592967ee401f.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm1vqw-2.webp" alt="e0ba858f021b846ad0abc27acf5008c2.png"></p><h3 id="5-1-安装-Docker-与-Nginx-Proxy-Manager"><a href="#5-1-安装-Docker-与-Nginx-Proxy-Manager" class="headerlink" title="5.1 安装 Docker 与 Nginx Proxy Manager"></a>5.1 安装 Docker 与 Nginx Proxy Manager</h3><p>可以直接参考这篇内容：</p><p><a href="https://blog.laoda.de/archives/nginxproxymanager">https://blog.laoda.de/archives/nginxproxymanager</a></p><h3 id="5-2-创建安装目录"><a href="#5-2-创建安装目录" class="headerlink" title="5.2 创建安装目录"></a>5.2 创建安装目录</h3><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/Flare</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/Flare</span><br></pre></td></tr></table></figure><p>这边我们直接用 docker 的方式安装。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure><p>英文输入法下，按 <code>i</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.6&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">flare:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">soulteary/flare</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="comment"># 默认无需添加任何参数，如有特殊需求</span></span><br><span class="line">    <span class="comment"># 可阅读文档 https://github.com/soulteary/docker-flare/blob/main/docs/advanced-startup.md</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">flare</span></span><br><span class="line">    <span class="comment"># 启用账号登陆模式</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">flare</span> <span class="string">--nologin=0</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="comment"># 如需开启用户登陆模式，需要先设置 `nologin` 启动参数为 `0`</span></span><br><span class="line">      <span class="comment"># 如开启 `nologin`，未设置 FLARE_USER，则默认用户为 `flare`</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">FLARE_USER=flare</span></span><br><span class="line">      <span class="comment"># 指定你自己的账号密码，如未设置 `FLARE_USER`，则会默认生成密码并展示在应用启动日志中</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">FLARE_PASS=flare</span></span><br><span class="line">      <span class="comment"># 是否开启“使用向导”，访问 `/guide`</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">FLARE_GUIDE=1</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">3020</span><span class="string">:5005</span>      <span class="comment"># 左边的3020端口可以修改成任意服务器没有用过的端口</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./app:/app</span>     <span class="comment"># 文件保存在当前路径下的app文件夹中</span></span><br></pre></td></tr></table></figure><p>按一下 <code>esc</code>，然后 <code>:wq</code> 保存退出。</p><h3 id="5-3-打开服务器防火墙（非必需）并访问网页"><a href="#5-3-打开服务器防火墙（非必需）并访问网页" class="headerlink" title="5.3 打开服务器防火墙（非必需）并访问网页"></a>5.3 打开服务器防火墙（非必需）并访问网页</h3><p>部分大厂在自己的后台会有一个防火墙（安全策略组），这个时候我们需要在防火墙（安全策略组）打开端口 <code>3020</code></p><p>举例，如果你是腾讯云的，打开方法如下（部分服务商没有自带的面板防火墙，就不用这步操作了）：</p><img src="https://img.laoda.de/i/2022/06/30/zlio5h-2.webp" alt="image-20220630215240864" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/06/30/10h3dqt-2.webp" alt="image-20220630220546335" style="zoom:33%;" /><p>图中示例填的是 <code>5230</code>，备注填的是 <code>memos</code>，这边我们填 <code>3020</code>，示例填 <code>Flare</code> ，确定即可（如果你在 docker-compose 文件里换了 <code>9009</code>，这边就需要填 <code>9009</code>，以此类推）</p><img src="https://img.laoda.de/i/2022/08/19/o4byqz-2.webp" alt="image-20220819145844555" style="zoom:33%;" /><p>查看端口是否被占用（以 <code>3020</code> 为例），输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:3020  <span class="comment">#查看 3020 端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果啥也没出现，表示端口未被占用，我们可以继续下面的操作了～</p><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装 lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用（被占用了就修改一下端口，比如改成 <code>8081</code>，注意 docker 命令行里和防火墙都要改）</p><p>最后：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/Flare    <span class="comment"># 来到 dockercompose 文件所在的文件夹下</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>理论上我们就可以输入 <code>http://ip:3020</code> 访问安装了。</p><p><img src="http://img.laoda.de/i/2023/02/24/nfw5vd-2.webp" alt="e5d5cbefe3b1beb6dbe4eb2884e70e67.png"></p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器 IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的 IP。</p><p>2、遇到访问不了的情况，请再次检查在宝塔面板的防火墙和服务商的后台防火墙是否打开对应了端口。</p></blockquote><p>有的小伙伴可能想搭建起来分享给其他人使用，如果后续想要分享给别人，IP + 端口太不优雅了，咕咕建议大家还是搞一个域名，容易记，看起来也更正规一点。这样可以做 https，会让网页更安全。</p><p>而且 <a href="https://loll.cc/ns">namesilo</a> 上面 xyz 后缀的域名一年就 7 块钱，可以年抛。</p><p>如果想要长期使用，还是建议买 com 后缀的域名，更加正规一些，可以输入 <code>laodade</code> 来获得 1 美元的优惠（不知道现在还有没有）</p><p><a href="https://loll.cc/ns">namesilo</a> 自带隐私保护，咕咕一直在用这家，价格也是这些注册商里面比较低的，关键是他家不像其他家域名注册商，没有七七八八的套路！（就是后台界面有些<del>丑</del> 古老 &#x3D; &#x3D;）</p><p><a href="https://blog.laoda.de/archives/namesilo">【域名购买】Namesilo 优惠码和域名解析教程（附带服务器购买推荐和注意事项）</a></p><p>我们接着往下看！</p><h3 id="5-4-更新-Flare"><a href="#5-4-更新-Flare" class="headerlink" title="5.4 更新 Flare"></a>5.4 更新 Flare</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/Flare</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/Flare /root/data/docker_data/Flare.archive  <span class="comment"># 万事先备份，以防万一</span></span><br><span class="line"></span><br><span class="line">docker-compose pull</span><br><span class="line"></span><br><span class="line">docker-compose up -d    <span class="comment"># 请不要使用 docker-compose stop 来停止容器，因为这么做需要额外的时间等待容器停止；docker-compose up -d 直接升级容器时会自动停止并立刻重建新的容器，完全没有必要浪费那些时间。</span></span><br><span class="line"></span><br><span class="line">docker image prune  <span class="comment"># prune 命令用来删除不再使用的 docker 对象。删除所有未被 tag 标记和未被容器使用的镜像</span></span><br></pre></td></tr></table></figure><p>提示：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WARNING! This will remove all dangling images.</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] </span><br></pre></td></tr></table></figure><p>输入 <code>y</code></p><p>利用 Docker 搭建的应用，更新非常容易～</p><h3 id="5-5-卸载-Flare"><a href="#5-5-卸载-Flare" class="headerlink" title="5.5 卸载 Flare"></a>5.5 卸载 Flare</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/Flare</span><br><span class="line"></span><br><span class="line">docker-compose down</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/Flare  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>可以卸载得很干净。</p><h2 id="6-反向代理"><a href="#6-反向代理" class="headerlink" title="6. 反向代理"></a>6. 反向代理</h2><p>我们要用域名而不是IP+端口的方式来访问我们的服务！</p><h3 id="6-1-利用-Nginx-Proxy-Manager"><a href="#6-1-利用-Nginx-Proxy-Manager" class="headerlink" title="6.1 利用 Nginx Proxy Manager"></a>6.1 利用 Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p><img src="https://img.laoda.de/i/2022/10/16/n6t02e-2.webp" alt="image-20221016140213282"></p><p>之后，登陆 Nginx Proxy Manager（不会的看这个：<strong>安装 Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称 NPM）会用到 <code>80</code>、<code>443</code> 端口，所以本机不能占用（比如原来就有 Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom: 33%;" /><p><img src="https://img.laoda.de/i/2022/10/16/n7b9hm-2.webp" alt="image-20221016140258381"></p><blockquote><p> 注意填写对应的 <code>域名</code>、<code>IP</code> 和 <code>端口</code>，按文章来的话，应该是 <code>3020</code></p></blockquote><p><strong>IP 填写：</strong></p><p>如果 Nginx Proxy Manager 和 Flare 在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的 Docker 容器内部 IP。</p><p><img src="https://img.laoda.de/i/2022/09/29/pcdnz5-2.webp"></p><p>否则直接填 <code>Flare</code> 所在的服务器 IP 就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom: 33%;" /><p>再次打开，勾选这些：</p><p><img src="https://img.laoda.de/i/2022/10/16/n7nn6e-2.webp" alt="image-20221016140356324"></p><p>然后就可以用域名来安装访问了。</p><h3 id="6-2-利用宝塔面板"><a href="#6-2-利用宝塔面板" class="headerlink" title="6.2 利用宝塔面板"></a>6.2 利用宝塔面板</h3><p>发现还是有不少小伙伴习惯用宝塔面板，这边也贴一个宝塔面板的反代配置：</p><p>直接新建一个站点，不要数据库，不要 php，纯静态即可。</p><p>然后打开下面的配置，修改 Nginx 的配置。</p><p><img src="https://img.laoda.de/i/2022/08/19/ov4xrt-2.webp" alt="image-20220819150345725"></p><p><img src="https://img.laoda.de/i/2022/08/19/owbbkb-2.webp" alt="image-20220819150542867"></p><p>代码如下：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:3020/;       <span class="comment"># 注意改成你实际使用的端口</span></span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此方法对 90% 的反向代理都能生效，然后就可以用域名来安装访问了。</p><p>有同学可能会问，为什么不直接用宝塔自带的反向代理功能。</p><p><img src="https://img.laoda.de/i/2022/08/19/oxf800-2.webp" alt="image-20220819150730128"></p><p>也可以，不过咕咕自己之前遇到过当有多个网站需要反代的时候，在这边设置会报错的情况 &#x3D; &#x3D; </p><p>所以后来就不用了，直接用上面的方法来操作了。</p><h2 id="7-使用教程"><a href="#7-使用教程" class="headerlink" title="7. 使用教程"></a>7. 使用教程</h2><h3 id="7-1-配置Flare"><a href="#7-1-配置Flare" class="headerlink" title="7.1 配置Flare"></a>7.1 配置Flare</h3><p>具体安装和配置见咕咕的视频。</p><h2 id="8-目前遇到的问题"><a href="#8-目前遇到的问题" class="headerlink" title="8. 目前遇到的问题"></a>8. 目前遇到的问题</h2><p>编辑页面能用，但是稍微有一丢丢简陋。</p><h2 id="9-结尾"><a href="#9-结尾" class="headerlink" title="9. 结尾"></a>9. 结尾</h2><p>祝大家用得开心，有问题可以去 GitHub 提 <a href="https://github.com/soulteary/docker-flare/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，项目处于刚开始阶段，有能力给项目做贡献的同学，也欢迎积极加入到 <a href="https://github.com/soulteary/docker-flare">项目</a> 中来，贡献自己的一份力量！</p><p>最后，感谢作者付出，让我们能用到这么优秀的项目！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>Flare 官方 GitHub：<a href="https://github.com/soulteary/docker-flare">https://github.com/soulteary/docker-flare</a><br>Flare 原文作者的搭建日志（反向代理用的<code>Traefik</code>）：<a href="https://soulteary.com/2022/02/23/building-a-personal-bookmark-navigation-app-from-scratch-flare.html">https://soulteary.com/2022/02/23/building-a-personal-bookmark-navigation-app-from-scratch-flare.html</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 莱卡云 </tag>
            
            <tag> Flare </tag>
            
            <tag> Docker导航页面 </tag>
            
            <tag> 咕咕鸽玩服务器 </tag>
            
            <tag> 好玩儿的Docker项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux实用工具 Screen ——再也不怕因为网络连接中断杀死任务了！</title>
      <link href="/archives/how-to-use-linux-screen/"/>
      <url>/archives/how-to-use-linux-screen/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>不知道小伙伴们是否遇到过这样的场景：</p><p>有时候，我们本地通过SSH连接到远程服务器并不是很稳定，经常会断开连接。如果此时我们正在做类似更新系统、DD系统、远程传输&#x2F;下载文件等需要一定时间的操作，就会非常难受，好不容易传了半天的文件，中断了，又得重新来传一次，还得祈祷这次别传一半断开了。</p><p>今天我们介绍的这个工具——screen，就是为了来解决上面这些问题的！</p><blockquote><p>注：本次只介绍简单的scrren用法，更高阶的用法可以自己Google搜索或者问ChatGPT &#x3D; &#x3D;</p></blockquote><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><p>周末搞一个  &#x3D; &#x3D;</p><h2 id="Screen是什么？"><a href="#Screen是什么？" class="headerlink" title="Screen是什么？"></a>Screen是什么？</h2><p>Screen 是一个Linux里面非常古老而又非常有用的命令，提供从单个 SSH 会话中使用多个 shell 窗口（会话）的能力。当会话被分离或网络中断时，screen 会话中启动的进程仍将运行，我们可以随时重新连接到 screen 会话。</p><p>这一点对于远程登录的用户特别有用——即使网络连接中断，用户也不会失去对已经打开的命令行会话的控制。</p><h2 id="Screen怎么用？"><a href="#Screen怎么用？" class="headerlink" title="Screen怎么用？"></a>Screen怎么用？</h2><h3 id="安装Screen"><a href="#安装Screen" class="headerlink" title="安装Screen"></a>安装Screen</h3><p>因为screen是“元老级”的GNU计划项目（初始版本早在1987年就发布），所以不管是apt软件源、或者是yum软件源等其他软件源，都存在screen，只需要使用软件源安装命令即可（强烈建议大家用Debian和Ubuntu系统——<a href="https://blog.laoda.de/archives/getting-started-with-linux">解释使用Debian而不是CentOS的原因</a>）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># CentOS 7</span></span><br><span class="line">yum install screen</span><br><span class="line"></span><br><span class="line"><span class="comment"># Debian/Ubuntu</span></span><br><span class="line">apt install screen</span><br></pre></td></tr></table></figure><p>经过评论区小伙伴提醒，CentOS 8及以上的用户需要安装Screen需要用到epel来安装</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum install epel-release  <span class="comment"># 安装epel</span></span><br><span class="line"></span><br><span class="line">sudo yum install screen  <span class="comment">#安装screen</span></span><br></pre></td></tr></table></figure><h3 id="启动一个会话"><a href="#启动一个会话" class="headerlink" title="启动一个会话"></a>启动一个会话</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">screen -S gugu</span><br></pre></td></tr></table></figure><p>这样就在当前的SSH窗口里面开启了一个新的窗口，我们可以在这个窗口里面运行那些需要长时间跑着的命令（比如aria2的下载、scp&#x2F;rsync的文件传输、dd系统等等）</p><h3 id="挂起一个会话"><a href="#挂起一个会话" class="headerlink" title="挂起一个会话"></a>挂起一个会话</h3><p>我们按<code>Control</code>+<code>a</code>+<code>d</code>，就可以保持这个screen到后台并回到我们SSH的主终端。</p><p>好了，现在我们可以随意关掉SSH窗口或者在SSH窗口里干一些别的事情，刚刚的传输任务已经在另一个窗口继续运行了。</p><blockquote><p>这其实表示我们已经成功从 Screen 会话中分离出来并回到原来的 Shell 会话中了。这时，Screen 会话会继续留在后台执行更新任务。而且无论是网络断开连接，还是关闭原来的 Shell 会话，它都不会受到影响。</p></blockquote><p>当然，如果你来不及按会话分离快捷键（<code>Control</code>+<code>a</code>+<code>d</code>）网络就断开了，Screen 会话也不会关闭，它一样会继续留在后台执行更新任务。</p><h3 id="恢复一个会话"><a href="#恢复一个会话" class="headerlink" title="恢复一个会话"></a>恢复一个会话</h3><p>过了一段时间，我们想看看到底传输到什么阶段了，怎么办？</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">screen -r</span><br></pre></td></tr></table></figure><p>我们又回到了刚刚新建的<code>gugu</code> 这个窗口，可以看到现在传输还在进行当中。</p><blockquote><p>需要注意的是，该命令只适用于当前终端只启动了一个 Screen 会话的情况。</p></blockquote><h3 id="退出一个会话"><a href="#退出一个会话" class="headerlink" title="退出一个会话"></a>退出一个会话</h3><p>传输完成了，我们可以选择按<code>Control</code>+<code>a</code>+<code>d</code> 来回到我们SSH的主终端。</p><p>如果你想把这个窗口关闭，也可以选择直接运行<code>exit</code>来回到我们SSH的主终端。</p><h3 id="查看已经存在的screen终端"><a href="#查看已经存在的screen终端" class="headerlink" title="查看已经存在的screen终端"></a>查看已经存在的screen终端</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">screen -<span class="built_in">ls</span></span><br></pre></td></tr></table></figure><p>即可查看已经创建（在后台运行的终端）：<br><img src="http://img.laoda.de/i/2023/02/21/ixb83k-2.webp" alt="b1c9fcc398cc29b16f2ad4f60b8731dd.png"></p><p>这个时候如果运行<code>screen -r 具体名字</code>来恢复某个Screen 会话了，</p><p>比如：</p><p><code>screen -r 3743091</code>或者<code>screen -r test</code> 这俩命令都可以恢复<code>test</code>这个会话。</p><p>好了，这下舒服了，赶紧去试试！</p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux常用命令 </tag>
            
            <tag> Screen </tag>
            
            <tag> SSH中断 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大白话！简单解释ChatGPT和OpenAI还有API KEYS</title>
      <link href="/archives/chatgpt-and-openai/"/>
      <url>/archives/chatgpt-and-openai/</url>
      
        <content type="html"><![CDATA[<p><img src="http://img.laoda.de/i/2023/02/15/hi8c2i-2.webp" alt="0015f0d31c180b5e3309bd93aad2282a.png"></p><p>最近OpenAI和ChatGPT突然在国内爆火起来，其实早在2022-12-07，咕咕就在博客分享过——<a href="https://blog.laoda.de/archives/play-with-chatgpt">从注册到畅玩ChatGPT——目前世界上最先进的民用AI聊天机器人</a></p><p>当时觉得这玩意儿确实非常牛逼，可以非常快速地帮助基本不会编程的我写好各种以前不会写的脚本。</p><p>今天特地来水这篇文章（内容基本上都来源于互联网<a href="https://t.me/wearemjj">@冲浪麦浪花郎</a>，咕咕只是简单整理一下）帮助刚刚接触还不是非常了解的小伙伴解决一下各种ChatGPT和OpenAI的疑惑。</p><p>如有错误，欢迎指正！</p><h2 id="1-ChatGPT和OpenAI和Microsoft什么关系？"><a href="#1-ChatGPT和OpenAI和Microsoft什么关系？" class="headerlink" title="1. ChatGPT和OpenAI和Microsoft什么关系？"></a>1. ChatGPT和OpenAI和Microsoft什么关系？</h2><p>ChatGPT是OpenAI开发的聊天机器人，ChatGPT属于OpenAI面向用户的一个产品。你可以视为子集，OpenAI是它爸。</p><p>OpenAI很早就成立了，后面拿到天使融资和投资才不停的壮大发展，目前已经过度到快要变现盈利阶段。</p><p>然后OpenAI还有个金主爸爸叫微软Microsoft。这位金主爸爸不久会给自家的bing.com搜索引擎植入这个ChatGPT功能……</p><h2 id="2-图解各种AI术语"><a href="#2-图解各种AI术语" class="headerlink" title="2. 图解各种AI术语"></a>2. 图解各种AI术语</h2><p>是不是经常混淆人工智能、机器学习、深度学习、深度神经网络、人工智能模型、对抗神经网络、卷积神经网络、大语言模型、GPT-3等等概念？</p><p>没关系，画个图就清晰了。</p><p><img src="http://img.laoda.de/i/2023/02/15/hiigmz-2.webp" alt="eb114c8025def47fc5708043ca063da5.png"></p><h2 id="3-关于API-KEY的问题"><a href="#3-关于API-KEY的问题" class="headerlink" title="3. 关于API KEY的问题"></a>3. 关于API KEY的问题</h2><p><img src="http://img.laoda.de/i/2023/02/15/hikqfs-2.webp" alt="9a0ada4f5a46208c89da9e06d4dfd7c8.png"></p><p>OpenAI只要是成功注册的账号都有API。</p><p>OpenAI账号不管是否PLUS都有免费的额度。目前来说是18刀免费账户额度，我的后台显示4月1日截止，截止后还会有没有没说。一天能花0.1刀个人问答都很厉害了的，OpenAI靠免费额度限制滥用。</p><p>别听图片上这种言论。都是忽悠人购买的，成本几块钱撑死。参考2元注册<a href="https://blog.laoda.de/archives/play-with-chatgpt">OpenAI</a>。</p><p>至于带API有两种，</p><h3 id="3-1-OpenAI的API"><a href="#3-1-OpenAI的API" class="headerlink" title="3.1 OpenAI的API"></a>3.1 OpenAI的API</h3><p>一种是OpenAI的API key 只要你有账号就都有。可以直接调用有账号情况下，这个模式下就可以自己制作机器人。不需要升级PLUS就可以实现。</p><p>申请方法：</p><p>首先注册好账号，之后点击这个链接：<a href="https://platform.openai.com/account/api-keys">https://platform.openai.com/account/api-keys</a> 即可创建API，默认18美元额度。</p><p>基于OPENAI API KEY的网页应用，可以参考这个GitHub：</p><p><a href="https://github.com/slippersheepig/chatgpt-web">使用GPT-3.5中的text-davinci-003模型，利用OpenAI API实现简单HTML网页版在线聊天</a></p><h3 id="3-2-ChatGPT-的API"><a href="#3-2-ChatGPT-的API" class="headerlink" title="3.2 ChatGPT 的API"></a>3.2 ChatGPT 的API</h3><p>另一种是ChatGPT 的API。不要钱！也是邀请制度。申请一下隔天就可以通过。</p><p>申请方法：</p><p>在有账号情况下——进入OpenAI个人面板 (<a href="https://platform.openai.com/overview">https://platform.openai.com/overview</a>) ——顶部有一行“ChatGPT is coming to our API soon, sign up to stay updated”点击sign up——申请资料填报加入候补名单——耐心等待1天时间就可以了</p><p><img src="http://img.laoda.de/i/2023/02/15/hinppd-2.webp" alt="f90e97d40d875a24d05b5e5500caa2d9.png"></p><p>基于ChatGPT的网页应用，可以参考这个GitHub：</p><p><a href="https://github.com/slippersheepig/chatgpt-html">使用acheong08的非官方ChatGPT接口，实现简单HTML网页版在线聊天</a></p><p>一句话总结，利用API的机器人比官网直接访问的机器人要“笨”一些，不过基本也够用，而且更稳定一点。</p><h3 id="3-3-补充阅读（专业向）"><a href="#3-3-补充阅读（专业向）" class="headerlink" title="3.3 补充阅读（专业向）"></a>3.3 补充阅读（专业向）</h3><h4 id="（重要）ChatGPT与GPT-3-5（OpenAI-API）的区别"><a href="#（重要）ChatGPT与GPT-3-5（OpenAI-API）的区别" class="headerlink" title="（重要）ChatGPT与GPT-3.5（OpenAI API）的区别"></a><a href="https://user-images.githubusercontent.com/58287293/207792987-a0a781df-8273-4148-a369-aa4a2379686a.png"><img src="https://user-images.githubusercontent.com/58287293/207792987-a0a781df-8273-4148-a369-aa4a2379686a.png" alt="G L%7VF I~{@83}SVRI_WPN"></a>（重要）ChatGPT与GPT-3.5（OpenAI API）的区别</h4><ul><li>在<a href="https://openai.com/blog/chatgpt/">OpenAI官方网页</a>中，我们可以看到官方对ChatGPT的描述为“ChatGPT is fine-tuned from a model in the GPT-3.5 series, which finished training in early 2022. You can learn more about the 3.5 series <a href="https://beta.openai.com/docs/model-index-for-researchers">here</a>. ChatGPT and GPT 3.5 were trained on an Azure AI supercomputing infrastructure”，从而得知ChatGPT与GPT-3.5是两个不同产品</li><li>官方对GPT-3.5系列的<a href="https://beta.openai.com/docs/model-index-for-researchers">介绍</a>里，<code>text-davinci-003</code>是其中的模型之一</li><li>我们再查阅官方对OpenAI API KEY的<a href="https://beta.openai.com/docs/introduction/key-concepts">介绍</a>，其中有一句“The API is powered by a set of models with different capabilities and price points. Our base GPT-3 models are called Davinci, Curie, Babbage and Ada”，davinci赫然在列</li></ul><h4 id="至此，我们可以得出结论：现在所有使用OpenAI-API-KEY的项目，都不是基于ChatGPT开发的项目，官方并未发布ChatGPT的API接口"><a href="#至此，我们可以得出结论：现在所有使用OpenAI-API-KEY的项目，都不是基于ChatGPT开发的项目，官方并未发布ChatGPT的API接口" class="headerlink" title=" 至此，我们可以得出结论：现在所有使用OpenAI API KEY的项目，都不是基于ChatGPT开发的项目，官方并未发布ChatGPT的API接口"></a><a href="https://user-images.githubusercontent.com/58287293/207798807-a4dce6d3-14a0-40af-8008-30de8a55d513.png"><img src="https://user-images.githubusercontent.com/58287293/207798807-a4dce6d3-14a0-40af-8008-30de8a55d513.png" alt="I4{CU~ G( OH$WR_ T_1JWF"></a> 至此，我们可以得出结论：现在所有使用OpenAI API KEY的项目，<code>都不是基于ChatGPT开发的项目</code>，官方并未发布ChatGPT的API接口</h4><ul><li>事实上，ChatGPT最近发生过登录认证风波，想了解详细过程的可以查看这个<a href="https://github.com/acheong08/ChatGPT/issues/261">issue</a></li><li>如果你自己有分别使用过ChatGPT的官方chat和OpenAI的API接口chat，你会发现API接口chat比ChatGPT的官方chat“笨”得多</li></ul><h2 id="4-网页免登录版本"><a href="#4-网页免登录版本" class="headerlink" title="4. 网页免登录版本"></a>4. 网页免登录版本</h2><p><img src="http://img.laoda.de/i/2023/02/14/12cbq08-2.webp" alt="WX20230214-230032@2x"></p><p>自己花2块钱<a href="https://blog.laoda.de/archives/play-with-chatgpt">申请一个账号</a>，然后把自己账号的APIKEY放入使用即可～</p><p>之后无需翻墙即可使用～</p><p>体验：<a href="https://chatgpt.laoda.de/">https://chatgpt.laoda.de/</a>  （这个是<del>斥巨资</del>38块买的源码 &#x3D; &#x3D;）</p><p>源码下载：<a href="https://share.laoda.de/s/ntg3co">https://share.laoda.de/s/ntg3co</a></p><p>食用方法：</p><blockquote><p>PHP版本：7.3</p><p>下载后修改 chatgptApi.php 文件的第四行的$key（把你的内容写进去）即可</p><p>轮训打开<code>key.txt</code>输入key，一行一个，可以自行修改名称避免被获取key</p></blockquote><p>此源码来自：<a href="https://blog.orange.icu/index.php/archives/7/">@orange</a></p><p>感谢作者的辛苦付出！</p><h2 id="5-OpenAI的常见问题"><a href="#5-OpenAI的常见问题" class="headerlink" title="5. OpenAI的常见问题"></a>5. OpenAI的常见问题</h2><p>下面是一些定位点，扫盲可以看看。</p><p>下面的链接全部走代理。</p><ul><li><p>OpenAI官网 (<a href="https://openai.com/">https://openai.com/</a>)</p></li><li><p>OpenAI登陆&#x2F;注册 (<a href="https://platform.openai.com/login/">https://platform.openai.com/login/</a>) </p></li><li><p>OpenAI账号面板 (<a href="https://platform.openai.com/overview">https://platform.openai.com/overview</a>) </p></li><li><p>OpenAI账单面板  (<a href="https://platform.openai.com/account/billing/overview">https://platform.openai.com/account/billing/overview</a>) </p></li><li><p>OepnAI 用量额度（免费账户都有18刀额度） (<a href="https://platform.openai.com/account/usage">https://platform.openai.com/account/usage</a>) </p></li><li><p>OpenAI API-key (<a href="https://platform.openai.com/account/api-keys">https://platform.openai.com/account/api-keys</a>)</p></li><li><p>OpenAI API参考开发文档 (<a href="https://platform.openai.com/docs/api-reference/introduction">https://platform.openai.com/docs/api-reference/introduction</a>) </p></li><li><p>OpenAI的FAQ疑难解答 (<a href="https://help.openai.com/en/">https://help.openai.com/en/</a>) </p></li><li><p>OpenAI下的ChatGPT (<a href="https://chat.openai.com/chat">https://chat.openai.com/chat</a>) </p></li><li><p>OpenAI下的ChatGPT升级成付费20刀每月Plus账号与普通的区别(<a href="https://openai.com/blog/chatgpt-plus/">https://openai.com/blog/chatgpt-plus/</a>)</p></li></ul><h2 id="6-其他AI相关网站推荐"><a href="#6-其他AI相关网站推荐" class="headerlink" title="6. 其他AI相关网站推荐"></a>6. 其他AI相关网站推荐</h2><p>另外，提供一些AI网站给大家：</p><p>收集分享一些AI工具（网站），持续更新</p><ul><li>Galileo AI (<a href="https://www.usegalileo.ai/">https://www.usegalileo.ai/</a>) 用AI设计生成UI设计</li><li>README 生成器 (<a href="https://readme.rustc.cloud/zh">https://readme.rustc.cloud/zh</a>) 用AI生成完整的GitHub readme</li><li>ChatGPT for StackOverflow (<a href="https://stackoverflow.gg/">https://stackoverflow.gg/</a>) 查看 ChatGPT 对 StackOverflow 上每个问题的回复，甚至是未回答的问题</li><li>周报生成器 (<a href="https://weeklyreport.avemaria.fun/zh">https://weeklyreport.avemaria.fun/zh</a>) 简单描述工作内容，帮你生成完整周报</li><li>email-helper (<a href="https://email-helper.vercel.app/">https://email-helper.vercel.app/</a>) AI帮你写邮件</li><li>animeai (<a href="https://animeai.app/">https://animeai.app/</a>) AI生成漫画风格图片</li><li>autodraw (<a href="https://www.autodraw.com/">https://www.autodraw.com/</a>) AI辅助绘画</li><li>bearly (<a href="https://bearly.ai/">https://bearly.ai/</a>) AI帮助你阅读、创作，撰写，提高你的工作效率</li><li>poe (<a href="https://quorablog.quora.com/Poe-1">https://quorablog.quora.com/Poe-1</a>) quora出品的对话式AI工具</li><li>latentlabs (<a href="https://www.latentlabs.art/">https://www.latentlabs.art/</a>) 根据文本生成 360 度全景图</li><li>invideo (<a href="https://invideo.io/ai/">https://invideo.io/ai/</a>) 根据文本生成视频</li><li>docuchat (<a href="https://www.docuchat.io/">https://www.docuchat.io/</a>) 上传文档，AI回答对应的问题</li><li>tweetmonk (<a href="https://tweetmonk.com/">https://tweetmonk.com/</a>) AI帮你打理社交网络</li><li>image-to-sound-fx (<a href="https://huggingface.co/spaces/fffiloni/image-to-sound-fx">https://huggingface.co/spaces/fffiloni/image-to-sound-fx</a>) 图片转换为相对应的声音内容</li><li>murf (<a href="https://murf.ai/">https://murf.ai/</a>) AI生成真人演讲视频</li><li>stockimg (<a href="https://stockimg.ai/">https://stockimg.ai/</a>) AI设计图标</li><li>playgroudai (<a href="https://playgroundai.com/">https://playgroundai.com/</a>) 获取AI绘图提示词，帮助你编辑图片</li><li>MetaVoice Studio (<a href="https://studio.themetavoice.xyz/">https://studio.themetavoice.xyz/</a>) AI声音编辑平台</li><li>campbell (<a href="https://review.gobudapest.io/">https://review.gobudapest.io/</a>) AI生成评语</li><li>penlope (<a href="https://penelopeai.com/">https://penelopeai.com/</a>) AI辅助markdown编辑器</li><li>ChatGPT Detector (<a href="https://huggingface.co/spaces/Hello-SimpleAI/chatgpt-detector-single">https://huggingface.co/spaces/Hello-SimpleAI/chatgpt-detector-single</a>) 判断文本是否是AI生成</li><li>humata (<a href="https://app.humata.ai/signin">https://app.humata.ai/signin</a>) 利用AI来分析论文内容</li><li>tosummary (<a href="https://tosummary.com/">https://tosummary.com/</a>) 利用AI提取书籍、YouTube视频摘要</li></ul><p>一些好玩的神经网络工具。</p><ul><li><a href="https://www.lalal.ai/">https://www.lalal.ai/</a> - 从任何音频和视频中提取人声、伴奏和各种乐器的AI。</li><li><a href="https://tosummary.com/">https://tosummary.com/</a> - 一键式摘要器，对文章、书籍、甚至YouTube视频进行转述。</li><li><a href="https://www.autoti.io/">https://www.autoti.io/</a> - 创建热门Instagram帖子。</li><li><a href="https://chatbotkit.com/">https://chatbotkit.com/</a> - 允许您创建聊天机器人。</li><li><a href="https://colorize.cc/">https://colorize.cc/</a> - 给黑白照片上色。</li><li><a href="https://aihelperbot.com/">https://aihelperbot.com/</a> - 构建任何需要的 SQL 查询。</li><li><a href="https://nuclia.com/">https://nuclia.com/</a> - 聪明的搜索引擎。</li><li><a href="https://murf.ai/">https://murf.ai/</a> - 将文本转录成音频。</li><li><a href="https://debuild.app/">https://debuild.app/</a> - 帮助编写web应用程序。</li><li><a href="https://tryellie.com/">https://tryellie.com/</a> - 模仿您的风格，帮您回复电邮。</li></ul><h2 id="7-参考资料"><a href="#7-参考资料" class="headerlink" title="7. 参考资料"></a>7. 参考资料</h2><ul><li><a href="https://t.me/wearemjj">https://t.me/wearemjj</a></li><li><a href="https://github.com/slippersheepig/chatgpt-html">https://github.com/slippersheepig/chatgpt-html</a></li><li><a href="https://github.com/slippersheepig/chatgpt-web">https://github.com/slippersheepig/chatgpt-web</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ChatGPT </tag>
            
            <tag> OpenAI </tag>
            
            <tag> Microsoft </tag>
            
            <tag> AI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【VPS选购分享】Crunchbits——适合建站或者跑项目！$6.8/月 4GB 锐龙 5950X 带 50GB NVMe + 450GB 硬盘 性能与容量兼具！</title>
      <link href="/archives/vps-crunchbits/"/>
      <url>/archives/vps-crunchbits/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><img src="http://img.laoda.de/i/2023/02/07/fjtja9-2.webp" alt="image-20230207094025427"></p><p>Crunchbits，这是一家2021年11月30日成立的美国主机商，主营NVMe KVM VPS、EPYC 高频 NVMe VPS、锐龙 5950X NVMe KVM VPS、大硬盘存储VPS、GPU 显卡服务器和独立服务器，数据中心位于美国 爱达荷州。</p><p><img src="http://img.laoda.de/i/2023/02/11/ibby0z-2.webp" alt="83364bf4e21c714c462fc7b58f4c8319.png"></p><p>美西，距离西雅图、圣荷西、洛杉矶都比较近。</p><p>目前网站仅支持信用卡、比特币和Paypal付款（暂不支持支付宝）。</p><p>本次推荐套餐：</p><p><strong>4GB 锐龙 5950X 带 450GB 硬盘！</strong></p><ul><li>1 锐龙 5950X vCore</li><li>4GB DDR4 <strong>ECC</strong> 内存</li><li>50GB 第 4 代 NVMe 操作系统&#x2F;主磁盘</li><li><strong>450GB 硬盘</strong>存储磁盘</li><li>10TB 带宽 @ <strong>2.5Gbps</strong></li><li>1 个 IPv4 + 1 个 IPv6 &#x2F;64</li><li>$ 8 &#x2F;月 <strong>$ 6.8 &#x2F;月</strong> 带优惠券：<strong>ONLYTOWEL</strong></li><li><a href="https://loll.cc/crunchbits"><strong>购买地址</strong></a></li></ul><blockquote><p>注意：HDD块存储必须在成功订购后发工单让老板添加。</p></blockquote><p>工单参考：</p><blockquote><p>标题：</p><p>Add a 450GB HDD to my hard drive</p><p>内容：</p><p>Dear crunchbits,</p><p>I don’t currently have a 450GB HDD as a drive, please help add it, thanks!</p></blockquote><p><img src="https://img.laoda.de/i/2023/02/06/nh49vc-2.webp" alt="image-20230206141945630"></p><p>特色：</p><ul><li>NVMe</li><li>大存储</li><li>5950X</li><li>带免费备份功能，可以设置指定时间自动备份（备份保留一份，仅备份50GB NVMe上的内容，无法备份450G HDD上的内容）</li><li>美西</li></ul><p>缺陷：</p><ul><li>新商家，不知道会不会跑路（可以月付， PayPal上车，消除风险）</li><li>线路可能没那么好（美西其实还凑合，实在不行可以反代解决）</li></ul><h2 id="1-视频介绍"><a href="#1-视频介绍" class="headerlink" title="1. 视频介绍"></a>1. 视频介绍</h2><p>YouTube：<a href="https://youtu.be/s-DQ-SI7Ij4">https://youtu.be/s-DQ-SI7Ij4</a></p><h2 id="2-官方网站"><a href="#2-官方网站" class="headerlink" title="2. 官方网站"></a>2. 官方网站</h2><p>官网：<a href="https://loll.cc/crunchbits">https://crunchbits.com/</a></p><h2 id="3-注意点"><a href="#3-注意点" class="headerlink" title="3. 注意点"></a>3. 注意点</h2><ul><li>个人信息里面的街道啥的也要完善好</li><li>地址什么的要填合乎逻辑的地址，可以不准确但是不要乱填</li></ul><p>如果万一订单被判定欺诈，可以发工单和客服沟通。</p><p>如果需要翻译，可以用这个：<a href="https://www.deepl.com/translator">https://www.deepl.com/translator</a></p><h2 id="4-套餐介绍"><a href="#4-套餐介绍" class="headerlink" title="4. 套餐介绍"></a>4. 套餐介绍</h2><h3 id="4-1-Ryzen-5950X-CPU-NVMe-VPS-Plans"><a href="#4-1-Ryzen-5950X-CPU-NVMe-VPS-Plans" class="headerlink" title="4.1 Ryzen 5950X CPU NVMe VPS Plans"></a>4.1 Ryzen 5950X CPU NVMe VPS Plans</h3><p>最低配折后 <strong>$6.8&#x2F;</strong> 月， 优惠码： <code>ONLYTOWEL</code>（85折循环优惠码）</p><table><thead><tr><th><strong>内存</strong></th><th><strong>Ryzen 5950X Cores</strong>CPU</th><th>固态硬盘</th><th>HDD硬盘</th><th><strong>Bandwidth @ 2.5Gbps</strong></th><th><strong>IPv4 | IPv6</strong></th><th>折前价格</th><th>购买</th></tr></thead><tbody><tr><td>4GB</td><td><strong>1</strong> 5950X Cores</td><td>50GB NVMe</td><td>450GB HDD</td><td>10TB</td><td>1 IPv4 | 1 &#x2F;64</td><td><strong>$8&#x2F;mo</strong></td><td><a href="https://loll.cc/crunchbits">购买链接</a></td></tr><tr><td>8GB</td><td><strong>2</strong> 5950X Cores</td><td>100GB NVMe</td><td>900GB HDD</td><td>20TB</td><td>1 IPv4 | 1 &#x2F;64</td><td><strong>$16&#x2F;mo</strong></td><td><a href="https://loll.cc/crunchbits">购买链接</a></td></tr><tr><td>16GB</td><td><strong>4</strong> 5950X Cores</td><td>200GB NVMe</td><td><strong>1.8TB</strong> HDD</td><td>40TB</td><td>1 IPv4 | 1 &#x2F;64</td><td><strong>$32&#x2F;mo</strong></td><td><a href="https://loll.cc/crunchbits">购买链接</a></td></tr><tr><td>32GB</td><td><strong>8</strong> 5950X Cores</td><td>400GB NVMe</td><td><strong>3.6TB</strong> HDD</td><td>80TB</td><td>1 IPv4 | 1 &#x2F;64</td><td><strong>$64&#x2F;mo</strong></td><td><a href="https://loll.cc/crunchbits">购买链接</a></td></tr></tbody></table><p>本次测试款为最低配6.8刀&#x2F;月款。</p><p><img src="http://img.laoda.de/i/2023/02/11/ibogev-2.webp" alt="c52e07d609457ee499b1b9c65f01de96.png"></p><h2 id="5-VPS测试（1C4G）"><a href="#5-VPS测试（1C4G）" class="headerlink" title="5. VPS测试（1C4G）"></a>5. VPS测试（1C4G）</h2><p>脚本：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(wget --no-check-certificate -O- https://dl.233.mba/d/sh/superbenchpro.sh)</span><br></pre></td></tr></table></figure><p>更多脚本，请看：</p><h3 id="5-1-基本情况"><a href="#5-1-基本情况" class="headerlink" title="5.1 基本情况"></a>5.1 基本情况</h3><p>咕咕昨天开了一台，鸡况如下：</p><p><img src="http://img.laoda.de/i/2023/02/07/fs7keb-2.webp" alt="image-20230207095433990"></p><h3 id="5-2-速度测试"><a href="#5-2-速度测试" class="headerlink" title="5.2 速度测试"></a>5.2 速度测试</h3><p><img src="http://img.laoda.de/i/2023/02/07/fsl2mz-2.webp" alt="image-20230207095458101"></p><p>测试我们重点看<code>Upload Speed</code>,我们从VPS上取东西（下载），对VPS来说就是上传。</p><p>以上海<code>Shanghai 5G</code>为例子，显示的<code>Upload Speed</code>是<code>305.71 Mbit/s</code>，差不多是平时说的300M带宽，对应到我们实际的理论下载速度就&#x3D;<code>305.71/8</code>&#x3D;<code>38.21M/s</code></p><p>开启BBR之后：</p><p><img src="http://img.laoda.de/i/2023/02/07/gw5qzs-2.webp" alt="image-20230207102145279"></p><p><img src="http://img.laoda.de/i/2023/02/07/gvls86-2.webp" alt="image-20230207102051437"></p><h3 id="5-3-回程线路"><a href="#5-3-回程线路" class="headerlink" title="5.3 回程线路"></a>5.3 回程线路</h3><h4 id="5-3-1-上海电信"><a href="#5-3-1-上海电信" class="headerlink" title="5.3.1 上海电信"></a>5.3.1 上海电信</h4><p><img src="http://img.laoda.de/i/2023/02/07/ft9oho-2.webp" alt="image-20230207095613046"></p><h4 id="5-3-2-上海CN2"><a href="#5-3-2-上海CN2" class="headerlink" title="5.3.2 上海CN2"></a>5.3.2 上海CN2</h4><p><img src="http://img.laoda.de/i/2023/02/07/fti4gf-2.webp" alt="image-20230207095651704"></p><h4 id="5-3-3-上海联通"><a href="#5-3-3-上海联通" class="headerlink" title="5.3.3 上海联通"></a>5.3.3 上海联通</h4><p><img src="http://img.laoda.de/i/2023/02/07/fturec-2.webp" alt="image-20230207095709272"></p><h4 id="5-3-4-上海联通9929"><a href="#5-3-4-上海联通9929" class="headerlink" title="5.3.4 上海联通9929"></a>5.3.4 上海联通9929</h4><p><img src="http://img.laoda.de/i/2023/02/07/ftyd90-2.webp" alt="image-20230207095726352"></p><h4 id="5-3-5-上海移动"><a href="#5-3-5-上海移动" class="headerlink" title="5.3.5 上海移动"></a>5.3.5 上海移动</h4><p><img src="http://img.laoda.de/i/2023/02/07/fu1xrj-2.webp" alt="image-20230207095743625"></p><h4 id="5-3-6-北京教育网"><a href="#5-3-6-北京教育网" class="headerlink" title="5.3.6 北京教育网"></a>5.3.6 北京教育网</h4><p><img src="http://img.laoda.de/i/2023/02/07/fudnt7-2.webp" alt="image-20230207095757860"></p><h3 id="5-4-PING值"><a href="#5-4-PING值" class="headerlink" title="5.4 PING值"></a>5.4 PING值</h3><p><img src="http://img.laoda.de/i/2023/02/07/gk8lvp-2.webp" alt="image-20230207100143735"></p><p><img src="http://img.laoda.de/i/2023/02/07/gkbom9-2.webp" alt="image-20230207100157668"></p><p><img src="http://img.laoda.de/i/2023/02/07/gknioi-2.webp" alt="image-20230207100213221"></p><p><img src="http://img.laoda.de/i/2023/02/07/gkui2s-2.webp" alt="image-20230207100244941"></p><p><img src="http://img.laoda.de/i/2023/02/07/gwnjjl-2.webp" alt="image-20230207102227733"></p><h3 id="5-5-网络测试"><a href="#5-5-网络测试" class="headerlink" title="5.5 网络测试"></a>5.5 网络测试</h3><h4 id="5-5-1-咕咕的机器"><a href="#5-5-1-咕咕的机器" class="headerlink" title="5.5.1 咕咕的机器"></a>5.5.1 咕咕的机器</h4><p>Test IPv4: 204.9.39.100</p><p>Test IPv6: 2606:a8c0:1:99::a</p><h4 id="5-5-2-官网节点测速"><a href="#5-5-2-官网节点测速" class="headerlink" title="5.5.2 官网节点测速"></a>5.5.2 官网节点测速</h4><p>Looking glass: <a href="https://lg-cda.crunchbits.com/">https://lg-cda.crunchbits.com</a></p><h2 id="6-后台介绍"><a href="#6-后台介绍" class="headerlink" title="6. 后台介绍"></a>6. 后台介绍</h2><p>虚拟机管理面板用的是virtfusion，颜值非常不错。</p><p>首次机器开通之后，需要我们登录到这个面板里面安装系统。</p><p><img src="https://img.laoda.de/i/2023/02/06/n93qvt-2.webp" alt="image-20230206140600138"></p><p><img src="https://img.laoda.de/i/2023/02/06/n97ccu-2.webp" alt="image-20230206140616643"></p><p><img src="https://img.laoda.de/i/2023/02/06/n9g21t-2.webp" alt="image-20230206140655600"></p><p><img src="https://img.laoda.de/i/2023/02/06/n9t8j2-2.webp" alt="image-20230206140715305"></p><p><img src="https://img.laoda.de/i/2023/02/06/n9z9bg-2.webp" alt="image-20230206140742834"></p><p><img src="https://img.laoda.de/i/2023/02/06/naflmh-2.webp" alt="image-20230206140822900"></p><p><img src="https://img.laoda.de/i/2023/02/06/nb8a0d-2.webp" alt="image-20230206140957101"></p><p>Hostname可以随便填，但是要填成域名的形式， 否则会报错，比如咕咕这边填了<code>gugu.com</code></p><p><img src="https://img.laoda.de/i/2023/02/06/nbr4wl-2.webp" alt="image-20230206141045411"></p><p><img src="https://img.laoda.de/i/2023/02/06/nc477o-2.webp" alt="image-20230206141106076"></p><p><img src="https://img.laoda.de/i/2023/02/06/nc5s5g-2.webp" alt="image-20230206141113316"></p><p><img src="https://img.laoda.de/i/2023/02/06/nc8tra-2.webp" alt="image-20230206141127245"></p><p>备份功能展示：</p><p>自带备份就很舒服了，不过注意，这个只能备份NVMe的这个小盘，挂载上去的大盘不能备份。</p><p><img src="https://img.laoda.de/i/2023/02/06/ncu986-2.webp" alt="image-20230206141226827"></p><p>可以设置自动备份的频率。</p><p><img src="http://img.laoda.de/i/2023/02/07/fdurk1-2.webp" alt="image-20230207093024888"></p><p><img src="http://img.laoda.de/i/2023/02/07/fdy3e4-2.webp" alt="image-20230207093039988"></p><p><img src="http://img.laoda.de/i/2023/02/07/feffbu-2.webp" alt="image-20230207093121410"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>只要不跑路，这款还是非常有性价比的，不管是存数据还是跑项目，大家可以月付上车体验，年付的话就用PayPal吧，180天之内万一商家跑路，可以发起争议，退回钱款。</p>]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 美国VPS </tag>
            
            <tag> 大盘鸡 </tag>
            
            <tag> NVMe </tag>
            
            <tag> 5950X </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VoceChat——又一个即时聊天（IM）应用！可以嵌入任何网页！</title>
      <link href="/archives/docker-compose-install-vocechat/"/>
      <url>/archives/docker-compose-install-vocechat/</url>
      
        <content type="html"><![CDATA[<p>这俩天细心的小伙伴可能会发现咕咕的博客右下角多了一个小玩意儿：</p><p><img src="https://img.laoda.de/i/2023/02/01/m19lqd-2.webp" alt="image-20230201133237348"></p><p>点击之后会出现：</p><p><img src="https://img.laoda.de/i/2023/02/01/m1e6ox-2.webp" alt="image-20230201133258179"></p><p>你在这边通过GitHub或者 MetaMask登陆之后，发送消息，咕咕的手机能够接到推送通知，及时回复信息。</p><p>算是一个和网站访客互动的小工具，在电商咨询类的网站里非常常见。</p><p>今天我们就来介绍一下如何在自己的网页里面加入这个小玩意儿。</p><h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><p>这个小玩意儿的学名叫做“网页聊天挂件”，其实是我们今天要介绍的主角——VoceChat里面的一个小功能。</p><p>咕咕之前和大家介绍过两个即时聊天的应用了，一个是著名的Rocket.chat:</p><p><a href="https://blog.laoda.de/archives/docker-compose-install-rocketchat">【好玩儿的Docker项目】自建一个真正属于自己的开源IM聊天系统——Rocket.chat</a></p><p>另外一个是字节的工程师额业余时间写的Tailchat：</p><p><a href="https://blog.laoda.de/archives/docker-compose-install-tailchat">【好玩儿的Docker项目】激情畅聊！十分钟搭建一个插件化易拓展的开源即时聊天（IM）应用——Tailchat</a></p><p>今天我们再来介绍一个IM应用——Vocechat</p><p>主要特点：</p><ul><li>支持中英文</li><li>支持Android、iOS端</li><li>支持Docker安装，部署极其简单</li><li>备份简单</li><li>支持对接自有账号系统</li><li>支持第三方登录（比如GitHub、MetaMask、Google等）</li><li>支持访问控制 &amp; 访客模式</li><li>API文档详细</li><li>支持自建频道</li><li>支持邀请用户</li></ul><p>等等功能。</p><p>同类产品功能对比：</p><p><img src="https://img.laoda.de/i/2023/02/01/m1snwt-2.webp" alt="d8cd294f017b990ed2b8c1055c1842a1.png"></p><h3 id="1-1-相关地址"><a href="#1-1-相关地址" class="headerlink" title="1.1 相关地址"></a>1.1 相关地址</h3><p>咕咕的聊天室：<a href="https://vocechat.gugu.ovh/">https://vocechat.gugu.ovh/</a><br>VoceChat 官方网址：<a href="https://voce.chat/">https://voce.chat/</a><br>VoceChat 官方 GitHub：<a href="https://github.com/privoce">https://github.com/privoce</a><br>VoceChat 官方文档：<a href="https://doc.voce.chat/">https://doc.voce.chat/</a></p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p>这边直接丢出核心的 <code>docker-compose.yaml</code> 文件，熟悉 docker 环境的小伙伴可以直接拷贝搭建。</p><p><code>VoceChat</code> 部署：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">vocechat:</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;3019:3000&#x27;</span>  <span class="comment"># 冒号左边可以改成自己服务器未被占用的端口</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">vocechat-server</span></span><br><span class="line">        <span class="attr">volumes:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;./data:/home/vocechat-server/data&#x27;</span> <span class="comment"># 冒号左边可以改路径，现在是表示把数据存放在在当前文件夹下的 data 文件夹中</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">privoce/vocechat-server:latest</span></span><br></pre></td></tr></table></figure><p>以下是详细搭建教程。</p><h2 id="3-搭建环境"><a href="#3-搭建环境" class="headerlink" title="3. 搭建环境"></a>3. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器 24 元 &#x2F; 月 VPS 一台</del> 咕咕自己搭建用的是<a href="https://loll.cc/tx">腾讯轻量应用服务器</a> ，（最好是选 <strong>非大陆（香港）的服务器</strong>）如果是小白刚开始玩的话，还可以购买 <a href="https://blog.laoda.de/archives/cheap-vps-racknerd">Racknerd</a> 的服务器，最低一年不到 100 块（不过这个建议选择 1G 内存以上的机器）（Racknerd 服务器介绍：<a href="https://blog.laoda.de/archives/cheap-vps-racknerd">点击查看</a>）</li><li>系统：Debian 10 （<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD 脚本</a> 非必需 DD，用原来的系统也 OK，之后教程都是用 Debian 或者 Ubuntu 搭建～）</li><li>安装好 Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需但建议】域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>【非必需】提前安装好宝塔面板海外版本 aapanel，并安装好 Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程选用】安装好 Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><blockquote><p>服务器要求：内存建议1G 以上，硬盘可以大一些。</p></blockquote><h2 id="4-搭建视频"><a href="#4-搭建视频" class="headerlink" title="4. 搭建视频"></a>4. 搭建视频</h2><h3 id="4-1-YouTube"><a href="#4-1-YouTube" class="headerlink" title="4.1 YouTube"></a>4.1 YouTube</h3><p>视频地址：<a href="https://youtu.be/gCb8H55wGGg">https://youtu.be/gCb8H55wGGg</a></p><h3 id="4-2-哔哩哔哩"><a href="#4-2-哔哩哔哩" class="headerlink" title="4.2 哔哩哔哩"></a>4.2 哔哩哔哩</h3><p>【高清版本可以点击去吐槽到 B 站观看】：</p><p><a href="https://www.bilibili.com/BV1r8411g7yt">https://www.bilibili.com/BV1r8411g7yt</a></p><h2 id="5-搭建方式"><a href="#5-搭建方式" class="headerlink" title="5. 搭建方式"></a>5. 搭建方式</h2><p>如果你不是用的腾讯云的轻量应用服务器，可以直接跳到 5.1 部分。</p><h3 id="安装系统（腾讯云轻量应用服务器）"><a href="#安装系统（腾讯云轻量应用服务器）" class="headerlink" title="安装系统（腾讯云轻量应用服务器）"></a>安装系统（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlyhcz-2.webp" alt="e59713fba8726d3cb55ae11bca83fe3c.png"></p><p>腾讯云轻量服务器最大的特点就是 “轻量”，相比 CVM，更适合小白上手，这边我们之间选择 Docker 基础镜像，就可以省去后面安装 Docker 的步骤（如果你非要用国内的服务器，这边装的 Docker 镜像还会帮你配置好国内镜像源，让你加速访问 docker 镜像资源）。</p><h3 id="登陆（腾讯云轻量应用服务器）"><a href="#登陆（腾讯云轻量应用服务器）" class="headerlink" title="登陆（腾讯云轻量应用服务器）"></a>登陆（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlzlj7-2.webp" alt="2722040ee311eb4a9ebf2a4945bf38f4.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm0gv8-2.webp" alt="c0b5d360053746c4095d592967ee401f.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm1vqw-2.webp" alt="e0ba858f021b846ad0abc27acf5008c2.png"></p><h3 id="5-1-安装-Docker-与-Nginx-Proxy-Manager"><a href="#5-1-安装-Docker-与-Nginx-Proxy-Manager" class="headerlink" title="5.1 安装 Docker 与 Nginx Proxy Manager"></a>5.1 安装 Docker 与 Nginx Proxy Manager</h3><p>可以直接参考这篇内容：</p><p><a href="https://blog.laoda.de/archives/nginxproxymanager">https://blog.laoda.de/archives/nginxproxymanager</a></p><h3 id="5-2-创建安装目录"><a href="#5-2-创建安装目录" class="headerlink" title="5.2 创建安装目录"></a>5.2 创建安装目录</h3><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/VoceChat</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/VoceChat</span><br></pre></td></tr></table></figure><p>这边我们直接用 docker 的方式安装。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure><p>英文输入法下，按 <code>i</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">vocechat:</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;3019:3000&#x27;</span>  <span class="comment"># 冒号左边可以改成自己服务器未被占用的端口</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">vocechat-server</span></span><br><span class="line">        <span class="attr">volumes:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;./data:/home/vocechat-server/data&#x27;</span> <span class="comment"># 冒号左边可以改路径，现在是表示把数据存放在在当前文件夹下的 data 文件夹中</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">privoce/vocechat-server:latest</span></span><br></pre></td></tr></table></figure><p>按一下 <code>esc</code>，然后 <code>:wq</code> 保存退出。</p><h3 id="5-3-打开服务器防火墙（非必需）并访问网页"><a href="#5-3-打开服务器防火墙（非必需）并访问网页" class="headerlink" title="5.3 打开服务器防火墙（非必需）并访问网页"></a>5.3 打开服务器防火墙（非必需）并访问网页</h3><p>打开防火墙的端口 <code>3019</code></p><p>举例，腾讯云打开方法如下（部分服务商没有自带的面板防火墙，就不用这步操作了）：</p><img src="https://img.laoda.de/i/2022/06/30/zlio5h-2.webp" alt="image-20220630215240864" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/06/30/10h3dqt-2.webp" alt="image-20220630220546335" style="zoom:33%;" /><p>图中示例填的是 <code>5230</code>，备注填的是 <code>memos</code>，这边我们填 <code>3019</code>，示例填 <code>VoceChat</code> ，确定即可（如果你在 docker-compose 文件里换了 <code>9009</code>，这边就需要填 <code>9009</code>，以此类推）</p><img src="https://img.laoda.de/i/2022/08/19/o4byqz-2.webp" alt="image-20220819145844555" style="zoom:33%;" /><p>查看端口是否被占用（以 <code>3019</code> 为例），输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:3019  <span class="comment">#查看 3019 端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果啥也没出现，表示端口未被占用，我们可以继续下面的操作了～</p><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装 lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用（被占用了就修改一下端口，比如改成 <code>8081</code>，注意 docker 命令行里和防火墙都要改）</p><p>最后：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/VoceChat    <span class="comment"># 来到 dockercompose 文件所在的文件夹下</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>理论上我们就可以输入 <code>http://ip:3019</code> 访问安装了。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器 IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的 IP。</p><p>2、遇到访问不了的情况，请再次检查在宝塔面板的防火墙和服务商的后台防火墙是否打开对应了端口。</p></blockquote><p>有的小伙伴可能想搭建起来分享给其他人使用，如果后续想要分享给别人，IP + 端口太不优雅了，咕咕建议大家还是搞一个域名，容易记，看起来也更正规一点。这样可以做 https，会让网页更安全。</p><p>而且 <a href="https://loll.cc/ns">namesilo</a> 上面 xyz 后缀的域名一年就 7 块钱，可以年抛。</p><p>如果想要长期使用，还是建议买 com 后缀的域名，更加正规一些，可以输入 <code>laodade</code> 来获得 1 美元的优惠（不知道现在还有没有）</p><p><a href="https://loll.cc/ns">namesilo</a> 自带隐私保护，咕咕一直在用这家，价格也是这些注册商里面比较低的，关键是他家不像其他家域名注册商，没有七七八八的套路！（就是后台界面有些<del>丑</del> 古老 &#x3D; &#x3D;）</p><p><a href="https://blog.laoda.de/archives/namesilo">【域名购买】Namesilo 优惠码和域名解析教程（附带服务器购买推荐和注意事项）</a></p><p>我们接着往下看！</p><h3 id="5-4-更新-VoceChat"><a href="#5-4-更新-VoceChat" class="headerlink" title="5.4 更新 VoceChat"></a>5.4 更新 VoceChat</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/VoceChat</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/VoceChat /root/data/docker_data/VoceChat.archive  <span class="comment"># 万事先备份，以防万一</span></span><br><span class="line"></span><br><span class="line">docker-compose pull</span><br><span class="line"></span><br><span class="line">docker-compose up -d    <span class="comment"># 请不要使用 docker-compose stop 来停止容器，因为这么做需要额外的时间等待容器停止；docker-compose up -d 直接升级容器时会自动停止并立刻重建新的容器，完全没有必要浪费那些时间。</span></span><br><span class="line"></span><br><span class="line">docker image prune  <span class="comment"># prune 命令用来删除不再使用的 docker 对象。删除所有未被 tag 标记和未被容器使用的镜像</span></span><br></pre></td></tr></table></figure><p>提示：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WARNING! This will remove all dangling images.</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] </span><br></pre></td></tr></table></figure><p>输入 <code>y</code></p><p>利用 Docker 搭建的应用，更新非常容易～</p><h3 id="5-5-卸载-VoceChat"><a href="#5-5-卸载-VoceChat" class="headerlink" title="5.5 卸载 VoceChat"></a>5.5 卸载 VoceChat</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/VoceChat</span><br><span class="line"></span><br><span class="line">docker-compose down</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/VoceChat  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>可以卸载得很干净。</p><h2 id="6-反向代理"><a href="#6-反向代理" class="headerlink" title="6. 反向代理"></a>6. 反向代理</h2><p>我们要用域名而不是IP+端口的方式来访问我们的服务！</p><h3 id="6-1-利用-Nginx-Proxy-Manager"><a href="#6-1-利用-Nginx-Proxy-Manager" class="headerlink" title="6.1 利用 Nginx Proxy Manager"></a>6.1 利用 Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p><img src="https://img.laoda.de/i/2022/10/16/n6t02e-2.webp" alt="image-20221016140213282"></p><p>之后，登陆 Nginx Proxy Manager（不会的看这个：<strong>安装 Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称 NPM）会用到 <code>80</code>、<code>443</code> 端口，所以本机不能占用（比如原来就有 Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom: 33%;" /><p><img src="https://img.laoda.de/i/2022/10/16/n7b9hm-2.webp" alt="image-20221016140258381"></p><blockquote><p>注意填写对应的 <code>域名</code>、<code>IP</code> 和 <code>端口</code>，按文章来的话，应该是 <code>3019</code></p></blockquote><p><strong>IP 填写：</strong></p><p>如果 Nginx Proxy Manager 和 VoceChat 在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的 Docker 容器内部 IP。</p><p><img src="https://img.laoda.de/i/2022/09/29/pcdnz5-2.webp"></p><p>否则直接填 <code>VoceChat</code> 所在的服务器 IP 就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom: 33%;" /><p>再次打开，勾选这些：</p><p><img src="https://img.laoda.de/i/2022/10/16/n7nn6e-2.webp" alt="image-20221016140356324"></p><p>然后就可以用域名来安装访问了。</p><h3 id="6-2-利用宝塔面板"><a href="#6-2-利用宝塔面板" class="headerlink" title="6.2 利用宝塔面板"></a>6.2 利用宝塔面板</h3><p>发现还是有不少小伙伴习惯用宝塔面板，这边也贴一个宝塔面板的反代配置：</p><p>直接新建一个站点，不要数据库，不要 php，纯静态即可。</p><p>然后打开下面的配置，修改 Nginx 的配置。</p><p><img src="https://img.laoda.de/i/2022/08/19/ov4xrt-2.webp" alt="image-20220819150345725"></p><p><img src="https://img.laoda.de/i/2022/08/19/owbbkb-2.webp" alt="image-20220819150542867"></p><p>代码如下：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:3019/;       <span class="comment"># 注意改成你实际使用的端口</span></span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此方法对 90% 的反向代理都能生效，然后就可以用域名来安装访问了。</p><p>有同学可能会问，为什么不直接用宝塔自带的反向代理功能。</p><p><img src="https://img.laoda.de/i/2022/08/19/oxf800-2.webp" alt="image-20220819150730128"></p><p>也可以，不过咕咕自己之前遇到过当有多个网站需要反代的时候，在这边设置会报错的情况 &#x3D; &#x3D;</p><p>所以后来就不用了，直接用上面的方法来操作了。</p><h2 id="7-使用教程"><a href="#7-使用教程" class="headerlink" title="7. 使用教程"></a>7. 使用教程</h2><h3 id="7-1-配置VoceChat"><a href="#7-1-配置VoceChat" class="headerlink" title="7.1 配置VoceChat"></a>7.1 配置VoceChat</h3><p>具体安装和配置见咕咕的视频。</p><p>补充几张图：</p><p><img src="https://img.laoda.de/i/2023/01/28/nnnptg-2.webp" alt="image-20230128143043146"></p><p><img src="https://img.laoda.de/i/2023/01/28/no0ukx-2.webp" alt="image-20230128143105346"></p><p><img src="https://img.laoda.de/i/2023/01/28/no94am-2.webp" alt="image-20230128143143890"></p><p><img src="https://img.laoda.de/i/2023/01/28/noltqj-2.webp" alt="image-20230128143203902"></p><p><img src="https://img.laoda.de/i/2023/01/28/nooxxc-2.webp" alt="image-20230128143217615"></p><p><img src="https://img.laoda.de/i/2023/01/28/notlg2-2.webp" alt="image-20230128143239347"></p><h3 id="7-2-配置网页聊天挂件"><a href="#7-2-配置网页聊天挂件" class="headerlink" title="7.2 配置网页聊天挂件"></a>7.2 配置网页聊天挂件</h3><p>咕咕以自己的这个Joe主题为例子：</p><p>将后台的代码：</p><p><img src="https://img.laoda.de/i/2023/02/01/ma0mrd-2.webp"></p><p>插入到主题的这个位置即可：</p><p><img src="https://img.laoda.de/i/2023/02/01/m8i6v2-2.webp"></p><p>其他主题也类似。</p><h2 id="8-目前遇到的问题"><a href="#8-目前遇到的问题" class="headerlink" title="8. 目前遇到的问题"></a>8. 目前遇到的问题</h2><p>待优化的内容：</p><p>更改配色<br>更改位置<br>手机端适配</p><h2 id="9-结尾"><a href="#9-结尾" class="headerlink" title="9. 结尾"></a>9. 结尾</h2><p>祝大家用得开心，有问题可以去 GitHub 提 <a href="https://github.com/Privoce/vocechat-web/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，项目处于刚开始阶段，有能力给项目做贡献的同学，也欢迎积极加入到 <a href="https://github.com/Privoce/vocechat-web">项目</a> 中来，贡献自己的一份力量！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>VoceChat 官方网址：<a href="https://voce.chat/">https://voce.chat/</a><br>VoceChat 官方 GitHub：<a href="https://github.com/privoce">https://github.com/privoce</a><br>VoceChat 官方文档：<a href="https://doc.voce.chat/">https://doc.voce.chat/</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 即时聊天 </tag>
            
            <tag> IM应用 </tag>
            
            <tag> 网页聊天插件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【2022年终盘点】12款咕咕今年用的最多的Docker应用</title>
      <link href="/archives/2022-review-docker-series/"/>
      <url>/archives/2022-review-docker-series/</url>
      
        <content type="html"><![CDATA[<p>一转眼，2022年就要过去了，感谢这一年小伙伴们的陪伴，提前祝大家新年快乐！！！</p><p><a href="https://blog.laoda.de/categories/docker-series">好玩儿的Docker项目</a>也做了好多期了，回过头来看，其实很多应用搭了就吃灰了，咕咕趁着周末，整理了这一年来自己日常用的最多的12款Docker应用，和大家分享。</p><h3 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h3><h4 id="YouTube"><a href="#YouTube" class="headerlink" title="YouTube"></a>YouTube</h4><p><a href="https://youtu.be/1kqR9qC5Iqc">https://youtu.be/1kqR9qC5Iqc</a></p><h4 id="哔哩哔哩"><a href="#哔哩哔哩" class="headerlink" title="哔哩哔哩"></a>哔哩哔哩</h4><p>【高清版本可以点击去吐槽到 B 站观看】：</p><p><a href="https://www.bilibili.com/BV1KG4y177vH">https://www.bilibili.com/BV1KG4y177vH</a></p><h3 id="12、TinyTinyRss（RSS订阅器）"><a href="#12、TinyTinyRss（RSS订阅器）" class="headerlink" title="12、TinyTinyRss（RSS订阅器）"></a>12、TinyTinyRss（RSS订阅器）</h3><p><img src="https://img.laoda.de/i/2022/12/21/yydb6s-2.webp"></p><p>从纷繁复杂的互联网上获取真正感兴趣的资讯，搭配Reeder，享受自己的信息流。</p><p>教程：<a href="https://blog.laoda.de/archives/tinytinyrss">【服务器能干什么】二十分钟搭建一个属于自己的RSS服务</a></p><h4 id="YouTube-1"><a href="#YouTube-1" class="headerlink" title="YouTube"></a>YouTube</h4><p><a href="https://youtu.be/jHIEALMJzc8">https://youtu.be/jHIEALMJzc8</a></p><h4 id="哔哩哔哩-1"><a href="#哔哩哔哩-1" class="headerlink" title="哔哩哔哩"></a>哔哩哔哩</h4><p>【高清版本可以点击去吐槽到 B 站观看】：</p><p><a href="https://www.bilibili.com/BV1VK4y1m7CH">https://www.bilibili.com/BV1VK4y1m7CH</a></p><h3 id="11、QBittorrent（下载神器）"><a href="#11、QBittorrent（下载神器）" class="headerlink" title="11、QBittorrent（下载神器）"></a>11、QBittorrent（下载神器）</h3><p><img src="https://img.laoda.de/i/2022/12/21/yyw3ls-2.webp"></p><p>下载神器，刷PT就靠你了。</p><p>教程：<a href="https://blog.laoda.de/archives/docker-install-qbittorrent">【好玩的Docker项目】10分钟搭建你专属的下载神器</a></p><h4 id="YouTube-2"><a href="#YouTube-2" class="headerlink" title="YouTube"></a>YouTube</h4><p>视频待补充</p><h4 id="哔哩哔哩-2"><a href="#哔哩哔哩-2" class="headerlink" title="哔哩哔哩"></a>哔哩哔哩</h4><p>视频待补充</p><p>补充阅读：<a href="https://blog.laoda.de/archives/docker-qbittorrent-ipv6">【有用的小知识】Docker-qBittorrent 开启IPv6 笔记</a></p><h3 id="10、Memos（备忘录）"><a href="#10、Memos（备忘录）" class="headerlink" title="10、Memos（备忘录）"></a>10、Memos（备忘录）</h3><p><img src="https://img.laoda.de/i/2022/08/21/ipuar-2.webp"></p><p>眼前一亮的项目，平时记录一些琐碎的事情，可以搭配备忘录使用。</p><p>教程：<a href="https://blog.laoda.de/archives/docker-install-memos">【好玩儿的Docker项目】10分钟搭建一个碎片化知识卡片管理</a></p><p>浏览器插件：<a href="https://chrome.google.com/webstore/detail/memos-bber/cbhjebjfccgchgbmfbobjmebjjckgofe/">https://chrome.google.com/webstore/detail/memos-bber/cbhjebjfccgchgbmfbobjmebjjckgofe/</a></p><h4 id="YouTube-3"><a href="#YouTube-3" class="headerlink" title="YouTube"></a>YouTube</h4><p><a href="https://youtu.be/GLzY3JN3Sck">https://youtu.be/GLzY3JN3Sck</a></p><h4 id="哔哩哔哩-3"><a href="#哔哩哔哩-3" class="headerlink" title="哔哩哔哩"></a>哔哩哔哩</h4><p>【高清版本可以点击去吐槽到 B 站观看】：</p><p><a href="https://www.bilibili.com/BV1ha411d78G">https://www.bilibili.com/BV1ha411d78G</a></p><h3 id="9、Joplin-Server（笔记软件）"><a href="#9、Joplin-Server（笔记软件）" class="headerlink" title="9、Joplin Server（笔记软件）"></a>9、Joplin Server（笔记软件）</h3><p> <img src="https://img.laoda.de/i/2022/07/09/x9cdi0-2.webp"></p><p>今年用的最多的笔记软件，搭配Joplin Server，多设备同步，很舒服。</p><p>教程：<a href="https://blog.laoda.de/archives/docker-compose-install-joplin-server">【好玩儿的Docker项目】OneNote、印象笔记的替代品！免费、开源、全平台同步笔记软件——Joplin</a></p><h4 id="YouTube-4"><a href="#YouTube-4" class="headerlink" title="YouTube"></a>YouTube</h4><p><a href="https://youtu.be/vVlDaBB5B80">https://youtu.be/vVlDaBB5B80</a></p><h4 id="哔哩哔哩-4"><a href="#哔哩哔哩-4" class="headerlink" title="哔哩哔哩"></a>哔哩哔哩</h4><p>【高清版本可以点击去吐槽到 B 站观看】：</p><p><a href="https://www.bilibili.com/BV1Ya411n7Tc">https://www.bilibili.com/BV1Ya411n7Tc</a></p><h3 id="8、UptimeKuma（网络在线监控）"><a href="#8、UptimeKuma（网络在线监控）" class="headerlink" title="8、UptimeKuma（网络在线监控）"></a>8、UptimeKuma（网络在线监控）</h3><p><img src="https://img.laoda.de/i/2022/12/21/z0g4fv-2.webp"></p><p>监控重要的几个网站的在线情况，还能提醒SSL证书续期噢。</p><p>教程：<a href="https://blog.laoda.de/archives/uptimekuma-install">【好玩的Docker项目】搭建一个专属自己的网站监控——Uptime Kuma</a></p><h4 id="YouTube-5"><a href="#YouTube-5" class="headerlink" title="YouTube"></a>YouTube</h4><p><a href="https://youtu.be/Rn7PS8HKZ4c">https://youtu.be/Rn7PS8HKZ4c</a></p><h4 id="哔哩哔哩-5"><a href="#哔哩哔哩-5" class="headerlink" title="哔哩哔哩"></a>哔哩哔哩</h4><p>【高清版本可以点击去吐槽到 B 站观看】：</p><p><a href="https://www.bilibili.com/BV1ST4y1f7ed">https://www.bilibili.com/BV1ST4y1f7ed</a></p><h3 id="7、探针（服务器在线监控）"><a href="#7、探针（服务器在线监控）" class="headerlink" title="7、探针（服务器在线监控）"></a>7、探针（服务器在线监控）</h3><p><img src="https://img.laoda.de/i/2022/12/21/z0lc9l-2.webp"></p><p>没事看一眼，看看小鸡掉线了没！</p><p>教程：<a href="https://blog.laoda.de/archives/ward-serverstatus-install">【好玩的Docker项目】搭建两个专属自己的服务器监控——Ward &amp;&amp; ServerStatus</a></p><h4 id="YouTube-6"><a href="#YouTube-6" class="headerlink" title="YouTube"></a>YouTube</h4><p><a href="https://youtu.be/Eq1HM84AKUs">https://youtu.be/Eq1HM84AKUs</a></p><h4 id="哔哩哔哩-6"><a href="#哔哩哔哩-6" class="headerlink" title="哔哩哔哩"></a>哔哩哔哩</h4><p>【高清版本可以点击去吐槽到 B 站观看】：</p><p><a href="https://www.bilibili.com/BV17Y411a73v">https://www.bilibili.com/BV17Y411a73v</a></p><h3 id="6、Umami（网站流量统计）"><a href="#6、Umami（网站流量统计）" class="headerlink" title="6、Umami（网站流量统计）"></a>6、Umami（网站流量统计）</h3><p><img src="https://img.laoda.de/i/2022/12/21/z11ydv-2.webp"></p><p>眼看着博客流量从90 IP到达900 IP。</p><p>教程：<a href="https://blog.laoda.de/archives/umami">【好玩的Docker项目】搭建一个小而美的网站流量监控——Umami</a></p><h4 id="YouTube-7"><a href="#YouTube-7" class="headerlink" title="YouTube"></a>YouTube</h4><p><a href="https://youtu.be/rRBMZwKiCRk">https://youtu.be/rRBMZwKiCRk</a></p><h4 id="哔哩哔哩-7"><a href="#哔哩哔哩-7" class="headerlink" title="哔哩哔哩"></a>哔哩哔哩</h4><p>【高清版本可以点击去吐槽到 B 站观看】：</p><p><a href="https://www.bilibili.com/BV1eL4y1b7P6">https://www.bilibili.com/BV1eL4y1b7P6</a></p><h3 id="5、Yourls（短链接工具）"><a href="#5、Yourls（短链接工具）" class="headerlink" title="5、Yourls（短链接工具）"></a>5、Yourls（短链接工具）</h3><p><img src="https://img.laoda.de/i/2022/05/08/ntf0p0-0.webp"></p><p>短链接程序，虽然颜值不咋滴，但是够用。</p><p>教程：<a href="https://blog.laoda.de/archives/docker-compose-install-yourls">【好玩儿的Docker项目】10分钟搭建一个自己的短链接服务——YOURLS</a></p><h4 id="YouTube-8"><a href="#YouTube-8" class="headerlink" title="YouTube"></a>YouTube</h4><p><a href="https://youtu.be/pz3XZG_QZ-U">https://youtu.be/pz3XZG_QZ-U</a></p><h4 id="哔哩哔哩-8"><a href="#哔哩哔哩-8" class="headerlink" title="哔哩哔哩"></a>哔哩哔哩</h4><p>【高清版本可以点击去吐槽到 B 站观看】：</p><p><a href="https://www.bilibili.com/BV1DT4y167oY">https://www.bilibili.com/BV1DT4y167oY</a></p><h3 id="4、Bitwarden-Vaultwarden（密码管理）"><a href="#4、Bitwarden-Vaultwarden（密码管理）" class="headerlink" title="4、Bitwarden&#x2F;Vaultwarden（密码管理）"></a>4、Bitwarden&#x2F;Vaultwarden（密码管理）</h3><p><img src="https://img.laoda.de/i/2022/12/06/mfnn66-2.webp"></p><p>密码管理就靠它啦！</p><p>教程：<a href="https://blog.laoda.de/archives/bitwarden-docker-install">【保姆级教程】利用宝塔面板+Docker搭建一个优秀的密码管理器——Bitwarden</a></p><p>二步验证器推荐：<a href="https://authy.com/">https://authy.com/</a></p><h4 id="YouTube-9"><a href="#YouTube-9" class="headerlink" title="YouTube"></a>YouTube</h4><p>待补充</p><h4 id="哔哩哔哩-9"><a href="#哔哩哔哩-9" class="headerlink" title="哔哩哔哩"></a>哔哩哔哩</h4><p>【高清版本可以点击去吐槽到 B 站观看】：</p><p><a href="https://www.bilibili.com/BV17B4y1N7RM">https://www.bilibili.com/BV17B4y1N7RM</a></p><h3 id="3、EasyImage（图床）"><a href="#3、EasyImage（图床）" class="headerlink" title="3、EasyImage（图床）"></a>3、EasyImage（图床）</h3><p> <img src="https://img.laoda.de/i/2022/05/08/tuxhfw-0.webp"></p><p>个人用的最习惯的图床程序了，功能简单，够用，无需数据库。</p><p>教程：<a href="https://blog.laoda.de/archives/docker-compose-install-easyimage">【好玩儿的Docker项目】10分钟搭建一个简单图床——Easyimage</a></p><h4 id="YouTube-10"><a href="#YouTube-10" class="headerlink" title="YouTube"></a>YouTube</h4><p><a href="https://youtu.be/jUQ_wbgXQjU">https://youtu.be/jUQ_wbgXQjU</a></p><h4 id="哔哩哔哩-10"><a href="#哔哩哔哩-10" class="headerlink" title="哔哩哔哩"></a>哔哩哔哩</h4><p>【高清版本可以点击去吐槽到 B 站观看】：</p><p><a href="https://www.bilibili.com/BV1vv4y1P7fd">https://www.bilibili.com/BV1vv4y1P7fd</a></p><h3 id="2、Nginx-Proxy-Manager（反向代理神器）"><a href="#2、Nginx-Proxy-Manager（反向代理神器）" class="headerlink" title="2、Nginx Proxy Manager（反向代理神器）"></a>2、Nginx Proxy Manager（反向代理神器）</h3><p><img src="https://img.laoda.de/i/2022/12/21/z1wd6y-2.webp"></p><p> 感谢开发者们，让小白也能轻松玩转反向代理！</p><p>教程：<a href="https://blog.laoda.de/archives/nginxproxymanager">【Docker系列】一个反向代理神器——Nginx Proxy Manager</a></p><h4 id="YouTube-11"><a href="#YouTube-11" class="headerlink" title="YouTube"></a>YouTube</h4><p><a href="https://youtu.be/Z2zl2TlDzd8">https://youtu.be/Z2zl2TlDzd8</a></p><h4 id="哔哩哔哩-11"><a href="#哔哩哔哩-11" class="headerlink" title="哔哩哔哩"></a>哔哩哔哩</h4><p>【高清版本可以点击去吐槽到 B 站观看】：</p><p><a href="https://www.bilibili.com/BV1Gg411w7kQ">https://www.bilibili.com/BV1Gg411w7kQ</a></p><h3 id="1、Halo（博客）"><a href="#1、Halo（博客）" class="headerlink" title="1、Halo（博客）"></a>1、Halo（博客）</h3><p><img src="https://img.laoda.de/i/2022/05/07/12juvca-0.webp"></p><p>教程：<a href="https://blog.laoda.de/archives/docker-install-halo">【好玩儿的Docker项目】10分钟搭建一个咕咕目前用的博客——Halo</a></p><h4 id="YouTube-12"><a href="#YouTube-12" class="headerlink" title="YouTube"></a>YouTube</h4><p><a href="https://www.youtube.com/watch?v=odQ9ui0hq-4&amp;list=PLIN0r_kqXu-6PJkfOaEDhrr5A7NIj03Ku">https://www.youtube.com/watch?v=odQ9ui0hq-4&amp;list=PLIN0r_kqXu-6PJkfOaEDhrr5A7NIj03Ku</a></p><h4 id="哔哩哔哩-12"><a href="#哔哩哔哩-12" class="headerlink" title="哔哩哔哩"></a>哔哩哔哩</h4><p>【高清版本可以点击去吐槽到 B 站观看】：</p><p><a href="https://www.bilibili.com/BV1JN411Q7Na">https://www.bilibili.com/BV1JN411Q7Na</a></p><p>目前Halo2.0版本已经发布，生态还在建立中，Halo2.0的定位将不仅仅是一个博客，而是一个建站工具，你可以用它来搭建各种类型的网站，等时机成熟，本博客也会迁移到Halo2.0平台，届时会和大家一起分享。</p><p> 推荐阅读：<a href="https://blog.laoda.de/archives/blog-choosing">Hexo还是Hugo？Typecho还是Wordpress？读完这篇或许你就有答案了！</a></p><p> 其他Docker相关内容，可以看这边：<a href="https://blog.laoda.de/categories/docker-series">https://blog.laoda.de/categories/docker-series</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker部署 </tag>
            
            <tag> 年终回顾 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩儿的Docker项目】10分钟部署一个类似知乎的开源问答平台——Answer</title>
      <link href="/archives/docker-compose-install-answer/"/>
      <url>/archives/docker-compose-install-answer/</url>
      
        <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><p><img src="https://img.laoda.de/i/2023/01/10/o4vgtu-2.webp" alt="image-20230110145936305"></p><p>Answer是一个类似知乎的开源问答社区。支持Docker部署，目前GitHub拥有5.4K的star。</p><p>我们今天花10分钟来搭建它！</p><h3 id="1-1-相关地址"><a href="#1-1-相关地址" class="headerlink" title="1.1 相关地址"></a>1.1 相关地址</h3><p>Answer 官方网址：<a href="https://answer.dev/">https://answer.dev/</a><br>Answer 官方 GitHub：<a href="https://github.com/answerdev/answer">https://github.com/answerdev/answer</a><br>Answer 官方文档：<a href="https://answer.dev/docs/installation/">https://answer.dev/docs/installation/</a></p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><h3 id="2-1-首页"><a href="#2-1-首页" class="headerlink" title="2.1 首页"></a>2.1 首页</h3><p><img src="https://img.laoda.de/i/2023/01/10/o4ruun-2.webp" alt="screenshot"></p><h3 id="2-2-登陆页"><a href="#2-2-登陆页" class="headerlink" title="2.2 登陆页"></a>2.2 登陆页</h3><p><img src="https://img.laoda.de/i/2023/01/10/o2xgrp-2.webp" alt="image-20230110145609206"></p><h3 id="2-3-问题页面"><a href="#2-3-问题页面" class="headerlink" title="2.3 问题页面"></a>2.3 问题页面</h3><p><img src="https://img.laoda.de/i/2023/01/10/o2jfm6-2.webp" alt="image-20230110145543815"></p><h3 id="2-4-用户主页"><a href="#2-4-用户主页" class="headerlink" title="2.4 用户主页"></a>2.4 用户主页</h3><p><img src="https://img.laoda.de/i/2023/01/10/o350tu-2.webp" alt="image-20230110145644846"></p><h3 id="2-5-账号设置页面"><a href="#2-5-账号设置页面" class="headerlink" title="2.5 账号设置页面"></a>2.5 账号设置页面</h3><p><img src="https://img.laoda.de/i/2023/01/10/o3jojh-2.webp" alt="image-20230110145713063"></p><h3 id="2-6-后台管理页面"><a href="#2-6-后台管理页面" class="headerlink" title="2.6 后台管理页面"></a>2.6 后台管理页面</h3><p><img src="https://img.laoda.de/i/2023/01/10/ot36em-2.webp" alt="image-20230110150002951"></p><p>这边直接丢出核心的 <code>docker-compose.yaml</code> 文件，熟悉 docker 环境的小伙伴可以直接拷贝搭建。</p><p><code>Answer</code> 部署：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">answer:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">answerdev/answer</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;9008:80&#x27;</span>            <span class="comment"># 冒号左边可以改成自己服务器未被占用的端口</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">on-failure</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./answer-data:/data</span>  <span class="comment"># 冒号左边可以改路径，现在是表示把数据存放在在当前文件夹下的 answer-data 文件夹中</span></span><br><span class="line">      </span><br><span class="line">  <span class="attr">db:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mariadb:10</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">--character-set-server=utf8mb4</span> <span class="string">--collation-server=utf8mb4_unicode_ci</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">MYSQL_ROOT_PASSWORD:</span> <span class="string">answer</span>   <span class="comment"># 数据库用户root的密码，建议自行修改一个</span></span><br><span class="line">      <span class="attr">MYSQL_USER:</span> <span class="string">answer</span>         </span><br><span class="line">      <span class="attr">MYSQL_PASSWORD:</span> <span class="string">answer</span>   <span class="comment"># 数据库用户answer的密码，建议自行修改一个</span></span><br><span class="line">      <span class="attr">MYSQL_DATABASE:</span> <span class="string">answer</span> </span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./mariadb:/var/lib/mysql</span>  <span class="comment"># 冒号左边可以改路径，现在是表示把数据存放在在当前文件夹下的 mariadb 文件夹中</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">on-failure</span></span><br></pre></td></tr></table></figure><p>以下是详细搭建教程。</p><h2 id="3-搭建环境"><a href="#3-搭建环境" class="headerlink" title="3. 搭建环境"></a>3. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器 24 元 &#x2F; 月 VPS 一台</del> 咕咕自己搭建用的是<a href="https://loll.cc/tx">腾讯轻量应用服务器</a> ，（最好是选 <strong>非大陆（香港）的服务器</strong>）如果是小白刚开始玩的话，还可以购买 <a href="https://blog.laoda.de/archives/cheap-vps-racknerd">Racknerd</a> 的服务器，最低一年不到 100 块（不过这个建议选择 1G 内存以上的机器）（Racknerd 服务器介绍：<a href="https://blog.laoda.de/archives/cheap-vps-racknerd">点击查看</a>）</li><li>系统：Debian 10 （<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD 脚本</a> 非必需 DD，用原来的系统也 OK，之后教程都是用 Debian 或者 Ubuntu 搭建～）</li><li>安装好 Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需但建议】域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>【非必需】提前安装好宝塔面板海外版本 aapanel，并安装好 Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程选用】安装好 Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><blockquote><p>服务器要求：内存建议1G 以上，硬盘可以大一些。</p></blockquote><h2 id="4-搭建视频"><a href="#4-搭建视频" class="headerlink" title="4. 搭建视频"></a>4. 搭建视频</h2><h3 id="4-1-YouTube："><a href="#4-1-YouTube：" class="headerlink" title="4.1 YouTube："></a>4.1 YouTube：</h3><div style="position: relative; padding: 30% 45%;"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="https://www.youtube.com/embed/mO10lrUtwuE" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe></div><h3 id="4-2-哔哩哔哩"><a href="#4-2-哔哩哔哩" class="headerlink" title="4.2 哔哩哔哩"></a>4.2 哔哩哔哩</h3><p>【高清版本可以点击去吐槽到 B 站观看】：</p><p><joe-bilibili bvid="BV1xG4y1c7gx"></joe-bilibili></p><h2 id="5-搭建方式"><a href="#5-搭建方式" class="headerlink" title="5. 搭建方式"></a>5. 搭建方式</h2><p>如果你不是用的腾讯云的轻量应用服务器，可以直接跳到 5.1 部分。</p><h3 id="安装系统（腾讯云轻量应用服务器）"><a href="#安装系统（腾讯云轻量应用服务器）" class="headerlink" title="安装系统（腾讯云轻量应用服务器）"></a>安装系统（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlyhcz-2.webp" alt="e59713fba8726d3cb55ae11bca83fe3c.png"></p><p>腾讯云轻量服务器最大的特点就是 “轻量”，相比 CVM，更适合小白上手，这边我们之间选择 Docker 基础镜像，就可以省去后面安装 Docker 的步骤（如果你非要用国内的服务器，这边装的 Docker 镜像还会帮你配置好国内镜像源，让你加速访问 docker 镜像资源）。</p><h3 id="登陆（腾讯云轻量应用服务器）"><a href="#登陆（腾讯云轻量应用服务器）" class="headerlink" title="登陆（腾讯云轻量应用服务器）"></a>登陆（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlzlj7-2.webp" alt="2722040ee311eb4a9ebf2a4945bf38f4.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm0gv8-2.webp" alt="c0b5d360053746c4095d592967ee401f.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm1vqw-2.webp" alt="e0ba858f021b846ad0abc27acf5008c2.png"></p><h3 id="5-1-安装-Docker-与-Nginx-Proxy-Manager"><a href="#5-1-安装-Docker-与-Nginx-Proxy-Manager" class="headerlink" title="5.1 安装 Docker 与 Nginx Proxy Manager"></a>5.1 安装 Docker 与 Nginx Proxy Manager</h3><p>可以直接参考这篇内容：<a href="https://blog.laoda.de/archives/nginxproxymanager">https://blog.laoda.de/archives/nginxproxymanager</a></p><h3 id="5-2-创建安装目录"><a href="#5-2-创建安装目录" class="headerlink" title="5.2 创建安装目录"></a>5.2 创建安装目录</h3><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/answer</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/answer</span><br></pre></td></tr></table></figure><p>这边我们直接用 docker 的方式安装。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure><p>英文输入法下，按 <code>i</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">answer:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">answerdev/answer</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;9008:80&#x27;</span>            <span class="comment"># 冒号左边可以改成自己服务器未被占用的端口</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">on-failure</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./answer-data:/data</span>  <span class="comment"># 冒号左边可以改路径，现在是表示把数据存放在在当前文件夹下的 answer-data 文件夹中</span></span><br><span class="line">      </span><br><span class="line">  <span class="attr">db:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mariadb:10</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">--character-set-server=utf8mb4</span> <span class="string">--collation-server=utf8mb4_unicode_ci</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">MYSQL_ROOT_PASSWORD:</span> <span class="string">answer</span>   <span class="comment"># 数据库用户root的密码，建议自行修改一个</span></span><br><span class="line">      <span class="attr">MYSQL_USER:</span> <span class="string">answer</span>         </span><br><span class="line">      <span class="attr">MYSQL_PASSWORD:</span> <span class="string">answer</span>   <span class="comment"># 数据库用户answer的密码，建议自行修改一个</span></span><br><span class="line">      <span class="attr">MYSQL_DATABASE:</span> <span class="string">answer</span> </span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./mariadb:/var/lib/mysql</span>  <span class="comment"># 冒号左边可以改路径，现在是表示把数据存放在在当前文件夹下的 mariadb 文件夹中</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">on-failure</span></span><br></pre></td></tr></table></figure><p>按一下 <code>esc</code>，然后 <code>:wq</code> 保存退出。</p><h3 id="5-3-打开服务器防火墙（非必需）并访问网页"><a href="#5-3-打开服务器防火墙（非必需）并访问网页" class="headerlink" title="5.3 打开服务器防火墙（非必需）并访问网页"></a>5.3 打开服务器防火墙（非必需）并访问网页</h3><p>打开防火墙的端口 <code>9008</code></p><p>举例，腾讯云打开方法如下（部分服务商没有自带的面板防火墙，就不用这步操作了）：</p><img src="https://img.laoda.de/i/2022/06/30/zlio5h-2.webp" alt="image-20220630215240864" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/06/30/10h3dqt-2.webp" alt="image-20220630220546335" style="zoom:33%;" /><p>图中示例填的是 <code>5230</code>，备注填的是 <code>memos</code>，这边我们填 <code>9008</code>，示例填 <code>answer</code> ，确定即可（如果你在 docker-compose 文件里换了 <code>9009</code>，这边就需要填 <code>9009</code>，以此类推）</p><img src="https://img.laoda.de/i/2022/08/19/o4byqz-2.webp" alt="image-20220819145844555" style="zoom:33%;" /><p>查看端口是否被占用（以 <code>9008</code> 为例），输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:9008  <span class="comment">#查看 9008 端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果啥也没出现，表示端口未被占用，我们可以继续下面的操作了～</p><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装 lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用（被占用了就修改一下端口，比如改成 <code>8081</code>，注意 docker 命令行里和防火墙都要改）</p><p>最后：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/answer    <span class="comment"># 来到 dockercompose 文件所在的文件夹下</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>理论上我们就可以输入 <code>http://ip:9008</code> 访问安装了。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器 IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的 IP。</p><p>2、遇到访问不了的情况，请再次检查在宝塔面板的防火墙和服务商的后台防火墙是否打开对应了端口。</p></blockquote><p>有的小伙伴可能想搭建起来分享给其他人使用，如果后续想要分享给别人，IP + 端口太不优雅了，咕咕建议大家还是搞一个域名，容易记，看起来也更正规一点。这样可以做 https，会让网页更安全。</p><p>而且 <a href="https://loll.cc/ns">namesilo</a> 上面 xyz 后缀的域名一年就 7 块钱，可以年抛。</p><p>如果想要长期使用，还是建议买 com 后缀的域名，更加正规一些，可以输入 <code>laodade</code> 来获得 1 美元的优惠（不知道现在还有没有）</p><p><a href="https://loll.cc/ns">namesilo</a> 自带隐私保护，咕咕一直在用这家，价格也是这些注册商里面比较低的，关键是他家不像其他家域名注册商，没有七七八八的套路！（就是后台界面有些<del>丑</del> 古老 &#x3D; &#x3D;）</p><p><a href="https://blog.laoda.de/archives/namesilo">【域名购买】Namesilo 优惠码和域名解析教程（附带服务器购买推荐和注意事项）</a></p><p>我们接着往下看！</p><h3 id="5-4-更新-Answer"><a href="#5-4-更新-Answer" class="headerlink" title="5.4 更新 Answer"></a>5.4 更新 Answer</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/answer</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/answer/root/data/docker_data/hexo.archive  <span class="comment"># 万事先备份，以防万一，其实这边没必要，因为我们没有映射到本地文件夹</span></span><br><span class="line"></span><br><span class="line">docker-compose pull</span><br><span class="line"></span><br><span class="line">docker-compose up -d    <span class="comment"># 请不要使用 docker-compose stop 来停止容器，因为这么做需要额外的时间等待容器停止；docker-compose up -d 直接升级容器时会自动停止并立刻重建新的容器，完全没有必要浪费那些时间。</span></span><br><span class="line"></span><br><span class="line">docker image prune  <span class="comment"># prune 命令用来删除不再使用的 docker 对象。删除所有未被 tag 标记和未被容器使用的镜像</span></span><br></pre></td></tr></table></figure><p>提示：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WARNING! This will remove all dangling images.</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] </span><br></pre></td></tr></table></figure><p>输入 <code>y</code></p><p>利用 Docker 搭建的应用，更新非常容易～</p><h3 id="5-5-卸载-Answer"><a href="#5-5-卸载-Answer" class="headerlink" title="5.5 卸载 Answer"></a>5.5 卸载 Answer</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/answer</span><br><span class="line"></span><br><span class="line">docker-compose down</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/answer  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>可以卸载得很干净。</p><h2 id="6-反向代理"><a href="#6-反向代理" class="headerlink" title="6. 反向代理"></a>6. 反向代理</h2><p>我们要用域名而不是IP+端口的方式来访问我们的服务！</p><h3 id="6-1-利用-Nginx-Proxy-Manager"><a href="#6-1-利用-Nginx-Proxy-Manager" class="headerlink" title="6.1 利用 Nginx Proxy Manager"></a>6.1 利用 Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p><img src="https://img.laoda.de/i/2022/10/16/n6t02e-2.webp" alt="image-20221016140213282"></p><p>之后，登陆 Nginx Proxy Manager（不会的看这个：<strong>安装 Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称 NPM）会用到 <code>80</code>、<code>443</code> 端口，所以本机不能占用（比如原来就有 Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom: 33%;" /><p><img src="https://img.laoda.de/i/2022/10/16/n7b9hm-2.webp" alt="image-20221016140258381"></p><blockquote><p> 注意填写对应的 <code>域名</code>、<code>IP</code> 和 <code>端口</code>，按文章来的话，应该是 <code>9008</code></p></blockquote><p><strong>IP 填写：</strong></p><p>如果 Nginx Proxy Manager 和 answer 在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的 Docker 容器内部 IP。</p><p><img src="https://img.laoda.de/i/2022/09/29/pcdnz5-2.webp"></p><p>否则直接填 <code>answer</code> 所在的服务器 IP 就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom: 33%;" /><p>再次打开，勾选这些：</p><p><img src="https://img.laoda.de/i/2022/10/16/n7nn6e-2.webp" alt="image-20221016140356324"></p><p>然后就可以用域名来安装访问了。</p><h3 id="6-2-利用宝塔面板"><a href="#6-2-利用宝塔面板" class="headerlink" title="6.2 利用宝塔面板"></a>6.2 利用宝塔面板</h3><p>发现还是有不少小伙伴习惯用宝塔面板，这边也贴一个宝塔面板的反代配置：</p><p>直接新建一个站点，不要数据库，不要 php，纯静态即可。</p><p>然后打开下面的配置，修改 Nginx 的配置。</p><p><img src="https://img.laoda.de/i/2022/08/19/ov4xrt-2.webp" alt="image-20220819150345725"></p><p><img src="https://img.laoda.de/i/2022/08/19/owbbkb-2.webp" alt="image-20220819150542867"></p><p>代码如下：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:9008/;       <span class="comment"># 注意改成你实际使用的端口</span></span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此方法对 90% 的反向代理都能生效，然后就可以用域名来安装访问了。</p><p>有同学可能会问，为什么不直接用宝塔自带的反向代理功能。</p><p><img src="https://img.laoda.de/i/2022/08/19/oxf800-2.webp" alt="image-20220819150730128"></p><p>也可以，不过咕咕自己之前遇到过当有多个网站需要反代的时候，在这边设置会报错的情况 &#x3D; &#x3D; </p><p>所以后来就不用了，直接用上面的方法来操作了。</p><h2 id="7-使用教程"><a href="#7-使用教程" class="headerlink" title="7. 使用教程"></a>7. 使用教程</h2><p>安装和配置见咕咕的视频。</p><h2 id="8-目前遇到的问题"><a href="#8-目前遇到的问题" class="headerlink" title="8. 目前遇到的问题"></a>8. 目前遇到的问题</h2><p>暂无</p><h2 id="9-结尾"><a href="#9-结尾" class="headerlink" title="9. 结尾"></a>9. 结尾</h2><p>祝大家用得开心，有问题可以去 GitHub 提 <a href="https://github.com/answerdev/answer/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，项目处于刚开始阶段，有能力给项目做贡献的同学，也欢迎积极加入到 <a href="https://github.com/answerdev/answer">项目</a> 中来，贡献自己的一份力量！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>Answer 官方网址：<a href="https://answer.dev/">https://answer.dev/</a><br>Answer 官方 GitHub：<a href="https://github.com/answerdev/answer">https://github.com/answerdev/answer</a><br>Answer 官方文档：<a href="https://answer.dev/docs/installation/">https://answer.dev/docs/installation/</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DockerCompose </tag>
            
            <tag> 知乎 </tag>
            
            <tag> 问答平台 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【转载】MXroute 使用教程</title>
      <link href="/archives/mxroute-settings/"/>
      <url>/archives/mxroute-settings/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文原文：<a href="https://blog.fly2x.cn/archives/210.html">MXroute 小教程</a>   </p><p>感谢作者的分享，这边因为咕咕也有MXroute的邮箱，特存一个档。</p></blockquote><p>MXroute是一个域名邮件提供商，就是给你一个只有邮件功能的虚拟主机账号。特点是无限域名，无限邮箱账号。所以买一个套餐可以把所有域名都绑上去。</p><h2 id="1-购买"><a href="#1-购买" class="headerlink" title="1. 购买"></a>1. 购买</h2><p>MXroute官网：<a href="https://mxroute.com/">https://mxroute.com/</a></p><h2 id="2-重要设置"><a href="#2-重要设置" class="headerlink" title="2. 重要设置"></a>2. 重要设置</h2><p>MX记录，SPF记录。DKIM记录可选。<br>除了DKIM，其他信息都在下单成功后的通知邮件里面。见下图。请记录自己的邮件中对应服务器地址，不要照抄我这个。<br><img src="https://img.laoda.de/i/2023/01/14/w0dt7u-2.webp" alt="image-20230114193554612"></p><h3 id="2-1-设置MX记录"><a href="#2-1-设置MX记录" class="headerlink" title="2.1 设置MX记录"></a>2.1 设置MX记录</h3><p>MX记录指定邮件服务器，发件方根据此记录来决定把信息送往哪里。</p><h3 id="2-2-设置spf记录"><a href="#2-2-设置spf记录" class="headerlink" title="2.2 设置spf记录"></a>2.2 设置spf记录</h3><p>SFP记录限制了哪些服务器可以使用此域名来发送邮件，收件方可以将发件服务器地址与此记录进行比对，如果不符合，则可认定是伪造发件人的邮件。</p><h3 id="2-3-添加DKIM记录"><a href="#2-3-添加DKIM记录" class="headerlink" title="2.3 添加DKIM记录"></a>2.3 添加DKIM记录</h3><p>发件方会在邮件头添加一个<code>DKIM-Signature</code>的字段，里面包含了签名信息。收件方通过查询DNS获得密钥，用这个密钥校验签名。这样可以验证发件方的身份。<br>进入MXroute的控制面板，在以下位置找到DKIM记录值。</p><ul><li>如果你的界面跟这里不一样，请点击右上角用户名，下拉菜单选Skin Options, Layout选Sidebar。</li></ul><p><img src="https://img.laoda.de/i/2023/01/14/w0s6p5-2.webp" alt="image-20230114193622612"></p><p>DNSPOD的txt记录限制字符数量为220，MXroute给出的DKIM记录长度为452，无法添加。<br>Cloudflare可以。添加一个名为”x._domainkey”的txt字段，填入DKIM值，不要包含引号。</p><h2 id="3-自定义域名"><a href="#3-自定义域名" class="headerlink" title="3. 自定义域名"></a>3. 自定义域名</h2><p>要使用自己的域名来访问网页版和客户端邮箱，需要设置别名。<br>以我这里的域名为例：</p><ul><li><code>webmail.fly2x.cn</code>用来访问网页版邮箱。可以开启CDN。</li><li><code>mail.fly2x.cn</code>用于SMTP, POP, IMAP。<strong>不要开启CDN</strong>。</li></ul><p>如果你使用了Cloudflare的服务，并且开启了CDN，那么Cloudflare会为你自动开启https。<br>如果你没有开启CDN，那么需要手动设置，让MXroute帮你生成SSL证书。<br><img src="https://img.laoda.de/i/2023/01/14/w1arh7-2.webp" alt="image-20230114193708450"></p><h2 id="4-完整DNS记录"><a href="#4-完整DNS记录" class="headerlink" title="4. 完整DNS记录"></a>4. 完整DNS记录</h2><p><img src="https://img.laoda.de/i/2023/01/14/w1crpk-2.webp" alt="dns_record.png"></p><h2 id="5-最后再完善一下"><a href="#5-最后再完善一下" class="headerlink" title="5. 最后再完善一下"></a>5. 最后再完善一下</h2><p>到<a href="https://www.mail-tester.com/">https://www.mail-tester.com/</a> 测试，会给出8.5分。<br>根据建议添加一个名称为<code>_dmarc.fly2x.cn</code>的txt记录，值为<code>v=DMARC1; p=none</code>。关于这个记录，解释见<a href="https://support.google.com/a/answer/2466563?hl=zh-Hans">这里</a>。<br>得分就提高到9.5，现在可以开始发送了。</p><p><img src="https://img.laoda.de/i/2023/01/14/w1ggyu-2.webp" alt="image-20230114193735249"></p><h2 id="6-总结"><a href="#6-总结" class="headerlink" title="6. 总结"></a>6. 总结</h2><p>真麻烦，免费邮箱不香吗？</p><h2 id="7-补充"><a href="#7-补充" class="headerlink" title="7. 补充"></a>7. 补充</h2><p>MXroute也是可以发件的，参考配置如下：</p><p><img src="https://img.laoda.de/i/2023/01/14/w99jm3-2.webp" alt="image-20230114195046342"></p><p>不过MXroute似乎是有每小时500封的限制，所以不适合用来大批量分发邮件，用来当作博客评论的回复邮件还是非常不错的。</p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 域名邮箱 </tag>
            
            <tag> 自定义邮箱 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搬瓦工神秘套餐！可切所有17个机房！原价299美元，现价只要99美元，还可以叠加优惠码，今年性价比最高的套餐 ！</title>
      <link href="/archives/vps-bandwagonhost-2023-0113/"/>
      <url>/archives/vps-bandwagonhost-2023-0113/</url>
      
        <content type="html"><![CDATA[<p>瓦工限量促销一款神秘套餐，年付99美元，购买套餐配置翻倍，优惠完年付92.49刀，配置为2H2G40GSSD1T流量，可以切换瓦工的所有机房，所有的高端机房，包括2月份即将上线的加拿大gia机房。</p><p><img src="https://img.laoda.de/i/2023/01/13/u2oh7d-2.webp" alt="image-20230113181846089"></p><blockquote><p><strong>1月17日更新，车已开走！</strong></p></blockquote><blockquote><p><strong>1月16日更新，目前官方活动页面已经下架，但是套餐还是可以购买的，点击下方的<a href="https://bwh81.net/aff.php?aff=67086&pid=129">购买链接</a>，还是能买！</strong></p></blockquote><h4 id="1、瓦工神秘套餐"><a href="#1、瓦工神秘套餐" class="headerlink" title="1、瓦工神秘套餐"></a>1、瓦工神秘套餐</h4><p>优点：可以切换瓦工17个机房，包括所有的高端机房(香港CMI&#x2F;美西CN2 GIA&#x2F;日本软银&#x2F;荷兰9929)</p><p>方案配置：</p><ul><li>硬盘：40 GB SSD</li><li>内存：2G</li><li>CPU：2 核</li><li>流量：1000 GB&#x2F;月</li><li>带宽：1Gbps</li><li>方案价格：$99.99 USD&#x2F;年(优惠完年付92.49刀) 续费也是这个价格！</li><li>优惠码：<a href="https://bwh89.net/the-plan?aff=67086">BWH3HYATVBJW</a></li><li>购买链接：<a href="https://bwh81.net/aff.php?aff=67086&pid=129"><strong>点击直达</strong></a></li><li><a href="https://bwh89.net/the-plan?aff=67086">官方活动页面</a></li></ul><p><strong>咕咕已经冲了！</strong></p><p><img src="https://img.laoda.de/i/2023/01/13/uag58f-2.webp" alt="image-20230113183152130"></p><p><img src="https://img.laoda.de/i/2023/01/13/uaqih4-2.webp" alt="image-20230113183159907"></p><blockquote><p>小提示：</p><p>机房可以随意切换的，会浪费一点流量（大概是你实际使用的硬盘的大小）。</p><p>联通的话切软银（softbank机房），直接起飞，电信切dc06机房，移动切香港cmi机房。</p></blockquote><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>大家按需购买！咕咕先冲了！</p><p>推荐阅读：</p><p><a href="https://blog.laoda.de/archives/vps-route">【VPS选购小常识】VPS线路解析不完全指南 什么是CN2 GIA？什么是AS9929、AS4837？什么是CU VIP？什么是移动CMI？如何判断回程路由？</a></p><p><a href="https://blog.laoda.de/archives/vps-bandwagonhost">【VPS选购分享】Bandwagonhost（搬瓦工）——曾经的王者，三网G口GIA，贵族VPS</a></p>]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 美国VPS </tag>
            
            <tag> 欧洲VPS </tag>
            
            <tag> 搬瓦工 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快过年了，搬瓦工限量版套餐全线补货：DC9 CN2 GIA/悉尼/香港 HK85/迪拜</title>
      <link href="/archives/vps-bandwagonhost-2023-0112/"/>
      <url>/archives/vps-bandwagonhost-2023-0112/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>快过年了，估计搬瓦工想搞一波钱发年终奖，居然补货了4款之前的限量版机器：包括<a href="https://bwg.laoda.de/?id=112">搬瓦工 DC9 CN2 GIA 限量版套餐</a>、<a href="https://bwg.laoda.de/?id=126">搬瓦工悉尼限量版套餐</a>、<a href="https://bwg.laoda.de/?id=113">搬瓦工迪拜限量版套餐</a>、<a href="https://bwg.laoda.de/?id=121">搬瓦工中国香港 HK85 限量版套餐</a>，一共四款。（差一款DC06的GIA-E没有补货 &#x3D; &#x3D;）</p><p><img src="https://img.laoda.de/i/2023/01/12/pp74-2.webp" alt="image-20230112000117363"></p><p>如果要冲，千万别忘了用优惠码：<code>BWH3HYATVBJW</code>  可以优惠6.58%</p><p>搬瓦工全方案 即时库存检测：<a href="https://bwg.laoda.de/">https://bwg.laoda.de/</a></p><p>搬瓦工介绍：<a href="https://blog.laoda.de/archives/vps-bandwagonhost">【VPS选购分享】Bandwagonhost（搬瓦工）——曾经的王者，三网G口GIA，贵族VPS</a></p><h2 id="四个限量版套餐怎么选"><a href="#四个限量版套餐怎么选" class="headerlink" title="四个限量版套餐怎么选"></a>四个限量版套餐怎么选</h2><h3 id="搬瓦工-DC9-CN2-GIA-限量版"><a href="#搬瓦工-DC9-CN2-GIA-限量版" class="headerlink" title="搬瓦工 DC9 CN2 GIA 限量版"></a>搬瓦工 DC9 CN2 GIA 限量版</h3><p>咕咕博客目前的同款，电信高贵鸡，建议电信用户购买，移动和联通用户也可以买。因为 DC9 机房三网回程都接入<a href="https://blog.laoda.de/archives/vps-route#3.6-%E4%BB%80%E4%B9%88%E6%98%AFcn2-gia%E7%BA%BF%E8%B7%AF">电信 CN2 GIA 高端路线</a>，效果非常好，并且是和电信直接签合同拉线，机房出来直接到电信 CN2 GIA 线路。</p><p><strong>搬瓦工 DC9 CN2 GIA 限量版购买地址</strong>：<a href="https://bwg.laoda.de/?id=112">https://bwg.laoda.de/?id=112</a></p><h3 id="搬瓦工香港-HK85-限量版"><a href="#搬瓦工香港-HK85-限量版" class="headerlink" title="搬瓦工香港 HK85 限量版"></a>搬瓦工香港 HK85 限量版</h3><p>建议移动用户购买，三网回程接入移动 CMI 路线，去程移动也是 CMI 路线。对于电信和联通用户来说，也可以买，不过去程会接入 NTT，可能偶尔有丢包。</p><p><strong>搬瓦工香港 HK85 限量版购买地址</strong>：<a href="https://bwg.laoda.de/?id=121">https://bwg.laoda.de/?id=121</a></p><h3 id="搬瓦工迪拜限量版套餐"><a href="#搬瓦工迪拜限量版套餐" class="headerlink" title="搬瓦工迪拜限量版套餐"></a>搬瓦工迪拜限量版套餐</h3><p>建议想使用迪拜机房的朋友购买，或者是想先月付一个套餐尝试一下所有机房的朋友购买。（迪拜可以切换除了香港之外的所有机房！）</p><p><strong>搬瓦工迪拜限量版购买地址</strong>：<a href="https://bwg.laoda.de/?id=113">https://bwg.laoda.de/?id=113</a></p><h3 id="搬瓦工悉尼限量版"><a href="#搬瓦工悉尼限量版" class="headerlink" title="搬瓦工悉尼限量版"></a>搬瓦工悉尼限量版</h3><p>一般不建议购买，没啥性价比。</p><p>非要买的话，建议联通用户购买。这款套餐是接入联通 AS10099、AS9929 高端线路，对于联通线路的效果比较好，不过不能迁移机房。</p><p><strong>搬瓦工悉尼限量版购买地址</strong>：<a href="https://bwg.laoda.de/?id=126">https://bwg.laoda.de/?id=126</a></p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>大家按需购买，快过年了，切勿冲动消费！</p><p>推荐阅读：<a href="https://blog.laoda.de/archives/vps-route">【VPS选购小常识】VPS线路解析不完全指南 什么是CN2 GIA？什么是AS9929、AS4837？什么是CU VIP？什么是移动CMI？如何判断回程路由？</a></p>]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 美国VPS </tag>
            
            <tag> 搬瓦工 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VPS 基础环境配置</title>
      <link href="/archives/vps-basic-configuration/"/>
      <url>/archives/vps-basic-configuration/</url>
      
        <content type="html"><![CDATA[<p>鉴于很多小伙伴反馈【好玩儿的Docker项目】系列文章里面有些配置太繁琐了，导致文章很长，这边咕咕就把配置部分的内容独立出来，水一篇文章。</p><p>大家有什么意见或者建议也欢迎在评论区反馈，咕咕收到合理的建议或者意见会及时改进。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li><p>服务器：<del>腾讯香港轻量应用服务器 24 元 &#x2F; 月 VPS 一台</del> 咕咕自己搭建用的是<a href="https://loll.cc/tx">腾讯轻量应用服务器</a> ，（最好是选 <strong>非大陆（香港）的服务器</strong>）如果是小白刚开始玩的话，还可以购买 <a href="https://blog.laoda.de/vps/">Racknerd</a> 的服务器（地区选美西），最低一年不到 100 块（Racknerd 服务器介绍：<a href="https://blog.laoda.de/archives/cheap-vps-racknerd">点击查看</a>）</p></li><li><p>系统：Debian10或以上（Ubuntu 20.04以上）不建议用CentOS，具体原因请见：<a href="https://blog.laoda.de/archives/getting-started-with-linux#0-%E5%89%8D%E8%A8%80%E5%90%90%E6%A7%BDcentos">解释使用Debian而不是CentOS的原因</a></p></li></ul><blockquote><p>参考阅读：<a href="https://blog.laoda.de/archives/vps-choose">VPS服务器选购不完全指南</a></p></blockquote><h2 id="登陆服务器"><a href="#登陆服务器" class="headerlink" title="登陆服务器"></a>登陆服务器</h2><p>选择一款连接SSH的软件。</p><blockquote><p>如果不会可以看这个文档：<a href="https://blog.laoda.de/archives/getting-started-with-linux#2.1-%E8%BF%9E%E6%8E%A5ssh%E7%9A%84%E8%BD%AF%E4%BB%B6%E5%92%8C%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C">连接SSH的软件和相关操作</a></p></blockquote><p>Mac 或者 Linux 用户可以直接用系统自带的<code>终端</code>（也叫<code>Terminal</code>）来登陆服务器。</p><p>输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh 你的用户名@你的服务器IP -P 22</span><br></pre></td></tr></table></figure><p>如果你没有更改 ssh 的端口，默认就是<code>22</code>，当然为了服务器安全，建议你可以换一个别的端口，具体请见：<a href="https://blog.laoda.de/archives/how-to-secure-a-linux-server#1%E6%9B%B4%E6%94%B9ssh%E7%AB%AF%E5%8F%A3">保护好你的小鸡！保姆级服务器安全教程！</a></p><h3 id="升级-Packages"><a href="#升级-Packages" class="headerlink" title="升级 Packages"></a>升级 Packages</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i <span class="comment"># 切换到 root 用户</span></span><br><span class="line"></span><br><span class="line">apt update -y  <span class="comment"># 升级 packages</span></span><br><span class="line"></span><br><span class="line">apt install wget curl sudo vim git -y  <span class="comment"># Debian 系统比较干净，安装常用的软件</span></span><br></pre></td></tr></table></figure><h3 id="添加SWAP虚拟内存"><a href="#添加SWAP虚拟内存" class="headerlink" title="添加SWAP虚拟内存"></a>添加SWAP虚拟内存</h3><blockquote><p>注意：VPS 的内存如果过小，建议设置一下 SWAP，一般为内存的 1-1.5 倍即可，可以让系统运行更流畅！</p></blockquote><p>设置 SWAP 可以用脚本:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O box.sh https://raw.githubusercontent.com/BlueSkyXN/SKY-BOX/main/box.sh &amp;&amp; <span class="built_in">chmod</span> +x box.sh &amp;&amp; clear &amp;&amp; ./box.sh</span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2022/05/28/uoikkd-0.webp" alt="image-20220528185512488" style="zoom:50%;" /><p>选择 <code>18</code>，然后输入你想要扩容的数值即可。</p><img src="https://img.laoda.de/i/2022/05/28/up2dkf-0.webp" alt="image-20220528185604586" style="zoom:50%;" /><h3 id="安装-Docker-环境"><a href="#安装-Docker-环境" class="headerlink" title="安装 Docker 环境"></a>安装 Docker 环境</h3><h4 id="安装-Docker（非大陆服务器）"><a href="#安装-Docker（非大陆服务器）" class="headerlink" title="安装 Docker（非大陆服务器）"></a>安装 Docker（非大陆服务器）</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -qO- get.docker.com | bash</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker -v  <span class="comment">#查看 docker 版本</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker  <span class="comment"># 设置开机自动启动</span></span><br></pre></td></tr></table></figure><h4 id="安装-Docker-compose（非大陆服务器）"><a href="#安装-Docker-compose（非大陆服务器）" class="headerlink" title="安装  Docker-compose（非大陆服务器）"></a>安装  Docker-compose（非大陆服务器）</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/1.29.2/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose --version  <span class="comment">#查看 docker-compose 版本</span></span><br></pre></td></tr></table></figure><h4 id="安装-Docker（国内服务器）"><a href="#安装-Docker（国内服务器）" class="headerlink" title="安装 Docker（国内服务器）"></a>安装 Docker（国内服务器）</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -sSL https://get.daocloud.io/docker | sh</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker -v  <span class="comment">#查看 docker 版本</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker  <span class="comment"># 设置开机自动启动</span></span><br></pre></td></tr></table></figure><h4 id="安装-Docker-compose（国内服务器）"><a href="#安装-Docker-compose（国内服务器）" class="headerlink" title="安装 Docker-compose（国内服务器）"></a>安装 Docker-compose（国内服务器）</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -L https://get.daocloud.io/docker/compose/releases/download/v2.1.1/docker-compose-`<span class="built_in">uname</span> -s`-`<span class="built_in">uname</span> -m` &gt; /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line">docker-compose --version  <span class="comment">#查看 docker-compose 版本</span></span><br></pre></td></tr></table></figure><h4 id="修改-Docker-配置（可选）"><a href="#修改-Docker-配置（可选）" class="headerlink" title="修改 Docker 配置（可选）"></a><strong>修改 Docker 配置（可选）</strong></h4><p>来自 <a href="https://u.sb/debian-install-docker/">烧饼博客</a></p><p>以下配置会增加一段自定义内网 IPv6 地址，开启容器的 IPv6 功能，以及限制日志文件大小，防止 Docker 日志塞满硬盘（泪的教训）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/docker/daemon.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    &quot;log-driver&quot;: &quot;json-file&quot;,</span></span><br><span class="line"><span class="string">    &quot;log-opts&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;max-size&quot;: &quot;20m&quot;,</span></span><br><span class="line"><span class="string">        &quot;max-file&quot;: &quot;3&quot;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    &quot;ipv6&quot;: true,</span></span><br><span class="line"><span class="string">    &quot;fixed-cidr-v6&quot;: &quot;fd00:dead:beef:c0::/80&quot;,</span></span><br><span class="line"><span class="string">    &quot;experimental&quot;:true,</span></span><br><span class="line"><span class="string">    &quot;ip6tables&quot;:true</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>然后重启 Docker 服务：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><p>至此，你的服务器已经配置好了基础的 Docker 环境。</p><h2 id="其他工作"><a href="#其他工作" class="headerlink" title="其他工作"></a>其他工作</h2><p>作为一台有公网 IP 的电脑，服务器的安全非常重要，咕咕建议你看这篇文章来加固一下你的服务器：<a href="https://blog.laoda.de/archives/how-to-secure-a-linux-server">保护好你的小鸡！保姆级服务器安全教程！</a></p><p>如果你也不喜欢宝塔之类的面板，你可以选择安装 Nginx Proxy Manager 来给 Docker 项目做反向代理：<a href="https://blog.laoda.de/archives/nginxproxymanager">【Docker系列】一个反向代理神器——Nginx Proxy Manager</a></p><p>如果你对域名购买有困惑，可以看一下这篇文章：<a href="https://blog.laoda.de/archives/namesilo">【服务器、域名购买】Namesilo优惠码和域名解析教程（附带服务器购买推荐和注意事项）</a></p><p>如果你想了解更多关于Linux的相关知识，可以看一下这篇文章：<a href="https://blog.laoda.de/archives/getting-started-with-linux">【转载】MJJ版的Linux入门教程</a></p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DockerCompose </tag>
            
            <tag> Docker </tag>
            
            <tag> VPS教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Halo官方收录】如何用 Nginx Proxy Manager 给 Halo 博客做反向代理</title>
      <link href="/archives/halo-with-nginxproxymanager/"/>
      <url>/archives/halo-with-nginxproxymanager/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这是咕咕第一次在 GitHub 提 Pull Request（PR），也算是给开源项目做了一点点小小的贡献，特此记录一下。</p><p>同时也希望有能力的同学可以加入到开源项目中来，贡献自己的一份力量。（包括不局限于更新文档、翻译、贡献代码）</p><p>如何参与开源项目的贡献？</p><p>以 <a href="https://github.com/halo-dev/halo">Halo</a> 为例子，可以参考：<a href="https://docs.halo.run/category/%E5%8F%82%E4%B8%8E%E8%B4%A1%E7%8C%AE">https://docs.halo.run/category/%E5%8F%82%E4%B8%8E%E8%B4%A1%E7%8C%AE</a></p><blockquote><p>这篇内容已经被Halo官方文档收录：<a href="https://docs.halo.run/getting-started/install/other/nginxproxymanager">https://docs.halo.run/getting-started/install/other/nginxproxymanager</a></p></blockquote><h2 id="Halo-与-Nginx-Proxy-Manager-配合使用"><a href="#Halo-与-Nginx-Proxy-Manager-配合使用" class="headerlink" title="Halo 与 Nginx Proxy Manager 配合使用"></a>Halo 与 Nginx Proxy Manager 配合使用</h2><h3 id="Halo-部署"><a href="#Halo-部署" class="headerlink" title="Halo 部署"></a>Halo 部署</h3><p>参见 <a href="https://docs.halo.run/getting-started/install/docker-compose">使用 Docker Compose 部署</a></p><blockquote><p><code>「反向代理」</code> 部分不进行操作，保证 Halo 服务运行无误即可。</p></blockquote><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>顾名思义，Nginx Proxy Manager就是一个Nginx的代理管理器，它最大的特点是简单方便。</p><p>即使是没有Nginx基础的小伙伴，也能轻松地用它来完成反向代理的操作，而且因为自带面板，操作极其简单，非常适合配合docker搭建的应用使用。</p><p>Nginx Proxy Manager后台还可以一键申请SSL证书，并且会自动续期，方便省心。</p><p>下面我们就来介绍如何用Nginx Proxy Manger来配合Halo，实现反向代理和HTTPS访问。</p><h3 id="安装Nginx-Proxy-Manager"><a href="#安装Nginx-Proxy-Manager" class="headerlink" title="安装Nginx Proxy Manager"></a>安装Nginx Proxy Manager</h3><blockquote><p>说明：默认你的服务器已经安装了Docker和Docker Compose，如果你没有安装，可以参考：<a href="https://docs.halo.run/getting-started/install/docker-compose">使用 Docker Compose 部署</a>的环境搭建部分来进行安装。</p></blockquote><p>点击下方链接进入 Nginx Proxy Manager（以下简称NPM） 官网：<a href="https://nginxproxymanager.com/">https://nginxproxymanager.com/</a></p><p>我们可以直接选择<a href="https://nginxproxymanager.com/guide/#quick-setup">快速安装</a>。</p><p>首先，我们创建一个文件夹来存放NPM的<code>docker-compose.yml</code>文件：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p ~/data/docker_data/nginxproxymanager   <span class="comment"># 创建一个npm的文件夹</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ~/data/docker_data/nginxproxymanager    <span class="comment"># 进入该文件夹</span></span><br><span class="line"></span><br><span class="line">vi docker-compose.yml</span><br></pre></td></tr></table></figure><p>在英文状态的输入法下，按下<code>i</code>，左下角出现<code>--INSERT--</code>后，粘贴填入下面的内容：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">app:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">&#x27;jc21/nginx-proxy-manager:latest&#x27;</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;80:80&#x27;</span>              <span class="comment"># 不建议修改端口</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;81:81&#x27;</span>              <span class="comment"># 可以把冒号左边的81端口修改成你服务器上没有被占用的端口</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;443:443&#x27;</span>            <span class="comment"># 不建议修改端口</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data:/data</span>         <span class="comment"># 点号表示当前文件夹，冒号左边的意思是在当前文件夹下创建一个data目录，用于存放数据，如果不存在的话，会自动创建</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./letsencrypt:/etc/letsencrypt</span>  <span class="comment"># 点号表示当前文件夹，冒号左边的意思是在当前文件夹下创建一个letsencrypt目录，用于存放证书，如果不存在的话，会自动创建</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：安装了NPM之后，就不需要再安装Nginx了，否则会端口冲突（不建议修改NPM的80、443端口）。如果你的服务器安装了宝塔面板，也可以和NPM一起使用，只要你到软件后台把宝塔安装的Nginx关闭或者卸载即可。</p></blockquote><p>之后，同样在英文输入法下，按一下<code>esc</code>，然后<code>:wq</code> 保存退出。</p><p>启动NPM：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d     <span class="comment"># -d 表示后台运行</span></span><br><span class="line"></span><br><span class="line">docker compose up -d     <span class="comment"># 如果你用的是 docker-compose-plugin的话，用这条命令</span></span><br></pre></td></tr></table></figure><p>不出意外，此时你使用<a href="http://127.0.0.1:81/">http://127.0.0.1:81</a> 就可以访问NPM的网页端了。（注意把<code>127.0.0.1</code>替换成你实际服务器的IP）</p><blockquote><ol><li>不知道服务器 IP，可以直接在命令行输入：curl ip.sb，会显示当前服务器的 IP。</li><li>遇到访问不了的情况，请再次检查在宝塔面板的防火墙和服务商的后台防火墙是否打开对应了端口。</li></ol></blockquote><p>默认登陆的用户名：<code>admin@example.com</code> 密码：<code>changeme</code></p><p>第一次登陆会提示更改用户名和密码，建议修改一个复杂一点的密码。</p><p>至此，我们已经完成了Nginx Proxy Manager的搭建，之后就可以用它给我们的Halo或者其他Web应用做反向代理了。</p><h3 id="配置Halo的反向代理"><a href="#配置Halo的反向代理" class="headerlink" title="配置Halo的反向代理"></a>配置Halo的反向代理</h3><p>首先我们登陆网页端之后，会弹出修改用户名和密码的对话框，我们根据自己的实际来修改自己的用户名和邮箱。</p><p><img src="https://img.laoda.de/i/2022/12/12/r7qwgr-2.webp" alt="iShot_2022-12-12_16.44.51"></p><p>保存之后，会让我们修改密码（建议用一个复杂的密码）。</p><p><img src="https://img.laoda.de/i/2022/12/12/r88bvl-2.webp" alt="image-20221212164639702"></p><p>接着我们就可以来给Halo来添加一个反向代理了。</p><p>点击<code>Proxy Hosts</code>，</p><p><img src="https://img.laoda.de/i/2022/12/12/rd1a5e-2.webp" alt="image-20221212165447656"></p><p>接着点击<code>Add Proxy Host</code>，弹出如下对话框：</p><p><img src="https://img.laoda.de/i/2022/12/12/rftexf-2.webp" alt="image-20221212165912118"></p><p>看起来都是英文，很复杂，但是其实很简单，我们只要用到其中的几个功能即可，这边稍微解释一下：</p><ul><li><code>Domain Names</code> ：填我们Halo网站的域名，首先记得做好DNS解析，把域名绑定到我们的服务器的IP上</li><li><code>Scheme</code> ：默认<code>http</code>即可，除非你有自签名证书</li><li><code>Forward Hostname/IP</code> ：填入服务器的IP，或者Docker容器内部的IP（如果NPM和Halo搭建在同一台服务器上的话）</li><li><code>Forward Port</code>：填入Halo映射出的端口，这边默认是<code>8090</code></li><li><code>Cache Assets</code> ：缓存，可以选择打开</li><li><code>Block Common Exploits</code>： 阻止常见的漏洞，可以选择打开</li><li><code>Websockets Support</code> ：WS支持，可以选择打开</li><li><code>Access List</code>： 这个是NPM自带的一个限制访问功能，这边我们不管，后续可以自行研究。</li></ul><p>以下是一个样列：</p><p><img src="https://img.laoda.de/i/2022/12/12/rb22bk-2.webp" alt="image-20221212165113531"></p><p>因为样例的NPM和Halo搭建在同一台VPS上，所以这边的IP，图中填的是<code>172.17.0.1</code>，为Docker容器内部的IP地址，</p><p>可以通过下面的命令查询：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/12/12/sawc56-2.webp" alt="image-20221212171134006"></p><p>这边的IP是<code>172.17.0.1</code>，填入这个IP，可以不用打开防火墙的<code>8090</code>端口。</p><p>当然，如果你的NPM和Halo不在同一台服务上，你需要在IP部分填入<strong>你的Halo所在的服务器的IP</strong>，并在服务商（部分服务商如腾讯、阿里）的后台打开<code>8090</code>端口。</p><h3 id="一键申请SSL证书"><a href="#一键申请SSL证书" class="headerlink" title="一键申请SSL证书"></a>一键申请SSL证书</h3><p>接着我们来申请一张SSL证书，让我们的网站支持<code>https</code>访问。</p><p><img src="https://img.laoda.de/i/2022/12/12/rcskzu-2.webp" alt="image-20221212165406296"></p><p><img src="https://img.laoda.de/i/2022/12/12/sey05n-2.webp" alt="image-20221212171814387"></p><p>如图所示，记得打开强制SSL，其他四个的功能请自行研究，这边不多做讨论。</p><blockquote><ol><li>申请证书需要你提前将域名解析到 NPM 所在的服务器的 IP 上；</li><li>如果你使用的是国内的服务器，默认 <code>80</code> 和 <code>443</code> 端口是关闭的，你需要备案之后才能使用；</li><li>如果你使用了 CloudFlare 的 DNS 服务，记得把小黄云关闭（即不开启 CDN）。</li></ol></blockquote><p>不出意外，你将成功申请到SSL证书，证书会三个月自动续期。</p><p>再次点开配置，查看一下，将强制SSL打开。</p><p><img src="https://img.laoda.de/i/2022/12/12/rcfn9x-2.webp" alt="image-20221212165346472"></p><p>至此，你已经成功完成了Halo的反向代理，快尝试使用域名访问一下看看吧！</p><blockquote><p>同样的，举一反三，试试把你的NPM也用一个域名来反向代理一下吧。(小提示：你需要再解析一个域名（可以是二级域名）到NPM所在的服务器上，反代页面需要填的IP可以填docker容器内的IP也可以填服务器的IP，端口填<code>81</code>即可）</p></blockquote><p>推荐阅读：</p><p><a href="https://blog.laoda.de/archives/docker-install-halo">【好玩儿的Docker项目】10分钟搭建一个咕咕目前用的博客——Halo</a></p><p><a href="https://blog.laoda.de/archives/docker-install-halo">Hexo还是Hugo？Typecho还是Wordpress？读完这篇或许你就有答案了！</a></p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Halo </tag>
            
            <tag> NginxProxyManager </tag>
            
            <tag> Pull Request </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【VPS选购分享】莱卡云 —— 三网香港CN2 GIA，香港服务器又多了一个选择，可以月付尝鲜～</title>
      <link href="/archives/vps-lcayun/"/>
      <url>/archives/vps-lcayun/</url>
      
        <content type="html"><![CDATA[<p>评论区小伙伴分享：</p><p>今天2023&#x2F;4&#x2F;7，CN2-GIA5折，20一个月，可以体验一下。优惠码是yrF1TOdL2C1G。</p><hr><h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><p>熟悉咕咕的小伙伴应该都比较清楚，咕咕每次搭建项目的服务器都没有用国内的机器，原因有三点：</p><p><strong>1、国内的机器都必须备案才能使用web服务。</strong></p><p>咕咕懒，所以就用的国外的VPS了。</p><p><strong>2、国内的机器默认和你家的网络一样，都无法直接访问GitHub。</strong></p><p>这会导致咕咕介绍的很多脚本都无法下载（因为代码98%都在GitHub上），同样，国内的机器也无法直接获取到最新的docker镜像，因为也被墙了。如果想要正常下载GitHub或者docker hub上的内容，你需要换源（而很多时候，国内源并不能及时更新，常常会导致一些问题，e.g :aliyun mirror 更新不及时。比如 Spring Boot 3.0 发布了，aliyun mirror 得好几天才能同步好，这段时间内我们都无法正常下载依赖。）。</p><p><strong>3、国内机器的带宽普遍比较小，通常只有几兆。</strong></p><p>所以咕咕一开始首推的是香港的腾讯云轻量应用服务器，当时一个月只要24块钱，而且还是30M的带宽，电信CN2 GIA回程，而且因为是在香港（非大陆），访问GitHub和Docker Hub丝毫没有问题，属于是性价比非常高的机器了。</p><p>然而，随着腾讯产品线的升级，24元&#x2F;月的套餐已经一去不复返，现在官网在售的最便宜的套餐是：</p><p><img src="https://img.laoda.de/i/2022/12/19/10n00ht-2.webp" alt="71ee4f9d96b4277657260e2604557142.png"></p><p>32元&#x2F;月的，其实也还可以，但是好像已经没货很久很久了。<br>现在能买的直接到了100元&#x2F;月，这别说对于刚玩VPS的小伙伴，就算是咕咕也不舍得买  &#x3D; &#x3D;</p><p>当然我们可以选择买别的区域的机器，但是在可选的非大陆服务器里面，香港毕竟是里大陆物理距离最近的（虽然不一定延时最低）。</p><p>有很多小伙伴反馈就是像要建个1 IP的小博客，不想备案又想速度快，还不想花费太多金钱在上面，问咕咕有没有其他的香港的机器推荐。</p><p>今天我们就来介绍一个新的商家——<a href="https://gao.ee/lca">莱卡云</a>。</p><p><img src="https://img.laoda.de/i/2022/12/19/10x6eqy-2.webp" alt="image-20221219223248453"></p><h2 id="2-总体印象"><a href="#2-总体印象" class="headerlink" title="2. 总体印象"></a>2. 总体印象</h2><p>商家给咕咕开了两台机器用于测试（分别是香港BGP和三网香港CN2 GIA）。</p><p><img src="https://img.laoda.de/i/2022/12/19/10xo6g3-2.webp" alt="image-20221219223332488"></p><p>近一个月时间使用下来，咕咕感觉还行，这边做一个简单的Review。</p><h3 id="2-1-优点"><a href="#2-1-优点" class="headerlink" title="2.1 优点"></a>2.1 优点</h3><ul><li>弹性，扩容方便</li><li>后台管理界面清晰易上手</li><li>延时优秀，尤其是CN2 GIA与国内基本无差别</li><li>香港不需要备案</li><li>客服反应迅速</li><li>支持月付、季付、半年付、年付</li><li>BGP套餐送免费快照一个</li><li>BGP解锁美区奈飞</li></ul><h3 id="2-2-缺点"><a href="#2-2-缺点" class="headerlink" title="2.2 缺点"></a>2.2 缺点</h3><ul><li>带宽太低</li><li>需要实名</li><li>磁盘IO比较低（应该是商家锁了IO）</li><li>gia 不解锁奈飞</li></ul><h2 id="3-官网-面板介绍"><a href="#3-官网-面板介绍" class="headerlink" title="3. 官网&#x2F;面板介绍"></a>3. 官网&#x2F;面板介绍</h2><p>YouTube：<a href="https://youtu.be/Ji0sDeMmA58">https://youtu.be/Ji0sDeMmA58</a></p><p>哔哩哔哩：<a href="https://www.bilibili.com/BV1ye4y1G7Mr">https://www.bilibili.com/BV1ye4y1G7Mr</a></p><h3 id="3-1-2023新年特惠活动"><a href="#3-1-2023新年特惠活动" class="headerlink" title="3.1 2023新年特惠活动"></a>3.1 2023新年特惠活动</h3><p>推荐月付体验！</p><p><img src="https://img.laoda.de/i/2022/12/31/ovrp70-2.webp" alt="image-20221231150450297"></p><p>官网地址：<a href="https://gao.ee/lca">莱卡云</a></p><p>香港BGP标准版首月1折优惠码：<code>aJL4AxHP10</code></p><p>香港CN2 GIA标准版首月1折优惠码：<code>ldzsUC8I10</code>     首月仅需2.8元～</p><p>香港BGP(弹性)与香港CN2 GIA(弹性)循环五5折优惠码：<code>rbBWy2jT50</code></p><p>全站云服务器ECS全场9折优惠码：<code>w7teJYi90</code></p><p>限时折扣：优惠码有效期 2023年1月1日-2023年2月1日</p><h2 id="4-机器测试"><a href="#4-机器测试" class="headerlink" title="4. 机器测试"></a>4. 机器测试</h2><h3 id="4-1-香港CN2-GIA"><a href="#4-1-香港CN2-GIA" class="headerlink" title="4.1 香港CN2 GIA"></a>4.1 香港CN2 GIA</h3><p>这款是三网CN2 GIA线路的，算是非大陆线路里面优化最好的线路啦，速度非常理想。</p><p>官网地址：<a href="https://gao.ee/lca">莱卡云</a></p><p>香港CN2 GIA标准版首月1折优惠码：<code>ldzsUC8I10</code>  首月仅需2.8元～</p><p>限时折扣：优惠码有效期 2023年1月1日-2023年2月1日</p><h4 id="4-1-1-基本情况"><a href="#4-1-1-基本情况" class="headerlink" title="4.1.1 基本情况"></a>4.1.1 基本情况</h4><p>首先还是请出秋水的 bench.sh 脚本，这个脚本可以查看 Linux 系统信息，还可以测试网络带宽及硬盘读写速率。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -qO- bench.sh | bash</span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/12/24/iahi9q-2.webp" alt="image-20221224110553044"></p><h4 id="4-1-2-yabs"><a href="#4-1-2-yabs" class="headerlink" title="4.1.2 yabs"></a>4.1.2 yabs</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -sL yabs.sh | bash</span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/12/24/idpxgs-2.webp" alt="image-20221224111136932"></p><p><img src="https://img.laoda.de/i/2022/12/24/igsjjw-2.webp" alt="image-20221224111654040"></p><p>旧的：</p><p><img src="https://img.laoda.de/i/2022/12/19/11ceedb-2.webp" alt="a8cf89b86165d5c1bbc23a0b608a91e6.png"></p><h4 id="4-1-3-回程线路"><a href="#4-1-3-回程线路" class="headerlink" title="4.1.3 回程线路"></a>4.1.3 回程线路</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -q route.f2k.pub -O route &amp;&amp; bash route</span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/12/20/irfm6u-2.webp" alt="image-20221220113443704"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -qO- git.io/besttrace | bash</span><br></pre></td></tr></table></figure><h5 id="北京电信"><a href="#北京电信" class="headerlink" title="北京电信"></a>北京电信</h5><p><img src="https://img.laoda.de/i/2022/12/19/11cgow1-2.webp" alt="a5bdcbbfd5f41f725ac2959ab4141ead.png"></p><h5 id="上海电信"><a href="#上海电信" class="headerlink" title="上海电信"></a>上海电信</h5><p><img src="https://img.laoda.de/i/2022/12/19/11cj4bj-2.webp" alt="aa74c7dbc0abb91f6ff382731adf9754.png"></p><h5 id="深圳电信"><a href="#深圳电信" class="headerlink" title="深圳电信"></a>深圳电信</h5><p><img src="https://img.laoda.de/i/2022/12/19/11cknot-2.webp" alt="e6e84cd6bcf1de4e1f986ec18bdac106.png"></p><h5 id="北京联通"><a href="#北京联通" class="headerlink" title="北京联通"></a>北京联通</h5><p><img src="https://img.laoda.de/i/2022/12/19/11clq9w-2.webp" alt="3b571ebda1f77c00bd7eede980b5386a.png"></p><h5 id="上海联通"><a href="#上海联通" class="headerlink" title="上海联通"></a>上海联通</h5><p><img src="https://img.laoda.de/i/2022/12/19/11cmtn1-2.webp" alt="0c7852f8650912d5eb947ebdb87c4671.png"></p><h5 id="深圳联通"><a href="#深圳联通" class="headerlink" title="深圳联通"></a>深圳联通</h5><p><img src="https://img.laoda.de/i/2022/12/19/11cnqmj-2.webp" alt="47348c8c8e75f1aea490004aad795b65.png"></p><h5 id="北京移动"><a href="#北京移动" class="headerlink" title="北京移动"></a>北京移动</h5><p><img src="https://img.laoda.de/i/2022/12/19/11coxs9-2.webp" alt="d56e6c7448414ed667a3ef4cab969366.png"></p><h5 id="上海移动"><a href="#上海移动" class="headerlink" title="上海移动"></a>上海移动</h5><p><img src="https://img.laoda.de/i/2022/12/19/11cybzq-2.webp" alt="4824d0ebb43c2381389a8f52d9d2217f.png"></p><h5 id="深圳移动"><a href="#深圳移动" class="headerlink" title="深圳移动"></a>深圳移动</h5><p><img src="https://img.laoda.de/i/2022/12/19/11czcmj-2.webp" alt="0ccb35b835ecc1098ae868eeb36f5bca.png"></p><h5 id="成都教育网"><a href="#成都教育网" class="headerlink" title="成都教育网"></a>成都教育网</h5><p><img src="https://img.laoda.de/i/2022/12/19/11d0oxm-2.webp" alt="51de27423f660ba48665d5110f7e087e.png"></p><p>四网回程香港CN2 GIA，线路杠杠滴。</p><h4 id="4-1-4-IP情况"><a href="#4-1-4-IP情况" class="headerlink" title="4.1.4 IP情况"></a>4.1.4 IP情况</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -L -s https://raw.githubusercontent.com/lmc999/RegionRestrictionCheck/main/check.sh)</span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/12/19/11d1pbl-2.webp" alt="7114f6ea3faa53281d7d69687bedfb37.png"></p><h4 id="4-1-5-ping"><a href="#4-1-5-ping" class="headerlink" title="4.1.5 ping"></a>4.1.5 ping</h4><p><a href="https://www.itdog.cn/">https://www.itdog.cn/</a></p><p><img src="https://img.laoda.de/i/2022/12/19/11d2wkc-2.webp" alt="5015c1a5fcf6d8b590c1fc8698e275bc.png"></p><p><img src="https://img.laoda.de/i/2022/12/19/11d3wkv-2.webp" alt="24fe7137e72a24b890cde3bface52077.png"></p><p>非常绿，延迟也和大陆境内服务器差不多，非常舒服。</p><h3 id="4-2-香港BGP（弹性）"><a href="#4-2-香港BGP（弹性）" class="headerlink" title="4.2 香港BGP（弹性）"></a>4.2 香港BGP（弹性）</h3><p>官网地址：<a href="https://gao.ee/lca">莱卡云</a></p><p>香港BGP(弹性)与香港CN2 GIA(弹性)循环五5折优惠码：<code>rbBWy2jT50</code></p><p>限时折扣：优惠码有效期 2023年1月1日-2023年2月1日</p><h4 id="4-2-1-基本情况"><a href="#4-2-1-基本情况" class="headerlink" title="4.2.1 基本情况"></a>4.2.1 基本情况</h4><p>香港BGP的套餐，商家默认赠送一个免费的快照。</p><p><img src="https://img.laoda.de/i/2022/12/19/10yp5ae-2.webp" alt="image-20221219223505283"></p><p>首先还是请出秋水的 bench.sh 脚本，这个脚本可以查看 Linux 系统信息，还可以测试网络带宽及硬盘读写速率。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -qO- bench.sh | bash</span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/12/24/iho18z-2.webp" alt="image-20221224111759347"></p><h4 id="4-2-2-yabs"><a href="#4-2-2-yabs" class="headerlink" title="4.2.2 yabs"></a>4.2.2 yabs</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -sL yabs.sh | bash</span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/12/24/irz5pn-2.webp" alt="image-20221224113533802"></p><p><img src="https://img.laoda.de/i/2022/12/24/is2fjb-2.webp" alt="image-20221224113549600"></p><h4 id="4-2-3-回程情况"><a href="#4-2-3-回程情况" class="headerlink" title="4.2.3 回程情况"></a>4.2.3 回程情况</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -q route.f2k.pub -O route &amp;&amp; bash route</span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/12/24/n6th39-2.webp" alt="image-20221224140213045"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -qO- git.io/besttrace | bash</span><br></pre></td></tr></table></figure><h5 id="北京电信-1"><a href="#北京电信-1" class="headerlink" title="北京电信"></a>北京电信</h5><p><img src="https://img.laoda.de/i/2022/12/19/11bbcy1-2.webp" alt="e64f45dd3da02489386d97b2bd32365c.png"></p><h5 id="上海电信-1"><a href="#上海电信-1" class="headerlink" title="上海电信"></a>上海电信</h5><p><img src="https://img.laoda.de/i/2022/12/19/11bcoj7-2.webp" alt="37ec3e203cd8aebd6fa0a8bbffbfbd80.png"></p><h5 id="深圳电信-1"><a href="#深圳电信-1" class="headerlink" title="深圳电信"></a>深圳电信</h5><p><img src="https://img.laoda.de/i/2022/12/19/11bg0gm-2.webp" alt="0582ae2a5bd1a6221a78ee55fa821776.png"></p><h5 id="北京联通-1"><a href="#北京联通-1" class="headerlink" title="北京联通"></a>北京联通</h5><p><img src="https://img.laoda.de/i/2022/12/19/11bhq1u-2.webp" alt="e9379b2f27d20ad9b483c2b064c10b4f.png"></p><h5 id="上海联通-1"><a href="#上海联通-1" class="headerlink" title="上海联通"></a>上海联通</h5><p><img src="https://img.laoda.de/i/2022/12/19/11brv5a-2.webp" alt="1a5c83591f5f4864a5b3ed78909b3903.png"></p><h5 id="深圳联通-1"><a href="#深圳联通-1" class="headerlink" title="深圳联通"></a>深圳联通</h5><p><img src="https://img.laoda.de/i/2022/12/19/11btb93-2.webp" alt="aeedf8831347bf6da2055b4cabf968a9.png"></p><h5 id="北京移动-1"><a href="#北京移动-1" class="headerlink" title="北京移动"></a>北京移动</h5><p><img src="https://img.laoda.de/i/2022/12/19/11bupkd-2.webp" alt="72e503d1781d49b0e08862c079634700.png"></p><h5 id="上海移动-1"><a href="#上海移动-1" class="headerlink" title="上海移动"></a>上海移动</h5><p><img src="https://img.laoda.de/i/2022/12/19/11bvoda-2.webp" alt="070dc24edf886f2dead1b06017155785.png"></p><h5 id="深圳移动-1"><a href="#深圳移动-1" class="headerlink" title="深圳移动"></a>深圳移动</h5><p><img src="https://img.laoda.de/i/2022/12/19/11bww1r-2.webp" alt="b45a62b85bff01632aafbfbaf17e593f.png"></p><h5 id="成都教育网-1"><a href="#成都教育网-1" class="headerlink" title="成都教育网"></a>成都教育网</h5><p><img src="https://img.laoda.de/i/2022/12/19/11byomn-2.webp" alt="f24eafcaa35b359550b013e5a0638ee3.png"></p><h4 id="4-2-4-IP情况"><a href="#4-2-4-IP情况" class="headerlink" title="4.2.4 IP情况"></a>4.2.4 IP情况</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -L -s https://raw.githubusercontent.com/lmc999/RegionRestrictionCheck/main/check.sh)</span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/12/19/11bzrhh-2.webp" alt="c52f1a596c5096ceabf965c64fc9395f.png"></p><h4 id="4-2-5-ping"><a href="#4-2-5-ping" class="headerlink" title="4.2.5 ping"></a>4.2.5 ping</h4><p><img src="https://img.laoda.de/i/2022/12/19/11c10y4-2.webp" alt="5b2545bfb55e3736ee0550f0291944c5.png"></p><p><img src="https://img.laoda.de/i/2022/12/19/11c28q4-2.webp" alt="487b6d42e03062d736745df1152a7575.png"></p><h3 id="4-3-腾讯云"><a href="#4-3-腾讯云" class="headerlink" title="4.3 腾讯云"></a>4.3 腾讯云</h3><p>这台<a href="https://loll.cc/tx">腾讯云轻量应用服务器</a>的配置如下：</p><p><img src="https://img.laoda.de/i/2022/12/19/119nc1c-2.webp" alt="image-20221219223954669"></p><p>赠送2个快照。现价34元&#x2F;月（目前缺货状态）</p><h4 id="4-3-1-基本情况"><a href="#4-3-1-基本情况" class="headerlink" title="4.3.1 基本情况"></a>4.3.1 基本情况</h4><p>首先还是请出秋水的 bench.sh 脚本，这个脚本可以查看 Linux 系统信息，还可以测试网络带宽及硬盘读写速率。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -qO- bench.sh | bash</span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/12/19/119oo3f-2.webp" alt="87b61151fe409735d25d99508005ad39.png"></p><p><img src="https://img.laoda.de/i/2022/12/19/119q5el-2.webp" alt="3d1ce5f1b17399e2e07553ef259c8939.png"></p><p>读写270MB&#x2F;s，还算可以。</p><p>带宽上行30M，下行100M。</p><h4 id="4-3-2-yabs"><a href="#4-3-2-yabs" class="headerlink" title="4.3.2 yabs"></a>4.3.2 yabs</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -sL yabs.sh | bash</span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/12/19/11a065x-2.webp" alt="0dbc9949deaf15d90db6afbf692aa20e.png"></p><p><img src="https://img.laoda.de/i/2022/12/19/11a1s4s-2.webp" alt="22cc95f38f25ee252386ddb678b65cf9.png"></p><p>单核983分，还不错。</p><h4 id="4-3-3-回程线路"><a href="#4-3-3-回程线路" class="headerlink" title="4.3.3 回程线路"></a>4.3.3 回程线路</h4><p>省流版本：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -q route.f2k.pub -O route &amp;&amp; bash route</span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/12/19/11a369e-2.webp" alt="image-20221219225003538"></p><h5 id="北京电信-2"><a href="#北京电信-2" class="headerlink" title="北京电信"></a>北京电信</h5><p><img src="https://img.laoda.de/i/2022/12/19/11a4ndk-2.webp" alt="16ece72b4f29665f6bcf0fd444fca6ab.png"></p><h5 id="上海电信-2"><a href="#上海电信-2" class="headerlink" title="上海电信"></a>上海电信</h5><p><img src="https://img.laoda.de/i/2022/12/19/11a5rvs-2.webp" alt="0f02cbc458a813317c30bc152dc5784d.png"></p><h5 id="深圳电信-2"><a href="#深圳电信-2" class="headerlink" title="深圳电信"></a>深圳电信</h5><p><img src="https://img.laoda.de/i/2022/12/19/11a73vw-2.webp" alt="bb7ee3ab3af3590dcbdc65c212c81c63.png"></p><h5 id="北京联通-2"><a href="#北京联通-2" class="headerlink" title="北京联通"></a>北京联通</h5><p><img src="https://img.laoda.de/i/2022/12/19/11a9174-2.webp" alt="6b23674f63d5f9575e6dd929b708e5f7.png"></p><h5 id="上海联通-2"><a href="#上海联通-2" class="headerlink" title="上海联通"></a>上海联通</h5><p><img src="https://img.laoda.de/i/2022/12/19/11aa2yi-2.webp" alt="b183182ac413c47d56d0299e7c80e3f3.png"></p><h5 id="深圳联通-2"><a href="#深圳联通-2" class="headerlink" title="深圳联通"></a>深圳联通</h5><p><img src="https://img.laoda.de/i/2022/12/19/11abd5q-2.webp" alt="b0fbefd6d629d8917be25987fc189c17.png"></p><h5 id="北京移动-2"><a href="#北京移动-2" class="headerlink" title="北京移动"></a>北京移动</h5><p><img src="https://img.laoda.de/i/2022/12/19/11am4xz-2.webp" alt="42a3a73b25c1943b4f00c70e3efd343b.png"></p><h5 id="上海移动-2"><a href="#上海移动-2" class="headerlink" title="上海移动"></a>上海移动</h5><p><img src="https://img.laoda.de/i/2022/12/19/11anblt-2.webp" alt="547e04c7ceb5925ec9e9e2a03da4ab98.png"></p><h5 id="深圳移动-2"><a href="#深圳移动-2" class="headerlink" title="深圳移动"></a>深圳移动</h5><p><img src="https://img.laoda.de/i/2022/12/19/11aor6q-2.webp" alt="f670dc531cf9f3a6d1a7cf2702c6533c.png"></p><h5 id="成都教育网-2"><a href="#成都教育网-2" class="headerlink" title="成都教育网"></a>成都教育网</h5><p><img src="https://img.laoda.de/i/2022/12/19/11apuyl-2.webp" alt="a12b422fd796d1a00edf381d78699965.png"></p><h4 id="4-3-4-IP情况"><a href="#4-3-4-IP情况" class="headerlink" title="4.3.4 IP情况"></a>4.3.4 IP情况</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -L -s https://raw.githubusercontent.com/lmc999/RegionRestrictionCheck/main/check.sh)</span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/12/19/11ari8f-2.webp" alt="image-20221219225121517"></p><h4 id="4-3-5-ping"><a href="#4-3-5-ping" class="headerlink" title="4.3.5 ping"></a>4.3.5 ping</h4><p><img src="https://img.laoda.de/i/2022/12/19/11atnz6-2.webp" alt="190093b016c47cd76b3b92f1fc24cd65.png"></p><p><img src="https://img.laoda.de/i/2022/12/19/11auulz-2.webp" alt="5f9ede92205c95568058985643ccefeb.png"></p><h2 id="5-总结"><a href="#5-总结" class="headerlink" title="5. 总结"></a>5. 总结</h2><p>总体来说，对于流量不大的站点，还是比较适合使用他家的机器的。</p><p>首选CN2 GIA的，访问速度和国内的机房基本没差别了。</p><p>等自己博客的流量做起来了，可以选择后台升级带宽。</p><p>有兴趣的可以月付上车体验一下～</p>]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 香港VPS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩儿的Docker项目】Hexo在线管理+Butterfly主题+自部署Twikoo评论系统</title>
      <link href="/archives/docker-compose-install-hexo-admin-and-twikoo/"/>
      <url>/archives/docker-compose-install-hexo-admin-and-twikoo/</url>
      
        <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><p>早在 2 年前，咕咕搭建的第一个博客就是用的 Hexo 的框架（当时用的 butterfly 主题只有几十个 star），因为可以部署在 GitHub 上，加上如果可以接受 GitHub 的 <code>xxxxx.github.io</code> 域名，甚至可以不用一分钱就拥有自己的博客。</p><p><img src="https://img.laoda.de/i/2022/12/21/r100gn-2.webp" alt="34dab3a11c5d5f7548179ac83e0e0cb9.png"></p><p>不过 Hexo 博客也有不少缺点。</p><p>导致咕咕后来放弃 Hexo 的原因主要有两点：</p><p><strong>1、无法在线编辑</strong></p><p>因为都是从本地 push 到 GitHub 仓库实现部署的，所以还要配本地环境啊啥的，换一台电脑，又得重新再来一次，很麻烦。</p><p><strong>2、评论需要借助第三方服务</strong></p><p>一开始咕咕记得自己使用的是 valine，免费部署在 leancloud 上的，后来似乎是政策原因，无法使用 https 了，可能当时也比较菜，迁移的时候出了点问题，导致评论丢失了，也是比较遗憾。</p><p>所以后来还是转战了 Halo，方便！</p><p>具体博客框架的选择上，咕咕之前有过一次经验分享，有兴趣的小伙伴可以看这篇文章：<a href="https://blog.laoda.de/archives/blog-choosing">Hexo 还是 Hugo？Typecho 还是 Wordpress？读完这篇或许你就有答案了！</a></p><p>然后，上周逛 GitHub 的时候，又点进了 butterfly 主题的仓库，现在它已经是一个 4.8k star 的 hexo 王牌主题了。</p><p>看着熟悉的 demo，又怀念起了当初刚建博客的时光。</p><p>我突发奇想，2 年过去了，hexo 的这几个缺点是不是可能已经解决了？在网上搜索了一番之后，发现我的猜想是正确的，果然现在可以基本实现在线写 Hexo 博客了！而且评论也可以自己部署！前提是要用到一台 VPS。VPS 多的是，所以这周就来分享一下咕咕折腾的经验。</p><p>最终实现的效果：</p><p><strong>Hexo 框架 + butterfly 主题 + 在线编辑（任何有网的地方）+ 评论功能自部署</strong></p><p>最重要的是，你也不需要去配置很多纷繁复杂的环境，我们用 Docker 来搞定！</p><h3 id="1-1-相关地址"><a href="#1-1-相关地址" class="headerlink" title="1.1 相关地址"></a>1.1 相关地址</h3><p>Hexo 在线部署镜像：<a href="https://hub.docker.com/r/spurin/hexo">https://hub.docker.com/r/spurin/hexo</a><br>Hexo 在线部署镜像 GitHub 地址：<a href="https://github.com/spurin/docker-hexo">https://github.com/spurin/docker-hexo</a><br>Butterfly 官方 GitHub：<a href="https://github.com/jerryc127/hexo-theme-butterfly">https://github.com/jerryc127/hexo-theme-butterfly</a><br>评论 Twikoo 文档：<a href="https://twikoo.js.org/quick-start.html#%E7%A7%81%E6%9C%89%E9%83%A8%E7%BD%B2-docker">https://twikoo.js.org/quick-start.html#%E7%A7%81%E6%9C%89%E9%83%A8%E7%BD%B2-docker</a><br>Butterfly 安裝文檔 (四) 主題配置 - 2：<a href="https://butterfly.js.org/posts/ceeb73f/#%E8%A9%95%E8%AB%96">https://butterfly.js.org/posts/ceeb73f/#%E8%A9%95%E8%AB%96</a></p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><h3 id="2-1-Hexo-后台"><a href="#2-1-Hexo-后台" class="headerlink" title="2.1 Hexo 后台"></a>2.1 Hexo 后台</h3><p><img src="https://img.laoda.de/i/2022/12/21/r0yb26-2.webp" alt="ff92aa15aae6b0a5a9c94d663a98be32.png"></p><h3 id="2-2-博客主页"><a href="#2-2-博客主页" class="headerlink" title="2.2 博客主页"></a>2.2 博客主页</h3><p><img src="https://img.laoda.de/i/2022/12/21/r100gn-2.webp" alt="34dab3a11c5d5f7548179ac83e0e0cb9.png"></p><h3 id="2-3-内容页"><a href="#2-3-内容页" class="headerlink" title="2.3 内容页"></a>2.3 内容页</h3><p><img src="https://img.laoda.de/i/2022/12/21/r11r70-2.webp" alt="918aa49d5d3e2c2f2e3a76d35ee1a7c8.png"></p><p><img src="https://img.laoda.de/i/2022/12/21/r13sla-2.webp" alt="78f850709c972fa05ec05efda3f12de7.png"></p><h3 id="2-4-评论区"><a href="#2-4-评论区" class="headerlink" title="2.4 评论区"></a>2.4 评论区</h3><p><img src="https://img.laoda.de/i/2022/12/21/r15l8w-2.webp" alt="118d8b312a47261ed092948e97e5c99f.png"></p><p>这边直接丢出两个核心的 <code>docker-compose.yaml</code> 文件，熟悉 docker 环境的小伙伴可以直接拷贝搭建。</p><p>Hexo 部署：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">hexo:</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">hexo</span></span><br><span class="line">        <span class="attr">environment:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">HEXO_SERVER_PORT=4000</span>   <span class="comment"># 不建议改，如果这边的 4000 改了，下面 ports 部分，冒号右边的 4000 也需要修改</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">GIT_USER=github_name</span>       <span class="comment"># 改成自己的用户名，可以随便写一个 </span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">GIT_EMAIL=xxxx@gmail.com</span>  <span class="comment"># 改成自己的邮箱，可以随便写一个</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span>  <span class="comment"># 时区</span></span><br><span class="line">        <span class="attr">volumes:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;./blog:/app&#x27;</span>    <span class="comment"># 冒号左边可以改路径，现在是表示把数据存放在在当前文件夹下的 blog 文件夹中</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;8080:4000&#x27;</span>     <span class="comment"># 冒号左边可以改成自己服务器未被占用的端口</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">spurin/hexo</span></span><br></pre></td></tr></table></figure><p>评论部署：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3.5&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">twikoo:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">twikoo</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">imaegoo/twikoo</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TWIKOO_THROTTLE=1000</span> <span class="comment"># IP 请求限流，当同一 IP 短时间内请求次数超过阈值将对该 IP 返回错误，默认 250，可以自己修改</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">4000</span><span class="string">:8080</span>   <span class="comment"># 冒号左边可以改成自己服务器未被占用的端口</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data:/app/data</span>  <span class="comment"># 冒号左边可以改路径，现在是表示把数据存放在在当前文件夹下的 data 文件夹中</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br></pre></td></tr></table></figure><p>以下是详细搭建教程。</p><h2 id="3-搭建环境"><a href="#3-搭建环境" class="headerlink" title="3. 搭建环境"></a>3. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器 24 元 &#x2F; 月 VPS 一台</del> 咕咕自己搭建用的是<a href="https://loll.cc/tx">腾讯轻量应用服务器</a> ，（最好是选 <strong>非大陆（香港）的服务器</strong>）如果是小白刚开始玩的话，还可以购买 <a href="https://blog.laoda.de/archives/cheap-vps-racknerd">Racknerd</a> 的服务器，最低一年不到 100 块（不过这个建议选择 1G 内存以上的机器）（Racknerd 服务器介绍：<a href="https://blog.laoda.de/archives/cheap-vps-racknerd">点击查看</a>）</li><li>系统：Debian 10 <a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD 脚本</a> 非必需 DD 用原来的系统也 OK，之后教程都是用 Debian 或者 Ubuntu 搭建～）</li><li>安装好 Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需但建议】域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>【非必需】提前安装好宝塔面板海外版本 aapanel，并安装好 Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程选用】安装好 Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><blockquote><p>服务器要求：内存建议1G 以上，硬盘20G够用了。</p></blockquote><h2 id="4-搭建视频"><a href="#4-搭建视频" class="headerlink" title="4. 搭建视频"></a>4. 搭建视频</h2><p>YouTube：<a href="https://youtu.be/TR6jd6RRdk8">https://youtu.be/TR6jd6RRdk8</a></p><p>哔哩哔哩【高清版本可以点击去吐槽到 B 站观看】：<joe-bilibili bvid="BV1Md4y1a7PC"></joe-bilibili></p><h2 id="5-搭建方式"><a href="#5-搭建方式" class="headerlink" title="5. 搭建方式"></a>5. 搭建方式</h2><h3 id="安装系统（腾讯云轻量应用服务器）"><a href="#安装系统（腾讯云轻量应用服务器）" class="headerlink" title="安装系统（腾讯云轻量应用服务器）"></a>安装系统（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlyhcz-2.webp" alt="e59713fba8726d3cb55ae11bca83fe3c.png"></p><p>腾讯云轻量服务器最大的特点就是 “轻量”，相比 CVM，更适合小白上手，这边我们之间选择 Docker 基础镜像，就可以省去后面安装 Docker 的步骤（如果你非要用国内的服务器，这边装的 Docker 镜像还会帮你配置好国内镜像源，让你加速访问 docker 镜像资源）。</p><h3 id="登陆（腾讯云轻量应用服务器）"><a href="#登陆（腾讯云轻量应用服务器）" class="headerlink" title="登陆（腾讯云轻量应用服务器）"></a>登陆（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlzlj7-2.webp" alt="2722040ee311eb4a9ebf2a4945bf38f4.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm0gv8-2.webp" alt="c0b5d360053746c4095d592967ee401f.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm1vqw-2.webp" alt="e0ba858f021b846ad0abc27acf5008c2.png"></p><h3 id="5-1-服务器前期配置"><a href="#5-1-服务器前期配置" class="headerlink" title="5.1 服务器前期配置"></a>5.1 服务器前期配置</h3><p>服务器初始设置以及Docker和Docker-compose安装，参考这篇文章：<a href="https://blog.laoda.de/archives/vps-basic-configuration">VPS 基础环境配置</a></p><h3 id="5-2-安装-Nginx-Proxy-Manager"><a href="#5-2-安装-Nginx-Proxy-Manager" class="headerlink" title="5.2 安装 Nginx Proxy Manager"></a>5.2 安装 Nginx Proxy Manager</h3><p>参考这边的内容：<a href="https://blog.laoda.de/archives/nginxproxymanager">https://blog.laoda.de/archives/nginxproxymanager</a></p><h3 id="5-3-创建安装目录"><a href="#5-3-创建安装目录" class="headerlink" title="5.3 创建安装目录"></a>5.3 创建安装目录</h3><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/hexo</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/hexo</span><br></pre></td></tr></table></figure><p>这边我们直接用 docker 的方式安装。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure><p>英文输入法下，按 <code>i</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">hexo:</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">hexo</span></span><br><span class="line">        <span class="attr">environment:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">HEXO_SERVER_PORT=4000</span>   <span class="comment"># 不建议改，如果这边的 4000 改了，下面 ports 部分，冒号右边的 4000 也需要修改</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">GIT_USER=github_name</span>       <span class="comment"># 改成自己的用户名，可以随便写一个 </span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">GIT_EMAIL=xxxx@gmail.com</span>  <span class="comment"># 改成自己的邮箱，可以随便写一个</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span>  <span class="comment"># 时区</span></span><br><span class="line">        <span class="attr">volumes:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;./blog:/app&#x27;</span>    <span class="comment"># 冒号左边可以改路径，现在是表示把数据存放在在当前文件夹下的 blog 文件夹中</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;8080:4000&#x27;</span>     <span class="comment"># 冒号左边可以改成自己服务器未被占用的端口</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">spurin/hexo</span></span><br></pre></td></tr></table></figure><p>按一下 <code>esc</code>，然后 <code>:wq</code> 保存退出。</p><h3 id="5-4-打开服务器防火墙（非必需）并访问网页"><a href="#5-4-打开服务器防火墙（非必需）并访问网页" class="headerlink" title="5.4 打开服务器防火墙（非必需）并访问网页"></a>5.4 打开服务器防火墙（非必需）并访问网页</h3><p>打开防火墙的端口 <code>8080</code></p><p>举例，腾讯云打开方法如下：</p><img src="https://img.laoda.de/i/2022/06/30/zlio5h-2.webp" alt="image-20220630215240864" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/06/30/10h3dqt-2.webp" alt="image-20220630220546335" style="zoom:33%;" /><p>图中示例填的是 <code>5230</code>，备注填的是 <code>memos</code>，这边我们填 <code>8080</code>，示例填 <code>hexo</code> ，确定即可（如果你在 docker-compose 文件里换了 <code>8081</code>，这边就需要填 <code>8081</code>，以此类推）</p><img src="https://img.laoda.de/i/2022/08/19/o4byqz-2.webp" alt="image-20220819145844555" style="zoom:33%;" /><p>查看端口是否被占用（以 <code>8080</code> 为例），输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:8080  <span class="comment">#查看 8080 端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果啥也没出现，表示端口未被占用，我们可以继续下面的操作了～</p><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装 lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用（被占用了就修改一下端口，比如改成 <code>8081</code>，注意 docker 命令行里和防火墙都要改）</p><p>最后：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/hexo    <span class="comment"># 来到 dockercompose 文件所在的文件夹下</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>理论上我们就可以输入 <code>http://ip:8080</code> 访问了。</p><p>hexo 的后台地址就是 <code>http://ip:8080/admin</code></p><blockquote><p>** 注意：**</p><p>1、不知道服务器 IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的 IP。</p><p>2、遇到访问不了的情况，请再次检查在宝塔面板的防火墙和服务商的后台防火墙是否打开对应了端口。</p></blockquote><p>有的小伙伴可能想搭建起来分享给其他人使用，如果后续想要分享给别人，IP + 端口太不优雅了，咕咕建议大家还是搞一个域名，容易记，看起来也更正规一点。这样可以做 https，会让网页更安全。</p><p>而且 <a href="https://loll.cc/ns">namesilo</a> 上面 xyz 后缀的域名一年就 7 块钱，可以年抛。</p><p>如果想要长期使用，还是建议买 com 后缀的域名，更加正规一些，可以输入 <code>laodade</code> 来获得 1 美元的优惠（不知道现在还有没有）</p><p><a href="https://loll.cc/ns">namesilo</a> 自带隐私保护，咕咕一直在用这家，价格也是这些注册商里面比较低的，关键是他家不像其他家域名注册商，没有七七八八的套路！（就是后台界面有些<del>丑</del> 古老 &#x3D; &#x3D;）</p><p><a href="https://blog.laoda.de/archives/namesilo">【域名购买】Namesilo 优惠码和域名解析教程（附带服务器购买推荐和注意事项）</a></p><p>我们接着往下看！</p><h3 id="5-6-更新"><a href="#5-6-更新" class="headerlink" title="5.6 更新"></a>5.6 更新</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/hexo</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/hexo/root/data/docker_data/hexo.archive  <span class="comment"># 万事先备份，以防万一</span></span><br><span class="line"></span><br><span class="line">docker-compose pull</span><br><span class="line"></span><br><span class="line">docker-compose up -d    <span class="comment"># 请不要使用 docker-compose stop 来停止容器，因为这么做需要额外的时间等待容器停止；docker-compose up -d 直接升级容器时会自动停止并立刻重建新的容器，完全没有必要浪费那些时间。</span></span><br><span class="line"></span><br><span class="line">docker image prune  <span class="comment"># prune 命令用来删除不再使用的 docker 对象。删除所有未被 tag 标记和未被容器使用的镜像</span></span><br></pre></td></tr></table></figure><p>提示：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WARNING! This will remove all dangling images.</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] </span><br></pre></td></tr></table></figure><p>输入 <code>y</code></p><p>利用 Docker 搭建的应用，更新非常容易～</p><h3 id="5-7-卸载"><a href="#5-7-卸载" class="headerlink" title="5.7 卸载"></a>5.7 卸载</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/hexo</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/hexo  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>可以卸载得很干净。</p><h2 id="6-反向代理"><a href="#6-反向代理" class="headerlink" title="6. 反向代理"></a>6. 反向代理</h2><h3 id="6-1-利用-Nginx-Proxy-Manager"><a href="#6-1-利用-Nginx-Proxy-Manager" class="headerlink" title="6.1 利用 Nginx Proxy Manager"></a>6.1 利用 Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p><img src="https://img.laoda.de/i/2022/10/16/n6t02e-2.webp" alt="image-20221016140213282"></p><p>之后，登陆 Nginx Proxy Manager（不会的看这个：<strong>安装 Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称 NPM）会用到 <code>80</code>、<code>443</code> 端口，所以本机不能占用（比如原来就有 Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom: 33%;" /><p><img src="https://img.laoda.de/i/2022/10/16/n7b9hm-2.webp" alt="image-20221016140258381"></p><blockquote><p> 注意填写对应的 <code>域名</code>、<code>IP</code> 和 <code>端口</code>，按文章来的话，应该是 <code>8080</code></p></blockquote><p><strong>IP 填写：</strong></p><p>如果 Nginx Proxy Manager 和 hexo 在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的 Docker 容器内部 IP。</p><p><img src="https://img.laoda.de/i/2022/09/29/pcdnz5-2.webp"></p><p>否则直接填 <code>hexo</code> 所在的服务器 IP 就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom: 33%;" /><p>再次打开，勾选这些：</p><p><img src="https://img.laoda.de/i/2022/10/16/n7nn6e-2.webp" alt="image-20221016140356324"></p><p>然后就可以用域名来安装访问了。</p><h3 id="6-2-利用宝塔面板"><a href="#6-2-利用宝塔面板" class="headerlink" title="6.2 利用宝塔面板"></a>6.2 利用宝塔面板</h3><p>发现还是有不少小伙伴习惯用宝塔面板，这边也贴一个宝塔面板的反代配置：</p><p>直接新建一个站点，不要数据库，不要 php，纯静态即可。</p><p>然后打开下面的配置，修改 Nginx 的配置。</p><p><img src="https://img.laoda.de/i/2022/08/19/ov4xrt-2.webp" alt="image-20220819150345725"></p><p><img src="https://img.laoda.de/i/2022/08/19/owbbkb-2.webp" alt="image-20220819150542867"></p><p>代码如下：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:8080/;       <span class="comment"># 注意改成你实际使用的端口</span></span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此方法对 90% 的反向代理都能生效。</p><p>有同学可能会问，为什么不直接用宝塔自带的反向代理功能。</p><p><img src="https://img.laoda.de/i/2022/08/19/oxf800-2.webp" alt="image-20220819150730128"></p><p>也可以，不过咕咕自己之前遇到过当有多个网站需要反代的时候，在这边设置会报错的情况 &#x3D; &#x3D; </p><p>所以后来就不用了，直接用上面的方法来操作了。</p><h2 id="7-使用教程"><a href="#7-使用教程" class="headerlink" title="7. 使用教程"></a>7. 使用教程</h2><p>安装和配置见咕咕的视频。</p><h3 id="7-1-更换butterfly主题"><a href="#7-1-更换butterfly主题" class="headerlink" title="7.1 更换butterfly主题"></a>7.1 更换butterfly主题</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/hexo/blog</span><br><span class="line"></span><br><span class="line">git <span class="built_in">clone</span> -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>进入Docker容器内部：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it hexo bash</span><br></pre></td></tr></table></figure><p>安装插件（pug 以及 stylus 的渲染器）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><h3 id="7-2-评论搭建"><a href="#7-2-评论搭建" class="headerlink" title="7.2 评论搭建"></a>7.2 评论搭建</h3><p>这部分大家如果不清楚，后续可以专门出个教程。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p data/docker_data/twikoo</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> data/docker_data/twikoo</span><br><span class="line"></span><br><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure><p>填入下面的配置：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3.5&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">twikoo:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">twikoo</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">imaegoo/twikoo</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TWIKOO_THROTTLE=1000</span> <span class="comment"># IP 请求限流，当同一 IP 短时间内请求次数超过阈值将对该 IP 返回错误，默认 250，可以自己修改</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">4000</span><span class="string">:8080</span>   <span class="comment"># 冒号左边可以改成自己服务器未被占用的端口</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data:/app/data</span>  <span class="comment"># 冒号左边可以改路径，现在是表示把数据存放在在当前文件夹下的 data 文件夹中</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br></pre></td></tr></table></figure><p>然后：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>举一反三，反向代理参考 hexo 部分即可。</p><p>访问网址，出现这个说明部署成功：</p><p><img src="https://img.laoda.de/i/2022/12/21/10nox84-2.webp" alt="f531bd7322368f4cb12e52eaee9c2b95.png"></p><p>评论的设置可以直接在博客这边设置：</p><p><img src="https://img.laoda.de/i/2022/12/21/r1i1jy-2.webp" alt="e7ffea50bdd337b17066bad211357bb3.png"></p><h2 id="8-目前遇到的问题"><a href="#8-目前遇到的问题" class="headerlink" title="8. 目前遇到的问题"></a>8. 目前遇到的问题</h2><h3 id="1-Hexo-Admin-还是有点简陋"><a href="#1-Hexo-Admin-还是有点简陋" class="headerlink" title="1. Hexo-Admin 还是有点简陋"></a>1. Hexo-Admin 还是有点简陋</h3><p>Hexo-Admin 后台还是挺粗糙的，很多文章 format 的部分无法设置。</p><h3 id="2、记得及时备份内容"><a href="#2、记得及时备份内容" class="headerlink" title="2、记得及时备份内容"></a>2、记得及时备份内容</h3><p>修改配置的时候，最好先备份一下，否则出错了，会导致无法登陆！</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/hexo</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/hexo/root/data/docker_data/hexo.archive  <span class="comment"># 万事先备份，以防万一</span></span><br></pre></td></tr></table></figure><h2 id="9-结尾"><a href="#9-结尾" class="headerlink" title="9. 结尾"></a>9. 结尾</h2><p>祝大家用得开心，有问题可以去 GitHub 提 <a href="https://github.com/spurin/docker-hexo/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，项目处于刚开始阶段，有能力给项目做贡献的同学，也欢迎积极加入到 <a href="https://github.com/spurin/docker-hexo">项目</a> 中来，贡献自己的一份力量！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>Hexo 在线部署镜像：<a href="https://hub.docker.com/r/spurin/hexo">https://hub.docker.com/r/spurin/hexo</a><br>Hexo 在线部署镜像 GitHub 地址：<a href="https://github.com/spurin/docker-hexo">https://github.com/spurin/docker-hexo</a><br>Butterfly 官方 GitHub：<a href="https://github.com/jerryc127/hexo-theme-butterfly">https://github.com/jerryc127/hexo-theme-butterfly</a><br>评论 Twikoo 文档：<a href="https://twikoo.js.org/quick-start.html#%E7%A7%81%E6%9C%89%E9%83%A8%E7%BD%B2-docker">https://twikoo.js.org/quick-start.html#%E7%A7%81%E6%9C%89%E9%83%A8%E7%BD%B2-docker</a><br>Butterfly 安裝文檔 (四) 主題配置 - 2：<a href="https://butterfly.js.org/posts/ceeb73f/#%E8%A9%95%E8%AB%96">https://butterfly.js.org/posts/ceeb73f/#%E8%A9%95%E8%AB%96</a></p><h2 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h2><p><a href="https://blog.laoda.de/archives/hexo-building">将Hexo部署到阿里云轻量服务器（保姆级教程）</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 博客搭建 </tag>
            
            <tag> Twikoo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>魔法文档</title>
      <link href="/archives/break-the-wall/"/>
      <url>/archives/break-the-wall/</url>
      
        <content type="html"><![CDATA[<h2 id="Clash-for-Windows"><a href="#Clash-for-Windows" class="headerlink" title="Clash for Windows"></a>Clash for Windows</h2><h3 id="1-获取应用"><a href="#1-获取应用" class="headerlink" title="1. 获取应用"></a>1. 获取应用</h3><p>软件版权及后续权益属于软件作者，软件相关介绍及说明可参考作者主页：<a href="https://github.com/Fndroid/clash_for_windows_pkg">https://github.com/Fndroid/clash_for_windows_pkg</a></p><p><a href="https://ghproxy.com/https://github.com/Fndroid/clash_for_windows_pkg/releases/download/0.20.9/Clash.for.Windows.Setup.0.20.9.exe"><em>下载软件(原版英文)</em></a> <a href="https://ghproxy.com/https://github.com/ender-zhao/Clash-for-Windows_Chinese/releases/download/CFW-V0.20.9_CN/Clash.for.Windows.Setup.0.20.9.exe"><em>下载软件(汉化中文)</em></a></p><h3 id="2-快速导入"><a href="#2-快速导入" class="headerlink" title="2. 快速导入"></a>2. 快速导入</h3><p>将链接粘贴到上方的“Download from a URL”里面，然后点击“Download”</p><p>下方会出现一个订阅的列表：</p><p><img src="https://s2.loli.net/2022/05/01/arxWeQfCw6lyYMz.jpg" alt="2.png"></p><h3 id="3-软件简介"><a href="#3-软件简介" class="headerlink" title="3. 软件简介"></a>3. 软件简介</h3><p>这里介绍常规使用到的</p><p>1、General - 系统配置及开关页面</p><p>2、Proxies - 节点线路</p><p>3、Profiles - 订阅管理</p><h3 id="4-开始连接"><a href="#4-开始连接" class="headerlink" title="4. 开始连接"></a>4. 开始连接</h3><p>1、返回到初始界面 General，并且打开系统连接！<br>2、Sytem Proxy 即为代理开关<br>3、如果Sytem Proxy开关已经打开，此时已经可以使用服务了</p><p><img src="https://s2.loli.net/2022/05/01/nEubBC5I8yPsHie.jpg" alt="icddd.png"></p><h3 id="5-开启分流-更新订阅"><a href="#5-开启分流-更新订阅" class="headerlink" title="5. 开启分流&#x2F;更新订阅"></a>5. 开启分流&#x2F;更新订阅</h3><p>1、开启分流： 电脑右下角 找到clash图标(一个小猫咪)，鼠标右键依次选择 &gt; Proxy Mode &gt; Rule</p><p>2、更新订阅：如下图</p><p><img src="https://s2.loli.net/2022/05/01/eV6EiktlR1IyrMq.jpg" alt="8.png"></p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>2022 付费软硬件</title>
      <link href="/archives/2022-paid-productivity-tools-recommendations/"/>
      <url>/archives/2022-paid-productivity-tools-recommendations/</url>
      
        <content type="html"><![CDATA[<p>硬件：</p><p>MacBook Air M1 16G版本</p><p>AirPods Pro</p><p>iPhone 13 Mini</p><p>dijimac</p><p>软件：</p><p>Office365家庭版 50元&#x2F;年</p><p>spotify。 10元&#x2F;月。（可选 Apple Music10元&#x2F;月）</p><p>iCloud 土区 2T 家庭车 144元&#x2F;年</p><p>typora 订阅 89RMB&#x2F;3帐户（downie）</p><p>utools。198元&#x2F;3年</p><p>联通大王卡 29元&#x2F;月  70G通用 40G定向</p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生产力工具 </tag>
            
            <tag> 付费订阅 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩儿的Docker项目】Pingvin Share——一个专注于文件分享的高颜值轻量小工具！</title>
      <link href="/archives/docker-compose-install-pingvinshare/"/>
      <url>/archives/docker-compose-install-pingvinshare/</url>
      
        <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><p>之前和大家介绍过的<a href="https://blog.laoda.de/archives/docker-compose-install-microbin">MicroBin</a>主打的是文本代码分享功能，这周和大家推荐一个专注于文件分享的高颜值轻量小工具——Pingvin Share</p><p>一起来试试看吧。</p><p><img src="https://img.laoda.de/i/2022/12/13/mb6g3v-2.webp" alt="4c09cd955d7589f74b0c7e10f0bb986c.png"></p><p><img src="https://img.laoda.de/i/2022/12/13/mbajqf-2.webp" alt="87d9de6eda5198075d3592802c98ad12.png"></p><p>咕咕的Demo：<a href="https://share.gugu.ee/">https://share.gugu.ee</a></p><h3 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h3><ul><li>创建文件共享，你可以通过链接访问这些文件</li><li>支持自定义链接的后缀</li><li>部署非常简单（Docker部署2分钟搞定）</li><li>没有文件大小的限制（只要你的硬盘够大）</li><li>支持设置共享的到期时间</li><li>支持访问者限制，可以用密码来保护你的共享</li><li>支持切换是否需要登陆才能上传</li><li>支持注册&#x2F;关闭注册</li><li>支持邮件提醒接收者</li><li>支持暗黑模式浅色和深色模式</li><li>支持amd64&#x2F;arm64</li></ul><h3 id="1-1-相关地址"><a href="#1-1-相关地址" class="headerlink" title="1.1 相关地址"></a>1.1 相关地址</h3><p>咕咕的Demo：<a href="https://share.gugu.ee/">https://share.gugu.ee/</a><br>GitHub源码：<a href="https://github.com/stonith404/pingvin-share">https://github.com/stonith404/pingvin-share</a><br>Docker镜像：<a href="https://hub.docker.com/r/stonith404/pingvin-share">https://hub.docker.com/r/stonith404/pingvin-share</a><br><del>捐助：<a href="https://hub.docker.com/CONTRIBUTING.md">https://hub.docker.com/CONTRIBUTING.md</a></del> 失效了<br>问题反馈：<a href="https://github.com/stonith404/pingvin-share/issues">https://github.com/stonith404/pingvin-share/issues</a></p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p>第一次登陆：</p><p><img src="https://img.laoda.de/i/2022/12/13/mbc31p-2.webp" alt="b5f773f42ea738a102afb449c84b2c74.png"></p><p>帐户功能：<br><img src="https://img.laoda.de/i/2022/12/13/mbdf9q-2.webp" alt="992a0e46aa22c749594243a3f26320cf.png"></p><p>帐户设置：<br><img src="https://img.laoda.de/i/2022/12/13/mbegc9-2.webp" alt="edf3c69932e680adf870ec8b0cfdb3ac.png"></p><p>管理面板：</p><p><img src="https://img.laoda.de/i/2022/12/13/mbg4es-2.webp" alt="cea1b2ef814c76b63c2aa05f68d4f49c.png"></p><p><img src="https://img.laoda.de/i/2022/12/13/mbhm1x-2.webp" alt="3f3ab71032f068c031226984f72dc36f.png"></p><p>上传文件页面：</p><p><img src="https://img.laoda.de/i/2022/12/13/mbsfwc-2.webp" alt="e95a14b38323ec4948a237f01e02a1f7.png"></p><p>分享设置：</p><p><img src="https://img.laoda.de/i/2022/12/13/mbtoxm-2.webp" alt="013331ec9207da877152f26dc79df8fa.png"></p><p><img src="https://img.laoda.de/i/2022/12/13/mbvg81-2.webp" alt="c664c3a55a3621d4e0eb3e9806153ef9.png"></p><p>用户下载：</p><p><img src="https://img.laoda.de/i/2022/12/13/mbwoe4-2.webp" alt="fb43d7fe6869e4b14c83288dd583afd6.png"></p><p>查看分享的链接：<br><img src="https://img.laoda.de/i/2022/12/13/mbxzou-2.webp" alt="ef7913ce6427823344a7e9ca675f14b1.png"></p><p>这边直接丢出搭建的docker-compose.yaml文件，熟悉docker环境的小伙伴可以直接拷贝搭建。</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.8&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">pingvin-share:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">stonith404/pingvin-share</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8080</span><span class="string">:3000</span>     <span class="comment"># 8080可以改成服务器上未被使用的端口</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;$&#123;PWD&#125;/data:/opt/app/backend/data&quot;</span>  <span class="comment"># $&#123;PWD&#125;/data表示在当前目录下创建data文件夹用于存放文件</span></span><br></pre></td></tr></table></figure><p>以下是详细搭建教程。</p><h2 id="3-搭建环境"><a href="#3-搭建环境" class="headerlink" title="3. 搭建环境"></a>3. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器24元&#x2F;月VPS一台</del>咕咕自己搭建用的是<a href="https://blog.laoda.de/archives/ovh-sys-2-sat-32-waw">OVH的独立服务器</a>，演示用的是<a href="https://blog.laoda.de/archives/vps-buyvm">卢森堡的BuyVM</a>，如果你只是小范围使用，可以考虑用<a href="https://loll.cc/tx">腾讯轻量购买链接</a>的服务器，（最好是选<strong>非大陆（香港）的服务器</strong>）如果是小白刚开始玩的话，还可以购买<a href="https://blog.laoda.de/vps/">Racknerd</a>的服务器，最低一年不到100块（不过这个建议选择1G内存以上的机器）（Racknerd服务器介绍：<a href="https://blog.laoda.de/archives/cheap-vps-racknerd">点击查看</a>）</li><li>系统：Debian 10（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本</a> 非必需DD用原来的系统也OK，之后教程都是用Debian或者Ubuntu搭建～）</li><li>安装好Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需但建议】域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>【非必需】提前安装好宝塔面板海外版本aapanel，并安装好Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程选用】安装好Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><blockquote><p>服务器要求：此项目比较轻量，内存建议1G以上，硬盘越大越好。</p></blockquote><h2 id="4-搭建视频"><a href="#4-搭建视频" class="headerlink" title="4. 搭建视频"></a>4. 搭建视频</h2><p>YouTube：<a href="https://youtu.be/i_aEYq3_Z00">https://youtu.be/i_aEYq3_Z00</a></p><p>哔哩哔哩：<a href="https://www.bilibili.com/video/BV1PP411W73Q/">https://www.bilibili.com/video/BV1PP411W73Q/</a></p><h2 id="5-搭建方式"><a href="#5-搭建方式" class="headerlink" title="5. 搭建方式"></a>5. 搭建方式</h2><h3 id="安装系统（腾讯云轻量应用服务器）"><a href="#安装系统（腾讯云轻量应用服务器）" class="headerlink" title="安装系统（腾讯云轻量应用服务器）"></a>安装系统（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlyhcz-2.webp" alt="e59713fba8726d3cb55ae11bca83fe3c.png"></p><p>腾讯云轻量服务器最大的特点就是“轻量”，相比CVM，更适合小白上手，这边我们之间选择Docker基础镜像，就可以省去后面安装Docker的步骤（如果你非要用国内的服务器，这边装的Docker镜像还会帮你配置好国内镜像源，让你加速访问docker镜像资源）。</p><h3 id="登陆（腾讯云轻量应用服务器）"><a href="#登陆（腾讯云轻量应用服务器）" class="headerlink" title="登陆（腾讯云轻量应用服务器）"></a>登陆（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlzlj7-2.webp" alt="2722040ee311eb4a9ebf2a4945bf38f4.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm0gv8-2.webp" alt="c0b5d360053746c4095d592967ee401f.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm1vqw-2.webp" alt="e0ba858f021b846ad0abc27acf5008c2.png"></p><h3 id="5-1-服务器前期配置"><a href="#5-1-服务器前期配置" class="headerlink" title="5.1 服务器前期配置"></a>5.1 服务器前期配置</h3><p>服务器初始设置，参考：</p><p><a href="https://blog.laoda.de/archives/vps-script"><strong>新买了一台服务器“必须”要做的6件小事</strong></a></p><p><a href="https://blog.laoda.de/archives/how-to-secure-a-linux-server"><strong>保护好你的小鸡！保姆级服务器安全教程！</strong></a></p><p>这边由于我们用的是腾讯云轻量应用服务器，系统默认就帮我们创建了名字是<code>lighthouse</code>的用户，系统后台也有防火墙（默认就开了几个常用的端口）</p><p>对小白用户来说，可以不用再去管繁琐的服务器安全的配置，大大降低了服务器防护的门槛。</p><p><a href="https://blog.laoda.de/archives/hello-docker">【Docker系列】不用宝塔面板，小白一样可以玩转VPS服务器！</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i <span class="comment"># 切换到root用户</span></span><br><span class="line"></span><br><span class="line">apt update -y  <span class="comment"># 升级packages</span></span><br><span class="line"></span><br><span class="line">apt install wget curl sudo vim git -y  <span class="comment"># Debian系统比较干净，安装常用的软件</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：VPS的内存如果过小，建议设置一下SWAP，一般为内存的1-1.5倍即可，可以让系统运行更流畅！</p></blockquote><p>设置SWAP可以用脚本:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O box.sh https://raw.githubusercontent.com/BlueSkyXN/SKY-BOX/main/box.sh &amp;&amp; <span class="built_in">chmod</span> +x box.sh &amp;&amp; clear &amp;&amp; ./box.sh</span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2022/05/28/uoikkd-0.webp" alt="image-20220528185512488" style="zoom:50%;" /><p>选择<code>18</code>，然后输入你想要扩容的数值即可。</p><img src="https://img.laoda.de/i/2022/05/28/up2dkf-0.webp" alt="image-20220528185604586" style="zoom:50%;" /><p>使用腾讯云轻量应用服务器的小伙伴可以直接跳到<code>5.2.4</code></p><h3 id="5-2-安装Docker（使用腾讯云轻量应用服务器可跳过这一部分）"><a href="#5-2-安装Docker（使用腾讯云轻量应用服务器可跳过这一部分）" class="headerlink" title="5.2 安装Docker（使用腾讯云轻量应用服务器可跳过这一部分）"></a>5.2 安装Docker（使用腾讯云轻量应用服务器可跳过这一部分）</h3><h4 id="5-2-1-非大陆服务器Docker安装"><a href="#5-2-1-非大陆服务器Docker安装" class="headerlink" title="5.2.1 非大陆服务器Docker安装"></a>5.2.1 <strong>非大陆服务器Docker安装</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -qO- get.docker.com | bash</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker -v  <span class="comment">#查看docker版本</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker  <span class="comment"># 设置开机自动启动</span></span><br></pre></td></tr></table></figure><p><strong>修改Docker配置（可选）（来自<a href="https://u.sb/debian-install-docker/">烧饼博客</a>）</strong></p><p>以下配置会增加一段自定义内网 IPv6 地址，开启容器的 IPv6 功能，以及限制日志文件大小，防止 Docker 日志塞满硬盘（泪的教训）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/docker/daemon.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    &quot;log-driver&quot;: &quot;json-file&quot;,</span></span><br><span class="line"><span class="string">    &quot;log-opts&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;max-size&quot;: &quot;20m&quot;,</span></span><br><span class="line"><span class="string">        &quot;max-file&quot;: &quot;3&quot;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    &quot;ipv6&quot;: true,</span></span><br><span class="line"><span class="string">    &quot;fixed-cidr-v6&quot;: &quot;fd00:dead:beef:c0::/80&quot;,</span></span><br><span class="line"><span class="string">    &quot;experimental&quot;:true,</span></span><br><span class="line"><span class="string">    &quot;ip6tables&quot;:true</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>然后重启 Docker 服务：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h4 id="5-2-2-非大陆服务器Docker-compose安装"><a href="#5-2-2-非大陆服务器Docker-compose安装" class="headerlink" title="5.2.2 非大陆服务器Docker-compose安装"></a>5.2.2 <strong>非大陆服务器Docker-compose安装</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/1.29.2/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose --version  <span class="comment">#查看docker-compose版本</span></span><br></pre></td></tr></table></figure><h4 id="5-2-3-国内服务器安装docker"><a href="#5-2-3-国内服务器安装docker" class="headerlink" title="5.2.3 国内服务器安装docker"></a>5.2.3 <strong>国内服务器安装docker</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -sSL https://get.daocloud.io/docker | sh</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker -v  <span class="comment">#查看docker版本</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker  <span class="comment"># 设置开机自动启动</span></span><br></pre></td></tr></table></figure><p><strong>修改Docker配置（可选）（来自<a href="https://u.sb/debian-install-docker/">烧饼博客</a>）</strong></p><p>以下配置会增加一段自定义内网 IPv6 地址，开启容器的 IPv6 功能，以及限制日志文件大小，防止 Docker 日志塞满硬盘（泪的教训）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/docker/daemon.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    &quot;log-driver&quot;: &quot;json-file&quot;,</span></span><br><span class="line"><span class="string">    &quot;log-opts&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;max-size&quot;: &quot;20m&quot;,</span></span><br><span class="line"><span class="string">        &quot;max-file&quot;: &quot;3&quot;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    &quot;ipv6&quot;: true,</span></span><br><span class="line"><span class="string">    &quot;fixed-cidr-v6&quot;: &quot;fd00:dead:beef:c0::/80&quot;,</span></span><br><span class="line"><span class="string">    &quot;experimental&quot;:true,</span></span><br><span class="line"><span class="string">    &quot;ip6tables&quot;:true</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>然后重启 Docker 服务：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h4 id="5-2-4-国内服务器安装docker-compose"><a href="#5-2-4-国内服务器安装docker-compose" class="headerlink" title="5.2.4 国内服务器安装docker-compose"></a>5.2.4 <strong>国内服务器安装docker-compose</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -L https://get.daocloud.io/docker/compose/releases/download/v2.1.1/docker-compose-`<span class="built_in">uname</span> -s`-`<span class="built_in">uname</span> -m` &gt; /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line">docker-compose --version  <span class="comment">#查看docker-compose版本</span></span><br></pre></td></tr></table></figure><h3 id="5-3-安装NginxProxyManager"><a href="#5-3-安装NginxProxyManager" class="headerlink" title="5.3 安装NginxProxyManager"></a>5.3 安装NginxProxyManager</h3><p>参考这边的内容：<a href="https://blog.laoda.de/archives/nginxproxymanager">https://blog.laoda.de/archives/nginxproxymanager</a></p><h3 id="5-4-创建安装目录"><a href="#5-4-创建安装目录" class="headerlink" title="5.4 创建安装目录"></a>5.4 创建安装目录</h3><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/pingvin-share</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/pingvin-share</span><br></pre></td></tr></table></figure><p>这边我们直接用docker的方式安装。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure><p>英文输入法下，按<code>i</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.8&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">pingvin-share:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">stonith404/pingvin-share</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8080</span><span class="string">:3000</span>     <span class="comment"># 8080可以改成服务器上未被使用的端口</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;$&#123;PWD&#125;/data:/opt/app/backend/data&quot;</span>  <span class="comment"># $&#123;PWD&#125;/data表示在当前目录下创建data文件夹用于存放文件</span></span><br></pre></td></tr></table></figure><p>按一下<code>esc</code>，然后<code>:wq</code> 保存退出，之后，</p><p>最后：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/pingvin-share    <span class="comment"># 来到dockercompose文件所在的文件夹下</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><h3 id="5-5-打开服务器防火墙并访问网页"><a href="#5-5-打开服务器防火墙并访问网页" class="headerlink" title="5.5 打开服务器防火墙并访问网页"></a>5.5 打开服务器防火墙并访问网页</h3><p>打开防火墙的端口<code>8080</code></p><p>腾讯云打开方法如下：</p><img src="https://img.laoda.de/i/2022/06/30/zlio5h-2.webp" alt="image-20220630215240864" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/06/30/10h3dqt-2.webp" alt="image-20220630220546335" style="zoom:33%;" /><p>图中示例填的是<code>5230</code>，备注填的是<code>memos</code>，这边我们填<code>8080</code>，示例填<code>pingvin-share</code> ，确定即可（如果你在docker-compose文件里换了<code>8081</code>，这边就需要填<code>8081</code>，以此类推）</p><img src="https://img.laoda.de/i/2022/08/19/o4byqz-2.webp" alt="image-20220819145844555" style="zoom:33%;" /><p>查看端口是否被占用（以<code>8080</code>为例），输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:8080  <span class="comment">#查看8080端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果啥也没出现，表示端口未被占用，我们可以继续下面的操作了～</p><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用（被占用了就修改一下端口，比如改成8081，注意docker命令行里和防火墙都要改）</p><p>理论上我们就可以输入<code>http://ip:8080</code>访问了。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的IP。</p><p>2、遇到访问不了的情况，请再次检查在宝塔面板的防火墙和服务商的后台防火墙是否打开对应了端口。</p></blockquote><p>有的小伙伴可能想搭建起来分享给其他人使用，如果后续想要分享给别人，IP+端口太不优雅了，咕咕建议大家还是搞一个域名，容易记，看起来也更正规一点。这样可以做https，会让网页更安全。（非要IP+端口访问的，可以直接跳到<code>5.6</code>，并且跳过<code>6. 反向代理</code>部分）</p><p>而且<a href="https://loll.cc/ns">namesilo</a>上面xyz后缀的域名一年就7块钱，可以年抛。</p><p>如果想要长期使用，还是建议买com后缀的域名，更加正规一些，可以输入<code>laodade</code>来获得1美元的优惠（不知道现在还有没有）</p><p><a href="https://loll.cc/ns">namesilo</a>自带隐私保护，咕咕一直在用这家，价格也是这些注册商里面比较低的，关键是他家不像其他家域名注册商，没有七七八八的套路！（就是后台界面有些<del>丑</del>古老 &#x3D; &#x3D;）</p><p><a href="https://blog.laoda.de/archives/namesilo">【域名购买】Namesilo优惠码和域名解析教程（附带服务器购买推荐和注意事项）</a></p><p>我们接着往下看！</p><h3 id="5-6-更新"><a href="#5-6-更新" class="headerlink" title="5.6 更新"></a>5.6 更新</h3><h4 id="5-6-1-docker-compose部署"><a href="#5-6-1-docker-compose部署" class="headerlink" title="5.6.1 docker-compose部署"></a>5.6.1 docker-compose部署</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/pingvin-share</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/pingvin-share /root/data/docker_data/pingvin-share.archive  <span class="comment"># 万事先备份，以防万一，其实这边没必要，因为我们没有映射到本地文件夹</span></span><br><span class="line"></span><br><span class="line">docker-compose pull</span><br><span class="line"></span><br><span class="line">docker-compose up -d    <span class="comment"># 请不要使用docker-compose stop来停止容器，因为这么做需要额外的时间等待容器停止；docker-compose up -d直接升级容器时会自动停止并立刻重建新的容器，完全没有必要浪费那些时间。</span></span><br><span class="line"></span><br><span class="line">docker image prune  <span class="comment"># prune 命令用来删除不再使用的 docker 对象。删除所有未被 tag 标记和未被容器使用的镜像</span></span><br></pre></td></tr></table></figure><p>提示：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WARNING! This will remove all dangling images.</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] </span><br></pre></td></tr></table></figure><p>输入<code>y</code></p><p>利用Docker搭建的应用，更新非常容易～</p><h3 id="5-7-卸载"><a href="#5-7-卸载" class="headerlink" title="5.7 卸载"></a>5.7 卸载</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/pingvin-share</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/pingvin-share  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>可以卸载得很干净。</p><h2 id="6-反向代理"><a href="#6-反向代理" class="headerlink" title="6. 反向代理"></a>6. 反向代理</h2><h3 id="6-1-利用Nginx-Proxy-Manager"><a href="#6-1-利用Nginx-Proxy-Manager" class="headerlink" title="6.1 利用Nginx Proxy Manager"></a>6.1 利用Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p><img src="https://img.laoda.de/i/2022/10/16/n6t02e-2.webp" alt="image-20221016140213282"></p><p>之后，登陆Nginx Proxy Manager（不会的看这个：<strong>安装Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称NPM）会用到<code>80</code>、<code>443</code>端口，所以本机不能占用（比如原来就有Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom: 33%;" /><p><img src="https://img.laoda.de/i/2022/10/16/n7b9hm-2.webp" alt="image-20221016140258381"></p><blockquote><p> 注意填写对应的<code>域名</code>、<code>IP</code>和<code>端口</code>，按文章来的话，应该是<code>8080</code></p></blockquote><p><strong>IP填写：</strong></p><p>如果Nginx Proxy Manager和Pingvin Share在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的Docker容器内部IP。</p><p><img src="https://img.laoda.de/i/2022/09/29/pcdnz5-2.webp"></p><p>否则直接填<code>pingvin-share</code>所在的服务器IP就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom: 33%;" /><p>再次打开，勾选这些：</p><p><img src="https://img.laoda.de/i/2022/10/16/n7nn6e-2.webp" alt="image-20221016140356324"></p><p>然后就可以用域名来安装访问了。</p><h3 id="6-2-利用宝塔面板"><a href="#6-2-利用宝塔面板" class="headerlink" title="6.2 利用宝塔面板"></a>6.2 利用宝塔面板</h3><p>发现还是有不少小伙伴习惯用宝塔面板，这边也贴一个宝塔面板的反代配置：</p><p>直接新建一个站点，不要数据库，不要php，纯静态即可。</p><p>然后打开下面的配置，修改Nginx的配置。</p><p><img src="https://img.laoda.de/i/2022/08/19/ov4xrt-2.webp" alt="image-20220819150345725"></p><p><img src="https://img.laoda.de/i/2022/08/19/owbbkb-2.webp" alt="image-20220819150542867"></p><p>代码如下：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:8080/;       <span class="comment"># 注意改成你实际使用的端口</span></span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此方法对90%的反向代理都能生效。</p><p>有同学可能会问，为什么不直接用宝塔自带的反向代理功能。</p><p><img src="https://img.laoda.de/i/2022/08/19/oxf800-2.webp" alt="image-20220819150730128"></p><p>也可以，不过咕咕自己之前遇到过当有多个网站需要反代的时候，在这边设置会报错的情况 &#x3D; &#x3D; </p><p>所以后来就不用了，直接用上面的方法来操作了。</p><h2 id="7-使用教程"><a href="#7-使用教程" class="headerlink" title="7. 使用教程"></a>7. 使用教程</h2><h3 id="7-1-安装和配置"><a href="#7-1-安装和配置" class="headerlink" title="7.1 安装和配置"></a>7.1 安装和配置</h3><p>见咕咕的视频。</p><h2 id="8-目前遇到的问题"><a href="#8-目前遇到的问题" class="headerlink" title="8. 目前遇到的问题"></a>8. 目前遇到的问题</h2><h3 id="1-文件是否在服务器加密"><a href="#1-文件是否在服务器加密" class="headerlink" title="1. 文件是否在服务器加密"></a>1. 文件是否在服务器加密</h3><p>查看文件，可以看到是乱码的形式，暂不清楚是否会加密文件：</p><p><img src="https://img.laoda.de/i/2022/12/13/md4rv8-2.webp" alt="bce5722cff524c74e9802cfd6ddab6d7.png"></p><h2 id="9-结尾"><a href="#9-结尾" class="headerlink" title="9. 结尾"></a>9. 结尾</h2><p>祝大家用得开心，有问题可以去GitHub提<a href="https://github.com/stonith404/pingvin-share/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，项目处于刚开始阶段，有能力给项目做贡献的同学，也欢迎积极加入到<a href="https://github.com/stonith404/pingvin-share">项目</a>中来，贡献自己的一份力量！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>咕咕的Demo：<a href="https://share.gugu.ovh/">https://share.gugu.ovh/</a><br>GitHub源码：<a href="https://github.com/stonith404/pingvin-share">https://github.com/stonith404/pingvin-share</a><br>Docker镜像：<a href="https://hub.docker.com/r/stonith404/pingvin-share">https://hub.docker.com/r/stonith404/pingvin-share</a><br>捐助：<a href="https://hub.docker.com/CONTRIBUTING.md">https://hub.docker.com/CONTRIBUTING.md</a><br>问题反馈：<a href="https://github.com/stonith404/pingvin-share/issues">https://github.com/stonith404/pingvin-share/issues</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件分享 </tag>
            
            <tag> 实用小工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从注册到畅玩ChatGPT——目前世界上最先进的民用AI聊天机器人</title>
      <link href="/archives/play-with-chatgpt/"/>
      <url>/archives/play-with-chatgpt/</url>
      
        <content type="html"><![CDATA[<h2 id="免登录免扶墙使用ChatGPT的方法"><a href="#免登录免扶墙使用ChatGPT的方法" class="headerlink" title="免登录免扶墙使用ChatGPT的方法"></a>免登录免扶墙使用ChatGPT的方法</h2><p>2023年4月11号更新：</p><p>可以参考这篇文章：<a href="https://blog.laoda.de/archives/docker-compose-install-chatgpt-next-web">【好玩儿的Docker项目】任何地方无障碍快速访问！ChatGPT Next Web——一键免费部署你的私人 ChatGPT 网页应用</a></p><hr><p>首先保证你已经注册好了ChatGPT的账号，具体方法可以看下面的文章。</p><p>然后，点击<a href="https://platform.openai.com/account/api-keys">申请APIKEY</a>来获得一个OpenAI的API keys，接着把这个keys填入咕咕斥巨资38块买的源码，<del>搭建的这个网站里：<a href="https://chatgpt.laoda.de/">https://chatgpt.laoda.de/</a></del><br>（这类网站在国内会被墙掉，所以咕咕暂时把网站关闭了，有自己搭建需求的可以参考：<a href="https://github.com/mic1on/chatGPT-web">https://github.com/mic1on/chatGPT-web</a>  搭建好自己本地或者个人使用即可） 之后就可以免翻墙免登录使用ChatGPT了，不过这个是OpenAI的API，比起官网的ChatGPT会不那么“聪明”一点，不过够用，分享给大家～</p><p>还可以生成图片噢～</p><p><img src="http://img.laoda.de/i/2023/02/14/12cbq08-2.webp" alt="WX20230214-230032@2x"></p><h2 id="1-什么是ChatGPT"><a href="#1-什么是ChatGPT" class="headerlink" title="1. 什么是ChatGPT"></a>1. 什么是ChatGPT</h2><p>ChatGPT是一种自然语言生成模型，由OpenAI开发。它是在GPT-3（一种通用语言模型）的基础上进行改进，旨在更好地处理对话和交流场景中的语言。</p><p>有点难理解对吧，说白了 ChatGPT 就是一个AI机器人，它可以根据你提出的问题进行解答，不限于数学、编程、作文等问题，最重要的是它不是以前人们印象中的“人工智障”。</p><p>总而言之，它是目前世界上最先进的民用AI聊天机器人。接下来，我们一起来从注册到畅玩ChatGPT！</p><h2 id="2-✈️注册"><a href="#2-✈️注册" class="headerlink" title="2. ✈️注册"></a>2. ✈️注册</h2><h3 id="2-1-准备工作"><a href="#2-1-准备工作" class="headerlink" title="2.1 准备工作"></a>2.1 准备工作</h3><ul><li><a href="https://gao.ee/mj">梯子</a>，开全局（据网友反馈，香港地区不行，韩国日本没问题，我个人是新加坡也没问题）</li><li>可以接码的手机号（需要国外手机号，gv不行，下面会介绍接码平台）</li><li>无痕模式Chrome</li></ul><h3 id="2-2-步骤"><a href="#2-2-步骤" class="headerlink" title="2.2 步骤"></a>2.2 步骤</h3><p>1.访问ChatGPT登录页：<code>https://chat.openai.com/auth/login</code></p><p>2.点击 <code>Sign up</code> 进入注册页面，输入邮箱或者直接谷歌授权登录,最好是<code>Gmail</code>或者<code>Outlook</code></p><p><img src="https://img.laoda.de/i/2022/12/07/ifbc0b-2.webp" alt="66a70750e352a0984280ebc9725db391.png"></p><p><img src="https://img.laoda.de/i/2022/12/07/ifdujc-2.webp" alt="ee027d95c8bad22b14ccccea88be1c4c.png"></p><p>如果开了全局代理的情况下使用邮箱注册，邮箱内点击确认链接跳转到显示 <code>Not available OpenAI&#39;s services are not available in your country.</code> 的页面。<br>可以按下<code>F12</code>，点击<code>控制台</code>，输入以下代码按下回车即可解决。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">localStorage</span>.<span class="title function_">removeItem</span>(<span class="title class_">Object</span>.<span class="title function_">keys</span>(<span class="variable language_">window</span>.<span class="property">localStorage</span>).<span class="title function_">find</span>(<span class="function"><span class="params">i</span>=&gt;</span>i.<span class="title function_">startsWith</span>(<span class="string">&#x27;@@auth0spajs&#x27;</span>)))</span><br></pre></td></tr></table></figure><p>3.然后输入你的姓名，点击<code>Continue</code> 去验证手机号</p><p><img src="https://img.laoda.de/i/2022/12/07/iff84j-2.webp" alt="a0e5dfdfb4926debf2a948448eaf53e6.png"></p><p>4.最关键的一步来了，如果你有实体境外卡可以输入之后继续看下一步，没有的话仔细看</p><h3 id="2-3-接码"><a href="#2-3-接码" class="headerlink" title="2.3 接码"></a>2.3 接码</h3><p>使用境外接码网站sms-activate</p><p>1、打开老毛子的接码网站：<a href="https://sms-activate.org/?ref=2761851">https://sms-activate.org/</a></p><p>2、点击右上角注册，也可以直接电报登录</p><p><img src="https://img.laoda.de/i/2022/12/07/ifh6hd-2.webp" alt="ea8e6d4e61de5b22098432f0b4469a74.png"></p><p><img src="https://img.laoda.de/i/2022/12/07/ifj64l-2.webp" alt="33215fe5da4457515792aae089745efd.png"></p><p>3、然后在左侧搜索框内搜索 <code>openai</code> ，看中哪个先记住价格</p><p><img src="https://img.laoda.de/i/2022/12/07/ifl5dy-2.webp" alt="eccf6effa1dddfe3e49b90e30e3e29d9.png"></p><p><img src="https://img.laoda.de/i/2022/12/07/ifv8pa-2.webp" alt="d439c336088c686de6a3293002b567b0.png"></p><p>4.然后点击右上角 <code>余额</code>—&gt;<code>充值</code> ，往下拉，选择<code>支付宝</code>，然后充值对应金额</p><p>我这边是买的印度的，大概1块5左右。</p><p><img src="https://img.laoda.de/i/2022/12/07/ify54a-2.webp" alt="IMG_5980.PNG"></p><p><img src="https://img.laoda.de/i/2022/12/07/ihv600-2.webp" alt="IMG_5981.PNG"></p><p>5.付完就可以回去点击小黄车，跳转接码页面,然后复制号码就行了</p><p><img src="https://img.laoda.de/i/2022/12/07/ifzm5c-2.webp" alt="3a871f8682fc02f3b6f6985ec0964cbd.png"></p><p><img src="https://img.laoda.de/i/2022/12/07/ihx7em-2.webp" alt="1d3c90a481d236d90504d2d11e15b1da.png"></p><p><img src="https://img.laoda.de/i/2022/12/07/ig0sgm-2.webp" alt="1fa47ad7de23f6983e74e5488408a861.png"></p><p>最后还剩2.84卢布。</p><p><img src="https://img.laoda.de/i/2022/12/07/ig2hht-2.webp" alt="fdffb24df37b2eb1a5b401b3bae95200.png"></p><p>6、最后验证成功，点击Try it直接使用</p><p><img src="https://img.laoda.de/i/2022/12/07/ig49sf-2.webp" alt="2b009c7a76413ec7cb87866f33c858f6.png"></p><p><img src="https://img.laoda.de/i/2022/12/07/ig5xtb-2.webp" alt="ab63659a54a950e1dc2b9d37652eb2e8.png"></p><p><img src="https://img.laoda.de/i/2022/12/07/igftse-2.webp" alt="24d6cc148c595921a46e0b5d8acfb579.png"></p><p><img src="https://img.laoda.de/i/2022/12/07/igh8mz-2.webp" alt="653ce337548a5b95687307f310f5eb96.png"></p><p><img src="https://img.laoda.de/i/2022/12/07/igimjw-2.webp" alt="1a4a6418cf8d93c5e3d36e6b746ac171.png"></p><p><img src="https://img.laoda.de/i/2022/12/07/igk2zh-2.webp" alt="ab69d32935bcdf8f7253b581576c73fe.png"></p><h2 id="3-开始玩耍"><a href="#3-开始玩耍" class="headerlink" title="3. 开始玩耍"></a>3. 开始玩耍</h2><p>用默认的问题问一个：</p><p><img src="https://img.laoda.de/i/2022/12/07/iglppt-2.webp" alt="7e2160e82d1e2e531d6d31435ed773ae.png"></p><p>随便聊聊：</p><p><img src="https://img.laoda.de/i/2022/12/07/igneym-2.webp" alt="5a182e851bbfec73d26364231085f4f7.png"></p><p>写一份工作汇报：</p><p><img src="https://img.laoda.de/i/2022/12/07/igox9o-2.webp" alt="e70b2282cdffa22464d07638f7288ce8.png"></p><p><img src="https://img.laoda.de/i/2022/12/07/igqcwr-2.webp" alt="17023a565b44df958857369e848ccd4e.png"></p><p>更多好玩儿的等待大家去发掘！</p><h2 id="4、注意事项"><a href="#4、注意事项" class="headerlink" title="4、注意事项"></a>4、注意事项</h2><p>使用貌似也必须全局模式下进行，否则报错：</p><p><img src="https://img.laoda.de/i/2022/12/07/intwp2-2.webp" alt="image-20221207112839276"></p><p>参考教程：<a href="https://igeek.vercel.app/article/b44be960-91e3-4cb7-a702-d599a1d6a1f6">@极客分享</a></p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ChatGPT </tag>
            
            <tag> OpenAI </tag>
            
            <tag> 马斯克 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于本博客关闭谷歌广告的说明</title>
      <link href="/archives/bye-google-adsense/"/>
      <url>/archives/bye-google-adsense/</url>
      
        <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>因为是为爱发电，众所周知，为爱发电是很难长久的，所以咕咕想着挂个谷歌广告来支撑一下服务器的费用的，一个月大概能有100多块钱左右。</p><p><img src="https://img.laoda.de/i/2022/12/05/12vqgzn-2.webp" alt="image-20221205235057871"></p><p>然而，最近有小伙伴反馈广告老有莫名其妙的内容，咕咕自己发现老推送梯子的广告，小伙伴则是经常在咕咕博客看到黄漫的广告，搞的很尴尬（有时候家人就在旁边都不敢看咕咕博客了），考虑了一下，咕咕决定暂时在博客关闭谷歌广告。（可能需要一个小时才能生效）</p><p><img src="https://img.laoda.de/i/2022/12/06/2ktux-2.webp" alt="image-20221206000430667"></p><p>想要支持咕咕的同学可以选择<a href="https://blog.laoda.de/s/buy-me-a-coffee">请咕咕喝咖啡</a>，通过咕咕的<a href="https://blog.laoda.de/vps.html">推荐链接</a>购买VPS也能一定程度上支持到咕咕。</p><p>最后，祝大家在这边能够折腾地开心！</p><h2 id="赞助说明"><a href="#赞助说明" class="headerlink" title="赞助说明"></a>赞助说明</h2><p>如果你觉得博客内容对你有帮助，你可以选择通过以下的方式来帮助本博客一直运行下去。</p><h3 id="个人"><a href="#个人" class="headerlink" title="个人"></a>个人</h3><p>个人用户可以请咕咕喝咖啡☕️：<a href="https://blog.laoda.de/s/buy-me-a-coffee">点击查看</a></p><p>以下更新每个月的咖啡名单（博客关闭谷歌广告后）：</p><h3 id="2023年02月咖啡名单（20230216更新）"><a href="#2023年02月咖啡名单（20230216更新）" class="headerlink" title="2023年02月咖啡名单（20230216更新）"></a>2023年02月咖啡名单（20230216更新）</h3><table><thead><tr><th>时间</th><th>小伙伴ID</th><th>平台</th><th>金额&#x2F;RMB</th><th>小伙伴留言</th></tr></thead><tbody><tr><td>2023-02-08</td><td>* 颖</td><td>WX</td><td>30</td><td></td></tr><tr><td>2023-02-13</td><td>* 涛</td><td>WX</td><td>50</td><td></td></tr><tr><td>2023-02-14</td><td>* 晖</td><td>ZFB</td><td>25</td><td>兄弟加油</td></tr><tr><td>2023-02-16</td><td>* 八</td><td>WX</td><td>50</td><td>非常喜欢你的教程，希望你加油，坚持下去！</td></tr><tr><td>2023-02-16</td><td>* 子</td><td>WX</td><td>5</td><td>Gracias.</td></tr><tr><td>2023-02-15</td><td>* 珏</td><td>ZFB</td><td>16</td><td>感谢🙏</td></tr><tr><td>2023-02-15</td><td>** 廷</td><td>PP</td><td>1 USD</td><td>請求製作關於piped搭建的內容</td></tr></tbody></table><h3 id="2023年01月咖啡名单"><a href="#2023年01月咖啡名单" class="headerlink" title="2023年01月咖啡名单"></a>2023年01月咖啡名单</h3><table><thead><tr><th>时间</th><th>小伙伴ID</th><th>平台</th><th>金额&#x2F;RMB</th><th>小伙伴留言</th></tr></thead><tbody><tr><td>2023-01-14</td><td>* 呈</td><td>WX</td><td>99</td><td></td></tr><tr><td>2023-01-14</td><td>* 莎</td><td>WX</td><td>10</td><td>加VX（我搜索了用户不存在 &#x3D; &#x3D;）</td></tr><tr><td>2023-01-13</td><td>* 琪</td><td>ZFB</td><td>166.66</td><td>请咕咕喝咖啡 By KimNick</td></tr><tr><td>2023-01-14</td><td>** 文</td><td>ZFB</td><td>6</td><td>同一</td></tr><tr><td>2023-01-25</td><td>A * P</td><td>WX</td><td>30</td><td>坚持下去</td></tr><tr><td>2023-01-31</td><td>* 蜜</td><td>ZFB</td><td>0.3</td><td></td></tr><tr><td>2023-01-31</td><td>** 强</td><td>ZFB</td><td>30</td><td>很喜欢docker系列，感谢分享</td></tr><tr><td>2023-01-31</td><td>p * n</td><td>WX</td><td>5</td><td>文章有用</td></tr><tr><td>2023-01-31</td><td>1 * 0</td><td>WX</td><td>0.01</td><td></td></tr><tr><td>2023-01-22</td><td>SuHan</td><td>PP</td><td>50 $</td><td>coffee</td></tr></tbody></table><h3 id="2022年12月咖啡名单"><a href="#2022年12月咖啡名单" class="headerlink" title="2022年12月咖啡名单"></a>2022年12月咖啡名单</h3><table><thead><tr><th align="center">时间</th><th align="center">小伙伴ID</th><th align="center">平台</th><th align="center">金额&#x2F;RMB</th><th align="center">小伙伴留言</th></tr></thead><tbody><tr><td align="center">2022-12-06</td><td align="center">** 杰</td><td align="center">ZFB</td><td align="center">33</td><td align="center"></td></tr><tr><td align="center">2022-12-08</td><td align="center">* 虾</td><td align="center">WX</td><td align="center">10</td><td align="center">博主加油！帮忙匿名</td></tr><tr><td align="center">2022-12-09</td><td align="center">X * .</td><td align="center">WX</td><td align="center">13.33</td><td align="center">咕咕J</td></tr><tr><td align="center">2022-12-11</td><td align="center">* 悟</td><td align="center">WX</td><td align="center">50</td><td align="center">知识让世界美好</td></tr><tr><td align="center">2022-12-11</td><td align="center">*</td><td align="center">WX</td><td align="center">20</td><td align="center">咕咕加油</td></tr><tr><td align="center">2022-12-13</td><td align="center">** 杰</td><td align="center">ZFB</td><td align="center">33</td><td align="center">想看nastool保姆级教程</td></tr><tr><td align="center">2022-12-13</td><td align="center">* 河</td><td align="center">ZFB</td><td align="center">23.33</td><td align="center">感谢咕咕，从你的视频和文章学到了很多</td></tr><tr><td align="center">2022-12-15</td><td align="center">** 略</td><td align="center">ZFB</td><td align="center">10</td><td align="center">感谢咕咕的所有分享</td></tr><tr><td align="center">2022-12-15</td><td align="center">* 淞</td><td align="center">WX</td><td align="center">0.6</td><td align="center"></td></tr><tr><td align="center">2022-12-28</td><td align="center">** 坤</td><td align="center">ZFB</td><td align="center">50</td><td align="center">b站-淩晨三點蒸汽電臺</td></tr></tbody></table><blockquote><p><strong>PS：捐赠欢迎<code>备注个人ID</code>，咕咕会添加到这个页面中来。</strong></p></blockquote><p><strong>咖啡名单：</strong><a href="https://blog.laoda.de/s/buy-me-a-coffee">点击查看完整版</a></p><p><strong>非常感谢以上的小伙伴！</strong></p><p><strong>你们的支持，是咕咕分享的动力！</strong></p><h3 id="商家"><a href="#商家" class="headerlink" title="商家"></a>商家</h3><p>商务合作，比如想在博客仅有的几个广告位挂上您的广告的，可以联系咕咕的邮箱：<code>email@royleo.com</code></p><p>非常感谢大家的支持，希望博客可以一直运行下去，帮助大家更好地折腾！</p>]]></content>
      
      
      <categories>
          
          <category> 网站搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 谷歌广告 </tag>
            
            <tag> Google Adsense </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩儿的Docker项目】激情畅聊！十分钟搭建一个插件化易拓展的开源即时聊天（IM）应用——Tailchat</title>
      <link href="/archives/docker-compose-install-tailchat/"/>
      <url>/archives/docker-compose-install-tailchat/</url>
      
        <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><p>这周和大家分享一个开源的即时聊天项目。也是作者<a href="https://www.moonrailgun.com/about/">@moonrailgun</a>强烈推荐咕咕用的。</p><blockquote><p>PS：作者目前就职于字节的飞书团队担任前端工程师</p></blockquote><p><img src="https://img.laoda.de/i/2022/12/04/m3gcom-2.webp" alt="img"></p><p><img src="https://img.laoda.de/i/2022/12/04/koxxrq-2.webp" alt="image-20221204125057060"></p><p><img src="https://img.laoda.de/i/2022/12/04/kmqlcs-2.webp" alt="image-20221204124746900"></p><h3 id="1-1-功能"><a href="#1-1-功能" class="headerlink" title="1.1 功能"></a>1.1 <a href="https://tailchat.msgbyte.com/docs/intro#%E5%8A%9F%E8%83%BD%E5%88%97%E8%A1%A8">功能</a></h3><ul><li><p>注重隐私，只有被邀请的成员才能加入群组</p></li><li><p>防止陌生人，只有通过昵称+一串随机的数字才能添加好友</p></li><li><p>二维的群组空间，通过频道来分割不同的话题</p></li><li><p>高度自定义的群组空间, 通过分组和拖拽来创建独创的群组空间。同时可以通过更多的插件来增加更多的能力</p></li><li><p>可以严谨，也可以乐趣。通过插件的组合可以创造用于不同场景的 Tailchat。可以是面向娱乐，也可以是面向企业</p></li><li><p>后端微服务架构，已经为大规模部署做好了准备。不用担心用户量大了以后怎么办</p></li><li><p>用户管理</p><ul><li>基于4位数字标识(战网like)的用户名系统</li><li>好友管理</li></ul></li><li><p>聊天系统</p><ul><li>私聊</li><li>群聊</li><li>富文本消息<ul><li>图片</li><li>链接</li><li>提及(@)</li><li>代码</li></ul></li></ul></li><li><p>插件系统</p><ul><li><p>前端插件系统(基于<code>ministar</code>的微内核架构)</p><ul><li>自定义主题</li><li>自定义面板</li><li>自定义操作</li><li>消息内容转换</li><li>…</li></ul></li><li><p>后端插件系统(基于<code>moleculer</code>的微服务架构)</p></li></ul></li><li><p>开放平台</p><ul><li>Connect ID</li><li><em>(其他正在开发中)</em></li></ul></li><li><p>快速跳转</p></li></ul><h3 id="1-2-使用场景"><a href="#1-2-使用场景" class="headerlink" title="1.2 使用场景"></a>1.2 使用场景</h3><p>Tailchat 的设计之处就是以插件化的架构来满足不同人群对于不同需求的实现。</p><h4 id="1-2-1-对于个人用户"><a href="#1-2-1-对于个人用户" class="headerlink" title="1.2.1 对于个人用户"></a>1.2.1 <a href="https://tailchat.msgbyte.com/docs/why#%E5%AF%B9%E4%BA%8E%E4%B8%AA%E4%BA%BA%E7%94%A8%E6%88%B7">对于个人用户</a></h4><ul><li>如果希望和朋友一起玩<ul><li>创建一个群组</li><li>通过多个频道分割不同的话题</li><li>使用网页面板来分享喜欢的网页</li></ul></li><li>如果希望聚集自己的粉丝圈<ul><li>使用机器人来订阅自己的信息并转发到聊天面板</li><li>让自己的粉丝集中在一起，不需要创建无数个qq群&#x2F;微信群</li><li>多个频道让多个话题能够一起产生</li></ul></li><li>如果对于自己的隐私非常看中<ul><li>自己部署让一切都能掌控在手中</li></ul></li></ul><h4 id="1-2-2-对于企业用户"><a href="#1-2-2-对于企业用户" class="headerlink" title="1.2.2 对于企业用户"></a>1.2.2 <a href="https://tailchat.msgbyte.com/docs/why#%E5%AF%B9%E4%BA%8E%E4%BC%81%E4%B8%9A%E7%94%A8%E6%88%B7">对于企业用户</a></h4><ul><li>面板化设计满足企业自定义化设计需求</li><li>插件化架构可以方便基于核心进行二次开发</li><li>自部署的实现可以让企业价值得到保护，让企业安心</li><li>开源代码方便审查</li></ul><h3 id="1-3-相关地址"><a href="#1-3-相关地址" class="headerlink" title="1.3 相关地址"></a>1.3 相关地址</h3><p>咕咕的Demo：<a href="https://chat.gugu.ovh/">https://chat.gugu.ovh/</a><br>文档：<a href="https://tailchat.msgbyte.com/">https://tailchat.msgbyte.com/</a><br>GitHub源码：<a href="https://github.com/msgbyte/tailchat">https://github.com/msgbyte/tailchat</a><br>作者博客：<a href="https://www.moonrailgun.com/about/">https://www.moonrailgun.com/about/</a></p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><h3 id="2-1-聊天室"><a href="#2-1-聊天室" class="headerlink" title="2.1 聊天室"></a>2.1 聊天室</h3><p><img src="https://img.laoda.de/i/2022/12/04/koxxrq-2.webp" alt="image-20221204125057060"></p><h3 id="2-2-插件中心"><a href="#2-2-插件中心" class="headerlink" title="2.2 插件中心"></a>2.2 插件中心</h3><p><img src="https://img.laoda.de/i/2022/12/04/kpqbpe-2.webp" alt="img"></p><h3 id="2-3-各类主题"><a href="#2-3-各类主题" class="headerlink" title="2.3 各类主题"></a>2.3 <a href="https://tailchat.msgbyte.com/docs/intro#%E5%90%84%E7%B1%BB%E4%B8%BB%E9%A2%98">各类主题</a></h3><p><img src="https://img.laoda.de/i/2022/12/04/kq0xtb-2.webp" alt="img"></p><h3 id="2-4-Github订阅机器人"><a href="#2-4-Github订阅机器人" class="headerlink" title="2.4 Github订阅机器人"></a>2.4 <a href="https://tailchat.msgbyte.com/docs/intro#github%E8%AE%A2%E9%98%85%E6%9C%BA%E5%99%A8%E4%BA%BA">Github订阅机器人</a></h3><p><img src="https://img.laoda.de/i/2022/12/04/kq49rv-2.webp" alt="img"></p><p>这边直接丢出搭建的docker-compose.yaml文件，熟悉docker环境的小伙伴可以直接拷贝搭建。（环境变量可以自行参考文档按需修改）</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3.3&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="comment"># 应用网关</span></span><br><span class="line">  <span class="attr">service-gateway:</span></span><br><span class="line">    <span class="attr">build:</span></span><br><span class="line">      <span class="attr">context:</span> <span class="string">.</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">tailchat</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">env_file:</span> <span class="string">docker-compose.env</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">SERVICES:</span> <span class="string">core/gateway</span></span><br><span class="line">      <span class="attr">PORT:</span> <span class="number">3000</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mongo</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;traefik.enable=true&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;traefik.http.routers.api-gw.rule=PathPrefix(`/`)&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;traefik.http.services.api-gw.loadbalancer.server.port=3000&quot;</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">internal</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 用户服务</span></span><br><span class="line">  <span class="attr">service-user:</span></span><br><span class="line">    <span class="attr">build:</span></span><br><span class="line">      <span class="attr">context:</span> <span class="string">.</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">tailchat</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">env_file:</span> <span class="string">docker-compose.env</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">SERVICES:</span> <span class="string">core/user/*</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mongo</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">internal</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 群组服务</span></span><br><span class="line">  <span class="attr">service-group:</span></span><br><span class="line">    <span class="attr">build:</span></span><br><span class="line">      <span class="attr">context:</span> <span class="string">.</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">tailchat</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">env_file:</span> <span class="string">docker-compose.env</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">SERVICES:</span> <span class="string">core/group/*</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mongo</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">internal</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 聊天服务</span></span><br><span class="line">  <span class="attr">service-chat:</span></span><br><span class="line">    <span class="attr">build:</span></span><br><span class="line">      <span class="attr">context:</span> <span class="string">.</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">tailchat</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">env_file:</span> <span class="string">docker-compose.env</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">SERVICES:</span> <span class="string">core/chat/*</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mongo</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">internal</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 文件服务 / 插件注册中心 / 配置服务</span></span><br><span class="line">  <span class="attr">service-file:</span></span><br><span class="line">    <span class="attr">build:</span></span><br><span class="line">      <span class="attr">context:</span> <span class="string">.</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">tailchat</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">env_file:</span> <span class="string">docker-compose.env</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">SERVICES:</span> <span class="string">core/file,core/plugin/registry,core/config</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mongo</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">minio</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">internal</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">service-openapi:</span></span><br><span class="line">    <span class="attr">build:</span></span><br><span class="line">      <span class="attr">context:</span> <span class="string">.</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">tailchat</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">env_file:</span> <span class="string">docker-compose.env</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">SERVICES:</span> <span class="string">openapi/app,openapi/oidc/oidc</span></span><br><span class="line">      <span class="attr">OPENAPI_PORT:</span> <span class="number">3003</span></span><br><span class="line">      <span class="attr">OPENAPI_UNDER_PROXY:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mongo</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">minio</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;traefik.enable=true&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;traefik.http.routers.openapi-oidc.rule=PathPrefix(`/open`)&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;traefik.http.services.openapi-oidc.loadbalancer.server.port=3003&quot;</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">internal</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 插件服务(所有插件)</span></span><br><span class="line">  <span class="attr">service-all-plugins:</span></span><br><span class="line">    <span class="attr">build:</span></span><br><span class="line">      <span class="attr">context:</span> <span class="string">.</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">tailchat</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">env_file:</span> <span class="string">docker-compose.env</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">SERVICEDIR:</span> <span class="string">plugins</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mongo</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">minio</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">internal</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 数据库</span></span><br><span class="line">  <span class="attr">mongo:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mongo:4</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">on-failure</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data:/data/db</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">internal</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 数据缓存与中转通讯</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis:alpine</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">on-failure</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">internal</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 存储服务</span></span><br><span class="line">  <span class="attr">minio:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">minio/minio</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">on-failure</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">internal</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">MINIO_ROOT_USER:</span> <span class="string">tailchat</span></span><br><span class="line">      <span class="attr">MINIO_ROOT_PASSWORD:</span> <span class="string">com.msgbyte.tailchat</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./storage:/data</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">minio</span> <span class="string">server</span> <span class="string">/data</span> <span class="string">--console-address</span> <span class="string">&quot;:9001&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 路由转发</span></span><br><span class="line">  <span class="attr">traefik:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">traefik:v2.1</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">command:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;--api.insecure=true&quot;</span> <span class="comment"># Don&#x27;t do that in production!</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;--providers.docker=true&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;--providers.docker.exposedbydefault=false&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;--entryPoints.web.address=:80&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;--entryPoints.web.forwardedHeaders.insecure&quot;</span> <span class="comment"># Not good</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8080</span><span class="string">:80</span>        <span class="comment"># 8080可以改成自己服务器上没有被占用的端口</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:11001:8080</span>     <span class="comment">#同上</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/run/docker.sock:/var/run/docker.sock:ro</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">internal</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">default</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">internal:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">tailchat-internal</span></span><br></pre></td></tr></table></figure><p>以下是详细搭建教程。</p><h2 id="3-搭建环境"><a href="#3-搭建环境" class="headerlink" title="3. 搭建环境"></a>3. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器24元&#x2F;月VPS一台</del>咕咕自己搭建用的是<a href="https://blog.laoda.de/archives/ovh-sys-2-sat-32-waw">OVH的独立服务器</a>，演示用的是<a href="https://blog.laoda.de/archives/vps-buyvm">卢森堡的BuyVM</a>，如果你只是小范围使用，可以考虑用<a href="https://loll.cc/tx">腾讯轻量购买链接</a>的服务器，（最好是选<strong>非大陆（香港）的服务器</strong>）如果是小白刚开始玩的话，还可以购买<a href="https://blog.laoda.de/archives/cheap-vps-racknerd">Racknerd</a>的服务器，最低一年不到100块（不过这个建议选择1核2G内存以上的机器）（Racknerd服务器介绍：<a href="https://blog.laoda.de/archives/cheap-vps-racknerd">点击查看</a>）</li><li>系统：Debian 10（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本</a> 非必需DD用原来的系统也OK，之后教程都是用Debian或者Ubuntu搭建～）</li><li>安装好Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需但建议】域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>【非必需】提前安装好宝塔面板海外版本aapanel，并安装好Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程选用】安装好Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><blockquote><p>服务器要求：此项目最好用1核2G以上的VPS，硬盘越大越好。</p></blockquote><h2 id="4-搭建视频"><a href="#4-搭建视频" class="headerlink" title="4. 搭建视频"></a>4. 搭建视频</h2><p>YouTube：<a href="https://youtu.be/PEIbrbp3QMs">https://youtu.be/PEIbrbp3QMs</a></p><p>哔哩哔哩【高清版本可以点击去吐槽到B站观看】：<joe-bilibili bvid="BV1aG411u7M8"></joe-bilibili></p><h2 id="5-搭建方式"><a href="#5-搭建方式" class="headerlink" title="5. 搭建方式"></a>5. 搭建方式</h2><h3 id="安装系统（腾讯云轻量应用服务器）"><a href="#安装系统（腾讯云轻量应用服务器）" class="headerlink" title="安装系统（腾讯云轻量应用服务器）"></a>安装系统（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlyhcz-2.webp" alt="e59713fba8726d3cb55ae11bca83fe3c.png"></p><p>腾讯云轻量服务器最大的特点就是“轻量”，相比CVM，更适合小白上手，这边我们之间选择Docker基础镜像，就可以省去后面安装Docker的步骤（如果你非要用国内的服务器，这边装的Docker镜像还会帮你配置好国内镜像源，让你加速访问docker镜像资源）。</p><h3 id="登陆（腾讯云轻量应用服务器）"><a href="#登陆（腾讯云轻量应用服务器）" class="headerlink" title="登陆（腾讯云轻量应用服务器）"></a>登陆（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlzlj7-2.webp" alt="2722040ee311eb4a9ebf2a4945bf38f4.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm0gv8-2.webp" alt="c0b5d360053746c4095d592967ee401f.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm1vqw-2.webp" alt="e0ba858f021b846ad0abc27acf5008c2.png"></p><h3 id="5-1-服务器前期配置"><a href="#5-1-服务器前期配置" class="headerlink" title="5.1 服务器前期配置"></a>5.1 服务器前期配置</h3><p>服务器初始设置，参考：</p><p><a href="https://blog.laoda.de/archives/vps-script"><strong>新买了一台服务器“必须”要做的6件小事</strong></a></p><p><a href="https://blog.laoda.de/archives/how-to-secure-a-linux-server"><strong>保护好你的小鸡！保姆级服务器安全教程！</strong></a></p><p>这边由于我们用的是腾讯云轻量应用服务器，系统默认就帮我们创建了名字是<code>lighthouse</code>的用户，系统后台也有防火墙（默认就开了几个常用的端口）</p><p>对小白用户来说，可以不用再去管繁琐的服务器安全的配置，大大降低了服务器防护的门槛。</p><p><a href="https://blog.laoda.de/archives/hello-docker">【Docker系列】不用宝塔面板，小白一样可以玩转VPS服务器！</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i <span class="comment"># 切换到root用户</span></span><br><span class="line"></span><br><span class="line">apt update -y  <span class="comment"># 升级packages</span></span><br><span class="line"></span><br><span class="line">apt install wget curl sudo vim git -y  <span class="comment"># Debian系统比较干净，安装常用的软件</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：VPS的内存如果过小，建议设置一下SWAP，一般为内存的1-1.5倍即可，可以让系统运行更流畅！</p></blockquote><p>设置SWAP可以用脚本:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O box.sh https://raw.githubusercontent.com/BlueSkyXN/SKY-BOX/main/box.sh &amp;&amp; <span class="built_in">chmod</span> +x box.sh &amp;&amp; clear &amp;&amp; ./box.sh</span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2022/05/28/uoikkd-0.webp" alt="image-20220528185512488" style="zoom:50%;" /><p>选择<code>18</code>，然后输入你想要扩容的数值即可。</p><img src="https://img.laoda.de/i/2022/05/28/up2dkf-0.webp" alt="image-20220528185604586" style="zoom:50%;" /><p>使用腾讯云轻量应用服务器的小伙伴可以直接跳到<code>5.2.4</code></p><h3 id="5-2-安装Docker（使用腾讯云轻量应用服务器可跳过这一部分）"><a href="#5-2-安装Docker（使用腾讯云轻量应用服务器可跳过这一部分）" class="headerlink" title="5.2 安装Docker（使用腾讯云轻量应用服务器可跳过这一部分）"></a>5.2 安装Docker（使用腾讯云轻量应用服务器可跳过这一部分）</h3><h4 id="5-2-1-非大陆服务器Docker安装"><a href="#5-2-1-非大陆服务器Docker安装" class="headerlink" title="5.2.1 非大陆服务器Docker安装"></a>5.2.1 <strong>非大陆服务器Docker安装</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -qO- get.docker.com | bash</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker -v  <span class="comment">#查看docker版本</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker  <span class="comment"># 设置开机自动启动</span></span><br></pre></td></tr></table></figure><p><strong>修改Docker配置（可选）（来自<a href="https://u.sb/debian-install-docker/">烧饼博客</a>）</strong></p><p>以下配置会增加一段自定义内网 IPv6 地址，开启容器的 IPv6 功能，以及限制日志文件大小，防止 Docker 日志塞满硬盘（泪的教训）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/docker/daemon.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    &quot;log-driver&quot;: &quot;json-file&quot;,</span></span><br><span class="line"><span class="string">    &quot;log-opts&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;max-size&quot;: &quot;20m&quot;,</span></span><br><span class="line"><span class="string">        &quot;max-file&quot;: &quot;3&quot;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    &quot;ipv6&quot;: true,</span></span><br><span class="line"><span class="string">    &quot;fixed-cidr-v6&quot;: &quot;fd00:dead:beef:c0::/80&quot;,</span></span><br><span class="line"><span class="string">    &quot;experimental&quot;:true,</span></span><br><span class="line"><span class="string">    &quot;ip6tables&quot;:true</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>然后重启 Docker 服务：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h4 id="5-2-2-非大陆服务器Docker-compose安装"><a href="#5-2-2-非大陆服务器Docker-compose安装" class="headerlink" title="5.2.2 非大陆服务器Docker-compose安装"></a>5.2.2 <strong>非大陆服务器Docker-compose安装</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/1.29.2/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose --version  <span class="comment">#查看docker-compose版本</span></span><br></pre></td></tr></table></figure><h4 id="5-2-3-国内服务器安装docker"><a href="#5-2-3-国内服务器安装docker" class="headerlink" title="5.2.3 国内服务器安装docker"></a>5.2.3 <strong>国内服务器安装docker</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -sSL https://get.daocloud.io/docker | sh</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker -v  <span class="comment">#查看docker版本</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker  <span class="comment"># 设置开机自动启动</span></span><br></pre></td></tr></table></figure><p><strong>修改Docker配置（可选）（来自<a href="https://u.sb/debian-install-docker/">烧饼博客</a>）</strong></p><p>以下配置会增加一段自定义内网 IPv6 地址，开启容器的 IPv6 功能，以及限制日志文件大小，防止 Docker 日志塞满硬盘（泪的教训）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/docker/daemon.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    &quot;log-driver&quot;: &quot;json-file&quot;,</span></span><br><span class="line"><span class="string">    &quot;log-opts&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;max-size&quot;: &quot;20m&quot;,</span></span><br><span class="line"><span class="string">        &quot;max-file&quot;: &quot;3&quot;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    &quot;ipv6&quot;: true,</span></span><br><span class="line"><span class="string">    &quot;fixed-cidr-v6&quot;: &quot;fd00:dead:beef:c0::/80&quot;,</span></span><br><span class="line"><span class="string">    &quot;experimental&quot;:true,</span></span><br><span class="line"><span class="string">    &quot;ip6tables&quot;:true</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>然后重启 Docker 服务：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h4 id="5-2-4-国内服务器安装docker-compose"><a href="#5-2-4-国内服务器安装docker-compose" class="headerlink" title="5.2.4 国内服务器安装docker-compose"></a>5.2.4 <strong>国内服务器安装docker-compose</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -L https://get.daocloud.io/docker/compose/releases/download/v2.1.1/docker-compose-`<span class="built_in">uname</span> -s`-`<span class="built_in">uname</span> -m` &gt; /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line">docker-compose --version  <span class="comment">#查看docker-compose版本</span></span><br></pre></td></tr></table></figure><h3 id="5-3-安装NginxProxyManager"><a href="#5-3-安装NginxProxyManager" class="headerlink" title="5.3 安装NginxProxyManager"></a>5.3 安装NginxProxyManager</h3><p>参考这边的内容：<a href="https://blog.laoda.de/archives/nginxproxymanager">https://blog.laoda.de/archives/nginxproxymanager</a></p><h3 id="5-4-创建安装目录"><a href="#5-4-创建安装目录" class="headerlink" title="5.4 创建安装目录"></a>5.4 创建安装目录</h3><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/tailchat</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/tailchat</span><br></pre></td></tr></table></figure><p>这边我们直接用docker的方式安装。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure><p>英文输入法下，按<code>i</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3.3&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="comment"># 应用网关</span></span><br><span class="line">  <span class="attr">service-gateway:</span></span><br><span class="line">    <span class="attr">build:</span></span><br><span class="line">      <span class="attr">context:</span> <span class="string">.</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">tailchat</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">env_file:</span> <span class="string">docker-compose.env</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">SERVICES:</span> <span class="string">core/gateway</span></span><br><span class="line">      <span class="attr">PORT:</span> <span class="number">3000</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mongo</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;traefik.enable=true&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;traefik.http.routers.api-gw.rule=PathPrefix(`/`)&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;traefik.http.services.api-gw.loadbalancer.server.port=3000&quot;</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">internal</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 用户服务</span></span><br><span class="line">  <span class="attr">service-user:</span></span><br><span class="line">    <span class="attr">build:</span></span><br><span class="line">      <span class="attr">context:</span> <span class="string">.</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">tailchat</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">env_file:</span> <span class="string">docker-compose.env</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">SERVICES:</span> <span class="string">core/user/*</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mongo</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">internal</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 群组服务</span></span><br><span class="line">  <span class="attr">service-group:</span></span><br><span class="line">    <span class="attr">build:</span></span><br><span class="line">      <span class="attr">context:</span> <span class="string">.</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">tailchat</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">env_file:</span> <span class="string">docker-compose.env</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">SERVICES:</span> <span class="string">core/group/*</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mongo</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">internal</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 聊天服务</span></span><br><span class="line">  <span class="attr">service-chat:</span></span><br><span class="line">    <span class="attr">build:</span></span><br><span class="line">      <span class="attr">context:</span> <span class="string">.</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">tailchat</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">env_file:</span> <span class="string">docker-compose.env</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">SERVICES:</span> <span class="string">core/chat/*</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mongo</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">internal</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 文件服务 / 插件注册中心 / 配置服务</span></span><br><span class="line">  <span class="attr">service-file:</span></span><br><span class="line">    <span class="attr">build:</span></span><br><span class="line">      <span class="attr">context:</span> <span class="string">.</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">tailchat</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">env_file:</span> <span class="string">docker-compose.env</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">SERVICES:</span> <span class="string">core/file,core/plugin/registry,core/config</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mongo</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">minio</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">internal</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">service-openapi:</span></span><br><span class="line">    <span class="attr">build:</span></span><br><span class="line">      <span class="attr">context:</span> <span class="string">.</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">tailchat</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">env_file:</span> <span class="string">docker-compose.env</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">SERVICES:</span> <span class="string">openapi/app,openapi/oidc/oidc</span></span><br><span class="line">      <span class="attr">OPENAPI_PORT:</span> <span class="number">3003</span></span><br><span class="line">      <span class="attr">OPENAPI_UNDER_PROXY:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mongo</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">minio</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;traefik.enable=true&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;traefik.http.routers.openapi-oidc.rule=PathPrefix(`/open`)&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;traefik.http.services.openapi-oidc.loadbalancer.server.port=3003&quot;</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">internal</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 插件服务(所有插件)</span></span><br><span class="line">  <span class="attr">service-all-plugins:</span></span><br><span class="line">    <span class="attr">build:</span></span><br><span class="line">      <span class="attr">context:</span> <span class="string">.</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">tailchat</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">env_file:</span> <span class="string">docker-compose.env</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">SERVICEDIR:</span> <span class="string">plugins</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mongo</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">minio</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">internal</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 数据库</span></span><br><span class="line">  <span class="attr">mongo:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mongo:4</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">on-failure</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data:/data/db</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">internal</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 数据缓存与中转通讯</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis:alpine</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">on-failure</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">internal</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 存储服务</span></span><br><span class="line">  <span class="attr">minio:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">minio/minio</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">on-failure</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">internal</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">MINIO_ROOT_USER:</span> <span class="string">tailchat</span></span><br><span class="line">      <span class="attr">MINIO_ROOT_PASSWORD:</span> <span class="string">com.msgbyte.tailchat</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./storage:/data</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">minio</span> <span class="string">server</span> <span class="string">/data</span> <span class="string">--console-address</span> <span class="string">&quot;:9001&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 路由转发</span></span><br><span class="line">  <span class="attr">traefik:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">traefik:v2.1</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">command:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;--api.insecure=true&quot;</span> <span class="comment"># Don&#x27;t do that in production!</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;--providers.docker=true&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;--providers.docker.exposedbydefault=false&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;--entryPoints.web.address=:80&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;--entryPoints.web.forwardedHeaders.insecure&quot;</span> <span class="comment"># Not good</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8080</span><span class="string">:80</span>            <span class="comment"># 8080可以改成自己服务器上没有被占用的端口</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:11001:8080</span>     <span class="comment">#11001同上</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/run/docker.sock:/var/run/docker.sock:ro</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">internal</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">default</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">internal:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">tailchat-internal</span></span><br></pre></td></tr></table></figure><p>按一下<code>esc</code>，然后<code>:wq</code> 保存退出，之后，</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim docker-compose.env</span><br></pre></td></tr></table></figure><p>一样写入下面的内容：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">LOGGER=<span class="literal">true</span></span><br><span class="line">LOGLEVEL=info</span><br><span class="line">SERVICEDIR=services</span><br><span class="line"></span><br><span class="line">TRANSPORTER=redis://redis:6379</span><br><span class="line"></span><br><span class="line">CACHER=redis://redis:6379</span><br><span class="line"></span><br><span class="line">REDIS_URL=redis://redis:6379</span><br><span class="line">MONGO_URL=mongodb://mongo/tailchat</span><br><span class="line">SECRET=adswddWEQ@4  <span class="comment"># 改成自己的密钥</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># file</span></span><br><span class="line">API_URL=https://chat.gugu.ovh   <span class="comment"># 改成自己的网站</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># minio</span></span><br><span class="line">MINIO_URL=minio:9000</span><br><span class="line">MINIO_USER=tailchat</span><br><span class="line">MINIO_PASS=com.msgbyte.tailchat</span><br><span class="line"></span><br><span class="line"><span class="comment"># SMTP</span></span><br><span class="line">SMTP_SENDER=</span><br><span class="line">SMTP_URI=</span><br><span class="line"></span><br><span class="line"><span class="comment"># metrics</span></span><br><span class="line">PROMETHEUS=1</span><br></pre></td></tr></table></figure><p>按一下<code>esc</code>，然后<code>:wq</code> 保存退出，之后，</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull moonrailgun/tailchat</span><br><span class="line">docker tag moonrailgun/tailchat tailchat <span class="comment"># 修改tag以让配置文件能够识别</span></span><br></pre></td></tr></table></figure><p>最后：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/tailchat    <span class="comment"># 确保来到dockercompose文件所在的文件夹下</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 确保配置文件(docker-compose.yml和docker-compose.env)在当前目录下</span></span><br><span class="line"><span class="comment"># 执行以下命令一键启动</span></span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>访问: <code>http://&lt;server ip&gt;:8080</code> 即可打开tailchat</p><p>注意部分云服务可能需要手动开放防火墙端口。</p><p><em>在<code>docker-compose.env</code>文件中提供了部分环境变量可供配置。</em></p><p><code>tailchat</code> 的<code>docker-compose.yml</code>配置默认提供了如下配置:</p><ul><li><code>mongodb</code>: 持久化数据库</li><li><code>redis</code>: KV数据库与消息中转服务</li><li><code>minio</code>: 分布式文件服务</li></ul><h3 id="5-5-打开服务器防火墙并访问网页"><a href="#5-5-打开服务器防火墙并访问网页" class="headerlink" title="5.5 打开服务器防火墙并访问网页"></a>5.5 打开服务器防火墙并访问网页</h3><p>打开防火墙的端口<code>8080</code></p><p>腾讯云打开方法如下：</p><img src="https://img.laoda.de/i/2022/06/30/zlio5h-2.webp" alt="image-20220630215240864" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/06/30/10h3dqt-2.webp" alt="image-20220630220546335" style="zoom:33%;" /><p>图中示例填的是<code>5230</code>，备注填的是<code>memos</code>，这边我们填<code>8080</code>，示例填<code>microbin</code> ，确定即可（如果你在docker-compose文件里换了<code>8081</code>，这边就需要填<code>8081</code>，以此类推）</p><img src="https://img.laoda.de/i/2022/08/19/o4byqz-2.webp" alt="image-20220819145844555" style="zoom:33%;" /><p>查看端口是否被占用（以<code>8080</code>为例），输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:8080  <span class="comment">#查看8080端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果啥也没出现，表示端口未被占用，我们可以继续下面的操作了～</p><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用（被占用了就修改一下端口，比如改成8081，注意docker命令行里和防火墙都要改）</p><p>理论上我们就可以输入<code>http://ip:8080</code>访问了。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的IP。</p><p>2、遇到访问不了的情况，请再次检查在宝塔面板的防火墙和服务商的后台防火墙是否打开对应了端口。</p></blockquote><p>有的小伙伴可能想搭建起来分享给其他人使用，如果后续想要分享给别人，IP+端口太不优雅了，咕咕建议大家还是搞一个域名，容易记，看起来也更正规一点。这样可以做https，会让网页更安全。（非要IP+端口访问的，可以直接跳到<code>5.6</code>，并且跳过<code>6. 反向代理</code>部分）</p><p>而且<a href="https://loll.cc/ns">namesilo</a>上面xyz后缀的域名一年就7块钱，可以年抛。</p><p>如果想要长期使用，还是建议买com后缀的域名，更加正规一些，可以输入<code>laodade</code>来获得1美元的优惠（不知道现在还有没有）</p><p><a href="https://loll.cc/ns">namesilo</a>自带隐私保护，咕咕一直在用这家，价格也是这些注册商里面比较低的，关键是他家不像其他家域名注册商，没有七七八八的套路！（就是后台界面有些<del>丑</del>古老 &#x3D; &#x3D;）</p><p><a href="https://blog.laoda.de/archives/namesilo">【域名购买】Namesilo优惠码和域名解析教程（附带服务器购买推荐和注意事项）</a></p><p>我们接着往下看！</p><h3 id="5-6-更新"><a href="#5-6-更新" class="headerlink" title="5.6 更新"></a>5.6 更新</h3><h4 id="5-6-1-docker-compose部署"><a href="#5-6-1-docker-compose部署" class="headerlink" title="5.6.1 docker-compose部署"></a>5.6.1 docker-compose部署</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/tailchat</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/tailchat /root/data/docker_data/tailchat.archive  <span class="comment"># 万事先备份，以防万一，其实这边没必要，因为我们没有映射到本地文件夹</span></span><br><span class="line"></span><br><span class="line">docker-compose pull</span><br><span class="line"></span><br><span class="line">docker-compose up -d    <span class="comment"># 请不要使用docker-compose stop来停止容器，因为这么做需要额外的时间等待容器停止；docker-compose up -d直接升级容器时会自动停止并立刻重建新的容器，完全没有必要浪费那些时间。</span></span><br><span class="line"></span><br><span class="line">docker image prune  <span class="comment"># prune 命令用来删除不再使用的 docker 对象。删除所有未被 tag 标记和未被容器使用的镜像</span></span><br></pre></td></tr></table></figure><p>提示：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WARNING! This will remove all dangling images.</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] </span><br></pre></td></tr></table></figure><p>输入<code>y</code></p><p>利用Docker搭建的应用，更新非常容易～</p><h3 id="5-7-卸载"><a href="#5-7-卸载" class="headerlink" title="5.7 卸载"></a>5.7 卸载</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/tailchat</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/tailchat  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>可以卸载得很干净。</p><h2 id="6-反向代理"><a href="#6-反向代理" class="headerlink" title="6. 反向代理"></a>6. 反向代理</h2><h3 id="6-1-利用Nginx-Proxy-Manager"><a href="#6-1-利用Nginx-Proxy-Manager" class="headerlink" title="6.1 利用Nginx Proxy Manager"></a>6.1 利用Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p><img src="https://img.laoda.de/i/2022/10/16/n6t02e-2.webp" alt="image-20221016140213282"></p><p>之后，登陆Nginx Proxy Manager（不会的看这个：<strong>安装Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称NPM）会用到<code>80</code>、<code>443</code>端口，所以本机不能占用（比如原来就有Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom: 33%;" /><p><img src="https://img.laoda.de/i/2022/10/16/n7b9hm-2.webp" alt="image-20221016140258381"></p><blockquote><p> 注意填写对应的<code>域名</code>、<code>IP</code>和<code>端口</code>，按文章来的话，应该是<code>8080</code></p></blockquote><p><strong>IP填写：</strong></p><p>如果Nginx Proxy Manager和Tailchat 在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的Docker容器内部IP。</p><p><img src="https://img.laoda.de/i/2022/09/29/pcdnz5-2.webp"></p><p>否则直接填<code>tailchat</code>所在的服务器IP就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom: 33%;" /><p>再次打开，勾选这些：</p><p><img src="https://img.laoda.de/i/2022/10/16/n7nn6e-2.webp" alt="image-20221016140356324"></p><p>然后就可以用域名来安装访问了。</p><h3 id="6-2-利用宝塔面板"><a href="#6-2-利用宝塔面板" class="headerlink" title="6.2 利用宝塔面板"></a>6.2 利用宝塔面板</h3><p>发现还是有不少小伙伴习惯用宝塔面板，这边也贴一个宝塔面板的反代配置：</p><p>直接新建一个站点，不要数据库，不要php，纯静态即可。</p><p>然后打开下面的配置，修改Nginx的配置。</p><p><img src="https://img.laoda.de/i/2022/08/19/ov4xrt-2.webp" alt="image-20220819150345725"></p><p><img src="https://img.laoda.de/i/2022/08/19/owbbkb-2.webp" alt="image-20220819150542867"></p><p>代码如下：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:8080/;       <span class="comment"># 注意改成你实际使用的端口</span></span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此方法对90%的反向代理都能生效。</p><p>有同学可能会问，为什么不直接用宝塔自带的反向代理功能。</p><p><img src="https://img.laoda.de/i/2022/08/19/oxf800-2.webp" alt="image-20220819150730128"></p><p>也可以，不过咕咕自己之前遇到过当有多个网站需要反代的时候，在这边设置会报错的情况 &#x3D; &#x3D; </p><p>所以后来就不用了，直接用上面的方法来操作了。</p><h2 id="7-使用教程"><a href="#7-使用教程" class="headerlink" title="7. 使用教程"></a>7. 使用教程</h2><h3 id="7-1-安装和配置"><a href="#7-1-安装和配置" class="headerlink" title="7.1 安装和配置"></a>7.1 安装和配置</h3><p>见咕咕的视频。</p><h2 id="8-目前遇到的问题"><a href="#8-目前遇到的问题" class="headerlink" title="8. 目前遇到的问题"></a>8. 目前遇到的问题</h2><h3 id="8-1-隔空投送功能不知道如何使用"><a href="#8-1-隔空投送功能不知道如何使用" class="headerlink" title="8.1 隔空投送功能不知道如何使用"></a>8.1 隔空投送功能不知道如何使用</h3><h3 id="8-2-暂时不支持语音聊天"><a href="#8-2-暂时不支持语音聊天" class="headerlink" title="8.2 暂时不支持语音聊天"></a>8.2 暂时不支持语音聊天</h3><h3 id="8-3-暂时不支持自己上传表情包"><a href="#8-3-暂时不支持自己上传表情包" class="headerlink" title="8.3 暂时不支持自己上传表情包"></a>8.3 暂时不支持自己上传表情包</h3><p>大家可以多使用多给作者提意见和建议，帮助项目更快迭代升级！</p><h2 id="9-结尾"><a href="#9-结尾" class="headerlink" title="9. 结尾"></a>9. 结尾</h2><p>祝大家用得开心，有问题可以去GitHub提<a href="https://github.com/msgbyte/tailchat/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，项目处于刚开始阶段，有能力给项目做贡献的同学，也欢迎积极加入到<a href="https://github.com/msgbyte/tailchat">项目</a>中来，贡献自己的一份力量！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>咕咕的Demo：<a href="https://chat.gugu.ovh/">https://chat.gugu.ovh/</a><br>文档：<a href="https://tailchat.msgbyte.com/">https://tailchat.msgbyte.com/</a><br>GitHub源码：<a href="https://github.com/msgbyte/tailchat">https://github.com/msgbyte/tailchat</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 即时聊天 </tag>
            
            <tag> IM应用 </tag>
            
            <tag> Discord </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩儿的Docker项目】10分钟搭建一个巨好用的粘贴板工具——MicroBin</title>
      <link href="/archives/docker-compose-install-microbin/"/>
      <url>/archives/docker-compose-install-microbin/</url>
      
        <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><p><strong>什么是 microbin ？</strong></p><p>有时候你可能想从一台电脑上粘贴文本到另一台电脑上，或者是你想要分享一张图片或者是一些文件，但是用百度网盘登陆、上传、分享、下载太麻烦。</p><p>这个时候你可能会想要自建一个网盘，比如<a href="https://blog.laoda.de/archives/docker-compose-install-nextcloud">Nextcloud</a>，或者是一个列表程序，比如<a href="https://blog.laoda.de/archives/docker-install-alist">alist</a>，不过他们都相对来说比较“重”，功能太过丰富；</p><p>当然如果只是简单地分享一些文本，你或许想到了可以选择ubuntu官方提供的：<a href="https://paste.ubuntu.com/">https://paste.ubuntu.com/</a></p><p>不过它又太过简单，而且还必须登陆才能使用，太麻烦。</p><p>今天我们来介绍一款支持用docker搭建的轻应用——microbin，它可以完美实现上面提到的功能，和网盘相比，它足够轻量；和paste.ubuntu相比，它又有几个非常实用的小功能。</p><p>一起来试试看吧。</p><p><img src="https://img.laoda.de/i/2022/11/26/fnk4bv-2.webp" alt="decf1cbdc74761bc33c3d42eb1a13e9e.png"></p><p>咕咕的Demo：<a href="https://paste.gugu.ee/">https://paste.gugu.ee</a></p><h3 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h3><ul><li>非常小巧</li><li>支持文件上传（例如：server.com&#x2F;file&#x2F;pig-dog-cat）</li><li>支持raw的文本服务（例如，server.com&#x2F;raw&#x2F;pig-dog-cat）</li><li>可以用来URL缩短和重定向</li><li>支持二维码</li><li>数据库非常简单（JSON+文件），可移植性强，易于备份和整合</li><li>支持列出使用过的列表</li><li>支持私有链接和公开链接，可编辑，可以设置链接的有效性</li><li>支持代码语法高亮</li><li>自动暗黑模式和自定义样式，只需很少的CSS和vanilla JS（见water.css）</li><li>默认以动物的名字作为结尾（可修改成随机字符）</li></ul><h3 id="1-1-相关地址"><a href="#1-1-相关地址" class="headerlink" title="1.1 相关地址"></a>1.1 相关地址</h3><p>咕咕的Demo：<a href="https://paste.gugu.ee/">https://paste.gugu.ee</a><br>文档：<a href="https://microbin.eu/documentation/">https://microbin.eu/documentation/</a><br>GitHub源码：<a href="https://github.com/szabodanika/microbin">https://github.com/szabodanika/microbin</a><br>Docker镜像：<a href="https://hub.docker.com/r/danielszabo99/microbin">https://hub.docker.com/r/danielszabo99/microbin</a><br>捐助：<a href="https://microbin.eu/donate/">https://microbin.eu/donate/</a><br>问题反馈：<a href="https://github.com/szabodanika/microbin/issues">https://github.com/szabodanika/microbin/issues</a></p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p><img src="https://img.laoda.de/i/2022/11/26/fnx76u-2.webp" alt="3398741c330b31d727ebece5cc443f44.png"></p><p><img src="https://img.laoda.de/i/2022/11/26/fnzzph-2.webp" alt="b80c50914625c4e9871fabbe324184f0.png"></p><p><img src="https://img.laoda.de/i/2022/11/26/fo1ldi-2.webp" alt="7ac5120f437e799292b80104aa263764.png"></p><p><img src="https://img.laoda.de/i/2022/11/26/fo3hpa-2.webp" alt="d6f3e4b57e6a85616371c3d13e025054.png"></p><p>这边直接丢出搭建的docker-compose.yaml文件，熟悉docker环境的小伙伴可以直接拷贝搭建。（环境变量可以自行参考文档按需修改）</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.5&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">microbin:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">danielszabo99/microbin:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">microbin</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MICROBIN_HIGHLIGHTSYNTAX=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MICROBIN_HASH_IDS=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MICROBIN_EDITABLE=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MICROBIN_PRIVATE=false</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MICROBIN_HIDE_FOOTER=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MICROBIN_HELP=true</span></span><br><span class="line">   <span class="comment">#  - MICROBIN_FOOTER_TEXT=gugu</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MICROBIN_HIDE_HEADER=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MICROBIN_HIDE_LOGO=false</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MICROBIN_NO_ETERNAL_PASTA=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MICROBIN_NO_FILE_UPLOAD=false</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MICROBIN_NO_LISTING=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MICROBIN_THREADS=2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MICROBIN_TITLE=free-bin</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MICROBIN_PUBLIC_PATH=https://paste.gugu.ovh/</span>    <span class="comment"># 记得改成自己的网址</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MICROBIN_QR=true</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8080</span><span class="string">:8080</span>    <span class="comment"># 冒号左边可以改成自己需要的端口号</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./microbin-data:/app/pasta_data</span>     <span class="comment"># 冒号左边可以改自己想要的挂载路径</span></span><br></pre></td></tr></table></figure><p>以下是详细搭建教程。</p><h2 id="3-搭建环境"><a href="#3-搭建环境" class="headerlink" title="3. 搭建环境"></a>3. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器24元&#x2F;月VPS一台</del>咕咕自己搭建用的是<a href="https://blog.laoda.de/archives/ovh-sys-2-sat-32-waw">OVH的独立服务器</a>，演示用的是<a href="https://blog.laoda.de/archives/vps-buyvm">卢森堡的BuyVM</a>，如果你只是小范围使用，可以考虑用<a href="https://loll.cc/tx">腾讯轻量购买链接</a>的服务器，（最好是选<strong>非大陆（香港）的服务器</strong>）如果是小白刚开始玩的话，还可以购买<a href="https://blog.laoda.de/archives/cheap-vps-racknerd">Racknerd</a>的服务器，最低一年不到100块（不过这个建议选择1G内存以上的机器）（Racknerd服务器介绍：<a href="https://blog.laoda.de/archives/cheap-vps-racknerd">点击查看</a>）</li><li>系统：Debian 10（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本</a> 非必需DD用原来的系统也OK，之后教程都是用Debian或者Ubuntu搭建～）</li><li>安装好Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需但建议】域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>【非必需】提前安装好宝塔面板海外版本aapanel，并安装好Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程选用】安装好Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><blockquote><p>服务器要求：此项目比较重量，内存至少1G以上，硬盘越大越好。</p></blockquote><h2 id="4-搭建视频"><a href="#4-搭建视频" class="headerlink" title="4. 搭建视频"></a>4. 搭建视频</h2><p>YouTube：<a href="https://youtu.be/tA6b2NPI26E">https://youtu.be/tA6b2NPI26E</a></p><p>哔哩哔哩【高清版本可以点击去吐槽到B站观看】：<a href="https://bilibili.com/BV1tG4y197oQ">https://bilibili.com/BV1tG4y197oQ</a></p><h2 id="5-搭建方式"><a href="#5-搭建方式" class="headerlink" title="5. 搭建方式"></a>5. 搭建方式</h2><h3 id="安装系统（腾讯云轻量应用服务器）"><a href="#安装系统（腾讯云轻量应用服务器）" class="headerlink" title="安装系统（腾讯云轻量应用服务器）"></a>安装系统（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlyhcz-2.webp" alt="e59713fba8726d3cb55ae11bca83fe3c.png"></p><p>腾讯云轻量服务器最大的特点就是“轻量”，相比CVM，更适合小白上手，这边我们之间选择Docker基础镜像，就可以省去后面安装Docker的步骤（如果你非要用国内的服务器，这边装的Docker镜像还会帮你配置好国内镜像源，让你加速访问docker镜像资源）。</p><h3 id="登陆（腾讯云轻量应用服务器）"><a href="#登陆（腾讯云轻量应用服务器）" class="headerlink" title="登陆（腾讯云轻量应用服务器）"></a>登陆（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlzlj7-2.webp" alt="2722040ee311eb4a9ebf2a4945bf38f4.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm0gv8-2.webp" alt="c0b5d360053746c4095d592967ee401f.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm1vqw-2.webp" alt="e0ba858f021b846ad0abc27acf5008c2.png"></p><h3 id="5-1-服务器前期配置"><a href="#5-1-服务器前期配置" class="headerlink" title="5.1 服务器前期配置"></a>5.1 服务器前期配置</h3><p>服务器初始设置，参考：</p><p><a href="https://blog.laoda.de/archives/vps-script"><strong>新买了一台服务器“必须”要做的6件小事</strong></a></p><p><a href="https://blog.laoda.de/archives/how-to-secure-a-linux-server"><strong>保护好你的小鸡！保姆级服务器安全教程！</strong></a></p><p>这边由于我们用的是腾讯云轻量应用服务器，系统默认就帮我们创建了名字是<code>lighthouse</code>的用户，系统后台也有防火墙（默认就开了几个常用的端口）</p><p>对小白用户来说，可以不用再去管繁琐的服务器安全的配置，大大降低了服务器防护的门槛。</p><p><a href="https://blog.laoda.de/archives/hello-docker">【Docker系列】不用宝塔面板，小白一样可以玩转VPS服务器！</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i <span class="comment"># 切换到root用户</span></span><br><span class="line"></span><br><span class="line">apt update -y  <span class="comment"># 升级packages</span></span><br><span class="line"></span><br><span class="line">apt install wget curl sudo vim git -y  <span class="comment"># Debian系统比较干净，安装常用的软件</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：VPS的内存如果过小，建议设置一下SWAP，一般为内存的1-1.5倍即可，可以让系统运行更流畅！</p></blockquote><p>设置SWAP可以用脚本:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O box.sh https://raw.githubusercontent.com/BlueSkyXN/SKY-BOX/main/box.sh &amp;&amp; <span class="built_in">chmod</span> +x box.sh &amp;&amp; clear &amp;&amp; ./box.sh</span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2022/05/28/uoikkd-0.webp" alt="image-20220528185512488" style="zoom:50%;" /><p>选择<code>18</code>，然后输入你想要扩容的数值即可。</p><img src="https://img.laoda.de/i/2022/05/28/up2dkf-0.webp" alt="image-20220528185604586" style="zoom:50%;" /><p>使用腾讯云轻量应用服务器的小伙伴可以直接跳到<code>5.2.4</code></p><h3 id="5-2-安装Docker（使用腾讯云轻量应用服务器可跳过这一部分）"><a href="#5-2-安装Docker（使用腾讯云轻量应用服务器可跳过这一部分）" class="headerlink" title="5.2 安装Docker（使用腾讯云轻量应用服务器可跳过这一部分）"></a>5.2 安装Docker（使用腾讯云轻量应用服务器可跳过这一部分）</h3><h4 id="5-2-1-非大陆服务器Docker安装"><a href="#5-2-1-非大陆服务器Docker安装" class="headerlink" title="5.2.1 非大陆服务器Docker安装"></a>5.2.1 <strong>非大陆服务器Docker安装</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -qO- get.docker.com | bash</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker -v  <span class="comment">#查看docker版本</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker  <span class="comment"># 设置开机自动启动</span></span><br></pre></td></tr></table></figure><p><strong>修改Docker配置（可选）（来自<a href="https://u.sb/debian-install-docker/">烧饼博客</a>）</strong></p><p>以下配置会增加一段自定义内网 IPv6 地址，开启容器的 IPv6 功能，以及限制日志文件大小，防止 Docker 日志塞满硬盘（泪的教训）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/docker/daemon.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    &quot;log-driver&quot;: &quot;json-file&quot;,</span></span><br><span class="line"><span class="string">    &quot;log-opts&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;max-size&quot;: &quot;20m&quot;,</span></span><br><span class="line"><span class="string">        &quot;max-file&quot;: &quot;3&quot;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    &quot;ipv6&quot;: true,</span></span><br><span class="line"><span class="string">    &quot;fixed-cidr-v6&quot;: &quot;fd00:dead:beef:c0::/80&quot;,</span></span><br><span class="line"><span class="string">    &quot;experimental&quot;:true,</span></span><br><span class="line"><span class="string">    &quot;ip6tables&quot;:true</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>然后重启 Docker 服务：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h4 id="5-2-2-非大陆服务器Docker-compose安装"><a href="#5-2-2-非大陆服务器Docker-compose安装" class="headerlink" title="5.2.2 非大陆服务器Docker-compose安装"></a>5.2.2 <strong>非大陆服务器Docker-compose安装</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/1.29.2/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose --version  <span class="comment">#查看docker-compose版本</span></span><br></pre></td></tr></table></figure><h4 id="5-2-3-国内服务器安装docker"><a href="#5-2-3-国内服务器安装docker" class="headerlink" title="5.2.3 国内服务器安装docker"></a>5.2.3 <strong>国内服务器安装docker</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -sSL https://get.daocloud.io/docker | sh</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker -v  <span class="comment">#查看docker版本</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker  <span class="comment"># 设置开机自动启动</span></span><br></pre></td></tr></table></figure><p><strong>修改Docker配置（可选）（来自<a href="https://u.sb/debian-install-docker/">烧饼博客</a>）</strong></p><p>以下配置会增加一段自定义内网 IPv6 地址，开启容器的 IPv6 功能，以及限制日志文件大小，防止 Docker 日志塞满硬盘（泪的教训）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/docker/daemon.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    &quot;log-driver&quot;: &quot;json-file&quot;,</span></span><br><span class="line"><span class="string">    &quot;log-opts&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;max-size&quot;: &quot;20m&quot;,</span></span><br><span class="line"><span class="string">        &quot;max-file&quot;: &quot;3&quot;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    &quot;ipv6&quot;: true,</span></span><br><span class="line"><span class="string">    &quot;fixed-cidr-v6&quot;: &quot;fd00:dead:beef:c0::/80&quot;,</span></span><br><span class="line"><span class="string">    &quot;experimental&quot;:true,</span></span><br><span class="line"><span class="string">    &quot;ip6tables&quot;:true</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>然后重启 Docker 服务：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h4 id="5-2-4-国内服务器安装docker-compose"><a href="#5-2-4-国内服务器安装docker-compose" class="headerlink" title="5.2.4 国内服务器安装docker-compose"></a>5.2.4 <strong>国内服务器安装docker-compose</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -L https://get.daocloud.io/docker/compose/releases/download/v2.1.1/docker-compose-`<span class="built_in">uname</span> -s`-`<span class="built_in">uname</span> -m` &gt; /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line">docker-compose --version  <span class="comment">#查看docker-compose版本</span></span><br></pre></td></tr></table></figure><h3 id="5-3-安装NginxProxyManager"><a href="#5-3-安装NginxProxyManager" class="headerlink" title="5.3 安装NginxProxyManager"></a>5.3 安装NginxProxyManager</h3><p>参考这边的内容：<a href="https://blog.laoda.de/archives/nginxproxymanager">https://blog.laoda.de/archives/nginxproxymanager</a></p><h3 id="5-4-创建安装目录"><a href="#5-4-创建安装目录" class="headerlink" title="5.4 创建安装目录"></a>5.4 创建安装目录</h3><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/microbin</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/microbin</span><br></pre></td></tr></table></figure><p>这边我们直接用docker的方式安装。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure><p>英文输入法下，按<code>i</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.5&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">microbin:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">danielszabo99/microbin:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">microbin</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MICROBIN_HIGHLIGHTSYNTAX=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MICROBIN_HASH_IDS=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MICROBIN_EDITABLE=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MICROBIN_PRIVATE=false</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MICROBIN_HIDE_FOOTER=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MICROBIN_HELP=true</span></span><br><span class="line">   <span class="comment">#  - MICROBIN_FOOTER_TEXT=gugu</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MICROBIN_HIDE_HEADER=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MICROBIN_HIDE_LOGO=false</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MICROBIN_NO_ETERNAL_PASTA=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MICROBIN_NO_FILE_UPLOAD=false</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MICROBIN_NO_LISTING=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MICROBIN_THREADS=2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MICROBIN_TITLE=free-bin</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MICROBIN_PUBLIC_PATH=https://paste.gugu.ovh/</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MICROBIN_QR=true</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8080</span><span class="string">:8080</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./microbin-data:/app/pasta_data</span></span><br></pre></td></tr></table></figure><p>按一下<code>esc</code>，然后<code>:wq</code> 保存退出，之后，</p><p>最后：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/microbin    <span class="comment"># 来到dockercompose文件所在的文件夹下</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><h3 id="5-5-打开服务器防火墙并访问网页"><a href="#5-5-打开服务器防火墙并访问网页" class="headerlink" title="5.5 打开服务器防火墙并访问网页"></a>5.5 打开服务器防火墙并访问网页</h3><p>打开防火墙的端口<code>8080</code></p><p>腾讯云打开方法如下：</p><img src="https://img.laoda.de/i/2022/06/30/zlio5h-2.webp" alt="image-20220630215240864" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/06/30/10h3dqt-2.webp" alt="image-20220630220546335" style="zoom:33%;" /><p>图中示例填的是<code>5230</code>，备注填的是<code>memos</code>，这边我们填<code>8080</code>，示例填<code>microbin</code> ，确定即可（如果你在docker-compose文件里换了<code>8081</code>，这边就需要填<code>8081</code>，以此类推）</p><img src="https://img.laoda.de/i/2022/08/19/o4byqz-2.webp" alt="image-20220819145844555" style="zoom:33%;" /><p>查看端口是否被占用（以<code>8080</code>为例），输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:8080  <span class="comment">#查看8080端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果啥也没出现，表示端口未被占用，我们可以继续下面的操作了～</p><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用（被占用了就修改一下端口，比如改成8081，注意docker命令行里和防火墙都要改）</p><p>理论上我们就可以输入<code>http://ip:8080</code>访问了。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的IP。</p><p>2、遇到访问不了的情况，请再次检查在宝塔面板的防火墙和服务商的后台防火墙是否打开对应了端口。</p></blockquote><p>有的小伙伴可能想搭建起来分享给其他人使用，如果后续想要分享给别人，IP+端口太不优雅了，咕咕建议大家还是搞一个域名，容易记，看起来也更正规一点。这样可以做https，会让网页更安全。（非要IP+端口访问的，可以直接跳到<code>5.6</code>，并且跳过<code>6. 反向代理</code>部分）</p><p>而且<a href="https://loll.cc/ns">namesilo</a>上面xyz后缀的域名一年就7块钱，可以年抛。</p><p>如果想要长期使用，还是建议买com后缀的域名，更加正规一些，可以输入<code>laodade</code>来获得1美元的优惠（不知道现在还有没有）</p><p><a href="https://loll.cc/ns">namesilo</a>自带隐私保护，咕咕一直在用这家，价格也是这些注册商里面比较低的，关键是他家不像其他家域名注册商，没有七七八八的套路！（就是后台界面有些<del>丑</del>古老 &#x3D; &#x3D;）</p><p><a href="https://blog.laoda.de/archives/namesilo">【域名购买】Namesilo优惠码和域名解析教程（附带服务器购买推荐和注意事项）</a></p><p>我们接着往下看！</p><h3 id="5-6-更新"><a href="#5-6-更新" class="headerlink" title="5.6 更新"></a>5.6 更新</h3><h4 id="5-6-1-docker-compose部署"><a href="#5-6-1-docker-compose部署" class="headerlink" title="5.6.1 docker-compose部署"></a>5.6.1 docker-compose部署</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/microbin</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/microbin /root/data/docker_data/microbin.archive  <span class="comment"># 万事先备份，以防万一，其实这边没必要，因为我们没有映射到本地文件夹</span></span><br><span class="line"></span><br><span class="line">docker-compose pull</span><br><span class="line"></span><br><span class="line">docker-compose up -d    <span class="comment"># 请不要使用docker-compose stop来停止容器，因为这么做需要额外的时间等待容器停止；docker-compose up -d直接升级容器时会自动停止并立刻重建新的容器，完全没有必要浪费那些时间。</span></span><br><span class="line"></span><br><span class="line">docker image prune  <span class="comment"># prune 命令用来删除不再使用的 docker 对象。删除所有未被 tag 标记和未被容器使用的镜像</span></span><br></pre></td></tr></table></figure><p>提示：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WARNING! This will remove all dangling images.</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] </span><br></pre></td></tr></table></figure><p>输入<code>y</code></p><p>利用Docker搭建的应用，更新非常容易～</p><h3 id="5-7-卸载"><a href="#5-7-卸载" class="headerlink" title="5.7 卸载"></a>5.7 卸载</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/microbin</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/microbin  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>可以卸载得很干净。</p><h2 id="6-反向代理"><a href="#6-反向代理" class="headerlink" title="6. 反向代理"></a>6. 反向代理</h2><h3 id="6-1-利用Nginx-Proxy-Manager"><a href="#6-1-利用Nginx-Proxy-Manager" class="headerlink" title="6.1 利用Nginx Proxy Manager"></a>6.1 利用Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p><img src="https://img.laoda.de/i/2022/10/16/n6t02e-2.webp" alt="image-20221016140213282"></p><p>之后，登陆Nginx Proxy Manager（不会的看这个：<strong>安装Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称NPM）会用到<code>80</code>、<code>443</code>端口，所以本机不能占用（比如原来就有Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom: 33%;" /><p><img src="https://img.laoda.de/i/2022/10/16/n7b9hm-2.webp" alt="image-20221016140258381"></p><blockquote><p> 注意填写对应的<code>域名</code>、<code>IP</code>和<code>端口</code>，按文章来的话，应该是<code>8080</code></p></blockquote><p><strong>IP填写：</strong></p><p>如果Nginx Proxy Manager和MicroBin在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的Docker容器内部IP。</p><p><img src="https://img.laoda.de/i/2022/09/29/pcdnz5-2.webp"></p><p>否则直接填<code>microbin</code>所在的服务器IP就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom: 33%;" /><p>再次打开，勾选这些：</p><p><img src="https://img.laoda.de/i/2022/10/16/n7nn6e-2.webp" alt="image-20221016140356324"></p><p>然后就可以用域名来安装访问了。</p><h3 id="6-2-利用宝塔面板"><a href="#6-2-利用宝塔面板" class="headerlink" title="6.2 利用宝塔面板"></a>6.2 利用宝塔面板</h3><p>发现还是有不少小伙伴习惯用宝塔面板，这边也贴一个宝塔面板的反代配置：</p><p>直接新建一个站点，不要数据库，不要php，纯静态即可。</p><p>然后打开下面的配置，修改Nginx的配置。</p><p><img src="https://img.laoda.de/i/2022/08/19/ov4xrt-2.webp" alt="image-20220819150345725"></p><p><img src="https://img.laoda.de/i/2022/08/19/owbbkb-2.webp" alt="image-20220819150542867"></p><p>代码如下：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:8080/;       <span class="comment"># 注意改成你实际使用的端口</span></span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此方法对90%的反向代理都能生效。</p><p>有同学可能会问，为什么不直接用宝塔自带的反向代理功能。</p><p><img src="https://img.laoda.de/i/2022/08/19/oxf800-2.webp" alt="image-20220819150730128"></p><p>也可以，不过咕咕自己之前遇到过当有多个网站需要反代的时候，在这边设置会报错的情况 &#x3D; &#x3D; </p><p>所以后来就不用了，直接用上面的方法来操作了。</p><h2 id="7-使用教程"><a href="#7-使用教程" class="headerlink" title="7. 使用教程"></a>7. 使用教程</h2><h3 id="7-1-安装和配置"><a href="#7-1-安装和配置" class="headerlink" title="7.1 安装和配置"></a>7.1 安装和配置</h3><p>见咕咕的视频。</p><h2 id="8-目前遇到的问题"><a href="#8-目前遇到的问题" class="headerlink" title="8. 目前遇到的问题"></a>8. 目前遇到的问题</h2><h3 id="8-1-页脚的自定义部分无法加入超链接"><a href="#8-1-页脚的自定义部分无法加入超链接" class="headerlink" title="8.1 页脚的自定义部分无法加入超链接"></a>8.1 页脚的自定义部分无法加入超链接</h3><p>做了各种尝试，还是不行 &#x3D; &#x3D;</p><h2 id="9-结尾"><a href="#9-结尾" class="headerlink" title="9. 结尾"></a>9. 结尾</h2><p>祝大家用得开心，有问题可以去GitHub提<a href="https://github.com/szabodanika/microbin/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，项目处于刚开始阶段，有能力给项目做贡献的同学，也欢迎积极加入到<a href="https://github.com/szabodanika/microbin">项目</a>中来，贡献自己的一份力量！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>咕咕的Demo：<a href="https://paste.gugu.ovh/">https://paste.gugu.ovh/</a><br>文档：<a href="https://microbin.eu/documentation/">https://microbin.eu/documentation/</a><br>GitHub源码：<a href="https://github.com/szabodanika/microbin">https://github.com/szabodanika/microbin</a><br>Docker镜像：<a href="https://hub.docker.com/r/danielszabo99/microbin">https://hub.docker.com/r/danielszabo99/microbin</a><br>捐助：<a href="https://microbin.eu/donate/">https://microbin.eu/donate/</a><br>问题反馈：<a href="https://github.com/szabodanika/microbin/issues">https://github.com/szabodanika/microbin/issues</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 百度网盘 </tag>
            
            <tag> microbin </tag>
            
            <tag> paste </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【VPS黑五促销】HostHatch——大硬盘VPS，$65/3年，1核/1G/1T HDD/10Gbps@10T流量，荷兰/中国香港/洛杉矶等16个机房</title>
      <link href="/archives/hosthatch-bf-2022-01/"/>
      <url>/archives/hosthatch-bf-2022-01/</url>
      
        <content type="html"><![CDATA[<h3 id="推荐阅读："><a href="#推荐阅读：" class="headerlink" title="推荐阅读："></a>推荐阅读：</h3><p><a href="https://blog.laoda.de/archives/vps-hosthatch">【VPS选购分享】HostHatch——目前看过的最高性价比大盘鸡</a></p><hr><p><strong>注意这家便宜是便宜但是工单回复非常慢！</strong></p><p>HostHatch的2022年黑五开始了，大硬盘存储VPS，$65&#x2F;3年，1核&#x2F;1G&#x2F;1T HDD&#x2F;10Gbps@10T流量，可选纽约、洛杉矶、芝加哥、阿姆斯特丹、斯德哥尔摩，值得注意的是开通时间，需要1周。此外<strong>香港、新加坡，大硬盘VPS</strong>，一次性买2年，给双倍内存；香港开通需要1周，新加坡开通需要2周。</p><p><img src="https://img.laoda.de/i/2022/11/25/fc8lu1-2.webp" alt="image-20221125092751731"></p><h4 id="1、活动内容"><a href="#1、活动内容" class="headerlink" title="1、活动内容"></a>1、活动内容</h4><p>官网，<a href="https://hosthatch.com/a?id=2978">https://hosthatch.com</a></p><p><strong>活动链接：<a href="https://cloud.hosthatch.com/a/2978">https://cloud.hosthatch.com/sale/bf2022</a>（请直接复制活动链接购买）</strong></p><p>95折优惠码：<a href="https://cloud.hosthatch.com/a/2978">THANKYOU</a></p><h4 id="2、大硬盘存储VPS-可选纽约-洛杉矶-芝加哥-阿姆斯特丹-斯德哥尔摩"><a href="#2、大硬盘存储VPS-可选纽约-洛杉矶-芝加哥-阿姆斯特丹-斯德哥尔摩" class="headerlink" title="2、大硬盘存储VPS - 可选纽约&#x2F;洛杉矶&#x2F;芝加哥&#x2F;阿姆斯特丹&#x2F;斯德哥尔摩"></a>2、大硬盘存储VPS - 可选纽约&#x2F;洛杉矶&#x2F;芝加哥&#x2F;阿姆斯特丹&#x2F;斯德哥尔摩</h4><p>一次性买3年，配置双倍内存、双倍流量，开通时间，需要1周！</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>硬盘</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1核</td><td>0.5G</td><td>1T</td><td>5T&#x2F;月</td><td>$65&#x2F;3年</td><td><strong><a href="https://cloud.hosthatch.com/a/2978">链接</a></strong></td></tr><tr><td>1核</td><td>1G</td><td>2T</td><td>10T&#x2F;月</td><td>$110&#x2F;3年</td><td><strong><a href="https://cloud.hosthatch.com/a/2978">链接</a></strong></td></tr><tr><td>2核</td><td>1.5G</td><td>10T</td><td>20T&#x2F;月</td><td>$300&#x2F;2年</td><td><strong><a href="https://cloud.hosthatch.com/a/2978">链接</a></strong></td></tr></tbody></table><h4 id="3、香港-新加坡-大硬盘VPS"><a href="#3、香港-新加坡-大硬盘VPS" class="headerlink" title="3、香港&#x2F;新加坡 大硬盘VPS"></a>3、香港&#x2F;新加坡 大硬盘VPS</h4><p>配置如下，买2年，双倍内存；香港开通需要1周，新加坡开通需要2周！！</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>硬盘</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1核</td><td>0.5G</td><td>1T</td><td>1T&#x2F;月</td><td>$60&#x2F;2年</td><td><strong><a href="https://cloud.hosthatch.com/a/2978">链接</a></strong></td></tr><tr><td>1核</td><td>1G</td><td>2T</td><td>2T&#x2F;月</td><td>$100&#x2F;2年</td><td><strong><a href="https://cloud.hosthatch.com/a/2978">链接</a></strong></td></tr><tr><td>2核</td><td>1.5G</td><td>3T</td><td>3T&#x2F;月</td><td>$160&#x2F;2年</td><td><strong><a href="https://cloud.hosthatch.com/a/2978">链接</a></strong></td></tr></tbody></table><h4 id="4、Intel-E5-CPU-NVMe-VPS"><a href="#4、Intel-E5-CPU-NVMe-VPS" class="headerlink" title="4、Intel E5 CPU + NVMe VPS"></a>4、Intel E5 CPU + NVMe VPS</h4><p>数据中心：阿姆斯特丹、斯德哥尔摩、洛杉矶、米兰、马德里、华沙、纽约、苏黎世</p><p>一次性买2年，给双倍硬盘、给双倍流量。开通时间，需要1周</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>NVMe</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>2核</td><td>8G</td><td>30G</td><td>3T&#x2F;月</td><td>$60&#x2F;2年</td><td><strong><a href="https://cloud.hosthatch.com/a/2978">链接</a></strong></td></tr><tr><td>3核</td><td>16G</td><td>60G</td><td>6T&#x2F;月</td><td>$120&#x2F;2年</td><td><strong><a href="https://cloud.hosthatch.com/a/2978">链接</a></strong></td></tr></tbody></table><h4 id="5、AMD-EPYC-NVMe-VPS"><a href="#5、AMD-EPYC-NVMe-VPS" class="headerlink" title="5、AMD EPYC + NVMe VPS"></a>5、AMD EPYC + NVMe VPS</h4><p>可选数据中心：香港、东京、新加坡、悉尼、芝加哥、洛杉矶、维也纳、苏黎世、阿姆斯特丹、斯德哥尔摩、</p><p>芝加哥、洛杉矶、维也纳、苏黎世、阿姆斯特丹、斯德哥尔摩、悉尼 - 1周时间开通。</p><p><em>香港、新加坡、东京、纽约 - 预计2周时间来开通。</em></p><p>4G内存购买2年，多+1G内存，2倍流量</p><p>8G内存版购买2年，多+2G内存，2倍流量</p><p>16G内存版购买2年，多+4G内存，2倍流量</p><p>如果选亚太地区，4G内存+1T流量&#x2F;月，8G内存+2T流量&#x2F;月，16G内存+4T流量&#x2F;月。</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>NVMe</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>2核</td><td>4G</td><td>30G</td><td>5T&#x2F;月</td><td>$35&#x2F;年</td><td><strong><a href="https://cloud.hosthatch.com/a/2978">链接</a></strong></td></tr><tr><td>3核</td><td>8G</td><td>60G</td><td>10T&#x2F;月</td><td>$70&#x2F;年</td><td><strong><a href="https://cloud.hosthatch.com/a/2978">链接</a></strong></td></tr><tr><td>4核</td><td>16G</td><td>100G</td><td>20T&#x2F;月</td><td>$125&#x2F;年</td><td><strong><a href="https://cloud.hosthatch.com/a/2978">链接</a></strong></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 美国VPS </tag>
            
            <tag> Hosthatch </tag>
            
            <tag> 欧洲VPS </tag>
            
            <tag> 大盘鸡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【VPS黑五促销】LiteServer——荷兰老商家，口碑很好，黑五终身4折，荷兰大硬盘VPS ，500G HDD月付€2.4， 1T HDD月付€4.8</title>
      <link href="/archives/liteserver-bf-2022-01/"/>
      <url>/archives/liteserver-bf-2022-01/</url>
      
        <content type="html"><![CDATA[<p>LiteServer发布2022年黑五活动，这是一家成立于2007年的荷兰服务商，非常稳，口碑也很好。唯一缺点是线路对国内不是非常友好，建站可以考虑用<a href="https://blog.laoda.de/archives/olink?cid=4657">欧洲9929</a>或者<a href="https://blog.laoda.de/archives/saltyfish-bf-2022-01">GIA</a>反代。</p><p>今年的黑五大硬盘VPS和常规VPS4折促销，记得去年是5折，500G HDD存储VPS月付€2.4，感兴趣的小伙伴可以围观。</p><p><img src="https://img.laoda.de/i/2022/11/25/f6tcky-2.webp" alt="image-20221125091838597"></p><h4 id="1、官网"><a href="#1、官网" class="headerlink" title="1、官网"></a>1、官网</h4><p><strong>网址</strong>：**<a href="https://clients.liteserver.nl/aff.php?aff=503&gid=37">https://www.liteserver.nl</a>**</p><h4 id="2、优惠内容"><a href="#2、优惠内容" class="headerlink" title="2、优惠内容"></a>2、优惠内容</h4><p>终身5折优惠码：<a href="https://clients.liteserver.nl/aff.php?aff=503&gid=37"><strong>2022BLACKFRIDAY</strong></a> （全场通用）</p><h4 id="3、荷兰大硬盘vps"><a href="#3、荷兰大硬盘vps" class="headerlink" title="3、荷兰大硬盘vps"></a>3、荷兰大硬盘vps</h4><p>kvm虚拟，硬盘raid10，默认一个IPv4+&#x2F;64 IPv6，G口带宽！！看了下，系统还没适配debian11！！cpu为AMD AMD EPYC 7452</p><p>以下价格为原价，请使用终身5折优惠码：<a href="https://clients.liteserver.nl/aff.php?aff=503&gid=37"><strong>2022BLACKFRIDAY</strong></a> （全场通用）</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>HDD</strong></th><th><strong>月流量</strong></th><th><strong>IP</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1核</td><td>1.0G</td><td>512G</td><td>15T</td><td>1</td><td>€6&#x2F;月</td><td><strong><a href="https://clients.liteserver.nl/aff.php?aff=503&pid=407">链接</a></strong></td></tr><tr><td>1核</td><td>2.0G</td><td>1024G</td><td>20T</td><td>1</td><td>€12&#x2F;月</td><td><strong><a href="https://clients.liteserver.nl/aff.php?aff=503&pid=408">链接</a></strong></td></tr><tr><td>2核</td><td>3.0G</td><td>1536G</td><td>25T</td><td>1</td><td>€18&#x2F;月</td><td><strong><a href="https://clients.liteserver.nl/aff.php?aff=503&pid=409">链接</a></strong></td></tr><tr><td>2核</td><td>4.0G</td><td>2048G</td><td>30T</td><td>1</td><td>€24&#x2F;月</td><td><strong><a href="https://clients.liteserver.nl/aff.php?aff=503&pid=410">链接</a></strong></td></tr><tr><td>2核</td><td>6.0G</td><td>3072G</td><td>35T</td><td>1</td><td>€36&#x2F;月</td><td><strong><a href="https://clients.liteserver.nl/aff.php?aff=503&pid=411">链接</a></strong></td></tr><tr><td>4核</td><td>8.0G</td><td>4096G</td><td>40T</td><td>1</td><td>€48&#x2F;月</td><td><strong><a href="https://clients.liteserver.nl/aff.php?aff=503&pid=412">链接</a></strong></td></tr><tr><td>4核</td><td>12G</td><td>6144G</td><td>45T</td><td>1</td><td>€72&#x2F;月</td><td><strong><a href="https://clients.liteserver.nl/aff.php?aff=503&pid=413">链接</a></strong></td></tr><tr><td>4核</td><td>16G</td><td>8192G</td><td>50T</td><td>1</td><td>€96&#x2F;月</td><td><strong><a href="https://clients.liteserver.nl/aff.php?aff=503&pid=414">链接</a></strong></td></tr></tbody></table><h4 id="4、NVME-VPS"><a href="#4、NVME-VPS" class="headerlink" title="4、NVME VPS"></a>4、NVME VPS</h4><p>以下价格为原价，请使用终身5折优惠码：<a href="https://clients.liteserver.nl/aff.php?aff=503&gid=37"><strong>2022BLACKFRIDAY</strong></a> （全场通用）</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>NVME</strong></th><th><strong>月流量</strong></th><th><strong>IP</strong></th><th><strong>月付</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>2核</td><td>2.0G</td><td>40G</td><td>15T</td><td>1</td><td>€6</td><td><strong><a href="https://clients.liteserver.nl/aff.php?aff=503&pid=420">链接</a></strong></td></tr><tr><td>4核</td><td>4.0G</td><td>80G</td><td>20T</td><td>1</td><td>€12</td><td><strong><a href="https://clients.liteserver.nl/aff.php?aff=503&pid=421">链接</a></strong></td></tr><tr><td>4核</td><td>8G</td><td>160G</td><td>25T</td><td>1</td><td>€24</td><td><strong><a href="https://clients.liteserver.nl/aff.php?aff=503&pid=422">链接</a></strong></td></tr><tr><td>6核</td><td>16G</td><td>320G</td><td>30T</td><td>1</td><td>€48</td><td><strong><a href="https://clients.liteserver.nl/aff.php?aff=503&pid=423">链接</a></strong></td></tr><tr><td>8核</td><td>24G</td><td>480G</td><td>35T</td><td>1</td><td>€72</td><td><strong><a href="https://clients.liteserver.nl/aff.php?aff=503&pid=424">链接</a></strong></td></tr><tr><td>12核</td><td>832G</td><td>640G</td><td>40T</td><td>1</td><td>€96</td><td><strong><a href="https://clients.liteserver.nl/aff.php?aff=503&pid=425">链接</a></strong></td></tr><tr><td>16核</td><td>48G</td><td>960G</td><td>45T</td><td>1</td><td>€144</td><td><strong><a href="https://clients.liteserver.nl/aff.php?aff=503&pid=426">链接</a></strong></td></tr><tr><td>20核</td><td>164G</td><td>1280G</td><td>50T</td><td>1</td><td>€192</td><td><strong><a href="https://clients.liteserver.nl/aff.php?aff=503&pid=427">链接</a></strong></td></tr></tbody></table><h4 id="5、最后"><a href="#5、最后" class="headerlink" title="5、最后"></a>5、最后</h4><p>荷兰：185.31.172.235，2a01:6340:1:20:3::10，<a href="https://lg-dro.liteserver.nl/1024MB.test">https://lg-dro.liteserver.nl/1024MB.test</a></p>]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 欧洲VPS </tag>
            
            <tag> 高性价比 </tag>
            
            <tag> 稳定 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【VPS黑五促销】斯巴达黑五抢购指南（转载）</title>
      <link href="/archives/spartanhost-bf-2022-01/"/>
      <url>/archives/spartanhost-bf-2022-01/</url>
      
        <content type="html"><![CDATA[<h2 id="前期提要"><a href="#前期提要" class="headerlink" title="前期提要"></a>前期提要</h2><h3 id="推荐阅读："><a href="#推荐阅读：" class="headerlink" title="推荐阅读："></a>推荐阅读：</h3><p><a href="https://blog.laoda.de/archives/spartanhost">【VPS测评】斯巴达 AMD 黑五31刀测评</a></p><p><a href="https://blog.laoda.de/archives/vps-route">【VPS选购小常识】VPS线路解析不完全指南 什么是CN2 GIA？什么是AS9929、AS4837？什么是CU VIP？什么是移动CMI？如何判断回程路由？</a></p><hr><h3 id="11月26日更新"><a href="#11月26日更新" class="headerlink" title="11月26日更新"></a>11月26日更新</h3><blockquote><p>4.No. We are only doing the 2Gb and higher plans with the black friday promo.</p></blockquote><p>低配今年无优惠了。</p><p>需要买2G内存及以上款才有黑五优惠（E5: <code>BF2022-50</code> AMD: <code>BF2022-45</code>），而且似乎不给降低配置！最重要的是，丫的放货量贼少！耍猴！</p><p><img src="https://img.laoda.de/i/2022/11/26/bs03ek-2.webp"></p><p><img src="https://img.laoda.de/i/2022/11/26/bsnq09-2.webp"></p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>感谢<a href="https://hostloc.com/space-uid-53529.html">@kras</a>  来源：<a href="https://hostloc.com/thread-1102934-1-1.html">hostloc</a></p><p>今年的双十一和黑五都是平平淡淡，也就 iON、斯巴达、Ksle等少数几个值得期待一下了。<br>估计今年等斯巴达的人会很多，今晚过了12点黑五就要正式开始了，准备抢斯巴达黑五的老铁提前准备。<br>以下带新人科普及罗列下抢购事项，大多是根据以往黑五规律的总结，不一定100%全不变。</p><p><strong>斯巴达黑五活动有两种，一种是闪购鸡，一种半价鸡</strong>。</p><p><strong>闪购鸡</strong>就是常说的36刀、48刀这种传家宝，一般溢价都是天价。闪购在lowendtalk.com的黑五线程贴参加活动，老板也会把闪购的活动链接放到Disc群。闪购鸡很少，每年一共只放几十个。属于骨折级幸运购，抢到就是赚到，一般都是几秒就无，这种鸡只能拼运气，2022flash帖链接已出，许多常见商家flash骨折活动都在这个帖子里抢：<a href="https://lowendtalk.com/discussion/182485/black-friday-cyber-monday-official-megathread-flash-sale-2022/">https://lowendtalk.com/discussion/182485/black-friday-cyber-monday-official-megathread-flash-sale-2022/</a> (lowendtalk邮件通知的，但现在还打不开)</p><p><strong>半价鸡</strong>一般就是就是大家说的24刀、31刀。在官网用优惠码下单: E5款一般是半价5折码，1G款对标常提到的24刀。AMD款一般放55折码，1G款对标常提到的31刀，半价鸡只要多熬熬夜一般就能蹲到，与秒无的闪购拼手速相比，比较现实，也比较划算。半价鸡是斯巴达黑五活动的主菜。E5款比较便宜，硬盘也小点，AMD款相当于硬件升级版，CPU和硬盘都好些。两者网络一样都是4837，只不过硬件母鸡不同。</p><h3 id="抢单地址及黑五优惠码（推测）"><a href="#抢单地址及黑五优惠码（推测）" class="headerlink" title="抢单地址及黑五优惠码（推测）"></a>抢单地址及黑五优惠码（推测）</h3><p><strong>E5抢单地址</strong> ：<a href="https://billing.spartanhost.net/aff.php?aff=1336&gid=25">E5抢单</a></p><p><strong>AMD抢单地址</strong> ：<a href="https://billing.spartanhost.net/aff.php?aff=1336&gid=12">AMD抢单</a></p><p>斯巴达半价码每年也比较规律，比如以往是：<br>2020年黑五：E5: <code>BF2020-50</code>  AMD: <code>BF2020-45</code><br>2021年黑五：E5: <code>BF2021-50</code>  AMD: <code>BF2021-45</code><br>如果老板不别出心栽玩花样的话，预计2022年的黑五码就是：<br><strong>E5:</strong>  <code>BF2022-50</code>   <strong>AMD:</strong>  <code>BF2022-45</code></p><p>如果按照以往，斯巴达黑五这三天左右，每天凌晨都会来一波半价，放货时间是随机的，需要熬夜蹲点等。<br>具体时间未知。之所以要在北京时间凌晨搞，老板去年就说了是按照他们上班的伦敦时间来搞的。</p><h3 id="提前准备"><a href="#提前准备" class="headerlink" title="提前准备"></a><strong>提前准备</strong></h3><p>1、有账号的在抢购前最好也提前先登录好，没账号的提前准备账号。这个没什么好多说的，一般抢鸡的时候才注册大多数是抢不到的。斯巴达注册：<a href="https://billing.spartanhost.net/aff.php?aff=1336">点击注册</a> </p><p>值得一提的是斯巴达第一次注册下单的时候尽量别用梯子，容易订单被判“订单欺诈”<br>申请工单能解除但比较麻烦，尽量用本地IP，地址看起来尽量真实点，第一次下单少点麻烦。之后就随意了。</p><p>2、下载并注册个Discord的，这个很重要，老板一般在工作群放消息，接受一手消息，斯巴达Discord群：<a href="https://discord.gg/GXBrXvR8">https://discord.gg/GXBrXvR8</a></p><p>3、不方便使用Disc的老铁，也可以关注斯巴达的推特，斯巴达一般先在推特上推送黑五码，推特接收灵敏的老铁可以关注官网推帖: <a href="https://twitter.com/SpartanHost">https://twitter.com/SpartanHost</a></p><p>4、黑五期间不断刷刷闪购线程，万一中了闪购骨折鸡呢：(目前没打不开，估计还未正式开放)<br><a href="https://lowendtalk.com/discussion/182485/black-friday-cyber-monday-official-megathread-flash-sale-2022/">https://lowendtalk.com/discussion/182485/black-friday-cyber-monday-official-megathread-flash-sale-2022/</a></p><p>此外，有的老铁可能知道，去年斯巴达的老板 搞过常规机申请工单改成黑五半价，但是搞了两天后后面那天就不给改了，估计是申请修改的MJJ太多了给老板弄烦了。有的老铁今年还等着工单改的，我觉得今年给改的可能性不大。</p><blockquote><p>PS： 这是去年放的黑五半价码，仅供参考。今年的估计是：<strong>E5:</strong>  <code>BF2022-50</code>   <strong>AMD:</strong>  <code>BF2022-45</code></p></blockquote><p><img src="https://img.laoda.de/i/2022/11/24/si1pov-2.webp" alt="img"></p><p><img src="https://img.laoda.de/i/2022/11/24/si10e2-2.webp" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 美国VPS </tag>
            
            <tag> 斯巴达 </tag>
            
            <tag> 抗DDOS </tag>
            
            <tag> AS4837 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【VPS黑五促销】SaltyFish(咸鱼云)黑五 ，德国CN2 GIA VPS季付及以上85折，获赠额外30%流量</title>
      <link href="/archives/saltyfish-bf-2022-01/"/>
      <url>/archives/saltyfish-bf-2022-01/</url>
      
        <content type="html"><![CDATA[<p><a href="https://portal.saltyfish.io/aff.php?aff=320">SaltyFish</a>（咸鱼云）发布了一个德国CN2 GIA VPS的黑五优惠，季付及以上周期 85 折，在促销期间下单可获赠额外 30% 流量，路由为三网去程优化， 回程CN2 GIA， 市面上比较靠谱的欧洲CN2 GIA机型！</p><p>咕咕目前自用款：</p><p><img src="https://img.laoda.de/i/2022/11/23/tsb1xa-2.webp" alt="image-20221123180103978"></p><p><img src="https://img.laoda.de/i/2022/11/23/tsff4q-2.webp" alt="image-20221123180124398"></p><p>流量是600G的，这次黑五促销流量获赠额外 30% 流量，流量780G</p><p>不过咕咕这款比较便宜，半年29.38刀，黑五的算下来是34.68刀。性价比还是不错的，和<a href="https://blog.laoda.de/archives/vps-bandwagonhost">搬瓦工</a>的DC6以及DC9是一样的三网回程<a href="https://blog.laoda.de/archives/cn2">GIA</a>，晚高峰速度有保证。</p><p><img src="https://img.laoda.de/i/2022/11/23/ttmoy2-2.webp" alt="image-20221123180326292"></p><p>搬瓦工的DC6以及DC9适合拉美洲的线路拉胯的机器，咸鱼云的这个适合拉欧洲的线路一般的机器（比如<a href="https://blog.laoda.de/archives/ovh-sys-2-sat-32-waw">OVH法国</a>、<a href="https://loll.cc/netcup">Netcup</a>、<a href="https://loll.cc/hz">Hetzner</a>）</p><p>说白了，就是用来<a href="https://blog.laoda.de/archives/nginxproxymanager">反向代理</a>的！</p><h4 id="1、官网"><a href="#1、官网" class="headerlink" title="1、官网"></a>1、官网</h4><p><strong>网址：<a href="https://portal.saltyfish.io/aff.php?aff=320">https://saltyfish.io</a></strong></p><h4 id="2、优惠码"><a href="#2、优惠码" class="headerlink" title="2、优惠码"></a>2、优惠码</h4><p>季付及以上周期85折: <a href="https://portal.saltyfish.io/aff.php?aff=320">FRA-P-QJ7V7AAQEP</a></p><p>优惠有效期: 2022.11.22 - 2022.11.27</p><p>在促销期间下单:</p><p>+ 获赠额外 30% 流量</p><h4 id="3、德国CN2-GIA-VPS套餐"><a href="#3、德国CN2-GIA-VPS套餐" class="headerlink" title="3、德国CN2 GIA VPS套餐"></a>3、德国CN2 GIA VPS套餐</h4><p>三网去程优化， 回程CN2 GIA。</p><p>Looking Glass: <a href="https://lg.saltyfish.io/">https://lg.saltyfish.io/</a></p><p>IPv4: 31.25.88.20</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>SSD</strong></th><th><strong>月流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1G</td><td>1核</td><td>10G</td><td>780G</td><td>$6.8&#x2F;月</td><td><a href="https://portal.saltyfish.io/aff.php?aff=320&gid=14"><strong>链接</strong></a></td></tr><tr><td>2G</td><td>1核</td><td>15G</td><td>1.5T</td><td>$14&#x2F;月</td><td><strong><a href="https://portal.saltyfish.io/aff.php?aff=320&gid=14">链接</a></strong></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 欧洲VPS </tag>
            
            <tag> CN2 GIA </tag>
            
            <tag> 反向代理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩儿的Docker项目】10分钟搭建一个开源办公套件——LibreOffice</title>
      <link href="/archives/docker-compose-install-libreoffice/"/>
      <url>/archives/docker-compose-install-libreoffice/</url>
      
        <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><p><strong>什么是 LibreOffice ？</strong></p><blockquote><p><code>LibreOffice</code> 是一款开放源代码的自由免费全能办公软件，可运行于 <code>Microsoft Windows</code>, <code>GNU/Linux</code> 以及 <code>macOS</code> 等操作系统上。它包含了 <code>Writer</code>, <code>Calc</code>, <code>Impress</code>, <code>Draw</code>, <code>Math</code> 以及 <code>Base</code> 等组件，可分别用于文本文档、电子表格、幻灯片演示文稿、绘图文档、数学公式编辑、数据库管理等工作。</p></blockquote><p>简而言之，就是我们日常使用的微软的Office的开源版本。</p><h3 id="1-1-相关地址"><a href="#1-1-相关地址" class="headerlink" title="1.1 相关地址"></a>1.1 相关地址</h3><p>GitHub：<a href="https://github.com/LibreOffice">https://github.com/LibreOffice</a></p><p>Docker镜像：<a href="https://hub.docker.com/r/linuxserver/libreoffice">https://hub.docker.com/r/linuxserver/libreoffice</a></p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p>看起来略显古老 &#x3D; &#x3D;</p><p><img src="https://img.laoda.de/i/2022/11/08/p6s59j-2.webp" alt="7bdd37336b82dc49e620b9e7ab2584ce.png"></p><p><img src="https://img.laoda.de/i/2022/11/08/p3st32-2.webp" alt="f8c8244dae6e0baf4a120859b9b95268.png"></p><p><img src="https://img.laoda.de/i/2022/11/08/p3j735-2.webp" alt="f287c00498983cf7136e4da853549cc4.png"></p><p>这边直接丢出搭建的docker-compose.yaml文件，熟悉docker环境的小伙伴可以直接拷贝搭建。</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;2.1&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">libreoffice:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">linuxserver/libreoffice:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">libreoffice</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PUID=1000</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PGID=1000</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./config:/config</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">3536</span><span class="string">:3000</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br></pre></td></tr></table></figure><p>以下是详细搭建教程。</p><h2 id="3-搭建环境"><a href="#3-搭建环境" class="headerlink" title="3. 搭建环境"></a>3. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器24元&#x2F;月VPS一台</del>咕咕自己搭建用的是<a href="https://blog.laoda.de/archives/ovh-sys-2-sat-32-waw">OVH的独立服务器</a>，演示用的是<a href="https://blog.laoda.de/archives/vps-buyvm">卢森堡的BuyVM</a>，如果你只是小范围使用，可以考虑用<a href="https://loll.cc/tx">腾讯轻量购买链接</a>的服务器，（最好是选<strong>非大陆（香港）的服务器</strong>）如果是小白刚开始玩的话，还可以购买<a href="https://blog.laoda.de/archives/cheap-vps-racknerd">Racknerd</a>的服务器，最低一年不到100块（不过这个建议选择1G内存以上的机器）（Racknerd服务器介绍：<a href="https://blog.laoda.de/archives/cheap-vps-racknerd">点击查看</a>）</li><li>系统：Debian 10（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本</a> 非必需DD用原来的系统也OK，之后教程都是用Debian或者Ubuntu搭建～）</li><li>安装好Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需但建议】域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>【非必需】提前安装好宝塔面板海外版本aapanel，并安装好Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程选用】安装好Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><h3 id="3-1-注意点："><a href="#3-1-注意点：" class="headerlink" title="3.1 注意点："></a>3.1 注意点：</h3><blockquote><p>此项目镜像1.32GB，不建议硬盘5G以下的VPS搭建 &#x3D; &#x3D;  国内服务器搭建的话，因为带宽只有3M、5M，下载镜像会非常花时间，请耐心等待。</p></blockquote><h2 id="4-搭建视频"><a href="#4-搭建视频" class="headerlink" title="4. 搭建视频"></a>4. 搭建视频</h2><p>YouTube：</p><p>哔哩哔哩【高清版本可以点击去吐槽到B站观看】：<joe-bilibili bvid=""></joe-bilibili></p><h2 id="5-搭建方式"><a href="#5-搭建方式" class="headerlink" title="5. 搭建方式"></a>5. 搭建方式</h2><h3 id="安装系统（腾讯云轻量应用服务器）"><a href="#安装系统（腾讯云轻量应用服务器）" class="headerlink" title="安装系统（腾讯云轻量应用服务器）"></a>安装系统（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlyhcz-2.webp" alt="e59713fba8726d3cb55ae11bca83fe3c.png"></p><p>腾讯云轻量服务器最大的特点就是“轻量”，相比CVM，更适合小白上手，这边我们之间选择Docker基础镜像，就可以省去后面安装Docker的步骤（如果你非要用国内的服务器，这边装的Docker镜像还会帮你配置好国内镜像源，让你加速访问docker镜像资源）。</p><h3 id="登陆（腾讯云轻量应用服务器）"><a href="#登陆（腾讯云轻量应用服务器）" class="headerlink" title="登陆（腾讯云轻量应用服务器）"></a>登陆（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlzlj7-2.webp" alt="2722040ee311eb4a9ebf2a4945bf38f4.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm0gv8-2.webp" alt="c0b5d360053746c4095d592967ee401f.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm1vqw-2.webp" alt="e0ba858f021b846ad0abc27acf5008c2.png"></p><h3 id="5-1-服务器前期配置"><a href="#5-1-服务器前期配置" class="headerlink" title="5.1 服务器前期配置"></a>5.1 服务器前期配置</h3><p>服务器初始设置，参考：</p><p><a href="https://blog.laoda.de/archives/vps-script"><strong>新买了一台服务器“必须”要做的6件小事</strong></a></p><p><a href="https://blog.laoda.de/archives/how-to-secure-a-linux-server"><strong>保护好你的小鸡！保姆级服务器安全教程！</strong></a></p><p>这边由于我们用的是腾讯云轻量应用服务器，系统默认就帮我们创建了名字是<code>lighthouse</code>的用户，系统后台也有防火墙（默认就开了几个常用的端口）</p><p>对小白用户来说，可以不用再去管繁琐的服务器安全的配置，大大降低了服务器防护的门槛。</p><p><a href="https://blog.laoda.de/archives/hello-docker">【Docker系列】不用宝塔面板，小白一样可以玩转VPS服务器！</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i <span class="comment"># 切换到root用户</span></span><br><span class="line"></span><br><span class="line">apt update -y  <span class="comment"># 升级packages</span></span><br><span class="line"></span><br><span class="line">apt install wget curl sudo vim git -y  <span class="comment"># Debian系统比较干净，安装常用的软件</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：VPS的内存如果过小，建议设置一下SWAP，一般为内存的1-1.5倍即可，可以让系统运行更流畅！</p></blockquote><p>设置SWAP可以用脚本:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O box.sh https://raw.githubusercontent.com/BlueSkyXN/SKY-BOX/main/box.sh &amp;&amp; <span class="built_in">chmod</span> +x box.sh &amp;&amp; clear &amp;&amp; ./box.sh</span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2022/05/28/uoikkd-0.webp" alt="image-20220528185512488" style="zoom:50%;" /><p>选择<code>18</code>，然后输入你想要扩容的数值即可。</p><img src="https://img.laoda.de/i/2022/05/28/up2dkf-0.webp" alt="image-20220528185604586" style="zoom:50%;" /><p>使用腾讯云轻量应用服务器的小伙伴可以直接跳到<code>5.2.4</code></p><h3 id="5-2-安装Docker（使用腾讯云轻量应用服务器可跳过这一部分）"><a href="#5-2-安装Docker（使用腾讯云轻量应用服务器可跳过这一部分）" class="headerlink" title="5.2 安装Docker（使用腾讯云轻量应用服务器可跳过这一部分）"></a>5.2 安装Docker（使用腾讯云轻量应用服务器可跳过这一部分）</h3><h4 id="5-2-1-非大陆服务器Docker安装"><a href="#5-2-1-非大陆服务器Docker安装" class="headerlink" title="5.2.1 非大陆服务器Docker安装"></a>5.2.1 <strong>非大陆服务器Docker安装</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -qO- get.docker.com | bash</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker -v  <span class="comment">#查看docker版本</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker  <span class="comment"># 设置开机自动启动</span></span><br></pre></td></tr></table></figure><p><strong>修改Docker配置（可选）（来自<a href="https://u.sb/debian-install-docker/">烧饼博客</a>）</strong></p><p>以下配置会增加一段自定义内网 IPv6 地址，开启容器的 IPv6 功能，以及限制日志文件大小，防止 Docker 日志塞满硬盘（泪的教训）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/docker/daemon.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    &quot;log-driver&quot;: &quot;json-file&quot;,</span></span><br><span class="line"><span class="string">    &quot;log-opts&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;max-size&quot;: &quot;20m&quot;,</span></span><br><span class="line"><span class="string">        &quot;max-file&quot;: &quot;3&quot;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    &quot;ipv6&quot;: true,</span></span><br><span class="line"><span class="string">    &quot;fixed-cidr-v6&quot;: &quot;fd00:dead:beef:c0::/80&quot;,</span></span><br><span class="line"><span class="string">    &quot;experimental&quot;:true,</span></span><br><span class="line"><span class="string">    &quot;ip6tables&quot;:true</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>然后重启 Docker 服务：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h4 id="5-2-2-非大陆服务器Docker-compose安装"><a href="#5-2-2-非大陆服务器Docker-compose安装" class="headerlink" title="5.2.2 非大陆服务器Docker-compose安装"></a>5.2.2 <strong>非大陆服务器Docker-compose安装</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/1.29.2/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose --version  <span class="comment">#查看docker-compose版本</span></span><br></pre></td></tr></table></figure><h4 id="5-2-3-国内服务器安装docker"><a href="#5-2-3-国内服务器安装docker" class="headerlink" title="5.2.3 国内服务器安装docker"></a>5.2.3 <strong>国内服务器安装docker</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -sSL https://get.daocloud.io/docker | sh</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker -v  <span class="comment">#查看docker版本</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker  <span class="comment"># 设置开机自动启动</span></span><br></pre></td></tr></table></figure><p><strong>修改Docker配置（可选）（来自<a href="https://u.sb/debian-install-docker/">烧饼博客</a>）</strong></p><p>以下配置会增加一段自定义内网 IPv6 地址，开启容器的 IPv6 功能，以及限制日志文件大小，防止 Docker 日志塞满硬盘（泪的教训）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/docker/daemon.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    &quot;log-driver&quot;: &quot;json-file&quot;,</span></span><br><span class="line"><span class="string">    &quot;log-opts&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;max-size&quot;: &quot;20m&quot;,</span></span><br><span class="line"><span class="string">        &quot;max-file&quot;: &quot;3&quot;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    &quot;ipv6&quot;: true,</span></span><br><span class="line"><span class="string">    &quot;fixed-cidr-v6&quot;: &quot;fd00:dead:beef:c0::/80&quot;,</span></span><br><span class="line"><span class="string">    &quot;experimental&quot;:true,</span></span><br><span class="line"><span class="string">    &quot;ip6tables&quot;:true</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>然后重启 Docker 服务：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h4 id="5-2-4-国内服务器安装docker-compose"><a href="#5-2-4-国内服务器安装docker-compose" class="headerlink" title="5.2.4 国内服务器安装docker-compose"></a>5.2.4 <strong>国内服务器安装docker-compose</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -L https://get.daocloud.io/docker/compose/releases/download/v2.1.1/docker-compose-`<span class="built_in">uname</span> -s`-`<span class="built_in">uname</span> -m` &gt; /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line">docker-compose --version  <span class="comment">#查看docker-compose版本</span></span><br></pre></td></tr></table></figure><h3 id="5-3-安装NginxProxyManager"><a href="#5-3-安装NginxProxyManager" class="headerlink" title="5.3 安装NginxProxyManager"></a>5.3 安装NginxProxyManager</h3><p>参考这边的内容：<a href="https://blog.laoda.de/archives/nginxproxymanager">https://blog.laoda.de/archives/nginxproxymanager</a></p><h3 id="5-4-创建安装目录"><a href="#5-4-创建安装目录" class="headerlink" title="5.4 创建安装目录"></a>5.4 创建安装目录</h3><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/libreoffice</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/libreoffice</span><br></pre></td></tr></table></figure><p>这边我们直接用docker的方式安装。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure><p>英文输入法下，按<code>i</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;2.1&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">libreoffice:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">linuxserver/libreoffice:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">libreoffice</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PUID=1000</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PGID=1000</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./config:/config</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">3001</span><span class="string">:3000</span>     <span class="comment"># 冒号左边端口可以修改，右边不要修改</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br></pre></td></tr></table></figure><p>按一下<code>esc</code>，然后<code>:wq</code> 保存退出，之后，</p><p>最后：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/libreoffice    <span class="comment"># 来到dockercompose文件所在的文件夹下</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><h3 id="5-5-打开服务器防火墙并访问网页"><a href="#5-5-打开服务器防火墙并访问网页" class="headerlink" title="5.5 打开服务器防火墙并访问网页"></a>5.5 打开服务器防火墙并访问网页</h3><p>打开防火墙的端口<code>3001</code></p><p>腾讯云打开方法如下：</p><img src="https://img.laoda.de/i/2022/06/30/zlio5h-2.webp" alt="image-20220630215240864" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/06/30/10h3dqt-2.webp" alt="image-20220630220546335" style="zoom:33%;" /><p>图中示例填的是<code>5230</code>，备注填的是<code>memos</code>，这边我们填<code>3001</code>，示例填<code>libreoffice</code> ，确定即可（如果你在docker-compose文件里换了<code>8081</code>，这边就需要填<code>8081</code>，以此类推）</p><img src="https://img.laoda.de/i/2022/08/19/o4byqz-2.webp" alt="image-20220819145844555" style="zoom:33%;" /><p>查看端口是否被占用（以<code>3001</code>为例），输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:3001  <span class="comment">#查看3001端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果啥也没出现，表示端口未被占用，我们可以继续下面的操作了～</p><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用（被占用了就修改一下端口，比如改成8081，注意docker命令行里和防火墙都要改）</p><p>理论上我们就可以输入<code>http://ip:3001</code>访问了。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的IP。</p><p>2、遇到访问不了的情况，请再次检查在宝塔面板的防火墙和服务商的后台防火墙是否打开对应了端口。</p></blockquote><p>有的小伙伴可能想搭建起来分享给其他人使用，如果后续想要分享给别人，IP+端口太不优雅了，咕咕建议大家还是搞一个域名，容易记，看起来也更正规一点。这样可以做https，会让网页更安全。（非要IP+端口访问的，可以直接跳到<code>5.6</code>，并且跳过<code>6. 反向代理</code>部分）</p><p>而且<a href="https://loll.cc/ns">namesilo</a>上面xyz后缀的域名一年就7块钱，可以年抛。</p><p>如果想要长期使用，还是建议买com后缀的域名，更加正规一些，可以输入<code>laodade</code>来获得1美元的优惠（不知道现在还有没有）</p><p><a href="https://loll.cc/ns">namesilo</a>自带隐私保护，咕咕一直在用这家，价格也是这些注册商里面比较低的，关键是他家不像其他家域名注册商，没有七七八八的套路！（就是后台界面有些<del>丑</del>古老 &#x3D; &#x3D;）</p><p><a href="https://blog.laoda.de/archives/namesilo">【域名购买】Namesilo优惠码和域名解析教程（附带服务器购买推荐和注意事项）</a></p><p>我们接着往下看！</p><h3 id="5-6-更新"><a href="#5-6-更新" class="headerlink" title="5.6 更新"></a>5.6 更新</h3><h4 id="5-6-1-docker-compose部署"><a href="#5-6-1-docker-compose部署" class="headerlink" title="5.6.1 docker-compose部署"></a>5.6.1 docker-compose部署</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/libreoffice</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/libreoffice /root/data/docker_data/libreoffice.archive  <span class="comment"># 万事先备份，以防万一，其实这边没必要，因为我们没有映射到本地文件夹</span></span><br><span class="line"></span><br><span class="line">docker-compose pull</span><br><span class="line"></span><br><span class="line">docker-compose up -d    <span class="comment"># 请不要使用docker-compose stop来停止容器，因为这么做需要额外的时间等待容器停止；docker-compose up -d直接升级容器时会自动停止并立刻重建新的容器，完全没有必要浪费那些时间。</span></span><br><span class="line"></span><br><span class="line">docker image prune  <span class="comment"># prune 命令用来删除不再使用的 docker 对象。删除所有未被 tag 标记和未被容器使用的镜像</span></span><br></pre></td></tr></table></figure><p>提示：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WARNING! This will remove all dangling images.</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] </span><br></pre></td></tr></table></figure><p>输入<code>y</code></p><p>利用Docker搭建的应用，更新非常容易～</p><h3 id="5-7-卸载"><a href="#5-7-卸载" class="headerlink" title="5.7 卸载"></a>5.7 卸载</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/libreoffice</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/libreoffice  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>可以卸载得很干净。</p><h2 id="6-反向代理"><a href="#6-反向代理" class="headerlink" title="6. 反向代理"></a>6. 反向代理</h2><h3 id="6-1-利用Nginx-Proxy-Manager"><a href="#6-1-利用Nginx-Proxy-Manager" class="headerlink" title="6.1 利用Nginx Proxy Manager"></a>6.1 利用Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p><img src="https://img.laoda.de/i/2022/10/16/n6t02e-2.webp" alt="image-20221016140213282"></p><p>之后，登陆Nginx Proxy Manager（不会的看这个：<strong>安装Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称NPM）会用到<code>80</code>、<code>443</code>端口，所以本机不能占用（比如原来就有Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom: 33%;" /><p><img src="https://img.laoda.de/i/2022/10/16/n7b9hm-2.webp" alt="image-20221016140258381"></p><blockquote><p> 注意填写对应的<code>域名</code>、<code>IP</code>和<code>端口</code>，按文章来的话，应该是<code>3001</code></p></blockquote><p><strong>IP填写：</strong></p><p>如果Nginx Proxy Manager和libreoffice在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的Docker容器内部IP。</p><p><img src="https://img.laoda.de/i/2022/09/29/pcdnz5-2.webp"></p><p>否则直接填<code>libreoffice</code>所在的服务器IP就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom: 33%;" /><p>再次打开，勾选这些：</p><p><img src="https://img.laoda.de/i/2022/10/16/n7nn6e-2.webp" alt="image-20221016140356324"></p><p>然后就可以用域名来安装访问了。</p><h3 id="6-2-利用宝塔面板"><a href="#6-2-利用宝塔面板" class="headerlink" title="6.2 利用宝塔面板"></a>6.2 利用宝塔面板</h3><p>发现还是有不少小伙伴习惯用宝塔面板，这边也贴一个宝塔面板的反代配置：</p><p>直接新建一个站点，不要数据库，不要php，纯静态即可。</p><p>然后打开下面的配置，修改Nginx的配置。</p><p><img src="https://img.laoda.de/i/2022/08/19/ov4xrt-2.webp" alt="image-20220819150345725"></p><p><img src="https://img.laoda.de/i/2022/08/19/owbbkb-2.webp" alt="image-20220819150542867"></p><p>代码如下：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:3001/;       <span class="comment"># 注意改成你实际使用的端口</span></span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此方法对90%的反向代理都能生效。</p><p>有同学可能会问，为什么不直接用宝塔自带的反向代理功能。</p><p><img src="https://img.laoda.de/i/2022/08/19/oxf800-2.webp" alt="image-20220819150730128"></p><p>也可以，不过咕咕自己之前遇到过当有多个网站需要反代的时候，在这边设置会报错的情况 &#x3D; &#x3D; </p><p>所以后来就不用了，直接用上面的方法来操作了。</p><h2 id="7-使用教程"><a href="#7-使用教程" class="headerlink" title="7. 使用教程"></a>7. 使用教程</h2><h3 id="7-1-安装和配置"><a href="#7-1-安装和配置" class="headerlink" title="7.1 安装和配置"></a>7.1 安装和配置</h3><p>见咕咕的视频。</p><h2 id="8-目前遇到的问题"><a href="#8-目前遇到的问题" class="headerlink" title="8. 目前遇到的问题"></a>8. 目前遇到的问题</h2><h3 id="8-1-中文乱码问题"><a href="#8-1-中文乱码问题" class="headerlink" title="8.1 中文乱码问题"></a>8.1 中文乱码问题</h3><p>应该是容器里没有中文字体导致的，在网上搜索 <code>songti.ttc</code>，将下载的字体文件放到 <code>libreoffice</code> 目录</p><p> <code>songti.ttc</code>下载地址：<a href="https://github.com/ntu-student-congress/tortue/blob/master/fonts/songti.ttc">https://github.com/ntu-student-congress/tortue/blob/master/fonts/songti.ttc</a></p><p>执行下面的操作，将字体放到容器内：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 进入 libreoffice 目录</span></span><br><span class="line">/root/data/docker_data/libreoffice</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载Songti.ttc</span></span><br><span class="line">wget https://github.com/ntu-student-congress/tortue/raw/master/fonts/songti.ttc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从VPS拷贝到容器内</span></span><br><span class="line">docker <span class="built_in">cp</span> ./songti.ttc libreoffice:/usr/share/fonts/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入容器内</span></span><br><span class="line">docker <span class="built_in">exec</span> --user root -it libreoffice /bin/bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># 扫描字体目录并生成字体信息的缓存</span></span><br><span class="line">fc-cache -vf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看系统内所有中文字体及字体文件的路径</span></span><br><span class="line">fc-list :lang=zh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 退出容器</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启容器</span></span><br><span class="line"></span><br><span class="line">docker-compose restart </span><br></pre></td></tr></table></figure><p>重启容器，中文可以正常显示了。</p><p><img src="https://img.laoda.de/i/2022/11/08/pb6x5t-2.webp" alt="451a42f42fb56ebc92971ac756d733b0.png"></p><h2 id="9-结尾"><a href="#9-结尾" class="headerlink" title="9. 结尾"></a>9. 结尾</h2><p>祝大家用得开心，有问题可以去GitHub提<a href="https://github.com/LibreOffice/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，项目处于刚开始阶段，有能力给项目做贡献的同学，也欢迎积极加入到<a href="https://github.com/LibreOffice">项目</a>中来，贡献自己的一份力量！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>LibreOffice<br>地址：<a href="https://github.com/LibreOffice">https://github.com/LibreOffice</a></p><p>linuxserver&#x2F;libreoffice - LinuxServer.io<br>地址：<a href="https://docs.linuxserver.io/images/docker-libreoffice">https://docs.linuxserver.io/images/docker-libreoffice</a></p><p>linuxserver&#x2F;libreoffice - Docker Image | Docker Hub<br>地址：<a href="https://hub.docker.com/r/linuxserver/libreoffice">https://hub.docker.com/r/linuxserver/libreoffice</a></p><p>老苏的博客：<br><a href="https://laosu.ml/2022/11/05/%E5%BC%80%E6%BA%90%E5%8A%9E%E5%85%AC%E5%A5%97%E4%BB%B6LibreOffice/">https://laosu.ml/2022/11/05/%E5%BC%80%E6%BA%90%E5%8A%9E%E5%85%AC%E5%A5%97%E4%BB%B6LibreOffice/</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LibreOffice </tag>
            
            <tag> office365 </tag>
            
            <tag> Excel </tag>
            
            <tag> Word </tag>
            
            <tag> PPT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【VPS黑五促销】CloudCone，美国VPS低至$9.99/年，还有闪购，SC2云服务器，Windows VPS</title>
      <link href="/archives/cloudcone-bf-2022-01/"/>
      <url>/archives/cloudcone-bf-2022-01/</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.laoda.de/tags/cloudcone/">CloudCone</a>的<a href="https://blog.laoda.de/categories/bf">2022黑五</a>闪购要开始了，他们家早就开始黑五预热，每年的黑五貌似都有点不错的机器。今年黑五Linux vps低至$9.99&#x2F;年，windows vps $17.49&#x2F;月，SC2云服务器$32.94&#x2F;年，此外还有神秘的闪购促销。</p><p>CloudCone详细介绍：<a href="https://blog.laoda.de/archives/vps-cloudcone">【VPS选购分享】Cloudcone—— 高性价比, 自研面板，客服退款干脆利落 廉价VPS</a></p><p><img src="https://img.laoda.de/i/2022/11/23/rdyb3j-2.webp" alt="image-20221123165556284"></p><h4 id="1、官网"><a href="#1、官网" class="headerlink" title="1、官网"></a>1、官网</h4><p><strong>网址：<a href="https://app.cloudcone.com.cn/?ref=6630">https://cloudcone.com/</a></strong></p><h4 id="2、黑五闪购"><a href="#2、黑五闪购" class="headerlink" title="2、黑五闪购"></a>2、黑五闪购</h4><p>活动尚未开始。（一般会在黑五当天开始）</p><p>活动网址：<a href="https://app.cloudcone.com/blackfriday/?ref=6630">https://app.cloudcone.com/blackfriday</a></p><h4 id="3、Linux-vps套餐"><a href="#3、Linux-vps套餐" class="headerlink" title="3、Linux vps套餐"></a>3、Linux vps套餐</h4><p>kvm虚拟，纯 RAID 10 固态硬盘，1G口带宽，默认1个ipv4，3个ipv6，机房位于洛杉矶mc机房。有免费的自动快照，自动备份，防火墙托管等等。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>硬盘</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>0.5G</td><td>1核</td><td>25G</td><td>2T&#x2F;月</td><td>$9.99&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/111/create?token=bf-2022-1&ref=6630">链接</a></strong></td></tr><tr><td>1G</td><td>2核</td><td>30G</td><td>3T&#x2F;月</td><td>$15.53&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/112/create?token=bf-2022-2&ref=6630">链接</a></strong></td></tr><tr><td>2G</td><td>3核</td><td>80G</td><td>6T&#x2F;月</td><td>$26.99&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/113/create?token=bf-2022-3&ref=6630">链接</a></strong></td></tr><tr><td>4G</td><td>4核</td><td>160G</td><td>8T&#x2F;月</td><td>$50.44&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/114/create?token=bf-2022-4&ref=6630">链接</a></strong></td></tr><tr><td>8G</td><td>4核</td><td>300G</td><td>8T&#x2F;月</td><td>$97.21&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/115/create?token=bf-2022-5&ref=6630">链接</a></strong></td></tr></tbody></table><h4 id="4、SC2云服务器促销套餐"><a href="#4、SC2云服务器促销套餐" class="headerlink" title="4、SC2云服务器促销套餐"></a>4、SC2云服务器促销套餐</h4><p>kvm虚拟，纯 RAID 10 固态硬盘，1G口带宽，默认1个ipv4，3个ipv6，机房位于洛杉矶mc机房。有免费的自动快照，自动备份，防火墙托管等等。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>硬盘</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1G</td><td>1核</td><td>20G</td><td>3T&#x2F;月</td><td>$32.94&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/compute/1377/create?token=bf2022-sc2-1&ref=6630">链接</a></strong></td></tr><tr><td>2G</td><td>2核</td><td>40G</td><td>6T&#x2F;月</td><td>$59.1&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/compute/1378/create?token=bf2022-sc2-2&ref=6630">链接</a></strong></td></tr><tr><td>4G</td><td>3核</td><td>80G</td><td>8T&#x2F;月</td><td>$105&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/compute/1379/create?token=bf2022-sc2-3&ref=6630">链接</a></strong></td></tr><tr><td>8G</td><td>4核</td><td>160G</td><td>8T&#x2F;月</td><td>$200&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/compute/1380/create?token=bf2022-sc2-4&ref=6630">链接</a></strong></td></tr><tr><td>16G</td><td>8核</td><td>300G</td><td>10T&#x2F;月</td><td>$398&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/compute/1381/create?token=bf2022-sc2-5&ref=6630">链接</a></strong></td></tr><tr><td>32G</td><td>16核</td><td>600G</td><td>10T&#x2F;月</td><td>$750&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/compute/1382/create?token=bf2022-sc2-6&ref=6630">链接</a></strong></td></tr></tbody></table><h4 id="5、windows-vps套餐"><a href="#5、windows-vps套餐" class="headerlink" title="5、windows vps套餐"></a>5、windows vps套餐</h4><p>kvm虚拟，1G口带宽，默认1个ipv4，3个ipv6，机房位于洛杉矶mc机房。有免费的自动快照，自动备份，防火墙托管等等。系统有win2016和2019。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>硬盘</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>4G</td><td>3核</td><td>60G</td><td>3T&#x2F;月</td><td>$17.49&#x2F;月</td><td><strong><a href="https://app.cloudcone.com.cn/compute/1223/create-windows/?ref=6630">链接</a></strong></td></tr><tr><td>8G</td><td>5核</td><td>120G</td><td>5T&#x2F;月</td><td>$32.94&#x2F;月</td><td><strong><a href="https://app.cloudcone.com.cn/compute/1224/create-windows/&ref=6630">链接</a></strong></td></tr><tr><td>16G</td><td>8核</td><td>240G</td><td>8T&#x2F;月</td><td>$62.79&#x2F;月</td><td><strong><a href="https://app.cloudcone.com.cn/compute/1225/create-windows/?ref=6630">链接</a></strong></td></tr><tr><td>32G</td><td>16核</td><td>500G</td><td>10T&#x2F;月</td><td>$125.76&#x2F;月</td><td><strong><a href="https://app.cloudcone.com.cn/compute/1226/create-windows/?ref=6630">链接</a></strong></td></tr></tbody></table><h4 id="6、最后"><a href="#6、最后" class="headerlink" title="6、最后"></a>6、最后</h4><p>网络测试</p><p>IPv4：173.82.220.148</p><p>IPv6: 2607:f130:0:ef::2</p><p>下载：<a href="http://la.lg.cloudc.one/1000MB.test">http://la.lg.cloudc.one/1000MB.test</a></p>]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 美国VPS </tag>
            
            <tag> 黑五 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【2022黑五】RackNerd：美国便宜VPS低至$10/年～</title>
      <link href="/archives/racknerd-bf-2022-01/"/>
      <url>/archives/racknerd-bf-2022-01/</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.laoda.de/tags/racknerd/">RackNerd</a>2022年的黑色星期五已经开始啦，关注便宜VPS的小伙伴可以围观了，优惠大致如下：最便宜的Linux VPS $10.28&#x2F;年；Windows VPS，$60&#x2F;年起，；独立服务器，$59&#x2F;月起，包括多IP站群、180T大硬盘存储服务器等。</p><p><img src="https://img.laoda.de/i/2022/04/10/xzrcc4_7.webp" alt="RackNerd"></p><h4 id="1、官网"><a href="#1、官网" class="headerlink" title="1、官网"></a>1、官网</h4><p><strong>官方网站：<a href="https://my.racknerd.com/aff.php?aff=1158">https://www.racknerd.com</a></strong></p><p>现在只是开胃菜，黑五（11月25日）当天力度最大，一般会有闪购活动，届时咕咕也会第一时间更新相关情况～</p><h4 id="2、Linux-VPS促销套餐"><a href="#2、Linux-VPS促销套餐" class="headerlink" title="2、Linux VPS促销套餐"></a>2、Linux VPS促销套餐</h4><p>数据中心可选：洛杉矶、圣何塞、达拉斯、芝加哥、新泽西、亚特兰大、纽约、荷兰(阿姆斯特丹)</p><p>VPS特征：KVM虚拟，纯SSD raid10阵列，1Gbps带宽，自带一个IPv4，支持rdns，solusvm面板管理。</p><p>更多的往期优惠：<a href="https://blog.laoda.de/vps.html">https://blog.laoda.de/vps.html</a></p><p>RackNerd VPS在售促销特价+流量翻倍+迁移+邮箱+push方法整理：<a href="https://blog.laoda.de/archives/racknerd-vps-issues">https://blog.laoda.de/archives/racknerd-vps-issues</a></p><p>【VPS选购分享】Racknerd——曾经的“四大金刚”，如今的性价比之王：<a href="https://blog.laoda.de/archives/cheap-vps-racknerd">https://blog.laoda.de/archives/cheap-vps-racknerd</a></p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>年付</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1核</td><td>768M</td><td>10G</td><td>1T&#x2F;月</td><td>$10.28</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=695">链接</a></strong></td></tr><tr><td>1核</td><td>1.5G</td><td>30G</td><td>3T&#x2F;月</td><td>$16.88</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=696">链接</a></strong></td></tr><tr><td>2核</td><td>2.5G</td><td>60G</td><td>7T&#x2F;月</td><td>$28.55</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=697">链接</a></strong></td></tr><tr><td>2核</td><td>3.5G</td><td>80G</td><td>10T&#x2F;月</td><td>$38.88</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=698">链接</a></strong></td></tr><tr><td>3核</td><td>4.5G</td><td>100G</td><td>12T&#x2F;月</td><td>$48.77</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=699">链接</a></strong></td></tr></tbody></table><h4 id="3、Windows-VPS促销套餐"><a href="#3、Windows-VPS促销套餐" class="headerlink" title="3、Windows VPS促销套餐"></a>3、Windows VPS促销套餐</h4><p>数据中心可选：洛杉矶、达拉斯、纽约、亚特兰大。</p><p>VPS特征：KVM虚拟，AMD Ryzen 9 3900x+ddr4+NVMe SSD阵列，1Gbps带宽。</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>NVMe</strong></th><th><strong>流量</strong></th><th><strong>年付</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1核</td><td>2G</td><td>35G</td><td>2T&#x2F;月</td><td>$60</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=700">链接</a></strong></td></tr><tr><td>2核</td><td>3.5G</td><td>60G</td><td>3.5T&#x2F;月</td><td>$99</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=701">链接</a></strong></td></tr><tr><td>3核</td><td>8G</td><td>150G</td><td>10T&#x2F;月</td><td>$219</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=702">链接</a></strong></td></tr></tbody></table><h4 id="4、独立服务器"><a href="#4、独立服务器" class="headerlink" title="4、独立服务器"></a>4、独立服务器</h4><p>数据中心有纽约和Utah可选，最高提供4c249个ip，以及高达180T的大硬盘存储。</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>硬盘</strong></th><th><strong>月流量</strong></th><th><strong>IP</strong></th><th><strong>月付</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>E3-1240v2</td><td>32G</td><td>4THDD</td><td>30T</td><td>13个</td><td>$59</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=703">链接</a></strong></td></tr><tr><td>Ryzen 9 3900X</td><td>64G DDR4</td><td>1.2T NVMe</td><td>50T</td><td>5个</td><td>$149</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=704">链接</a></strong></td></tr><tr><td>2*E5-2697v2</td><td>128G</td><td>2*1.92TSSD</td><td>50T</td><td>5个</td><td>$169</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=705">链接</a></strong></td></tr><tr><td>2*E5-2696v4</td><td>128G DDR4</td><td>2*3.8T NVMe</td><td>100T</td><td>5个</td><td>$299</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=706">链接</a></strong></td></tr><tr><td>2*E5-2640v3</td><td>64G DDR4</td><td>256GSSD+180T</td><td>200T</td><td>5个</td><td>$389</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=707">链接</a></strong></td></tr><tr><td>E3-1240</td><td>16G</td><td>500GSSD</td><td>30T</td><td>249个</td><td>$140</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=708">链接</a></strong></td></tr></tbody></table><h4 id="5、最后"><a href="#5、最后" class="headerlink" title="5、最后"></a>5、最后</h4><p><strong>洛杉矶DC02</strong>：204.13.154.3，<a href="http://lg-lax02.racknerd.com/1000MB.test">http://lg-lax02.racknerd.com/1000MB.test</a></p><p><strong>洛杉矶DC05</strong>：5.181.135.8，<a href="http://lg-lax05.racknerd.com/1000MB.test">http://lg-lax05.racknerd.com/1000MB.test</a></p><p><strong>圣何塞</strong>：192.210.207.88，<a href="http://lg-sj.racknerd.com/1000MB.test">http://lg-sj.racknerd.com/1000MB.test</a></p><p><strong>西雅图</strong>：192.3.253.2，<a href="http://lg-sea.racknerd.com/1000MB.test">http://lg-sea.racknerd.com/1000MB.test</a></p><p><strong>新泽西</strong>：192.3.165.30，<a href="http://lg-nj.racknerd.com/1000MB.test">http://lg-nj.racknerd.com/1000MB.test</a></p><p><strong>达拉斯</strong>：198.23.249.100，<a href="http://lg-dal.racknerd.com/1000MB.test">http://lg-dal.racknerd.com/1000MB.test</a></p><p><strong>芝加哥</strong>：198.23.228.15，<a href="http://lg-chi.racknerd.com/1000MB.test">http://lg-chi.racknerd.com/1000MB.test</a></p><p><strong>阿什本</strong>：107.173.166.10，<a href="http://lg-ash.racknerd.com/1000MB.test">http://lg-ash.racknerd.com/1000MB.test</a></p><p><strong>亚特兰大</strong>：107.173.164.160，<a href="http://lg-atl.racknerd.com/1000MB.test">http://lg-atl.racknerd.com/1000MB.test</a></p><p><strong>荷兰.阿姆斯特丹</strong>：23.94.101.88，<a href="http://lg-ams.racknerd.com/1000MB.test">http://lg-ams.racknerd.com/1000MB.test</a></p><p><strong>水牛城</strong>：192.3.81.8，<a href="http://lg-ny.racknerd.com/1000MB.test">http://lg-ny.racknerd.com/1000MB.test</a></p>]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Racknerd </tag>
            
            <tag> 美国VPS </tag>
            
            <tag> 黑五 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩儿的Docker项目】15分钟搭建一个在线电子书库/漫画/CG/画集库——Calibre-Web</title>
      <link href="/archives/docker-compose-install-calibre-web/"/>
      <url>/archives/docker-compose-install-calibre-web/</url>
      
        <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><blockquote><p>亚马逊中国将在2023 年6 月30 日之后停止运营Kindle 电子书店，正式退出中国市场，自此用户将无法再通过亚马逊中国账户继续购买电子书。</p></blockquote><blockquote><p>Z-Library的域名日前被美国邮政检查局查封。</p></blockquote><p>这期我们正好来介绍一下电子书相关的项目——Calibre-Web。</p><p>Calibre-Web是一个网络应用，为使用有效的Calibre数据库浏览、阅读和下载电子书提供一个简洁的界面。</p><p><img src="https://img.laoda.de/i/2022/11/11/p07pfs-2.webp"></p><p>Calibre-Web适合用来管理哪些内容：</p><p>其实除了电子书外，calibre-web管理漫画、CG和画集也是很方便的。</p><p>除了已经是epub格式的内容，其实一些其他常见漫画格式也能很方便的添加进calibre-web里。</p><p>比如漫画有很多只是把图片打包成zip文件而已，而calibre-web有人觉得没法直接认出zip格式的文件会不方便管理，其实直接把文件后缀从zip改成cbz，calibre-web就能直接认出来了，并且能直接在线阅读。这样一来很多zip漫画就不用费力去转epub格式了。（rar和7z格式也是同理，但如果压缩包内有图片之外的文件或者png和gif格式的图片calibre-web目前认在线阅读认不出来，但可以下载下来）。</p><h3 id="1-1-主要特点"><a href="#1-1-主要特点" class="headerlink" title="1.1 主要特点"></a>1.1 主要特点</h3><ul><li>Bootstrap 3 HTML5界面</li><li>全图形化管理界面</li><li>具有细化的每个用户权限的用户管理</li><li>支持巴西语、捷克语、荷兰语、英语、芬兰语、法语、加利西亚语、德语、希腊语、匈牙利语、意大利语、日语、高棉语、韩国语、波兰语、俄语、简体和繁体中文、西班牙语、瑞典语、土耳其语、乌克兰语、越南语</li><li>支持用于电子书阅读器应用程序的OPDS feed</li><li>支持通过标题、作者、标签、系列、书籍格式和语言进行过滤和搜索</li><li>支持创建一个自定义的图书集（书架）</li><li>支持编辑电子书元数据和从Calibre图书馆删除电子书</li><li>支持从各种来源下载电子书元数据，来源可以通过外部插件扩展</li><li>支持通过Calibre二进制文件转换电子书</li><li>支持限制电子书下载给已登录的用户</li><li>支持公共用户注册</li><li>支持通过点击按钮将电子书发送到电子阅读器上</li><li>支持通过Calibre-Web与您的Calibre图书馆同步您的Kobo设备</li><li>支持在浏览器中直接阅读电子书（.txt, .epub, .pdf, .cbr, .cbt, .cbz, .djvu)</li><li>支持上传多种格式的新书，包括音频格式（.mp3、.m4a、.m4b）。</li><li>支持Calibre自定义列</li><li>能够根据类别和每个用户的自定义栏目内容来隐藏内容</li><li>自动更新</li><li>“魔力链接 “登录，使之易于登录电子阅读器</li><li>通过LDAP、google&#x2F;github oauth和通过代理认证登录</li></ul><h3 id="1-2-相关地址"><a href="#1-2-相关地址" class="headerlink" title="1.2 相关地址"></a>1.2 相关地址</h3><p>GitHub：<a href="https://github.com/janeczku/calibre-web">https://github.com/janeczku/calibre-web</a></p><p>Docker镜像——linuxserver.io（专门团队构建，仍在更新中）：<a href="https://hub.docker.com/r/linuxserver/calibre-web">https://hub.docker.com/r/linuxserver/calibre-web</a>  （本次采用）</p><p>支持</p><table><thead><tr><th>Architecture</th><th>Available</th><th>Tag</th></tr></thead><tbody><tr><td>x86-64</td><td>✅</td><td>amd64-<version tag></td></tr><tr><td>arm64</td><td>✅</td><td>arm64v8-<version tag></td></tr><tr><td>armhf</td><td>✅</td><td>arm32v7-<version tag></td></tr></tbody></table><p>Docker镜像——technosoft2000（国人构建，目前已停止维护）：<a href="https://hub.docker.com/r/technosoft2000/calibre-web">https://hub.docker.com/r/technosoft2000/calibre-web</a></p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p>UI看起来还是略显古老 &#x3D; &#x3D;</p><p><img src="https://img.laoda.de/i/2022/11/11/p0a569-2.webp"></p><p><img src="https://img.laoda.de/i/2022/11/11/p0blt9-2.webp"></p><p><img src="https://img.laoda.de/i/2022/11/11/p0d5pl-2.webp"></p><p><img src="https://img.laoda.de/i/2022/11/11/p0f10z-2.webp"></p><p><img src="https://img.laoda.de/i/2022/11/11/p0ggyz-2.webp"></p><p><img src="https://img.laoda.de/i/2022/11/11/p0iadc-2.webp"></p><p>这边直接丢出搭建的docker-compose.yaml文件，熟悉docker环境的小伙伴可以直接拷贝搭建。</p><p>以<code>root</code>用户为例子：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">version:</span> <span class="string">&quot;2.1&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">calibre-web:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">lscr.io/linuxserver/calibre-web:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">calibre-web</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PUID=0</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PGID=0</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DOCKER_MODS=linuxserver/mods:universal-calibre</span> <span class="comment">#optional</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">OAUTHLIB_RELAX_TOKEN_SCOPE=1</span> <span class="comment">#optional</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data:/config</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./library:/books</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8083</span><span class="string">:8083</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br></pre></td></tr></table></figure><p>不过只看这个，可能无法彻底解决一些calibre-web遇到的问题，可以跳转到后面看如何配置。</p><p>以下是详细搭建教程。</p><h2 id="3-搭建环境"><a href="#3-搭建环境" class="headerlink" title="3. 搭建环境"></a>3. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器24元&#x2F;月VPS一台</del>咕咕自己搭建用的是<a href="https://blog.laoda.de/archives/ovh-sys-2-sat-32-waw">OVH的独立服务器</a>，演示用的是<a href="https://blog.laoda.de/archives/vps-buyvm">卢森堡的BuyVM</a>，如果你只是小范围使用，可以考虑用<a href="https://loll.cc/tx">腾讯轻量购买链接</a>的服务器，（最好是选<strong>非大陆（香港）的服务器</strong>）如果是小白刚开始玩的话，还可以购买<a href="https://blog.laoda.de/archives/cheap-vps-racknerd">Racknerd</a>的服务器，最低一年不到100块（不过这个建议选择1G内存以上的机器）（Racknerd服务器介绍：<a href="https://blog.laoda.de/archives/cheap-vps-racknerd">点击查看</a>）</li><li>系统：Debian 10（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本</a> 非必需DD用原来的系统也OK，之后教程都是用Debian或者Ubuntu搭建～）</li><li>安装好Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需但建议】域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>【非必需】提前安装好宝塔面板海外版本aapanel，并安装好Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程选用】安装好Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><h3 id="3-1-注意点"><a href="#3-1-注意点" class="headerlink" title="3.1 注意点"></a>3.1 注意点</h3><blockquote><p>此项目启动可能会花一点时间，请耐心等待或者用<code>docker-compose logs</code> 查看日志情况。</p></blockquote><h2 id="4-搭建视频"><a href="#4-搭建视频" class="headerlink" title="4. 搭建视频"></a>4. 搭建视频</h2><p>YouTube：<a href="https://youtu.be/Of9191QD2ng">https://youtu.be/Of9191QD2ng</a></p><p>哔哩哔哩【高清版本可以点击去吐槽到B站观看】：<joe-bilibili bvid="BV11G4y1t7sj"></joe-bilibili></p><h2 id="5-搭建方式"><a href="#5-搭建方式" class="headerlink" title="5. 搭建方式"></a>5. 搭建方式</h2><h3 id="安装系统（腾讯云轻量应用服务器）"><a href="#安装系统（腾讯云轻量应用服务器）" class="headerlink" title="安装系统（腾讯云轻量应用服务器）"></a>安装系统（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlyhcz-2.webp"></p><p>腾讯云轻量服务器最大的特点就是“轻量”，相比CVM，更适合小白上手，这边我们之间选择Docker基础镜像，就可以省去后面安装Docker的步骤（如果你非要用国内的服务器，这边装的Docker镜像还会帮你配置好国内镜像源，让你加速访问docker镜像资源）。</p><h3 id="登陆（腾讯云轻量应用服务器）"><a href="#登陆（腾讯云轻量应用服务器）" class="headerlink" title="登陆（腾讯云轻量应用服务器）"></a>登陆（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlzlj7-2.webp"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm0gv8-2.webp"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm1vqw-2.webp"></p><h3 id="5-1-服务器前期配置"><a href="#5-1-服务器前期配置" class="headerlink" title="5.1 服务器前期配置"></a>5.1 服务器前期配置</h3><p>服务器初始设置，参考：</p><p><a href="https://blog.laoda.de/archives/vps-script"><strong>新买了一台服务器“必须”要做的6件小事</strong></a></p><p><a href="https://blog.laoda.de/archives/how-to-secure-a-linux-server"><strong>保护好你的小鸡！保姆级服务器安全教程！</strong></a></p><p>这边由于我们用的是腾讯云轻量应用服务器，系统默认就帮我们创建了名字是<code>lighthouse</code>的用户，系统后台也有防火墙（默认就开了几个常用的端口）</p><p>对小白用户来说，可以不用再去管繁琐的服务器安全的配置，大大降低了服务器防护的门槛。</p><p><a href="https://blog.laoda.de/archives/hello-docker">【Docker系列】不用宝塔面板，小白一样可以玩转VPS服务器！</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i <span class="comment"># 切换到root用户</span></span><br><span class="line"></span><br><span class="line">apt update -y  <span class="comment"># 升级packages</span></span><br><span class="line"></span><br><span class="line">apt install wget curl sudo vim git -y  <span class="comment"># Debian系统比较干净，安装常用的软件</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：VPS的内存如果过小，建议设置一下SWAP，一般为内存的1-1.5倍即可，可以让系统运行更流畅！</p></blockquote><p>设置SWAP可以用脚本:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O box.sh https://raw.githubusercontent.com/BlueSkyXN/SKY-BOX/main/box.sh &amp;&amp; <span class="built_in">chmod</span> +x box.sh &amp;&amp; clear &amp;&amp; ./box.sh</span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/05/28/uoikkd-0.webp"></p><p>选择<code>18</code>，然后输入你想要扩容的数值即可。</p><p><img src="https://img.laoda.de/i/2022/05/28/up2dkf-0.webp"></p><p>使用腾讯云轻量应用服务器的小伙伴可以直接跳到<code>5.2.4</code></p><h3 id="5-2-安装Docker（使用腾讯云轻量应用服务器可跳过这一部分）"><a href="#5-2-安装Docker（使用腾讯云轻量应用服务器可跳过这一部分）" class="headerlink" title="5.2 安装Docker（使用腾讯云轻量应用服务器可跳过这一部分）"></a>5.2 安装Docker（使用腾讯云轻量应用服务器可跳过这一部分）</h3><h4 id="5-2-1-非大陆服务器Docker安装"><a href="#5-2-1-非大陆服务器Docker安装" class="headerlink" title="5.2.1 非大陆服务器Docker安装"></a>5.2.1 <strong>非大陆服务器Docker安装</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -qO- get.docker.com | bash</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker -v  <span class="comment">#查看docker版本</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker  <span class="comment"># 设置开机自动启动</span></span><br></pre></td></tr></table></figure><p><strong>修改Docker配置（可选）（来自<a href="https://u.sb/debian-install-docker/">烧饼博客</a>）</strong></p><p>以下配置会增加一段自定义内网 IPv6 地址，开启容器的 IPv6 功能，以及限制日志文件大小，防止 Docker 日志塞满硬盘（泪的教训）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/docker/daemon.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    &quot;log-driver&quot;: &quot;json-file&quot;,</span></span><br><span class="line"><span class="string">    &quot;log-opts&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;max-size&quot;: &quot;20m&quot;,</span></span><br><span class="line"><span class="string">        &quot;max-file&quot;: &quot;3&quot;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    &quot;ipv6&quot;: true,</span></span><br><span class="line"><span class="string">    &quot;fixed-cidr-v6&quot;: &quot;fd00:dead:beef:c0::/80&quot;,</span></span><br><span class="line"><span class="string">    &quot;experimental&quot;:true,</span></span><br><span class="line"><span class="string">    &quot;ip6tables&quot;:true</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>然后重启 Docker 服务：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h4 id="5-2-2-非大陆服务器Docker-compose安装"><a href="#5-2-2-非大陆服务器Docker-compose安装" class="headerlink" title="5.2.2 非大陆服务器Docker-compose安装"></a>5.2.2 <strong>非大陆服务器Docker-compose安装</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/1.29.2/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose --version  <span class="comment">#查看docker-compose版本</span></span><br></pre></td></tr></table></figure><h4 id="5-2-3-国内服务器安装docker"><a href="#5-2-3-国内服务器安装docker" class="headerlink" title="5.2.3 国内服务器安装docker"></a>5.2.3 <strong>国内服务器安装docker</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -sSL https://get.daocloud.io/docker | sh</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker -v  <span class="comment">#查看docker版本</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker  <span class="comment"># 设置开机自动启动</span></span><br></pre></td></tr></table></figure><p><strong>修改Docker配置（可选）（来自<a href="https://u.sb/debian-install-docker/">烧饼博客</a>）</strong></p><p>以下配置会增加一段自定义内网 IPv6 地址，开启容器的 IPv6 功能，以及限制日志文件大小，防止 Docker 日志塞满硬盘（泪的教训）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/docker/daemon.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    &quot;log-driver&quot;: &quot;json-file&quot;,</span></span><br><span class="line"><span class="string">    &quot;log-opts&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;max-size&quot;: &quot;20m&quot;,</span></span><br><span class="line"><span class="string">        &quot;max-file&quot;: &quot;3&quot;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    &quot;ipv6&quot;: true,</span></span><br><span class="line"><span class="string">    &quot;fixed-cidr-v6&quot;: &quot;fd00:dead:beef:c0::/80&quot;,</span></span><br><span class="line"><span class="string">    &quot;experimental&quot;:true,</span></span><br><span class="line"><span class="string">    &quot;ip6tables&quot;:true</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>然后重启 Docker 服务：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h4 id="5-2-4-国内服务器安装docker-compose"><a href="#5-2-4-国内服务器安装docker-compose" class="headerlink" title="5.2.4 国内服务器安装docker-compose"></a>5.2.4 <strong>国内服务器安装docker-compose</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -L https://get.daocloud.io/docker/compose/releases/download/v2.1.1/docker-compose-`<span class="built_in">uname</span> -s`-`<span class="built_in">uname</span> -m` &gt; /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line">docker-compose --version  <span class="comment">#查看docker-compose版本</span></span><br></pre></td></tr></table></figure><h3 id="5-3-安装NginxProxyManager"><a href="#5-3-安装NginxProxyManager" class="headerlink" title="5.3 安装NginxProxyManager"></a>5.3 安装NginxProxyManager</h3><p>参考这边的内容：<a href="https://blog.laoda.de/archives/nginxproxymanager">https://blog.laoda.de/archives/nginxproxymanager</a></p><h3 id="5-4-创建安装目录"><a href="#5-4-创建安装目录" class="headerlink" title="5.4 创建安装目录"></a>5.4 创建安装目录</h3><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/calibre-web</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/calibre-web</span><br></pre></td></tr></table></figure><p>这边我们直接用docker的方式安装。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure><p>英文输入法下，按<code>i</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">version:</span> <span class="string">&quot;2.1&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">calibre-web:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">lscr.io/linuxserver/calibre-web:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">calibre-web</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PUID=0</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PGID=0</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DOCKER_MODS=linuxserver/mods:universal-calibre</span> <span class="comment">#optional</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">OAUTHLIB_RELAX_TOKEN_SCOPE=1</span> <span class="comment">#optional</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data:/config</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./library:/books</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8083</span><span class="string">:8083</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br></pre></td></tr></table></figure><p>注意，这边咕咕是以root身份来运行的，所以这边的<code>PUID=0</code>，<code>PGID=0</code>。</p><p>我们可以在命令行里输入<code>id</code>，查看当前的id情况，如果你也是<code>root</code>运行的，那么不需要改，如果你是别的用户运行的，请把<code>0</code>改成对应<code>id</code>输出的数字，不然后续会出现无法连接数据库的情况。</p><p>没什么问题的话，复制完上面的内容后，</p><p>按一下<code>esc</code>，然后<code>:wq</code> 保存退出，之后，</p><p>最后：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/calibre-web    <span class="comment"># 来到dockercompose文件所在的文件夹下</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>配置数据库</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it calibre-web sh <span class="comment">#进入容器内部</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /app/calibre/bin <span class="comment">#进入bin文件夹</span></span><br><span class="line"></span><br><span class="line">calibredb restore_database --really-do-it --with-library /books <span class="comment">#创建一个数据库</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> a+w /books/metadata.db <span class="comment">#添加写的权限</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span>  <span class="comment"># 退出容器</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="5-5-打开服务器防火墙并访问网页"><a href="#5-5-打开服务器防火墙并访问网页" class="headerlink" title="5.5 打开服务器防火墙并访问网页"></a>5.5 打开服务器防火墙并访问网页</h3><p>打开防火墙的端口<code>8083</code></p><p>腾讯云打开方法如下：</p><p><img src="https://img.laoda.de/i/2022/06/30/zlio5h-2.webp"></p><p><img src="https://img.laoda.de/i/2022/06/30/10h3dqt-2.webp"></p><p>图中示例填的是<code>5230</code>，备注填的是<code>memos</code>，这边我们填<code>8083</code>，示例填<code>calibre-web</code> ，确定即可（如果你在docker-compose文件里换了<code>8081</code>，这边就需要填<code>8081</code>，以此类推）</p><p><img src="https://img.laoda.de/i/2022/08/19/o4byqz-2.webp"></p><p>查看端口是否被占用（以<code>8083</code>为例），输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:8083  <span class="comment">#查看8083端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果啥也没出现，表示端口未被占用，我们可以继续下面的操作了～</p><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用（被占用了就修改一下端口，比如改成8081，注意docker命令行里和防火墙都要改）</p><p>理论上我们就可以输入<code>http://ip:8083</code>访问了。</p><p>默认账号：<code>admin</code><br>默认密码：<code>admin123</code></p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的IP。</p><p>2、遇到访问不了的情况，请再次检查在宝塔面板的防火墙和服务商的后台防火墙是否打开对应了端口。</p></blockquote><p>有的小伙伴可能想搭建起来分享给其他人使用，如果后续想要分享给别人，IP+端口太不优雅了，咕咕建议大家还是搞一个域名，容易记，看起来也更正规一点。这样可以做https，会让网页更安全。（非要IP+端口访问的，可以直接跳到<code>5.6</code>，并且跳过<code>6. 反向代理</code>部分）</p><p>而且<a href="https://loll.cc/ns">namesilo</a>上面xyz后缀的域名一年就7块钱，可以年抛。</p><p>如果想要长期使用，还是建议买com后缀的域名，更加正规一些，可以输入<code>laodade</code>来获得1美元的优惠（不知道现在还有没有）</p><p><a href="https://loll.cc/ns">namesilo</a>自带隐私保护，咕咕一直在用这家，价格也是这些注册商里面比较低的，关键是他家不像其他家域名注册商，没有七七八八的套路！（就是后台界面有些<del>丑</del>古老 &#x3D; &#x3D;）</p><p><a href="https://blog.laoda.de/archives/namesilo">【域名购买】Namesilo优惠码和域名解析教程（附带服务器购买推荐和注意事项）</a></p><p>我们接着往下看！</p><h3 id="5-6-更新"><a href="#5-6-更新" class="headerlink" title="5.6 更新"></a>5.6 更新</h3><h4 id="5-6-1-docker-compose部署"><a href="#5-6-1-docker-compose部署" class="headerlink" title="5.6.1 docker-compose部署"></a>5.6.1 docker-compose部署</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/calibre-web </span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/calibre-web /root/data/docker_data/calibre-web .archive  <span class="comment"># 万事先备份，以防万一，其实这边没必要，因为我们没有映射到本地文件夹</span></span><br><span class="line"></span><br><span class="line">docker-compose pull</span><br><span class="line"></span><br><span class="line">docker-compose up -d    <span class="comment"># 请不要使用docker-compose stop来停止容器，因为这么做需要额外的时间等待容器停止；docker-compose up -d直接升级容器时会自动停止并立刻重建新的容器，完全没有必要浪费那些时间。</span></span><br><span class="line"></span><br><span class="line">docker image prune  <span class="comment"># prune 命令用来删除不再使用的 docker 对象。删除所有未被 tag 标记和未被容器使用的镜像</span></span><br></pre></td></tr></table></figure><p>提示：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WARNING! This will remove all dangling images.</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] </span><br></pre></td></tr></table></figure><p>输入<code>y</code></p><p>利用Docker搭建的应用，更新非常容易～</p><h3 id="5-7-卸载"><a href="#5-7-卸载" class="headerlink" title="5.7 卸载"></a>5.7 卸载</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/calibre-web </span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/calibre-web   <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>可以卸载得很干净。</p><h2 id="6-反向代理"><a href="#6-反向代理" class="headerlink" title="6. 反向代理"></a>6. 反向代理</h2><h3 id="6-1-利用Nginx-Proxy-Manager"><a href="#6-1-利用Nginx-Proxy-Manager" class="headerlink" title="6.1 利用Nginx Proxy Manager"></a>6.1 利用Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p><img src="https://img.laoda.de/i/2022/10/16/n6t02e-2.webp"></p><p>之后，登陆Nginx Proxy Manager（不会的看这个：<strong>安装Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称NPM）会用到<code>80</code>、<code>443</code>端口，所以本机不能占用（比如原来就有Nginx）</p></blockquote><p>直接丢几张图：</p><p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp"></p><p><img src="https://img.laoda.de/i/2022/10/16/n7b9hm-2.webp"></p><blockquote><p> 注意填写对应的<code>域名</code>、<code>IP</code>和<code>端口</code>，按文章来的话，应该是<code>8083</code></p></blockquote><p><strong>IP填写：</strong></p><p>如果Nginx Proxy Manager和libreoffice在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的Docker容器内部IP。</p><p><img src="https://img.laoda.de/i/2022/09/29/pcdnz5-2.webp"></p><p>否则直接填<code>calibre-web </code>所在的服务器IP就行。</p><p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp"></p><p>再次打开，勾选这些：</p><p><img src="https://img.laoda.de/i/2022/10/16/n7nn6e-2.webp"></p><p>然后就可以用域名来安装访问了。</p><h3 id="6-2-利用宝塔面板"><a href="#6-2-利用宝塔面板" class="headerlink" title="6.2 利用宝塔面板"></a>6.2 利用宝塔面板</h3><p>发现还是有不少小伙伴习惯用宝塔面板，这边也贴一个宝塔面板的反代配置：</p><p>直接新建一个站点，不要数据库，不要php，纯静态即可。</p><p>然后打开下面的配置，修改Nginx的配置。</p><p><img src="https://img.laoda.de/i/2022/08/19/ov4xrt-2.webp"></p><p><img src="https://img.laoda.de/i/2022/08/19/owbbkb-2.webp"></p><p>代码如下：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:8083/;       <span class="comment"># 注意改成你实际使用的端口</span></span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此方法对90%的反向代理都能生效。</p><p>有同学可能会问，为什么不直接用宝塔自带的反向代理功能。</p><p><img src="https://img.laoda.de/i/2022/08/19/oxf800-2.webp"></p><p>也可以，不过咕咕自己之前遇到过当有多个网站需要反代的时候，在这边设置会报错的情况 &#x3D; &#x3D; </p><p>所以后来就不用了，直接用上面的方法来操作了。</p><h2 id="7-使用教程"><a href="#7-使用教程" class="headerlink" title="7. 使用教程"></a>7. 使用教程</h2><p>其他的见咕咕的视频，这边简单贴一下。</p><h3 id="7-1-配置数据路径"><a href="#7-1-配置数据路径" class="headerlink" title="7.1 配置数据路径"></a>7.1 配置数据路径</h3><p>填入<code>/books</code>即可</p><h3 id="7-2-更改语言"><a href="#7-2-更改语言" class="headerlink" title="7.2 更改语言"></a>7.2 更改语言</h3><p><img src="https://img.laoda.de/i/2022/11/11/p84v21-2.webp"></p><h3 id="7-3-扩展程序配置（转换格式）"><a href="#7-3-扩展程序配置（转换格式）" class="headerlink" title="7.3 扩展程序配置（转换格式）"></a>7.3 扩展程序配置（转换格式）</h3><p><img src="https://img.laoda.de/i/2022/11/11/p86rlk-2.webp"></p><p><img src="https://img.laoda.de/i/2022/11/11/p88jbb-2.webp"></p><p>Calibre 电子书转换器路径: <code>/usr/bin/ebook-convert</code></p><p>KEpubify 电子书转换器路径: <code>/usr/bin/kepubify</code></p><h3 id="7-4-后台启用上传"><a href="#7-4-后台启用上传" class="headerlink" title="7.4 后台启用上传"></a>7.4 后台启用上传</h3><p><img src="https://img.laoda.de/i/2022/11/11/p8ac67-2.webp"> </p><h3 id="7-5-启用用户阅读权限"><a href="#7-5-启用用户阅读权限" class="headerlink" title="7.5  启用用户阅读权限"></a>7.5  启用用户阅读权限</h3><p><img src="https://img.laoda.de/i/2022/11/11/p8kqwo-2.webp"></p><p><img src="https://img.laoda.de/i/2022/11/11/p8m4h3-2.webp"></p><h3 id="7-6-转换书籍格式"><a href="#7-6-转换书籍格式" class="headerlink" title="7.6  转换书籍格式"></a>7.6  转换书籍格式</h3><p><img src="https://img.laoda.de/i/2022/11/11/p8npb5-2.webp"></p><h3 id="7-7-搜刮元数据"><a href="#7-7-搜刮元数据" class="headerlink" title="7.7  搜刮元数据"></a>7.7  搜刮元数据</h3><p><img src="https://img.laoda.de/i/2022/11/11/p8pbnr-2.webp"></p><p><img src="https://img.laoda.de/i/2022/11/11/p8rh0r-2.webp"></p><p>注意选一个即可，豆瓣的不可用，因为我们是香港的机器，所以可以直接使用Google的搜刮～</p><p>其他的见咕咕的视频，或者自己琢磨一下 &#x3D; &#x3D; </p><h2 id="8-目前遇到的问题"><a href="#8-目前遇到的问题" class="headerlink" title="8. 目前遇到的问题"></a>8. 目前遇到的问题</h2><h3 id="8-1-数据库无法读取问题"><a href="#8-1-数据库无法读取问题" class="headerlink" title="8.1 数据库无法读取问题"></a>8.1 数据库无法读取问题</h3><p>请注意<code>docker-compose.yml</code>里面的<code>PUID</code>、<code>PUID</code>是否填写正确。</p><h3 id="8-2-无法上传问题"><a href="#8-2-无法上传问题" class="headerlink" title="8.2 无法上传问题"></a>8.2 无法上传问题</h3><p>请注意你是否打开了用户上传的权限。</p><h3 id="8-3-豆瓣元数据无法获取"><a href="#8-3-豆瓣元数据无法获取" class="headerlink" title="8.3 豆瓣元数据无法获取"></a>8.3 豆瓣元数据无法获取</h3><p>目前咕咕也没找到好的办法</p><h3 id="8-4-移动端阅读器推荐"><a href="#8-4-移动端阅读器推荐" class="headerlink" title="8.4 移动端阅读器推荐"></a>8.4 移动端阅读器推荐</h3><p>咕咕手机上看书比较少，大家在iOS和android上有好用的app欢迎在评论区推荐。</p><h2 id="9-结尾"><a href="#9-结尾" class="headerlink" title="9. 结尾"></a>9. 结尾</h2><p>祝大家用得开心，有问题可以去GitHub提<a href="https://github.com/janeczku/calibre-web/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，项目处于刚开始阶段，有能力给项目做贡献的同学，也欢迎积极加入到<a href="https://github.com/janeczku/calibre-web">项目</a>中来，贡献自己的一份力量！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>GitHub：<a href="https://github.com/janeczku/calibre-web">https://github.com/janeczku/calibre-web</a></p><p>Docker镜像——linuxserver.io（专门团队构建，仍在更新中）：<a href="https://hub.docker.com/r/linuxserver/calibre-web">https://hub.docker.com/r/linuxserver/calibre-web</a>  （本次采用）</p><p>Docker镜像——technosoft2000（国人构建，目前已停止维护）：<a href="https://hub.docker.com/r/technosoft2000/calibre-web">https://hub.docker.com/r/technosoft2000/calibre-web</a></p><p>Docker - Calibre-web Container Setup with New Calibre Database：<br><a href="https://fictionbecomesfact.com/calibre-web-container">https://fictionbecomesfact.com/calibre-web-container</a></p><p>Calibre-web部署后一些细节问题答疑：<a href="https://zhuanlan.zhihu.com/p/357220232">https://zhuanlan.zhihu.com/p/357220232</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Calibre-Web </tag>
            
            <tag> Calibre </tag>
            
            <tag> Kindle </tag>
            
            <tag> 漫画 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RackNerd（RN）双十一优惠&amp;&amp; RN VPS在售促销特价+流量翻倍+迁移+邮箱+push方法整理</title>
      <link href="/archives/racknerd-vps-issues/"/>
      <url>/archives/racknerd-vps-issues/</url>
      
        <content type="html"><![CDATA[<p>RackNerd目前可直接买的促销特价VPS整理汇总 <strong>（流量都能翻倍）</strong>：</p><p>推荐阅读：<a href="https://blog.laoda.de/archives/cheap-vps-racknerd">【VPS选购分享】Racknerd——曾经的“四大金刚”，如今的性价比之王</a></p><h3 id="11月2号更新"><a href="#11月2号更新" class="headerlink" title="11月2号更新:"></a>11月2号更新:</h3><p>圣何塞机房 补货！增加2022双11促销的4个套餐。</p><h2 id="1-购买套餐"><a href="#1-购买套餐" class="headerlink" title="1. 购买套餐"></a>1. 购买套餐</h2><p>多数套餐都有洛杉矶DC02、圣何塞 可选，包括$9.89</p><table><thead><tr><th align="center">处理器CPU</th><th align="center">内存RAM</th><th align="center">SSD硬盘容量</th><th align="center">流量&#x2F;月</th><th align="center">价格&#x2F;年</th><th align="center">购买链接</th></tr></thead><tbody><tr><td align="center">1核</td><td align="center">512MB</td><td align="center">10GB</td><td align="center">1T</td><td align="center">9.89美元</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=1158&pid=620">点此购买</a></td></tr><tr><td align="center">1核</td><td align="center">768MB</td><td align="center">12GB</td><td align="center">1T</td><td align="center">10.88美元</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=1158&pid=587">点此购买</a></td></tr><tr><td align="center">1核</td><td align="center">1.11GB</td><td align="center">11GB</td><td align="center">3T</td><td align="center">11.11美元（2022 双11）</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=1158&pid=687">点此购买</a></td></tr><tr><td align="center">1核</td><td align="center">768MB</td><td align="center">10GB</td><td align="center">2T</td><td align="center">11.88美元</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=1158&pid=679">点此购买</a></td></tr><tr><td align="center">1核</td><td align="center">1GB</td><td align="center">20GB</td><td align="center">2T</td><td align="center">13.98美元</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=1158&pid=621">点此购买</a></td></tr><tr><td align="center">1核</td><td align="center">1GB</td><td align="center">25GB</td><td align="center">4T</td><td align="center">14.88美元</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=1158&pid=588">点此购买</a></td></tr><tr><td align="center">1核</td><td align="center">1.2GB</td><td align="center">18GB</td><td align="center">2T</td><td align="center">14.88美元</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=1158&pid=670">点此购买</a></td></tr><tr><td align="center">1核</td><td align="center">1GB</td><td align="center">16GB</td><td align="center">3T</td><td align="center">14.98美元</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=1158&pid=680">点此购买</a></td></tr><tr><td align="center">2核</td><td align="center">1.5GB</td><td align="center">20GB</td><td align="center">4T</td><td align="center">16.55美元</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=1158&pid=135">点此购买</a></td></tr><tr><td align="center">1核</td><td align="center">2.11GB</td><td align="center">21GB</td><td align="center">4T</td><td align="center">17.11美元（2022 双11）</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=1158&pid=688">点此购买</a></td></tr><tr><td align="center">2核</td><td align="center">2GB</td><td align="center">25GB</td><td align="center">4T</td><td align="center">20.98美元</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=1158&pid=681">点此购买</a></td></tr><tr><td align="center">3核</td><td align="center">2GB</td><td align="center">25GB</td><td align="center">3T</td><td align="center">21.80美元</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=1158&pid=58">点此购买</a></td></tr><tr><td align="center">3核</td><td align="center">2.5GB</td><td align="center">40GB</td><td align="center">6.5T</td><td align="center">23.49美元</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=1158&pid=137">点此购买</a></td></tr><tr><td align="center">2核</td><td align="center">2GB</td><td align="center">35GB</td><td align="center">4T</td><td align="center">24.98美元</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=1158&pid=622">点此购买</a></td></tr><tr><td align="center">2核</td><td align="center">2.5GB</td><td align="center">40GB</td><td align="center">3T</td><td align="center">25.88美元</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=1158&pid=671">点此购买</a></td></tr><tr><td align="center">3核</td><td align="center">2.5GB</td><td align="center">40GB</td><td align="center">6T</td><td align="center">27.80美元</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=1158&pid=57">点此购买</a></td></tr><tr><td align="center">2核</td><td align="center">2.5GB</td><td align="center">50GB</td><td align="center">6T</td><td align="center">27.88美元</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=1158&pid=589">点此购买</a></td></tr><tr><td align="center">3核</td><td align="center">3GB</td><td align="center">40GB</td><td align="center">4T</td><td align="center">27.88美元</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=1158&pid=147">点此购买</a></td></tr><tr><td align="center">3核</td><td align="center">3.5GB</td><td align="center">45GB</td><td align="center">7T</td><td align="center">28.99美元</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=1158&pid=130">点此购买</a></td></tr><tr><td align="center">2核</td><td align="center">3.11GB</td><td align="center">41GB</td><td align="center">5T</td><td align="center">29.11美元（2022 双11）</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=1158&pid=689">点此购买</a></td></tr><tr><td align="center">3核</td><td align="center">3GB</td><td align="center">33GB</td><td align="center">6T</td><td align="center">29.89美元</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=1158&pid=122">点此购买</a></td></tr><tr><td align="center">2核</td><td align="center">3GB</td><td align="center">35GB</td><td align="center">5T</td><td align="center">29.99美元</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=1158&pid=473">点此购买</a></td></tr><tr><td align="center">2核</td><td align="center">3GB</td><td align="center">50GB</td><td align="center">6T</td><td align="center">31.98美元</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=1158&pid=623">点此购买</a></td></tr><tr><td align="center">2核</td><td align="center">3GB</td><td align="center">60GB</td><td align="center">8T</td><td align="center">34.88美元</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=1158&pid=590">点此购买</a></td></tr><tr><td align="center">2核</td><td align="center">3.5GB</td><td align="center">60GB</td><td align="center">6T</td><td align="center">35.88美元</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=1158&pid=672">点此购买</a></td></tr><tr><td align="center">3核</td><td align="center">4GB</td><td align="center">75GB</td><td align="center">10T</td><td align="center">43.39美元</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=1158&pid=591">点此购买</a></td></tr><tr><td align="center">3核</td><td align="center">4.11GB</td><td align="center">61GB</td><td align="center">8T</td><td align="center">48.11美元（2022 双11）</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=1158&pid=690">点此购买</a></td></tr><tr><td align="center">4核</td><td align="center">5.5GB</td><td align="center">88GB</td><td align="center">10T</td><td align="center">63.88美元</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=1158&pid=254">点此购买</a></td></tr><tr><td align="center">4核</td><td align="center">8GB</td><td align="center">100GB</td><td align="center">5T</td><td align="center">89美元</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=1158&pid=312">点此购买</a></td></tr><tr><td align="center">4核</td><td align="center">6GB</td><td align="center">140GB</td><td align="center">6T</td><td align="center">95美元</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=1158&pid=63">点此购买</a></td></tr><tr><td align="center">4核</td><td align="center">8GB</td><td align="center">200GB</td><td align="center">8T</td><td align="center">135美元</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=1158&pid=64">点此购买</a></td></tr></tbody></table><h3 id="1-1-账号密码相关"><a href="#1-1-账号密码相关" class="headerlink" title="1.1 账号密码相关"></a>1.1 账号密码相关</h3><p>VPS开通后，可以这样看root密码和控制面板的账户名和密码：<br>打开 Email 訊息紀錄 （英文是：View Email Log）<br>网址是这个：<a href="https://my.racknerd.com/clientarea.php?action=emails">https://my.racknerd.com/clientarea.php?action=emails</a><br>打开一封邮件名是 KVM VPS Login Information的邮件，root密码和控制面板的账户名和密码 都在这里。</p><h2 id="2-流量相关"><a href="#2-流量相关" class="headerlink" title="2. 流量相关"></a>2. 流量相关</h2><p>一、购鸡完后，现在都可以去把VPS的流量翻倍（包括$9.89在内）</p><p>方法1：到LET（lowendtalk）论坛的特定贴子里回帖（新购小鸡此方法成功率百分百）<br><a href="https://lowendtalk.com/discussion/182232/story-time-one-one-dot-one-one-nvm-just-check-this-out#latest">https://lowendtalk.com/discussion/182232/story-time-one-one-dot-one-one-nvm-just-check-this-out#latest</a> 里回帖。</p><p>回帖可以直接用这个模板：</p><blockquote><p>Hello, I would like to double the bandwidth.<br>Order Number: 邮件里有<br>Invoice ID: #邮件里有<br>Thanks!</p></blockquote><p>【Order Number 和 Invoice ID 可这里看：在 Email 訊息紀錄 （英文：View Email Log）网址是 <a href="https://my.racknerd.com/clientarea.php?action=emails">https://my.racknerd.com/clientarea.php?action=emails</a> 邮件列表的标题上有写】</p><p>注：没LET账号的可注册一个，注册时候需要填写注册理由（比如想来交流学习了解VPS资讯），译成英文后写上去。要验证邮箱，等待LET论坛管理员审核你的信息，审核通过会收到邮件，就能正常使用账号回帖评论了。</p><p>推荐翻译软件：<a href="https://www.deepl.com/translator">https://www.deepl.com/translator</a></p><p>方法2：发工单申请翻倍 （在LOC看到极个别MJJ成功的，不过也看到失败的，成功率没保障，考验py能力）</p><p>注1：如果是去年&#x2F;前年买的错过翻倍流量的小鸡，可以试试用续费的invoice号（某MJJ分享的成功经历）</p><p>注2：翻倍流量需要时间，短则当天，慢则三四天</p><p>二、小鸡用完流量的，当月会停机，次月1号重置流量 (美西时间每月1号)</p><h2 id="3-机房相关"><a href="#3-机房相关" class="headerlink" title="3. 机房相关"></a>3. 机房相关</h2><h3 id="3-1-机房介绍"><a href="#3-1-机房介绍" class="headerlink" title="3.1 机房介绍"></a>3.1 机房介绍</h3><p>推荐阅读：<a href="https://blog.laoda.de/archives/cheap-datacenters">【冷知识】说说国外几大廉价机房，MC、CC、INAP、QN、Sharktech几大机房</a></p><h4 id="3-1-1-RN-VPS的机房目前主要是-CC-机房和-MC机房"><a href="#3-1-1-RN-VPS的机房目前主要是-CC-机房和-MC机房" class="headerlink" title="3.1.1 RN VPS的机房目前主要是 CC 机房和 MC机房"></a>3.1.1 RN VPS的机房目前主要是 CC 机房和 MC机房</h4><p>CC 机房（全称ColoCrossing）：圣何塞、西雅图、新泽西、芝加哥、达拉斯等等都是这个。此机房IP基本被 Google 列入黑名单了，富强时搜索会跳Google 验证<strong>（更新：2022年9月15号开始，这些机房的IP大部分也同样不会跳Google验证了）</strong>。</p><p>MC机房（全称Multacom Corporation）：仅有洛杉矶DC2是这个。目前较挤，晚高峰表现差些，好处是 IP不会跳 Google 验证。<strong>另有IPv6</strong> (发工单申请)。</p><p>各有优劣，一般建议可选洛杉矶或圣何塞，但最终还是根据自身需求和实测为准。</p><p>注：google跳验证码问题，可用一键脚本WARP 解决：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -N https://cdn.jsdelivr.net/gh/fscarmen/warp/menu.sh &amp;&amp; bash menu.sh d</span><br></pre></td></tr></table></figure><p>（此脚本项目地址：<a href="https://github.com/fscarmen/warp">https://github.com/fscarmen/warp</a> ）</p><h4 id="3-1-2-网络测试"><a href="#3-1-2-网络测试" class="headerlink" title="3.1.2 网络测试"></a>3.1.2 网络测试</h4><p>洛杉矶DC02：204.13.154.3，<a href="http://lg-lax02.racknerd.com/1000MB.test">http://lg-lax02.racknerd.com/1000MB.test</a></p><p>圣何塞：192.210.207.88，<a href="http://lg-sj.racknerd.com/1000MB.test">http://lg-sj.racknerd.com/1000MB.test</a></p><p>西雅图：192.3.253.2，<a href="http://lg-sea.racknerd.com/1000MB.test">http://lg-sea.racknerd.com/1000MB.test</a></p><p>新泽西： 192.3.165.30，<a href="http://lg-nj.racknerd.com/1000MB.test">http://lg-nj.racknerd.com/1000MB.test</a></p><p>达拉斯：198.23.249.100，<a href="http://lg-dal.racknerd.com/1000MB.test">http://lg-dal.racknerd.com/1000MB.test</a></p><p>芝加哥：198.23.228.15，<a href="http://lg-chi.racknerd.com/1000MB.test">http://lg-chi.racknerd.com/1000MB.test</a></p><p>阿什本：107.173.166.10，<a href="http://lg-ash.racknerd.com/1000MB.test">http://lg-ash.racknerd.com/1000MB.test</a></p><p>亚特兰大：107.173.164.160，<a href="http://lg-atl.racknerd.com/1000MB.test">http://lg-atl.racknerd.com/1000MB.test</a></p><h3 id="3-2-机房迁移"><a href="#3-2-机房迁移" class="headerlink" title="3.2 机房迁移"></a>3.2 机房迁移</h3><p>如果购买的套餐是多个机房可选的那种，可以发工单免费迁移，如果你买的是固定某个机房的，可能要花5刀迁移（一般情况也是免费），一些低价套餐（小于10刀）就难迁移了（成功&#x2F;失败案例都不少，以自己工单结果为准）。<br>工单意思例如可以这样说：线路不好请求换机房，请帮我把这台VPS迁移到XXX</p><p>注1：迁移后IP会变，数据会丢（做好备份），就像重开了一台相同配置的新机器，翻倍的流量可能会没。（可以工单意思回：我之前在Let论坛中留言过，流量翻倍到了2xT（英文注意用过去式表达）。现在流量变回了xT，能申请调整回2xT吗？）</p><p>注2：小鸡迁到LA（dc2）机房的，如果小鸡没有ipv6而自己又需要，可以发工单要个。RN 目前只有DC系列才有ipv6，幸运的话ipv6可以解锁奈飞。</p><h2 id="4-改邮箱、push"><a href="#4-改邮箱、push" class="headerlink" title="4. 改邮箱、push"></a>4. 改邮箱、push</h2><h3 id="4-1-改邮箱"><a href="#4-1-改邮箱" class="headerlink" title="4.1 改邮箱"></a>4.1 改邮箱</h3><p>alenxu在2022-1-22曾说过：我们更换邮箱需要支付费用的哦，防止很多黄牛买了然后转手。<br>（RN公司副总在LOC的ID：alenxu，站群&#x2F;独服的定制可以弄）</p><p>不过，目前是可以发工单免费申请改邮箱。</p><h3 id="4-2-push"><a href="#4-2-push" class="headerlink" title="4.2 push"></a>4.2 push</h3><p>push一次是8刀费用，发工单提push。（push费用是按次算不是按台算的，比如A账号有4台小鸡，要push其中2台到B账号，需支付的是8刀而不是16刀）</p><p>感谢<a href="https://hostloc.com/space-uid-52868.html">@心上人</a>，欢迎大家勘误、补充。</p>]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Racknerd </tag>
            
            <tag> 美国VPS </tag>
            
            <tag> 双十一 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩儿的Docker项目】10分钟搭建一个去中心化微博平台——Misskey ｜二次元风格、联邦宇宙</title>
      <link href="/archives/docker-compose-install-misskey/"/>
      <url>/archives/docker-compose-install-misskey/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这周上班上入魔了，礼拜五下班还以为是礼拜四，导致电脑忘记带回来了，里面正好有前一天还没剪辑的视频 &#x3D; &#x3D;</p><p>这段时间实在是没时间录视频（之后可能会越来越忙），今天趁着周末，更新一期。</p><p>素材来自留言区：</p><p><img src="https://img.laoda.de/i/2022/10/16/lvzyj8-2.webp" alt="e6fd6051a8ee80b38bfe6592ab549d6e.png"></p><p>咕咕尝试搜索了下，发现还挺好玩的，结合网上找的一些资料，分享一下Misskey+Nginx Proxy Manager的搭建经验。</p><p><img src="https://img.laoda.de/i/2022/10/16/lu28g6-2.webp" alt="image-20221016132025409"></p><p>整个搭建过程一开始参考了官网的，发现稍微有点复杂，然后搜索到了下面两个小伙伴的经验分享，非常有帮助，感谢付出！</p><p>搭建分享：<a href="https://candinya.com/posts/minimal-misskey-docker-deploy/">使用Docker最小化部署Misskey</a></p><blockquote><p>本教程基本<del>借鉴</del>抄自上面的搭建教程 XD</p></blockquote><p>使用分享：<a href="https://akaito.xyz/post/misskey/#top">Fediverse不止Mastodon——Misskey介绍</a></p><h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h2><p>Misskey是由日本开发者しゅいろ(syuilo)所创立的去中心化社交网络服务，其官方实例是<a href="https://misskey.io/">misskey.io</a>。Misskey和Mastodon一样，采用了ActivityPub协议，因此可以与联邦宇宙Fediverse互通。</p><p>简单来说，它就是一个去中心化的微博！</p><p><img src="https://img.laoda.de/i/2022/10/16/ltgcve-2.webp" alt="image-20221016131540367"></p><p>我们创建的则是一个实例，不同的实例是可以互相访问互动的。</p><p><img src="https://img.laoda.de/i/2022/10/16/lvw3np-2.webp" alt="image-20221016132327294"></p><p><img src="https://img.laoda.de/i/2022/10/16/lvau7s-2.webp" alt="image-20221016132233386"></p><p><img src="https://img.laoda.de/i/2022/10/16/lverbo-2.webp" alt="image-20221016132251485"></p><h3 id="1-1-相关地址"><a href="#1-1-相关地址" class="headerlink" title="1.1 相关地址"></a>1.1 相关地址</h3><p>官方实例地址：<a href="https://misskey.io/">https://misskey.io/</a> （如果你不想自己搭建，可以直接加入官方的实例，不过貌似是日文的。）</p><p><img src="https://img.laoda.de/i/2022/10/16/ly4txu-2.webp" alt="image-20221016132708956"></p><p>官方网站：<a href="https://misskey-hub.net/en/">https://misskey-hub.net/en/</a></p><p>GitHub地址：<a href="https://github.com/misskey-dev/misskey">https://github.com/misskey-dev/misskey</a> （3k star）</p><p>实例列表：<a href="https://join.misskey.page/zh-CN/instances">https://join.misskey.page/zh-CN/instances</a>  （如果你不想自己搭建，也可以加入一个实例来使用）</p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p><img src="https://img.laoda.de/i/2022/10/16/m42otm-2.webp" alt="image-20221016133707047"></p><h2 id="3-搭建环境"><a href="#3-搭建环境" class="headerlink" title="3. 搭建环境"></a>3. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器24元&#x2F;月VPS一台</del>咕咕自己搭建用的是<a href="https://blog.laoda.de/archives/ovh-sys-2-sat-32-waw">OVH的独立服务器</a>，演示用的是<a href="https://blog.laoda.de/archives/vps-buyvm">卢森堡的BuyVM</a>，如果你只是小范围使用，可以考虑用<a href="https://loll.cc/tx">腾讯轻量购买链接</a>的服务器，（最好是选<strong>非大陆（香港）的服务器</strong>）如果是小白刚开始玩的话，还可以购买<a href="https://blog.laoda.de/archives/cheap-vps-racknerd">Racknerd</a>的服务器，最低一年不到100块（不过这个建议选择1G内存以上的机器）（Racknerd服务器介绍：<a href="https://blog.laoda.de/archives/cheap-vps-racknerd">点击查看</a>）</li><li>系统：Debian 10（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本</a> 非必需DD用原来的系统也OK，之后教程都是用Debian或者Ubuntu搭建～）</li><li>安装好Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需但建议】域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>【非必需】提前安装好宝塔面板海外版本aapanel，并安装好Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程选用】安装好Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><blockquote><p>服务器要求：此项目比较重量，内存至少1G以上，硬盘越大越好。</p></blockquote><h2 id="4-搭建视频"><a href="#4-搭建视频" class="headerlink" title="4. 搭建视频"></a>4. 搭建视频</h2><p>YouTube：<a href="https://youtu.be/pjHEKwJVI1I">https://youtu.be/pjHEKwJVI1I</a></p><p>哔哩哔哩【高清版本可以点击去吐槽到B站观看】：<joe-bilibili bvid="BV1om4y1c7z9"></joe-bilibili></p><h2 id="5-搭建方式"><a href="#5-搭建方式" class="headerlink" title="5. 搭建方式"></a>5. 搭建方式</h2><h3 id="安装系统（腾讯云轻量应用服务器）"><a href="#安装系统（腾讯云轻量应用服务器）" class="headerlink" title="安装系统（腾讯云轻量应用服务器）"></a>安装系统（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlyhcz-2.webp" alt="e59713fba8726d3cb55ae11bca83fe3c.png"></p><p>腾讯云轻量服务器最大的特点就是“轻量”，相比CVM，更适合小白上手，这边我们之间选择Docker基础镜像，就可以省去后面安装Docker的步骤（如果你非要用国内的服务器，这边装的Docker镜像还会帮你配置好国内镜像源，让你加速访问docker镜像资源）。</p><h3 id="登陆（腾讯云轻量应用服务器）"><a href="#登陆（腾讯云轻量应用服务器）" class="headerlink" title="登陆（腾讯云轻量应用服务器）"></a>登陆（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlzlj7-2.webp" alt="2722040ee311eb4a9ebf2a4945bf38f4.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm0gv8-2.webp" alt="c0b5d360053746c4095d592967ee401f.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm1vqw-2.webp" alt="e0ba858f021b846ad0abc27acf5008c2.png"></p><h3 id="5-1-服务器前期配置"><a href="#5-1-服务器前期配置" class="headerlink" title="5.1 服务器前期配置"></a>5.1 服务器前期配置</h3><p>服务器初始设置，参考：</p><p><a href="https://blog.laoda.de/archives/vps-script"><strong>新买了一台服务器“必须”要做的6件小事</strong></a></p><p><a href="https://blog.laoda.de/archives/how-to-secure-a-linux-server"><strong>保护好你的小鸡！保姆级服务器安全教程！</strong></a></p><p>这边由于我们用的是腾讯云轻量应用服务器，系统默认就帮我们创建了名字是<code>lighthouse</code>的用户，系统后台也有防火墙（默认就开了几个常用的端口）</p><p>对小白用户来说，可以不用再去管繁琐的服务器安全的配置，大大降低了服务器防护的门槛。</p><p><a href="https://blog.laoda.de/archives/hello-docker">【Docker系列】不用宝塔面板，小白一样可以玩转VPS服务器！</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i <span class="comment"># 切换到root用户</span></span><br><span class="line"></span><br><span class="line">apt update -y  <span class="comment"># 升级packages</span></span><br><span class="line"></span><br><span class="line">apt install wget curl sudo vim git -y  <span class="comment"># Debian系统比较干净，安装常用的软件</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：VPS的内存如果过小，建议设置一下SWAP，一般为内存的1-1.5倍即可，可以让系统运行更流畅！</p></blockquote><p>设置SWAP可以用脚本:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O box.sh https://raw.githubusercontent.com/BlueSkyXN/SKY-BOX/main/box.sh &amp;&amp; <span class="built_in">chmod</span> +x box.sh &amp;&amp; clear &amp;&amp; ./box.sh</span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2022/05/28/uoikkd-0.webp" alt="image-20220528185512488" style="zoom:50%;" /><p>选择<code>18</code>，然后输入你想要扩容的数值即可。</p><img src="https://img.laoda.de/i/2022/05/28/up2dkf-0.webp" alt="image-20220528185604586" style="zoom:50%;" /><p>使用腾讯云轻量应用服务器的小伙伴可以直接跳到<code>5.2.4</code></p><h3 id="5-2-安装Docker（使用腾讯云轻量应用服务器可跳过这一部分）"><a href="#5-2-安装Docker（使用腾讯云轻量应用服务器可跳过这一部分）" class="headerlink" title="5.2 安装Docker（使用腾讯云轻量应用服务器可跳过这一部分）"></a>5.2 安装Docker（使用腾讯云轻量应用服务器可跳过这一部分）</h3><h4 id="5-2-1-非大陆服务器Docker安装"><a href="#5-2-1-非大陆服务器Docker安装" class="headerlink" title="5.2.1 非大陆服务器Docker安装"></a>5.2.1 <strong>非大陆服务器Docker安装</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -qO- get.docker.com | bash</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker -v  <span class="comment">#查看docker版本</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker  <span class="comment"># 设置开机自动启动</span></span><br></pre></td></tr></table></figure><p><strong>修改Docker配置（可选）（来自<a href="https://u.sb/debian-install-docker/">烧饼博客</a>）</strong></p><p>以下配置会增加一段自定义内网 IPv6 地址，开启容器的 IPv6 功能，以及限制日志文件大小，防止 Docker 日志塞满硬盘（泪的教训）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/docker/daemon.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    &quot;log-driver&quot;: &quot;json-file&quot;,</span></span><br><span class="line"><span class="string">    &quot;log-opts&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;max-size&quot;: &quot;20m&quot;,</span></span><br><span class="line"><span class="string">        &quot;max-file&quot;: &quot;3&quot;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    &quot;ipv6&quot;: true,</span></span><br><span class="line"><span class="string">    &quot;fixed-cidr-v6&quot;: &quot;fd00:dead:beef:c0::/80&quot;,</span></span><br><span class="line"><span class="string">    &quot;experimental&quot;:true,</span></span><br><span class="line"><span class="string">    &quot;ip6tables&quot;:true</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>然后重启 Docker 服务：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h4 id="5-2-2-非大陆服务器Docker-compose安装"><a href="#5-2-2-非大陆服务器Docker-compose安装" class="headerlink" title="5.2.2 非大陆服务器Docker-compose安装"></a>5.2.2 <strong>非大陆服务器Docker-compose安装</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/1.29.2/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose --version  <span class="comment">#查看docker-compose版本</span></span><br></pre></td></tr></table></figure><h4 id="5-2-3-国内服务器安装docker"><a href="#5-2-3-国内服务器安装docker" class="headerlink" title="5.2.3 国内服务器安装docker"></a>5.2.3 <strong>国内服务器安装docker</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -sSL https://get.daocloud.io/docker | sh</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker -v  <span class="comment">#查看docker版本</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker  <span class="comment"># 设置开机自动启动</span></span><br></pre></td></tr></table></figure><p><strong>修改Docker配置（可选）（来自<a href="https://u.sb/debian-install-docker/">烧饼博客</a>）</strong></p><p>以下配置会增加一段自定义内网 IPv6 地址，开启容器的 IPv6 功能，以及限制日志文件大小，防止 Docker 日志塞满硬盘（泪的教训）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/docker/daemon.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    &quot;log-driver&quot;: &quot;json-file&quot;,</span></span><br><span class="line"><span class="string">    &quot;log-opts&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;max-size&quot;: &quot;20m&quot;,</span></span><br><span class="line"><span class="string">        &quot;max-file&quot;: &quot;3&quot;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    &quot;ipv6&quot;: true,</span></span><br><span class="line"><span class="string">    &quot;fixed-cidr-v6&quot;: &quot;fd00:dead:beef:c0::/80&quot;,</span></span><br><span class="line"><span class="string">    &quot;experimental&quot;:true,</span></span><br><span class="line"><span class="string">    &quot;ip6tables&quot;:true</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>然后重启 Docker 服务：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h4 id="5-2-4-国内服务器安装docker-compose"><a href="#5-2-4-国内服务器安装docker-compose" class="headerlink" title="5.2.4 国内服务器安装docker-compose"></a>5.2.4 <strong>国内服务器安装docker-compose</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -L https://get.daocloud.io/docker/compose/releases/download/v2.1.1/docker-compose-`<span class="built_in">uname</span> -s`-`<span class="built_in">uname</span> -m` &gt; /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line">docker-compose --version  <span class="comment">#查看docker-compose版本</span></span><br></pre></td></tr></table></figure><h3 id="5-3-安装NginxProxyManager"><a href="#5-3-安装NginxProxyManager" class="headerlink" title="5.3 安装NginxProxyManager"></a>5.3 安装NginxProxyManager</h3><p>参考这边的内容：<a href="https://blog.laoda.de/archives/nginxproxymanager">https://blog.laoda.de/archives/nginxproxymanager</a></p><h3 id="5-4-创建安装目录"><a href="#5-4-创建安装目录" class="headerlink" title="5.4 创建安装目录"></a>5.4 创建安装目录</h3><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/misskey</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/misskey</span><br></pre></td></tr></table></figure><p>这边我们直接用docker的方式安装。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure><p>英文输入法下，按<code>i</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Misskey minimal deploy config</span></span><br><span class="line"><span class="attr">version:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">web:</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span> <span class="comment"># 自动重启，请注意如果您对您的配置没有信心，请不要开启这个选项，以避免进程崩溃反复重启耗费大量资源！</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">misskey/misskey:latest</span> <span class="comment"># 这里使用了官方镜像，以避免本地构建时资源不足的问题</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">misskey_web</span> <span class="comment"># 容器名，方便管理，您可以自行修改为您觉得合适的内容</span></span><br><span class="line">    <span class="attr">links:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">db</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;3001:3001&quot;</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">internal_network</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">external_network</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./config:/misskey/.config:ro</span> <span class="comment"># 用于映射配置文件，请根据您的实际配置来决定文件夹名称，设定为只读即可；</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./files:/misskey/files</span> <span class="comment"># 用户上传到本地的文件，如果您一开始就接入外部存储（如wasabi或是AWS S3）您可以忽略这块配置</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">misskey_redis</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">internal_network</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./redis:/data</span> <span class="comment"># redis数据库的数据文件夹映射，创建后默认在 ./redis 文件夹中</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">db:</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">postgres:12.2-alpine</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">misskey_db</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">internal_network</span></span><br><span class="line">    <span class="attr">env_file:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./config/docker.env</span> <span class="comment"># 需要使用配置文件中设置的 Docker 环境变量</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./db:/var/lib/postgresql/data</span> <span class="comment"># 主数据库的数据文件夹映射，创建后默认在 ./db 文件夹中</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">internal_network:</span> <span class="comment"># 内部网络</span></span><br><span class="line">    <span class="attr">internal:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">external_network:</span> <span class="comment"># 外部网</span></span><br></pre></td></tr></table></figure><p>按一下<code>esc</code>，然后<code>:wq</code> 保存退出，之后，</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> config</span><br><span class="line"><span class="built_in">cd</span> config</span><br><span class="line">vim default.yml</span><br></pre></td></tr></table></figure><p>复制下面的内容，填入：</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span></span><br><span class="line"><span class="comment"># Misskey configuration</span></span><br><span class="line"><span class="comment">#━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#   ┌─────┐</span></span><br><span class="line"><span class="comment">#───┘ URL └─────────────────────────────────────────────────────</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Final accessible URL seen by a user.</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://gugu.ge/</span>       <span class="comment"># 注意改成自己最后反向代理想要的网址</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ONCE YOU HAVE STARTED THE INSTANCE, DO NOT CHANGE THE</span></span><br><span class="line"><span class="comment"># URL SETTINGS AFTER THAT!</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#   ┌───────────────────────┐</span></span><br><span class="line"><span class="comment">#───┘ Port and TLS settings └───────────────────────────────────</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Misskey requires a reverse proxy to support HTTPS connections.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#                 +----- https://example.tld/ ------------+</span></span><br><span class="line"><span class="comment">#   +------+      |+-------------+      +----------------+|</span></span><br><span class="line"><span class="comment">#   | User | ---&gt; || Proxy (443) | ---&gt; | Misskey (3000) ||</span></span><br><span class="line"><span class="comment">#   +------+      |+-------------+      +----------------+|</span></span><br><span class="line"><span class="comment">#                 +---------------------------------------+</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   You need to set up a reverse proxy. (e.g. nginx)</span></span><br><span class="line"><span class="comment">#   An encrypted connection with HTTPS is highly recommended</span></span><br><span class="line"><span class="comment">#   because tokens may be transferred in GET requests.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The port that your Misskey server should listen on.</span></span><br><span class="line"><span class="attr">port:</span> <span class="number">3001</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#   ┌──────────────────────────┐</span></span><br><span class="line"><span class="comment">#───┘ PostgreSQL configuration └────────────────────────────────</span></span><br><span class="line"></span><br><span class="line"><span class="attr">db:</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">db</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">5432</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Database name</span></span><br><span class="line">  <span class="attr">db:</span> <span class="string">misskey</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Auth</span></span><br><span class="line">  <span class="attr">user:</span> <span class="string">example-misskey-user</span></span><br><span class="line">  <span class="attr">pass:</span> <span class="string">example-misskey-pass</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Whether disable Caching queries</span></span><br><span class="line">  <span class="comment">#disableCache: true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Extra Connection options</span></span><br><span class="line">  <span class="comment">#extra:</span></span><br><span class="line">  <span class="comment">#  ssl: true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#   ┌─────────────────────┐</span></span><br><span class="line"><span class="comment">#───┘ Redis configuration └─────────────────────────────────────</span></span><br><span class="line"></span><br><span class="line"><span class="attr">redis:</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">redis</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">6379</span></span><br><span class="line">  <span class="comment">#family: 0  # 0=Both, 4=IPv4, 6=IPv6</span></span><br><span class="line">  <span class="comment">#pass: example-pass</span></span><br><span class="line">  <span class="comment">#prefix: example-prefix</span></span><br><span class="line">  <span class="comment">#db: 1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#   ┌─────────────────────────────┐</span></span><br><span class="line"><span class="comment">#───┘ Elasticsearch configuration └─────────────────────────────</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#elasticsearch:</span></span><br><span class="line"><span class="comment">#  host: localhost</span></span><br><span class="line"><span class="comment">#  port: 9200</span></span><br><span class="line"><span class="comment">#  ssl: false</span></span><br><span class="line"><span class="comment">#  user: </span></span><br><span class="line"><span class="comment">#  pass: </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#   ┌───────────────┐</span></span><br><span class="line"><span class="comment">#───┘ ID generation └───────────────────────────────────────────</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># You can select the ID generation method.</span></span><br><span class="line"><span class="comment"># You don&#x27;t usually need to change this setting, but you can</span></span><br><span class="line"><span class="comment"># change it according to your preferences.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Available methods:</span></span><br><span class="line"><span class="comment"># aid ... Short, Millisecond accuracy</span></span><br><span class="line"><span class="comment"># meid ... Similar to ObjectID, Millisecond accuracy</span></span><br><span class="line"><span class="comment"># ulid ... Millisecond accuracy</span></span><br><span class="line"><span class="comment"># objectid ... This is left for backward compatibility</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ONCE YOU HAVE STARTED THE INSTANCE, DO NOT CHANGE THE</span></span><br><span class="line"><span class="comment"># ID SETTINGS AFTER THAT!</span></span><br><span class="line"></span><br><span class="line"><span class="attr">id:</span> <span class="string">&#x27;aid&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#   ┌─────────────────────┐</span></span><br><span class="line"><span class="comment">#───┘ Other configuration └─────────────────────────────────────</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Whether disable HSTS</span></span><br><span class="line"><span class="comment">#disableHsts: true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Number of worker processes</span></span><br><span class="line"><span class="comment">#clusterLimit: 1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Job concurrency per worker</span></span><br><span class="line"><span class="comment"># deliverJobConcurrency: 128</span></span><br><span class="line"><span class="comment"># inboxJobConcurrency: 16</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Job rate limiter</span></span><br><span class="line"><span class="comment"># deliverJobPerSec: 128</span></span><br><span class="line"><span class="comment"># inboxJobPerSec: 16</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Job attempts</span></span><br><span class="line"><span class="comment"># deliverJobMaxAttempts: 12</span></span><br><span class="line"><span class="comment"># inboxJobMaxAttempts: 8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># IP address family used for outgoing request (ipv4, ipv6 or dual)</span></span><br><span class="line"><span class="comment">#outgoingAddressFamily: ipv4</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Syslog option</span></span><br><span class="line"><span class="comment">#syslog:</span></span><br><span class="line"><span class="comment">#  host: localhost</span></span><br><span class="line"><span class="comment">#  port: 514</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Proxy for HTTP/HTTPS</span></span><br><span class="line"><span class="comment">#proxy: http://127.0.0.1:3128</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#proxyBypassHosts: [</span></span><br><span class="line"><span class="comment">#  &#x27;example.com&#x27;,</span></span><br><span class="line"><span class="comment">#  &#x27;192.0.2.8&#x27;</span></span><br><span class="line"><span class="comment">#]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Proxy for SMTP/SMTPS</span></span><br><span class="line"><span class="comment">#proxySmtp: http://127.0.0.1:3128   # use HTTP/1.1 CONNECT</span></span><br><span class="line"><span class="comment">#proxySmtp: socks4://127.0.0.1:1080 # use SOCKS4</span></span><br><span class="line"><span class="comment">#proxySmtp: socks5://127.0.0.1:1080 # use SOCKS5</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Media Proxy</span></span><br><span class="line"><span class="comment">#mediaProxy: https://example.com/proxy</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Proxy remote files (default: false)</span></span><br><span class="line"><span class="comment">#proxyRemoteFiles: true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Sign to ActivityPub GET request (default: false)</span></span><br><span class="line"><span class="comment">#signToActivityPubGet: true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#allowedPrivateNetworks: [</span></span><br><span class="line"><span class="comment">#  &#x27;127.0.0.1/32&#x27;</span></span><br><span class="line"><span class="comment">#]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Upload or download file size limits (bytes)</span></span><br><span class="line"><span class="comment">#maxFileSize: 262144000</span></span><br></pre></td></tr></table></figure><p>按一下<code>esc</code>，然后<code>:wq</code> 保存退出，之后，</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim docker.env</span><br></pre></td></tr></table></figure><p>复制下面的内容，填入（密码如果修改的话注意和上面对应）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># db settings</span></span><br><span class="line">POSTGRES_PASSWORD=example-misskey-pass</span><br><span class="line">POSTGRES_USER=example-misskey-user</span><br><span class="line">POSTGRES_DB=misskey</span><br></pre></td></tr></table></figure><p>最后：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ..    <span class="comment"># 来到dockercompose文件所在的文件夹下</span></span><br><span class="line">docker-compose run --<span class="built_in">rm</span> web yarn run init   <span class="comment"># 初始化数据库</span></span><br><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><h3 id="5-5-打开服务器防火墙并访问网页"><a href="#5-5-打开服务器防火墙并访问网页" class="headerlink" title="5.5 打开服务器防火墙并访问网页"></a>5.5 打开服务器防火墙并访问网页</h3><p>打开防火墙的端口<code>3001</code></p><p>腾讯云打开方法如下：</p><img src="https://img.laoda.de/i/2022/06/30/zlio5h-2.webp" alt="image-20220630215240864" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/06/30/10h3dqt-2.webp" alt="image-20220630220546335" style="zoom:33%;" /><p>图中示例填的是<code>5230</code>，备注填的是<code>memos</code>，这边我们填<code>3001</code>，示例填<code>misskey</code> ，确定即可（如果你在dockercompose文件里换了<code>8081</code>，这边就需要填<code>8081</code>，以此类推）</p><img src="https://img.laoda.de/i/2022/08/19/o4byqz-2.webp" alt="image-20220819145844555" style="zoom:33%;" /><p>查看端口是否被占用（以<code>3001</code>为例），输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:3001  <span class="comment">#查看3001端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果啥也没出现，表示端口未被占用，我们可以继续下面的操作了～</p><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用（被占用了就修改一下端口，比如改成8081，注意docker命令行里和防火墙都要改）</p><p>理论上我们就可以输入<code>http://ip:3001</code>访问了。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的IP。</p><p>2、遇到访问不了的情况，请再次检查在宝塔面板的防火墙和服务商的后台防火墙是否打开对应了端口。</p></blockquote><p>由于Misskey是需要ssl访问的，所以我们需要一个域名。</p><p>而且最好是短一些的域名或者是有意义一点的域名。</p><p>奇怪后缀的域名可以到趣域这边搜索看看：<a href="https://www.quyu.net/">https://www.quyu.net/</a></p><p>其他域名可以到<a href="https://loll.cc/ns">namesilo</a>上看看，<a href="https://loll.cc/ns">namesilo</a>上面xyz后缀的域名一年就7块钱，可以年抛。</p><p>如果想要长期使用，还是建议买com后缀的域名，更加正规一些，可以输入<code>laodade</code>来获得1美元的优惠（不知道现在还有没有）</p><p><a href="https://loll.cc/ns">namesilo</a>自带隐私保护，咕咕一直在用这家，价格也是这些注册商里面比较低的，关键是他家不像其他家域名注册商，没有七七八八的套路！（就是后台界面有些<del>丑</del>古老 &#x3D; &#x3D;）</p><p><a href="https://blog.laoda.de/archives/namesilo">【域名购买】Namesilo优惠码和域名解析教程（附带服务器购买推荐和注意事项）</a></p><p>我们接着往下看！</p><h3 id="5-6-更新"><a href="#5-6-更新" class="headerlink" title="5.6 更新"></a>5.6 更新</h3><h4 id="5-6-1-docker-compose部署"><a href="#5-6-1-docker-compose部署" class="headerlink" title="5.6.1 docker-compose部署"></a>5.6.1 docker-compose部署</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/misskey</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/misskey /root/data/docker_data/misskey.archive  <span class="comment"># 万事先备份，以防万一，其实这边没必要，因为我们没有映射到本地文件夹</span></span><br><span class="line"></span><br><span class="line">docker-compose pull</span><br><span class="line"></span><br><span class="line">docker-compose up -d    <span class="comment"># 请不要使用docker-compose stop来停止容器，因为这么做需要额外的时间等待容器停止；docker-compose up -d直接升级容器时会自动停止并立刻重建新的容器，完全没有必要浪费那些时间。</span></span><br><span class="line"></span><br><span class="line">docker image prune  <span class="comment"># prune 命令用来删除不再使用的 docker 对象。删除所有未被 tag 标记和未被容器使用的镜像</span></span><br></pre></td></tr></table></figure><p>提示：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WARNING! This will remove all dangling images.</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] </span><br></pre></td></tr></table></figure><p>输入<code>y</code></p><p>利用Docker搭建的应用，更新非常容易～</p><h3 id="5-7-卸载"><a href="#5-7-卸载" class="headerlink" title="5.7 卸载"></a>5.7 卸载</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/misskey</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/misskey  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>可以卸载得很干净。</p><h2 id="6-反向代理"><a href="#6-反向代理" class="headerlink" title="6. 反向代理"></a>6. 反向代理</h2><h3 id="6-1-利用Nginx-Proxy-Manager"><a href="#6-1-利用Nginx-Proxy-Manager" class="headerlink" title="6.1 利用Nginx Proxy Manager"></a>6.1 利用Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p><img src="https://img.laoda.de/i/2022/10/16/n6t02e-2.webp" alt="image-20221016140213282"></p><p>之后，登陆Nginx Proxy Manager（不会的看这个：<strong>安装Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称NPM）会用到<code>80</code>、<code>443</code>端口，所以本机不能占用（比如原来就有Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom: 33%;" /><p><img src="https://img.laoda.de/i/2022/10/16/n7b9hm-2.webp" alt="image-20221016140258381"></p><blockquote><p> 注意填写对应的<code>域名</code>、<code>IP</code>和<code>端口</code>，按文章来的话，应该是<code>3001</code></p></blockquote><p><strong>IP填写：</strong></p><p>如果Nginx Proxy Manager和Alltube在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的Docker容器内部IP。</p><p><img src="https://img.laoda.de/i/2022/09/29/pcdnz5-2.webp"></p><p>否则直接填<code>misskey</code>所在的服务器IP就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom: 33%;" /><p>再次打开，勾选这些：</p><p><img src="https://img.laoda.de/i/2022/10/16/n7nn6e-2.webp" alt="image-20221016140356324"></p><p>然后就可以用域名来安装访问了。</p><h3 id="6-2-利用宝塔面板"><a href="#6-2-利用宝塔面板" class="headerlink" title="6.2 利用宝塔面板"></a>6.2 利用宝塔面板</h3><p>发现还是有不少小伙伴习惯用宝塔面板，这边也贴一个宝塔面板的反代配置：</p><p>直接新建一个站点，不要数据库，不要php，纯静态即可。</p><p>然后打开下面的配置，修改Nginx的配置。</p><p><img src="https://img.laoda.de/i/2022/08/19/ov4xrt-2.webp" alt="image-20220819150345725"></p><p><img src="https://img.laoda.de/i/2022/08/19/owbbkb-2.webp" alt="image-20220819150542867"></p><p>代码如下：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:3001/;       <span class="comment"># 注意改成你实际使用的端口</span></span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此方法对90%的反向代理都能生效。</p><p>有同学可能会问，为什么不直接用宝塔自带的反向代理功能。</p><p><img src="https://img.laoda.de/i/2022/08/19/oxf800-2.webp" alt="image-20220819150730128"></p><p>也可以，不过咕咕自己之前遇到过当有多个网站需要反代的时候，在这边设置会报错的情况 &#x3D; &#x3D; </p><p>所以后来就不用了，直接用上面的方法来操作了。</p><h2 id="7-使用教程"><a href="#7-使用教程" class="headerlink" title="7. 使用教程"></a>7. 使用教程</h2><h3 id="7-1-安装和配置"><a href="#7-1-安装和配置" class="headerlink" title="7.1 安装和配置"></a>7.1 安装和配置</h3><p>见咕咕的视频。</p><p>详细使用参考：<a href="https://akaito.xyz/post/misskey/#top">Fediverse不止Mastodon——Misskey介绍</a></p><h2 id="8-目前遇到的问题"><a href="#8-目前遇到的问题" class="headerlink" title="8. 目前遇到的问题"></a>8. 目前遇到的问题</h2><p>第一次打开速度非常慢  &#x3D; &#x3D;</p><h2 id="9-结尾"><a href="#9-结尾" class="headerlink" title="9. 结尾"></a>9. 结尾</h2><p>祝大家用得开心，有问题可以去GitHub提<a href="https://github.com/misskey-dev/misskey/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，项目处于刚开始阶段，有能力给项目做贡献的同学，也欢迎积极加入到<a href="https://github.com/misskey-dev/misskey">项目</a>中来，贡献自己的一份力量！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>搭建参考：<a href="https://candinya.com/posts/minimal-misskey-docker-deploy/">使用Docker最小化部署Misskey</a></p><p>使用参考：<a href="https://akaito.xyz/post/misskey/#top">Fediverse不止Mastodon——Misskey介绍</a></p><p>官方实例地址：<a href="https://misskey.io/">https://misskey.io/</a></p><p>官方网站：<a href="https://misskey-hub.net/en/">https://misskey-hub.net/en/</a></p><p>GitHub地址：<a href="https://github.com/misskey-dev/misskey">https://github.com/misskey-dev/misskey</a> （3k star）</p><p>实例列表：<a href="https://join.misskey.page/zh-CN/instances">https://join.misskey.page/zh-CN/instances</a>  （如果你不想自己搭建，也可以加入一个实例来使用）</p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 去中心化 </tag>
            
            <tag> Mastodon </tag>
            
            <tag> ActivityPub协议 </tag>
            
            <tag> 联邦宇宙 </tag>
            
            <tag> Fediverse </tag>
            
            <tag> 微博平台 </tag>
            
            <tag> 社交媒体 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩儿的Docker项目】10分钟自建一个B站、油管、知乎视频下载服务——AllTube</title>
      <link href="/archives/docker-compose-install-alltube/"/>
      <url>/archives/docker-compose-install-alltube/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>咕咕之前一直把B站和YouTube当作视频存储的地方，上传到平台后，可以给本地硬盘或者VPS、网盘省出来不少空间。</p><p>不过最近，有需要用到之前的视频，本地已经删除了，B站上还有，需要想办法把视频从B站下载下来，然而貌似B站没有直接下载视频的选项，需要用第三方服务来下载（YouTube下载需要开通会员），这周就来和大家介绍一个GitHub上开源的理论上可以下载各大视频网站上的视频的项目——Alltube。</p><p><img src="https://img.laoda.de/i/2022/10/12/id3cgb-2.webp" alt="38780f17a3d707dcfb4cdf36bb87c8db.png"></p><blockquote><p>友情提示：下载他人视频使用，需要注意版权问题</p></blockquote><h3 id="相关地址"><a href="#相关地址" class="headerlink" title="相关地址"></a>相关地址</h3><p>官方Demo地址：<a href="https://alltubedownload.net/">https://alltubedownload.net/</a><br>GitHub地址：<a href="https://github.com/Rudloff/alltube">https://github.com/Rudloff/alltube</a> （2.5k star）</p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p>以下载<a href="https://blog.laoda.de/archives/docker-install-memos">【好玩儿的Docker项目】10分钟搭建一个碎片化知识卡片管理工具——Memos</a>视频为例子：</p><p> B站链接：<code>https://www.bilibili.com/video/BV1ha411d78G</code></p><p><img src="https://img.laoda.de/i/2022/10/12/ieaqbw-2.webp" alt="0bdfc75cc142640c660f5573bb599e44.png"></p><p><img src="https://img.laoda.de/i/2022/10/12/iecra4-2.webp" alt="71d2865d691bb3870cf70826efcd941c.png"></p><p>点击下载即可。</p><p>YouTube链接：<code>https://youtu.be/GLzY3JN3Sck</code><br><img src="https://img.laoda.de/i/2022/10/12/iep9kn-2.webp" alt="5b49bed174a0d0a28719e81ae43f06db.png"></p><p><img src="https://img.laoda.de/i/2022/10/12/ieudi2-2.webp" alt="cb1a389f1c9718efdfb607dcdfa89a51.png"></p><p>同样点击下载即可。</p><h2 id="3-搭建环境"><a href="#3-搭建环境" class="headerlink" title="3. 搭建环境"></a>3. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器24元&#x2F;月VPS一台</del>本期搭建用的是<a href="https://loll.cc/tx">腾讯轻量购买链接</a>的服务器，（最好是选<strong>非大陆（香港）的服务器</strong>）如果是小白刚开始玩的话，还可以购买<a href="https://blog.laoda.de/archives/cheap-vps-racknerd">Racknerd</a>的服务器，最低一年不到100块（不过搭建Docker还是建议选择1G内存以上的机器）（Racknerd服务器介绍：<a href="https://blog.laoda.de/archives/cheap-vps-racknerd">点击查看</a>）</li><li>系统：Debian 10（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本</a> 非必需DD用原来的系统也OK，之后教程都是用Debian或者Ubuntu搭建～）</li><li>安装好Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需但建议】域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>【非必需】提前安装好宝塔面板海外版本aapanel，并安装好Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程选用】安装好Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><blockquote><p>服务器要求：不是非常高，能搭建Docker即可，建议1G以上。</p></blockquote><h2 id="4-搭建视频（有时间再录-）"><a href="#4-搭建视频（有时间再录-）" class="headerlink" title="4. 搭建视频（有时间再录 &#x3D; &#x3D;）"></a>4. 搭建视频（有时间再录 &#x3D; &#x3D;）</h2><p>YouTube：<a href="https://youtu.be/jS3a2giGo9U">https://youtu.be/jS3a2giGo9U</a></p><p>哔哩哔哩【高清版本可以点击去吐槽到B站观看】：<joe-bilibili bvid="BV11G4y1n7G9"></joe-bilibili></p><h2 id="5-搭建方式"><a href="#5-搭建方式" class="headerlink" title="5. 搭建方式"></a>5. 搭建方式</h2><h3 id="安装系统（腾讯云轻量应用服务器）"><a href="#安装系统（腾讯云轻量应用服务器）" class="headerlink" title="安装系统（腾讯云轻量应用服务器）"></a>安装系统（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlyhcz-2.webp" alt="e59713fba8726d3cb55ae11bca83fe3c.png"></p><p>腾讯云轻量服务器最大的特点就是“轻量”，相比CVM，更适合小白上手，这边我们之间选择Docker基础镜像，就可以省去后面安装Docker的步骤（如果你非要用国内的服务器，这边装的Docker镜像还会帮你配置好国内镜像源，让你加速访问docker镜像资源）。</p><h3 id="登陆（腾讯云轻量应用服务器）"><a href="#登陆（腾讯云轻量应用服务器）" class="headerlink" title="登陆（腾讯云轻量应用服务器）"></a>登陆（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlzlj7-2.webp" alt="2722040ee311eb4a9ebf2a4945bf38f4.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm0gv8-2.webp" alt="c0b5d360053746c4095d592967ee401f.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm1vqw-2.webp" alt="e0ba858f021b846ad0abc27acf5008c2.png"></p><h3 id="5-1-服务器前期配置"><a href="#5-1-服务器前期配置" class="headerlink" title="5.1 服务器前期配置"></a>5.1 服务器前期配置</h3><p>服务器初始设置，参考：</p><p><a href="https://blog.laoda.de/archives/vps-script"><strong>新买了一台服务器“必须”要做的6件小事</strong></a></p><p><a href="https://blog.laoda.de/archives/how-to-secure-a-linux-server"><strong>保护好你的小鸡！保姆级服务器安全教程！</strong></a></p><p>这边由于我们用的是腾讯云轻量应用服务器，系统默认就帮我们创建了名字是<code>lighthouse</code>的用户，系统后台也有防火墙（默认就开了几个常用的端口）</p><p>对小白用户来说，可以不用再去管繁琐的服务器安全的配置，大大降低了服务器防护的门槛。</p><p><a href="https://blog.laoda.de/archives/hello-docker">【Docker系列】不用宝塔面板，小白一样可以玩转VPS服务器！</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i <span class="comment"># 切换到root用户</span></span><br><span class="line"></span><br><span class="line">apt update -y  <span class="comment"># 升级packages</span></span><br><span class="line"></span><br><span class="line">apt install wget curl sudo vim git -y  <span class="comment"># Debian系统比较干净，安装常用的软件</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：VPS的内存如果过小，建议设置一下SWAP，一般为内存的1-1.5倍即可，可以让系统运行更流畅！</p></blockquote><p>设置SWAP可以用脚本:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O box.sh https://raw.githubusercontent.com/BlueSkyXN/SKY-BOX/main/box.sh &amp;&amp; <span class="built_in">chmod</span> +x box.sh &amp;&amp; clear &amp;&amp; ./box.sh</span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2022/05/28/uoikkd-0.webp" alt="image-20220528185512488" style="zoom:50%;" /><p>选择<code>18</code>，然后输入你想要扩容的数值即可。</p><img src="https://img.laoda.de/i/2022/05/28/up2dkf-0.webp" alt="image-20220528185604586" style="zoom:50%;" /><p>使用腾讯云轻量应用服务器的小伙伴可以直接跳到<code>5.2.4</code></p><h3 id="5-2-安装Docker（使用腾讯云轻量应用服务器可跳过这一部分）"><a href="#5-2-安装Docker（使用腾讯云轻量应用服务器可跳过这一部分）" class="headerlink" title="5.2 安装Docker（使用腾讯云轻量应用服务器可跳过这一部分）"></a>5.2 安装Docker（使用腾讯云轻量应用服务器可跳过这一部分）</h3><h4 id="5-2-1-非大陆服务器Docker安装"><a href="#5-2-1-非大陆服务器Docker安装" class="headerlink" title="5.2.1 非大陆服务器Docker安装"></a>5.2.1 <strong>非大陆服务器Docker安装</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -qO- get.docker.com | bash</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker -v  <span class="comment">#查看docker版本</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker  <span class="comment"># 设置开机自动启动</span></span><br></pre></td></tr></table></figure><p><strong>修改Docker配置（可选）（来自<a href="https://u.sb/debian-install-docker/">烧饼博客</a>）</strong></p><p>以下配置会增加一段自定义内网 IPv6 地址，开启容器的 IPv6 功能，以及限制日志文件大小，防止 Docker 日志塞满硬盘（泪的教训）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/docker/daemon.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    &quot;log-driver&quot;: &quot;json-file&quot;,</span></span><br><span class="line"><span class="string">    &quot;log-opts&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;max-size&quot;: &quot;20m&quot;,</span></span><br><span class="line"><span class="string">        &quot;max-file&quot;: &quot;3&quot;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    &quot;ipv6&quot;: true,</span></span><br><span class="line"><span class="string">    &quot;fixed-cidr-v6&quot;: &quot;fd00:dead:beef:c0::/80&quot;,</span></span><br><span class="line"><span class="string">    &quot;experimental&quot;:true,</span></span><br><span class="line"><span class="string">    &quot;ip6tables&quot;:true</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>然后重启 Docker 服务：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h4 id="5-2-2-非大陆服务器Docker-compose安装"><a href="#5-2-2-非大陆服务器Docker-compose安装" class="headerlink" title="5.2.2 非大陆服务器Docker-compose安装"></a>5.2.2 <strong>非大陆服务器Docker-compose安装</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/1.29.2/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose --version  <span class="comment">#查看docker-compose版本</span></span><br></pre></td></tr></table></figure><h4 id="5-2-3-国内服务器安装docker"><a href="#5-2-3-国内服务器安装docker" class="headerlink" title="5.2.3 国内服务器安装docker"></a>5.2.3 <strong>国内服务器安装docker</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -sSL https://get.daocloud.io/docker | sh</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker -v  <span class="comment">#查看docker版本</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker  <span class="comment"># 设置开机自动启动</span></span><br></pre></td></tr></table></figure><p><strong>修改Docker配置（可选）（来自<a href="https://u.sb/debian-install-docker/">烧饼博客</a>）</strong></p><p>以下配置会增加一段自定义内网 IPv6 地址，开启容器的 IPv6 功能，以及限制日志文件大小，防止 Docker 日志塞满硬盘（泪的教训）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/docker/daemon.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    &quot;log-driver&quot;: &quot;json-file&quot;,</span></span><br><span class="line"><span class="string">    &quot;log-opts&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;max-size&quot;: &quot;20m&quot;,</span></span><br><span class="line"><span class="string">        &quot;max-file&quot;: &quot;3&quot;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    &quot;ipv6&quot;: true,</span></span><br><span class="line"><span class="string">    &quot;fixed-cidr-v6&quot;: &quot;fd00:dead:beef:c0::/80&quot;,</span></span><br><span class="line"><span class="string">    &quot;experimental&quot;:true,</span></span><br><span class="line"><span class="string">    &quot;ip6tables&quot;:true</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>然后重启 Docker 服务：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h4 id="5-2-4-国内服务器安装docker-compose"><a href="#5-2-4-国内服务器安装docker-compose" class="headerlink" title="5.2.4 国内服务器安装docker-compose"></a>5.2.4 <strong>国内服务器安装docker-compose</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -L https://get.daocloud.io/docker/compose/releases/download/v2.1.1/docker-compose-`<span class="built_in">uname</span> -s`-`<span class="built_in">uname</span> -m` &gt; /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line">docker-compose --version  <span class="comment">#查看docker-compose版本</span></span><br></pre></td></tr></table></figure><h3 id="5-3-安装NginxProxyManager"><a href="#5-3-安装NginxProxyManager" class="headerlink" title="5.3 安装NginxProxyManager"></a>5.3 安装NginxProxyManager</h3><p>参考这边的内容：<a href="https://blog.laoda.de/archives/nginxproxymanager">https://blog.laoda.de/archives/nginxproxymanager</a></p><h3 id="5-4-创建安装目录"><a href="#5-4-创建安装目录" class="headerlink" title="5.4 创建安装目录"></a>5.4 创建安装目录</h3><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/alltube</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/alltube</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这边我们直接用docker的方式安装。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure><p>英文输入法下，按<code>i</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">alltube:</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">alltube</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;5993:80&#x27;</span>   <span class="comment"># 5993可以改成任意vps上未使用过的端口，80不要改</span></span><br><span class="line">        <span class="attr">environment:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">PUID=0</span>    <span class="comment"># 稍后在终端输入id可以查看当前用户的id</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">PGID=0</span>    <span class="comment"># 同上</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">rudloff/alltube</span></span><br></pre></td></tr></table></figure><p>按一下<code>esc</code>，然后<code>:wq</code> 保存退出，之后，</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><h3 id="5-5-打开服务器防火墙并访问网页"><a href="#5-5-打开服务器防火墙并访问网页" class="headerlink" title="5.5 打开服务器防火墙并访问网页"></a>5.5 打开服务器防火墙并访问网页</h3><p>打开防火墙的端口<code>5993</code></p><p>腾讯云打开方法如下：</p><img src="https://img.laoda.de/i/2022/06/30/zlio5h-2.webp" alt="image-20220630215240864" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/06/30/10h3dqt-2.webp" alt="image-20220630220546335" style="zoom:33%;" /><p>图中示例填的是<code>5230</code>，备注填的是<code>memos</code>，这边我们填<code>5993</code>，示例填<code>alltube</code> ，确定即可（如果你在dockercompose文件里换了<code>8081</code>，这边就需要填<code>8081</code>，以此类推）</p><img src="https://img.laoda.de/i/2022/08/19/o4byqz-2.webp" alt="image-20220819145844555" style="zoom:33%;" /><p>查看端口是否被占用（以<code>5993</code>为例），输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:5993  <span class="comment">#查看5993端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果啥也没出现，表示端口未被占用，我们可以继续下面的操作了～</p><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用（被占用了就修改一下端口，比如改成8081，注意docker命令行里和防火墙都要改）</p><p>耐心等待，等出现：</p><p>我们就可以输入<code>http://ip:5993</code>访问了。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的IP。</p><p>2、遇到访问不了的情况，请再次检查在宝塔面板的防火墙和服务商的后台防火墙是否打开对应了端口。</p></blockquote><p>有的小伙伴可能想搭建起来分享给其他人使用，如果后续想要分享给别人，IP+端口太不优雅了，咕咕建议大家还是搞一个域名，容易记，看起来也更正规一点。这样可以做https，会让网页更安全。（非要IP+端口访问的，可以直接跳到<code>5.6</code>，并且跳过<code>6. 反向代理</code>部分）</p><p>而且<a href="https://loll.cc/ns">namesilo</a>上面xyz后缀的域名一年就7块钱，可以年抛。</p><p>如果想要长期使用，还是建议买com后缀的域名，更加正规一些，可以输入<code>laodade</code>来获得1美元的优惠（不知道现在还有没有）</p><p><a href="https://loll.cc/ns">namesilo</a>自带隐私保护，咕咕一直在用这家，价格也是这些注册商里面比较低的，关键是他家不像其他家域名注册商，没有七七八八的套路！（就是后台界面有些<del>丑</del>古老 &#x3D; &#x3D;）</p><p><a href="https://blog.laoda.de/archives/namesilo">【域名购买】Namesilo优惠码和域名解析教程（附带服务器购买推荐和注意事项）</a></p><p>我们接着往下看！</p><h3 id="5-6-更新"><a href="#5-6-更新" class="headerlink" title="5.6 更新"></a>5.6 更新</h3><h4 id="5-6-1-docker-compose部署"><a href="#5-6-1-docker-compose部署" class="headerlink" title="5.6.1 docker-compose部署"></a>5.6.1 docker-compose部署</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/alltube</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/alltube /root/data/docker_data/alltube.archive  <span class="comment"># 万事先备份，以防万一，其实这边没必要，因为我们没有映射到本地文件夹</span></span><br><span class="line"></span><br><span class="line">docker-compose pull</span><br><span class="line"></span><br><span class="line">docker-compose up -d </span><br><span class="line"></span><br><span class="line">docker image prune  <span class="comment"># prune 命令用来删除不再使用的 docker 对象。删除所有未被 tag 标记和未被容器使用的镜像</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>提示：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WARNING! This will remove all dangling images.</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] </span><br></pre></td></tr></table></figure><p>输入<code>y</code></p><p>利用Docker搭建的应用，更新非常容易～</p><h3 id="5-7-卸载"><a href="#5-7-卸载" class="headerlink" title="5.7 卸载"></a>5.7 卸载</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker stop alltube</span><br><span class="line"></span><br><span class="line">docker <span class="built_in">rm</span> -f alltube  <span class="comment"># 停止容器，此时不会删除映射到本地的数据</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/alltube  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>可以卸载得很干净。</p><h2 id="6-反向代理"><a href="#6-反向代理" class="headerlink" title="6. 反向代理"></a>6. 反向代理</h2><h3 id="6-1-利用Nginx-Proxy-Manager"><a href="#6-1-利用Nginx-Proxy-Manager" class="headerlink" title="6.1 利用Nginx Proxy Manager"></a>6.1 利用Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><img src="https://img.laoda.de/i/2022/09/29/pa10cp-2.webp" alt="054215cf70ff4b544dfbf48638da380c.png" style="zoom:33%;" /><p>之后，登陆Nginx Proxy Manager（不会的看这个：<strong>安装Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称NPM）会用到<code>80</code>、<code>443</code>端口，所以本机不能占用（比如原来就有Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom: 33%;" /><img src="https://img.laoda.de/i/2022/09/29/pb3suq-2.webp" alt="041c6dacbfe151437ab1decb101aa154.png" style="zoom: 33%;" /><blockquote><p> 注意填写对应的<code>域名</code>、<code>IP</code>和<code>端口</code>，按文章来的话，应该是<code>5993</code></p></blockquote><p><strong>IP填写：</strong></p><p>如果Nginx Proxy Manager和Alltube在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的Docker容器内部IP。</p><p><img src="https://img.laoda.de/i/2022/09/29/pcdnz5-2.webp"></p><p>否则直接填<code>alltube</code>所在的服务器IP就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom: 33%;" /><p>再次打开，勾选这些：</p><img src="https://img.laoda.de/i/2022/09/04/c4irzz-2.webp" alt="image-20220728212042482" style="zoom: 33%;" /><p>然后就可以用域名来安装访问了。</p><h3 id="6-2-利用宝塔面板"><a href="#6-2-利用宝塔面板" class="headerlink" title="6.2 利用宝塔面板"></a>6.2 利用宝塔面板</h3><p>发现还是有不少小伙伴习惯用宝塔面板，这边也贴一个宝塔面板的反代配置：</p><p>直接新建一个站点，不要数据库，不要php，纯静态即可。</p><p>然后打开下面的配置，修改Nginx的配置。</p><p><img src="https://img.laoda.de/i/2022/08/19/ov4xrt-2.webp" alt="image-20220819150345725"></p><p><img src="https://img.laoda.de/i/2022/08/19/owbbkb-2.webp" alt="image-20220819150542867"></p><p>代码如下：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:5993/;</span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此方法对90%的反向代理都能生效。</p><p>有同学可能会问，为什么不直接用宝塔自带的反向代理功能。</p><p><img src="https://img.laoda.de/i/2022/08/19/oxf800-2.webp" alt="image-20220819150730128"></p><p>也可以，不过咕咕自己之前遇到过当有多个网站需要反代的时候，在这边设置会报错的情况 &#x3D; &#x3D; </p><p>所以后来就不用了，直接用上面的方法来操作了。</p><h2 id="7-使用教程"><a href="#7-使用教程" class="headerlink" title="7. 使用教程"></a>7. 使用教程</h2><h3 id="7-1-安装和配置"><a href="#7-1-安装和配置" class="headerlink" title="7.1 安装和配置"></a>7.1 安装和配置</h3><p>见咕咕的视频。</p><h2 id="8-目前遇到的问题"><a href="#8-目前遇到的问题" class="headerlink" title="8. 目前遇到的问题"></a>8. 目前遇到的问题</h2><p>1、版本比较老。</p><p>这个项目7年前就有了，最近貌似没怎么更新，docker搭建，解析不出B站视频的封面（YouTube可以正常解析），不过下载视频没啥问题。</p><p>2、大陆境内版权限制的网站（网易云、qq音乐、爱奇艺等）无法解析是正常情况。</p><p>3、YouTube想要下载4K视频，不能选“最佳”，最佳是MP4格式的最佳，手选webm格式的有4K</p><p><img src="https://img.laoda.de/i/2022/10/12/qrmofk-2.webp"></p><h2 id="9-结尾"><a href="#9-结尾" class="headerlink" title="9. 结尾"></a>9. 结尾</h2><p>祝大家用得开心，有问题可以去GitHub提<a href="https://github.com/Rudloff/alltube/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，项目处于刚开始阶段，有能力给项目做贡献的同学，也欢迎积极加入到<a href="https://github.com/Rudloff/alltube">项目</a>中来，贡献自己的一份力量！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://github.com/Rudloff/alltube">https://github.com/Rudloff/alltube</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> YouTube </tag>
            
            <tag> B站 </tag>
            
            <tag> 视频下载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【VPS选购分享】Servarica —— 促销款 48刀2T大盘鸡测评，机房位于加拿大蒙特利尔</title>
      <link href="/archives/vps-servarica/"/>
      <url>/archives/vps-servarica/</url>
      
        <content type="html"><![CDATA[<h2 id="2022年黑五活动"><a href="#2022年黑五活动" class="headerlink" title="2022年黑五活动"></a>2022年黑五活动</h2><p>servarica黑五活动已经上架，不限流量36刀1T大盘鸡 </p><p>地址：<a href="(https://clients.servarica.com/store/black-friday-2022?aff=605)">Its Black Friday! Dont miss.</a></p><blockquote><p><strong>注意可以不开代理，地址啥的填中国的就行，合乎逻辑即可，否则乱填会被判定欺诈</strong><br><strong>注意可以不开代理，地址啥的填中国的就行，合乎逻辑即可，否则乱填会被判定欺诈</strong><br><strong>注意可以不开代理，地址啥的填中国的就行，合乎逻辑即可，否则乱填会被判定欺诈</strong></p></blockquote><p>Servarica欧洲大盘鸡黑五活动页：<a href="https://clients.servarica.com/store/black-friday-2022?aff=605">https://clients.servarica.com/store/black-friday-2022</a></p><table><thead><tr><th>CPU</th><th>内存</th><th>硬盘</th><th>流量</th><th>机房</th><th>价格</th><th>购买链接</th></tr></thead><tbody><tr><td>4核</td><td>4G</td><td>200G SSD</td><td>4 TB</td><td>加拿大</td><td>年付$48</td><td><a href="https://clients.servarica.com/aff.php?aff=605&pid=461">点击购买</a></td></tr><tr><td>1核</td><td>1G</td><td>1tb HDD</td><td>4 TB</td><td>加拿大</td><td>年付$29</td><td><a href="https://clients.servarica.com/aff.php?aff=605&pid=511">点击购买</a></td></tr><tr><td>2核</td><td>2G</td><td>1tb HDD</td><td>4 TB</td><td>加拿大</td><td>年付$36</td><td><a href="https://clients.servarica.com/aff.php?aff=605&pid=509">点击购买</a></td></tr><tr><td>2核</td><td>2G</td><td>2tb HDD</td><td>4 TB</td><td>加拿大</td><td>年付$48</td><td><a href="https://clients.servarica.com/aff.php?aff=605&pid=459">点击购买</a></td></tr><tr><td>2核</td><td>2G</td><td>3.5t HDD</td><td>6 TB</td><td>加拿大</td><td>年付$84</td><td><a href="https://clients.servarica.com/aff.php?aff=605&pid=480">点击购买</a></td></tr><tr><td>4核</td><td>6G</td><td>4tb HDD</td><td>4 TB</td><td>加拿大</td><td>月付$11.1</td><td><a href="https://clients.servarica.com/aff.php?aff=605&pid=428">点击购买</a></td></tr><tr><td>4核</td><td>8G</td><td>8tb HDD</td><td>8 TB</td><td>加拿大</td><td>月付$20</td><td><a href="https://clients.servarica.com/aff.php?aff=605&pid=512">点击购买</a></td></tr><tr><td>2核</td><td>3G</td><td>100G SSD+2T</td><td>4 TB</td><td>加拿大</td><td>月付$7</td><td><a href="https://clients.servarica.com/aff.php?aff=605&pid=510">点击购买</a></td></tr><tr><td>4核</td><td>4G</td><td>200G SSD+4T</td><td>8 TB</td><td>加拿大</td><td>月付$15</td><td><a href="https://clients.servarica.com/aff.php?aff=605&pid=485">点击购买</a></td></tr><tr><td>2核</td><td>4G</td><td>40G NVMe</td><td>4 TB</td><td>加拿大</td><td>月付$5</td><td><a href="https://clients.servarica.com/aff.php?aff=605&pid=513">点击购买</a></td></tr><tr><td>4核</td><td>6G</td><td>80G NVMe</td><td>4 TB</td><td>加拿大</td><td>月付$7</td><td><a href="https://clients.servarica.com/aff.php?aff=605&pid=408">点击购买</a></td></tr><tr><td>4核</td><td>10G</td><td>150G NVMe</td><td>4 TB</td><td>加拿大</td><td>月付$10</td><td><a href="https://clients.servarica.com/aff.php?aff=605&pid=464">点击购买</a></td></tr></tbody></table><p>E5-2680v4 或 E5-2650v2 CPU<br>大部分套餐购买时可下拉选 100M端口无限流量 或标注流量&#x2F;1Gbps端口<br>加拿大机房：162.250.188.171<br>测速：<a href="https://ping.servarica.com/">https://ping.servarica.com</a></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><img src="https://img.laoda.de/i/2022/09/16/qnf30u-2.webp" alt="43f86baafacb788eb1ac665365d4d41f.png"></p><p>Servarica加拿大主机商（2010年成立），目前他们家促销存储型vps，都是年付机型。配置，48$&#x2F;年，2核&#x2F;2G内存&#x2F; 2TB硬盘，带宽有两种选择：100m无限或G口4T限制。</p><p>机房位置位于，加拿大魁北克蒙特利尔。</p><h2 id="1-视频介绍"><a href="#1-视频介绍" class="headerlink" title="1. 视频介绍"></a>1. 视频介绍</h2><p>YouTube：<a href="https://youtu.be/QCVzJPqnziM">https://youtu.be/QCVzJPqnziM</a></p><p>哔哩哔哩【高清版本可以点击去吐槽到B站观看】：<joe-bilibili bvid="BV19V4y1K7Rq"></joe-bilibili></p><h2 id="2-官方网站"><a href="#2-官方网站" class="headerlink" title="2. 官方网站"></a>2. 官方网站</h2><p>官网：<a href="https://clients.servarica.com/aff.php?aff=605">https://servarica.com/</a></p><h2 id="3-注意点"><a href="#3-注意点" class="headerlink" title="3. 注意点"></a>3. 注意点</h2><ul><li>不要开代理下单</li><li>个人信息里面的街道啥的也要完善好</li><li>地址什么的要填合乎逻辑的地址，可以不准确但是不要乱填</li></ul><p>如果订单还是被判定欺诈，可以发工单和客服沟通。</p><p>如果需要翻译，可以用这个：<a href="https://www.deepl.com/translator">https://www.deepl.com/translator</a></p><h2 id="4-套餐介绍"><a href="#4-套餐介绍" class="headerlink" title="4. 套餐介绍"></a>4. 套餐介绍</h2><h3 id="4-1-促销的大硬盘vps"><a href="#4-1-促销的大硬盘vps" class="headerlink" title="4.1 促销的大硬盘vps"></a>4.1 促销的大硬盘vps</h3><ul><li>cpu：2个</li><li>内存：2 GB RAM</li><li>硬盘：2TB</li><li>带宽：100mbps的无限传输或1gbps的4TB限制</li><li>IP：1x IPv4</li><li>ipv6：IPv6可按要求提供</li><li>价格：48 $ &#x2F;年</li></ul><p><a href="https://servarica.com/clients/aff.php?aff=605&pid=459">购买链接</a></p><h3 id="4-2-SSD-VPS方案"><a href="#4-2-SSD-VPS方案" class="headerlink" title="4.2 SSD VPS方案"></a>4.2 SSD VPS方案</h3><ul><li>cpu：4个</li><li>内存：4 GB内存</li><li>硬盘：200G SSD</li><li>带宽：100mbps的无限传输或1gbps的4TB限制</li><li>IP：1x IPv4</li><li>ipv6：IPv6可按要求提供</li><li>价格：48 $ &#x2F;年</li></ul><p><a href="https://servarica.com/clients/aff.php?aff=605&pid=461">购买链接</a></p><h3 id="4-3-NVMe-VPS方案"><a href="#4-3-NVMe-VPS方案" class="headerlink" title="4.3 NVMe VPS方案"></a>4.3 NVMe VPS方案</h3><ul><li>cpu：4个</li><li>内存：6GB内存</li><li>硬盘：80G NVMe</li><li>带宽：100mbps的无限传输或1gbps的4TB限制</li><li>IP：1x IPv4</li><li>ipv6：IPv6可按要求提供</li><li>价格：7$&#x2F;月</li></ul><p><a href="https://servarica.com/clients/aff.php?aff=605&pid=408">购买链接</a></p><h2 id="5-VPS测试（2H2G-2T）"><a href="#5-VPS测试（2H2G-2T）" class="headerlink" title="5. VPS测试（2H2G 2T）"></a>5. VPS测试（2H2G 2T）</h2><h3 id="5-1-基本情况"><a href="#5-1-基本情况" class="headerlink" title="5.1 基本情况"></a>5.1 基本情况</h3><p>咕咕昨天开了一台，鸡况如下：</p><p><img src="https://img.laoda.de/i/2022/09/16/qngx6o-2.webp" alt="14455c0e773e0f9fddc6558d4c8d0c9a.png"></p><h3 id="5-2-速度测试"><a href="#5-2-速度测试" class="headerlink" title="5.2 速度测试"></a>5.2 速度测试</h3><p>关于速度，后台有两个选项，可以选择1G的口子，4T流量超出后限速10M，也可以选择100M无限流量的，看个人选择，咕咕这边选的是1G口子4T流量的。</p><p><img src="https://img.laoda.de/i/2022/09/16/qnrzju-2.webp" alt="30fb28f401778670889a9f3c3a66dae6.png"></p><p><img src="https://img.laoda.de/i/2022/09/23/qmvey3-2.webp" alt="3879fbcf814b91f354b6e2538f167c9c.png"></p><p>测试我们重点看<code>Upload Speed</code>,我们从VPS上取东西（下载），对VPS来说就是上传。</p><p>以上海<code>Shanghai 5G</code>为例子，显示的<code>Upload Speed</code>是<code>195.16 Mbit/s</code>，差不多是平时说的300M带宽，对应到我们实际的理论下载速度就&#x3D;<code>195.16/8</code>&#x3D;<code>24.39M/s</code></p><h3 id="5-3-回程线路"><a href="#5-3-回程线路" class="headerlink" title="5.3 回程线路"></a>5.3 回程线路</h3><h4 id="5-3-1-上海电信"><a href="#5-3-1-上海电信" class="headerlink" title="5.3.1 上海电信"></a>5.3.1 上海电信</h4><p>加拿大——英国——荷兰——中国</p><p>环游世界。</p><p><img src="https://img.laoda.de/i/2022/09/16/qnti5a-2.webp" alt="a7327e8b7a1d6525d78e8b8ebb382c39.png"></p><h4 id="5-3-2-上海CN2"><a href="#5-3-2-上海CN2" class="headerlink" title="5.3.2 上海CN2"></a>5.3.2 上海CN2</h4><p><img src="https://img.laoda.de/i/2022/09/16/qnu8yd-2.webp" alt="ae59cf566f25ff32cf2fdd71a55e4ede.png"></p><h4 id="5-3-3-上海联通"><a href="#5-3-3-上海联通" class="headerlink" title="5.3.3 上海联通"></a>5.3.3 上海联通</h4><p><img src="https://img.laoda.de/i/2022/09/16/qry0fr-2.webp" alt="99217f611cff90194bb11f164cddb5d2.png"></p><h4 id="5-3-4-上海联通9929"><a href="#5-3-4-上海联通9929" class="headerlink" title="5.3.4 上海联通9929"></a>5.3.4 上海联通9929</h4><p><img src="https://img.laoda.de/i/2022/09/16/qrywd4-2.webp" alt="dce0c84d8558b198498ecdfbb16bc55e.png"></p><h4 id="5-3-5-上海移动"><a href="#5-3-5-上海移动" class="headerlink" title="5.3.5 上海移动"></a>5.3.5 上海移动</h4><p><img src="https://img.laoda.de/i/2022/09/16/qrzkkw-2.webp" alt="ba3447160d848fe6389b45ed5627e9de.png"></p><h4 id="5-3-6-北京教育网"><a href="#5-3-6-北京教育网" class="headerlink" title="5.3.6 北京教育网"></a>5.3.6 北京教育网</h4><p><img src="https://img.laoda.de/i/2022/09/16/qs29cx-2.webp" alt="48c2fc4852111f1ad243aeae86876bac.png"></p><h3 id="5-4-PING值"><a href="#5-4-PING值" class="headerlink" title="5.4 PING值"></a>5.4 PING值</h3><p><img src="https://img.laoda.de/i/2022/09/23/srg6zj-2.webp" alt="image-20220923173913115"></p><p><img src="https://img.laoda.de/i/2022/09/23/srhwon-2.webp" alt="image-20220923173921578"></p><p><img src="https://img.laoda.de/i/2022/09/23/srjzcv-2.webp" alt="image-20220923173931459"></p><h3 id="5-5-网络测试"><a href="#5-5-网络测试" class="headerlink" title="5.5 网络测试"></a>5.5 网络测试</h3><p>Test IPv4: 162.250.188.171</p><p>Test IPv6: 2602:ffd5:1:141::1</p><p>Test files: <a href="https://ping.servarica.com/100MB.test">https://ping.servarica.com/100MB.test</a></p><h2 id="6-相关推荐"><a href="#6-相关推荐" class="headerlink" title="6. 相关推荐"></a>6. 相关推荐</h2><p><a href="https://blog.laoda.de/archives/vps-hosthatch">【VPS选购分享】HostHatch——目前看过的最高性价比大盘鸡！40刀&#x2F;年 2T硬盘！</a></p><p><a href="https://blog.laoda.de/archives/make-vps-bigger">【保姆级教程】小鸡变身大盘鸡！VPS使用Rclone挂载OneDrive、Google Drive网盘！</a></p><p><a href="https://blog.laoda.de/archives/vps-recommad">【高性价比VPS推荐】——那些年，我用过的VPS们（持续更新中）</a></p><p><a href="https://blog.laoda.de/archives/vps-buyvm">【VPS选购分享】BuyVM——下载神器！无限流量，无视版权投诉，经常缺货DCMA版权投诉&#x2F;适合BT&#x2F;PT下载&#x2F;Netflix解锁</a></p><h2 id="7-参考资料"><a href="#7-参考资料" class="headerlink" title="7. 参考资料"></a>7. 参考资料</h2><p>[<a href="https://servarica.com/]">https://servarica.com/]</a>(</p>]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大盘鸡 </tag>
            
            <tag> 加拿大VPS </tag>
            
            <tag> 美洲VPS </tag>
            
            <tag> 老厂 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩儿的Docker项目】家里没有公网IP？FRP+NPM+VPS = 随时随地用域名访问家里的任何设备！内网穿透，从未如此简单！</title>
      <link href="/archives/frp-with-nginx-proxy-manager/"/>
      <url>/archives/frp-with-nginx-proxy-manager/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>咕咕最近搬家了，也搬出来了之前吃灰了两三年的NAS——威联通TS453B Mini，想着折腾折腾。</p><p>NAS其实简单理解为一个可以装载很多块硬盘的小电脑，也有自己的操作系统，最基础的作用是备份文件和照片。</p><p>不过咕咕这边装了移动送的宽带，并没有公网IP，如何从外面访问家里的NAS就成了一个问题，咕咕尝试过威联通自带的qlink，实在是太慢了，基本上没法用，网上也有介绍用 Zerotier的，似乎也有些局限性。</p><p>突然想到自己不是有服务器吗？服务器就自带公网IP，不如好好把它利用起来，采用frp做内网穿透试试。</p><p>（其实咕咕很早以前就用树莓派玩过frp，那个时候也是刚刚接触服务器的时间段：<a href="https://blog.laoda.de/archives/raspberrypi-frp">【保姆级】树莓派FRP教程</a>）</p><p>经过一番折腾，咕咕用docker搭建frp，搭配之前介绍的Nginx Proxy Manager，已经完美实现了用单独的域名访问NAS上搭建的单独的服务，并且不用带端口号，支持https（理论上只要是有内网IP的项目，都可以在任何能上网的地方通过域名访问到）</p><p>这周就来和大家简单分享一下咕咕的折腾经验，不涉及复杂的知识，旨在用最简单的方法让大家实现随时随地内网访问。</p><h2 id="1-frp是啥？"><a href="#1-frp是啥？" class="headerlink" title="1. frp是啥？"></a>1. frp是啥？</h2><p>具体可以看这里：<a href="https://gofrp.org/docs/concepts/">https://gofrp.org/docs/concepts/</a></p><p>简单来说，大家如果不求甚解，只需要知道下面这些就行：</p><ul><li>frp是fast reverse proxy的缩写，是一个专注于内网穿透的高性能的反向代理应用</li><li>frp项目的作者是中国人！</li><li>frp支持 TCP、UDP、HTTP、HTTPS 等多种协议，可以将内网服务以安全、便捷的方式通过具有公网 IP 节点的中转暴露到公网。</li><li>frp是go语言写的，支持跨平台，仅需下载对应平台的二进制文件即可执行，没有额外依赖。</li><li>frp有服务端（frps，s指service，通常搭建在有公网IP的设备上）和客户端（frpc，c指client，通常搭建在内网设备上）</li></ul><blockquote><p>基本原理：frp 主要由 <strong>客户端(frpc)</strong> 和 <strong>服务端(frps)</strong> 组成，服务端通常部署在具有公网 IP 的机器上，客户端通常部署在需要穿透的内网服务所在的机器上。</p><p>内网服务由于没有公网 IP，不能被非局域网内的其他用户访问。</p><p>用户通过访问服务端的 frps，由 frp 负责根据请求的端口或其他信息将请求路由到对应的内网机器，从而实现通信。</p></blockquote><p><img src="https://img.laoda.de/i/2022/09/17/m9zh5l-2.webp" alt="architecture"></p><h2 id="2-为什么要用-frp-？"><a href="#2-为什么要用-frp-？" class="headerlink" title="2. 为什么要用 frp ？"></a>2. 为什么要用 frp ？</h2><p>因为利用它，我们可以把原来不能在互联网上访问的内网服务，以安全、便捷的方式通过具有公网 IP 节点的中转暴露到公网。</p><p>这样，你就可以在任何有网的情况下访问到你家里的设备上搭建的服务了！（相当于你自己在家搭建了一台服务器）</p><h2 id="3-相关地址"><a href="#3-相关地址" class="headerlink" title="3. 相关地址"></a>3. 相关地址</h2><p>GitHub地址：<a href="https://github.com/fatedier/frp%EF%BC%8860.1k">https://github.com/fatedier/frp（60.1k</a> star）</p><p>官方文档地址：<a href="https://gofrp.org/docs/concepts/">https://gofrp.org/docs/concepts/</a></p><h2 id="4-效果展示"><a href="#4-效果展示" class="headerlink" title="4. 效果展示"></a>4. 效果展示</h2><p>  见视频。</p><p>在任何有网的地方通过域名访问内网服务：</p><p><img src="https://img.laoda.de/i/2022/09/17/mao0pb-2.webp" alt="image-20220917134814429"></p><h2 id="5-搭建环境"><a href="#5-搭建环境" class="headerlink" title="5. 搭建环境"></a>5. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器24元&#x2F;月VPS一台</del>本期搭建用的是<a href="https://loll.cc/tx">腾讯轻量购买链接</a>的服务器，（最好是选<strong>非大陆（香港）的服务器</strong>）如果是小白刚开始玩的话，还可以购买<a href="https://blog.laoda.de/archives/cheap-vps-racknerd">Racknerd</a>的服务器，最低一年不到100块（不过搭建Docker还是建议选择1G内存以上的机器）（Racknerd服务器介绍：<a href="https://blog.laoda.de/archives/cheap-vps-racknerd">点击查看</a>）</li><li>系统：Debian 10或者11（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本</a> 非必需DD用原来的系统也OK，之后教程都是用Debian或者Ubuntu搭建～）</li><li>安装好Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需但建议】域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>【非必需本教程选用】安装好Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><blockquote><p>服务器要求：最好选线路好一些的，比如美西，或者香港。带宽最好也大一些的。国内机器线路好但是带宽太小了，咕咕没有用国内的机器。</p></blockquote><h2 id="6-搭建视频"><a href="#6-搭建视频" class="headerlink" title="6. 搭建视频"></a>6. 搭建视频</h2><p>YouTube：<a href="https://youtu.be/XKnbA4b55Kw">https://youtu.be/XKnbA4b55Kw</a></p><p>哔哩哔哩【高清版本可以点击去吐槽到B站观看】：<joe-bilibili bvid="BV1xe4y1k74t"></joe-bilibili></p><h2 id="7-搭建方式（服务端-frps）"><a href="#7-搭建方式（服务端-frps）" class="headerlink" title="7. 搭建方式（服务端 frps）"></a>7. 搭建方式（服务端 frps）</h2><h3 id="安装系统（腾讯云轻量应用服务器）"><a href="#安装系统（腾讯云轻量应用服务器）" class="headerlink" title="安装系统（腾讯云轻量应用服务器）"></a>安装系统（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlyhcz-2.webp" alt="e59713fba8726d3cb55ae11bca83fe3c.png"></p><p>腾讯云轻量服务器最大的特点就是“轻量”，相比CVM，更适合小白上手，这边我们之间选择Docker基础镜像，就可以省去后面安装Docker的步骤（如果你非要用国内的服务器，这边装的Docker镜像还会帮你配置好国内镜像源，让你加速访问docker镜像资源）。</p><h3 id="登陆（腾讯云轻量应用服务器）"><a href="#登陆（腾讯云轻量应用服务器）" class="headerlink" title="登陆（腾讯云轻量应用服务器）"></a>登陆（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlzlj7-2.webp" alt="2722040ee311eb4a9ebf2a4945bf38f4.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm0gv8-2.webp" alt="c0b5d360053746c4095d592967ee401f.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm1vqw-2.webp" alt="e0ba858f021b846ad0abc27acf5008c2.png"></p><h3 id="7-1-服务器前期配置"><a href="#7-1-服务器前期配置" class="headerlink" title="7.1 服务器前期配置"></a>7.1 服务器前期配置</h3><p>服务器初始设置，参考：</p><p><a href="https://blog.laoda.de/archives/vps-script"><strong>新买了一台服务器“必须”要做的6件小事</strong></a></p><p><a href="https://blog.laoda.de/archives/how-to-secure-a-linux-server"><strong>保护好你的小鸡！保姆级服务器安全教程！</strong></a></p><p>这边由于我们用的是腾讯云轻量应用服务器，系统默认就帮我们创建了名字是<code>lighthouse</code>的用户，系统后台也有防火墙（默认就开了几个常用的端口）</p><p>对小白用户来说，可以不用再去管繁琐的服务器安全的配置，大大降低了服务器防护的门槛。</p><p><a href="https://blog.laoda.de/archives/hello-docker">【Docker系列】不用宝塔面板，小白一样可以玩转VPS服务器！</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i <span class="comment"># 切换到root用户</span></span><br><span class="line"></span><br><span class="line">apt update -y  <span class="comment"># 升级packages</span></span><br><span class="line"></span><br><span class="line">apt install wget curl sudo vim git -y  <span class="comment"># Debian系统比较干净，安装常用的软件</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：VPS的内存如果过小，建议设置一下SWAP，一般为内存的1-1.5倍即可，可以让系统运行更流畅！</p></blockquote><p>设置SWAP可以用脚本:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O box.sh https://raw.githubusercontent.com/BlueSkyXN/SKY-BOX/main/box.sh &amp;&amp; <span class="built_in">chmod</span> +x box.sh &amp;&amp; clear &amp;&amp; ./box.sh</span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2022/05/28/uoikkd-0.webp" alt="image-20220528185512488" style="zoom:50%;" /><p>选择<code>18</code>，然后输入你想要扩容的数值即可。</p><img src="https://img.laoda.de/i/2022/05/28/up2dkf-0.webp" alt="image-20220528185604586" style="zoom:50%;" /><p>使用腾讯云轻量应用服务器的小伙伴可以直接跳到<code>5.2.4</code></p><h3 id="7-2-安装Docker（使用腾讯云轻量应用服务器可跳过这一部分）"><a href="#7-2-安装Docker（使用腾讯云轻量应用服务器可跳过这一部分）" class="headerlink" title="7.2 安装Docker（使用腾讯云轻量应用服务器可跳过这一部分）"></a>7.2 安装Docker（使用腾讯云轻量应用服务器可跳过这一部分）</h3><h4 id="7-2-1-非大陆服务器Docker安装"><a href="#7-2-1-非大陆服务器Docker安装" class="headerlink" title="7.2.1 非大陆服务器Docker安装"></a>7.2.1 <strong>非大陆服务器Docker安装</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -qO- get.docker.com | bash</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker -v  <span class="comment">#查看docker版本</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker  <span class="comment"># 设置开机自动启动</span></span><br></pre></td></tr></table></figure><p><strong>修改Docker配置（可选）（来自<a href="https://u.sb/debian-install-docker/">烧饼博客</a>）</strong></p><p>以下配置会增加一段自定义内网 IPv6 地址，开启容器的 IPv6 功能，以及限制日志文件大小，防止 Docker 日志塞满硬盘（泪的教训）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/docker/daemon.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    &quot;log-driver&quot;: &quot;json-file&quot;,</span></span><br><span class="line"><span class="string">    &quot;log-opts&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;max-size&quot;: &quot;20m&quot;,</span></span><br><span class="line"><span class="string">        &quot;max-file&quot;: &quot;3&quot;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    &quot;ipv6&quot;: true,</span></span><br><span class="line"><span class="string">    &quot;fixed-cidr-v6&quot;: &quot;fd00:dead:beef:c0::/80&quot;,</span></span><br><span class="line"><span class="string">    &quot;experimental&quot;:true,</span></span><br><span class="line"><span class="string">    &quot;ip6tables&quot;:true</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>然后重启 Docker 服务：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h4 id="7-2-2-非大陆服务器Docker-compose安装"><a href="#7-2-2-非大陆服务器Docker-compose安装" class="headerlink" title="7.2.2 非大陆服务器Docker-compose安装"></a>7.2.2 <strong>非大陆服务器Docker-compose安装</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/1.29.2/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose --version  <span class="comment">#查看docker-compose版本</span></span><br></pre></td></tr></table></figure><h4 id="7-2-3-国内服务器安装docker"><a href="#7-2-3-国内服务器安装docker" class="headerlink" title="7.2.3 国内服务器安装docker"></a>7.2.3 <strong>国内服务器安装docker</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -sSL https://get.daocloud.io/docker | sh</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker -v  <span class="comment">#查看docker版本</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker  <span class="comment"># 设置开机自动启动</span></span><br></pre></td></tr></table></figure><p><strong>修改Docker配置（可选）（来自<a href="https://u.sb/debian-install-docker/">烧饼博客</a>）</strong></p><p>以下配置会增加一段自定义内网 IPv6 地址，开启容器的 IPv6 功能，以及限制日志文件大小，防止 Docker 日志塞满硬盘（泪的教训）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/docker/daemon.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    &quot;log-driver&quot;: &quot;json-file&quot;,</span></span><br><span class="line"><span class="string">    &quot;log-opts&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;max-size&quot;: &quot;20m&quot;,</span></span><br><span class="line"><span class="string">        &quot;max-file&quot;: &quot;3&quot;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    &quot;ipv6&quot;: true,</span></span><br><span class="line"><span class="string">    &quot;fixed-cidr-v6&quot;: &quot;fd00:dead:beef:c0::/80&quot;,</span></span><br><span class="line"><span class="string">    &quot;experimental&quot;:true,</span></span><br><span class="line"><span class="string">    &quot;ip6tables&quot;:true</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>然后重启 Docker 服务：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h4 id="7-2-4-国内服务器安装docker-compose"><a href="#7-2-4-国内服务器安装docker-compose" class="headerlink" title="7.2.4 国内服务器安装docker-compose"></a>7.2.4 <strong>国内服务器安装docker-compose</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -L https://get.daocloud.io/docker/compose/releases/download/v2.1.1/docker-compose-`<span class="built_in">uname</span> -s`-`<span class="built_in">uname</span> -m` &gt; /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line">docker-compose --version  <span class="comment">#查看docker-compose版本</span></span><br></pre></td></tr></table></figure><h3 id="7-3-安装NginxProxyManager"><a href="#7-3-安装NginxProxyManager" class="headerlink" title="7.3 安装NginxProxyManager"></a>7.3 安装NginxProxyManager</h3><p>参考这边的内容：<a href="https://blog.laoda.de/archives/nginxproxymanager">https://blog.laoda.de/archives/nginxproxymanager</a></p><h3 id="7-4-创建安装目录"><a href="#7-4-创建安装目录" class="headerlink" title="7.4 创建安装目录"></a>7.4 创建安装目录</h3><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/frps</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/frps</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这边frp其实不需要用docker安装，直接到GitHub上下载你系统对应的软件包解压就可以使用，不过配置后台自动运行会麻烦一些，这边为了简单起见，咕咕直接用<a href="https://hub.docker.com/r/snowdreamtech/frpc">@snowdreamtech</a> 编译好的docker镜像，采用docker的方式来安装frp的服务端和客户端，这样后台运行，重启啥的可能会更方便一些，配置也更简单一些。</p><p>源码安装可以参考GitHub：<a href="https://github.com/fatedier/frp">https://github.com/fatedier/frp</a></p><p><strong>Docker方法安装：</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/frps</span><br><span class="line"></span><br><span class="line"><span class="built_in">touch</span> frps.ini</span><br><span class="line"></span><br><span class="line">vim docker-compose.yml</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>英文输入法下，按<code>i</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">frps:</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">        <span class="attr">network_mode:</span> <span class="string">host</span></span><br><span class="line">        <span class="attr">volumes:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;./frps.ini:/etc/frp/frps.ini&#x27;</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">frps</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">snowdreamtech/frps</span></span><br></pre></td></tr></table></figure><p>按一下<code>esc</code>，然后<code>:wq</code> 保存退出，之后，</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>Ok，这样我们就搭建好了frp的服务端了，不过，现在我们<code>frps.ini</code>里面啥也没有，需要我们来配置一下，这边贴一个咕咕的配置文件给大家参考，满足基本使用。</p><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#frp 监听端口，与客户端绑定端口</span></span><br><span class="line"></span><br><span class="line"><span class="attr">bind_port</span>= <span class="number">5443</span></span><br><span class="line"><span class="attr">kcp_bind_port</span> = <span class="number">5443</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#dashboard用户名</span></span><br><span class="line"></span><br><span class="line"><span class="attr">dashboard_user</span>= gugu</span><br><span class="line"></span><br><span class="line"><span class="comment">#dashboard密码</span></span><br><span class="line"></span><br><span class="line"><span class="attr">dashboard_pwd</span>= passwd</span><br><span class="line"></span><br><span class="line"><span class="comment">#dashboard端口，启动成功后可通过浏览器访问如http://ip:9527</span></span><br><span class="line"></span><br><span class="line"><span class="attr">dashboard_port</span>= <span class="number">9527</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#设置客户端token，对应客户端有页需要配置一定要记住，如果客户端不填写你连不上服务端</span></span><br><span class="line"></span><br><span class="line"><span class="attr">token</span> = <span class="number">8</span>ad3d1x429a2d</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/frps</span><br><span class="line"></span><br><span class="line">vim frps.ini</span><br></pre></td></tr></table></figure><p>然后粘贴上面的内容，之后在英文输入法下，按一下<code>esc</code>，然后<code>:wq</code> 保存退出。</p><p>最后，重启一下frps服务即可</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose restart</span><br></pre></td></tr></table></figure><p>好了，这边frp服务端我们就已经搞定了。（如果有更高级的需求，可以自行参考官方文档来添加内容。）</p><p>接下来如果你是腾讯云服务器，还需要去打开防火墙。</p><h3 id="7-5-打开服务器防火墙并访问网页"><a href="#7-5-打开服务器防火墙并访问网页" class="headerlink" title="7.5 打开服务器防火墙并访问网页"></a>7.5 打开服务器防火墙并访问网页</h3><p>这边由于咕咕后续会用到很多端口，一一打开有点麻烦，咕咕演示的是全部开启端口（Racknerd之类的服务器商家默认就是全部开启的，不需要额外打开）</p><p>腾讯云打开方法如下：</p><img src="https://img.laoda.de/i/2022/06/30/zlio5h-2.webp" alt="image-20220630215240864" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/06/30/10h3dqt-2.webp" alt="image-20220630220546335" style="zoom:33%;" /><p>这边我们填<code>8099</code> 确定即可（如果你在dockercompose文件里换了<code>8081</code>，这边就需要填<code>8081</code>，以此类推）</p><img src="https://img.laoda.de/i/2022/08/19/o4byqz-2.webp" alt="image-20220819145844555" style="zoom:33%;" /><p>这边我们是全开，就这样填：</p><p><img src="https://img.laoda.de/i/2022/09/17/n9vxs8-2.webp" alt="image-20220917140731007"></p><p>因为IP+端口方式，记起来很麻烦，咕咕建议大家再搞搞一个域名，容易记，看起来也更正规一点。这样可以做https，会让网页更安全。</p><p>而且<a href="https://loll.cc/ns">namesilo</a>上面xyz后缀的域名一年就7块钱，可以年抛。</p><p>如果想要长期使用，还是建议买com后缀的域名，更加正规一些，可以输入<code>laodade</code>来获得1美元的优惠（不知道现在还有没有）</p><p><a href="https://loll.cc/ns">namesilo</a>自带隐私保护，咕咕一直在用这家，价格也是这些注册商里面比较低的，关键是他家不像其他家域名注册商，没有七七八八的套路！（就是后台界面有些<del>丑</del>古老 &#x3D; &#x3D;）</p><p><a href="https://blog.laoda.de/archives/namesilo">【域名购买】Namesilo优惠码和域名解析教程（附带服务器购买推荐和注意事项）</a></p><p>我们接着往下看！</p><h3 id="7-6-更新"><a href="#7-6-更新" class="headerlink" title="7.6 更新"></a>7.6 更新</h3><h4 id="7-6-1-docker-compose更新"><a href="#7-6-1-docker-compose更新" class="headerlink" title="7.6.1 docker-compose更新"></a>7.6.1 docker-compose更新</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/frps</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/fprs /root/data/docker_data/frps.archive  <span class="comment"># 其实就是备份一下frps.ini这个文件</span></span><br><span class="line"></span><br><span class="line">docker-compose pull</span><br><span class="line"></span><br><span class="line">docker-compose up -d </span><br><span class="line"></span><br><span class="line">docker image prune  <span class="comment"># prune 命令用来删除不再使用的 docker 对象。删除所有未被 tag 标记和未被容器使用的镜像</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>提示：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WARNING! This will remove all dangling images.</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] </span><br></pre></td></tr></table></figure><p>输入<code>y</code></p><p>利用Docker搭建的应用，更新非常容易～</p><h3 id="7-7-卸载"><a href="#7-7-卸载" class="headerlink" title="7.7 卸载"></a>7.7 卸载</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker stop frps</span><br><span class="line"></span><br><span class="line">docker <span class="built_in">rm</span> -f frps  <span class="comment"># 停止容器，此时不会删除映射到本地的数据</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/frps  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>可以卸载得很干净。</p><h2 id="8-搭建方式（客户端-frpc）"><a href="#8-搭建方式（客户端-frpc）" class="headerlink" title="8. 搭建方式（客户端 frpc）"></a>8. 搭建方式（客户端 frpc）</h2><h3 id="8-1-NAS"><a href="#8-1-NAS" class="headerlink" title="8.1 NAS"></a>8.1 NAS</h3><p>其实核心是一样的，只不过修改一下配置文件。</p><p>这边贴一个<code>docker-compose.yml</code>文件和<code>frpc.ini</code>的文件</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">frpc:</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">        <span class="attr">network_mode:</span> <span class="string">host</span></span><br><span class="line">        <span class="attr">volumes:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;./frpc.ini:/etc/frp/frpc.ini&#x27;</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">frpc</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">snowdreamtech/frpc</span></span><br></pre></td></tr></table></figure><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># frpc.ini</span></span><br><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">server_addr</span> = <span class="number">43.132</span>.<span class="number">202.152</span></span><br><span class="line"><span class="attr">server_port</span> = <span class="number">5443</span></span><br><span class="line"><span class="attr">token</span> = <span class="number">8</span>ad3d1x429a2d</span><br><span class="line"></span><br><span class="line"><span class="section">[ssh]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">222</span></span><br><span class="line"><span class="comment"># 这个自定义，之后再ssh连接的时候要用</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">6000</span> </span><br><span class="line"></span><br><span class="line"><span class="section">[qb]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">8092</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">6001</span></span><br><span class="line"></span><br><span class="line"><span class="section">[jellyfin]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">32771</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">6002</span></span><br><span class="line"></span><br><span class="line"><span class="section">[NAS]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">5000</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">6003</span></span><br><span class="line"></span><br><span class="line"><span class="section">[nextcloud]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">4433</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">6004</span></span><br><span class="line"></span><br><span class="line"><span class="section">[RDP]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">3389</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">7001</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">[vnc]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">5900</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">5900</span></span><br><span class="line"><span class="attr">use_encryption</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">use_compression</span> = <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="8-2-软路由"><a href="#8-2-软路由" class="headerlink" title="8.2 软路由"></a>8.2 软路由</h3><p>安装docker即可，仿照上面操作。</p><p>支持的架构：amd64, arm32v6, arm32v7, arm64v8, i386</p><p>如果不方便装docker-compose，可以直接用docker命令行来：</p><p>首先：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /etc/frp</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /etc/frp</span><br><span class="line"></span><br><span class="line">vim frpc.ini </span><br></pre></td></tr></table></figure><p>输入例如：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># frpc.ini</span><br><span class="line">[common]</span><br><span class="line">server_addr = 43.132.202.152</span><br><span class="line">server_port = 5443</span><br><span class="line">token = 8ad3d1x429a2d</span><br><span class="line"></span><br><span class="line">[router]</span><br><span class="line">type = tcp</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">local_port = 80</span><br><span class="line">remote_port = 6005</span><br></pre></td></tr></table></figure><p>之后在英文输入法下，按一下<code>esc</code>，然后<code>:wq</code> 保存退出。</p><p>然后运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run --restart=always --network host -d -v /etc/frp/frpc.ini:/etc/frp/frpc.ini --name frpc snowdreamtech/frpc</span><br></pre></td></tr></table></figure><h2 id="9-反向代理"><a href="#9-反向代理" class="headerlink" title="9. 反向代理"></a>9. 反向代理</h2><h3 id="9-1-利用Nginx-Proxy-Manager"><a href="#9-1-利用Nginx-Proxy-Manager" class="headerlink" title="9.1 利用Nginx Proxy Manager"></a>9.1 利用Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p><img src="https://img.laoda.de/i/2022/09/17/ncwcm9-2.webp" alt="image-20220917141236156"></p><p>之后，登陆Nginx Proxy Manager（不会的看这个：<strong>安装Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称NPM）会用到<code>80</code>、<code>443</code>端口，所以本机不能占用（比如原来就有Nginx）</p></blockquote><p>以反代nas为例子，直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom: 33%;" /><p><img src="https://img.laoda.de/i/2022/09/17/nddr7a-2.webp" alt="image-20220917141317093"></p><blockquote><p> 注意填写对应的<code>域名</code>、<code>IP</code>和<code>端口</code></p></blockquote><p><strong>IP填写：</strong></p><p>如果Nginx Proxy Manager和Memos在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的Docker容器内部IP。</p><p>否则直接填<code>frps</code>所在的服务器IP就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom: 33%;" /><p>再次打开，勾选这些：</p><p><img src="https://img.laoda.de/i/2022/09/17/ndy0bm-2.webp" alt="image-20220917141413268"></p><p>然后就可以用域名来安装访问nas了。</p><p><img src="https://img.laoda.de/i/2022/09/17/mao0pb-2.webp" alt="image-20220917134814429"></p><h3 id="9-2-其他服务"><a href="#9-2-其他服务" class="headerlink" title="9.2 其他服务"></a>9.2 其他服务</h3><p>其他服务也是类似的方法，详见视频。</p><h2 id="10-结尾"><a href="#10-结尾" class="headerlink" title="10. 结尾"></a>10. 结尾</h2><p>祝大家用得开心，有问题可以去GitHub提<a href="https://github.com/fatedier/frp/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，项目处于刚开始阶段，有能力给项目做贡献的同学，也欢迎积极加入到<a href="https://github.com/fatedier/frp">项目</a>中来，贡献自己的一份力量！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>GitHub地址：<a href="https://github.com/fatedier/frp%EF%BC%8860.1k">https://github.com/fatedier/frp（60.1k</a> star）</p><p>官方文档地址：<a href="https://gofrp.org/docs/concepts/">https://gofrp.org/docs/concepts/</a></p><p>文章里用到的docker镜像地址：<a href="https://hub.docker.com/r/snowdreamtech/frpc">https://hub.docker.com/r/snowdreamtech/frpc</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NginxProxyManager </tag>
            
            <tag> FRP </tag>
            
            <tag> 内网穿透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【VPS选购分享】Hetzner——欧洲阿里云！性能小钢炮！非常适合跑业务，还有适合刷PT的神鸡！</title>
      <link href="/archives/vps-hetzner/"/>
      <url>/archives/vps-hetzner/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><img src="https://img.laoda.de/i/2022/09/09/10neyhh-2.webp" alt="image-20220909221608520"></p><p>Hetzner拥有数十万台服务器，是欧洲最大的数据中心运营商之一。自 1997 年成立以来，Hetzner一直为私人和企业客户提供强大的托管产品和可靠的 IT 基础设施。通过结合其在创新技术、有吸引力的价格、专家支持和灵活的客户服务方面的优势，Hetzner 在德国和欧洲内外扩大了市场。Hetzner 是一家德国公司，在纽伦堡和法尔肯施泰因（均位于德国）和芬兰赫尔辛基拥有并运营着自己的高科技数据中心，最近又在美国弗吉尼亚州阿什本增设了一个新机房。</p><p>所以目前一共有四个数据中心：德国2个，芬兰1个，美国1个。</p><p>Hetzner家的VPS和独服价格实惠，性能稳定，NVMe SSD，10Gbp带宽，支持信用卡、Paypal付款。就是到国内网络比较慢。AMD EPYC处理器的VPS套餐性能强劲。</p><p>不过Hetznet注册账号需要人工审核验证。</p><h3 id="1-视频介绍"><a href="#1-视频介绍" class="headerlink" title="1. 视频介绍"></a>1. 视频介绍</h3><p>YouTube：<a href="https://youtu.be/fH-tQySh8P8">https://youtu.be/fH-tQySh8P8</a></p><p>哔哩哔哩【高清版本可以点击去吐槽到B站观看】：<joe-bilibili bvid="BV1he4y1C72p"></joe-bilibili></p><h3 id="2-官方网站"><a href="#2-官方网站" class="headerlink" title="2. 官方网站"></a>2. 官方网站</h3><p>官网：<a href="https://www.hetzner.com/">https://www.hetzner.com/</a></p><p>用咕咕的链接，首次注册或者购买机器，可以得到20欧的试用金（有效期一个月），可以试用各种型号的VPS：<a href="https://loll.cc/hz">https://loll.cc/hz</a></p><h2 id="3-特点"><a href="#3-特点" class="headerlink" title="3. 特点"></a>3. 特点</h2><p>1、性能强劲</p><p>2、后台带备份、快照功能</p><p>3、后台带防火墙规则，可以解决<a href="https://github.com/chaifeng/ufw-docker#%E5%A4%AA%E9%95%BF%E4%B8%8D%E6%83%B3%E8%AF%BB">docker映射的端口ufw管理不了的痛点</a></p><p>4、AX41 NVMe系列性价比极高，PT爱好者福音，一个月能刷毕业。（原因只有一个，那就是刷pt的大多数都是用的hz，你买hz来刷pt就是跟他们内网互刷，其他的服务器怎么比？）</p><h2 id="4-注意点"><a href="#4-注意点" class="headerlink" title="4. 注意点"></a>4. 注意点</h2><h3 id="4-1-安装费、税费"><a href="#4-1-安装费、税费" class="headerlink" title="4.1 安装费、税费"></a>4.1 安装费、税费</h3><p>VPS没有，独立服务器一般都是有安装费（setup fee）的，价钱是一个月服务器的费用，只有第一次买的时候会收取（因为有些独立服务器是人工去开的）一般商家活动会取消安装费，这个时候入手就会划算一些。</p><p>只有欧洲和美国的要税费，我们是不需要税费的，记得选这个：</p><p><img src="https://img.laoda.de/i/2022/09/09/10o1d5g-2.webp" alt="image-20220909221712577"></p><h3 id="4-2-滥用、版权问题"><a href="#4-2-滥用、版权问题" class="headerlink" title="4.2 滥用、版权问题"></a>4.2 滥用、版权问题</h3><p>HZ版权问题可能会直接删机</p><p><img src="https://img.laoda.de/i/2022/09/09/rfde65-2.webp" alt="image-20220909165838463"></p><p>遇到这邮件，记得赶紧处理。（咕咕目前还没遇到）</p><h3 id="4-3-账单"><a href="#4-3-账单" class="headerlink" title="4.3 账单"></a>4.3 账单</h3><p>假设机器是9月9号买的，那么，你可以直接用，不用付钱，一般是到次月的月初几天hz后台会出账单，我们假设是10月3号，后台出了账单，这个时候，你需要付9月9号——10月9号这一个月的费用。（即使今天才10月3号），然后到11月3号，你支付的是10月9号——11月9号的费用。以此类推。</p><p>hz的独立服务器是可以push（转移给其他用户）的，所以尤其要注意机器的开通时间，和你的账单日时间，避免算错金额了。</p><h2 id="5-账号申请"><a href="#5-账号申请" class="headerlink" title="5. 账号申请"></a>5. 账号申请</h2><p>Hetzner注册帐号有人工审核，通过人工验证之后的才能购买产品。支持Paypal、信用卡付款。</p><p>1、使用真实IP和资料注册，不要开代哩，姓名、地址、邮箱等要如实填写。<br>2、<del>注册后直接按照提示操作：选择充值20欧元直接激活账户（还会被随机审查，不通过会退款！）</del>咕咕实测可以不预充值。<br>3、选择提交身份证、护照、水电煤气帐单等材料来证明你是一个真实的购买者，并且没有恶意。发邮件给<a href="mailto:&#x73;&#x65;&#114;&#x76;&#101;&#114;&#x2d;&#111;&#x72;&#100;&#x65;&#114;&#64;&#104;&#x65;&#116;&#122;&#x6e;&#x65;&#114;&#x2e;&#x63;&#x6f;&#x6d;">&#x73;&#x65;&#114;&#x76;&#101;&#114;&#x2d;&#111;&#x72;&#100;&#x65;&#114;&#64;&#104;&#x65;&#116;&#122;&#x6e;&#x65;&#114;&#x2e;&#x63;&#x6f;&#x6d;</a>申请验证帐号。按要求提供相关身份证明。通过过会开通购买权限。</p><p>推荐直接使用PayPal充值20欧元到你的Hetzner账户（可选，咕咕是直接上传了身份证验证，之后大概过了半小时收到hetzner验证通过的邮件，就开始买鸡了），即可直接购买 VPS了，但是刚刚开通就不要对机器进行高强度测试，一旦有不良行为，很容易被要求二次人工验证。新用户被严格监控！</p><p>发邮件给<a href="mailto:&#x73;&#101;&#x72;&#x76;&#101;&#x72;&#45;&#111;&#x72;&#100;&#x65;&#114;&#64;&#x68;&#101;&#x74;&#122;&#x6e;&#x65;&#114;&#46;&#99;&#111;&#x6d;">&#x73;&#101;&#x72;&#x76;&#101;&#x72;&#45;&#111;&#x72;&#100;&#x65;&#114;&#64;&#x68;&#101;&#x74;&#122;&#x6e;&#x65;&#114;&#46;&#99;&#111;&#x6d;</a>：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">邮件标题：Account Validation</span><br><span class="line"></span><br><span class="line">邮件内容：Hi, I<span class="string">&#x27;m a new customer , and I can provide my information. Can you verify my account?</span></span><br><span class="line"><span class="string">Client number: （你的帐号ID）</span></span><br><span class="line"><span class="string">eMail: （你的注册邮箱）</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Thank you！</span></span><br></pre></td></tr></table></figure><p>验证时可以上传 驾照、护照、水电天然气帐单、英文版的银行账单、信用卡帐单、信用卡正反面照片等等。（信佣咔+驾照比较好）反正挑二三样，来证明你是个你的身份是真实的就行。拍照时旁边可以弄个字条，写上你的注册用的姓名和邮箱。</p><p>但是注意姓名一定要跟你在Hetzner注册的帐号一致。直接用手机拍摄（重要的信息可以打码一下），但是千万不能作假。<br>也可以咨询：<a href="mailto:&#115;&#117;&#112;&#112;&#x6f;&#x72;&#116;&#x40;&#x68;&#x65;&#116;&#122;&#110;&#x65;&#x72;&#x2e;&#99;&#111;&#x6d;">&#115;&#117;&#112;&#112;&#x6f;&#x72;&#116;&#x40;&#x68;&#x65;&#116;&#122;&#110;&#x65;&#x72;&#x2e;&#99;&#111;&#x6d;</a></p><p>（可选）懒得提交这么多：也可以充值20欧元直接开通，充值的预付款可以拿来续费机器。</p><p>携程限时免费办理驾照国际翻译认证件<br><a href="https://www.pigji.com/goto/644">https://car.ctrip.com/jiazhao</a><br>有网友用驾照国际翻译认证件+淘宝订单英文版 过了hetzner账号验证。</p><p>Hetzner未验证账号登录后台会显示两段话提醒你验证，如果一直没有验证或者验证失败，会删号。</p><h2 id="6-适合人群"><a href="#6-适合人群" class="headerlink" title="6. 适合人群"></a>6. 适合人群</h2><ul><li><p>跑项目的</p></li><li><p>建站面向海外（国内需要套个反代，不然个别地区访问会很慢）</p></li><li><p>刷PT的</p></li></ul><h2 id="7-套餐介绍"><a href="#7-套餐介绍" class="headerlink" title="7. 套餐介绍"></a>7. 套餐介绍</h2><h3 id="7-1-VPS"><a href="#7-1-VPS" class="headerlink" title="7.1 VPS"></a>7.1 VPS</h3><p><img src="https://img.laoda.de/i/2022/09/09/sf6jor-2.webp" alt="image-20220909171853569"></p><p>流量一般是20T&#x2F;月（欧洲的流量都给的很大方，不像国内和美洲扣扣搜搜的，不过相对应的，欧洲离大陆物理距离更远一些，延迟也会更高，普遍来说，线路也更差一些，这也算是欧洲服务器唯一的缺点了）</p><p>咕咕选的是2H2G这款，地区是选的美国，（因为Ashburn地处美国东部，到国内的距离还是比较远的，延迟也高，所以咕咕用了<a href="https://blog.laoda.de/archives/vps-bandwagonhost">搬瓦工</a>的机器配合<a href="https://blog.laoda.de/archives/nginxproxymanager">Nginx Proxy Manager</a>做了反向代理，这样大陆访问速度会得到明显提升。）</p><p>而且咕咕开通了备份功能，会多收取20%的费用，也就是5.22欧&#x2F;月。非常省心，再也不用刻意去备份了。（后台会根据时间长短给你设置7个时间点的备份文件，随时可以恢复）</p><h3 id="7-2-独立服务器"><a href="#7-2-独立服务器" class="headerlink" title="7.2 独立服务器"></a>7.2 独立服务器</h3><p>一般是无限流量，不过之前海外论坛有人提出用了250T流量收到了HZ的警告邮件。所以我们暂且算独立服务器的流量是250T&#x2F;月</p><h4 id="7-2-1-AX系列"><a href="#7-2-1-AX系列" class="headerlink" title="7.2.1 AX系列"></a>7.2.1 AX系列</h4><p>购买地址：<a href="https://www.hetzner.com/dedicated-rootserver/matrix-ax">https://www.hetzner.com/dedicated-rootserver/matrix-ax</a></p><p>性价比之选，一个月只要<del>34</del>37.3欧就能拥有</p><ul><li>AMD Ryzen™ 5 3600</li><li>64 GB DDR4</li><li>2 x 512 GB NVMe SSD</li><li>1 Gbit&#x2F;s（保证带宽，意味着独享，可以跑满）</li></ul><p>PT刷流量神器。</p><p>当然也可以选择storage款：</p><p><img src="https://img.laoda.de/i/2022/09/09/sdp9qk-2.webp" alt="image-20220909171605046"></p><p>其余配置都一样，硬盘从<code>2 x 512 GB NVMe SSD</code>变成了<code>2 x 2 TB HDD</code></p><p>更适合对硬盘容量有要求的小伙伴。</p><h4 id="7-2-2-拍卖机系列"><a href="#7-2-2-拍卖机系列" class="headerlink" title="7.2.2 拍卖机系列"></a>7.2.2 拍卖机系列</h4><p>拍卖机一般是硬件稍微旧一点的机器，价格会更实惠一些。也不乏一些高配机器，大家可以自行根据需要选择。</p><p>购买地址也是非常有特色：<a href="https://www.hetzner.com/sb">https://www.hetzner.com/sb</a></p><p><img src="https://img.laoda.de/i/2022/09/09/seidrn-2.webp" alt="image-20220909171740179"></p><h3 id="7-2-3-存储盒"><a href="#7-2-3-存储盒" class="headerlink" title="7.2.3 存储盒"></a>7.2.3 存储盒</h3><p>适合备份，价格很便宜（3.2欧元&#x2F;月就有1T的空间外加不限流量）不过有连接数量限制，咕咕没买过，有兴趣的可以自行尝试一下。</p><p><img src="https://img.laoda.de/i/2022/09/09/zd51yc-2.webp" alt="image-20220909213835029"></p><p>最多同时10个连接，如下图：</p><p><img src="https://img.laoda.de/i/2022/09/09/zdoxqx-2.webp" alt="image-20220909213929384"></p><h2 id="8-VPS测试（2H2G-AMD）"><a href="#8-VPS测试（2H2G-AMD）" class="headerlink" title="8. VPS测试（2H2G AMD）"></a>8. VPS测试（2H2G AMD）</h2><h3 id="8-1-基本情况"><a href="#8-1-基本情况" class="headerlink" title="8.1 基本情况"></a>8.1 基本情况</h3><p>性能强劲的一批。</p><p><img src="https://img.laoda.de/i/2022/09/09/zm3noy-2.webp" alt="image-20220909215340424"></p><h3 id="8-2-速度测试"><a href="#8-2-速度测试" class="headerlink" title="8.2 速度测试"></a>8.2 速度测试</h3><p>可以看出来是10G口的。我们重点看<code>Upload Speed</code>,我们从VPS上取东西（下载），对VPS来说就是上传。</p><p>以上海<code>Shanghai 5G</code>为例子，显示的<code>Upload Speed</code>是<code>286.32 Mbit/s</code>，差不多是平时说的300M带宽，对应到我们实际的下载速度就&#x3D;<code>286.32/8</code>&#x3D;<code>35.79M/s</code></p><p><img src="https://img.laoda.de/i/2022/09/09/zp2jap-2.webp" alt="image-20220909215839860"></p><h3 id="8-3-回程线路"><a href="#8-3-回程线路" class="headerlink" title="8.3 回程线路"></a>8.3 回程线路</h3><h4 id="8-3-1-上海电信"><a href="#8-3-1-上海电信" class="headerlink" title="8.3.1 上海电信"></a>8.3.1 上海电信</h4><p><img src="https://img.laoda.de/i/2022/09/09/zpmja9-2.webp" alt="image-20220909215932767"></p><h4 id="8-3-2-上海CN2"><a href="#8-3-2-上海CN2" class="headerlink" title="8.3.2 上海CN2"></a>8.3.2 上海CN2</h4><p><img src="https://img.laoda.de/i/2022/09/09/10dxhn0-2.webp" alt="image-20220909220014950"></p><h4 id="8-3-3-上海联通"><a href="#8-3-3-上海联通" class="headerlink" title="8.3.3 上海联通"></a>8.3.3 上海联通</h4><p><img src="https://img.laoda.de/i/2022/09/09/10e4bcc-2.webp" alt="image-20220909220046723"></p><h4 id="8-3-4-上海联通9929"><a href="#8-3-4-上海联通9929" class="headerlink" title="8.3.4 上海联通9929"></a>8.3.4 上海联通9929</h4><p><img src="https://img.laoda.de/i/2022/09/09/10en2wd-2.webp" alt="image-20220909220135086"></p><h4 id="8-3-5-上海移动"><a href="#8-3-5-上海移动" class="headerlink" title="8.3.5 上海移动"></a>8.3.5 上海移动</h4><p><img src="https://img.laoda.de/i/2022/09/09/10eqy9u-2.webp" alt="image-20220909220153584"></p><h4 id="8-3-6-北京教育网"><a href="#8-3-6-北京教育网" class="headerlink" title="8.3.6 北京教育网"></a>8.3.6 北京教育网</h4><p><img src="https://img.laoda.de/i/2022/09/09/10f83zm-2.webp" alt="image-20220909220233384"></p><h4 id="8-3-7-Share-result"><a href="#8-3-7-Share-result" class="headerlink" title="8.3.7 Share result:"></a>8.3.7 Share result:</h4><p> · <a href="https://www.speedtest.net/result/c/6be43e1d-6d65-4af3-ba1a-e4271226df71">https://www.speedtest.net/result/c/6be43e1d-6d65-4af3-ba1a-e4271226df71</a></p><p> · <a href="https://paste.ubuntu.com/p/TnMFd77TvK/">https://paste.ubuntu.com/p/TnMFd77TvK/</a></p><h3 id="8-4-PING值"><a href="#8-4-PING值" class="headerlink" title="8.4 PING值"></a>8.4 PING值</h3><p><img src="https://img.laoda.de/i/2022/09/09/10hn85a-2.webp" alt="image-20220909220639278"></p><p><img src="https://img.laoda.de/i/2022/09/09/10hpfql-2.webp" alt="image-20220909220650280"></p><p><img src="https://img.laoda.de/i/2022/09/09/10i0smx-2.webp" alt="image-20220909220703390"></p><p>10点测试情况：</p><p><img src="https://img.laoda.de/i/2022/09/09/10iqro8-2.webp"></p><h2 id="9-相关推荐"><a href="#9-相关推荐" class="headerlink" title="9. 相关推荐"></a>9. 相关推荐</h2><p><a href="https://blog.laoda.de/archives/vps-olinkcloud">【VPS推荐】Olink Cloud：美国&#x2F;德国 CUPM&#x2F;AS9929&#x2F;AS10099 免备案建站高速稳定 VPS 推荐</a></p><p><a href="https://blog.laoda.de/archives/olink">【VPS测评】Olink 法兰克福三网9929测评</a></p><h2 id="10-参考资料"><a href="#10-参考资料" class="headerlink" title="10. 参考资料"></a>10. 参考资料</h2><p><a href="https://www.hetzner.com/">https://www.hetzner.com/</a></p>]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 欧洲VPS </tag>
            
            <tag> Hetzner </tag>
            
            <tag> AMD </tag>
            
            <tag> PT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩儿的Docker项目】一个简单好用，风靡硅谷的白板工具——Excalidraw</title>
      <link href="/archives/docker-compose-install-excalidraw/"/>
      <url>/archives/docker-compose-install-excalidraw/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.laoda.de/i/2022/09/03/i9dyo6-2.png" alt="808f93aad1d266a159bf17a9f035a1ee.png"></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本周和大家介绍一个简单好用的风靡硅谷的白板工具——Excalidraw</p><p>用它，你可以画出下面这样的图：</p><p><img src="https://img.laoda.de/i/2022/09/03/iapsyo-2.png" alt="8cf2a304c43fc4871df9184abc53f8ba.png"></p><p><img src="https://img.laoda.de/i/2022/09/03/ib39t1-2.png" alt="066bf9819a643d01fef583ffdcb75b40.png"></p><h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1. 介绍"></a>1. 介绍</h2><p>Excalidraw 是近两年新起的一款画图工具，主要包含白板、流程图的功能，它简单好用，有画图界的 Markdown 之称。</p><h3 id="1-1-特点"><a href="#1-1-特点" class="headerlink" title="1.1 特点"></a>1.1 特点</h3><ul><li>开源（MIT Lisence）</li><li>手绘风格</li><li>浏览器直接打开，无需安装，适配移动端</li><li>简单的excel数据可以复制直接转换成图表</li><li>功能强大，丰富的图形库，进行流程图绘制时，也会自动吸附箭头等，用起来很方便</li><li>支持中文</li><li>支持docker（一键部署）</li><li>文件支持导入导出（本质是json文件）</li></ul><h3 id="1-2-小故事（摘自-pubuzhixing"><a href="#1-2-小故事（摘自-pubuzhixing" class="headerlink" title="1.2 小故事（摘自@pubuzhixing)"></a>1.2 小故事（摘自<a href="https://juejin.cn/post/7119512386029125668">@pubuzhixing</a>)</h3><p>作者 vjeux 是 facebook 团队成员，项目在开始阶段就是就是以开源的方式推进，当时作者在 Twitter 上发了一些推文介绍了，即刻 Excalidraw 就吸引了很多开发者的关注，大家都感觉这个东西虽然功能简单，但是你只要画时间了解下就会喜欢上它，其中不乏很多大佬（Dan）。</p><img src="https://img.laoda.de/i/2022/09/03/ick6jq-2.webp" alt="698bc2c341e6d1bb9c469be2ba14ebf6.png" style="zoom:50%;" /><p>@dan_abramov 6:01 PM · Jan 5, 2020</p><blockquote><p>Only been using Excalidraw for a few hours and it’s obviously still very rough — but it’s already my most favorite graphical editor for sketching, ever.</p><p>翻译：只使用了几个小时的 Excalidraw，它显然仍然很粗糙——但它已经是我最喜欢的素描图形编辑器了。</p></blockquote><p>它最初的名字还不叫 Excalidraw，而是叫 Excalibur</p><p>Excalibur（传说中的圣剑）</p><blockquote><p>Excalibur是传说中不列颠国王 亚瑟王 从湖之仙女那得到的圣剑。此剑是精灵在  阿瓦隆（Avalon）所打造，剑锷由黄金所铸、剑柄上镶有 宝石，并因其锋刃削铁如泥。 </p></blockquote><p>它的 Logo 也是手绘的圣剑（也有说它是钢笔的），可以说跟它的名字和实际意义很统一了。</p><h3 id="1-3-相关地址"><a href="#1-3-相关地址" class="headerlink" title="1.3 相关地址"></a>1.3 相关地址</h3><p>官网地址：<a href="https://plus.excalidraw.com/">https://plus.excalidraw.com/</a><br>GitHub地址：<a href="https://github.com/excalidraw/excalidraw">https://github.com/excalidraw/excalidraw</a> （32.4k star）<br>discord地址：<a href="https://discord.gg/UexuTaE">https://discord.gg/UexuTaE</a><br>demo：<a href="https://excalidraw.com/">https://excalidraw.com/</a> （可能被墙了）</p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p>  <img src="https://img.laoda.de/i/2022/09/03/10nlpkh-2.webp" alt="image-20220903221639726"></p><p><img src="https://img.laoda.de/i/2022/09/03/iallfp-2.png" alt="4ac541dd0c631dc781722566d09fa706.png"></p><h2 id="3-搭建环境"><a href="#3-搭建环境" class="headerlink" title="3. 搭建环境"></a>3. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器24元&#x2F;月VPS一台</del>本期搭建用的是<a href="https://loll.cc/tx">腾讯轻量购买链接</a>的服务器，（最好是选<strong>非大陆（香港）的服务器</strong>）如果是小白刚开始玩的话，还可以购买<a href="https://blog.laoda.de/archives/cheap-vps-racknerd">Racknerd</a>的服务器，最低一年不到100块（不过搭建Docker还是建议选择1G内存以上的机器）（Racknerd服务器介绍：<a href="https://blog.laoda.de/archives/cheap-vps-racknerd">点击查看</a>）</li><li>系统：Debian 10（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本</a> 非必需DD用原来的系统也OK，之后教程都是用Debian或者Ubuntu搭建～）</li><li>安装好Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需但建议】域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>【非必需】提前安装好宝塔面板海外版本aapanel，并安装好Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程选用】安装好Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><blockquote><p>服务器要求：不是非常高，能搭建Docker即可，建议1G以上。</p></blockquote><h2 id="4-搭建视频"><a href="#4-搭建视频" class="headerlink" title="4. 搭建视频"></a>4. 搭建视频</h2><p>YouTube：<a href="https://youtu.be/kZIwBzT0B6Y">https://youtu.be/kZIwBzT0B6Y</a></p><p>哔哩哔哩：<a href="http://www.bilibili.com/BV1814y1s79D">http://www.bilibili.com/BV1814y1s79D</a></p><h2 id="5-搭建方式"><a href="#5-搭建方式" class="headerlink" title="5. 搭建方式"></a>5. 搭建方式</h2><h3 id="安装系统（腾讯云轻量应用服务器）"><a href="#安装系统（腾讯云轻量应用服务器）" class="headerlink" title="安装系统（腾讯云轻量应用服务器）"></a>安装系统（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlyhcz-2.webp" alt="e59713fba8726d3cb55ae11bca83fe3c.png"></p><p>腾讯云轻量服务器最大的特点就是“轻量”，相比CVM，更适合小白上手，这边我们之间选择Docker基础镜像，就可以省去后面安装Docker的步骤（如果你非要用国内的服务器，这边装的Docker镜像还会帮你配置好国内镜像源，让你加速访问docker镜像资源）。</p><h3 id="登陆（腾讯云轻量应用服务器）"><a href="#登陆（腾讯云轻量应用服务器）" class="headerlink" title="登陆（腾讯云轻量应用服务器）"></a>登陆（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlzlj7-2.webp" alt="2722040ee311eb4a9ebf2a4945bf38f4.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm0gv8-2.webp" alt="c0b5d360053746c4095d592967ee401f.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm1vqw-2.webp" alt="e0ba858f021b846ad0abc27acf5008c2.png"></p><h3 id="5-1-服务器前期配置"><a href="#5-1-服务器前期配置" class="headerlink" title="5.1 服务器前期配置"></a>5.1 服务器前期配置</h3><p>服务器初始设置，参考：</p><p><a href="https://blog.laoda.de/archives/vps-script"><strong>新买了一台服务器“必须”要做的6件小事</strong></a></p><p><a href="https://blog.laoda.de/archives/how-to-secure-a-linux-server"><strong>保护好你的小鸡！保姆级服务器安全教程！</strong></a></p><p>这边由于我们用的是腾讯云轻量应用服务器，系统默认就帮我们创建了名字是<code>lighthouse</code>的用户，系统后台也有防火墙（默认就开了几个常用的端口）</p><p>对小白用户来说，可以不用再去管繁琐的服务器安全的配置，大大降低了服务器防护的门槛。</p><p><a href="https://blog.laoda.de/archives/hello-docker">【Docker系列】不用宝塔面板，小白一样可以玩转VPS服务器！</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i <span class="comment"># 切换到root用户</span></span><br><span class="line"></span><br><span class="line">apt update -y  <span class="comment"># 升级packages</span></span><br><span class="line"></span><br><span class="line">apt install wget curl sudo vim git -y  <span class="comment"># Debian系统比较干净，安装常用的软件</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：VPS的内存如果过小，建议设置一下SWAP，一般为内存的1-1.5倍即可，可以让系统运行更流畅！</p></blockquote><p>设置SWAP可以用脚本:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O box.sh https://raw.githubusercontent.com/BlueSkyXN/SKY-BOX/main/box.sh &amp;&amp; <span class="built_in">chmod</span> +x box.sh &amp;&amp; clear &amp;&amp; ./box.sh</span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2022/05/28/uoikkd-0.webp" alt="image-20220528185512488" style="zoom:50%;" /><p>选择<code>18</code>，然后输入你想要扩容的数值即可。</p><img src="https://img.laoda.de/i/2022/05/28/up2dkf-0.webp" alt="image-20220528185604586" style="zoom:50%;" /><p>使用腾讯云轻量应用服务器的小伙伴可以直接跳到<code>5.2.4</code></p><h3 id="5-2-安装Docker（使用腾讯云轻量应用服务器可跳过这一部分）"><a href="#5-2-安装Docker（使用腾讯云轻量应用服务器可跳过这一部分）" class="headerlink" title="5.2 安装Docker（使用腾讯云轻量应用服务器可跳过这一部分）"></a>5.2 安装Docker（使用腾讯云轻量应用服务器可跳过这一部分）</h3><h4 id="5-2-1-非大陆服务器Docker安装"><a href="#5-2-1-非大陆服务器Docker安装" class="headerlink" title="5.2.1 非大陆服务器Docker安装"></a>5.2.1 <strong>非大陆服务器Docker安装</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -qO- get.docker.com | bash</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker -v  <span class="comment">#查看docker版本</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker  <span class="comment"># 设置开机自动启动</span></span><br></pre></td></tr></table></figure><p><strong>修改Docker配置（可选）（来自<a href="https://u.sb/debian-install-docker/">烧饼博客</a>）</strong></p><p>以下配置会增加一段自定义内网 IPv6 地址，开启容器的 IPv6 功能，以及限制日志文件大小，防止 Docker 日志塞满硬盘（泪的教训）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/docker/daemon.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    &quot;log-driver&quot;: &quot;json-file&quot;,</span></span><br><span class="line"><span class="string">    &quot;log-opts&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;max-size&quot;: &quot;20m&quot;,</span></span><br><span class="line"><span class="string">        &quot;max-file&quot;: &quot;3&quot;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    &quot;ipv6&quot;: true,</span></span><br><span class="line"><span class="string">    &quot;fixed-cidr-v6&quot;: &quot;fd00:dead:beef:c0::/80&quot;,</span></span><br><span class="line"><span class="string">    &quot;experimental&quot;:true,</span></span><br><span class="line"><span class="string">    &quot;ip6tables&quot;:true</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>然后重启 Docker 服务：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h4 id="5-2-2-非大陆服务器Docker-compose安装"><a href="#5-2-2-非大陆服务器Docker-compose安装" class="headerlink" title="5.2.2 非大陆服务器Docker-compose安装"></a>5.2.2 <strong>非大陆服务器Docker-compose安装</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/1.29.2/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose --version  <span class="comment">#查看docker-compose版本</span></span><br></pre></td></tr></table></figure><h4 id="5-2-3-国内服务器安装docker"><a href="#5-2-3-国内服务器安装docker" class="headerlink" title="5.2.3 国内服务器安装docker"></a>5.2.3 <strong>国内服务器安装docker</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -sSL https://get.daocloud.io/docker | sh</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker -v  <span class="comment">#查看docker版本</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker  <span class="comment"># 设置开机自动启动</span></span><br></pre></td></tr></table></figure><p><strong>修改Docker配置（可选）（来自<a href="https://u.sb/debian-install-docker/">烧饼博客</a>）</strong></p><p>以下配置会增加一段自定义内网 IPv6 地址，开启容器的 IPv6 功能，以及限制日志文件大小，防止 Docker 日志塞满硬盘（泪的教训）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/docker/daemon.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    &quot;log-driver&quot;: &quot;json-file&quot;,</span></span><br><span class="line"><span class="string">    &quot;log-opts&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;max-size&quot;: &quot;20m&quot;,</span></span><br><span class="line"><span class="string">        &quot;max-file&quot;: &quot;3&quot;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    &quot;ipv6&quot;: true,</span></span><br><span class="line"><span class="string">    &quot;fixed-cidr-v6&quot;: &quot;fd00:dead:beef:c0::/80&quot;,</span></span><br><span class="line"><span class="string">    &quot;experimental&quot;:true,</span></span><br><span class="line"><span class="string">    &quot;ip6tables&quot;:true</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>然后重启 Docker 服务：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h4 id="5-2-4-国内服务器安装docker-compose"><a href="#5-2-4-国内服务器安装docker-compose" class="headerlink" title="5.2.4 国内服务器安装docker-compose"></a>5.2.4 <strong>国内服务器安装docker-compose</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -L https://get.daocloud.io/docker/compose/releases/download/v2.1.1/docker-compose-`<span class="built_in">uname</span> -s`-`<span class="built_in">uname</span> -m` &gt; /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line">docker-compose --version  <span class="comment">#查看docker-compose版本</span></span><br></pre></td></tr></table></figure><h3 id="5-3-安装NginxProxyManager"><a href="#5-3-安装NginxProxyManager" class="headerlink" title="5.3 安装NginxProxyManager"></a>5.3 安装NginxProxyManager</h3><p>参考这边的内容：<a href="https://blog.laoda.de/archives/nginxproxymanager">https://blog.laoda.de/archives/nginxproxymanager</a></p><h3 id="5-4-创建安装目录"><a href="#5-4-创建安装目录" class="headerlink" title="5.4 创建安装目录"></a>5.4 创建安装目录</h3><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/excalidraw</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/excalidraw</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这边我们有两种搭建方法，一种是用官方的来自己构建，另一种是用群里小伙伴做的镜像直接安装。</p><p>用官方的优点是能保证使用的是最新的版本但是对于差一点的机器，构建镜像时间会有点长；</p><p>用群里小伙伴的镜像好处是配置文件简单，但是可能不是最新版本的，大家自行取舍。</p><p><strong>官方安装：</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/excalidraw/excalidraw.git</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> excalidraw</span><br><span class="line"></span><br><span class="line">vim docker-compose.yml</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>英文输入法下，按<code>i</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3.8&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">excalidraw:</span></span><br><span class="line">    <span class="attr">build:</span></span><br><span class="line">      <span class="attr">context:</span> <span class="string">.</span></span><br><span class="line">      <span class="attr">args:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">NODE_ENV=development</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">excalidraw</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8099:80&quot;</span>  <span class="comment"># 可以更改8099端口为自己想要的端口</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">on-failure</span></span><br><span class="line">    <span class="attr">stdin_open:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">healthcheck:</span></span><br><span class="line">      <span class="attr">disable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">NODE_ENV=development</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./:/opt/node_app/app:delegated</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./package.json:/opt/node_app/package.json</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./yarn.lock:/opt/node_app/yarn.lock</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">notused:/opt/node_app/app/node_modules</span></span><br><span class="line"></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line">  <span class="attr">notused:</span></span><br></pre></td></tr></table></figure><p>按一下<code>esc</code>，然后<code>:wq</code> 保存退出，之后，</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d </span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>使用群里小伙伴的docker-compose安装：</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/excalidraw</span><br><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure><p>因为官方的是自己build的版本，会比较花时间，这边推荐可以使用这个<code>docker-compose.yml</code>，感谢小伙伴提供<a href="https://blog.ddsrem.gq/">@Derek</a>：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">excalidraw:</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;8099:80&#x27;</span>  <span class="comment"># 可以更改8099端口为自己想要的端口</span></span><br><span class="line">        <span class="attr">environment:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">PUID=1000</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">PGID=1000</span></span><br><span class="line">        <span class="attr">volumes:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;./data:/app/web&#x27;</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">&#x27;ddsderek/excalidraw:latest&#x27;</span></span><br></pre></td></tr></table></figure><blockquote><p><code>./data</code>这个可以换成你自己服务器的路径；</p><p>冒号左边的<code>8099</code>可以换成主机未被占用的端口;</p><p>其他不建议修改。</p></blockquote><p>按一下<code>esc</code>，然后<code>:wq</code> 保存退出，之后，</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d </span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="5-5-打开服务器防火墙并访问网页"><a href="#5-5-打开服务器防火墙并访问网页" class="headerlink" title="5.5 打开服务器防火墙并访问网页"></a>5.5 打开服务器防火墙并访问网页</h3><p>打开防火墙的端口<code>8099</code></p><p>腾讯云打开方法如下：</p><img src="https://img.laoda.de/i/2022/06/30/zlio5h-2.webp" alt="image-20220630215240864" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/06/30/10h3dqt-2.webp" alt="image-20220630220546335" style="zoom:33%;" /><p>这边我们填<code>8099</code> 确定即可（如果你在dockercompose文件里换了<code>8081</code>，这边就需要填<code>8081</code>，以此类推）</p><img src="https://img.laoda.de/i/2022/08/19/o4byqz-2.webp" alt="image-20220819145844555" style="zoom:33%;" /><p>查看端口是否被占用（以<code>8099</code>为例），输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:8099  <span class="comment">#查看8099端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果啥也没出现，表示端口未被占用，我们可以继续下面的操作了～</p><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用（被占用了就修改一下端口，比如改成8081，注意docker命令行里和防火墙都要改）</p><p>耐心等待，等出现：</p><p>我们就可以输入<code>http://ip:8099</code>访问了。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的IP。</p><p>2、遇到访问不了的情况，请再次检查在宝塔面板的防火墙和服务商的后台防火墙是否打开对应了端口。</p></blockquote><p>因为我们后续想要分享给别人，IP+端口太不优雅了，咕咕建议大家还是搞一个域名，容易记，看起来也更正规一点。这样可以做https，会让网页更安全。（非要IP+端口访问的，可以直接跳到<code>5.6</code>，并且跳过<code>6. 反向代理</code>部分）</p><p>而且<a href="https://loll.cc/ns">namesilo</a>上面xyz后缀的域名一年就7块钱，可以年抛。</p><p>如果想要长期使用，还是建议买com后缀的域名，更加正规一些，可以输入<code>laodade</code>来获得1美元的优惠（不知道现在还有没有）</p><p><a href="https://loll.cc/ns">namesilo</a>自带隐私保护，咕咕一直在用这家，价格也是这些注册商里面比较低的，关键是他家不像其他家域名注册商，没有七七八八的套路！（就是后台界面有些<del>丑</del>古老 &#x3D; &#x3D;）</p><p><a href="https://blog.laoda.de/archives/namesilo">【域名购买】Namesilo优惠码和域名解析教程（附带服务器购买推荐和注意事项）</a></p><p>我们接着往下看！</p><h3 id="5-6-更新"><a href="#5-6-更新" class="headerlink" title="5.6 更新"></a>5.6 更新</h3><h4 id="5-6-1-docker-compose部署"><a href="#5-6-1-docker-compose部署" class="headerlink" title="5.6.1 docker-compose部署"></a>5.6.1 docker-compose部署</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/excalidraw</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/excalidraw /root/data/docker_data/excalidraw.archive  <span class="comment"># 万事先备份，以防万一</span></span><br><span class="line"></span><br><span class="line">docker-compose pull</span><br><span class="line"></span><br><span class="line">docker-compose up -d </span><br><span class="line"></span><br><span class="line">docker image prune  <span class="comment"># prune 命令用来删除不再使用的 docker 对象。删除所有未被 tag 标记和未被容器使用的镜像</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>提示：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WARNING! This will remove all dangling images.</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] </span><br></pre></td></tr></table></figure><p>输入<code>y</code></p><p>利用Docker搭建的应用，更新非常容易～</p><h3 id="5-7-卸载"><a href="#5-7-卸载" class="headerlink" title="5.7 卸载"></a>5.7 卸载</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker stop excalidraw</span><br><span class="line"></span><br><span class="line">docker <span class="built_in">rm</span> -f excalidraw  <span class="comment"># 停止容器，此时不会删除映射到本地的数据</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/excalidraw  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>可以卸载得很干净。</p><h2 id="6-反向代理"><a href="#6-反向代理" class="headerlink" title="6. 反向代理"></a>6. 反向代理</h2><h3 id="6-1-利用Nginx-Proxy-Manager"><a href="#6-1-利用Nginx-Proxy-Manager" class="headerlink" title="6.1 利用Nginx Proxy Manager"></a>6.1 利用Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><img src="https://img.laoda.de/i/2022/09/04/c2xhkn-2.webp" alt="054215cf70ff4b544dfbf48638da380c.png" style="zoom:33%;" /><p>之后，登陆Nginx Proxy Manager（不会的看这个：<strong>安装Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称NPM）会用到<code>80</code>、<code>443</code>端口，所以本机不能占用（比如原来就有Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom: 33%;" /><img src="https://img.laoda.de/i/2022/09/04/c3jflb-2.webp" alt="041c6dacbfe151437ab1decb101aa154.png" style="zoom: 33%;" /><blockquote><p> 注意填写对应的<code>域名</code>、<code>IP</code>和<code>端口</code>，按文章来的话，应该是<code>8099</code></p></blockquote><p><strong>IP填写：</strong></p><p>如果Nginx Proxy Manager和Memos在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的Docker容器内部IP。</p><p>否则直接填<code>excalidraw所在的服务器IP</code>就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom: 33%;" /><p>再次打开，勾选这些：</p><img src="https://img.laoda.de/i/2022/09/04/c4irzz-2.webp" alt="image-20220728212042482" style="zoom: 33%;" /><p>然后就可以用域名来安装访问了。</p><h3 id="6-2-利用宝塔面板"><a href="#6-2-利用宝塔面板" class="headerlink" title="6.2 利用宝塔面板"></a>6.2 利用宝塔面板</h3><p>发现还是有不少小伙伴习惯用宝塔面板，这边也贴一个宝塔面板的反代配置：</p><p>直接新建一个站点，不要数据库，不要php，纯静态即可。</p><p>然后打开下面的配置，修改Nginx的配置。</p><p><img src="https://img.laoda.de/i/2022/08/19/ov4xrt-2.webp" alt="image-20220819150345725"></p><p><img src="https://img.laoda.de/i/2022/08/19/owbbkb-2.webp" alt="image-20220819150542867"></p><p>代码如下：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:8099/;</span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此方法对90%的反向代理都能生效。</p><p>有同学可能会问，为什么不直接用宝塔自带的反向代理功能。</p><p><img src="https://img.laoda.de/i/2022/08/19/oxf800-2.webp" alt="image-20220819150730128"></p><p>也可以，不过咕咕自己之前遇到过当有多个网站需要反代的时候，在这边设置会报错的情况 &#x3D; &#x3D; </p><p>所以后来就不用了，直接用上面的方法来操作了。</p><h2 id="7-使用教程"><a href="#7-使用教程" class="headerlink" title="7. 使用教程"></a>7. 使用教程</h2><h3 id="7-1-安装和配置"><a href="#7-1-安装和配置" class="headerlink" title="7.1 安装和配置"></a>7.1 安装和配置</h3><p>见咕咕的视频。</p><p><img src="https://img.laoda.de/i/2022/09/03/10mc30y-2.webp"></p><h2 id="8-目前遇到的问题"><a href="#8-目前遇到的问题" class="headerlink" title="8. 目前遇到的问题"></a>8. 目前遇到的问题</h2><p><strong>1、<del>中文版本手写字体</del></strong> 已解决</p><p><img src="https://img.laoda.de/i/2022/09/04/i7ukaz-2.webp"></p><p><strong>2、无法分享链接</strong></p><p><strong>3、无法协同工作</strong></p><h2 id="9-结尾"><a href="#9-结尾" class="headerlink" title="9. 结尾"></a>9. 结尾</h2><p>祝大家用得开心，有问题可以去GitHub提<a href="https://github.com/excalidraw/excalidraw/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，项目处于刚开始阶段，有能力给项目做贡献的同学，也欢迎积极加入到<a href="https://github.com/excalidraw/excalidraw">项目</a>中来，贡献自己的一份力量！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://github.com/excalidraw/excalidraw">https://github.com/excalidraw/excalidraw</a><br><a href="https://www.cnblogs.com/cuianbing/p/14816846.html">https://www.cnblogs.com/cuianbing/p/14816846.html</a><br><a href="https://juejin.cn/post/6971996369569447949">https://juejin.cn/post/6971996369569447949</a><br><a href="https://zhuanlan.zhihu.com/p/425837520">https://zhuanlan.zhihu.com/p/425837520</a><br><a href="https://juejin.cn/post/7119512386029125668">https://juejin.cn/post/7119512386029125668</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 白板工具 </tag>
            
            <tag> Excalidraw </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩儿的Docker项目】10分钟搞定网盘搭建！腾讯云轻量应用服务器搭建Cloudreve网盘，离线下载So easy！还支持WebDAV！</title>
      <link href="/archives/docker-compose-install-lighthouse-cloudreve/"/>
      <url>/archives/docker-compose-install-lighthouse-cloudreve/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>早在1年前，咕咕就分享过Cloudreve的安装方法：<a href="https://blog.laoda.de/archives/cloudreve-install">告别百度网盘，安装自己的专属网盘——Cloudreve，不限制下载速度！</a></p><p>不过当时是用的宝塔面板搭建的，今天翻那篇文章，发现里面的图片全TM裂开了，仔细一看，之前是用的gitee做的图床 :(（由此可见用第三方做图床的不稳定性，还是<a href="https://blog.laoda.de/archives/docker-compose-install-easyimage">自建</a>好！）</p><p>前俩周推荐大家买了<a href="https://mc.tencent.com/aTFNM97q">腾讯云轻量应用服务器</a>，加上我们这段时间一直在折腾Docker，这周，我们就一起来用Docker重新在<a href="https://mc.tencent.com/aTFNM97q">腾讯云轻量应用服务器</a>搭建一次Cloudreve，顺便把之前没说的，官方更新的离线下载功能一并来讲一讲！</p><p>比起宝塔搭建，Docker搭建会更简单，而且更容易维护！</p><h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1. 介绍"></a>1. 介绍</h2><p><img src="https://img.laoda.de/i/2022/08/23/qsp07g-2.webp" alt="image-20220823162028079"></p><h3 id="1-1-Cloudreve-是什么？（来自官方）"><a href="#1-1-Cloudreve-是什么？（来自官方）" class="headerlink" title="1.1 Cloudreve 是什么？（来自官方）"></a>1.1 Cloudreve 是什么？（来自官方）</h3><p>Cloudreve 可以让您快速搭建起公私兼备的网盘系统。Cloudreve 在底层支持不同的云存储平台，用户在实际使用时无须关心物理存储方式。你可以使用 Cloudreve 搭建个人用网盘、文件分享系统，亦或是针对大小团体的公有云系统。</p><h3 id="1-2-相关地址"><a href="#1-2-相关地址" class="headerlink" title="1.2 相关地址"></a>1.2 相关地址</h3><p>官方网站：<a href="https://cloudreve.org/">https://cloudreve.org/</a></p><p>官方文档：<a href="https://docs.cloudreve.org/">https://docs.cloudreve.org/</a></p><p>官方论坛：<a href="https://forum.cloudreve.org/">https://forum.cloudreve.org/</a></p><p>GitHub地址：<a href="https://github.com/cloudreve/Cloudreve">https://github.com/cloudreve/Cloudreve</a>  (15.6k Star)</p><h3 id="1-3-联系"><a href="#1-3-联系" class="headerlink" title="1.3 联系"></a>1.3 联系</h3><p>你可以加入以下群组与其他正在使用 Cloudreve 的用户交流：</p><ul><li><p><a href="https://t.me/cloudreve_official">Telegram 群组</a></p></li><li><p><a href="https://qm.qq.com/cgi-bin/qm/qr?k=pjwJ2pi_V4LN_JdPZk_HMwJv_x8zuCPX&jump_from=webapi">QQ 群组</a></p></li></ul><p>或是与开发者联系：</p><p> Email：<a href="mailto:abslant.liu@gmail.com">abslant.liu@gmail.com</a></p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><h3 id="2-1-登录"><a href="#2-1-登录" class="headerlink" title="2.1 登录"></a>2.1 登录</h3><p><img src="https://img.laoda.de/i/2022/08/24/qjmah9-2.webp" alt="image-20220824160505777"></p><p><img src="https://img.laoda.de/i/2022/08/24/qm2v9n-2.webp" alt="image-20220824160918953"></p><h3 id="2-2-面板首页"><a href="#2-2-面板首页" class="headerlink" title="2.2 面板首页"></a>2.2 面板首页</h3><p><img src="https://img.laoda.de/i/2022/08/23/qp804g-2.webp" alt="image-20220823161445425"></p><h3 id="2-3-站点信息修改"><a href="#2-3-站点信息修改" class="headerlink" title="2.3 站点信息修改"></a>2.3 站点信息修改</h3><p><img src="https://img.laoda.de/i/2022/08/23/qmtad0-2.webp" alt="image-20220823161040948"></p><h3 id="2-4-注册与登录"><a href="#2-4-注册与登录" class="headerlink" title="2.4 注册与登录"></a>2.4 注册与登录</h3><p><img src="https://img.laoda.de/i/2022/08/23/qn6gf8-2.webp" alt="image-20220823161102339"></p><h3 id="2-5-邮件SMTP配置"><a href="#2-5-邮件SMTP配置" class="headerlink" title="2.5 邮件SMTP配置"></a>2.5 邮件SMTP配置</h3><p><img src="https://img.laoda.de/i/2022/08/23/qn9fuz-2.webp" alt="image-20220823161117445"></p><h3 id="2-6-支持各种存储策略"><a href="#2-6-支持各种存储策略" class="headerlink" title="2.6 支持各种存储策略"></a>2.6 支持各种存储策略</h3><p><img src="https://img.laoda.de/i/2022/08/23/qksqr4-2.webp" alt="image-20220823160703836"></p><h3 id="2-7-其他面板其他功能"><a href="#2-7-其他面板其他功能" class="headerlink" title="2.7 其他面板其他功能"></a>2.7 其他面板其他功能</h3><p><img src="https://img.laoda.de/i/2022/08/23/qndk3u-2.webp" alt="image-20220823161136228"></p><p>用户组</p><p><img src="https://img.laoda.de/i/2022/08/23/qnr32x-2.webp" alt="image-20220823161159552"></p><h3 id="2-8-WebDAV"><a href="#2-8-WebDAV" class="headerlink" title="2.8 WebDAV"></a>2.8 WebDAV</h3><p><img src="https://img.laoda.de/i/2022/08/23/qoi9r6-2.webp" alt="image-20220823161325474"></p><p><img src="https://img.laoda.de/i/2022/08/23/qodu1q-2.webp" alt="image-20220823161305171"></p><h3 id="2-9-离线下载"><a href="#2-9-离线下载" class="headerlink" title="2.9 离线下载"></a>2.9 离线下载</h3><p><img src="https://img.laoda.de/i/2022/08/23/qkchpf-2.webp" alt="image-20220823160627288"></p><p><img src="https://img.laoda.de/i/2022/08/23/qjm4y8-2.webp" alt="image-20220823160459275"></p><h2 id="3-搭建环境"><a href="#3-搭建环境" class="headerlink" title="3. 搭建环境"></a>3. 搭建环境</h2><ul><li>服务器：<del>香港腾讯云轻量应用服务器24元&#x2F;月VPS一台</del>本期搭建用的是<a href="https://gao.ee/lh">腾讯云轻量应用服务器</a>，（最好是选<strong>非大陆（香港）的服务器</strong>）</li><li>系统：Ubuntu 20.04 + 默认腾讯云轻量应用服务器系统自带的docker + docker-compose（也可选纯净的系统镜像，然后<a href="https://blog.laoda.de/archives/hello-docker#5%E3%80%81%E5%AE%89%E8%A3%85docker%E3%80%81docker-compose">自行安装docker与docker-compose</a>）</li><li>【非必需但建议】域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>【非必需本教程选用】安装好Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><h3 id="3-1-恰饭时间"><a href="#3-1-恰饭时间" class="headerlink" title="3.1 恰饭时间"></a>3.1 恰饭时间</h3><p>咕咕第一次恰饭，推荐一下腾讯云的服务器。</p><p>熟悉咕咕的小伙伴应该知道，咕咕最早用的是24元&#x2F;月的香港腾讯云轻量应用服务器，当时电信还是走的回程CN2GIA的线路，非常香，那个时候咕咕就推荐过大家月付购买。如今，24元&#x2F;月已经成为历史，香港的机器不仅涨价了，还一直断货，持有老款套餐的小伙伴们还是挺香的。</p><p>本着为大家负责的态度，咕咕绝对不乱恰饭，以下的推荐也会和大家讲清楚商品或者活动的优缺点，目的还是帮助大家更好地选择自己需要的机器。</p><p>一共有三个链接，咕咕用<a href="https://blog.laoda.de/archives/docker-compose-install-yourls">自建的短链接服务</a>做了短链接：</p><p>适合从来没有买过腾讯云服务器的新用户的活动：<a href="https://gao.ee/new">https://gao.ee/new</a></p><p>腾讯云精选爆品选购：<a href="https://gao.ee/list">https://gao.ee/list</a></p><p>腾讯云轻量应用服务器入口：<a href="https://gao.ee/lh">https://gao.ee/lh</a></p><p>腾讯云轻量应用服务器Lighthouse目前在搞活动，如果是新用户，可以<a href="https://gao.ee/new">点击链接</a>领取“2核4G 6M新用户免费试用1个月”（国内服务器，需要备案使用，适合想要在国内做站的小伙伴）</p><p>另外，腾讯云现在还在搞<a href="https://gao.ee/list">优惠活动</a>，主要还是针对<a href="https://gao.ee/list">新用户</a>，可以以非常便宜的价格入手国内的服务器。（主要是上海、北京、广州的）</p><p><img src="https://img.laoda.de/i/2022/08/26/12l8wjk-2.webp"></p><p>像上图的上海腾讯云轻量应用服务器，2H2G4M 一年就65块钱，一个月不到5块5。</p><p>购买链接：<a href="https://gao.ee/list">https://gao.ee/list</a></p><blockquote><p>如果你真的有需求，但是你又买过腾讯云服务器了，不符合新用户的条件，甚至可以借男女朋友或者老爸老妈的微信来注册账号购买，反正年抛即可 &#x3D; &#x3D;</p></blockquote><p>对于正经做网站，想要站点被百度收录，还有之后还打算搞微信小程序的小伙伴来说，非常合适（都需要备案，像咕咕的这个博客就做不了微信小程序，百度也基本不收录，因为咕咕没有备案）</p><p>当然，还有部分小伙伴像咕咕一样，嫌备案麻烦，也不在乎百度收录，也不想白嫖七牛云、又拍云CDN的，可以和咕咕一样，直接买非大陆地区的腾讯云轻量应用服务器（首选香港，次选日本、新加坡、硅谷，选孟买的话后果自负 &#x3D; &#x3D;）</p><p>腾讯云轻量应用服务器(lighthouse)购买链接：<a href="https://gao.ee/lh">https://gao.ee/lh</a></p><p>ok，介绍完毕，大家量力而行，按需购买，理性消费！</p><p>附：国内服务器docker换源</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> &gt;/etc/docker/daemon.json</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span>&gt;/etc/docker/daemon.json &lt;&lt;<span class="string">END</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  &quot;registry-mirrors&quot;: [</span></span><br><span class="line"><span class="string">    &quot;https://hub-mirror.c.163.com&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://ustc-edu-cn.mirror.aliyuncs.com&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://ghcr.io&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://mirror.baidubce.com&quot;</span></span><br><span class="line"><span class="string">  ]</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">END</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h2 id="4-搭建视频"><a href="#4-搭建视频" class="headerlink" title="4. 搭建视频"></a>4. 搭建视频</h2><p>YouTube：<a href="https://youtu.be/oUIVOsDq07M">https://youtu.be/oUIVOsDq07M</a></p><p>哔哩哔哩【高清版本可以点击去吐槽到B站观看】：<joe-bilibili bvid="BV1kd4y1977E"></joe-bilibili></p><h2 id="5-搭建方式"><a href="#5-搭建方式" class="headerlink" title="5. 搭建方式"></a>5. 搭建方式</h2><h3 id="5-1-安装系统（腾讯云轻量应用服务器）"><a href="#5-1-安装系统（腾讯云轻量应用服务器）" class="headerlink" title="5.1 安装系统（腾讯云轻量应用服务器）"></a>5.1 安装系统（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlyhcz-2.webp" alt="e59713fba8726d3cb55ae11bca83fe3c.png"></p><p>腾讯云轻量应用服务器最大的特点就是<code>轻量</code>，相比CVM，更适合小白上手！</p><p>这边我们之间选择Docker基础镜像，就可以省去后面安装Docker的步骤（如果你非要用国内的服务器，这边装的Docker镜像还会帮你配置好国内镜像源，让你加速访问docker镜像资源）。</p><h3 id="5-2-登录（腾讯云轻量应用服务器）"><a href="#5-2-登录（腾讯云轻量应用服务器）" class="headerlink" title="5.2 登录（腾讯云轻量应用服务器）"></a>5.2 登录（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlzlj7-2.webp" alt="2722040ee311eb4a9ebf2a4945bf38f4.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm0gv8-2.webp" alt="c0b5d360053746c4095d592967ee401f.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm1vqw-2.webp" alt="e0ba858f021b846ad0abc27acf5008c2.png"></p><h3 id="5-3-服务器前期配置"><a href="#5-3-服务器前期配置" class="headerlink" title="5.3 服务器前期配置"></a>5.3 服务器前期配置</h3><p>对与一般提供商来说，买到一台服务器之后，需要你对服务器做一些初始设置，参考：</p><p><a href="https://blog.laoda.de/archives/vps-script"><strong>新买了一台服务器“必须”要做的6件小事</strong></a></p><p><a href="https://blog.laoda.de/archives/how-to-secure-a-linux-server"><strong>保护好你的小鸡！保姆级服务器安全教程！</strong></a></p><p>这边由于我们用的是腾讯云轻量应用服务器，系统默认就帮我们创建了名字是<code>lighthouse</code>的用户，系统后台也有防火墙（默认就开了几个常用的端口）</p><p>这样一来，对小白用户来说，就可以不用再去管繁琐的服务器安全的配置，大大降低了服务器防护的门槛！真正实现开箱即用！</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i <span class="comment"># 切换到root用户</span></span><br><span class="line"></span><br><span class="line">apt update -y  <span class="comment"># 升级packages</span></span><br><span class="line"></span><br><span class="line">apt install wget curl sudo vim git -y  <span class="comment"># Debian系统比较干净，安装常用的软件</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：VPS的内存如果过小，建议设置一下SWAP，一般为内存的1-1.5倍即可，可以让系统运行更流畅！</p></blockquote><p>设置SWAP可以用脚本:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O box.sh https://raw.githubusercontent.com/BlueSkyXN/SKY-BOX/main/box.sh &amp;&amp; <span class="built_in">chmod</span> +x box.sh &amp;&amp; clear &amp;&amp; ./box.sh</span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2022/05/28/uoikkd-0.webp" alt="image-20220528185512488" style="zoom:50%;" /><p>选择<code>18</code>，然后输入你想要扩容的数值即可。</p><img src="https://img.laoda.de/i/2022/05/28/up2dkf-0.webp" alt="image-20220528185604586" style="zoom:50%;" /><h3 id="5-4-安装NginxProxyManager"><a href="#5-4-安装NginxProxyManager" class="headerlink" title="5.4 安装NginxProxyManager"></a>5.4 安装NginxProxyManager</h3><p>参考这边的内容：<a href="https://blog.laoda.de/archives/nginxproxymanager">https://blog.laoda.de/archives/nginxproxymanager</a></p><h3 id="5-5-创建安装目录"><a href="#5-5-创建安装目录" class="headerlink" title="5.5 创建安装目录"></a>5.5 创建安装目录</h3><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/cloudreve</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/cloudreve</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> &#123;cloudreve,data&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> cloudreve</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> &#123;avatar,uploads&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">touch</span> &#123;conf.ini,cloudreve.db&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/cloudreve</span><br><span class="line"></span><br><span class="line">vim docker-compose.yml</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>输入下面内容到<code>docker-compose.yml</code>文件里：</p><p><strong>不用这个，建议用下面那个！</strong><br><strong>不用这个，建议用下面那个！</strong><br><strong>不用这个，建议用下面那个！</strong></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3.8&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">cloudreve:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">cloudreve</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">cloudreve/cloudreve:latest</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;5212:5212&quot;</span>            <span class="comment"># 冒号左边的 5212 可以换成主机未被占用的端口</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">temp_data:/data</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./cloudreve/uploads:/cloudreve/uploads</span>        <span class="comment"># 冒号左边的这个可以换成你自己服务器的路径</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./cloudreve/conf.ini:/cloudreve/conf.ini</span>      <span class="comment"># 冒号左边的这个可以换成你自己服务器的路径</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./cloudreve/cloudreve.db:/cloudreve/cloudreve.db</span>  <span class="comment"># 冒号左边的这个可以换成你自己服务器的路径</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./cloudreve/avatar:/cloudreve/avatar</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">aria2</span></span><br><span class="line">  <span class="attr">aria2:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">aria2</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">p3terx/aria2-pro</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">RPC_SECRET=your_aria_rpc_token</span>  <span class="comment"># 注意修改一下这个密钥</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">RPC_PORT=6800</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./aria2/config:/config</span>    <span class="comment"># 冒号左边的这个可以换成你自己服务器的路径</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">temp_data:/data</span></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line">  <span class="attr">temp_data:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">local</span></span><br><span class="line">    <span class="attr">driver_opts:</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">none</span></span><br><span class="line">      <span class="attr">device:</span> <span class="string">$PWD/data</span></span><br><span class="line">      <span class="attr">o:</span> <span class="string">bind</span></span><br></pre></td></tr></table></figure><p><strong>建议用下方的yaml文件：</strong>  感谢<a href="https://blog.ddsrem.gq/">@Derek DDS</a></p><blockquote><p>教程我看了，设置aria2的那部分是有问题的，后来设置了<code>data/aria2/</code>文件夹的权限，实际上是不用设置的，aria2是有PUID和PGID的设置的，但是你更改了镜像默认的下载路径<code>/downloads</code>，导致PUID和PGID配置也无法使用，为此自己做了镜像 <code>https://github.com/DDS-Derek/Aria2-Pro-Docker</code> ，可以更改默认的下载路径，只要设置好PUID和PGID，就不会出现权限问题了，因为设置<code>777</code>权限是一件很危险的事</p></blockquote><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3.8&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">cloudreve:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">cloudreve</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">cloudreve/cloudreve:latest</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;5212:5212&quot;</span>            <span class="comment"># 冒号左边的 5212 可以换成主机未被占用的端口</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">temp_data:/data</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./cloudreve/uploads:/cloudreve/uploads</span>        <span class="comment"># 冒号左边的这个可以换成你自己服务器的路径</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./cloudreve/conf.ini:/cloudreve/conf.ini</span>      <span class="comment"># 冒号左边的这个可以换成你自己服务器的路径</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./cloudreve/cloudreve.db:/cloudreve/cloudreve.db</span>  <span class="comment"># 冒号左边的这个可以换成你自己服务器的路径</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./cloudreve/avatar:/cloudreve/avatar</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">aria2</span></span><br><span class="line">  <span class="attr">aria2:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">aria2</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">ddsderek/aria2-pro</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">RPC_SECRET=your_aria_rpc_token</span>  <span class="comment"># 注意修改一下这个密钥</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">RPC_PORT=6800</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DOWNLOAD_DIR=/data</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PUID=0</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PGID=0</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">UMASK_SET=022</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./aria2/config:/config</span>    <span class="comment"># 冒号左边的这个可以换成你自己服务器的路径</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">temp_data:/data</span></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line">  <span class="attr">temp_data:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">local</span></span><br><span class="line">    <span class="attr">driver_opts:</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">none</span></span><br><span class="line">      <span class="attr">device:</span> <span class="string">$PWD/data</span></span><br><span class="line">      <span class="attr">o:</span> <span class="string">bind</span></span><br></pre></td></tr></table></figure><p>用这个的话，下面<a href="https://blog.laoda.de/archives/docker-compose-install-lighthouse-cloudreve#7.2-%E9%85%8D%E7%BD%AE%E7%A6%BB%E7%BA%BF%E4%B8%8B%E8%BD%BD">7.2 离线下载</a> 部分，aria2的路径直接填<code>/data</code>即可，不需要修改<code>777</code>权限，更安全一些。</p><p><img src="https://img.laoda.de/i/2022/08/29/10o0hxk-2.webp"></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d </span><br><span class="line"></span><br><span class="line">docker-compose logs</span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/08/25/zigdc8-2.webp" alt="image-20220825214726993"></p><h3 id="5-6-打开服务器防火墙并访问网页"><a href="#5-6-打开服务器防火墙并访问网页" class="headerlink" title="5.6 打开服务器防火墙并访问网页"></a>5.6 打开服务器防火墙并访问网页</h3><p>打开防火墙的端口<code>5212</code></p><p>腾讯云打开方法如下：</p><img src="https://img.laoda.de/i/2022/06/30/zlio5h-2.webp" alt="image-20220630215240864" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/06/30/10h3dqt-2.webp" alt="image-20220630220546335" style="zoom:33%;" /><p>这边我们填<code>5212</code> 确定即可（如果你在dockercompose文件里换了<code>8081</code>，这边就需要填<code>8081</code>，以此类推）</p><img src="https://img.laoda.de/i/2022/08/24/r6wq9c-2.webp" alt="image-20220824164417668" style="zoom:33%;" /><p>查看端口是否被占用（以<code>5212</code>为例），输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:5212  <span class="comment">#查看5212端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果啥也没出现，表示端口未被占用，我们可以继续下面的操作了～</p><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>可以运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用（被占用了就修改一下端口，比如改成8081，注意docker命令行里和防火墙都要改）</p><p>我们就可以输入<code>http://ip:5212</code>访问了。</p><p>初始的账号&#x2F;密码获取可以通过命令行输入:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/cloudreve</span><br><span class="line"></span><br><span class="line">docker-compose logs </span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2022/08/23/qgrdx8-2.webp" alt="image-20220823160024561" style="zoom:33%;" /><p>记得修改密码。<del>（账户名似乎不能修改，可以后续创建一个新的管理员）</del></p><p>可以在<code>管理面板</code>——<code>用户</code>, 这边修改默认的登陆账号和密码！</p><p><img src="https://img.laoda.de/i/2022/08/30/dau9wp-2.webp"></p><img src="https://img.laoda.de/i/2022/08/23/qhe1w0-2.webp" alt="image-20220823160130554" style="zoom:33%;" /><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的IP。</p><p>2、遇到访问不了的情况，请再次检查在宝塔面板的防火墙和服务商的后台防火墙是否打开对应了端口。</p></blockquote><p>因为我们后续想要分享给别人，IP+端口太不优雅了，咕咕建议大家还是搞一个域名，容易记，看起来也更正规一点。这样可以做https，会让网页更安全。（非要IP+端口访问的，可以直接用啦，并且可以跳过<code>6. 反向代理</code>部分）</p><p>而且<a href="https://loll.cc/ns">namesilo</a>上面xyz后缀的域名一年就7块钱，可以年抛。</p><p>如果想要长期使用，还是建议买com后缀的域名，更加正规一些，可以输入<code>laodade</code>来获得1美元的优惠（不知道现在还有没有）</p><p><a href="https://loll.cc/ns">namesilo</a>自带隐私保护，咕咕一直在用这家，价格也是这些注册商里面比较低的，关键是他家不像其他家域名注册商，没有七七八八的套路！（就是后台界面有些<del>丑</del>古老 &#x3D; &#x3D;）</p><p><a href="https://blog.laoda.de/archives/namesilo">【域名购买】Namesilo优惠码和域名解析教程（附带服务器购买推荐和注意事项）</a></p><p>我们接着往下看！</p><h3 id="5-7-更新"><a href="#5-7-更新" class="headerlink" title="5.7 更新"></a>5.7 更新</h3><h4 id="5-7-1-docker-compose部署"><a href="#5-7-1-docker-compose部署" class="headerlink" title="5.7.1 docker-compose部署"></a>5.7.1 docker-compose部署</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/cloudreve</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/cloudreve /root/data/docker_data/cloudreve.archive  <span class="comment"># 万事先备份，以防万一</span></span><br><span class="line"></span><br><span class="line">docker-compose pull</span><br><span class="line"></span><br><span class="line">docker-compose up -d </span><br><span class="line"></span><br><span class="line">docker image prune  <span class="comment"># prune 命令用来删除不再使用的 docker 对象。删除所有未被 tag 标记和未被容器使用的镜像</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>提示：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WARNING! This will remove all dangling images.</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] </span><br></pre></td></tr></table></figure><p>输入<code>y</code></p><p>利用Docker搭建的应用，更新非常容易～</p><h3 id="5-8-卸载"><a href="#5-8-卸载" class="headerlink" title="5.8 卸载"></a>5.8 卸载</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/cloudreve</span><br><span class="line"></span><br><span class="line">docker-compose down   <span class="comment"># 停止容器，此时不会删除映射到本地的数据</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/cloudreve  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>可以卸载得很干净。</p><h2 id="6-反向代理"><a href="#6-反向代理" class="headerlink" title="6. 反向代理"></a>6. 反向代理</h2><h3 id="6-1-利用Nginx-Proxy-Manager"><a href="#6-1-利用Nginx-Proxy-Manager" class="headerlink" title="6.1 利用Nginx Proxy Manager"></a>6.1 利用Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><img src="https://img.laoda.de/i/2022/08/24/rbwuo1-2.webp" alt="image-20220824165257362" style="zoom:33%;" /><p>之后，登录Nginx Proxy Manager（不会的看这个：<strong>安装Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称NPM）会用到<code>80</code>、<code>443</code>端口，所以本机不能占用（比如原来就有Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom: 33%;" /><img src="https://img.laoda.de/i/2022/08/24/re1y8j-2.webp" alt="image-20220824165617264" style="zoom:33%;" /><blockquote><p> 注意填写对应的<code>域名</code>、<code>IP</code>和<code>端口</code>，按文章来的话，应该是<code>5212</code></p></blockquote><p><strong>IP填写：</strong></p><p>如果Nginx Proxy Manager和Memos在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的Docker容器内部IP。</p><p>否则直接填<code>Cloudreve所在的服务器IP</code>就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom: 33%;" /><p>然后就可以用域名来安装访问了。</p><h3 id="6-2-利用宝塔面板"><a href="#6-2-利用宝塔面板" class="headerlink" title="6.2 利用宝塔面板"></a>6.2 利用宝塔面板</h3><p>发现还是有不少小伙伴习惯用宝塔面板，这边也贴一个宝塔面板的反代配置（注意这边仅仅用宝塔反代，前面的安装还是一模一样的，由于宝塔面板安装Nginx之后会占用80、443端口，而NginxProxyManager也是用80、443端口的，所以这俩（Nginx与NginxProxyManager）最好不要同时安装）：</p><p>直接新建一个站点，不要数据库，不要php，纯静态即可。</p><p>然后打开下面的配置，修改Nginx的配置。</p><p><img src="https://img.laoda.de/i/2022/08/19/ov4xrt-2.webp" alt="image-20220819150345725"></p><p><img src="https://img.laoda.de/i/2022/08/19/owbbkb-2.webp" alt="image-20220819150542867"></p><p>代码如下：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:5212/;</span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以代码为准，图片是我之前截取的。</p><p>此方法对90%的反向代理都能生效。</p><p>有同学可能会问，为什么不直接用宝塔自带的反向代理功能。</p><img src="https://img.laoda.de/i/2022/08/19/oxf800-2.webp" alt="image-20220819150730128" style="zoom:33%;" /><p>也可以，不过咕咕自己之前遇到过当有多个网站需要反代的时候，在这边设置会报错的情况 &#x3D; &#x3D; </p><p>所以后来就不用了，直接用上面的方法来操作了。</p><h2 id="7-使用教程"><a href="#7-使用教程" class="headerlink" title="7. 使用教程"></a>7. 使用教程</h2><h3 id="7-1-安装和配置"><a href="#7-1-安装和配置" class="headerlink" title="7.1 安装和配置"></a>7.1 安装和配置</h3><p>具体见咕咕的视频。</p><p>这边简单说几个重要的。</p><p>修改默认的用户组容量配额：</p><img src="https://img.laoda.de/i/2022/08/23/qjtbl0-2.webp" alt="image-20220823160538862" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/08/23/qk90cz-2.webp" alt="image-20220823160611139" style="zoom:33%;" /><h3 id="7-2-配置离线下载"><a href="#7-2-配置离线下载" class="headerlink" title="7.2 配置离线下载"></a>7.2 配置离线下载</h3><p>看图，不清楚的再看视频。</p><img src="https://img.laoda.de/i/2022/08/23/qiihdz-2.webp" alt="image-20220823160318778" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/08/23/qinf36-2.webp" alt="image-20220823160340703" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/08/23/qiptv4-2.webp" alt="image-20220823160353306" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/08/23/qj1zml-2.webp" alt="image-20220823160409725" style="zoom:33%;" /><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/cloudreve/data</span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> 777 -R aria2/</span><br></pre></td></tr></table></figure><p>用上方第二个yaml文件，就不需要设置777权限了。</p><img src="https://img.laoda.de/i/2022/08/23/qj4zct-2.webp" alt="image-20220823160424169" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/08/23/qj6nvc-2.webp" alt="image-20220823160431897" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/08/23/qkchpf-2.webp" alt="image-20220823160627288" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/08/23/qjm4y8-2.webp" alt="image-20220823160459275" style="zoom:33%;" /><h3 id="7-3-WebDAV"><a href="#7-3-WebDAV" class="headerlink" title="7.3 WebDAV"></a>7.3 WebDAV</h3><p>推荐客户端：<a href="https://ftp-mac.com/downloads.html">https://ftp-mac.com/downloads.html</a></p><img src="https://img.laoda.de/i/2022/08/23/qoi9r6-2.webp" alt="image-20220823161325474" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/08/23/qodu1q-2.webp" alt="image-20220823161305171" style="zoom:33%;" /><h2 id="8-Q-A"><a href="#8-Q-A" class="headerlink" title="8. Q&amp;A"></a>8. Q&amp;A</h2><p><strong>1、社区版本与捐赠版本有什么区别</strong></p><p><img src="https://img.laoda.de/i/2022/08/23/qpnycd-2.webp" alt="image-20220823161520165"></p><p>咕咕发现移动端也有，但是ios端需要订阅才能使用 &#x3D; &#x3D;</p><img src="https://img.laoda.de/i/2022/08/23/qv49p4-2.webp" alt="IMG_212746CA1D5B-1" style="zoom:25%;" /><img src="https://img.laoda.de/i/2022/08/23/qvn5ne-2.webp" alt="IMG_CB0D4C752C31-1" style="zoom:25%;" /><h2 id="9-结尾"><a href="#9-结尾" class="headerlink" title="9. 结尾"></a>9. 结尾</h2><p>祝大家用得开心，有问题可以去GitHub提<a href="https://github.com/cloudreve/Cloudreve/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，有能力给项目做贡献的同学，也欢迎积极加入到<a href="https://github.com/cloudreve/Cloudreve">项目</a>中来，贡献自己的一份力量！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>官方网站：<a href="https://cloudreve.org/">https://cloudreve.org/</a></p><p>官方文档：<a href="https://docs.cloudreve.org/">https://docs.cloudreve.org/</a></p><p>官方论坛：<a href="https://forum.cloudreve.org/">https://forum.cloudreve.org/</a></p><p>GitHub地址：<a href="https://github.com/cloudreve/Cloudreve">https://github.com/cloudreve/Cloudreve</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cloudreve </tag>
            
            <tag> lighthouse </tag>
            
            <tag> 腾讯云轻量应用服务器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩儿的Docker项目】10分钟搭建一个碎片化知识卡片管理工具——Memos</title>
      <link href="/archives/docker-install-memos/"/>
      <url>/archives/docker-install-memos/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>不知道大家有没有需要经常快速记录自己想法的需求？</p><p>咕咕有时候就会有一些奇思妙想需要马上记录下来，之前一直是用的iPhone自带的备忘录，或者是微信自带的“文件传输助手”，不过前俩天，在网上冲浪的时候，咕咕遇到了一个更好用的东西，在搭建使用了一段时间后，觉得很不错，本周和大家分享。</p><p>这个轻量的应用，出自我们国人小伙伴之手！</p><p>一个开源的、支持私有化部署的碎片化知识卡片管理工具——Memos</p><p><img src="https://img.laoda.de/i/2022/08/18/sbed39-2.webp" alt="c54228760b767d2fe6f84c535d129144.png"></p><h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1. 介绍"></a>1. 介绍</h2><h3 id="1-1-有啥用？"><a href="#1-1-有啥用？" class="headerlink" title="1.1 有啥用？"></a>1.1 有啥用？</h3><ul><li>📅 方便记录每日 &#x2F; 周计划</li><li>💡 方便记录一些奇思妙想</li><li>📕 可以随手写写读后感</li><li>🏗️ 有时候可以代替在微信上经常使用的“文件传输助手”、手机的备忘录</li><li>📒 可以打造一个属于自己的轻量化“卡片”笔记簿</li></ul><h3 id="1-2-有啥特点？"><a href="#1-2-有啥特点？" class="headerlink" title="1.2 有啥特点？"></a>1.2 有啥特点？</h3><ul><li>✨ 免费、开源项目！</li><li>😋 颜值高！UI非常的大气、漂亮！</li><li>📑 交互逻辑体验优秀！</li><li>👫 支持中文！支持多用户！</li><li>⚡ 支持Docker快速部署！</li><li>🚀 目前正在全力开发中，之后会有更多功能……</li></ul><h3 id="1-1-相关地址"><a href="#1-1-相关地址" class="headerlink" title="1.1 相关地址"></a>1.1 相关地址</h3><p>官方Demo：<a href="https://demo.usememos.com/">https://demo.usememos.com/</a></p><p>GitHub地址：<a href="https://github.com/usememos/memos">https://github.com/usememos/memos</a>  (543 Star)</p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><h3 id="2-1-登陆"><a href="#2-1-登陆" class="headerlink" title="2.1 登陆"></a>2.1 登陆</h3><img src="https://img.laoda.de/i/2022/08/18/sbdxud-2.webp" alt="8491cbb78e30d5d8c1c942201fcca153.png"  />  <img src="https://img.laoda.de/i/2022/08/18/sbdslq-2.webp" alt="4542a3aa6807a3184c1589372f1fdb12.png"  /><h3 id="2-2-前台展示"><a href="#2-2-前台展示" class="headerlink" title="2.2 前台展示"></a>2.2 前台展示</h3>  <img src="https://img.laoda.de/i/2022/08/18/sbed39-2.webp" alt="c54228760b767d2fe6f84c535d129144.png"  />  <h3 id="2-3-账户设置"><a href="#2-3-账户设置" class="headerlink" title="2.3 账户设置"></a>2.3 账户设置</h3><img src="https://img.laoda.de/i/2022/08/18/sbecfi-2.webp" alt="34af6291fa4faa87f3fdeceeb0ebe6de.png"  /><h3 id="2-4-附件管理"><a href="#2-4-附件管理" class="headerlink" title="2.4 附件管理"></a>2.4 附件管理</h3><img src="https://img.laoda.de/i/2022/08/18/sbebi8-2.webp" alt="3faaed1e3faa4d55b79abdebbfad4941.png"  />  <h3 id="2-5-日历"><a href="#2-5-日历" class="headerlink" title="2.5 日历"></a>2.5 日历</h3>  <img src="https://img.laoda.de/i/2022/08/18/sbe5ek-2.webp" alt="d19c378c85751797d87a5352eac129c1.png"  />  <h3 id="2-6-编辑功能（可以放大）"><a href="#2-6-编辑功能（可以放大）" class="headerlink" title="2.6 编辑功能（可以放大）"></a>2.6 编辑功能（可以放大）<img src="https://img.laoda.de/i/2022/08/18/sbeyze-2.webp" alt="c4ca1d578be15d4ffa863630e7e7ce18.png"></h3><h2 id="3-搭建环境"><a href="#3-搭建环境" class="headerlink" title="3. 搭建环境"></a>3. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器24元&#x2F;月VPS一台</del>本期搭建用的是<a href="https://loll.cc/tx">腾讯轻量购买链接</a>的服务器，（最好是选<strong>非大陆（香港）的服务器</strong>）如果是小白刚开始玩的话，还可以购买<a href="https://blog.laoda.de/archives/cheap-vps-racknerd">Racknerd</a>的服务器，最低一年不到100块（不过搭建Docker还是建议选择1G内存以上的机器）（Racknerd服务器介绍：<a href="https://blog.laoda.de/archives/cheap-vps-racknerd">点击查看</a>）</li><li>系统：Debian 10（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本</a> 非必需DD用原来的系统也OK，之后教程都是用Debian或者Ubuntu搭建～）</li><li>安装好Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需但建议】域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>【非必需】提前安装好宝塔面板海外版本aapanel，并安装好Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程选用】安装好Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><blockquote><p>服务器要求：不是非常高，能搭建Docker即可，建议1G以上。</p></blockquote><h2 id="4-搭建视频"><a href="#4-搭建视频" class="headerlink" title="4. 搭建视频"></a>4. 搭建视频</h2><p>YouTube：<a href="https://youtu.be/GLzY3JN3Sck">https://youtu.be/GLzY3JN3Sck</a></p><p>哔哩哔哩【高清版本可以点击去吐槽到B站观看】：<joe-bilibili bvid="BV1ha411d78G"></joe-bilibili></p><h2 id="5-搭建方式"><a href="#5-搭建方式" class="headerlink" title="5. 搭建方式"></a>5. 搭建方式</h2><h3 id="安装系统（腾讯云轻量应用服务器）"><a href="#安装系统（腾讯云轻量应用服务器）" class="headerlink" title="安装系统（腾讯云轻量应用服务器）"></a>安装系统（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlyhcz-2.webp" alt="e59713fba8726d3cb55ae11bca83fe3c.png"></p><p>腾讯云轻量服务器最大的特点就是“轻量”，相比CVM，更适合小白上手，这边我们之间选择Docker基础镜像，就可以省去后面安装Docker的步骤（如果你非要用国内的服务器，这边装的Docker镜像还会帮你配置好国内镜像源，让你加速访问docker镜像资源）。</p><h3 id="登陆（腾讯云轻量应用服务器）"><a href="#登陆（腾讯云轻量应用服务器）" class="headerlink" title="登陆（腾讯云轻量应用服务器）"></a>登陆（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlzlj7-2.webp" alt="2722040ee311eb4a9ebf2a4945bf38f4.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm0gv8-2.webp" alt="c0b5d360053746c4095d592967ee401f.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm1vqw-2.webp" alt="e0ba858f021b846ad0abc27acf5008c2.png"></p><h3 id="5-1-服务器前期配置"><a href="#5-1-服务器前期配置" class="headerlink" title="5.1 服务器前期配置"></a>5.1 服务器前期配置</h3><p>服务器初始设置，参考：</p><p><a href="https://blog.laoda.de/archives/vps-script"><strong>新买了一台服务器“必须”要做的6件小事</strong></a></p><p><a href="https://blog.laoda.de/archives/how-to-secure-a-linux-server"><strong>保护好你的小鸡！保姆级服务器安全教程！</strong></a></p><p>这边由于我们用的是腾讯云轻量应用服务器，系统默认就帮我们创建了名字是lighthouse的用户，系统后台也有防火墙（默认就开了几个常用的端口）</p><p>对小白用户来说，可以不用再去管繁琐的服务器安全的配置，大大降低了服务器防护的门槛。</p><p><a href="https://blog.laoda.de/archives/hello-docker">【Docker系列】不用宝塔面板，小白一样可以玩转VPS服务器！</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i <span class="comment"># 切换到root用户</span></span><br><span class="line"></span><br><span class="line">apt update -y  <span class="comment"># 升级packages</span></span><br><span class="line"></span><br><span class="line">apt install wget curl sudo vim git -y  <span class="comment"># Debian系统比较干净，安装常用的软件</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：VPS的内存如果过小，建议设置一下SWAP，一般为内存的1-1.5倍即可，可以让系统运行更流畅！</p></blockquote><p>设置SWAP可以用脚本:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O box.sh https://raw.githubusercontent.com/BlueSkyXN/SKY-BOX/main/box.sh &amp;&amp; <span class="built_in">chmod</span> +x box.sh &amp;&amp; clear &amp;&amp; ./box.sh</span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2022/05/28/uoikkd-0.webp" alt="image-20220528185512488" style="zoom:50%;" /><p>选择<code>18</code>，然后输入你想要扩容的数值即可。</p><img src="https://img.laoda.de/i/2022/05/28/up2dkf-0.webp" alt="image-20220528185604586" style="zoom:50%;" /><p>使用腾讯云轻量应用服务器的小伙伴可以直接跳到<code>5.2.4</code></p><h3 id="5-2-安装Docker（使用腾讯云轻量应用服务器可跳过这一部分）"><a href="#5-2-安装Docker（使用腾讯云轻量应用服务器可跳过这一部分）" class="headerlink" title="5.2 安装Docker（使用腾讯云轻量应用服务器可跳过这一部分）"></a>5.2 安装Docker（使用腾讯云轻量应用服务器可跳过这一部分）</h3><h4 id="5-2-1-非大陆服务器Docker安装"><a href="#5-2-1-非大陆服务器Docker安装" class="headerlink" title="5.2.1 非大陆服务器Docker安装"></a>5.2.1 <strong>非大陆服务器Docker安装</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -qO- get.docker.com | bash</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker -v  <span class="comment">#查看docker版本</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker  <span class="comment"># 设置开机自动启动</span></span><br></pre></td></tr></table></figure><p><strong>修改Docker配置（可选）（来自<a href="https://u.sb/debian-install-docker/">烧饼博客</a>）</strong></p><p>以下配置会增加一段自定义内网 IPv6 地址，开启容器的 IPv6 功能，以及限制日志文件大小，防止 Docker 日志塞满硬盘（泪的教训）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/docker/daemon.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    &quot;log-driver&quot;: &quot;json-file&quot;,</span></span><br><span class="line"><span class="string">    &quot;log-opts&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;max-size&quot;: &quot;20m&quot;,</span></span><br><span class="line"><span class="string">        &quot;max-file&quot;: &quot;3&quot;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    &quot;ipv6&quot;: true,</span></span><br><span class="line"><span class="string">    &quot;fixed-cidr-v6&quot;: &quot;fd00:dead:beef:c0::/80&quot;,</span></span><br><span class="line"><span class="string">    &quot;experimental&quot;:true,</span></span><br><span class="line"><span class="string">    &quot;ip6tables&quot;:true</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>然后重启 Docker 服务：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h4 id="5-2-2-非大陆服务器Docker-compose安装"><a href="#5-2-2-非大陆服务器Docker-compose安装" class="headerlink" title="5.2.2 非大陆服务器Docker-compose安装"></a>5.2.2 <strong>非大陆服务器Docker-compose安装</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/1.29.2/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose --version  <span class="comment">#查看docker-compose版本</span></span><br></pre></td></tr></table></figure><h4 id="5-2-3-国内服务器安装docker"><a href="#5-2-3-国内服务器安装docker" class="headerlink" title="5.2.3 国内服务器安装docker"></a>5.2.3 <strong>国内服务器安装docker</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -sSL https://get.daocloud.io/docker | sh</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker -v  <span class="comment">#查看docker版本</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker  <span class="comment"># 设置开机自动启动</span></span><br></pre></td></tr></table></figure><p><strong>修改Docker配置（可选）（来自<a href="https://u.sb/debian-install-docker/">烧饼博客</a>）</strong></p><p>以下配置会增加一段自定义内网 IPv6 地址，开启容器的 IPv6 功能，以及限制日志文件大小，防止 Docker 日志塞满硬盘（泪的教训）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/docker/daemon.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    &quot;log-driver&quot;: &quot;json-file&quot;,</span></span><br><span class="line"><span class="string">    &quot;log-opts&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;max-size&quot;: &quot;20m&quot;,</span></span><br><span class="line"><span class="string">        &quot;max-file&quot;: &quot;3&quot;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    &quot;ipv6&quot;: true,</span></span><br><span class="line"><span class="string">    &quot;fixed-cidr-v6&quot;: &quot;fd00:dead:beef:c0::/80&quot;,</span></span><br><span class="line"><span class="string">    &quot;experimental&quot;:true,</span></span><br><span class="line"><span class="string">    &quot;ip6tables&quot;:true</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>然后重启 Docker 服务：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h4 id="5-2-4-国内服务器安装docker-compose"><a href="#5-2-4-国内服务器安装docker-compose" class="headerlink" title="5.2.4 国内服务器安装docker-compose"></a>5.2.4 <strong>国内服务器安装docker-compose</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -L https://get.daocloud.io/docker/compose/releases/download/v2.1.1/docker-compose-`<span class="built_in">uname</span> -s`-`<span class="built_in">uname</span> -m` &gt; /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line">docker-compose --version  <span class="comment">#查看docker-compose版本</span></span><br></pre></td></tr></table></figure><h3 id="5-3-安装NginxProxyManager"><a href="#5-3-安装NginxProxyManager" class="headerlink" title="5.3 安装NginxProxyManager"></a>5.3 安装NginxProxyManager</h3><p>参考这边的内容：<a href="https://blog.laoda.de/archives/nginxproxymanager">https://blog.laoda.de/archives/nginxproxymanager</a></p><h3 id="5-4-创建安装目录"><a href="#5-4-创建安装目录" class="headerlink" title="5.4 创建安装目录"></a>5.4 创建安装目录</h3><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/memos</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/memos</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">docker</span> <span class="string">run</span> <span class="string">-d</span> <span class="string">--name</span> <span class="string">memos</span> <span class="string">-p</span> <span class="number">5230</span><span class="string">:5230</span> <span class="string">-v</span> <span class="string">/root/data/docker_data/memos/.memos/:/var/opt/memos</span> <span class="string">neosmemo/memos:latest</span></span><br></pre></td></tr></table></figure><p>或者使用docker-compose安装，</p><p><code>docker-compose.yml</code>可以用这个，感谢小伙伴提供<a href="https://blog.ddsrem.gq/">@Derek</a>：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">memos:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">neosmemo/memos:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">memeos</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">memeos</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;5230:5230&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/root/data/docker_data/memos/.memos/:/var/opt/memos</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br></pre></td></tr></table></figure><blockquote><p><code>/root/data/docker_data/memos/.memos/</code>这个可以换成你自己服务器的路径；</p><p>冒号左边的<code>5230</code>可以换成主机未被占用的端口;</p><p>其他不建议修改。</p></blockquote><h3 id="5-5-打开服务器防火墙并访问网页"><a href="#5-5-打开服务器防火墙并访问网页" class="headerlink" title="5.5 打开服务器防火墙并访问网页"></a>5.5 打开服务器防火墙并访问网页</h3><p>打开防火墙的端口<code>5230</code></p><p>腾讯云打开方法如下：</p><img src="https://img.laoda.de/i/2022/06/30/zlio5h-2.webp" alt="image-20220630215240864" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/06/30/10h3dqt-2.webp" alt="image-20220630220546335" style="zoom:33%;" /><p>这边我们填<code>5230</code> 确定即可（如果你在dockercompose文件里换了<code>8081</code>，这边就需要填<code>8081</code>，以此类推）</p><img src="https://img.laoda.de/i/2022/08/19/o4byqz-2.webp" alt="image-20220819145844555" style="zoom:33%;" /><p>查看端口是否被占用（以<code>5230</code>为例），输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:5230  <span class="comment">#查看5230端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果啥也没出现，表示端口未被占用，我们可以继续下面的操作了～</p><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用（被占用了就修改一下端口，比如改成8081，注意docker命令行里和防火墙都要改）</p><p>耐心等待，等出现：</p><p>我们就可以输入<code>http://ip:5230</code>访问了。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的IP。</p><p>2、遇到访问不了的情况，请再次检查在宝塔面板的防火墙和服务商的后台防火墙是否打开对应了端口。</p></blockquote><p>因为我们后续想要分享给别人，IP+端口太不优雅了，咕咕建议大家还是搞一个域名，容易记，看起来也更正规一点。这样可以做https，会让网页更安全。（非要IP+端口访问的，可以直接跳到<code>5.6</code>，并且跳过<code>6. 反向代理</code>部分）</p><p>而且<a href="https://loll.cc/ns">namesilo</a>上面xyz后缀的域名一年就7块钱，可以年抛。</p><p>如果想要长期使用，还是建议买com后缀的域名，更加正规一些，可以输入<code>laodade</code>来获得1美元的优惠（不知道现在还有没有）</p><p><a href="https://loll.cc/ns">namesilo</a>自带隐私保护，咕咕一直在用这家，价格也是这些注册商里面比较低的，关键是他家不像其他家域名注册商，没有七七八八的套路！（就是后台界面有些<del>丑</del>古老 &#x3D; &#x3D;）</p><p><a href="https://blog.laoda.de/archives/namesilo">【域名购买】Namesilo优惠码和域名解析教程（附带服务器购买推荐和注意事项）</a></p><p>我们接着往下看！</p><h3 id="5-6-更新"><a href="#5-6-更新" class="headerlink" title="5.6 更新"></a>5.6 更新</h3><h4 id="5-6-1-docker命令行部署"><a href="#5-6-1-docker命令行部署" class="headerlink" title="5.6.1 docker命令行部署"></a>5.6.1 docker命令行部署</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker stop memos</span><br><span class="line"></span><br><span class="line">docker <span class="built_in">rm</span> -f memos</span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/memos/.memos /root/data/docker_data/memos/.memos.archive  <span class="comment"># 万事先备份，以防万一</span></span><br><span class="line"></span><br><span class="line">docker pull neosmemo/memos:latest  <span class="comment"># 拉取最新镜像</span></span><br><span class="line"></span><br><span class="line">docker run -it -d \</span><br><span class="line">  --name memos \</span><br><span class="line">  --publish 5230:5230 \</span><br><span class="line">  --volume /root/data/docker_data/memos/.memos/:/var/opt/memos \</span><br><span class="line">  neosmemo/memos:latest \</span><br><span class="line">  --mode prod \</span><br><span class="line">  --port 5230</span><br></pre></td></tr></table></figure><h4 id="5-6-2-docker-compose部署"><a href="#5-6-2-docker-compose部署" class="headerlink" title="5.6.2 docker-compose部署"></a>5.6.2 docker-compose部署</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/memos</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/memos/.memos /root/data/docker_data/memos/.memos.archive  <span class="comment"># 万事先备份，以防万一</span></span><br><span class="line"></span><br><span class="line">docker-compose pull</span><br><span class="line"></span><br><span class="line">docker-compose up -d </span><br><span class="line"></span><br><span class="line">docker image prune  <span class="comment"># prune 命令用来删除不再使用的 docker 对象。删除所有未被 tag 标记和未被容器使用的镜像</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>提示：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WARNING! This will remove all dangling images.</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] </span><br></pre></td></tr></table></figure><p>输入<code>y</code></p><p>利用Docker搭建的应用，更新非常容易～</p><h3 id="5-7-卸载"><a href="#5-7-卸载" class="headerlink" title="5.7 卸载"></a>5.7 卸载</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker stop memos</span><br><span class="line"></span><br><span class="line">docker <span class="built_in">rm</span> -f memos  <span class="comment"># 停止容器，此时不会删除映射到本地的数据</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/memos  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>可以卸载得很干净。</p><h2 id="6-反向代理"><a href="#6-反向代理" class="headerlink" title="6. 反向代理"></a>6. 反向代理</h2><h3 id="6-1-利用Nginx-Proxy-Manager"><a href="#6-1-利用Nginx-Proxy-Manager" class="headerlink" title="6.1 利用Nginx Proxy Manager"></a>6.1 利用Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><img src="https://img.laoda.de/i/2022/08/16/zn3bkr-2.webp" alt="054215cf70ff4b544dfbf48638da380c.png" style="zoom:33%;" /><p>之后，登陆Nginx Proxy Manager（不会的看这个：<strong>安装Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称NPM）会用到<code>80</code>、<code>443</code>端口，所以本机不能占用（比如原来就有Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom: 33%;" /><img src="https://img.laoda.de/i/2022/08/16/zn6o3e-2.webp" alt="041c6dacbfe151437ab1decb101aa154.png" style="zoom: 33%;" /><blockquote><p> 注意填写对应的<code>域名</code>、<code>IP</code>和<code>端口</code>，按文章来的话，应该是<code>5230</code></p></blockquote><p><strong>IP填写：</strong></p><p>如果Nginx Proxy Manager和Memos在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的Docker容器内部IP。</p><p>否则直接填<code>Memos所在的服务器IP</code>就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom: 33%;" /><p>再次打开，勾选这些：</p><img src="https://img.laoda.de/i/2022/07/28/z2gjif-2.webp" alt="image-20220728212042482" style="zoom: 33%;" /><p>然后就可以用域名来安装访问了。</p><h3 id="6-2-利用宝塔面板"><a href="#6-2-利用宝塔面板" class="headerlink" title="6.2 利用宝塔面板"></a>6.2 利用宝塔面板</h3><p>发现还是有不少小伙伴习惯用宝塔面板，这边也贴一个宝塔面板的反代配置：</p><p>直接新建一个站点，不要数据库，不要php，纯静态即可。</p><p>然后打开下面的配置，修改Nginx的配置。</p><p><img src="https://img.laoda.de/i/2022/08/19/ov4xrt-2.webp" alt="image-20220819150345725"></p><p><img src="https://img.laoda.de/i/2022/08/19/owbbkb-2.webp" alt="image-20220819150542867"></p><p>代码如下：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:5230/;</span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此方法对90%的反向代理都能生效。</p><p>有同学可能会问，为什么不直接用宝塔自带的反向代理功能。</p><p><img src="https://img.laoda.de/i/2022/08/19/oxf800-2.webp" alt="image-20220819150730128"></p><p>也可以，不过咕咕自己之前遇到过当有多个网站需要反代的时候，在这边设置会报错的情况 &#x3D; &#x3D; </p><p>所以后来就不用了，直接用上面的方法来操作了。</p><h2 id="7-使用教程"><a href="#7-使用教程" class="headerlink" title="7. 使用教程"></a>7. 使用教程</h2><h3 id="7-1-安装和配置"><a href="#7-1-安装和配置" class="headerlink" title="7.1 安装和配置"></a>7.1 安装和配置</h3><p>见咕咕的视频。</p><h2 id="8-Q-A"><a href="#8-Q-A" class="headerlink" title="8. Q&amp;A"></a>8. Q&amp;A</h2><p><strong>1、为什么没有中文版本？</strong></p><p>作者答：现在以及之前都是没有中文的，<del>下个版本“可能”会加上</del> 已经加上了！</p><p><strong>2、动态前俩个模式都是默认隐藏的，有什么别的区别么～（动态的PROTECTED和PRIVATE有啥区别）</strong></p><p>作者答：可以看看这个 comments<br><a href="https://github.com/usememos/memos/issues/126#issuecomment-1190077245">https://github.com/usememos/memos/issues/126#issuecomment-1190077245</a></p><h2 id="9-结尾"><a href="#9-结尾" class="headerlink" title="9. 结尾"></a>9. 结尾</h2><p>祝大家用得开心，有问题可以去GitHub提<a href="https://github.com/usememos/memos/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，项目处于刚开始阶段，有能力给项目做贡献的同学，也欢迎积极加入到<a href="https://github.com/usememos/memos">项目</a>中来，贡献自己的一份力量！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://github.com/usememos/memos">https://github.com/usememos/memos</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Memos </tag>
            
            <tag> 备忘录 </tag>
            
            <tag> 知识管理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩儿的Docker项目】用腾讯云轻量应用服务器10分钟搭建一个轻量的视频分享网站——Fireshare</title>
      <link href="/archives/docker-compose-install-fireshare/"/>
      <url>/archives/docker-compose-install-fireshare/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><img src="https://img.laoda.de/i/2022/08/16/zkdnaq-2.webp" alt="2d5fd03eadd0984a8456f20a78773d3c.png"></p><p>因为这个项目的作者自己喜欢打游戏，然后录制了很多精彩的游戏片段，想要和小伙伴们<del>分享</del>炫耀。</p><p>但是他又嫌弃上传到YouTube太慢了（YouTube后台会有一个转码的过程，咕咕有一次不小心录制了一个4K的视频，上传之后，YouTube大概花了5个小时才转码完成高清版本  &#x3D; &#x3D;）所以想着有没有一种简单的方法和朋友<del>分享</del>炫耀这些游戏视频，于是诞生了Fireshare。</p><p>Fireshare的目标是提供一个非常简单的方法，让你可以通过一个独特的链接分享你的任何视频。</p><p>我们所要做的就是把视频放在一个文件夹里，而Fireshare会处理剩下的事情。</p><h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1. 介绍"></a>1. 介绍</h2><p><img src="https://img.laoda.de/i/2022/08/11/qxfq6x-2.webp" alt="094ed285176637e93ca19f67004af324.png"></p><p>什么是 Fireshare？</p><blockquote><p>Fireshare 可以通过独特的链接分享你的游戏剪辑、视频或其他媒体。你要做的就是把你的视频上传到一个文件夹里，Fireshare 会处理剩下的事情。</p></blockquote><p>官方提供了演示站点：<a href="https://v.fireshare.net/#/feed">https://v.fireshare.net/#/feed</a></p><h3 id="1-1-相关地址"><a href="#1-1-相关地址" class="headerlink" title="1.1 相关地址"></a>1.1 相关地址</h3><p>官方Demo：<a href="https://v.fireshare.net/#/feed">https://v.fireshare.net/#/feed</a></p><p>文档地址：<a href="https://github.com/ShaneIsrael/fireshare/wiki/Fireshare-Configurables">https://github.com/ShaneIsrael/fireshare/wiki/Fireshare-Configurables</a></p><p>GitHub地址：<a href="https://github.com/ShaneIsrael/fireshare">https://github.com/ShaneIsrael/fireshare</a>  (204 Star)</p><p>Docker仓库地址：<a href="https://github.com/searxng/searxng-docker">https://github.com/searxng/searxng-docker</a></p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><h3 id="2-1-仪表板"><a href="#2-1-仪表板" class="headerlink" title="2.1 仪表板"></a>2.1 仪表板</h3><p>在这里，你可以看到你所有的视频，并编辑它们的细节，如标题、描述以及你是否想让它们显示在公共频道上。</p><p><img src="https://img.laoda.de/i/2022/08/16/zkzys6-2.webp" alt="4d4b6bad822e0ac95aad8a00730f6ffb.png"></p><p>也许卡片式视图不是你的风格，Fireshare也支持列表式视图。</p><p><img src="https://img.laoda.de/i/2022/08/16/zlbgoj-2.webp" alt="b691ad59d49797f1484a95cde6dfbcfc.png"></p><h3 id="2-2-折叠式排序"><a href="#2-2-折叠式排序" class="headerlink" title="2.2 折叠式排序"></a>2.2 折叠式排序</h3><p>可以给视频分类，排序展示。</p><p><img src="https://img.laoda.de/i/2022/08/16/zlcron-2.webp" alt="dac2801550649dcf64539559effd729e.png"></p><h3 id="2-3-上传视频"><a href="#2-3-上传视频" class="headerlink" title="2.3 上传视频"></a>2.3 上传视频</h3><p>可以开放上传，也可以限制只有管理员才能上传。</p><p><img src="https://img.laoda.de/i/2022/08/16/zldvev-2.webp" alt="5c9adfd43a87d44ebc8d38be778bfc36.png"></p><h3 id="2-4-编辑视频细节"><a href="#2-4-编辑视频细节" class="headerlink" title="2.4 编辑视频细节"></a>2.4 编辑视频细节</h3><p>通过点击 “铅笔 “图标，可以进入编辑视频标题和描述。</p><p><img src="https://img.laoda.de/i/2022/08/16/zlf4gi-2.webp" alt="068244c29f7692a3c580ec5c32b4003e.png"></p><h3 id="2-5-视频预览模式"><a href="#2-5-视频预览模式" class="headerlink" title="2.5 视频预览模式"></a>2.5 视频预览模式</h3><p>在公共频道或管理仪表板上打开的视频会在一个模式中显示出来。</p><p>这个模式为我们提供直链和带时间戳的链接分享按钮，以及随机播放到另一个视频的功能。</p><p>作为管理员，我们也可以从这个模态中编辑视频的细节。</p><p><img src="https://img.laoda.de/i/2022/08/16/zlhbsn-2.webp" alt="de823e13d5f0465870876f0d9c151b0c.png"></p><h3 id="2-6-观看页面"><a href="#2-6-观看页面" class="headerlink" title="2.6 观看页面"></a>2.6 观看页面</h3><p>这是小伙伴们在得到一个Fireshare链接时将看到的内容。</p><p><img src="https://img.laoda.de/i/2022/08/16/zlhxws-2.webp" alt="4d41ef787ae8079ca89f0841d68b61a0.png"></p><h3 id="2-7-移动支持"><a href="#2-7-移动支持" class="headerlink" title="2.7 移动支持"></a>2.7 移动支持</h3><p>更喜欢在移动设备上浏览？</p><p>没问题，Fireshare完美适配了移动端。</p><p><img src="https://img.laoda.de/i/2022/08/16/zlkq5x-2.webp" alt="1231d29c5650bbea66e9c7a3a54f979e.png"></p><h3 id="2-8-显示预览链接"><a href="#2-8-显示预览链接" class="headerlink" title="2.8 显示预览链接"></a>2.8 显示预览链接</h3><p>如下图，粘贴链接之后，支持在帖子中显示标题、描述和视频缩略图。</p><p><img src="https://img.laoda.de/i/2022/08/16/zlxpuf-2.webp" alt="3f9d2403a4a32f4146fd213b5294b498.png"></p><h2 id="3-搭建环境"><a href="#3-搭建环境" class="headerlink" title="3. 搭建环境"></a>3. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器24元&#x2F;月VPS一台</del>本期搭建用的是<a href="https://loll.cc/tx">腾讯轻量购买链接</a>的服务器，（最好是选<strong>非大陆（香港）的服务器</strong>）如果是小白刚开始玩的话，还可以购买<a href="https://blog.laoda.de/archives/cheap-vps-racknerd">Racknerd</a>的服务器，最低一年不到100块（不过搭建Docker还是建议选择1G内存以上的机器）（Racknerd服务器介绍：<a href="https://blog.laoda.de/archives/cheap-vps-racknerd">点击查看</a>）</li><li>系统：Debian 10（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本</a> 非必需DD用原来的系统也OK，之后教程都是用Debian或者Ubuntu搭建～）</li><li>安装好Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需但建议】域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>【非必需】提前安装好宝塔面板海外版本aapanel，并安装好Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程选用】安装好Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><blockquote><p>服务器要求：不是非常高，能搭建Docker即可，建议1G以上。</p></blockquote><h2 id="4-搭建视频"><a href="#4-搭建视频" class="headerlink" title="4. 搭建视频"></a>4. 搭建视频</h2><p>YouTube：<a href="https://youtu.be/isocgoLqKos">https://youtu.be/isocgoLqKos</a></p><p>哔哩哔哩【高清版本可以点击去吐槽到B站观看】：<joe-bilibili bvid="BV1tV4y1s7ho"></joe-bilibili></p><h2 id="5-搭建方式"><a href="#5-搭建方式" class="headerlink" title="5. 搭建方式"></a>5. 搭建方式</h2><h3 id="安装系统（腾讯云轻量应用服务器）"><a href="#安装系统（腾讯云轻量应用服务器）" class="headerlink" title="安装系统（腾讯云轻量应用服务器）"></a>安装系统（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlyhcz-2.webp" alt="e59713fba8726d3cb55ae11bca83fe3c.png"></p><p>腾讯云轻量服务器最大的特点就是“轻量”，相比CVM，更适合小白上手，这边我们之间选择Docker基础镜像，就可以省去后面安装Docker的步骤（如果你非要用国内的服务器，这边装的Docker镜像还会帮你配置好国内镜像源，让你加速访问docker镜像资源）。</p><h3 id="登陆（腾讯云轻量应用服务器）"><a href="#登陆（腾讯云轻量应用服务器）" class="headerlink" title="登陆（腾讯云轻量应用服务器）"></a>登陆（腾讯云轻量应用服务器）</h3><p><img src="https://img.laoda.de/i/2022/08/16/zlzlj7-2.webp" alt="2722040ee311eb4a9ebf2a4945bf38f4.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm0gv8-2.webp" alt="c0b5d360053746c4095d592967ee401f.png"></p><p><img src="https://img.laoda.de/i/2022/08/16/zm1vqw-2.webp" alt="e0ba858f021b846ad0abc27acf5008c2.png"></p><h3 id="5-1-服务器前期配置"><a href="#5-1-服务器前期配置" class="headerlink" title="5.1 服务器前期配置"></a>5.1 服务器前期配置</h3><p>服务器初始设置，参考：</p><p><a href="https://blog.laoda.de/archives/vps-script"><strong>新买了一台服务器“必须”要做的6件小事</strong></a></p><p><a href="https://blog.laoda.de/archives/how-to-secure-a-linux-server"><strong>保护好你的小鸡！保姆级服务器安全教程！</strong></a></p><p>这边由于我们用的是腾讯云轻量应用服务器，系统默认就帮我们创建了名字是lighthouse的用户，系统后台也有防火墙（默认就开了几个常用的端口）</p><p>对小白用户来说，可以不用再去管繁琐的服务器安全的配置，大大降低了服务器防护的门槛。</p><p><a href="https://blog.laoda.de/archives/hello-docker">【Docker系列】不用宝塔面板，小白一样可以玩转VPS服务器！</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i <span class="comment"># 切换到root用户</span></span><br><span class="line"></span><br><span class="line">apt update -y  <span class="comment"># 升级packages</span></span><br><span class="line"></span><br><span class="line">apt install wget curl sudo vim git -y  <span class="comment"># Debian系统比较干净，安装常用的软件</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：VPS的内存如果过小，建议设置一下SWAP，一般为内存的1-1.5倍即可，可以让系统运行更流畅！</p></blockquote><p>设置SWAP可以用脚本:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O box.sh https://raw.githubusercontent.com/BlueSkyXN/SKY-BOX/main/box.sh &amp;&amp; <span class="built_in">chmod</span> +x box.sh &amp;&amp; clear &amp;&amp; ./box.sh</span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2022/05/28/uoikkd-0.webp" alt="image-20220528185512488" style="zoom:50%;" /><p>选择<code>18</code>，然后输入你想要扩容的数值即可。</p><img src="https://img.laoda.de/i/2022/05/28/up2dkf-0.webp" alt="image-20220528185604586" style="zoom:50%;" /><p>使用腾讯云轻量应用服务器的小伙伴可以直接跳到5.2.4</p><h3 id="5-2-安装Docker（使用腾讯云轻量应用服务器可跳过这一部分）"><a href="#5-2-安装Docker（使用腾讯云轻量应用服务器可跳过这一部分）" class="headerlink" title="5.2 安装Docker（使用腾讯云轻量应用服务器可跳过这一部分）"></a>5.2 安装Docker（使用腾讯云轻量应用服务器可跳过这一部分）</h3><h4 id="5-2-1-非大陆服务器Docker安装"><a href="#5-2-1-非大陆服务器Docker安装" class="headerlink" title="5.2.1 非大陆服务器Docker安装"></a>5.2.1 <strong>非大陆服务器Docker安装</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -qO- get.docker.com | bash</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker -v  <span class="comment">#查看docker版本</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker  <span class="comment"># 设置开机自动启动</span></span><br></pre></td></tr></table></figure><p><strong>修改Docker配置（可选）（来自<a href="https://u.sb/debian-install-docker/">烧饼博客</a>）</strong></p><p>以下配置会增加一段自定义内网 IPv6 地址，开启容器的 IPv6 功能，以及限制日志文件大小，防止 Docker 日志塞满硬盘（泪的教训）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/docker/daemon.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    &quot;log-driver&quot;: &quot;json-file&quot;,</span></span><br><span class="line"><span class="string">    &quot;log-opts&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;max-size&quot;: &quot;20m&quot;,</span></span><br><span class="line"><span class="string">        &quot;max-file&quot;: &quot;3&quot;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    &quot;ipv6&quot;: true,</span></span><br><span class="line"><span class="string">    &quot;fixed-cidr-v6&quot;: &quot;fd00:dead:beef:c0::/80&quot;,</span></span><br><span class="line"><span class="string">    &quot;experimental&quot;:true,</span></span><br><span class="line"><span class="string">    &quot;ip6tables&quot;:true</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>然后重启 Docker 服务：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h4 id="5-2-2-非大陆服务器Docker-compose安装"><a href="#5-2-2-非大陆服务器Docker-compose安装" class="headerlink" title="5.2.2 非大陆服务器Docker-compose安装"></a>5.2.2 <strong>非大陆服务器Docker-compose安装</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/1.29.2/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose --version  <span class="comment">#查看docker-compose版本</span></span><br></pre></td></tr></table></figure><h4 id="5-2-3-国内服务器安装docker"><a href="#5-2-3-国内服务器安装docker" class="headerlink" title="5.2.3 国内服务器安装docker"></a>5.2.3 <strong>国内服务器安装docker</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -sSL https://get.daocloud.io/docker | sh</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker -v  <span class="comment">#查看docker版本</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker  <span class="comment"># 设置开机自动启动</span></span><br></pre></td></tr></table></figure><p><strong>修改Docker配置（可选）（来自<a href="https://u.sb/debian-install-docker/">烧饼博客</a>）</strong></p><p>以下配置会增加一段自定义内网 IPv6 地址，开启容器的 IPv6 功能，以及限制日志文件大小，防止 Docker 日志塞满硬盘（泪的教训）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/docker/daemon.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    &quot;log-driver&quot;: &quot;json-file&quot;,</span></span><br><span class="line"><span class="string">    &quot;log-opts&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;max-size&quot;: &quot;20m&quot;,</span></span><br><span class="line"><span class="string">        &quot;max-file&quot;: &quot;3&quot;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    &quot;ipv6&quot;: true,</span></span><br><span class="line"><span class="string">    &quot;fixed-cidr-v6&quot;: &quot;fd00:dead:beef:c0::/80&quot;,</span></span><br><span class="line"><span class="string">    &quot;experimental&quot;:true,</span></span><br><span class="line"><span class="string">    &quot;ip6tables&quot;:true</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>然后重启 Docker 服务：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h4 id="5-2-4-国内服务器安装docker-compose"><a href="#5-2-4-国内服务器安装docker-compose" class="headerlink" title="5.2.4 国内服务器安装docker-compose"></a>5.2.4 <strong>国内服务器安装docker-compose</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -L https://get.daocloud.io/docker/compose/releases/download/v2.1.1/docker-compose-`<span class="built_in">uname</span> -s`-`<span class="built_in">uname</span> -m` &gt; /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line">docker-compose --version  <span class="comment">#查看docker-compose版本</span></span><br></pre></td></tr></table></figure><h3 id="5-3-安装NginxProxyManager"><a href="#5-3-安装NginxProxyManager" class="headerlink" title="5.3 安装NginxProxyManager"></a>5.3 安装NginxProxyManager</h3><p>参考这边的内容：<a href="https://blog.laoda.de/archives/nginxproxymanager">https://blog.laoda.de/archives/nginxproxymanager</a></p><h3 id="5-4-创建安装目录及docker-compose文件"><a href="#5-4-创建安装目录及docker-compose文件" class="headerlink" title="5.4 创建安装目录及docker-compose文件"></a>5.4 创建安装目录及docker-compose文件</h3><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/fireshare</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/fireshare</span><br><span class="line"></span><br><span class="line">vim docker-compose.yaml</span><br></pre></td></tr></table></figure><p>输入<code>i</code>，然后写入下面的文件：</p><p><img src="https://img.laoda.de/i/2022/08/16/zm4lgk-2.webp" alt="8020cae65dd0cf85762475a9aea7c5bf.png"></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.7&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">fireshare:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">fireshare</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">shaneisrael/fireshare:latest</span>    <span class="comment"># latest表示最新版本</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8080:80&quot;</span>        <span class="comment"># 冒号左边的端口可以自己修改成服务器未占用的端口，冒号右边不要改！</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data:/data</span>         <span class="comment"># 冒号左边的路径可以自己修改（./代表当前目录下），冒号右边不要改！</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./processed:/processed</span> <span class="comment"># 同上</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./videos:/videos</span>  <span class="comment"># 同上</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ADMIN_USERNAME=admin</span>    <span class="comment"># 自己设置一个用户名</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ADMIN_PASSWORD=admin</span>    <span class="comment"># 自己修改一个密码</span></span><br></pre></td></tr></table></figure><blockquote><p>Fireshare需要3个卷挂载。</p><p><code>/data</code> - fireshare用来保存其内部数据库的目录<br><code>/processed</code> - 用来保存由fireshare创建的与你的视频有关的元数据的目录（海报，元数据信息）。<br><code>/videos</code> - fireshare将观察和扫描任何视频的目录。<br>如果你有你所有的游戏片段存储在一个文件夹<code>my_game_clips</code>中，那么在你的docker compose文件（或docker运行命令）中，你将需要把该文件夹卷装到fireshare观看的<code>/videos</code>文件夹。</p></blockquote><p>输入<code>:wq</code>保存退出。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 新建文件夹 fireshare 和 子目录</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/fireshare/&#123;data,processed,videos&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入目录</span></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/fireshare</span><br><span class="line"></span><br><span class="line"><span class="built_in">ls</span> -al</span><br><span class="line"></span><br><span class="line"><span class="comment"># 确保 docker-compose.yml 在当前目录下</span></span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/08/16/zmir31-2.webp" alt="8fa7912536dc5c31ad072ac5fdb1afd7.png"></p><h3 id="5-5-打开服务器防火墙并访问网页"><a href="#5-5-打开服务器防火墙并访问网页" class="headerlink" title="5.5 打开服务器防火墙并访问网页"></a>5.5 打开服务器防火墙并访问网页</h3><p>打开防火墙的端口<code>8080</code></p><p>腾讯云打开方法如下：</p><p><img src="https://img.laoda.de/i/2022/06/30/zlio5h-2.webp" alt="image-20220630215240864"></p><p><img src="https://img.laoda.de/i/2022/06/30/10h3dqt-2.webp" alt="image-20220630220546335"></p><p>这边我们填<code>8080</code> 确定即可（如果你在dockercompose文件里换了8081，这边就需要填8081，以此类推）</p><p><img src="https://img.laoda.de/i/2022/08/16/zmkg80-2.webp" alt="cafbde32934457a4fa98b65aa09d4489.png"></p><p>查看端口是否被占用（以<code>8080</code>为例），输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:8080  <span class="comment">#查看8080端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果啥也没出现：</p><p><img src="https://img.laoda.de/i/2022/08/16/zmp49b-2.webp" alt="3653370825d7984db0a666c30cff3f4e.png"></p><p>表示端口未被占用，我们可以继续下面的操作了～</p><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用（被占用了就修改一下端口，比如改成8081，注意dockercompose和防火墙都要改），我们接着可以运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/fireshare</span><br><span class="line"></span><br><span class="line">docker-compose up -d  </span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/08/16/zmqg51-2.webp" alt="17d7b69871963e1b943ee85b6baf0b91.png"></p><p>耐心等待，等出现：</p><p><img src="https://img.laoda.de/i/2022/08/16/zmrd9v-2.webp" alt="724285de7cbd28b1bc7382cd3868c919.png"></p><p>我们就可以输入<code>http://ip:8080</code>访问了。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的IP。</p><p>2、遇到访问不了的情况，请再次检查在宝塔面板的防火墙和服务商的后台防火墙是否打开对应了端口。</p></blockquote><p><img src="https://img.laoda.de/i/2022/08/16/zn1n5t-2.webp" alt="708cdb63bc979d18440c3a0c9fa26210.png"></p><p>因为我们后续想要分享给别人，IP+端口太不优雅了，咕咕建议大家还是搞一个域名，容易记，看起来也更正规一点。这样可以做https，会让网页更安全。（非要IP+端口访问的，可以直接跳到5.6，并且跳过<code>6. 反向代理</code>部分）</p><p>而且namesilo上面xyz后缀的域名一年就7块钱，可以年抛。</p><p>如果想要长期使用，还是建议买com后缀的域名，更加正规一些，可以输入<code>laodade</code>来获得1美元的优惠（不知道现在还有没有）</p><p>namesilo自带隐私保护，咕咕一直在用这家，价格也是这些注册商里面比较低的，关键是他家不像其他家域名注册商，没有七七八八的套路！（就是后台界面有些<del>丑</del>古老 &#x3D; &#x3D;）</p><p><a href="https://blog.laoda.de/archives/namesilo">【域名购买】Namesilo优惠码和域名解析教程（附带服务器购买推荐和注意事项）</a></p><p>我们接着往下看！</p><h3 id="5-6-更新"><a href="#5-6-更新" class="headerlink" title="5.6 更新"></a>5.6 更新</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/fireshare /root/data/docker_data/fireshare.archive  <span class="comment"># 万事先备份，以防万一</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/fireshare  <span class="comment"># 进入docker-compose所在的文件夹</span></span><br><span class="line"></span><br><span class="line">docker-compose pull    <span class="comment"># 拉取最新的镜像</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d   <span class="comment"># 重新更新当前镜像</span></span><br></pre></td></tr></table></figure><p>利用Docker-compose搭建的应用，更新非常容易～</p><h3 id="5-7-卸载"><a href="#5-7-卸载" class="headerlink" title="5.7 卸载"></a>5.7 卸载</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/fireshare  <span class="comment"># 进入docker-compose所在的文件夹</span></span><br><span class="line"></span><br><span class="line">docker-compose down    <span class="comment"># 停止容器，此时不会删除映射到本地的数据</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/fireshare  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>可以卸载地很干净。</p><h2 id="6-反向代理"><a href="#6-反向代理" class="headerlink" title="6. 反向代理"></a>6. 反向代理</h2><h3 id="6-1-利用Nginx-Proxy-Manager"><a href="#6-1-利用Nginx-Proxy-Manager" class="headerlink" title="6.1 利用Nginx Proxy Manager"></a>6.1 利用Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p><img src="https://img.laoda.de/i/2022/08/16/zn3bkr-2.webp" alt="054215cf70ff4b544dfbf48638da380c.png"></p><p>之后，登陆Nginx Proxy Manager（不会的看这个：<strong>安装Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称NPM）会用到<code>80</code>、<code>443</code>端口，所以本机不能占用（比如原来就有Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom:50%;" /><img src="https://img.laoda.de/i/2022/08/16/zn6o3e-2.webp" alt="041c6dacbfe151437ab1decb101aa154.png" style="zoom:50%;" /><blockquote><p> 注意填写对应的<code>域名</code>、<code>IP</code>和<code>端口</code>，按文章来的话，应该是<code>8080</code></p></blockquote><p><strong>IP填写：</strong></p><p>如果Nginx Proxy Manager和Fireshare在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的Docker容器内部IP。</p><p>否则直接填<code>cryptgeon所在的服务器IP</code>就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom:50%;" /><p>再次打开，勾选这些：</p><img src="https://img.laoda.de/i/2022/07/28/z2gjif-2.webp" alt="image-20220728212042482" style="zoom:50%;" /><p>然后就可以用域名来安装访问了。</p><p><img src="https://img.laoda.de/i/2022/08/16/zn9v5x-2.webp" alt="4dc09acf521df22bc05e6d7938278cc2.png"></p><h2 id="7-使用教程"><a href="#7-使用教程" class="headerlink" title="7. 使用教程"></a>7. 使用教程</h2><h3 id="7-1-安装和配置"><a href="#7-1-安装和配置" class="headerlink" title="7.1 安装和配置"></a>7.1 安装和配置</h3><p>见咕咕的视频。</p><p>点<code> login</code> 出现登录界面</p><p>默认用户：<code>admin</code>，密码为 <code>ADMIN_PASSWORD</code> 设置的值：</p><p><img src="https://img.laoda.de/i/2022/08/16/zn9rud-2.webp" alt="56ff1c66b74021b96f69019301c90e66.png"></p><p>登录成功之后会看到多了<code>Scan Library</code>按钮</p><p><img src="https://img.laoda.de/i/2022/08/16/znb88e-2.webp" alt="b36c13a2c95d239eb74624d4f4ef5cff.png"></p><p>上传视频试试，这边我们利用filebrowser来上传视频。</p><p>具体操作是：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/filebrowser</span><br><span class="line"></span><br><span class="line">docker run -d -v /root/data/docker_data/fireshare/videos:/srv -v /root/data/docker_data/filebrowser/filebrowserconfig.json:/etc/config.json -v /root/data/docker_data/filebrowser/database.db:/etc/database.db --name fireshare_browser -p 8002:80 filebrowser/filebrowser</span><br></pre></td></tr></table></figure><p>通过浏览器访问，默认账号密码：<code>admin</code></p><p>同样记得在腾讯云后台打开<code>8002</code>端口</p><p>上传视频：</p><p><img src="https://img.laoda.de/i/2022/08/16/znctcs-2.webp" alt="1fc58a1bcd6abf0b94fe66c7aad99bf6.png"></p><p>接下来就可以通过 <code>Scan Library</code> 扫描视频了</p><p>第一次会有个初始化的过程</p><p><img src="https://img.laoda.de/i/2022/08/16/znd6bn-2.webp" alt="6ccdce731e52bda51ffce486cc7e04f8.png"></p><p>扫描完成后就能看到了</p><p><img src="https://img.laoda.de/i/2022/08/16/znomzh-2.webp" alt="2746cb16b7f315cf85372364192b24d4.png"></p><p>如果看不到可以刷新一下页面，还可以切换视图：</p><p><img src="https://img.laoda.de/i/2022/08/16/znrrnf-2.webp" alt="2a862344360a595de796a04a250fa685.png"></p><p>点击开始播放</p><p><img src="https://img.laoda.de/i/2022/08/16/znq977-2.webp" alt="69614caeff544808098baca68f38d916.png"></p><blockquote><p>视频播放界面暂停，然后按 ESC 键可以回到主界面</p></blockquote><p>点复制链接按钮，可以获取本视频的地址，类似这样：<a href="https://v.gugu.ge/w/0f148672afa6fa5ac56341ef4a676b95">https://v.gugu.ge/w/0f148672afa6fa5ac56341ef4a676b95</a></p><p>所以如果你要分享给别人，需要先通过反代，实现域名访问才行:</p><p><img src="https://img.laoda.de/i/2022/08/16/10j9gz4-2.webp" alt="image-20220816220910285"></p><p>加入了 <code>Public feed</code> 的视频，不需要登录就能看到。</p><p><img src="https://img.laoda.de/i/2022/08/16/10itptd-2.webp" alt="image-20220816220834454"></p><h2 id="8-Q-A"><a href="#8-Q-A" class="headerlink" title="8. Q&amp;A"></a>8. Q&amp;A</h2><h3 id="8-1-播放问题"><a href="#8-1-播放问题" class="headerlink" title="8.1 播放问题"></a>8.1 播放问题</h3><p>如果你遇到了播放问题，可能有很多原因造成的，以下这些是最常见的原因。</p><h4 id="文件大小"><a href="#文件大小" class="headerlink" title="文件大小"></a>文件大小</h4><p>建议压缩视频，可以提升观看者的浏览体验。</p><h4 id="上传速度"><a href="#上传速度" class="headerlink" title="上传速度"></a>上传速度</h4><p>服务器的上传速度很重要，如果上传速度慢，可以考虑压缩一下视频。</p><h4 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h4><p>在测试中，注意到Firefox在播放非常大的文件时很吃力，然而Chome和Edge似乎没有同样的问题。</p><h4 id="不支持的文件类型"><a href="#不支持的文件类型" class="headerlink" title="不支持的文件类型"></a>不支持的文件类型</h4><p>目前，Fireshare只支持MP4，MOV和WEBM文件。</p><p>建议在可能的情况下使用MP4，而MOV是支持的，测试发现，一些MOV文件播放没有问题，一些会不支持。如果你的MOV文件不能播放，请考虑用Handbrake等工具将其转码为MP4文件。</p><h4 id="上传问题"><a href="#上传问题" class="headerlink" title="上传问题"></a>上传问题</h4><p>上传问题通常是由把fireshare放在某种反向代理（如nginx）后面引起的。在默认情况下，nginx对你的上传大小有限制。如果你使用nginx，你可能需要添加这两行：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">client_max_body_size 0;</span><br><span class="line">proxy_read_timeout 999999s;</span><br></pre></td></tr></table></figure><p>这些设置只在Nginx上有效。将<code>client_max_body_size</code>设置为<code>0</code>，就默认允许任何大小的上传。</p><p><img src="https://img.laoda.de/i/2022/08/16/10ne8e2-2.webp" alt="image-20220816221604726"></p><p>我们还增加了超时限制，这样连接就不会超时了。如果你没有使用nginx，请自行搜索方法。</p><h2 id="9-结尾"><a href="#9-结尾" class="headerlink" title="9. 结尾"></a>9. 结尾</h2><p>祝大家用得开心，有问题可以去GitHub提<a href="https://github.com/ShaneIsrael/fireshare/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，有能力给项目做贡献的同学，也欢迎积极加入到<a href="https://github.com/ShaneIsrael/fireshare">项目</a>中来，贡献自己的一份力量！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://github.com/ShaneIsrael/fireshare">https://github.com/ShaneIsrael/fireshare</a><br><a href="https://laosu.ml/2022/07/22/%E9%80%82%E5%90%88%E7%9F%AD%E8%A7%86%E9%A2%91%E5%88%86%E4%BA%AB%E7%9A%84Fireshare/">https://laosu.ml/2022/07/22/%E9%80%82%E5%90%88%E7%9F%AD%E8%A7%86%E9%A2%91%E5%88%86%E4%BA%AB%E7%9A%84Fireshare/</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> fireshare </tag>
            
            <tag> 视频分享 </tag>
            
            <tag> 视频床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站SSL证书自动续期又又又失败了？试试CloudFlare的免费证书，15年有效期！</title>
      <link href="/archives/try-cloudflare-free-15-year-ssl-certificate/"/>
      <url>/archives/try-cloudflare-free-15-year-ssl-certificate/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>不知道小伙伴有没有遇到过这样的问题：</p><p>1、用宝塔建站的，SSL证书也是用宝塔申请的Let’s Encrypt免费证书（有效期3个月）虽然说宝塔后台有自动续签的功能，但是你会发现，经常续签失败，影响网站正常运行；</p><p>2、配置的<code>certbot</code> 自动更新证书，偶尔也会遇到小问题。</p><blockquote><p><a href="https://blog.laoda.de/archives/nginxproxymanager">Nginx Proxy Manager</a>目前咕咕暂时没有遇到续期问题  :)</p></blockquote><p>当然，如果你的网站是http的，你完全不用考虑这个问题。</p><p>但是，对于有强迫症的人来说，看到浏览器网址边上显示“不安全”，非常的难受，而且，其实对于一个“现代”的网站来说，SSL是标配了。</p><img src="https://img.laoda.de/i/2022/08/12/ozpy37-2.webp" alt="6a6bc385f527fb3f5b470ed8fd33f3e2.png" style="zoom:50%;" /><p>有没有一种证书，可以有效期长一些，不用像 Let’s Encrypt 的证书的一样，三个月就得更新一次？（虽然也有自动化脚本代劳，但还是保不齐哪天因为出错导致证书过期了，网站打不开。）</p><p>有的。</p><p>全球领先的 CDN 服务商 Cloudflare 则提供了 15 年有效期的证书，堪称业界良心。</p><blockquote><p>前提是，你需要使用Cloudflare的CDN服务（开启小黄云图标）</p><p>注意开启之后，如果你是国内的服务器，速度会变慢，如果你是国外的服务器，尤其是线路比较差的服务器，速度会有所改善。另外CDN还有保护源站IP，防止IP被墙的功效。</p><p>关于CDN的更多介绍，可以看这篇文章：<a href="https://blog.laoda.de/archives/cdn-ip">CDN加速-隐藏真实IP-复活IP</a></p></blockquote><h2 id="具体操作"><a href="#具体操作" class="headerlink" title="具体操作"></a>具体操作</h2><h3 id="1-添加域名到Cloudflare"><a href="#1-添加域名到Cloudflare" class="headerlink" title="1. 添加域名到Cloudflare"></a>1. 添加域名到Cloudflare</h3><p>要使用Cloudflare（以下简称CF）的证书，首先你得把你的域名托管到CF上来进行DNS解析（注意不是转移域名，域名哪里买的还是在哪里续费，只是不用在域名注册商的后台进行域名解析了）。</p><p>注册一个CF的账号：</p><p><a href="https://dash.cloudflare.com/sign-up">https://dash.cloudflare.com/sign-up</a></p><p><img src="https://img.laoda.de/i/2022/08/12/ozsbt3-2.webp" alt="83304a7bc25b39c071b0046c281ab80e.png"></p><p>登陆之后，添加域名</p><img src="https://img.laoda.de/i/2022/08/12/ozuhxk-2.webp" alt="2674200c15767ae1ae836dd12b2f3e33.png" style="zoom:33%;" /><p>输入你的域名，点击添加站点，</p><img src="https://img.laoda.de/i/2022/08/12/ozvy9e-2.webp" alt="c84e1caa5e802ede6cf61e65080285c0.png" style="zoom:50%;" /><p>选择免费计划</p><p><img src="https://img.laoda.de/i/2022/08/12/ozyr62-2.webp" alt="046675b11395062926c3c5f661758060.png"></p><p>继续，</p><p><img src="https://img.laoda.de/i/2022/08/12/p08yl1-2.webp" alt="8acd064317e22951179ffd2fbedc28eb.png"></p><p><img src="https://img.laoda.de/i/2022/08/12/p0aazt-2.webp" alt="9d094b24db69d0a46a2c26c0a1583103.png"></p><h3 id="2-修改-Name-Server"><a href="#2-修改-Name-Server" class="headerlink" title="2. 修改 Name Server"></a>2. 修改 Name Server</h3><p>这边以Namesilo为例子：</p><blockquote><p>Namesilo自带隐私保护，咕咕一直在用这家，价格也是这些注册商里面比较低的，关键是他家不像其他家域名注册商，没有七七八八的套路！（就是后台界面有些丑古老 &#x3D; &#x3D;）</p><p><a href="https://blog.laoda.de/archives/namesilo">【域名购买】Namesilo优惠码和域名解析教程（附带服务器购买推荐和注意事项）</a></p><p>如果想要长期使用，还是建议买com后缀的域名，更加正规一些，可以输入<code>laodade</code>来获得1美元的优惠（不知道现在还有没有）</p></blockquote><p>在购买域名的服务商的管理后台，修改域名的 Name Server，修改成 Cloudflare 的域名服务器。请填写 Dashboard 中给出的地址，不一定和笔者的完全一样，地址格式是<code>*.ns.cloudflare.com</code>。</p><p>比如上面就是：<code>marjory.ns.cloudflare.com</code> 和<code>mitchell.ns.cloudflare.com</code></p><p>具体位置在这里：</p><p><a href="https://www.namesilo.com/account_domains.php">https://www.namesilo.com/account_domains.php</a></p><p><img src="https://img.laoda.de/i/2022/08/12/p0bwfu-2.webp" alt="03dec0b00cf01bf099cbbcd659657c16.png"></p><p>点击 <code>change</code></p><img src="https://img.laoda.de/i/2022/08/12/p0chqs-2.webp" alt="5ff0445a86b16219ead42f8ac6925f42.png" style="zoom:50%;" /><p>点击具体的域名：</p><p>输入CF上面提供的ns即可。</p><p>比如上面就是：<code>marjory.ns.cloudflare.com</code> 和<code>mitchell.ns.cloudflare.com</code></p><img src="https://img.laoda.de/i/2022/08/12/p0ewau-2.webp" alt="ee4aad99fc2d05d5be9df7d0d0f0d8f8.png" style="zoom:33%;" /><p>之后记得点击保存。</p><p>同时回到CF，点击完成。</p><img src="https://img.laoda.de/i/2022/08/12/p0hdis-2.webp" alt="02566faf262fb3343646d961d4fdaac5.png" style="zoom:33%;" /><p>大概过半小时左右，你注册CF的邮箱就能收到类似的邮件了，表明现在可以用CF来做域名解析啦。</p><img src="https://img.laoda.de/i/2022/08/12/p0k1a2-2.webp" alt="6febfd2f12746fee3de89cd788414b7b.png" style="zoom: 33%;" /><h3 id="3-添加-DNS-解析"><a href="#3-添加-DNS-解析" class="headerlink" title="3. 添加 DNS 解析"></a>3. 添加 DNS 解析</h3><p>点亮橙色小云朵，表示经过 Cloudflare 的代理，客户的请求由 CF 转发到我们的源服务器，即客户不知道也不能直连我们的服务器 IP。</p><p><img src="https://img.laoda.de/i/2022/08/12/p0ttrn-2.webp" alt="581b3340b1dff88cc1f0c4485f681fba.png"></p><p>注：一般服务器都应该配置，不能直接用 IP 访问，以免被 Script Boy 全网段扫描。</p><h3 id="4-开启-Full-SSL-TLS（完全严格模式）"><a href="#4-开启-Full-SSL-TLS（完全严格模式）" class="headerlink" title="4. 开启 Full SSL&#x2F;TLS（完全严格模式）"></a>4. 开启 Full SSL&#x2F;TLS（完全严格模式）</h3><p>在顶部的菜单条（新版在侧边栏），找到锁标志（SSL&#x2F;TLS），修改通信链路加密方式为：Full（strict）。</p><p><img src="https://img.laoda.de/i/2022/08/12/p0un0d-2.webp" alt="选择 Full SSL/TLS 严格端对端加密"></p><p>这里有四个 SSL 加密选项，然而本页面的文字描述都比较简单，这几种模式之间具体有什么区别呢？</p><p>笔者先读了一遍官方的说明文档，对各自适用的场景有了大致的了解；并参阅了<a href="https://senjianlu.com/2021/11/cloudflare-ssl-tls/">森见鹿博客的学习笔记</a>，加深了理解；最后结合自己上手的实践过程，分别展开说明如下表。</p><p><strong>表 1: Cloudflare SSL 加密参数说明表</strong></p><table><thead><tr><th align="left">参数</th><th align="left">含义</th><th align="left">优点</th><th align="left">缺点</th></tr></thead><tbody><tr><td align="left">OFF</td><td align="left"><strong>完全不加密</strong>，即不使用 Https 协议</td><td align="left">无</td><td align="left">无加密，明文裸奔容易遭受到中间人攻击Chrome 等浏览器会显示该网站不安全影响搜索引擎收录</td></tr><tr><td align="left">Flexible</td><td align="left">你的网站用户和 Cloudflare 之间有加密连接，但是从 Cloudflare 到你的服务器没有加密。即<strong>半程加密</strong>。</td><td align="left">就算你的网站没有 SSL 证书，用户也能实现 SSL 加密访问。</td><td align="left">不安全，在 Cloudflare 到源站中仍存在中间人攻击的风险你的服务器开启了 Http 转 Https，会导致 Redirect 死循环，浏览器报错 <code>Too Many Redirects</code></td></tr><tr><td align="left">Full</td><td align="left">全程加密，从用户到 CDN 服务器再到你的网站，全程都是 SSL 加密的，反之亦同。只要你的服务器有 SSL 证书，就可以实现 SSL 加密访问。</td><td align="left">不限制证书。 openssh 自签名证书还是正规机构签发的 SSL 都可用</td><td align="left">在 Cloudflare 到源站中仍存在中间人攻击的风险（包括通过证书劫持和伪造等方式，与严格模式不同，Cloudflare 不会对源站的证书进行审核）</td></tr><tr><td align="left">Full (strict)</td><td align="left">全程加密，它与 Full SSL 的区别在于你的服务器必须是安装了<strong>已受信任的 SSL 证书</strong>（即购买的或正规机构签发的 SSL 证书），否则无法开启 SSL 加密访问。</td><td align="left">安全 新增了对<strong>证书的认证</strong>，源站如果配置了自签证书、非可信证书或过期证书，那么 Cloudflare 会回复客户端访问失败并返回 526 响应码</td><td align="left">无</td></tr></tbody></table><blockquote><p>注：这四种模式仅在启用了 Cloudflare 的 CDN 后——即<strong>点亮了橙色小云朵</strong>——才有效。如果只是把 Cloudflare 用作 DNS 解析，那么上述的加密模式都不会起作用！</p></blockquote><p>若是有选择困难症，森见鹿同学整理了常用需求对应的模式，请参照下面的流程图：</p><p><img src="https://img.laoda.de/i/2022/08/12/p0wuga-2.webp" alt="加密模式选择流程图"></p><h3 id="5-创建-CF-证书"><a href="#5-创建-CF-证书" class="headerlink" title="5. 创建 CF 证书"></a>5. 创建 CF 证书</h3><p>切换到 <code>Origin Server</code> 选项卡，创建 <code>Origin Server Cetificate</code> 源服务器证书（由 Cloudflare 免费签名）。</p><p><img src="https://img.laoda.de/i/2022/08/12/p0yzrf-2.webp" alt="创建 SSL 证书"></p><h3 id="6-填写证书的生成参数"><a href="#6-填写证书的生成参数" class="headerlink" title="6. 填写证书的生成参数"></a>6. 填写证书的生成参数</h3><p><img src="https://img.laoda.de/i/2022/08/12/p0zszk-2.webp" alt="选填待生成证书的参数"></p><ul><li>密钥类型：2048 位的 RSA 私钥</li><li>作用域名：适用于哪些域名（子域名），支持通配符匹配。默认作用范围是 <code>your.site</code>, <code>*.your.site</code>。如果要添加域名的其它级别，例如，通配符未覆盖的级别（如 <code>one.two.your.site</code>）可在文本框中追加。</li><li>有效年限：<strong>15 年</strong></li></ul><h3 id="7-获取生成的证书和密钥"><a href="#7-获取生成的证书和密钥" class="headerlink" title="7 获取生成的证书和密钥"></a>7 获取生成的证书和密钥</h3><p><img src="https://img.laoda.de/i/2022/08/12/p125mp-2.webp" alt="获取公私钥对"></p><ul><li>密钥格式：根据你的使用环境来选择公私匙对的格式。<ul><li>大部分基于 OpenSSL Web 服务（如 Apache and NGINX）都是使用 PEM 文本文件（Base64 encoded ASCII），同时也兼容二进制格式的 DER 文件；</li><li>Windows 系统或 Apache Tomcat 服务则是 PKCS#7 格式。</li></ul></li></ul><p>分别拷贝源证书和私钥内容，保存好。</p><blockquote><p>注意：私钥内容不会存在 Cloudflare。一旦创建完成后，公共证书可以重复下载，但私钥内容无法从 CF 后台再次拷贝，请自行妥善保管。</p></blockquote><p>之后如果是用宝塔面板，直接拷贝到对应的位置即可。</p><img src="https://img.laoda.de/i/2022/08/12/p14oy0-2.webp" alt="ada2985cce20205c748437e3503a28de.png" style="zoom:33%;" /><p>如果是自己装的Nginx，为了安全考虑，应限制只有 Web 服务能够读取。例如，假如你是使用的 Nginx，它是以 <code>www-data</code> 用户运行的，因此，文件的权限设置成 <code>root</code> 才能写入，而 <code>www-data</code> 用户只能读取，权限细节如下：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 设置用户和用户组</span></span><br><span class="line"><span class="built_in">chown</span> -R root:www-data /path/to/your/cert/dir</span><br><span class="line"><span class="comment"># 设置文件夹和文件权限</span></span><br><span class="line"><span class="built_in">chmod</span> 750 /path/to/your/cert/dir</span><br><span class="line"><span class="built_in">chmod</span> 640 /path/to/your/cert/dir/*</span><br></pre></td></tr></table></figure><p>别忘了重新载入（或者重启）Nginx，一般重新载入即可。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 重载 Nginx</span></span><br><span class="line">$ sudo systemctl reload nginx</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启 Nginx</span></span><br><span class="line">$ sudo systemctl restart nginx</span><br></pre></td></tr></table></figure><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>重新刷新一下网页，发现已经有https了！</p><img src="https://img.laoda.de/i/2022/08/12/p1fmm7-2.webp" alt="6b35b45b5b46f0b41ab11590eec6556c.png" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/08/12/p1fakj-2.webp" alt="88b7c637322a565196997dd1bd77dbec.png" style="zoom:33%;" /><p>两个字，舒服！</p><p>十五年之内不用再更换证书啦！</p><p>希望你的网站也可以坚挺到15年换证书的那一天 &#x3D; &#x3D;</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://muwaii.com/posts/try-cloudflare-free-15-year-ssl-certificate">https://muwaii.com/posts/try-cloudflare-free-15-year-ssl-certificate</a> （咕咕基本都是抄的，感谢！）</p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cloudflare </tag>
            
            <tag> SSL证书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩儿的Docker项目】SearXNG——自建一个属于自己的免费搜索引擎平台！尊重隐私、完全开源！</title>
      <link href="/archives/docker-compose-install-searxng/"/>
      <url>/archives/docker-compose-install-searxng/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>一个基于 Python 的完全开源免费搜索引擎平台，为你提供来自 Google、Bing、Yahoo 等 70 多种各大视频、图片、搜索、磁力等网站结果展示，并对搜索结果进行优化，同时不会存储你的任何搜索信息，搭建也很方便，有兴趣的可以搭建给需要谷歌的同事或朋友用下。</p></blockquote><p>注意，不能访问外网的用户使用起来会很不舒服。</p><p>搭建采用国外（或者非大陆）服务器，不建议采用国内服务器。</p><h2 id="1-介绍（来自官方）"><a href="#1-介绍（来自官方）" class="headerlink" title="1. 介绍（来自官方）"></a>1. 介绍（来自<a href="https://github.com/searxng/searxng">官方</a>）</h2><img src="https://raw.githubusercontent.com/searxng/searxng/master/src/brand/searxng.svg" alt="SearXNG" style="zoom:50%;" /><h3 id="1-1-系统特色"><a href="#1-1-系统特色" class="headerlink" title="1.1 系统特色"></a>1.1 系统特色</h3><p>尊重隐私、可定制的元搜索引擎。</p><p>SearXNG是searx的一个分支。（原因是内部对项目发展的想法不一）</p><p>以下是一些特性：</p><ul><li>桌面、平板和手机上自适应显示</li><li>支持暗夜模式（你可以在首选项中选择）</li><li>支持从右到左的语言</li><li><a href="https://dev.searxng.org/screenshots.html#config=Firefox+1920&test_case=search_general">查看屏幕截图</a></li><li>支持Docker部署，还可以为ARM64和ARM&#x2F;v7架构构建镜像（树莓派也能安装）</li></ul><h3 id="1-2-相关地址"><a href="#1-2-相关地址" class="headerlink" title="1.2 相关地址"></a>1.2 相关地址</h3><p>官方Demo：<a href="https://searx.space/">https://searx.space/</a></p><p>咕咕的Demo：<a href="http://search.gugu.ge/">http://search.gugu.ge/</a>  （可以用咕咕的这个，不过还是建议自建）</p><p>文档地址：<a href="https://docs.searxng.org/">https://docs.searxng.org/</a></p><p>GitHub地址：<a href="https://github.com/searxng/searxng">https://github.com/searxng/searxng</a>  (2.6K Star)</p><p>Docker仓库地址：<a href="https://github.com/searxng/searxng-docker">https://github.com/searxng/searxng-docker</a></p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p><img src="https://img.laoda.de/i/2022/07/28/z5eot9-2.webp" alt="image-20220728212537763"></p><p><img src="https://img.laoda.de/i/2022/07/28/z5ynzr-2.webp" alt="image-20220728212631167"></p><p><img src="https://img.laoda.de/i/2022/07/28/z63z6s-2.webp" alt="image-20220728212656007"></p><p>SearXNG 对比 Baidu：</p><p><img src="https://img.laoda.de/i/2022/07/28/z565s1-2.webp" alt="image-20220728212458670"></p><h2 id="3-搭建环境"><a href="#3-搭建环境" class="headerlink" title="3. 搭建环境"></a>3. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器24元&#x2F;月VPS一台</del>展示用的服务器是<a href="https://netcup-sonderangebote.de/">Netcup</a>特价款，本期搭建用的是<a href="https://loll.cc/tx">腾讯轻量购买链接</a>的服务器，（最好是选<strong>非大陆的服务器</strong>）如果是小白刚开始玩的话，还可以购买<a href="https://blog.laoda.de/archives/cheap-vps-racknerd">Racknerd</a>的服务器，最低一年不到100块（不过搭建Docker还是建议选择1G内存以上的机器）（Racknerd服务器介绍：<a href="https://blog.laoda.de/archives/cheap-vps-racknerd">点击查看</a>）</li><li>系统：Debian 10（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本</a> 非必需DD用原来的系统也OK，之后教程都是用Debian或者Ubuntu搭建～）</li><li>安装好Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需但建议】域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>【非必需】提前安装好宝塔面板海外版本aapanel，并安装好Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程选用】安装好Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><blockquote><p>服务器要求：不是非常高，能搭建Docker即可，建议1G以上。</p></blockquote><h2 id="4-搭建视频"><a href="#4-搭建视频" class="headerlink" title="4. 搭建视频"></a>4. 搭建视频</h2><p>YouTube：<a href="https://youtu.be/2mrbKr-lYek">https://youtu.be/2mrbKr-lYek</a></p><p>哔哩哔哩【高清版本可以点击去吐槽到B站观看】：<joe-bilibili bvid="BV1eU4y1v79Y"></joe-bilibili></p><h2 id="5-搭建方式"><a href="#5-搭建方式" class="headerlink" title="5. 搭建方式"></a>5. 搭建方式</h2><h3 id="5-1-服务器前期配置"><a href="#5-1-服务器前期配置" class="headerlink" title="5.1 服务器前期配置"></a>5.1 服务器前期配置</h3><p>服务器初始设置，参考：</p><p><a href="https://blog.laoda.de/archives/vps-script"><strong>新买了一台服务器“必须”要做的6件小事</strong></a></p><p><a href="https://blog.laoda.de/archives/hello-docker">【Docker系列】不用宝塔面板，小白一样可以玩转VPS服务器！</a></p><blockquote><p>注意：VPS的内存如果过小，建议设置一下SWAP，一般为内存的1-1.5倍即可，可以让系统运行更流畅！</p></blockquote><p>设置SWAP可以用脚本:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O box.sh https://raw.githubusercontent.com/BlueSkyXN/SKY-BOX/main/box.sh &amp;&amp; <span class="built_in">chmod</span> +x box.sh &amp;&amp; clear &amp;&amp; ./box.sh</span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2022/05/28/uoikkd-0.webp" alt="image-20220528185512488" style="zoom:50%;" /><p>选择<code>18</code>，然后输入你想要扩容的数值即可。</p><img src="https://img.laoda.de/i/2022/05/28/up2dkf-0.webp" alt="image-20220528185604586" style="zoom:50%;" /><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i <span class="comment"># 切换到root用户</span></span><br><span class="line"></span><br><span class="line">apt update -y  <span class="comment"># 升级packages</span></span><br><span class="line"></span><br><span class="line">apt install wget curl sudo vim git -y  <span class="comment"># Debian系统比较干净，安装常用的软件</span></span><br></pre></td></tr></table></figure><h3 id="5-2-安装Docker"><a href="#5-2-安装Docker" class="headerlink" title="5.2 安装Docker"></a>5.2 安装Docker</h3><h4 id="5-2-1-非大陆服务器Docker安装"><a href="#5-2-1-非大陆服务器Docker安装" class="headerlink" title="5.2.1 非大陆服务器Docker安装"></a>5.2.1 <strong>非大陆服务器Docker安装</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -qO- get.docker.com | bash</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker -v  <span class="comment">#查看docker版本</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker  <span class="comment"># 设置开机自动启动</span></span><br></pre></td></tr></table></figure><p><strong>修改Docker配置（可选）（来自<a href="https://u.sb/debian-install-docker/">烧饼博客</a>）</strong></p><p>以下配置会增加一段自定义内网 IPv6 地址，开启容器的 IPv6 功能，以及限制日志文件大小，防止 Docker 日志塞满硬盘（泪的教训）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/docker/daemon.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    &quot;log-driver&quot;: &quot;json-file&quot;,</span></span><br><span class="line"><span class="string">    &quot;log-opts&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;max-size&quot;: &quot;20m&quot;,</span></span><br><span class="line"><span class="string">        &quot;max-file&quot;: &quot;3&quot;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    &quot;ipv6&quot;: true,</span></span><br><span class="line"><span class="string">    &quot;fixed-cidr-v6&quot;: &quot;fd00:dead:beef:c0::/80&quot;,</span></span><br><span class="line"><span class="string">    &quot;experimental&quot;:true,</span></span><br><span class="line"><span class="string">    &quot;ip6tables&quot;:true</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>然后重启 Docker 服务：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h4 id="5-2-2-非大陆服务器Docker-compose安装"><a href="#5-2-2-非大陆服务器Docker-compose安装" class="headerlink" title="5.2.2 非大陆服务器Docker-compose安装"></a>5.2.2 <strong>非大陆服务器Docker-compose安装</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/1.29.2/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose --version  <span class="comment">#查看docker-compose版本</span></span><br></pre></td></tr></table></figure><h4 id="5-2-3-国内服务器安装docker"><a href="#5-2-3-国内服务器安装docker" class="headerlink" title="5.2.3 国内服务器安装docker"></a>5.2.3 <strong>国内服务器安装docker</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -sSL https://get.daocloud.io/docker | sh</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker -v  <span class="comment">#查看docker版本</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker  <span class="comment"># 设置开机自动启动</span></span><br></pre></td></tr></table></figure><p><strong>修改Docker配置（可选）（来自<a href="https://u.sb/debian-install-docker/">烧饼博客</a>）</strong></p><p>以下配置会增加一段自定义内网 IPv6 地址，开启容器的 IPv6 功能，以及限制日志文件大小，防止 Docker 日志塞满硬盘（泪的教训）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/docker/daemon.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    &quot;log-driver&quot;: &quot;json-file&quot;,</span></span><br><span class="line"><span class="string">    &quot;log-opts&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;max-size&quot;: &quot;20m&quot;,</span></span><br><span class="line"><span class="string">        &quot;max-file&quot;: &quot;3&quot;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    &quot;ipv6&quot;: true,</span></span><br><span class="line"><span class="string">    &quot;fixed-cidr-v6&quot;: &quot;fd00:dead:beef:c0::/80&quot;,</span></span><br><span class="line"><span class="string">    &quot;experimental&quot;:true,</span></span><br><span class="line"><span class="string">    &quot;ip6tables&quot;:true</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>然后重启 Docker 服务：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h4 id="5-2-4-国内服务器安装docker-compose"><a href="#5-2-4-国内服务器安装docker-compose" class="headerlink" title="5.2.4 国内服务器安装docker-compose"></a>5.2.4 <strong>国内服务器安装docker-compose</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -L https://get.daocloud.io/docker/compose/releases/download/v2.1.1/docker-compose-`<span class="built_in">uname</span> -s`-`<span class="built_in">uname</span> -m` &gt; /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line">docker-compose --version  <span class="comment">#查看docker-compose版本</span></span><br></pre></td></tr></table></figure><h3 id="5-3-安装NginxProxyManager"><a href="#5-3-安装NginxProxyManager" class="headerlink" title="5.3 安装NginxProxyManager"></a>5.3 安装NginxProxyManager</h3><p>参考这边的内容：<a href="https://blog.laoda.de/archives/nginxproxymanager">https://blog.laoda.de/archives/nginxproxymanager</a></p><h3 id="5-4-创建安装目录及docker-compose文件"><a href="#5-4-创建安装目录及docker-compose文件" class="headerlink" title="5.4 创建安装目录及docker-compose文件"></a>5.4 创建安装目录及docker-compose文件</h3><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/searxng</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/searxng</span><br><span class="line"></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/searxng/searxng-docker.git</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> searxng-docker/</span><br><span class="line"></span><br><span class="line">vim docker-compose.yaml</span><br></pre></td></tr></table></figure><p>因为官方默认是试用caddy来反代的，有一个问题就是可能会和你网站上的80端口冲突，导致searXNG与你服务器上的其他网站无法共存，我们这边把caddy部分注释掉，改为采用{NginxProxyManager}(<a href="https://blog.laoda.de/tags/nginxproxymanager)%E5%8F%8D%E4%BB%A3%E3%80%82">https://blog.laoda.de/tags/nginxproxymanager)反代。</a></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.7&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="comment"># 我们注释掉caddy的内容</span></span><br><span class="line">  <span class="comment">#  caddy:</span></span><br><span class="line">  <span class="comment">#  container_name: caddy</span></span><br><span class="line">  <span class="comment">#  image: caddy:2-alpine</span></span><br><span class="line">  <span class="comment">#  network_mode: host</span></span><br><span class="line">  <span class="comment">#  volumes:</span></span><br><span class="line">  <span class="comment">#    - ./Caddyfile:/etc/caddy/Caddyfile:ro</span></span><br><span class="line">  <span class="comment">#    - caddy-data:/data:rw</span></span><br><span class="line">  <span class="comment">#    - caddy-config:/config:rw</span></span><br><span class="line">  <span class="comment">#  environment:</span></span><br><span class="line">  <span class="comment">#    - SEARXNG_HOSTNAME=$&#123;SEARXNG_HOSTNAME:-http://localhost:80&#125;</span></span><br><span class="line">  <span class="comment">#    - SEARXNG_TLS=$&#123;LETSENCRYPT_EMAIL:-internal&#125;</span></span><br><span class="line">  <span class="comment">#  cap_drop:</span></span><br><span class="line">  <span class="comment">#    - ALL</span></span><br><span class="line">  <span class="comment">#  cap_add:</span></span><br><span class="line">  <span class="comment">#    - NET_BIND_SERVICE</span></span><br><span class="line">  <span class="comment">#    - DAC_OVERRIDE</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">&quot;redis:alpine&quot;</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">redis-server</span> <span class="string">--save</span> <span class="string">&quot;&quot;</span> <span class="string">--appendonly</span> <span class="string">&quot;no&quot;</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">searxng</span></span><br><span class="line">    <span class="attr">tmpfs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/lib/redis</span></span><br><span class="line">    <span class="attr">cap_drop:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ALL</span></span><br><span class="line">    <span class="attr">cap_add:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SETGID</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SETUID</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DAC_OVERRIDE</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">searxng:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">searxng</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">searxng/searxng:latest</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">searxng</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">&quot;8180:8080&quot;</span>   <span class="comment"># 这个冒号左边的端口可以更改，右边的不要改</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./searxng:/etc/searxng:rw</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SEARXNG_BASE_URL=https://$&#123;SEARXNG_HOSTNAME:-https://你的域名&#125;/</span></span><br><span class="line">    <span class="attr">cap_drop:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ALL</span></span><br><span class="line">    <span class="attr">cap_add:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">CHOWN</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SETGID</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SETUID</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DAC_OVERRIDE</span></span><br><span class="line">    <span class="attr">logging:</span></span><br><span class="line">      <span class="attr">driver:</span> <span class="string">&quot;json-file&quot;</span></span><br><span class="line">      <span class="attr">options:</span></span><br><span class="line">        <span class="attr">max-size:</span> <span class="string">&quot;1m&quot;</span></span><br><span class="line">        <span class="attr">max-file:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">searxng:</span></span><br><span class="line">    <span class="attr">ipam:</span></span><br><span class="line">      <span class="attr">driver:</span> <span class="string">default</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#volumes:</span></span><br><span class="line">        <span class="comment">#caddy-data:</span></span><br><span class="line">        <span class="comment">#caddy-config:</span></span><br></pre></td></tr></table></figure><p>切换到英文输入法，按下<code>i</code>输入内容。</p><p>输入完成之后，切换到英文输入法，按下<code>:wq</code>保存退出。</p><p>接着我们来编辑一下<code>.env</code>文件。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/searxng/searxng-docker</span><br><span class="line"></span><br><span class="line">vim .<span class="built_in">env</span></span><br></pre></td></tr></table></figure><p>切换到英文输入法，按下<code>i</code>输入内容。</p><p><img src="https://img.laoda.de/i/2022/07/28/yteok4-2.webp" alt="image-20220728210522707"></p><p>取消<code>#</code>注释，在上图位置填入你之后需要用到的域名。</p><p>第二行的邮件不用管，那个是caddy申请的一个邮件，我们不用caddy。</p><p>输入完成之后，切换到英文输入法，按下<code>:wq</code>保存退出。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/searxng/searxng-docker</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">&quot;s|ultrasecretkey|<span class="subst">$(openssl rand -hex 32)</span>|g&quot;</span> searxng/settings.yml <span class="comment"># 生成一个密钥</span></span><br></pre></td></tr></table></figure><h3 id="5-5-打开服务器防火墙并访问网页"><a href="#5-5-打开服务器防火墙并访问网页" class="headerlink" title="5.5 打开服务器防火墙并访问网页"></a>5.5 打开服务器防火墙并访问网页</h3><p>打开防火墙的端口<code>8180</code></p><p>腾讯云打开方法如下：</p><p><img src="https://img.laoda.de/i/2022/06/30/zlio5h-2.webp" alt="image-20220630215240864"></p><p><img src="https://img.laoda.de/i/2022/06/30/10h3dqt-2.webp" alt="image-20220630220546335"></p><p>这边的<code>21116</code>只是一个例子，这边我们应该填<code>8180</code></p><p><img src="https://img.laoda.de/i/2022/06/30/10hlio9-2.webp" alt="image-20220630220629996"></p><p>查看端口是否被占用（以<code>8180</code>为例），输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:8180  <span class="comment">#查看8180端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用，我们接着可以运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/searxng/searxng-docker</span><br><span class="line"></span><br><span class="line">docker-compose up -d  </span><br></pre></td></tr></table></figure><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的IP。</p><p>2、遇到访问不了的情况，请再次检查在宝塔面板的防火墙和服务商的后台防火墙是否打开对应了端口。</p></blockquote><p>如果你没有域名，可以试试直接输入<code>http://ip:8180</code>访问。</p><p>还是非常建议大家买一个域名来试用，这样可以做https，会让网页更安全。</p><p>而且namesilo上面xyz后缀的域名一年就7块钱，可以年抛。</p><p>如果想要长期使用，还是建议买com后缀的域名，更加正规一些，可以输入<code>laodade</code>来获得1美元的优惠（不知道现在还有没有）</p><p>namesilo自带隐私保护，咕咕一直在用这家，价格也是这些注册商里面比较低的，关键是他家不像其他家域名注册商，没有七七八八的套路！（就是后台界面有些<del>丑</del>古老 &#x3D; &#x3D;）</p><p><a href="https://blog.laoda.de/archives/namesilo">【域名购买】Namesilo优惠码和域名解析教程（附带服务器购买推荐和注意事项）</a></p><p>我们接着往下看！</p><h3 id="5-6-更新"><a href="#5-6-更新" class="headerlink" title="5.6 更新"></a>5.6 更新</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/searxng/searxng-docker /root/data/docker_data/searxng/searxng-docker.archive  <span class="comment"># 万事先备份，以防万一</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/searxng/searxng-docker  <span class="comment"># 进入docker-compose所在的文件夹</span></span><br><span class="line"></span><br><span class="line">docker-compose pull    <span class="comment"># 拉取最新的镜像</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d   <span class="comment"># 重新更新当前镜像</span></span><br></pre></td></tr></table></figure><p>利用Docker-compose搭建的应用，更新非常容易～</p><h3 id="5-7-卸载"><a href="#5-7-卸载" class="headerlink" title="5.7 卸载"></a>5.7 卸载</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/searxng/searxng-docker  <span class="comment"># 进入docker-compose所在的文件夹</span></span><br><span class="line"></span><br><span class="line">docker-compose down    <span class="comment"># 停止容器，此时不会删除映射到本地的数据</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/searxng/searxng-docker  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><h2 id="6-反向代理"><a href="#6-反向代理" class="headerlink" title="6. 反向代理"></a>6. 反向代理</h2><h3 id="6-1-利用Nginx-Proxy-Manager"><a href="#6-1-利用Nginx-Proxy-Manager" class="headerlink" title="6.1 利用Nginx Proxy Manager"></a>6.1 利用Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p>之后，登陆Nginx Proxy Manager（不会的看这个：<strong>安装Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称NPM）会用到<code>80</code>、<code>443</code>端口，所以本机不能占用（比如原来就有Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom:50%;" /><img src="https://img.laoda.de/i/2022/07/28/z27hgj-2.webp" alt="image-20220728212001182" style="zoom:50%;" /><blockquote><p> 注意填写对应的<code>域名</code>、<code>IP</code>和<code>端口</code>，按文章来的话，应该是<code>8180</code></p></blockquote><p><strong>IP填写：</strong></p><p>如果Nginx Proxy Manager和reader在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的Docker容器内部IP。</p><p>否则直接填<code>cryptgeon所在的服务器IP</code>就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom:50%;" /><p>再次打开，勾选这些：</p><img src="https://img.laoda.de/i/2022/07/28/z2gjif-2.webp" alt="image-20220728212042482" style="zoom:50%;" /><p>然后就可以用域名来安装访问了。</p><h2 id="7-使用教程"><a href="#7-使用教程" class="headerlink" title="7. 使用教程"></a>7. 使用教程</h2><h3 id="7-1-安装和配置"><a href="#7-1-安装和配置" class="headerlink" title="7.1 安装和配置"></a>7.1 安装和配置</h3><p>见咕咕的视频</p><h2 id="8-遇到的几个问题"><a href="#8-遇到的几个问题" class="headerlink" title="8. 遇到的几个问题"></a>8. 遇到的几个问题</h2><h3 id="8-1-too-many-requests问题"><a href="#8-1-too-many-requests问题" class="headerlink" title="8.1 too many requests问题"></a>8.1 too many requests问题</h3><blockquote><p>就是这个searxng，我搜索后出现这个 “too many requests”</p></blockquote><p>修改<code>settings.yml</code>文件，把limiter改成<code>false</code></p><p><img src="https://img.laoda.de/i/2022/07/31/bw48il-2.webp"></p><h2 id="9-结尾"><a href="#9-结尾" class="headerlink" title="9. 结尾"></a>9. 结尾</h2><p>祝大家用得开心，有问题可以去GitHub提<a href="https://github.com/searxng/searxng-docker/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，有能力给项目做贡献的同学，也欢迎积极加入到<a href="https://github.com/searxng/searxng-docker">项目</a>中来，贡献自己的一份力量！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://github.com/searxng/searxng-docker">https://github.com/searxng/searxng-docker</a></p><p><a href="https://docs.searxng.org/admin/installation-docker.html">https://docs.searxng.org/admin/installation-docker.html</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SearXNG </tag>
            
            <tag> 百度 </tag>
            
            <tag> 谷歌 </tag>
            
            <tag> 隐私 </tag>
            
            <tag> 搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【VPS选购经验分享】OVH——欧洲最大、世界第三的托管服务提供商，抗DDOS（独立服务器测评及取消RAID、挂载硬盘分享）</title>
      <link href="/archives/ovh-sys-2-sat-32-waw/"/>
      <url>/archives/ovh-sys-2-sat-32-waw/</url>
      
        <content type="html"><![CDATA[<h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><p>YouTube：<a href="https://youtu.be/TOX9LLgxtPk">https://youtu.be/TOX9LLgxtPk</a></p><p>哔哩哔哩【高清版本可以点击去吐槽到B站观看】：<joe-bilibili bvid="BV1M94y1D7oZ"></joe-bilibili></p><h2 id="5-搭建方式"><a href="#5-搭建方式" class="headerlink" title="5. 搭建方式"></a>5. 搭建方式</h2><h2 id="1-唠嗑"><a href="#1-唠嗑" class="headerlink" title="1. 唠嗑"></a>1. 唠嗑</h2><p>今天咕咕买了一台OVH家的位于波兰的独立服务器。</p><p>参考阅读：<a href="https://blog.laoda.de/archives/server-selection">【有用的小知识】服务器到底是什么？选VPS还是VDS？NAT和虚拟主机是个啥？裸金属是个啥？</a></p><blockquote><p>OVH，国际大厂（欧洲最大、世界第三的托管服务提供商），1999年创立于法国,法国最大IDC,全球排名领先IDC企业。主要特点为DDoS防御极高,流量清洗能力较为优秀。</p></blockquote><p><img src="https://img.laoda.de/i/2022/07/23/qm08pq-2.webp" alt="9f28265c95a5829f88f77debbe04d443.png"></p><p>就是这个贼“火”的托管服务提供商。</p><h3 id="1-1-机器配置："><a href="#1-1-机器配置：" class="headerlink" title="1.1 机器配置："></a>1.1 机器配置：</h3><ul><li>SYS-2-SAT-32</li><li>地区: 波兰(WAW) 1H-low</li><li>Hardware</li><li>CPU：Intel Xeon D1540 - 8c&#x2F;16t - 2 GHz&#x2F;2.6 GHz</li><li>RAM：32 GB ECC 2133 MHz</li><li>Data disks：4×2 TB HDD SATA</li><li>Expansion cards：Soft RAID</li><li>价格: $28.99 &#x2F; €24.99（安装费24.99欧）</li></ul><p>因为OVH会做活动经常减免安装费用（1个月的月租），所以咕咕相当于交了一笔学费，多花了172.39元 &#x3D; &#x3D;</p><p>OVH家可以发工单申请退款，但是不会退安装费，所以就索性充分利用一下这个机器，给大家做一做简单的测试，顺便再分享一下挂载硬盘的小知识（别的服务器也通用）。</p><h2 id="2-OVH后台重装系统"><a href="#2-OVH后台重装系统" class="headerlink" title="2. OVH后台重装系统"></a>2. OVH后台重装系统</h2><p>首先我们来重装一下系统。</p><p><img src="https://img.laoda.de/i/2022/07/23/qm3gkr-2.webp" alt="9cd5042505b5bcefc585fc7468bcf0bb.png"></p><p><img src="https://img.laoda.de/i/2022/07/23/qm4hnu-2.webp" alt="363cecd7e865ef67ba5bababfe60200d.png"></p><p><img src="https://img.laoda.de/i/2022/07/23/qm5rx1-2.webp" alt="ceb7916793b78fbd490ecbed5da86862.png"></p><p><img src="https://img.laoda.de/i/2022/07/23/qm7ma6-2.webp" alt="5293890b341506737a1ae1f54ffa5bc0.png"></p><p><img src="https://img.laoda.de/i/2022/07/23/qm7x5a-2.webp" alt="a06353c0051305e962b86988d475d112.png"></p><p>因为这台机器有四块硬盘（总共8T），默认这边是给我们组<code>RAID1</code>的，也就是可用的容量只有1块硬盘的大小（2T）</p><p><code>RAID1</code>是追求最大的安全性的，但是太浪费了，然后咕咕又不想组<code>RAID0</code>，因为只要一块硬盘坏了数据就全完蛋了，所以我们这边取消安装RAID，只是简单地把这四块硬盘的空间都用上，也不会因为一块硬盘坏了就丢失所有数据。</p><p>可以看到还能选择<code>RAID5</code>、<code>RAID6</code>、<code>RAID10</code></p><p><img src="https://img.laoda.de/i/2022/07/23/qmb1gj-2.webp" alt="1b9806547ba5c814af45556a1fa24e70.png"></p><blockquote><p>RAID相关的小知识</p></blockquote><p><img src="https://img.laoda.de/i/2022/07/23/qmkcqm-2.webp" alt="0dad5f8abfb215fe97d78ce9e09132a3.png"></p><p>我们这边想充分利用这4块硬盘的空间，其实也就是<code>JBOD（Just a Bunch Of Disks）</code>指将数个物理硬盘，在操作系统中合并成一个逻辑硬盘，以直接增加容量。</p><p>所以我们重装系统的时候选择1块硬盘上装，然后挂载其他3块硬盘到我们的系统上去。</p><p>勾选<code>Customise the partition configuration</code></p><p><img src="https://img.laoda.de/i/2022/07/23/qml9y8-2.webp" alt="6947b8775c7a6eb2f096f12039524822.png"></p><p><img src="https://img.laoda.de/i/2022/07/23/qmmclq-2.webp" alt="ff31b790f9d5a144a77339a6c18d7a1d.png"></p><p>再点击<code>Next</code>就开始重装系统了！</p><h3 id="2-1-服务器概览"><a href="#2-1-服务器概览" class="headerlink" title="2.1 服务器概览"></a>2.1 服务器概览</h3><p>安装好新的系统之后（以<code>Ubuntu20.04</code>为例子，<code>Debian</code>同理），我们先来看一下服务器的整体情况。</p><p>用秋水的 <code>bench.sh</code> 脚本，这个脚本可以查看 Linux 系统信息，还可以测试网络带宽及硬盘读写速率。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i  <span class="comment"># 切换成root用户</span></span><br><span class="line"></span><br><span class="line">wget -qO- bench.sh | bash</span><br></pre></td></tr></table></figure><p>运行后如图：</p><p><img src="https://img.laoda.de/i/2022/07/23/qmnhg0-2.webp" alt="e08402cbd4043aa128d88362039249d9.png"></p><h4 id="2-1-1-网速"><a href="#2-1-1-网速" class="headerlink" title="2.1.1 网速"></a>2.1.1 网速</h4><p>下行10G口上行250M</p><p>也就是说我们从这台服务器上下载东西，以上海为例子，最多可以达到249.72&#x2F;8&#x3D;31.215M&#x2F;s</p><p>服务器自己去别的地方下载东西，最多能达到10000&#x2F;8&#x3D;1250M&#x2F;s</p><h4 id="2-1-2-线路"><a href="#2-1-2-线路" class="headerlink" title="2.1.2 线路"></a>2.1.2 线路</h4><p>应该是很垃圾的，这里就<del>不测</del>了。</p><p>补上。</p><h5 id="回程测试"><a href="#回程测试" class="headerlink" title="回程测试"></a>回程测试</h5><p>回程多地区测试脚本：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -qO- git.io/besttrace | bash</span><br></pre></td></tr></table></figure><h5 id="电信"><a href="#电信" class="headerlink" title="电信"></a>电信</h5><p><img src="https://img.laoda.de/i/2022/07/23/nho0aj-2.webp" alt="image-20220723142038467"></p><p><img src="https://img.laoda.de/i/2022/07/23/ni1afu-2.webp" alt="image-20220723142100333"></p><h5 id="联通"><a href="#联通" class="headerlink" title="联通"></a>联通</h5><p><img src="https://img.laoda.de/i/2022/07/23/ni5zeb-2.webp" alt="image-20220723142122339"></p><p><img src="https://img.laoda.de/i/2022/07/23/ni91vu-2.webp" alt="image-20220723142136195"></p><h5 id="移动"><a href="#移动" class="headerlink" title="移动"></a>移动</h5><p><img src="https://img.laoda.de/i/2022/07/23/nid7sx-2.webp" alt="image-20220723142156083"></p><p>波兰——德国——法国——美国——英国——上海移动</p><p><img src="https://img.laoda.de/i/2022/07/23/niosx7-2.webp" alt="image-20220723142209875"></p><p>波兰——德国——法国——美国——英国——广州移动</p><h5 id="成都教育网"><a href="#成都教育网" class="headerlink" title="成都教育网"></a>成都教育网</h5><p><img src="https://img.laoda.de/i/2022/07/23/nir8uw-2.webp" alt="image-20220723142220820"></p><p>波兰——德国——法国——美国——英国——北京移动——四川移动——成都教育网</p><h2 id="3-挂载硬盘"><a href="#3-挂载硬盘" class="headerlink" title="3. 挂载硬盘"></a>3. 挂载硬盘</h2><p>IO只有160+，如果是设置了<code>RAID0</code>的话，应该可以翻两倍。</p><p>硬盘可以看到只显示了1.8T，原因是我们还有3块硬盘没有挂载。</p><p>接下来我们来挂载一下硬盘。</p><p>如果服务器有多个硬盘，则需要硬盘分区和格式化，然后挂载到系统方能使用。</p><p>当前服务器有四个硬盘：</p><ul><li>硬盘1：容量2T，用作系统盘，已经安装了<code>Ubuntu20.04</code> （<code>/dev/sda</code>）</li><li>硬盘2：容量2T，用于存储数据，目前为空盘。（<code>/dev/sdb</code>我们设置对应挂载目录<code>/disk1</code>）</li><li>硬盘3：容量2T，用于存储数据，目前为空盘。（<code>/dev/sdc</code>我们设置对应挂载目录<code>/disk2</code>）</li><li>硬盘4：容量2T，用于存储数据，目前为空盘。（<code>/dev/sdd</code>我们设置对应挂载目录<code>/disk3</code>）</li></ul><p>注：若以<code>root</code>用户进行的操作，所有命令去掉前面的<code>sudo</code>。</p><h3 id="第一步：安装所需软件包parted"><a href="#第一步：安装所需软件包parted" class="headerlink" title="第一步：安装所需软件包parted"></a>第一步：安装所需软件包<code>parted</code></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install parted</span><br></pre></td></tr></table></figure><h3 id="第二步：分区"><a href="#第二步：分区" class="headerlink" title="第二步：分区"></a>第二步：分区</h3><p>执行<code>fdisk</code>命令对硬盘分区，可以先行执行<code>fdisk -l</code>查看所有硬盘信息：</p><p><img src="https://img.laoda.de/i/2022/07/23/qmt8ty-2.webp" alt="f3e1d0c9d31847e19e6ffb1a3f5f99bf.png"></p><p>因为<code>/dev/sdb</code> 咕咕之前已经格式化过了，我们这边就用<code>/dev/sdc</code>来挂载第三块硬盘。</p><p>通过<code>fdisk /dev/sdc</code>(sdb为硬盘3名称)。</p><p>fdisk的具体操作这里不详细说明，请另行查阅资料。组有磁盘磁盘阵列情况时，磁盘的设备名可能会是<code>/dev/mdNNN</code>(NNN表示数字)。</p><p>磁盘3(&#x2F;dev&#x2F;sdc)分区前的的信息:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fdisk /dev/sdc</span><br></pre></td></tr></table></figure><blockquote><p>虚拟硬盘的话会是<code>/dev/vdc</code> ，<code>v</code>是<code>virtual</code>的意思</p></blockquote><p><img src="https://img.laoda.de/i/2022/07/23/qmuyqj-2.webp" alt="0c8b5229574bc1e58337d3ad53b4846e.png"></p><p>我们输入<code>n</code>开始创建分区后,如下图所示</p><p><img src="https://img.laoda.de/i/2022/07/23/qmvlze-2.webp" alt="985d8ab13fdb718e51df6da6e7b19946.png"></p><p>选择分区号 输入<code>1</code>后，输入分区开始位置，这一步直接回车，输入分区结束位置，这一步也直接回车。</p><p>如下图所示：</p><p><img src="https://img.laoda.de/i/2022/07/23/qmw7do-2.webp" alt="739b5fc70cfa9e657038189579c8ae4f.png"></p><p>最后我们输入<code>wq</code> , 回车退出。</p><p><img src="https://img.laoda.de/i/2022/07/23/qn5iyz-2.webp" alt="a7259aa624a01338025017d72376a26f.png"></p><h3 id="第三步：检查是否分区成功"><a href="#第三步：检查是否分区成功" class="headerlink" title="第三步：检查是否分区成功"></a>第三步：检查是否分区成功</h3><p>还是输入<code>fdisk -l</code></p><p><img src="https://img.laoda.de/i/2022/07/23/qn6itk-2.webp" alt="efd602ca5544bc7749f6426d3c42db7d.png"></p><p>看到这个说明成功了！</p><h3 id="第四步：重新读取硬盘分区表"><a href="#第四步：重新读取硬盘分区表" class="headerlink" title="第四步：重新读取硬盘分区表"></a>第四步：重新读取硬盘分区表</h3><p>将<code>/dev/sdc</code>做成一个分区保存后，执行一下<code>partprobe</code>命令，让 <code>Ubuntu20.04</code>重新读取硬盘分区表，更新后将产生<code>/dev/sdc1</code>文件。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo partprobe</span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/07/23/qn78s3-2.webp" alt="a8d95c37e254bb9ed175d543235de422.png"></p><h3 id="第五步：格式化分区"><a href="#第五步：格式化分区" class="headerlink" title="第五步：格式化分区"></a>第五步：格式化分区</h3><p>格式化操作预计需要几分钟到十几分钟，视磁盘大小和性能而定。（这边咕咕花了5s）</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo mkfs.ext4 /dev/sdc1</span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/07/23/qn7s94-2.webp" alt="616a0259053635f9c917dad0354c09f1.png"></p><h3 id="第六步：手动挂载分区"><a href="#第六步：手动挂载分区" class="headerlink" title="第六步：手动挂载分区"></a>第六步：手动挂载分区</h3><p>可以使用<code>mount</code>命令手动挂载磁盘分区。手动卸载分区的命令是<code>umount</code>。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">mkdir</span> /disk2</span><br><span class="line"></span><br><span class="line"><span class="built_in">ls</span> /disk2</span><br><span class="line"></span><br><span class="line">sudo mount /dev/sdc1 /disk2</span><br><span class="line"></span><br><span class="line"><span class="built_in">ls</span> /disk2</span><br><span class="line"></span><br><span class="line">umount /dev/sdc1</span><br><span class="line"></span><br><span class="line"><span class="built_in">ls</span> /disk2</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/07/23/qna59k-2.webp" alt="5dd6dc44ef23bfcd0f6910babfdb139b.png"></p><h3 id="第七步：自动挂载分区"><a href="#第七步：自动挂载分区" class="headerlink" title="第七步：自动挂载分区"></a>第七步：自动挂载分区</h3><p>若要系统启动时自动挂载磁盘分区，需向&#x2F;etc&#x2F;fstab文件添加信息。</p><p>修改fstab文件前，先通ls查询&#x2F;dev&#x2F;sdb1的UUID。注意是defaults（后面有个s）。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> -l /dev/disk/by-uuid/</span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/07/23/qn9dzt-2.webp" alt="18c34f747390b658abd373f8c7015c3c.png"></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vi /etc/fstab</span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/07/23/qnb3oj-2.webp" alt="8e7360a978f3c8aab02c41d2418e833c.png"></p><p>加入这个：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#add data disk2</span></span><br><span class="line">UUID=d9fa14fb-7ba7-4779-a2e4-c98f2c71a52c /disk2          ext4   defaults         0       0</span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/07/23/qnbzuh-2.webp" alt="526c9c986802fb38a022a46c4ad0a84a.png"></p><p>也可以直接：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;/dev/sdb1 /disk1 ext4 defaults 0 0&quot;</span> &gt;&gt; /etc/fstab</span><br></pre></td></tr></table></figure><p>命令中的<code>/dev/sdb1</code>和<code>/disk1</code>自行修改成自己的。</p><p><img src="https://img.laoda.de/i/2022/07/23/qncx16-2.webp" alt="33e4635611664bd30fd7b372d4494e41.png"></p><p><img src="https://img.laoda.de/i/2022/07/23/qndkjn-2.webp" alt="ba0269a3b8c604d04a2d294d09b085e8.png"></p><h3 id="第八步：重新挂载所有分区"><a href="#第八步：重新挂载所有分区" class="headerlink" title="第八步：重新挂载所有分区"></a>第八步：重新挂载所有分区</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mount -a</span><br></pre></td></tr></table></figure><p>不报错即成功！</p><p><img src="https://img.laoda.de/i/2022/07/23/qneghe-2.webp" alt="5c93c20e77a45c9e1e921f888617b310.png"></p><h3 id="第九步：检查是否挂载成功"><a href="#第九步：检查是否挂载成功" class="headerlink" title="第九步：检查是否挂载成功"></a>第九步：检查是否挂载成功</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">df</span> -h</span><br></pre></td></tr></table></figure><p>如下图所示就是挂载成功了:</p><p><img src="https://img.laoda.de/i/2022/07/23/qnf85k-2.webp" alt="c70e7977535b290eff600a2eff9cadc5.png"></p><h3 id="第十步：重启服务器，再次检测"><a href="#第十步：重启服务器，再次检测" class="headerlink" title="第十步：重启服务器，再次检测"></a>第十步：重启服务器，再次检测</h3><p><img src="https://img.laoda.de/i/2022/07/23/nctu7a-2.webp" alt="image-20220723141224816"></p><p><img src="https://img.laoda.de/i/2022/07/23/nczz44-2.webp" alt="image-20220723141254790"></p><p>其余的硬盘也同理可以挂载。</p><h3 id="第十一步：补充"><a href="#第十一步：补充" class="headerlink" title="第十一步：补充"></a>第十一步：补充</h3><p>（补充）：如果服务器要使用到NTFS格式移动硬盘或U盘，需要先安装ntfs-3g软件，以便系统支持NTFS文件系统。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install ntfs-3g</span><br></pre></td></tr></table></figure><h2 id="4-查看硬盘通电时间"><a href="#4-查看硬盘通电时间" class="headerlink" title="4. 查看硬盘通电时间"></a>4. 查看硬盘通电时间</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt update -y &amp;&amp; apt upgrade -y <span class="comment"># 更新一下package   CentOS    yum -y update</span></span><br><span class="line"></span><br><span class="line">apt install smartmontools -y  <span class="comment"># 安装smartmontools   CentOS    yum -y install smartmontools</span></span><br><span class="line"></span><br><span class="line">smartctl -A /dev/sda  <span class="comment"># 查看硬盘通电时间</span></span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/07/23/f8lpan-2.webp"></p><p><img src="https://img.laoda.de/i/2022/07/23/f8zyw9-2.webp"></p><p><img src="https://img.laoda.de/i/2022/07/23/f93t6p-2.webp"></p><p><img src="https://img.laoda.de/i/2022/07/23/f98xd8-2.webp"></p><p>硬盘都接近4w小时了，非常拉胯 &#x3D; &#x3D;</p><p>不过据说，企业级硬盘，这个属于中等水平。</p><h2 id="5-总结"><a href="#5-总结" class="headerlink" title="5. 总结"></a>5. 总结</h2><p>机器没中奖，有的小伙伴开了硬盘能中奖4 X 4T 很舒服。</p><p>硬盘时间没中奖，有的小伙伴开出来是新盘，通电时间很短。</p><p>网络也没中奖，有的小伙伴是开了上下行都是10G口的。</p><p>今天运气不好，拍牌也没拍到 &#x3D; &#x3D;</p><h3 id="参考资料："><a href="#参考资料：" class="headerlink" title="参考资料："></a>参考资料：</h3><p>Debian10:添加硬盘：<a href="https://www.codenong.com/cs109117618/">https://www.codenong.com/cs109117618/</a><br>Linux系统的vps挂载磁盘教程：<a href="https://www.wangfuchao.com/855/">https://www.wangfuchao.com/855/</a></p>]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 欧洲VPS </tag>
            
            <tag> 抗DDOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【转载】MJJ版的Linux入门教程</title>
      <link href="/archives/getting-started-with-linux/"/>
      <url>/archives/getting-started-with-linux/</url>
      
        <content type="html"><![CDATA[<blockquote><p>来源：<a href="https://pa.ci/157.html">https://pa.ci/157.html</a><br>原作者：<a href="https://pa.ci/">@怕刺</a><br>感谢写出这个教程！</p></blockquote><p>本文的首要目的是给予Linux初学者一个简单、易学的教程，以便在看完本文后对Linux系统有一个基础的认识（而非系统级的深入），可以对常见的软件和功能进行配置，甚至可以自己写一写一键脚本。</p><p>本教程写于2021年下半年，采用的系统为Debian GNU&#x2F;Linux 11 (bullseye)。</p><h2 id="0-前言吐槽CentOS"><a href="#0-前言吐槽CentOS" class="headerlink" title="0 前言吐槽CentOS"></a>0 前言吐槽CentOS</h2><p><strong>解释使用Debian而不是CentOS的原因</strong></p><p>国内首批接触Linux系统的人主要集中在科研院校，大多数是延续了Unix-like的背景，在千禧年前后才有了真正意义上的Linux使用者：纯Linux平台开发、运行服务和应用，他们或直接或间接地推广了Linux系统。</p><p>红帽（Red Hat, Inc.）在1994年就开始发布了同名的操作系统：Red Hat Linux（后改组为Red Hat Enterprise Linux，缩写为RHEL）。得益于红帽优秀的团队和商业支持，RHEL这一发行版迅速占领了国内市场。彼时的国内计算机市场远不如今日繁荣，在口口相传和红帽的推广中，RHEL成为了Linux入门的主流选项，即使后来号称用户友好的Ubuntu出现了，绝大多数尝鲜的人依然能看到众多网站里面只提供RHEL版本的教程。</p><p>CentOS是根据RHEL的源码重新编译的，等于换商标版本的RHEL，软件层面上，两者无本质区别。但CentOS是反人类的，至少是反入门用户的。使用RHEL的基本为商业用户，可以付费获得红帽的技术支持，或者干脆有一个自己的维护团队；而CentOS作为一个社区自发形成的操作系统，拥有落后的软件源&#x2F;包，繁琐的配置，和对个人用户而言根本没有必要的SElinux等。举个例子，很多入门者修改SSH端口的时候，发现所有的操作都没有问题，但是死活无法生效，最终发现是没有在SElinux里面放行。如果你想安装个软件，你就得考虑是从落后主流版本好几代的软件源&#x2F;包里面安装，还是自己下载源码进行编译以获取主流的使用体验。对于入门者而言，CentOS的安全性和稳定性是个虚假的概念，毕竟让一个刚接触Linux的人去自己编译源码安装，无异于让小学生上战场，输了就说是小学生战斗力太弱。</p><p>所以本文以Debian GNU&#x2F;Linux（后续简称为Debian）来演示，也有着推广Debian的意思在里面，毕竟相比于Ubuntu往系统里面塞包括snap在内的一系列私货而言，Debain始终遵循着一个纯净的Linux的要求。而其他一些发行版，要么是专用性太强（如SUSE），要么是入门者不友好（如 Arch Linux），权衡之后，选择了写本文时，最新的Debian系统，即Debian GNU&#x2F;Linux 11 (bullseye)。</p><h2 id="1-环境搭建"><a href="#1-环境搭建" class="headerlink" title="1 环境搭建"></a>1 环境搭建</h2><h3 id="1-1-系统选择与安装"><a href="#1-1-系统选择与安装" class="headerlink" title="1.1 系统选择与安装"></a>1.1 系统选择与安装</h3><p>Debian的安装包有一系列的前缀或者后缀，例如在默认的下载地址<code>https://www.debian.org/download</code>中的是<code>debian-11.0.0-amd64-netinst.iso</code>。其中，</p><ul><li>11代表大版本是11，代号是bullseye，各版本代号都来源于电影《玩具总动员》中的角色名称；</li><li>amd64是指系统为64位的，i386或者x86是32位的，amd64或者x86-64是64位的，32位系统已经被逐步弃用，目前仅在特定行业中使用；</li><li>netinst是网络安装版本，只是个安装器，安装过程需要联网，而DVD后缀的是完整版（如：debian-11.0.0-amd64-DVD-1.iso），如果系统太大，会在DVD后面加数字，默认DVD-1是完整版本，其后数字的是软件源&#x2F;包；</li><li>带firmware前缀的是包含第三方非开源驱动的（如：firmware-11.1.0-amd64-DVD-1.iso），其中就包含intel和Realtek等公司的闭源网卡驱动。</li></ul><p>VPS全称为<code>Virtual Private Server</code>（虚拟专用服务器），如果需要安装纯净版的Debian 11系统，推荐使用vicer的Linux一键重装脚本（如下）：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">bash &lt;(wget --no-check-certificate -qO- &#x27;https://raw.githubusercontent.com/MoeClub/Note/master/InstallNET.sh&#x27;) -d 11 -v 64 -p &quot;自定义root密码&quot; -port &quot;自定义ssh端口&quot;</span><br></pre></td></tr></table></figure><h3 id="1-2-常用的命令"><a href="#1-2-常用的命令" class="headerlink" title="1.2 常用的命令"></a>1.2 常用的命令</h3><p><code>cat</code> 用于查看文本文件的内容，如<code>cat /etc/os-release</code> 将显示系统信息，如下：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PRETTY_NAME=<span class="string">&quot;Debian GNU/Linux 11 (bullseye)&quot;</span></span><br><span class="line">NAME=<span class="string">&quot;Debian GNU/Linux&quot;</span></span><br><span class="line">VERSION_ID=<span class="string">&quot;11&quot;</span></span><br><span class="line">VERSION=<span class="string">&quot;11 (bullseye)&quot;</span></span><br><span class="line">VERSION_CODENAME=bullseye</span><br><span class="line">ID=debian</span><br><span class="line">HOME_URL=<span class="string">&quot;https://www.debian.org/&quot;</span></span><br><span class="line">SUPPORT_URL=<span class="string">&quot;https://www.debian.org/support&quot;</span></span><br><span class="line">BUG_REPORT_URL=<span class="string">&quot;https://bugs.debian.org/&quot;</span></span><br></pre></td></tr></table></figure><p><code>touch</code> 新建文本文件，如<code>touch /home/hello.py</code> 将在<code>home</code> 文件夹下新建一个Python文件。</p><p><code>ls</code> 列出所有文件，但默认只是显示出最基础的文件和文件夹，如果需要更详细的信息，则使用<code>ls -la</code>，这将列出包括隐藏文件在内的所有文件和文件夹，并且给出对应的权限、大小和日期等信息。</p><p><code>cd</code> 进入指定文件夹，如<code>cd /home</code> 将进入<code>home</code>目录。返回上层目录的命令是<code>cd ..</code>，返回刚才操作的目录的命令是<code>cd -</code>。</p><p><code>mkdir</code> 新建文件夹，如<code>mkdir /home/Python</code> 将在<code>home</code> 文件夹下新建一个<code>Python</code> 文件夹。</p><p><code>mv</code> 移动文件和文件夹，也可以用来修改名称，如<code>mv /home/hello.py /home/helloworld.py</code> 将上文的<code>hello.py</code>重命名为<code>helloworld.py</code>，<code>mv /home/helloworld.py /home/Python/helloworld.py</code> 将<code>helloworld.py</code> 由<code>home</code>文件夹移动到了次级的<code>Python</code>文件夹。</p><p><code>cp</code> 复制文件，<code>cp /home/Python/hellowrold.py /home/Python/HelloWorld.py</code> 将<code>helloworld.py</code>复制为<code>HelloWolrd.py</code>。注意：Linux系统严格区分大小写，<code>helloworld.py</code>和<code>HelloWolrd.py</code>是两个文件。如果想复制整个文件夹，则需要带<code>r</code>，即<code>cp -r</code>，但此命令无法复制隐藏文件夹，需要使用<code>cp -r pathA/. pathB</code> 注意这个点<code>.</code>是灵魂。</p><p><code>rm</code> 删除，即江湖传说中<code>rm -rf</code> ，<code>r</code>为递归，可以删除文件夹中的文件，<code>f</code>为强制删除。<code>rm /home/Python/helloworld.py</code> 可以删除刚才的<code>helloworld.py</code> 文件，而想删除包括<code>Python</code> 在内的所有文件，则是<code>rm -rf /home/Python</code> 。</p><p><code>du -lh</code> 查看当前文件夹下，各文件、文件夹的大小，<code>l</code>是硬链接（软连接类似于快捷方式），<code>h</code>是让文件自动使用K&#x2F;M&#x2F;G显示而不是只有K。</p><h3 id="1-3-基础文本编辑器nano、vim"><a href="#1-3-基础文本编辑器nano、vim" class="headerlink" title="1.3 基础文本编辑器nano、vim"></a>1.3 基础文本编辑器nano、vim</h3><p>Linux系统的一大优势（同时也是劣势）是默认不需要GUI，因此节省了大量的性能开支，无GUI版本的Debian 11可以在512M甚至更小内存的VPS上正常启动和运行。但缺少GUI加大了入门者修改文件的难度，所幸Debian 11自带了简便易用的nano文本编辑器。以下以修改系统的更新源为例</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nano /etc/apt/sources.list  #打开sources.list文件，在Linux系统中，#是注释符，其后的内容会被忽略</span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/07/18/p9wvyg-2.webp" alt="nano_ui"></p><p>如图所示，即为<code>nano</code>打开<code>sources.list</code>后的界面，最下面两行为提示，比如<code>Ctrl+E</code>为退出，如果文档被改动了，则会出现下图，询问是否保存。如果没有被更改，则会直接退出。</p><p><img src="https://img.laoda.de/i/2022/07/18/pa2a3a-2.webp" alt="nano_ctrl_e"></p><p><code>Y</code>则保存，<code>N</code>则不保存，<code>Ctrl+C</code>取消操作。此处输入<code>Y</code>，则会如下图：</p><p><img src="https://raw.githubusercontent.com/uselibrary/Getting-Started-with-Linux/main/images/nano_yes.jpg" alt="nano_yes.jpg"></p><p>此时按下<code>Enter</code>键就会保存了。</p><p>这里多提一句关于Debian 11的更新源内容，一般是以下6行。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">deb http://deb.debian.org/debian bullseye main contrib non-free</span><br><span class="line">deb-src http://deb.debian.org/debian bullseye main contrib non-free</span><br><span class="line"></span><br><span class="line">deb http://deb.debian.org/debian-security/ bullseye-security main contrib non-free</span><br><span class="line">deb-src http://deb.debian.org/debian-security/ bullseye-security main contrib non-free</span><br><span class="line"></span><br><span class="line">deb http://deb.debian.org/debian bullseye-updates main contrib non-free</span><br><span class="line">deb-src http://deb.debian.org/debian bullseye-updates main contrib non-free</span><br></pre></td></tr></table></figure><p>deb表示为已经编译好的安装包，类似于Windows上的MSI安装包，deb-src是源文件，万一没有打包好，提供自己本地编译安装的机会。总共分三大行，第一行是系统主文件，第二行是安全性更新，第三个是一些更新补充，推荐三个都写上。在每行的末尾都有<code>main contrib non-free</code>字样，其中<code>main</code>是官方给的包&#x2F;源，严格遵守相关开源协议；<code>contrib</code>是包&#x2F;源本身遵守相关开源协议，但是它们的依赖则不是；<code>non-free</code>是私有的软件，比如上文提到的Realtek的WiFi驱动等。除此之外，其实还有个<code>Backports</code>作为第四大行，是将比较陈旧的软件移植过来的，很少会用到，一般默认不写上。</p><p>nano虽然好，但是功能简单，只适合一些简单的文本文件编辑功能，而发展自vi的vim则被成为编辑器之神（Emacs被称为神之编辑器，Linux之父Linus Torvalds就在用）。系统会自带vi但是不带vim，正好我们可以使用上述修改过的更新源来安装vim作为示例。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">apt update # 更新一下源</span><br><span class="line">apt install vim -y #安装vim这个软件 -y是确认安装</span><br></pre></td></tr></table></figure><p>使用<code>vim /etc/apt/sources.list</code>打开更新源文件，如下图所示：</p><p><img src="https://img.laoda.de/i/2022/07/18/pacmho-2.webp" alt="vim_ui"></p><p>vim功能众多，使用复杂，得慢慢说。左下角是此文件的路径和名称，右下角是光标此时的行数和列数。此时是无法直接输入，要先按下<code>insert</code>或者<code>i</code>键变成插入模式才行。此时，左下角如下图，变成了INSERT&#x2F;插入模式。</p><p><img src="https://img.laoda.de/i/2022/07/18/paeemg-2.webp" alt="vim_s1"></p><p>然后就是该怎么写就怎么写，一些快捷键去百度谷歌必应吧，说的肯定比我详细。但是必须提到如何保存文件：<code>insert</code>模式下按<code>esc</code>键（一般是键盘最左上角，99%的人可能都不怎么用的一个键），INSERT会消失不见，如下图：</p><p><img src="https://img.laoda.de/i/2022/07/18/pafzcv-2.webp" alt="vim_s3"></p><p>这个时候再按下<code>:</code>键，界面上也会出现一个冒号，如下图。注意，这个冒号是半角的，全角冒号是没用的。</p><p><img src="https://img.laoda.de/i/2022/07/18/pah4j0-2.webp" alt="vim_s2"></p><p>这个时候，按下<code>wq</code>这两个键，即可保存内容。w是write&#x2F;写入的意思，q是quit&#x2F;退出的意思。如果你不想保存，则只输入q键即可，但是有时候因为文件已经被修改了，vim不让退出，这时候输入<code>q!</code>就可以了，感叹号是强制执行的意思，执行后文件不会被修改并且会退出vim。</p><h3 id="1-4-更新系统"><a href="#1-4-更新系统" class="headerlink" title="1.4 更新系统"></a>1.4 更新系统</h3><p>至此，不管是使用nano还是vim都可以对更新源进行编辑了，让我们来具体了解一下如果更新系统和相关指令。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt list --upgradable</span><br><span class="line">apt upgrade -y</span><br></pre></td></tr></table></figure><p>以上三行，分别是和更新源同步，显示出哪些软件可以更新，以及进行更新。</p><p>如上文中，安装了vim，若想卸载vim，则有以下两个命令，任意一个即可，但之间存在差别。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">apt remove vim -y</span><br><span class="line">apt purge vim -y</span><br></pre></td></tr></table></figure><p>第一个会址卸载vim软件本身，配置文件仍然会本留下；第二种连带着配置文件和相关依赖一起卸载了，所以存在一定风险。除此之外，<code>apt autoremove</code>是对整个系统进行整理，将不需要的依赖卸载了，不针对于特定软件。</p><h2 id="2-SSH连接和基础配置"><a href="#2-SSH连接和基础配置" class="headerlink" title="2 SSH连接和基础配置"></a>2 SSH连接和基础配置</h2><p>一般VPS供应商都会提供SSH的链接方式，包括用户名，密码和端口号，一些注重安全性的会修改端口号甚至只有采用密钥才能登陆VPS。这里使用纯净版的系统和默认配置进行演示。</p><h3 id="2-1-连接SSH的软件和相关操作"><a href="#2-1-连接SSH的软件和相关操作" class="headerlink" title="2.1 连接SSH的软件和相关操作"></a>2.1 连接SSH的软件和相关操作</h3><p>SSH软件有开源的和不开源的，有付费的和免费的，整理了一个常见SSH客户端（Windows平台）的对比表格和相关信息。其实在2021年，macos、Linux和windows 10都自带SSH功能，这里先不讨论。个人目前主用mobaxterm，偶尔使用xshell。</p><table><thead><tr><th>名称</th><th>免费与否</th><th>下载地址</th></tr></thead><tbody><tr><td>Xshell</td><td>家庭&#x2F;学校免费</td><td><a href="https://www.netsarang.com/zh/free-for-home-school/">https://www.netsarang.com/zh/free-for-home-school/</a></td></tr><tr><td>MobaXterm</td><td>家庭版免费</td><td><a href="https://mobaxterm.mobatek.net/download.html">https://mobaxterm.mobatek.net/download.html</a></td></tr><tr><td>FinalShell</td><td>基础功能免费</td><td><a href="https://www.hostbuf.com/t/988.html">https://www.hostbuf.com/t/988.html</a></td></tr><tr><td>electerm</td><td>免费+开源</td><td><a href="https://github.com/electerm/electerm/releases">https://github.com/electerm/electerm/releases</a></td></tr><tr><td>PuTTY</td><td>免费+开源</td><td><a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html">https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html</a></td></tr></tbody></table><p>Xshell：传播广泛，自带中文，个人使用完全免费，但是会话窗口限制最多只能打开四个SSH连接，再多之后就会自动新建会话窗口了，传输文件需要配合Xftp才行。目前国区被臭名昭著的思杰马克丁代理了，如需使用，请前往官网下载，在输入邮件和姓名后，会收到一封邮件，邮件里面给出下载连接。</p><p>MobaXterm：只有英文版本，偶尔会反应慢半拍，除此之外没缺点。功能极其强大，传输文件、性能监控、串口通信、X11支持、IP检测、宏、WSL、远程桌面等，能想到的功能都有，而且个人使用免费。</p><p>FinalShell：国人开发，所以本地化很好，全中文，日常需要的功能也都有。有一些进阶功能需要付费，也可以云端保存SSH账号，虽然也是付费功能。缺点的话，和MobaXterm一样，JAVA写的东西，总是让人觉得慢半拍。</p><p>electerm：日常所需功能都有，完全开源和免费，还可以通过GitHub实现免费的云端保存SSH账号功能，适合自己折腾和魔改。基于electron开发的，从而实现了跨平台，Windows、Mac和Linux都有客户端。不过缺点也显而易见，electron本质上是个浏览器，占内存和硬盘空间。</p><p>PuTTY：由Simon Tatham开发和维护的，老牌中的老牌，但是缺少人性化设置，不推荐。</p><h3 id="2-2-SSH配置文件介绍和修改"><a href="#2-2-SSH配置文件介绍和修改" class="headerlink" title="2.2 SSH配置文件介绍和修改"></a>2.2 SSH配置文件介绍和修改</h3><p>SSH的配置文件在<code>/etc/ssh/sshd_config</code>中，是一个纯文本文件，可以使用<code>nano</code>或者<code>vim</code>打开和编辑。打开文件后，在前几行就能看到<code>#Port 22</code>字样，这个代表使用了默认的22端口作为SSH连接使用。因为大家都在使用22端口，所以会有一些扫描机器使用弱密码不断尝试登录，使用<code>lastb</code>命令可以查看登录失败的记录，如下图。233333是尝试登录的账号，144.214.xxx.xxx是发起者的IP，最后面是尝试登录的时间。</p><p><img src="https://img.laoda.de/i/2022/07/18/pajlyn-2.webp" alt="ssh_lastb"></p><p>因此，我们可以改成高端口，比如<code>35261</code>这种没有特殊含义&#x2F;排列的随机数，以减小被攻击的可能。要注意端口只能在0-65535之间，并且很多低位数的端口，已经被共识的程序占领了，比如80端口是http的，443端口是https的，就如22是SSH的一样。此处，我们修改<code>/etc/ssh/sshd_config</code>中的端口数后，还需要重启SSH服务才行，否则只会在系统下次重启后才启用新的端口。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl restart ssh #重启SSH服务</span><br></pre></td></tr></table></figure><p><code>systemctl</code>是systemd的命令，用于启动和监控系统服务的，在系统内核启动后，systemd就会开始服务，<code>restart</code>即重启的意思。关于systemd的相关内容，后文会详细说明。</p><p>除此之外，把密码改的复杂一些，也可以有效的降低系统被黑的风险，使用<code>passwd root</code>命令，即可修改root账号的密码，会提示<code>New password:</code>，此时输入新密码，注意这里是看不见任何输入反馈的，随后在显示<code>Retype new password:</code>后再次输入一遍，如果两次密码相同，就会更新root密码了。</p><h3 id="2-3-使用密钥登陆SSH"><a href="#2-3-使用密钥登陆SSH" class="headerlink" title="2.3 使用密钥登陆SSH"></a>2.3 使用密钥登陆SSH</h3><p>即使更改了端口，但因为使用密码即可登录，考虑到不是所有人都会使用强密码，所以SSH提供了使用密钥登录的功能，可以简单理解成是一长串复杂的并且可以相互验证的密码。以root用户为例，演示如何将SSH由密码登录改成密钥登录。</p><p>输入<code>ssh-keygen -t rsa </code>，随后一路enter键，如下图</p><p><img src="https://img.laoda.de/i/2022/07/18/pal0mq-2.webp" alt="ssh_key"></p><p>在显示完成后，在<code>/root/.ssh/</code>文件夹下，你将看到<code>id_rsa</code>和<code>id_rsa.pub</code>两个文件，id_rsa是私钥，下载下来并妥善保存，id_rsa.pub是公钥，放在服务器上的。将id_rsa.pub写入到SSH的密钥文件中：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">touch authorized_keys</span><br><span class="line">cat id_rsa.pub &gt;&gt; authorized_keys</span><br></pre></td></tr></table></figure><p>除此之外，还需要给文件和相关文件夹合适的权限：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">chmod 600 authorized_keys</span><br><span class="line">chmod 700 ~/.ssh</span><br></pre></td></tr></table></figure><p>这里有个<code>~</code>，它代表的是<code>当前用户</code>，比如现在是root用户，那<code>~</code>就是<code>root</code>，所以<code>chmod 700 ~/.ssh</code>等于<code>chmod 700 /root/.ssh</code></p><p>现在密钥已经配对好了，还需要修改SSH的配置文件，打开<code>/etc/ssh/sshd_config</code>文件，查找并修改如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PubkeyAuthentication yes # yes表示允许密钥登陆</span><br><span class="line">AuthorizedKeysFile      .ssh/authorized_keys .ssh/authorized_keys2 # 指定密钥的文件位置，这里是去掉了开头的#</span><br><span class="line">PasswordAuthentication no # 不允许使用密码登陆，等测试密钥登陆成功了再修改此条，以防无法登陆</span><br></pre></td></tr></table></figure><p>使用<code>systemctl restart ssh</code>重启SSH服务，此刻，你将只能使用密钥才能登录，一旦私钥遗失了，就再也进不去了。</p><h2 id="3-Linux文件系统"><a href="#3-Linux文件系统" class="headerlink" title="3 Linux文件系统"></a>3 Linux文件系统</h2><h3 id="3-1-文件系统格式"><a href="#3-1-文件系统格式" class="headerlink" title="3.1 文件系统格式"></a>3.1 文件系统格式</h3><p>与Windows分割硬盘（甚至一个硬盘被划分成了好几个）不同，Linux的是将所有硬盘都<code>挂载</code>在了一起。简单来说，Windows分C盘D盘等，还针对软盘额外给予了A盘和B盘，Linux把所有的硬盘都放在了<code>/</code>下，即<code>根目录</code>，这也是Linux中root账户的权限最大的原因，<code>root</code>即为根，如同树根一样，所有的内容都要基于根才有了可能。文件系统是另外一个极其复杂的内容，这里只提到Windows使用的是NTFS，而Linux普遍采用EXT4格式，这两种文件系统互不兼容，装在Linux系统上的硬盘，在Windows上是无法直接读写的，必须使用额外的软件才能访问。反过来，在Linux上读取Windows下的硬盘中的内容，需要安装<code>ntfs-3g</code>才行。这两种文件系统各有优缺点，一般人用就行了，不要问，问就是用默认。实际上，目前在广泛使用的文件系统种类繁多，所有需要在它们之间交换文件的时候，会使用exFAT格式的U盘&#x2F;硬盘（exFAT是FAT的替代品，因为FAT下单个文件最大不能超过4G）。</p><h3 id="3-2-文件树、文件夹功能和权限"><a href="#3-2-文件树、文件夹功能和权限" class="headerlink" title="3.2 文件树、文件夹功能和权限"></a>3.2 文件树、文件夹功能和权限</h3><p>在<code>/</code>目录下，使用<code>ls -la</code>会显示出所有的文件和文件夹（如下图所示），<code>a</code>是列出所有文件，<code>l</code>是显示详细信息。</p><p><img src="https://img.laoda.de/i/2022/07/18/panjq7-2.webp" alt="root_files"></p><p>第一列是文件&#x2F;文件夹的权限，一共有10个字符，第一位是文件类型，比如d代表文件夹，l代表链接。之后，三个为一组，总共3组。r是读，w是写，x是执行，也可以通过数字来区分，r是4，w是2，x是1，所以有了常见的一把梭<code>chmod +777</code>。第二列是硬链接数量，即这个文件&#x2F;文件夹下有多少真实放着的文件。第三列和第四列是这个件分别属于谁，以及这个人是哪个组的。这里的<code>组</code>概念来源于最开始的unix是个多用户系统，所有会把用户分类，比如某软件用户放一个组，系统维护人员放一个组等。第六列是文件&#x2F;文件夹大小，默认单位是K。第七八九列是修改的日期。最后一列是文件&#x2F;文件夹的名字。我们会发现有一些<code>-&gt;</code>的字样，这是指软链接。软连接类似于Windows上的快捷方式，而硬连接类似于复制了一份（但并不会真的占用空间）。</p><ul><li>bin或者usr&#x2F;bin：应用程序，比如Python的主程序就在这里</li><li>boot：系统启动文件</li><li>dev：外部硬件设备，Linux下一切皆文件，所以外部硬件设备也是以文件形式出现</li><li>etc：系统的配置文件，比如上述提到的SSH的配置文件就在这里</li><li>home：用户目录，类似于Windows上的桌面</li><li>initrd.img：启动文件，可以看到它被软连接到了boot目录中</li><li>lib：库文件，类似于Windows的dll，程序的依赖都在这里</li><li>lost+found：丢失寻找文件，系统被强迫关机后，会在这里记录下来</li><li>media：媒体文件，如果系统发现了光盘之类的，会自动挂载到这里</li><li>mnt：临时挂载目录，上述的光盘，还有U盘硬盘，如果手动挂载，都会选择这里</li><li>opt：系统额外软件的安装位置，极少使用，比如甲骨文的数据库会放一些东西在这里</li><li>proc：系统进程&#x2F;内核会把一些信息放到这里，本质上是反应系统状态而不是文件</li><li>root：root用户的“桌面”，普通用户在home中</li><li>run：系统启动后存放临时文件</li><li>sbin：root用户的”bin”</li><li>srv：放服务运行而需要的文件</li><li>sys：文件系统，里面包括进程信息，设备信息和终端信息</li><li>tmp：临时文件</li><li>usr：共享资源，类似于Windows安装软件的默认目录</li><li>var：不断变化的文件会放在这里，比如日志</li><li>vmlinuz：启动文件，可以看到它被软连接到了boot目录中</li></ul><p>如果我们自己写了一个程序，还放在系统里面运行，那一般是在<code>/usr/local/</code>中新建目录，这遵循着Linux系统的默认规则。</p><h3 id="3-3-示例：挂载U盘"><a href="#3-3-示例：挂载U盘" class="headerlink" title="3.3 示例：挂载U盘"></a>3.3 示例：挂载U盘</h3><p>如果是Ubuntu桌面的话，会自动挂载U盘，但是无GUI版本的Linux大概率不会，所以会需要手动挂载，又或者加了一块新的硬盘，需要我们自己挂载。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">fdisk -l</span><br><span class="line">mkdir /mnt/usb</span><br><span class="line">mount /dev/sda1 /mnt/usb</span><br><span class="line">umount /mnt/usb</span><br></pre></td></tr></table></figure><p><code>fdisk -l</code>是显示出所有的储存，会显示出来类似于<code>/dev/sda1</code>等，<code>mkdir /mnt/usb</code>在<code>mnt</code>目录里面新建一个文件夹，即挂载点，假设<code>sda1</code>就是我们插入的U盘，<code>mount /dev/sda1 /mnt/usb</code>将这块U盘挂载到了<code>/mnt/usb</code>中，这时候我们就能在<code>/mnt/usb</code>中看到U盘里的文件。如果不再需要了，要手动移除这个U盘，使用<code>umount /mnt/usb</code>命令。</p><h2 id="4-Shell-Dash入门"><a href="#4-Shell-Dash入门" class="headerlink" title="4 Shell&#x2F;Dash入门"></a>4 Shell&#x2F;Dash入门</h2><p>让人头大，Shell本身就能写一本书了，少说得有300页！这里面夹杂着从Unix开始的一大堆事情，shell的发展，bash和dash的区别与联系，本身的命令，调用系统的命令，交互方式。累了，姑且先把它当成一堆命令拼凑起来的脚本吧。</p><p>还是写个例子，简单介绍一下实际内容，等以后有时间了再继续补充。比如我们想写一个查看CPU和内存使用率的脚本：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">echo &quot;which useage do you want to konw?&quot;</span><br><span class="line">echo &quot;1 for CPU, 2 for RAM&quot;</span><br><span class="line">read choice</span><br><span class="line"></span><br><span class="line">if [ $choice -eq 1 ]</span><br><span class="line">then</span><br><span class="line">   echo &quot;CPU usage&quot;</span><br><span class="line">   grep &#x27;cpu &#x27; /proc/stat | awk &#x27;&#123;usage=($2+$4)*100/($2+$4+$5)&#125; END &#123;print usage &quot;%&quot;&#125;&#x27;</span><br><span class="line">elif [ $choice -eq 2 ]</span><br><span class="line">then</span><br><span class="line">   echo &quot;RAM usage&quot;</span><br><span class="line">   free -m | grep Mem | awk &#x27;&#123;print ($3/$2)*100 &quot;%&quot;&#125;&#x27;</span><br><span class="line">else</span><br><span class="line">   echo &quot;WRONG INPUT&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>细说每一行内容</p><p><code>#!/bin/bash</code>是指定此文件由&#x2F;bin下面的bash这个程序来执行。</p><p>在Debian 11里面，bash其实是dash，别问dash是什么，就写bash，天王老子来了也写bash。Bash全称是GNU Bourne-Again Shell，bash被从NetBSD（一个Unix的分支）上移植到Debian上，所以叫dash (Debian Almquist Shell)。</p><p><code>echo &quot;which useage do you want to konw?&quot;</code>是输出冒号内的文字</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;1 for CPU, 2 for RAM&quot;</span></span><br><span class="line"><span class="built_in">read</span> choice</span><br></pre></td></tr></table></figure><p>把输入内容赋值给<code>choice</code>这个变量，即数字1或者2。<code>rcho -p &quot;1 for CPU, 2 for RAM&quot; choice</code>也可以实现相同功能。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> [ ... ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line"><span class="keyword">elif</span> [ ... ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>这是一个if…elif…else的判断语句，先经过两次判断，如果都不能成功，那就执行最后一行。</p><p><code>$choice -eq 1</code>把刚才的<code>choice</code>这个输入变量和数字1对比，注意，要有<code>$</code>才代表变量，不然就默认是文字，<code>-eq</code>是等于的意思。判断是否等于1，是的话就给出CPU使用量，如果不等于1，那就继续判断是否等于2，是的话就给出RAM使用量，如果不等于2，那就输出错误提醒，然后结束。<code>grep</code>是抓取有关键词的那一行，<code>$2</code>是这一行的第几个内容，如下：</p><p><img src="https://raw.githubusercontent.com/uselibrary/Getting-Started-with-Linux/main/images/grep.jpg" alt="grep"></p><p><code>grep Mem</code>抓取到了第二行，即真实内存这一行，<code>$2</code>是内存总量，<code>$3</code>是已经使用了的内存，因此<code>($3/$2)*100</code>就是已经使用了百分之多少的内存，</p><h2 id="5-Crontab定时任务"><a href="#5-Crontab定时任务" class="headerlink" title="5 Crontab定时任务"></a>5 Crontab定时任务</h2><p>Crontab用于定时任务，比如设定周五晚上运行脚本备份网站，又或者每分钟检查一下CPU使用率等。但除此之外，crontab还有个<code>@reboot</code>功能，即可以在系统启动的时候自动运行指定程序。</p><p>推荐<code>crontab -e</code>，其中的<code>-e</code>是指当前用户，不建议直接使用<code>crontab</code>。首次运行<code>crontab -e</code>的时候，会让选择使用何种编辑工具，这个随便，nano和vim basic都行，什么顺手和习惯就用什么。</p><p><img src="https://raw.githubusercontent.com/uselibrary/Getting-Started-with-Linux/main/images/crontab_eg.jpg" alt="crontab_eg"></p><p>如上图，将每隔15分钟，就会使用位于<code>usr/bin</code>中的<code>python3</code>运行位于<code>/usr/local/weather</code>中的<code>weather.py</code>程序。前五个星号其实是设置的时间，推荐去 <a href="https://crontab.guru/">https://crontab.guru/</a> 这里直接设置时间（如下图）。第一个星号是分钟，第二个星号是小时，第三个星号是天，第四个星号是月份，第五个星号是每周的第几天。</p><p><img src="https://img.laoda.de/i/2022/07/18/paym1a-2.webp" alt="crontab_set"></p><h2 id="6-系统权限"><a href="#6-系统权限" class="headerlink" title="6 系统权限"></a>6 系统权限</h2><h3 id="6-1-root和user，以及sudo"><a href="#6-1-root和user，以及sudo" class="headerlink" title="6.1 root和user，以及sudo"></a>6.1 root和user，以及sudo</h3><p>上述已经简单的介绍了root来源，由于root的权限太高，以至于在实际使用中发现并不安全，而且作为一个初始目的是多用户多终端的操作系统，Linux主要操作都不需要发生在root用户上的。所以这里就有了user这个角色，如果用户多了起来，为了便于管理，也会把某些用户分组，就有了group的概念。以下演示使用root用户新建一个user用户并进入此用户：</p><p><img src="https://img.laoda.de/i/2022/07/18/pazxq3-2.webp" alt="adduser"></p><p>如图所示，<code>adduser mjj</code>为新建一个叫做mjj的用户，由于此前并没有除了root之外的用户，所以会使用这个名字作为group&#x2F;组的名字，并且在&#x2F;home文件夹里面生成一个mjj文件夹，即mjj的”桌面“。所以输入两次密码，之后会问一堆问题，都是例行的，一路enter就好，最后会问一下信息对不对，输入y就完成添加新用户了。</p><p>但此时，mjj这个用户的权限是很小的，四舍五入等于没有，连某些文件夹都不能进去更别说执行软件了。使用<code>su mjj</code>切换到mjj用户中，可以在终端中看到已经从root@rn变成了mjj@rn，rn是这台服务器的名字，即为某某在rn这台服务器上。查看以下root文件夹下有些什么东西，结果发现权限不够而被拒绝访问&#x2F;Permission denied。</p><p><img src="https://img.laoda.de/i/2022/07/18/pb154c-2.webp" alt="sudo"></p><p>所以我们要给一个能够临时使用root权限的能力，这被称为<code>sudo</code>。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">su root #切换回root账号</span><br><span class="line">apt install sudo -y #有些时候，纯净安装的Debian系统是没有sudo的，所以要安装一下</span><br><span class="line">usermod -aG sudo mjj ##给予mjj用户sudo权限</span><br></pre></td></tr></table></figure><p>此时，我们再切换到mjj用户上，在刚才的命令前加上sudo，临时获取root权限，就可以查看了：</p><p><img src="https://img.laoda.de/i/2022/07/18/pb2hh4-2.webp" alt="sudo_root"></p><p>在用户首次使用root权限的时候，系统会提示三个准则，也请谨记：</p><ol><li>尊重他人隐私；</li><li>输入之前请三思；</li><li>能力越大，责任越大。</li></ol><h3 id="6-2-chmod和chown"><a href="#6-2-chmod和chown" class="headerlink" title="6.2 chmod和chown"></a>6.2 chmod和chown</h3><p>chmod的全称是change mode，是针对于文件夹或者文件，改变它们的权限，这样就可以让某些用户正常使用了。这里不深入探讨chmod的使用详解，仅演示一些常见的内容。<code>chmod +x helloworld.py</code> 这里的<code>x</code>在上面说过，是执行的意思，即赋予此程序被执行的权限，多见于一键脚本里面，让脚本能够正常运行。<code>+</code>是新增权限，如果是<code>-</code>则是去除对应的权限。<code>chmod -R 755 folder/</code> <code>-R</code>如上述的<code>rm -rf</code>中的<code>r</code>一样，是递归，即从这里开始，下面不论多少层文件夹，都执行这个命令。<code>755</code>是换算下来，则是root用户可以读写执行（1+2+4&#x3D;7），用户和用户组只能读和执行（1+4&#x3D;5），不能对文件进行更改。某些程序会对文件的权限有着极其严重的控制，比如上说的SSH密钥，分别给<code>authorized_keys</code>600的权限和<code>.ssh</code>文件夹700的权限，意味着只能被所有者&#x2F;owner读写，在例子中即为只能被root账户读写。这种设计让没有相应权限的人无法修改密钥登陆的方式，换而言之，隔绝了用户之间的操作，从而增强安全性。</p><p>chown的全称是change owner，是用于设置文件所有权的。由于<code>归属者</code>的概念并没有文件这个概念常见，所有chown比较少见到，大多数人接触到的时候，大概是建网站的时候用<code>chown -R www-data:www-data-group /var/www/html</code>来确定文件关联。这句的意思是，将<code>/var/www/html</code>这个文件夹及里面的所有文件都归给<code>www-data-group</code>用户组的<code>www-data</code>用户。这样做的目的是实现权限分离，文件分离，从而让服务器可以更方便的被维护，以及明确使用途径。不过考虑到mjj大部分都是使用VPS的，可能很难遇到需要chown的情况吧。</p><p>不要<code>chmod +777</code>！不要<code>chmod +777</code>！不要<code>chmod +777</code>！<strong>人才是服务器安全的最大漏洞！</strong></p><h2 id="7-Systemd入门和配置"><a href="#7-Systemd入门和配置" class="headerlink" title="7 Systemd入门和配置"></a>7 Systemd入门和配置</h2><h3 id="7-1-开机自启和进程守护"><a href="#7-1-开机自启和进程守护" class="headerlink" title="7.1 开机自启和进程守护"></a>7.1 开机自启和进程守护</h3><p>Systemd是由Redhat家的Lennart Poettering开发的，其人以创造性和不靠谱闻名，Systemd在最开始的时候，和init相比没有明显优势，经过多次迭代才有了今天的稳定性和适用性，现在就让老旧的init进入历史垃圾桶吧。事实上，在Linux系统启动的时候，一旦kernel运行了，Systemd就会跟随启动，之后由Systemd唤醒并维护各个程序的正常运行，比如网卡，显示器，SSH服务等。你会在<code>/etc/systemd/system/</code>文件夹中发现一个叫做<code>sshd.service</code>的文件，并且还是enable模式的，这意味着SSH是<code>开机自启</code>的，并且系统会一直监控这这个程序，如果程序崩溃，系统会尝试自动重启它以确保能够正常运行。</p><p>以著名的内网穿透<code>frp</code>的服务器端的Systemd文件为例（下节将详细介绍如何搭建frp），将<code>frps.service</code>放到<code>/etc/systemd/system/</code>文件夹中，使用以下命令</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl enable frps.service</span><br><span class="line">systemctl start frps.service</span><br><span class="line">systemctl status frps.service</span><br><span class="line">systemctl restart frps.service</span><br></pre></td></tr></table></figure><p>systemctl是systemd在系统中的程序名字，enable是指让这个程序能够开机自启，start为让程序现就运行，status是查看这个程序现在的状态，restart是重启程序。</p><p>当然，我们也可以自己写systemd的service文件，这里以 <a href="https://github.com/cnsilvan/UnblockNeteaseMusic">https://github.com/cnsilvan/UnblockNeteaseMusic</a> 解锁网易云音乐的程序做参考</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=UnblockNeteaseMusic</span><br><span class="line">After=network.target</span><br><span class="line">Wants=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">WorkingDirectory=/usr/local/UnblockNeteaseMusic</span><br><span class="line">ExecStart=/usr/bin/node app.js -e http://music.163.com -s -p 8888</span><br><span class="line">RestartPreventExitStatus=23</span><br><span class="line">Restart=always</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>一共分为三组，分别为Unit，Service和Install。Unit是这个服务的名称，示例中为<code>UnblockNeteaseMusic</code>而<code>After</code>和<code>Wants</code>指明的<code>network.target</code>意味希望这个程序在网络服务启动后再启动，毕竟是个网络功能，不能还没有网就启动了。Service是核心部分，<code>Type</code>指定了类型,<code>Simple</code>是默认的类型，发现有网了就启动。此外，常见的还有<code>fork</code>和<code>idle</code>，前者意味着程序依赖于另外一个程序的运行，通常还会配置<code>PIDFile</code>，后者是等系统空闲了再启动，属于一点都不急的。<code>WorkingDirectory</code>是工作目录，<code>ExecStart</code>是执行的命令，实例中，是用位于<code>/usr/bin/</code>的nodejs执行位于工作目录的<code>app.js</code>这个文件，并且还带了参数<code>http://music.163.com -s -p 8888</code>。<code>RestartPreventExitStatus</code>是指如果报错信息为<code>23</code>则不会再重启了，具体报错信息是运行的程序决定的。<code>Restart=always</code>指只要不是23的报错信息，那就一旦服务停了，Systemd就会去重启。最后一部分，Install中的<code>WantedBy=multi-user.target</code>指网络服务已经正常启动，也可以让用户登录了，但是并没有开启GUI服务，这个部分不用去探究。</p><h3 id="7-2-Timer代替Crontab"><a href="#7-2-Timer代替Crontab" class="headerlink" title="7.2 Timer代替Crontab"></a>7.2 Timer代替Crontab</h3><p>我写了一个自动登录百度贴吧并签到的shell脚本，想每天都运行一次帮我拿积分，但是又不想用crontab实现定时任务，那么Systemd也是有类似的功能的，名字叫做Timer，即定时器。这个功能需要两个文件，比较繁琐。</p><p>需要再<code>/etc/systemd/system/</code>中写两份配置文件，<code>tieba.service</code>和<code>tieba.timer</code>，前缀必须一样，后缀不同。</p><p>前者很简单，就是个脚本（如下），名字和程序的路径：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Tieba Sign</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/home/tieba.sh</span><br></pre></td></tr></table></figure><p>后者<code>tieba.timer</code>需要详细解释：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Tieba Sign Timer</span><br><span class="line"></span><br><span class="line">[Timer]</span><br><span class="line">OnCalendar=*-*-* 12:00:00</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=timers.target</span><br></pre></td></tr></table></figure><p>Timer的名称需要是service名字后面加一个Timer，用以提高准确性。<code>OnCalendar</code>类似于<code>corntab</code>的<code>* * * * *</code>，实例中的意味每天中午12点的时候执行以下<code>tieba.service</code>中的位于<code>/home</code>文件夹的<code>tieba.sh</code>这个程序。此处的<code>WantedBy</code>是<code>timers.target</code>，指明是个定时器。</p><h2 id="8-手动配置系统：以frp为例"><a href="#8-手动配置系统：以frp为例" class="headerlink" title="8 手动配置系统：以frp为例"></a>8 手动配置系统：以frp为例</h2><p>frp是个内网穿透软件，可以将局域网设备通过frp服务端映射出来，实现公网服务，常见的有SSH、http&#x2F;https服务等。这里以将内网设备的SSH映射到有公网IP的服务器上为例，从而不在家也能服务家里面的服务器了。</p><p>在这里下载最新版的安装包 <a href="https://github.com/fatedier/frp/releases">https://github.com/fatedier/frp/releases</a> </p><p><img src="https://img.laoda.de/i/2022/07/18/pb4r7w-2.webp" alt="frp_tar"></p><p>如图所示，0.38.0是版本号；后面的是系统，darwin是MacOS，freebsd是UNIX的一个分支，这里我们选择linux；紧跟着的是CPU架构，由于本次服务器的客户端是装了64位系统的树莓派4B（arm架构的CPU），所以选择<code>frp_0.38.0_linux_arm64.tar.gz</code>，而服务端是普通的VPS，所以选择<code>frp_0.38.0_linux_amd64.tar.gz</code>。</p><p><strong>服务端配置</strong></p><p>注意：版本号和CPU架构须按照实际情况决定。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://github.com/fatedier/frp/releases/download/v0.38.0/frp_0.38.0_linux_amd64.tar.gz</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用wget下载软件包</span></span><br><span class="line">tar -zxvf frp_0.38.0_linux_amd64.tar.gz</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">解压下载的软件包</span></span><br><span class="line">cd frp_0.38.0_linux_amd64/</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入解压后的文件夹</span></span><br><span class="line">mkdir /etc/frp/</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">新建一个frp的文件夹</span></span><br><span class="line">mv frps.ini /etc/frp/frps.ini</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">把服务器端的配置文件放到刚才新建的文件夹</span></span><br><span class="line">mv frps /bin/</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">把服务器端软件放到/bin中</span></span><br><span class="line">mv systemd/frps.service /etc/systemd/system/frps.service</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">放置Systemd文件</span></span><br><span class="line">systemctl enable frps.service</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置开机自启</span></span><br><span class="line">systemctl start frps.service</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">立即运行</span></span><br></pre></td></tr></table></figure><p><strong>客户端配置</strong></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://github.com/fatedier/frp/releases/download/v0.38.0/frp_0.38.0_linux_arm.tar.gz</span><br><span class="line">tar -zxvf frp_0.38.0_linux_arm.tar.gz</span><br><span class="line">cd frp_0.38.0_linux_arm/</span><br><span class="line">mkdir /etc/frp/</span><br><span class="line">mv frpc.ini /etc/frp/frpc.ini</span><br><span class="line">mv frpc /bin/</span><br><span class="line">mv systemd/frpc.service /etc/systemd/system/frpc.service</span><br></pre></td></tr></table></figure><p>上述与服务器配置类似，就不重复了，但需要额外修改服务端的配置文件，让它知道该和谁连接，打开<code>/etc/frp/frpc.ini</code>配置文件</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr = 服务器ip</span><br><span class="line">server_port = 7000</span><br><span class="line"></span><br><span class="line">[raspi]</span><br><span class="line"><span class="built_in">type</span> = tcp</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">local_port = 本地服务器的SSH端口</span><br><span class="line">remote_port = 远程端口</span><br></pre></td></tr></table></figure><p>其中，需要填写服务器端的IP，7000端口是握手和保活用的，默认就好了。<code>[raspi]</code>是客户端的名字，不可以重复，<code>local_port</code>是客户端的SSH端口，<code>remote_port</code>是远程的端口，此处假设是6000。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl enable frpc.service</span><br><span class="line">systemctl start frpc.service</span><br></pre></td></tr></table></figure><p>设置开机自启并立即运行，此时在SSH软件上，通过 <code>服务器IP:6000 </code>就可以连接到这台内网的树莓派了。</p><h2 id="9-网站环境搭建"><a href="#9-网站环境搭建" class="headerlink" title="9 网站环境搭建"></a>9 网站环境搭建</h2><p>网站搭建，说简单也简单，安装一个nginx放个html页面就算是了，但也可以做的极其复杂以至于需要一个团队，比如淘宝。这里提供了两个搭建网站的方法：面板和手动搭建。对于小白用户，还是推荐用用面板吧，不然出问题，网站被黑都不知道如何解决。</p><h3 id="9-1-宝塔解人忧"><a href="#9-1-宝塔解人忧" class="headerlink" title="9.1 宝塔解人忧"></a>9.1 宝塔解人忧</h3><p>宝塔面板是个伪开源的一键式建站面板，国内版可以在 <a href="https://www.bt.cn/">https://www.bt.cn/</a> 中找到安装方式，目前的安装命令是<code>wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh</code> 。需要注意的是，国内版需要登陆并且验证手机号后才能操作，宝塔也有强制后台升级的前科。</p><p><img src="https://img.laoda.de/i/2022/07/18/pb749j-2.webp" alt="aapanel"></p><p>除此之外，还有国际版的叫做aapanel，安装地址为 <a href="https://www.aapanel.com/install.html">https://www.aapanel.com/install.html</a> ，安装命令是<code>wget -O install.sh http://www.aapanel.com/script/install_6.0_en.sh &amp;&amp; bash install.sh</code>。相对而言，国际版的隐私保护会更好一些，不会要求手机号等信息，但是默认语言是英文，如果会哪怕一点点英文，都推荐使用国际版的。</p><p>宝塔有一点不好的地方是动辄编译（原先是在CentOS上开发的，所以有这个臭毛病），面板是python3写的，安装起来很快，但是要安装一些服务的话，如果VPS性能不好，则需要花费相当长一段时间来编译安装，普遍30分钟起步。</p><h3 id="9-2-手动搭建"><a href="#9-2-手动搭建" class="headerlink" title="9.2 手动搭建"></a>9.2 手动搭建</h3><p>宝塔面板是将网站搭建可视化了，本质上和手动搭建没有区别。这里主要是介绍常见的相关软件和Let’s Encrypt配置SSL证书的方法。</p><h4 id="9-2-1-Apache和Nginx"><a href="#9-2-1-Apache和Nginx" class="headerlink" title="9.2.1 Apache和Nginx"></a>9.2.1 Apache和Nginx</h4><p>Apache和Nginx都是Web服务器。前者是老牌Web服务器软件，对PHP有着优秀的支持，并且动态响应优秀，但是对性能和内存要求高。后者是俄罗斯出品，对静态网站支持良好，性能消耗也更小，反代和简单的网站都倾向于使用Nginx，甚至还有一系列基于Nginx衍生出来的版本，比如Tengine就是淘宝从Nginx衍生出来的，用以支撑淘宝的各种服务。除此之外，还有个Caddy也用的比较多，这是由golang语言写出来的，所以对多线程高并发的支持很好，并且自带SSL证书申请的功能。</p><p>入门用户首选Nginx，毕竟网站没有什么服务，对VPS的性能消耗也少点。当然，选择Apache也完全可以，入门用户其实很难用到需要对比选择Apache和Nginx的时候。Caddy的话，先不推荐入门用户了。</p><p>安装Apache使用以下命令</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">apt install apache2</span><br></pre></td></tr></table></figure><p>安装Nginx使用以下命令</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install nginx</span><br></pre></td></tr></table></figure><p>这两个软件安装完后，都会开机自启和立刻运行，浏览器中输入<code>http://ip</code>就可以看到默认的网页，比如Nginx的是这样：</p><p><img src="https://raw.githubusercontent.com/uselibrary/Getting-Started-with-Linux/main/images/nginx.jpg" alt="nginx"></p><h4 id="9-2-2-PHP"><a href="#9-2-2-PHP" class="headerlink" title="9.2.2 PHP"></a>9.2.2 PHP</h4><p>安装了Nginx之后，可以实现静态网页，但是常见的网站平台，比如Wordpress和typecho都是PHP写的，所以还需要安装PHP才能运行。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">apt install php-fpm</span><br></pre></td></tr></table></figure><p>安装完php还不算完事，还得让Nginx知道，也就是需要更改Nginx的配置文件。</p><p>进入目录<code>/etc/nginx/sites-available/</code>中，将默认的文件<code>default</code>重命名为网站的域名，比如<code>mjj.hostloc.com</code>，即<code>mv default mjj.hostloc.com</code>，打开<code>mjj.hostloc.com</code>，在下述的第二行末尾加入<code>index.php</code></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Add index.php to the list if you are using PHP</span></span><br><span class="line">index index.html index.htm index.nginx-debian.html index.php; <span class="comment"># 注意加入了index.php</span></span><br></pre></td></tr></table></figure><p>并且将下述的<code>_</code>改成网站域名</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">server_name _;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">改成 server_name mjj.hostloc.com;</span></span><br></pre></td></tr></table></figure><p>随后，重新软链接，并重启Nginx</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">rm</span> /etc/nginx/sites-enabled/default</span><br><span class="line"><span class="built_in">ln</span> -s /etc/nginx/sites-available/mjj.hostloc.com /etc/nginx/sites-enabled/mjj.hostloc.com</span><br><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure><p>注意域名不要填错了，重启完后，Nginx将能够和PHP一起支持动态网站。</p><h4 id="9-2-3-MySQL和MariaDB"><a href="#9-2-3-MySQL和MariaDB" class="headerlink" title="9.2.3 MySQL和MariaDB"></a>9.2.3 MySQL和MariaDB</h4><p>MySQL是一个市场占有率极大的数据库软件，应用场景极其广泛，最开始是SUN公司开发的，2009年被甲骨文收购。甲骨文作恶多端，所以MySQL的一部分作者则独立出来，直接做了一个复刻版的，被命名为MariaDB，Maria是作者女儿的名字，Linux社区逐步放弃MySQL而采用MariaDB。所以在近期发布的各Linux版本中，默认是没有MySQL的，一律采用MariaDB。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install mariadb-server <span class="comment"># 安装数据库</span></span><br><span class="line">mysql_secure_installation <span class="comment"># 首次配置</span></span><br></pre></td></tr></table></figure><p>由于是首次使用，所以在如下提示中，直接enter键就可以了，因为数据库的root用户此时并没有密码</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">NOTE: RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MariaDB</span><br><span class="line">      SERVERS IN PRODUCTION USE!  PLEASE READ EACH STEP CAREFULLY!</span><br><span class="line"></span><br><span class="line">In order to <span class="built_in">log</span> into MariaDB to secure it, we<span class="string">&#x27;ll need the current</span></span><br><span class="line"><span class="string">password for the root user.  If you&#x27;</span>ve just installed MariaDB, and</span><br><span class="line">you haven<span class="string">&#x27;t set the root password yet, the password will be blank,</span></span><br><span class="line"><span class="string">so you should just press enter here.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Enter current password for root (enter for none): </span></span><br></pre></td></tr></table></figure><p>随后，会询问是否要设置数据库的root密码，怎么说呢，反正就建个站而已（不涉及多用户多服务），有没有无所谓，我习惯性的不设置（输入N）</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">OK, successfully used password, moving on...</span><br><span class="line"></span><br><span class="line">Setting the root password ensures that nobody can <span class="built_in">log</span> into the MariaDB</span><br><span class="line">root user without the proper authorisation.</span><br><span class="line"></span><br><span class="line">Set root password? [Y/n] N</span><br></pre></td></tr></table></figure><p>现在，新建一个用户和对应的数据库</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql <span class="comment"># 进入数据库，如果有root密码，则是mysql -u root -p</span></span><br><span class="line"></span><br><span class="line">CREATE DATABASE name; <span class="comment"># 新建数据库，name是数据库名字</span></span><br><span class="line">Query OK, 1 row affected (0.00 sec) <span class="comment">#此段为mySQL反馈提示，不需要输入。</span></span><br><span class="line"></span><br><span class="line">CREATE USER user@localhost; <span class="comment"># 新建用户，user是用户名字</span></span><br><span class="line">Query OK, 0 rows affected (0.00 sec) <span class="comment">#此段为mySQL反馈提示，不需要输入。</span></span><br><span class="line"></span><br><span class="line">SET PASSWORD FOR user@localhost= PASSWORD(<span class="string">&quot;密码&quot;</span>); <span class="comment"># 给用户设置一个密码</span></span><br><span class="line">Query OK, 0 rows affected (0.00 sec) <span class="comment">#此段为mySQL反馈提示，不需要输入。</span></span><br><span class="line"></span><br><span class="line">GRANT ALL PRIVILEGES ON name.* TO user@localhost IDENTIFIED BY <span class="string">&#x27;密码&#x27;</span>; <span class="comment"># 把name这个数据库和user这个用户关联</span></span><br><span class="line">Query OK, 0 rows affected (0.00 sec) <span class="comment">#此段为mySQL反馈提示，不需要输入。</span></span><br><span class="line"></span><br><span class="line">FLUSH PRIVILEGES; <span class="comment"># 完成设置</span></span><br><span class="line"><span class="built_in">exit</span> <span class="comment"># 退出数据库</span></span><br></pre></td></tr></table></figure><h4 id="9-2-4-Let’s-Encrypt，SSL-TLS"><a href="#9-2-4-Let’s-Encrypt，SSL-TLS" class="headerlink" title="9.2.4 Let’s Encrypt，SSL&#x2F;TLS"></a>9.2.4 Let’s Encrypt，SSL&#x2F;TLS</h4><p>http连接，由于不是加密的，所以任何人都可以查看内容，这对于一些金融服务有着巨大的危害，比如使用信用卡在网上购物的时候，账号和密码会被获知。所以网景（Firefox浏览器的前身）提出了SSL（安全套接层&#x2F;Secure Sockets Layer）这个概念（后来演变升级为TLS，即传输层安全性协议&#x2F;Transport Layer Security），http变成了https，电脑会内置证书，而网站也会有一个证书，只有两者相互验证成功，才能正常浏览玩网页，并且全程加密（DNS部分并不是加密的，所以有个DoH，dns over https）。</p><p>SSL&#x2F;TLS证书是个垄断行业，电脑内置的证书就那么几家，如果想网站被大多数浏览器&#x2F;系统接受，那就只能去申请其中某家的证书，这里面层层签发转售，几近无本万利。不过好在还是有很多免费的SSL&#x2F;TLS证书的，比如Let’s Encrypt提供三个月的免费证书，而亚洲诚信通过第三方公司，提供一年免费的证书。这里以Let’s Encrypt为例演示，相关链接为 <a href="https://certbot.eff.org/instructions">https://certbot.eff.org/instructions</a> ：</p><p><img src="https://img.laoda.de/i/2022/07/18/pcc8wg-2.webp" alt="ssl_tls"></p><p>Let’s Encrypt提供的SSL&#x2F;TLS工具叫做cerbot，可以通过snap或者pip安装。snap是Ubuntu强推的一种软件部署和软件包管理系统，把所有需要的东西都放一起。pip是通过python3的pip安装，pip和snap没有功能上的区别，不想被Ubuntu强推就使用pip。</p><p><strong>snap安装cerbot申请SSL&#x2F;TLS证书</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install snapd</span><br><span class="line">snap install core</span><br><span class="line">snap refresh core</span><br><span class="line">snap install --classic certbot</span><br><span class="line"><span class="built_in">ln</span> -s /snap/bin/certbot /usr/bin/certbot</span><br><span class="line">certbot --nginx</span><br></pre></td></tr></table></figure><p>然后按照提示，输入邮箱和同意服务协议，并且在提示域名的时候，注意不要输错。</p><p><strong>pip安装cerbot申请SSL&#x2F;TLS证书</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install python3 python3-venv libaugeas0</span><br><span class="line">python3 -m venv /opt/certbot/</span><br><span class="line">/opt/certbot/bin/pip install --upgrade pip</span><br><span class="line">/opt/certbot/bin/pip install certbot certbot-nginx</span><br><span class="line"><span class="built_in">ln</span> -s /opt/certbot/bin/certbot /usr/bin/certbot</span><br><span class="line">certbot --nginx</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;0 0,12 * * * root /opt/certbot/bin/python -c &#x27;import random; import time; time.sleep(random.random() * 3600)&#x27; &amp;&amp; certbot renew -q&quot;</span> | sudo <span class="built_in">tee</span> -a /etc/crontab &gt; /dev/null</span><br></pre></td></tr></table></figure><p>相比于snap自动每三个月更新证书，pip需要通过crontab加一个定时任务（上述最后一行），另外，也需要偶尔检查以下certbot有没有更新，即使用此命令<code>/opt/certbot/bin/pip install --upgrade certbot certbot-nginx</code></p><h2 id="10-Docker快速入门"><a href="#10-Docker快速入门" class="headerlink" title="10 Docker快速入门"></a>10 Docker快速入门</h2><p>Docker的本意是“码头工人”，即搬运别人打包好的集装箱。之所以取这个名字，是因为Docker的功能与此类似：将系统和里面的应用一起打包好，别人“搬走”就能直接使用——可以将Docker粗略的理解成一个包含了系统和应用的虚拟机（严格来说，Docker是使用了沙箱机制的虚拟化容器）。常见的例子就是别人把某一个软件配置好了，用户直接下载下来，简单设置一下就可以使用了，不需要繁杂的配置过程，所以在批量服务中有着广泛的应用场景。Docker分为社区版&#x2F;CE（Community Edition，免费的）和企业版&#x2F;EE（Enterprise Edition，收费的），两者功能无本质区别，以下默认使用社区版。</p><h3 id="10-1-安装Docker环境"><a href="#10-1-安装Docker环境" class="headerlink" title="10.1 安装Docker环境"></a>10.1 安装Docker环境</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">apt update # 同步更新源</span><br><span class="line">apt install -y ca-certificates curl gnupg lsb-release # 安装必要依赖软件</span><br></pre></td></tr></table></figure><p>添加GPG密钥，注意这里和上面一样，必须是root权限（如下命令）。这里简单介绍一下GPG，全称是GnuPG，真·全称是GNU Privacy Guard，一个密码学软件，用来验证通信中的安全性，防止传输过程中被篡改，前身是Pretty Good Privacy&#x2F;PGP。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg</span><br></pre></td></tr></table></figure><p>选择使用稳定版，如果需要nightly或者test版，可以把下面的stable改成对应的版本。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">echo &quot;deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable&quot; | tee /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br></pre></td></tr></table></figure><p>更新并安装Docker</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt install -y docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure><p>期间会下载几百兆的文件，网络不好的话，可能会需要一段时间，当完成安装后，使用<code>docker run hello-world</code>命令来测试功能是否正常，理论上会输出下图内容：</p><p><img src="https://img.laoda.de/i/2022/07/18/pcf08t-2.webp" alt="docker_hello"></p><p>至此，系统已经安装好了Docker环境，可以自己写一个Docker的应用，或者直接拉取别人写好的为自己所用。</p><h3 id="10-2-安装别人打包好的的Docker"><a href="#10-2-安装别人打包好的的Docker" class="headerlink" title="10.2 安装别人打包好的的Docker"></a>10.2 安装别人打包好的的Docker</h3><p>先说一下常用的Docker命令，然后以安装Docker版本的Nextcloud为例。Nextcloud是一个开源的网盘系统，类似于私有版本的百度云，可以自己搭建从而确保数据都在自己手上而不会被8秒。</p><h4 id="10-2-1-常用Docker命令"><a href="#10-2-1-常用Docker命令" class="headerlink" title="10.2.1 常用Docker命令"></a>10.2.1 常用Docker命令</h4><p><code>docker ps</code> 列出所有正在运行的容器，如果需要查看所有的容器（包括未运行或者启动失败的）则使用<code>docker ps -la</code>，这点类似于<code>ls</code>和<code>ls -la</code>的区别。</p><p><code>docker start/stop/restart CONTAINER ID</code> 开启&#x2F;停止&#x2F;重启特定容器，后面要加上指定的ID，CONTAINER ID见下文。</p><p><code>docker rm CONTAINER ID</code> 删除容器，如果是删除镜像，则需要把rm换成rmi</p><h4 id="10-2-2-安装Docker版Nextcloud"><a href="#10-2-2-安装Docker版Nextcloud" class="headerlink" title="10.2.2 安装Docker版Nextcloud"></a>10.2.2 安装Docker版Nextcloud</h4><p>在 <a href="https://hub.docker.com/">https://hub.docker.com/</a> 中直接搜索Nextcloud，找到官方版本的镜像，点击进去，在右侧有拉取镜像的命令，直接运行即可。</p><p><img src="https://img.laoda.de/i/2022/07/18/pceqp4-2.webp" alt="docker_nextcloud"></p><p>安装过程中会下载各个组件，等全部显示Pull conplete即表示下载完成，之后会自动校验并提示完成。</p><p><img src="https://img.laoda.de/i/2022/07/18/pcgbxs-2.webp" alt="docker_pull_nextcloud"></p><p>使用<code>docker run -d -p 80:80 nextcloud</code> 运行，此时使用<code>docker ps</code>可以查看到具体的详细信息</p><p><img src="https://raw.githubusercontent.com/uselibrary/Getting-Started-with-Linux/main/images/docker_nextcloud_status.jpg" alt="docker_nextcloud_status"></p><p>CONTAINER ID类似于身份证号码；IMAGE是身份证上的姓名；COMMAND是实际运行的程序；CREATED是创建的时间；STATUS是此时的运行状态；PORTS是端口，上述我们把容器的80端口定向到服务器的80，并且默认ipv4和ipv6都可以访问，接受所有IP的访问（0.0.0.0代表接受所有IP）；NAMES是容器的名字，可以理解为外号。</p><p>之后就是通过IP或者绑定的域名访问，进行最后的安装。这里就能看出来Docker的优势了：用户无需了解具体操作和搭建步骤，提供者负责维护，这可以极大的简化用户的使用步骤，还可以标准化环境，无论使用Debain还是REHL，镜像&#x2F;容器都是提供者给定的。</p><p><img src="https://img.laoda.de/i/2022/07/18/pcgwt3-2.webp" alt="docker_nextcloud_install"></p><p>如果不再需要Nextcloud，则首先停止容器，随后再删除：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker stop c30d348f1ef1</span><br><span class="line">docker <span class="built_in">rm</span> c30d348f1ef1</span><br></pre></td></tr></table></figure><h3 id="10-3-建自己的Docker"><a href="#10-3-建自己的Docker" class="headerlink" title="10.3 建自己的Docker"></a>10.3 建自己的Docker</h3><p>Docker通过Unix socket与它的引擎进行通信，出于安全考虑，一般只有root用户和在docker组的用户才能正常访问Unix socket。所以，如果想建一个完善的Docker应用，那么建议额外新增一个用户，并加入docker用户组。</p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Docker </tag>
            
            <tag> 小白入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hosthatch新面板内网互联经验分享（含NFS配置）</title>
      <link href="/archives/hosthatch-private-networking-configuration/"/>
      <url>/archives/hosthatch-private-networking-configuration/</url>
      
        <content type="html"><![CDATA[<p>之前买了Hosthatch家的三台芝加哥地区的VPS，两台NVMe（11刀&#x2F;年和30刀&#x2F;年），一台2T的存储机（40刀&#x2F;年）。还写过一个分享<a href="https://blog.laoda.de/archives/vps-hosthatch">【VPS选购分享】HostHatch——目前看过的最高性价比大盘鸡！40刀&#x2F;年 2T硬盘！</a></p><p>众所周知，一台母鸡上开出来的VPS，彼此之间传输数据，利用内网IP是不计算流量的（毕竟等于在一台机子上复制粘贴）</p><p>这次Hosthatch迁移了新面板，不像原来一样可以直接给你内网IP了，需要自己在后台完成配置。</p><p>官方贴心的提供了一个文档：<a href="https://docs.hosthatch.com/networking/#private-networking">https://docs.hosthatch.com/networking/#private-networking</a></p><p><img src="https://img.laoda.de/i/2022/07/17/klgbre-2.webp"></p><p>不过都是坑，我折腾了半天，终于在海外网友的帮助下（太菜了，这方面的知识没怎么了解过）完成了内网互联的配置，并参考digitalocean的文档：<a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-an-nfs-mount-on-ubuntu-20-04">https://www.digitalocean.com/community/tutorials/how-to-set-up-an-nfs-mount-on-ubuntu-20-04</a> 配置好了nfs（这样就可以利用2H8G NVMe当作前端，挂载2T的大盘鸡愉快地<del>刷PT</del>玩耍了）</p><p>下面把自己的经验简单分享一下，帮助有需要的人排坑。</p><h2 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h2><p>VPS安装系统：Debian 11</p><h2 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h2><h3 id="第一步：识别接口的名称"><a href="#第一步：识别接口的名称" class="headerlink" title="第一步：识别接口的名称"></a>第一步：识别接口的名称</h3><p>官方文档提供的命令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip -o <span class="built_in">link</span> | grep 00:22</span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/07/17/kdkc1q-2.webp" alt="image-20220717123209859"></p><p>这个<code>ens4</code>就是我们需要的。</p><h3 id="第二步：创建interfaces-d文件"><a href="#第二步：创建interfaces-d文件" class="headerlink" title="第二步：创建interfaces.d文件"></a>第二步：创建<code>interfaces.d</code>文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano  /etc/network/interfaces.d/90-private</span><br></pre></td></tr></table></figure><p>输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">auto ens4 </span><br><span class="line">iface ens4 inet static</span><br><span class="line">    address 192.168.10.1/24</span><br></pre></td></tr></table></figure><p>稍微解释一下，<code>auto ens4</code>是保证开机自启动。官方文档没有这个，会导致你重启之后需要重新配置。</p><p>以此类推，你的第二台同地区的VPS填：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">auto ens4 </span><br><span class="line">iface ens4 inet static</span><br><span class="line">    address 192.168.10.2/24</span><br></pre></td></tr></table></figure><p>第三台VPS填：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">auto ens4 </span><br><span class="line">iface ens4 inet static</span><br><span class="line">    address 192.168.10.3/24</span><br></pre></td></tr></table></figure><h3 id="第三步：重启网络"><a href="#第三步：重启网络" class="headerlink" title="第三步：重启网络"></a>第三步：重启网络</h3><p>重启网络：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl restart networking</span><br></pre></td></tr></table></figure><h3 id="第四步：测试"><a href="#第四步：测试" class="headerlink" title="第四步：测试"></a>第四步：测试</h3><p>测试</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ping 192.168.10.2  <span class="comment"># 自己是192.168.10.1</span></span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/07/17/kha34v-2.webp" alt="image-20220717123833677"></p><p>搞定！</p><p>三台机器的内网IP就分别是<code>192.168.10.1</code>、<code>192.168.10.2</code>、<code>192.168.10.3</code></p><h3 id="第五步：配置NFS"><a href="#第五步：配置NFS" class="headerlink" title="第五步：配置NFS"></a>第五步：配置NFS</h3><p>配置nfs，可以参考digitalocean的文档，写的非常详细，只要无脑复制粘贴代码就行。</p><p>文档地址：<a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-an-nfs-mount-on-ubuntu-20-04">https://www.digitalocean.com/community/tutorials/how-to-set-up-an-nfs-mount-on-ubuntu-20-04</a></p><h3 id="最终实现效果"><a href="#最终实现效果" class="headerlink" title="最终实现效果"></a>最终实现效果</h3><p><img src="https://img.laoda.de/i/2022/07/17/kivm3g-2.webp" alt="image-20220717124102237"></p><p>可以愉快刷PT了 &#x3D; &#x3D;</p><p>推荐阅读：<a href="https://blog.laoda.de/archives/docker-install-qbittorrent">【好玩的Docker项目】10分钟搭建你专属的下载神器——qbittorrent</a></p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hosthatch </tag>
            
            <tag> NFS </tag>
            
            <tag> 内网互联 </tag>
            
            <tag> 不计流量 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩儿的Docker项目】ZFile ——又一款强大好用的在线文件目录的程序！</title>
      <link href="/archives/docker-compose-install-zfile/"/>
      <url>/archives/docker-compose-install-zfile/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>早在今年2月底的时候，咕咕和大家分享过一个<a href="https://blog.laoda.de/archives/docker-install-alist">非常好用的网盘直链程序——Alist</a>，基本上可以对接市面上90%以上的网盘，非常好用。尤其是当时阿里云盘正值兴起，搭建阿里网盘直链看小电影，基本上可以秒开。</p><p>不过，随着时间的推移，阿里对这种私搭直链的方式采取了比较严厉的措施，尤其针对一些流量大的账户，采取了封停的措施。</p><p>其实，国内的绝大多数网盘官方都没有开放API，也就是说都是不允许搭建这种直链的（Onedrive世纪互联版好像是个例外），如果自行通过抓包等方式对接，对开发者而言有法律风险，对使用者来说有封号风险。</p><p>目前明确官方有开放API的，最适合搭建直链连接的，只有Google Drive和Onedrive（如有其他的，欢迎评论区补充）</p><p>所以友情提醒各位，尤其是挂载了阿里网盘，当做电影站的小伙伴，当心封号。</p><p>言归正传，今天和大家介绍的，同样是一款在线文件目录的程序，程序开发者对上面的问题关注的更多，在设计之时就帮助使用的小伙伴们规避了这些风险。</p><p>而且其实它的“年龄”更长一些，GitHub上的星星同样非常多，而且作者搭了一个<a href="https://bbs.zfile.vip/">社区</a>，供小伙伴们讨论、反馈问题。</p><p>咕咕的一个分享站就是用的ZFile：<a href="https://share.laoda.de/">https://share.laoda.de/</a>  不过是旧版的。</p><p>作者在这周发布了最新的V4版本，今天就和大家一起来尝尝鲜～</p><h2 id="1-介绍（来自官方）"><a href="#1-介绍（来自官方）" class="headerlink" title="1. 介绍（来自官方）"></a>1. 介绍（来自<a href="https://docs.zfile.vip/#/README">官方</a>）</h2><p><img src="https://img.laoda.de/i/2022/07/12/otxjnx-2.webp" alt="image-20220712150143399"></p><p>此项目是一个在线文件目录的程序, 支持各种对象存储和本地存储, 使用定位是个人放常用工具下载, 或做公共的文件库. 不会向多账户方向开发。</p><p>前端基于 <a href="https://larsjung.de/h5ai/">h5ai</a> 的原有功能使用 Vue 重新开发、后端采用 SpringBoot, 数据库采用内嵌数据库。</p><blockquote><p>延展阅读：<a href="https://blog.laoda.de/archives/h5ai-yes">【如何优雅地写博客】利用h5ai自建一个视频床！</a></p></blockquote><p>旧版Demo地址: <a href="https://zfile.vip/">https://zfile.vip</a></p><p>V4版本Demo地址：<a href="https://preview.zfile.vip/">https://preview.zfile.vip</a></p><p>文档地址: <a href="https://docs.zfile.vip/">https://docs.zfile.vip</a></p><p>社区地址: <a href="https://bbs.zfile.vip/">https://bbs.zfile.vip</a></p><h3 id="1-1-系统特色"><a href="#1-1-系统特色" class="headerlink" title="1.1 系统特色"></a>1.1 <a href="https://docs.zfile.vip/#/README?id=%E7%B3%BB%E7%BB%9F%E7%89%B9%E8%89%B2">系统特色</a></h3><ul><li>支持文件操作：上传, 删除, 重命名, 新建文件夹. 后续还会支持移动和复制文件（详见下方<strong>后续计划</strong>）.</li><li>操作系统级的文件操作体验<ol><li>支持拖拽上传和 Ctrl + V 粘贴上传文件和文件夹</li><li>支持 Ctrl + A 全选文件, 按 Esc 取消全选.</li><li>支持拖拽批量选择文件</li><li>支持按住 Shift 多选文件</li><li>支持多选文件后按 Delete 键删除文件.</li><li>按 Backspace 返回上级文件夹.</li></ol></li><li>全新的 UI 风格, 更简洁易用.</li><li>支持给文件生成直链（短链，永久直链，二维码）</li><li>视频播放器支持调用本地软件进行下载，如迅雷、Motrix. 支持调用本地播放器播放，更好的进行视频解码： PotPlayer， IINA, VLC, nPlayer, MXPlayer(Free&#x2F;Pro)</li><li>全新画廊模式, 支持按照瀑布流显示图片, 支持自定义 N 栏, 自定义每栏的间距</li><li>支持给文件夹配置 markdown 文档, 并配置显示方式, 如顶部、底部、弹窗</li><li>支持给文件夹设置密码</li><li>支持隐藏文件或文件夹</li><li>后台登录支持设置图片验证码和 2FA 身份认证，防止后台被暴力破解</li><li>支持自定义文件格式后缀, 避免系统内置的不完善导致文件无法预览.</li><li>Docker 支持</li><li>自定义 JS, CSS</li><li>同时挂载多个存储策略</li><li>支持 S3 协议, 阿里云 OSS, FTP, SFTP, 华为云 OBS, 本地存储, MINIO, OneDrive 国际&#x2F;家庭&#x2F;个人版&#x2F;世纪互联版&#x2F;SharePoint, , 七牛云 KODO, 腾讯云 COS, 又拍云 USS.</li></ul><h3 id="1-2-相关地址"><a href="#1-2-相关地址" class="headerlink" title="1.2 相关地址"></a>1.2 相关地址</h3><p>预览地址: <a href="https://zfile.vip/">https://zfile.vip</a></p><p>文档地址: <a href="https://docs.zfile.vip/">https://docs.zfile.vip</a></p><p>社区地址: <a href="https://bbs.zfile.vip/">https://bbs.zfile.vip</a></p><p>项目源码: <a href="https://github.com/zhaojun1998/zfile">https://github.com/zhaojun1998/zfile</a> (5.3k star)</p><p>项目源码: <a href="https://github.com/zhaojun1998/zfile">https://github.com/zhaojun1998/zfile</a>(5.3k star)</p><p>前端源码: <a href="https://github.com/zhaojun1998/zfile-vue">https://github.com/zhaojun1998/zfile-vue</a></p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><h3 id="2-1-前台首页"><a href="#2-1-前台首页" class="headerlink" title="2.1 前台首页"></a>2.1 <a href="https://docs.zfile.vip/#/README?id=%E5%89%8D%E5%8F%B0%E9%A6%96%E9%A1%B5">前台首页</a></h3><p><img src="https://img.laoda.de/i/2022/07/12/no1clc-2.webp" alt="前台首页"></p><h3 id="2-2图片预览"><a href="#2-2图片预览" class="headerlink" title="2.2图片预览"></a>2.2<a href="https://docs.zfile.vip/#/README?id=%E5%9B%BE%E7%89%87%E9%A2%84%E8%A7%88">图片预览</a></h3><p><img src="https://img.laoda.de/i/2022/07/12/no0wov-2.webp" alt="图片预览"></p><h3 id="2-3-视频预览"><a href="#2-3-视频预览" class="headerlink" title="2.3 视频预览"></a>2.3 <a href="https://docs.zfile.vip/#/README?id=%E8%A7%86%E9%A2%91%E9%A2%84%E8%A7%88">视频预览</a></h3><p><img src="https://img.laoda.de/i/2022/07/12/no02hz-2.webp" alt="视频预览"></p><h3 id="2-4-文本预览"><a href="#2-4-文本预览" class="headerlink" title="2.4 文本预览"></a>2.4 <a href="https://docs.zfile.vip/#/README?id=%E6%96%87%E6%9C%AC%E9%A2%84%E8%A7%88">文本预览</a></h3><p><img src="https://img.laoda.de/i/2022/07/12/nnqo9t-2.webp" alt="文本预览"></p><h3 id="2-5-音频预览"><a href="#2-5-音频预览" class="headerlink" title="2.5 音频预览"></a>2.5 <a href="https://docs.zfile.vip/#/README?id=%E9%9F%B3%E9%A2%91%E9%A2%84%E8%A7%88">音频预览</a></h3><p><img src="https://img.laoda.de/i/2022/07/12/nnq9m1-2.webp" alt="音频预览"></p><h3 id="2-6-后台设置-驱动器列表"><a href="#2-6-后台设置-驱动器列表" class="headerlink" title="2.6 后台设置-驱动器列表"></a>2.6 <a href="https://docs.zfile.vip/#/README?id=%E5%90%8E%E5%8F%B0%E8%AE%BE%E7%BD%AE-%E9%A9%B1%E5%8A%A8%E5%99%A8%E5%88%97%E8%A1%A8">后台设置-驱动器列表</a></h3><p><img src="https://img.laoda.de/i/2022/07/12/nnp7zx-2.webp" alt="后台设置-驱动器列表"></p><h3 id="2-7-后台设置-新增驱动器"><a href="#2-7-后台设置-新增驱动器" class="headerlink" title="2.7 后台设置-新增驱动器"></a>2.7 <a href="https://docs.zfile.vip/#/README?id=%E5%90%8E%E5%8F%B0%E8%AE%BE%E7%BD%AE-%E6%96%B0%E5%A2%9E%E9%A9%B1%E5%8A%A8%E5%99%A8">后台设置-新增驱动器</a></h3><p><img src="https://img.laoda.de/i/2022/07/12/nno67n-2.webp" alt="后台设置-新增驱动器"></p><h3 id="2-8-后台设置-站点设置"><a href="#2-8-后台设置-站点设置" class="headerlink" title="2.8 后台设置-站点设置"></a>2.8 <a href="https://docs.zfile.vip/#/README?id=%E5%90%8E%E5%8F%B0%E8%AE%BE%E7%BD%AE-%E7%AB%99%E7%82%B9%E8%AE%BE%E7%BD%AE">后台设置-站点设置</a></h3><p><img src="https://img.laoda.de/i/2022/07/12/nnnh4m-2.webp" alt="后台设置-站点设置"></p><h2 id="3-搭建环境"><a href="#3-搭建环境" class="headerlink" title="3. 搭建环境"></a>3. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器24元&#x2F;月VPS一台</del>展示用的服务器是<a href="https://netcup-sonderangebote.de/">Netcup</a>特价款，本期搭建用的是<a href="https://loll.cc/tx">腾讯轻量购买链接</a>的服务器，（最好是选<strong>非大陆的服务器</strong>）<a href="https://loll.cc/hz">Hetzner注册免费得25欧试用金有效期一个月</a></li><li>系统：Debian 10（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本</a> 非必需DD用原来的系统也OK，之后教程都是用Debian或者Ubuntu搭建～）</li><li>安装好Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需但建议】域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>【非必需】提前安装好宝塔面板海外版本aapanel，并安装好Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程选用】安装好Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><blockquote><p>服务器要求：不是非常高，能搭建Docker即可，建议1G以上。</p></blockquote><h2 id="4-搭建视频"><a href="#4-搭建视频" class="headerlink" title="4. 搭建视频"></a>4. 搭建视频</h2><p>YouTube：<a href="https://youtu.be/7lGg8VkOTjU">https://youtu.be/7lGg8VkOTjU</a></p><p>哔哩哔哩【高清版本可以点击去吐槽到B站观看】：<joe-bilibili bvid="BV1Nr4y1J7Kj"></joe-bilibili></p><h2 id="5-搭建方式"><a href="#5-搭建方式" class="headerlink" title="5. 搭建方式"></a>5. 搭建方式</h2><h3 id="5-1-搭建"><a href="#5-1-搭建" class="headerlink" title="5.1 搭建"></a>5.1 搭建</h3><p>服务器初始设置，参考</p><p><a href="https://blog.laoda.de/archives/vps-script"><strong>新买了一台服务器“必须”要做的6件小事</strong></a></p><p><a href="https://blog.laoda.de/archives/hello-docker">【Docker系列】不用宝塔面板，小白一样可以玩转VPS服务器！</a></p><blockquote><p>注意：VPS的内存如果过小，建议设置一下SWAP，一般为内存的1-1.5倍即可，可以让系统运行更流畅！</p></blockquote><p>设置SWAP可以用脚本:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O box.sh https://raw.githubusercontent.com/BlueSkyXN/SKY-BOX/main/box.sh &amp;&amp; <span class="built_in">chmod</span> +x box.sh &amp;&amp; clear &amp;&amp; ./box.sh</span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2022/05/28/uoikkd-0.webp" alt="image-20220528185512488" style="zoom:50%;" /><p>选择<code>18</code>，然后输入你想要扩容的数值即可。</p><img src="https://img.laoda.de/i/2022/05/28/up2dkf-0.webp" alt="image-20220528185604586" style="zoom:50%;" /><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i <span class="comment"># 切换到root用户</span></span><br><span class="line"></span><br><span class="line">apt update -y  <span class="comment"># 升级packages</span></span><br><span class="line"></span><br><span class="line">apt install wget curl sudo vim git  <span class="comment"># Debian系统比较干净，安装常用的软件</span></span><br></pre></td></tr></table></figure><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/zfile</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/zfile</span><br><span class="line"></span><br><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://zfile.vip/1/main/%E8%A7%86%E9%A2%91">https://zfile.vip/1/main/%E8%A7%86%E9%A2%91</a></p><p>这个地址是 3.x 的版本，作者保留了，喜欢简洁的小伙伴可以用这款，也是咕咕分享站的同款～</p><p>最新版的预览地址为 <a href="https://preview.zfile.vip/">https://preview.zfile.vip/</a></p></blockquote><p>我们这边安装的是V4版本的。</p><p>使用的镜像地址为官方的：<a href="https://hub.docker.com/r/zhaojun1998/zfile">https://hub.docker.com/r/zhaojun1998/zfile</a></p><p><code>docker-compose.yml</code>填入以下内容：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">zfile:</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">zfile</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;8080:8080&#x27;</span>    <span class="comment"># 左边的端口可以修改，右边的端口不要修改</span></span><br><span class="line">        <span class="attr">volumes:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;./db:/root/.zfile-v4/db&#x27;</span>      <span class="comment"># 数据库映射到当前文件夹下的db目录</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;./logs:/root/.zfile-v4/logs&#x27;</span>  <span class="comment"># 日志文件映射到当前文件夹下的logs目录</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;./data:/root/.zfile-v4/data&#x27;</span>  <span class="comment"># 额外映射了一个data目录，等下本地存储我们就可以填/root/.zfile-v4/data目录啦</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">zhaojun1998/zfile</span></span><br></pre></td></tr></table></figure><p>没问题的话，<code>ctrl+x</code>退出，按<code>y</code>保存，<code>enter</code>确认。</p><h4 id="映射配置文件-可选"><a href="#映射配置文件-可选" class="headerlink" title="映射配置文件(可选)"></a><a href="https://docs.zfile.vip/#/install?id=%E6%98%A0%E5%B0%84%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6">映射配置文件</a>(可选)</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 下载到 application.properties 文件到 /root/data/docker_data/zfile 目录下, 此目录可自行更改, 然后增加一个 -v 参数，将此源文件映射到容器内（如修改宿主机的 application.properties 为其他路径, 则下面命令也要一起修改）(docker compose 同理).</span></span><br><span class="line"></span><br><span class="line"><span class="string">cd</span> <span class="string">/root/data/docker_data/zfile</span></span><br><span class="line"></span><br><span class="line"><span class="string">curl</span> <span class="string">-o</span> <span class="string">/root/data/docker_data/zfile/application.properties</span> <span class="string">https://c.jun6.net/ZFILE/application.properties</span></span><br></pre></td></tr></table></figure><p>带配置文件的完整版本如下：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">zfile:</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">zfile</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;8080:8080&#x27;</span>    <span class="comment"># 左边的端口可以修改，右边的端口不要修改</span></span><br><span class="line">        <span class="attr">volumes:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;./db:/root/.zfile-v4/db&#x27;</span>      <span class="comment"># 数据库映射到当前文件夹下的db目录</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;./logs:/root/.zfile-v4/logs&#x27;</span>  <span class="comment"># 日志文件映射到当前文件夹下的logs目录</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;./data:/root/.zfile-v4/data&#x27;</span>  <span class="comment"># 额外映射了一个data目录，等下本地存储我们就可以填/root/.zfile-v4/data目录啦</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;./application.properties:/root/application.properties&#x27;</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">zhaojun1998/zfile</span></span><br></pre></td></tr></table></figure><h4 id="打开服务器防火墙"><a href="#打开服务器防火墙" class="headerlink" title="打开服务器防火墙"></a>打开服务器防火墙</h4><p>打开防火墙的端口<code>8080</code></p><p>腾讯云打开方法如下：</p><p><img src="https://img.laoda.de/i/2022/06/30/zlio5h-2.webp" alt="image-20220630215240864"></p><p><img src="https://img.laoda.de/i/2022/06/30/10h3dqt-2.webp" alt="image-20220630220546335"></p><p><img src="https://img.laoda.de/i/2022/06/30/10hlio9-2.webp" alt="image-20220630220629996"></p><p>查看端口是否被占用（以<code>8080</code>为例），输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:8080  <span class="comment">#查看8080端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用，我们接着可以运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/zfile</span><br><span class="line"></span><br><span class="line">docker-compose up -d  </span><br></pre></td></tr></table></figure><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的IP。</p><p>2、遇到访问不了的情况，请在宝塔面板的防火墙和服务商的后台防火墙里打开对应端口。</p></blockquote><p>如果你没有域名，就可以直接输入<code>http://ip:8080</code>访问了！</p><p>如果你有域名，我们接着往下看！</p><h3 id="5-2-更新"><a href="#5-2-更新" class="headerlink" title="5.2 更新"></a>5.2 更新</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/zfile /root/data/docker_data/zfile.archive  <span class="comment"># 万事先备份，以防万一</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/zfile  <span class="comment"># 进入docker-compose所在的文件夹</span></span><br><span class="line"></span><br><span class="line">docker-compose pull    <span class="comment"># 拉取最新的镜像</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d   <span class="comment"># 重新更新当前镜像</span></span><br></pre></td></tr></table></figure><p>利用Docker-compose搭建的应用，更新非常容易～</p><h3 id="5-3-卸载"><a href="#5-3-卸载" class="headerlink" title="5.3 卸载"></a>5.3 卸载</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/zfile  <span class="comment"># 进入docker-compose所在的文件夹</span></span><br><span class="line"></span><br><span class="line">docker-compose down    <span class="comment"># 停止容器，此时不会删除映射到本地的数据</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/zfile  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><h2 id="6-反向代理"><a href="#6-反向代理" class="headerlink" title="6. 反向代理"></a>6. 反向代理</h2><h3 id="6-1-利用Nginx-Proxy-Manager"><a href="#6-1-利用Nginx-Proxy-Manager" class="headerlink" title="6.1 利用Nginx Proxy Manager"></a>6.1 利用Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p>之后，登陆Nginx Proxy Manager（不会的看这个：<strong>安装Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称NPM）会用到<code>80</code>、<code>443</code>端口，所以本机不能占用（比如原来就有Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom:50%;" /><img src="https://img.laoda.de/i/2022/05/08/sys5m6-0.webp" alt="image-20220508175145390" style="zoom:50%;" /><blockquote><p> 注意填写对应的<code>域名</code>、<code>IP</code>和<code>端口</code>，按文章来的话，应该是<code>8080</code></p></blockquote><p><strong>IP填写：</strong></p><p>如果Nginx Proxy Manager和reader在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的Docker容器内部IP。</p><p>否则直接填<code>cryptgeon所在的服务器IP</code>就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom:50%;" /><p>再次打开，勾选这些：</p><img src="https://img.laoda.de/i/2022/05/08/sz9fo3-0.webp" alt="image-20220508175225684" style="zoom:50%;" /><p>然后就可以用域名来安装访问了。</p><h2 id="7-使用教程"><a href="#7-使用教程" class="headerlink" title="7. 使用教程"></a>7. 使用教程</h2><h3 id="7-1-安装和配置"><a href="#7-1-安装和配置" class="headerlink" title="7.1 安装和配置"></a>7.1 安装和配置</h3><p>见咕咕鸽的视频</p><h2 id="8-Q-A"><a href="#8-Q-A" class="headerlink" title="8. Q&amp;A"></a>8. Q&amp;A</h2><p><img src="https://img.laoda.de/i/2022/07/12/o3qxfp-2.webp" alt="926bda84e34b1a461c73811179058e01.png"></p><p><img src="https://img.laoda.de/i/2022/07/12/o3rnjv-2.webp" alt="da0d62ae6c0d5366e71a28c2ca574ec8.png"></p><p><img src="https://img.laoda.de/i/2022/07/12/o422dj-2.webp" alt="572e21b5297fcbe62835d22bdd1948f8.png"></p><p><img src="https://img.laoda.de/i/2022/07/12/o43j8t-2.webp" alt="26b4e2de0218544d13036a9e011bc7c8.png"></p><p><img src="https://img.laoda.de/i/2022/07/12/o45ag6-2.webp" alt="60e3e1021ec385ab5eeaff1f454e5478.png"></p><h2 id="9-小建议"><a href="#9-小建议" class="headerlink" title="9. 小建议"></a>9. 小建议</h2><p>1、目前Office无法实现在线预览，不知道作者会不会考虑 &#x3D; &#x3D;</p><p>2、文件夹输入密码的时候希望不是明文的；</p><img src="https://img.laoda.de/i/2022/07/15/116p3p9-2.webp" style="zoom:50%;" /><h2 id="10-结尾"><a href="#10-结尾" class="headerlink" title="10. 结尾"></a>10. 结尾</h2><p>祝大家用得开心，有问题可以去GitHub提<a href="https://github.com/zhaojun1998/zfile/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，有能力给项目做贡献的同学，也欢迎积极加入到<a href="https://github.com/zhaojun1998/zfile">项目</a>中来，贡献自己的一份力量！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://github.com/zhaojun1998/zfile">https://github.com/zhaojun1998/zfile</a></p><p><a href="https://github.com/zhaojun1998/zfile-docs/">https://github.com/zhaojun1998/zfile-docs/</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OneDrive </tag>
            
            <tag> 网盘 </tag>
            
            <tag> h5ai </tag>
            
            <tag> Alist </tag>
            
            <tag> 在线文件目录 </tag>
            
            <tag> 在线云盘 </tag>
            
            <tag> 云存储 </tag>
            
            <tag> 私有云 </tag>
            
            <tag> 对象存储 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩儿的Docker项目】OneNote、印象笔记的替代品！免费、开源、全平台同步笔记软件——Joplin</title>
      <link href="/archives/docker-compose-install-joplin-server/"/>
      <url>/archives/docker-compose-install-joplin-server/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>早在去年9月份的时候，咕咕和大家分享过一个笔记软件——<a href="https://iwanlab.com/docker-install-wiz/">【好玩的Docker项目】10分钟搭建你专属的笔记本——为知笔记</a></p><p>不过为知笔记镜像比较大，而且开启搜索之后对服务器的要求也比较高（2G以上）；</p><p>之后咕咕又分享过一个<a href="https://iwanlab.com/docker-compose-install-trilium/">【好玩儿的Docker项目】Notion的替代品，自建一个超高自由度的个人知识库——Trilium</a> 这个对标的是Notion，国内有小伙伴专门做了汉化，不过我其实也用的不多；</p><p>今天来给大家介绍一下，咕咕平时用的最多的记笔记的软件——Joplin</p><p><img src="https://img.laoda.de/i/2022/07/07/s4gbv1-2.webp" alt="img"></p><h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1. 介绍"></a>1. 介绍</h2><p>Joplin是一个免费、开源的笔记和待办事项的软件。</p><p>支持搜索，笔记格式是Markdown（如果你还不知道什么是Markdown，而你又有记录的需求，强烈你看这个视频来了解这个好用的东东——YouTube用户点击这个：<a href="https://youtu.be/vCOmZ34j8Bs">【如何优雅地写博客系列】Markdown语法的使用！</a> 国内用户点击这个：<a href="https://www.bilibili.com/video/BV1wL4y187FU?zw">如何优雅地写博客系列！Markdown语法的使用！</a>）</p><p>从Evernote（国内叫“印象笔记”）导出的笔记可以导入Joplin，包括格式化的内容（被转换为Markdown）、资源（图片、附件等）和完整的元数据（地理位置、更新时间、创建时间等）。普通的Markdown文件也可以被导入。</p><p>笔记可以使用端对端加密与各种云服务安全地同步，包括Nextcloud、Dropbox、OneDrive和Joplin Cloud（今天我们就来分享如何搭建Joplin Cloud）。</p><p>全文搜索在所有平台上都可用，以快速找到你需要的信息。</p><p>该应用程序可用于Windows、Linux、macOS、Android和iOS。</p><p>支持网页剪裁，可以从你的浏览器中保存网页和截图，也可用于火狐和Chrome。</p><p>软件开箱即用，我们今天主要来分享一下，如何搭建Joplin Cloud同步服务器。</p><p>这个服务器允许你与任何Joplin客户端进行同步，就像你与Dropbox、OneDrive等进行同步一样。</p><h3 id="1-1-为什么需要自建Joplin-Cloud"><a href="#1-1-为什么需要自建Joplin-Cloud" class="headerlink" title="1.1 为什么需要自建Joplin Cloud"></a>1.1 为什么需要自建Joplin Cloud</h3><p>一句话总结，效率更高，更稳定。</p><p><img src="https://img.laoda.de/i/2022/07/07/rbu4f6-2.webp" alt="image-20220707165243548"></p><blockquote><p>为什么会这么快？我想部分原因是WebDAV协议的效率太低了。它为每个请求发送不必要的大的XML块，下载和解析都很耗时。它也不支持delta同步（与Joplin服务器不同），这意味着在同步前需要下载完整的文件列表，以便比较本地和远程项目。</p><p>最后，Nextcloud的文件锁定系统有可能意味着每次请求的开销。这应该不多，因为它是由Redis处理的，但谁知道呢。Joplin服务器不需要加锁，因为数据的一致性是由客户处理的。</p><p>因此，只要遵循常识，只以合理的格式（JSON）传输所需的数据，我们就能获得更多的性能。</p></blockquote><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p>GitHub原项目地址（感谢作者的付出）：<a href="https://github.com/laurent22/joplin">https://github.com/laurent22/joplin</a>（30.6k star）</p><p>Docker镜像地址：<a href="https://hub.docker.com/r/joplin/server">https://hub.docker.com/r/joplin/server</a></p><p>官网地址：<a href="https://joplinapp.org/">joplinapp.org</a></p><h3 id="2-1-复制图片成PNG格式"><a href="#2-1-复制图片成PNG格式" class="headerlink" title="2.1 复制图片成PNG格式"></a>2.1 复制图片成PNG格式</h3><p>见视频</p><p>YouTube：<a href="https://youtu.be/vVlDaBB5B80">https://youtu.be/vVlDaBB5B80</a></p><p>哔哩哔哩：<a href="https://www.bilibili.com/BV1Ya411n7Tc">https://www.bilibili.com/BV1Ya411n7Tc</a></p><h3 id="2-2-网页剪辑"><a href="#2-2-网页剪辑" class="headerlink" title="2.2 网页剪辑"></a>2.2 网页剪辑</h3><p>见视频</p><p>YouTube：<a href="https://youtu.be/vVlDaBB5B80">https://youtu.be/vVlDaBB5B80</a></p><p>哔哩哔哩：<a href="https://www.bilibili.com/BV1Ya411n7Tc">https://www.bilibili.com/BV1Ya411n7Tc</a></p><h3 id="2-3-各种主题"><a href="#2-3-各种主题" class="headerlink" title="2.3 各种主题"></a>2.3 各种主题</h3><p>见视频</p><p>YouTube：<a href="https://youtu.be/vVlDaBB5B80">https://youtu.be/vVlDaBB5B80</a></p><p>哔哩哔哩：<a href="https://www.bilibili.com/BV1Ya411n7Tc">https://www.bilibili.com/BV1Ya411n7Tc</a></p><h3 id="2-4-外部编辑器"><a href="#2-4-外部编辑器" class="headerlink" title="2.4 外部编辑器"></a>2.4 外部编辑器</h3><p>见视频</p><p>YouTube：<a href="https://youtu.be/vVlDaBB5B80">https://youtu.be/vVlDaBB5B80</a></p><p>哔哩哔哩：<a href="https://www.bilibili.com/BV1Ya411n7Tc">https://www.bilibili.com/BV1Ya411n7Tc</a></p><h3 id="2-5-书写"><a href="#2-5-书写" class="headerlink" title="2.5 书写"></a>2.5 书写</h3><p>直接丢几个图片：</p><p><img src="https://img.laoda.de/i/2022/07/07/w832we-2.webp" alt="image-20220707194845915"></p><h2 id="3-搭建环境"><a href="#3-搭建环境" class="headerlink" title="3. 搭建环境"></a>3. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器24元&#x2F;月VPS一台</del>展示用的服务器是<a href="https://netcup-sonderangebote.de/">Netcup</a>特价款，本期搭建用的是<a href="https://loll.cc/tx">腾讯轻量购买链接</a>的服务器，（最好是选<strong>非大陆的服务器</strong>）<a href="https://loll.cc/hz">Hetzner注册免费得25欧试用金有效期一个月</a></li><li>系统：Debian 10（<a href="https://iwanlab.com/useful-script">DD脚本</a> 非必需DD用原来的系统也OK，之后教程都是用Debian或者Ubuntu搭建～）</li><li>安装好Docker、Docker-compose（<a href="https://iwanlab.com/hello-docker/">相关脚本</a>）</li><li>【非必需但建议】域名一枚，并做好解析到服务器上（<a href="https://iwanlab.com/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>【非必需】提前安装好宝塔面板海外版本aapanel，并安装好Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程选用】安装好Nginx Proxy Manager（<a href="https://iwanlab.com/nginx-proxy-manager">相关教程</a>）</li></ul><blockquote><p>服务器要求：不是非常高，能搭建Docker即可，建议1G以上。</p></blockquote><h2 id="4-搭建视频"><a href="#4-搭建视频" class="headerlink" title="4. 搭建视频"></a>4. 搭建视频</h2><p>YouTube：<a href="https://youtu.be/vVlDaBB5B80">https://youtu.be/vVlDaBB5B80</a></p><p>哔哩哔哩：<a href="https://www.bilibili.com/BV1Ya411n7Tc">https://www.bilibili.com/BV1Ya411n7Tc</a></p><h2 id="5-搭建方式"><a href="#5-搭建方式" class="headerlink" title="5. 搭建方式"></a>5. 搭建方式</h2><h3 id="5-1-搭建"><a href="#5-1-搭建" class="headerlink" title="5.1 搭建"></a>5.1 搭建</h3><p>服务器初始设置，参考</p><p><a href="https://iwanlab.com/vps-script/"><strong>新买了一台服务器“必须”要做的6件小事</strong></a></p><p><a href="https://iwanlab.com/hello-docker/">【Docker系列】不用宝塔面板，小白一样可以玩转VPS服务器！</a></p><blockquote><p>注意：VPS的内存如果过小，建议设置一下SWAP，一般为内存的1-1.5倍即可，可以让系统运行更流畅！</p></blockquote><p>设置SWAP可以用脚本:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O box.sh https://raw.githubusercontent.com/BlueSkyXN/SKY-BOX/main/box.sh &amp;&amp; <span class="built_in">chmod</span> +x box.sh &amp;&amp; clear &amp;&amp; ./box.sh</span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/05/28/uoikkd-0.webp" alt="image-20220528185512488"></p><p>选择<code>18</code>，然后输入你想要扩容的数值即可。</p><p><img src="https://img.laoda.de/i/2022/05/28/up2dkf-0.webp" alt="image-20220528185604586"></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i <span class="comment"># 切换到root用户</span></span><br><span class="line"></span><br><span class="line">apt update -y  <span class="comment"># 升级packages</span></span><br><span class="line"></span><br><span class="line">apt install wget curl sudo vim git  <span class="comment"># Debian系统比较干净，安装常用的软件</span></span><br></pre></td></tr></table></figure><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/joplin</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/joplin</span><br><span class="line"></span><br><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><p><code>docker-compose.yml</code>填入以下内容：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># This is a sample docker-compose file that can be used to run Joplin Server</span></span><br><span class="line"><span class="comment"># along with a PostgreSQL server.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Update the following fields in the stanza below:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># POSTGRES_USER</span></span><br><span class="line"><span class="comment"># POSTGRES_PASSWORD</span></span><br><span class="line"><span class="comment"># APP_BASE_URL</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># APP_BASE_URL: This is the base public URL where the service will be running.</span></span><br><span class="line"><span class="comment">#   - If Joplin Server needs to be accessible over the internet, configure APP_BASE_URL as follows: https://example.com/joplin. </span></span><br><span class="line"><span class="comment">#   - If Joplin Server does not need to be accessible over the internet, set the the APP_BASE_URL to your server&#x27;s hostname. </span></span><br><span class="line"><span class="comment">#     For Example: http://[hostname]:22300. The base URL can include the port.</span></span><br><span class="line"><span class="comment"># APP_PORT: The local port on which the Docker container will listen. </span></span><br><span class="line"><span class="comment">#   - This would typically be mapped to port to 443 (TLS) with a reverse proxy.</span></span><br><span class="line"><span class="comment">#   - If Joplin Server does not need to be accessible over the internet, the port can be mapped to 22300.</span></span><br><span class="line"></span><br><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">db:</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">postgres:13</span></span><br><span class="line">        <span class="attr">volumes:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">./data/postgres:/var/lib/postgresql/data</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&quot;5432:5432&quot;</span>  <span class="comment"># 左边的端口可以更换，右边不要动！</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">        <span class="attr">environment:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">POSTGRES_PASSWORD=changeme</span> <span class="comment"># 改成你自己的密码</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">POSTGRES_USER=username</span>  <span class="comment"># 改成你自己的用户名</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">POSTGRES_DB=joplin</span></span><br><span class="line">    <span class="attr">app:</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">joplin/server:latest</span></span><br><span class="line">        <span class="attr">depends_on:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">db</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&quot;22300:22300&quot;</span> <span class="comment"># 左边的端口可以更换，右边不要动！</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">        <span class="attr">environment:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">APP_PORT=22300</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">APP_BASE_URL=https://your.domain.com</span> <span class="comment"># 改成反代的域名</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">DB_CLIENT=pg</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">POSTGRES_PASSWORD=changeme</span> <span class="comment"># 与上面的密码对应！</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">POSTGRES_DATABASE=joplin</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">POSTGRES_USER=username</span>  <span class="comment"># 与上面的用户名对应！</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">POSTGRES_PORT=5432</span> <span class="comment"># 与上面右边的对应！</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">POSTGRES_HOST=db</span></span><br></pre></td></tr></table></figure><p>没问题的话，<code>ctrl+x</code>退出，按<code>y</code>保存，<code>enter</code>确认。</p><p>打开防火墙的端口<code>22300</code>、<code>5432</code></p><p>腾讯云打开方法如下：</p><p><img src="https://img.laoda.de/i/2022/06/30/zlio5h-2.webp" alt="image-20220630215240864"></p><p><img src="https://img.laoda.de/i/2022/06/30/10h3dqt-2.webp" alt="image-20220630220546335"></p><p><img src="https://img.laoda.de/i/2022/06/30/10hlio9-2.webp" alt="image-20220630220629996"></p><p>查看端口是否被占用（以<code>5432</code>为例），输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:5432  <span class="comment">#查看5432端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用，我们接着可以运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/joplin</span><br><span class="line"></span><br><span class="line">docker-compose up -d  </span><br></pre></td></tr></table></figure><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的IP。</p><p>2、遇到访问不了的情况，请在宝塔面板的防火墙和服务商的后台防火墙里打开对应端口。</p></blockquote><h3 id="5-2-更新"><a href="#5-2-更新" class="headerlink" title="5.2 更新"></a>5.2 更新</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/joplin /root/data/docker_data/joplin.archive  <span class="comment"># 万事先备份，以防万一</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/joplin  <span class="comment"># 进入docker-compose所在的文件夹</span></span><br><span class="line"></span><br><span class="line">docker-compose pull    <span class="comment"># 拉取最新的镜像</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d   <span class="comment"># 重新更新当前镜像</span></span><br></pre></td></tr></table></figure><p>利用Docker-compose搭建的应用，更新非常容易～</p><h3 id="5-3-卸载"><a href="#5-3-卸载" class="headerlink" title="5.3 卸载"></a>5.3 卸载</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/joplin  <span class="comment"># 进入docker-compose所在的文件夹</span></span><br><span class="line"></span><br><span class="line">docker-compose down    <span class="comment"># 停止容器，此时不会删除映射到本地的数据</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/joplin  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><h2 id="6-反向代理"><a href="#6-反向代理" class="headerlink" title="6. 反向代理"></a>6. 反向代理</h2><h3 id="6-1-利用Nginx-Proxy-Manager"><a href="#6-1-利用Nginx-Proxy-Manager" class="headerlink" title="6.1 利用Nginx Proxy Manager"></a>6.1 利用Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://iwanlab.com/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p>之后，登陆Nginx Proxy Manager（不会的看这个：<strong>安装Nginx Proxy Manager</strong>（<a href="https://iwanlab.com/nginx-proxy-manager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称NPM）会用到<code>80</code>、<code>443</code>端口，所以本机不能占用（比如原来就有Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom:50%;" /><img src="https://img.laoda.de/i/2022/05/08/sys5m6-0.webp" alt="image-20220508175145390" style="zoom:50%;" /><blockquote><p> 注意填写对应的<code>域名</code>、<code>IP</code>和<code>端口</code>，按文章来的话，应该是<code>22300</code></p></blockquote><p><strong>IP填写：</strong></p><p>如果Nginx Proxy Manager和reader在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的Docker容器内部IP。</p><p>否则直接填<code>cryptgeon所在的服务器IP</code>就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom:50%;" /><p>再次打开，勾选这些：</p><img src="https://img.laoda.de/i/2022/05/08/sz9fo3-0.webp" alt="image-20220508175225684" style="zoom:50%;" /><p>然后就可以用域名来安装访问了。</p><p>默认账号：<code>admin@localhost</code></p><p>默认密码：<code>admin</code></p><p><img src="https://img.laoda.de/i/2022/07/07/x8qk06-2.webp" alt="image-20220707201002690"></p><h2 id="7-使用教程"><a href="#7-使用教程" class="headerlink" title="7. 使用教程"></a>7. 使用教程</h2><h3 id="7-1-安装和配置"><a href="#7-1-安装和配置" class="headerlink" title="7.1 安装和配置"></a>7.1 安装和配置</h3><p>见咕咕鸽的视频</p><p><img src="https://img.laoda.de/i/2022/07/07/xe3eet-2.webp" alt="image-20220707201903222"></p><p><img src="https://img.laoda.de/i/2022/07/07/xfzksg-2.webp" alt="image-20220707202221029"></p><p><img src="https://img.laoda.de/i/2022/07/07/xenw36-2.webp" alt="image-20220707201959225"></p><h2 id="8-结尾"><a href="#8-结尾" class="headerlink" title="8. 结尾"></a>8. 结尾</h2><p>祝大家用得开心，有问题可以去GitHub提<a href="https://github.com/laurent22/joplin/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，有能力给项目做贡献的同学，也欢迎积极加入到<a href="https://github.com/laurent22/joplin">项目</a>中来，贡献自己的一份力量！</p><h2 id="9-参考资料"><a href="#9-参考资料" class="headerlink" title="9. 参考资料"></a>9. 参考资料</h2><p><a href="https://discourse.joplinapp.org/t/joplin-server-pre-release-is-now-available/13605">https://discourse.joplinapp.org/t/joplin-server-pre-release-is-now-available/13605</a></p><p><a href="https://github.com/laurent22/joplin/blob/dev/packages/server/README.md">https://github.com/laurent22/joplin/blob/dev/packages/server/README.md</a></p><p><a href="https://github.com/laurent22/joplin">https://github.com/laurent22/joplin</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记软件 </tag>
            
            <tag> Joplin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩儿的Docker项目】开箱即用！TeamViewer、向日葵的替代品，20分钟自建一个开源远程桌面服务——RustDesk</title>
      <link href="/archives/docker-compose-install-rustdesk/"/>
      <url>/archives/docker-compose-install-rustdesk/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近不知怎么，经常需要帮朋友远程，远程工具一般都是用向日葵，不过似乎现在需要登陆才能使用。</p><p><img src="https://img.laoda.de/i/2022/07/02/c2s1sz-2.webp" alt="image-20220702073022862"></p><p>总感觉不是很爽。</p><p>今天就来推荐一款向日葵的开源替代品——Rust desk</p><p><img src="https://img.laoda.de/i/2022/07/02/c4p1ng-2.svg" alt="RustDesk - Your remote desktop"></p><h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1. 介绍"></a>1. 介绍</h2><p>一个非常好用的远程桌面软件。</p><p><img src="https://img.laoda.de/i/2022/07/02/c539lo-2.webp" alt="image"></p><h3 id="1-1-特点"><a href="#1-1-特点" class="headerlink" title="1.1 特点"></a>1.1 特点</h3><p>咕咕这边简单在网上<del>抄</del>搜集了一些特点，供大家参考：</p><ul><li><p>用Rust编写</p></li><li><p>开箱即用，不需要复杂的配置</p></li><li><p>你可以完全控制你的数据，而不用担心安全问题</p></li><li><p>你可以使用官方的rendezvous&#x2F;relay服务器，也可以建立你自己的rendezvous&#x2F;relay服务器。</p></li></ul><p>当然我们今天就是和大家分享一下如何搭建。</p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p>GitHub原项目地址（感谢作者的付出）：<a href="https://github.com/rustdesk/rustdesk">https://github.com/rustdesk/rustdesk</a>（23.2k star）</p><p>Docker镜像地址：<a href="https://hub.docker.com/r/rustdesk/rustdesk-server/tags">https://hub.docker.com/r/rustdesk/rustdesk-server/tags</a></p><p>官网地址：<a href="https://rustdesk.com/">https://rustdesk.com</a></p><p>文档地址：<a href="https://rustdesk.com/docs/zh-cn/self-host/">https://rustdesk.com/docs/zh-cn/self-host/</a></p><p>直接丢几个图片：</p><p><img src="https://img.laoda.de/i/2022/06/30/ywfk7a-2.webp" alt="image-20220630211029167"></p><h2 id="3-搭建环境"><a href="#3-搭建环境" class="headerlink" title="3. 搭建环境"></a>3. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器24元&#x2F;月VPS一台</del>展示用的服务器是<a href="https://netcup-sonderangebote.de/">Netcup</a>特价款，本期搭建用的是<a href="https://blog.laoda.de/archives/spartanhost">斯巴达</a>的服务器，（最好是选<strong>非大陆的服务器</strong>）（<a href="https://loll.cc/tx">腾讯轻量购买链接</a>）<a href="https://loll.cc/hz">Hetzner注册免费得25欧试用金有效期一个月</a></li><li>系统：Debian 10（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本</a> 非必需DD用原来的系统也OK）</li><li>安装好Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li><del>【非必需】域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</del></li><li><del>【非必需】提前安装好宝塔面板海外版本aapanel，并安装好Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</del></li><li><del>【非必需】安装好Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</del></li></ul><blockquote><p>服务器要求：</p><p>硬件要求很低，最低配置的云服务器就可以了，CPU和内存要求都是最小的。关于网络大小，如果TCP打洞直连失败，就要耗费中继流量，一个中继连接的流量在30k-3M每秒之间（1920x1080屏幕），取决于清晰度设置和画面变化。如果只是办公需求，平均在100K&#x2F;s。</p></blockquote><h2 id="4-搭建视频"><a href="#4-搭建视频" class="headerlink" title="4. 搭建视频"></a>4. 搭建视频</h2><p>YouTube：<a href="https://youtu.be/xQ19DLW4kok">https://youtu.be/xQ19DLW4kok</a></p><p>哔哩哔哩【高清版本可以点击去吐槽到B站观看】：<joe-bilibili bvid="BV1or4y1M7UQ"></joe-bilibili></p><h2 id="5-搭建方式"><a href="#5-搭建方式" class="headerlink" title="5. 搭建方式"></a>5. 搭建方式</h2><h3 id="5-1-搭建"><a href="#5-1-搭建" class="headerlink" title="5.1 搭建"></a>5.1 搭建</h3><p>服务器初始设置，参考</p><p><a href="https://blog.laoda.de/archives/vps-script"><strong>新买了一台服务器“必须”要做的6件小事</strong></a></p><p><a href="https://blog.laoda.de/archives/hello-docker">【Docker系列】不用宝塔面板，小白一样可以玩转VPS服务器！</a></p><blockquote><p>注意：VPS的内存如果过小，建议设置一下SWAP，一般为内存的1-1.5倍即可，可以让系统运行更流畅！</p></blockquote><p>设置SWAP可以用脚本:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O box.sh https://raw.githubusercontent.com/BlueSkyXN/SKY-BOX/main/box.sh &amp;&amp; <span class="built_in">chmod</span> +x box.sh &amp;&amp; clear &amp;&amp; ./box.sh</span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/05/28/uoikkd-0.webp" alt="image-20220528185512488"></p><p>选择<code>18</code>，然后输入你想要扩容的数值即可。</p><p><img src="https://img.laoda.de/i/2022/05/28/up2dkf-0.webp" alt="image-20220528185604586"></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i <span class="comment"># 切换到root用户</span></span><br><span class="line"></span><br><span class="line">apt update -y  <span class="comment"># 升级packages</span></span><br><span class="line"></span><br><span class="line">apt install wget curl sudo vim git  <span class="comment"># Debian系统比较干净，安装常用的软件</span></span><br></pre></td></tr></table></figure><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/rustdesk</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/rustdesk</span><br><span class="line"></span><br><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><p><code>docker-compose.yml</code>填入以下内容：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">rustdesk-net:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">hbbs:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">hbbs</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">21115</span><span class="string">:21115</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">21116</span><span class="string">:21116</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">21116</span><span class="string">:21116/udp</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">21118</span><span class="string">:21118</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">rustdesk/rustdesk-server:latest</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">hbbs</span> <span class="string">-r</span> <span class="string">hbbs.example.com:21117</span>   <span class="comment"># hbbs.example.com改成</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./hbbs:/root</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">rustdesk-net</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">hbbr</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">hbbr:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">hbbr</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">21117</span><span class="string">:21117</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">21119</span><span class="string">:21119</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">rustdesk/rustdesk-server:latest</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">hbbr</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./hbbr:/root</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">rustdesk-net</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br></pre></td></tr></table></figure><p>没问题的话，<code>ctrl+x</code>退出，按<code>y</code>保存，<code>enter</code>确认。</p><p>打开防火墙的端口<code>21115</code>、<code>21116</code>、<code>21117</code>、<code>21118</code>、<code>21119</code></p><blockquote><p>默认情况下，hbbs 监听<code>21115(tcp)</code>, <code>21116(tcp/udp)</code>, <code>21118(tcp)</code>，hbbr 监听<code>21117(tcp)</code>, <code>21119(tcp)</code>。</p><p>务必在防火墙开启这几个端口， **请注意<code>21116</code>同时要开启<code>TCP</code>和<code>UDP</code>**。</p><p>其中<code>21115</code>是hbbs用作NAT类型测试，<code>21116/UDP</code>是hbbs用作ID注册与心跳服务，<code>21116/TCP</code>是hbbs用作TCP打洞与连接服务，<code>21117</code>是hbbr用作中继服务, <code>21118</code>和<code>21119</code>是为了支持网页客户端。</p><p>如果您不需要网页客户端<code>（21118，21119）</code>支持，对应端口可以不开。</p></blockquote><ul><li>TCP(<strong>21115, 21116, 21117, 21118, 21119</strong>)</li><li>UDP(<strong>21116</strong>)</li></ul><p><img src="https://img.laoda.de/i/2022/06/30/zlio5h-2.webp" alt="image-20220630215240864"></p><p><img src="https://img.laoda.de/i/2022/06/30/10h3dqt-2.webp" alt="image-20220630220546335"></p><p><img src="https://img.laoda.de/i/2022/06/30/zkvklo-2.webp" alt="image-20220630215134217"></p><p><img src="https://img.laoda.de/i/2022/06/30/10hlio9-2.webp" alt="image-20220630220629996"></p><p>查看端口是否被占用（以<code>21115</code>为例），输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:21115  <span class="comment">#查看21115端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用，我们接着可以运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/rustdesk</span><br><span class="line"></span><br><span class="line">docker-compose up -d  </span><br></pre></td></tr></table></figure><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的IP。</p><p>2、遇到访问不了的情况，请在宝塔面板的防火墙和服务商的后台防火墙里打开对应端口。</p></blockquote><h3 id="5-2-更新"><a href="#5-2-更新" class="headerlink" title="5.2 更新"></a>5.2 更新</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/rustdesk /root/data/docker_data/rustdesk.archive  <span class="comment"># 万事先备份，以防万一</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/rustdesk  <span class="comment"># 进入docker-compose所在的文件夹</span></span><br><span class="line"></span><br><span class="line">docker-compose pull    <span class="comment"># 拉取最新的镜像</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d   <span class="comment"># 重新更新当前镜像</span></span><br></pre></td></tr></table></figure><p>利用Docker-compose搭建的应用，更新非常容易～</p><h3 id="5-3-卸载"><a href="#5-3-卸载" class="headerlink" title="5.3 卸载"></a>5.3 卸载</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/rustdesk  <span class="comment"># 进入docker-compose所在的文件夹</span></span><br><span class="line"></span><br><span class="line">docker-compose down    <span class="comment"># 停止容器，此时不会删除映射到本地的数据</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/rustdesk  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><h2 id="6-使用教程"><a href="#6-使用教程" class="headerlink" title="6. 使用教程"></a>6. 使用教程</h2><h3 id="6-1-安装和配置"><a href="#6-1-安装和配置" class="headerlink" title="6.1 安装和配置"></a>6.1 安装和配置</h3><p>见咕咕鸽的视频</p><p>点击 ID 右侧的菜单按钮如下，选择“ ID&#x2F;中继服务器”。</p><p><img src="https://img.laoda.de/i/2022/06/30/10vdndr-2.webp" alt="img"></p><p>在 ID 服务器输入框中（被控端+主控端）输入 hbbs 主机或 ip 地址，另外两个地址可以不填，RustDesk会自动推导（如果没有特别设定），中继服务器指的是hbbr（21116）端口。</p><p>例如:</p><p>例如:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hbbs.example.com</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hbbs.example.com:21116</span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/06/30/10werrl-2.webp" alt="img"></p><p><img src="https://img.laoda.de/i/2022/06/30/126s6aa-2.webp" alt="image-20220630230905895"></p><p><img src="https://img.laoda.de/i/2022/06/30/127cdzg-2.webp" alt="image-20220630231000711"></p><p><img src="https://img.laoda.de/i/2022/06/30/12b7cbz-2.webp" alt="image-20220630231648227"></p><p><img src="https://img.laoda.de/i/2022/06/30/128m0xb-2.webp" alt="image-20220630231211642"></p><h4 id="6-1-1-功能展示"><a href="#6-1-1-功能展示" class="headerlink" title="6.1.1 功能展示"></a>6.1.1 功能展示</h4><p><img src="https://img.laoda.de/i/2022/06/30/12awwj1-2.webp" alt="image-20220630231557544"></p><p><img src="https://img.laoda.de/i/2022/06/30/12bpj3z-2.webp" alt="image-20220630231732435"></p><p><img src="https://img.laoda.de/i/2022/06/30/12c44fx-2.webp" alt="image-20220630231801433"></p><h4 id="6-1-2-传输文件"><a href="#6-1-2-传输文件" class="headerlink" title="6.1.2 传输文件"></a>6.1.2 传输文件</h4><p><img src="https://img.laoda.de/i/2022/06/30/12crxpe-2.webp" alt="image-20220630231912131"></p><p><img src="https://img.laoda.de/i/2022/06/30/12dih3s-2.webp" alt="image-20220630232034319"></p><h3 id="6-2-几个小问题"><a href="#6-2-几个小问题" class="headerlink" title="6.2 几个小问题"></a>6.2 几个小问题</h3><h4 id="6-2-1-加密通话"><a href="#6-2-1-加密通话" class="headerlink" title="6.2.1 加密通话"></a>6.2.1 加密通话</h4><p>默认是不加密的。我们可以通过设置Key，来加密通话。</p><p>以下来自<a href="https://rustdesk.com/docs/zh-cn/self-host/install/">官方文档</a>：</p><p>hbbs在第一次运行时，会自动产生一对加密私钥和公钥（分别位于运行目录下的<code>id_ed25519</code>和<code>id_ed25519.pub</code>文件中），其主要用途是为了通讯加密。</p><p><img src="https://img.laoda.de/i/2022/06/30/111dylz-2.webp" alt="image-20220630223952511"></p><p>如果您在上一步骤中没有填写<code>Key:</code>(公钥文件<code>id_ed25519.pub</code>中的内容)，不影响连接，但是连接无法加密。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat /root/data/docker_data/rustdesk/hbbs/id_ed25519.pub</span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/06/30/111y9hm-2.webp" alt="image-20220630224047960"></p><p>如果您禁止没有key的用户建立非加密连接，请在运行hbbs和hbbr的时候添加<code>-k _ </code>参数，例如:</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">rustdesk-net:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">hbbs:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">hbbs</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">21115</span><span class="string">:21115</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">21116</span><span class="string">:21116</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">21116</span><span class="string">:21116/udp</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">21118</span><span class="string">:21118</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">rustdesk/rustdesk-server:latest</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">hbbs</span> <span class="string">-r</span> <span class="string">hbbs.example.com:21117</span> <span class="string">-k</span> <span class="string">_</span>     <span class="comment"># 加上-k _ </span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./hbbs:/root</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">rustdesk-net</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">hbbr</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">hbbr:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">hbbr</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">21117</span><span class="string">:21117</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">21119</span><span class="string">:21119</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">rustdesk/rustdesk-server:latest</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">hbbr</span> <span class="string">-k</span> <span class="string">_</span> <span class="comment"># 加上-k _ </span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./hbbr:/root</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">rustdesk-net</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br></pre></td></tr></table></figure><blockquote><p>实测加上<code>-k _</code>参数后，会导致无法连接，不确定是不是BUG，有解决的小伙伴欢迎在评论区留言交流！</p></blockquote><p>如果要更改key，请删除 <code>id_ed25519</code> 和 <code>id_ed25519.pub</code> 文件并重新启动 hbbs&#x2F;hbbr，hbbs将会产生新的密钥对。</p><h4 id="6-2-2-把配置放在可执行文件名里-Windows-only"><a href="#6-2-2-把配置放在可执行文件名里-Windows-only" class="headerlink" title="6.2.2 把配置放在可执行文件名里 (Windows only)"></a>6.2.2 把配置放在可执行文件名里 (Windows only)</h4><p>把<code>rustdesk.exe</code> 修改为 rustdesk-<code>host=&lt;host-ip-or-name&gt;,key=&lt;public-key-string&gt;</code>.exe, 例如： rustdesk-<code>host=192.168.1.137,key=xfdsfsd32=32</code>.exe，你可以在About窗口看到配置结果，如下图所示。</p><p><code>host</code> 和 <code>key</code> 都需要添加，缺少一个就不好使。</p><blockquote><p>如果密钥中有无效字符而不能用于文件名，请删除<code>id_ed25519</code>文件并重新启动hbbs&#x2F;hbbr，<code>id_ed25519.pub</code>文件将被重新生成，请重复操作直到获得有效字符。</p></blockquote><table><thead><tr><th align="left">Menu</th><th align="left">About Page</th></tr></thead><tbody><tr><td align="left"><a href="https://rustdesk.com/docs/en/self-host/install/images/aboutmenu.png"><img src="https://img.laoda.de/i/2022/06/30/10x5em3-2.webp" alt="img"></a></td><td align="left"><a href="https://rustdesk.com/docs/en/self-host/install/images/lic.png"><img src="https://img.laoda.de/i/2022/06/30/10x5to7-2.webp" alt="img"></a></td></tr></tbody></table><h2 id="7-结尾"><a href="#7-结尾" class="headerlink" title="7. 结尾"></a>7. 结尾</h2><p>祝大家用得开心，有问题可以去GitHub提<a href="https://github.com/rustdesk/rustdesk-server/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，有能力给项目做贡献的同学，也欢迎积极加入到<a href="https://github.com/rustdesk">项目</a>中来，贡献自己的一份力量！</p><h2 id="8-参考资料"><a href="#8-参考资料" class="headerlink" title="8. 参考资料"></a>8. 参考资料</h2><p><a href="https://github.com/rustdesk/rustdesk-server">https://github.com/rustdesk/rustdesk-server</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RustDesk </tag>
            
            <tag> TeamViewer </tag>
            
            <tag> 远程桌面软件 </tag>
            
            <tag> 向日葵 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【有用的小知识】Docker-qBittorrent 开启IPv6 笔记</title>
      <link href="/archives/docker-qbittorrent-ipv6/"/>
      <url>/archives/docker-qbittorrent-ipv6/</url>
      
        <content type="html"><![CDATA[<p>以下内容主要来自<a href="https://t.me/laodade">咕咕的TG群</a>里的群友贡献的，起因是咕咕想看看docker安装的qBittorrent如何开启IPv6。</p><p>咕咕实测成功，对于有需求的小伙伴可以来试试。</p><h2 id="1-启用IPv6条件"><a href="#1-启用IPv6条件" class="headerlink" title="1. 启用IPv6条件"></a>1. 启用IPv6条件</h2><ul><li>安装Docker和docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">点击查看安装参考</a>）</li><li>请确保宿主机已经有IPv6地址</li></ul><h2 id="2-配置Docker网络"><a href="#2-配置Docker网络" class="headerlink" title="2. 配置Docker网络"></a>2. 配置Docker网络</h2><p>1、编辑 <code>/etc/docker/daemon.json</code> ，添加以下内容：（如果没有这个文件直接创建）</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/docker/daemon.json</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"> <span class="attr">&quot;ipv6&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line"> <span class="attr">&quot;fixed-cidr-v6&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2001:db8:abc1::/64&quot;</span><span class="punctuation">,</span>  # IPv6前缀可以自定义，请确保符合规则 </span><br><span class="line"> <span class="attr">&quot;experimental&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line"> <span class="attr">&quot;ip6tables&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>这样就给docker默认的bridge网络启用了ipv6，注意此时只有使用<code>bridge</code>这个网络的容器才有ipv6</p><p>2、重启docker</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><p>3、查看docker网络IPv6状态</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker network inspect bridge</span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/06/25/ni4pv8-2.webp" alt="image-20220625142114430"></p><p>4、测试Docker的IPv6网络</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run --<span class="built_in">rm</span> -it busybox ping -6 -c4 www.google.com</span><br></pre></td></tr></table></figure><p>能ping通谷歌且能正常看到返回的IPv6地址，即docker的IPv6网络表示正常。</p><h2 id="3-通过docker安装qBittorrent"><a href="#3-通过docker安装qBittorrent" class="headerlink" title="3. 通过docker安装qBittorrent"></a>3. 通过docker安装qBittorrent</h2><p>以下是我的qBittorrent的docker-compose的配置：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;2&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">qbittorrent:</span> </span><br><span class="line">    <span class="attr">image:</span> <span class="string">linuxserver/qbittorrent:4.4.1</span>     <span class="comment"># 之前很多小伙伴反馈默认latest版本会出现rss功能无法使用的情况，这边咕咕还是建议大家选择一个特定的版本（一般PT站点貌似也会推荐特定版本）</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">qbittorrent</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PUID=1000</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PGID=1000</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span> <span class="comment"># 你的时区</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">UMASK_SET=022</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">WEBUI_PORT=8081</span> <span class="comment"># 将此处修改成你欲使用的 WEB 管理平台端口 </span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/root/data/docker_data/qBittorrent/config:/config</span> <span class="comment"># 绝对路径请修改为自己的config文件夹</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/root/data/docker_data/qBittorrent/downloads:/downloads</span> <span class="comment"># 绝对路径请修改为自己的downloads文件夹</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="comment"># 要使用的映射下载端口与内部下载端口，可保持默认，安装完成后在管理页面仍然可以改成其他端口。</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">6881</span><span class="string">:6881</span> </span><br><span class="line">      <span class="bullet">-</span> <span class="number">6881</span><span class="string">:6881/udp</span></span><br><span class="line">      <span class="comment"># 此处WEB UI 目标端口与内部端口务必保证相同，见问题1</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8081</span><span class="string">:8081</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">network_mode:</span> <span class="string">bridge</span>       <span class="comment"># 网络模式选择刚才配置的桥接 bridge</span></span><br></pre></td></tr></table></figure><p>测试qBittorrent的IPv6网络是否正常：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> qbittorrent ping6 -c4 youtube.com</span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/06/25/nlb9ld-2.webp" alt="image-20220625142648586"></p><p>若是已经安装qBittorrent的话，重新部署下，注意网络模式为: <code>network_mode: bridge</code></p><p>通过这边就可以看到现在已经是支持双栈的了：</p><p><img src="https://img.laoda.de/i/2022/06/25/non063-2.webp" alt="image-20220625143207492"></p><p>如果要使用纯IPv6，则：</p><p><img src="https://img.laoda.de/i/2022/06/25/nr93d8-2.webp" alt="image-20220625143646451"></p><p>下个种子测试，看到peer这里连接的就全部是ipv6地址了。</p><h2 id="4-注意事项"><a href="#4-注意事项" class="headerlink" title="4. 注意事项"></a>4. 注意事项</h2><ul><li>IPv6端口不通，请确保正确配置防火墙，放行相应端口。</li><li>请确保docker 的版本大于等于<code>20.10</code></li><li>此方法也可用于其他容器，请注意需要其他容器本身是支持IPv6的。</li></ul><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://t.me/laodade">咕咕聊天群的群友</a></p><p><a href="https://lala.im/8404.html">https://lala.im/8404.html</a></p><p><a href="https://stackoverflow.com/questions/66090810/docker-compose-expose-port-on-ipv6">https://stackoverflow.com/questions/66090810/docker-compose-expose-port-on-ipv6</a></p><p><a href="https://github.com/docker/compose/commit/25d773c924b6337b63802c0d9649f800b542bf49">https://github.com/docker/compose/commit/25d773c924b6337b63802c0d9649f800b542bf49</a></p><p><a href="https://github.com/moby/moby/pull/41622">https://github.com/moby/moby/pull/41622</a></p><p><a href="https://forums.unraid.net/topic/105553-allow-enabling-experimental-ip6tables-option-with-docker-2010/">https://forums.unraid.net/topic/105553-allow-enabling-experimental-ip6tables-option-with-docker-2010/</a></p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> qbittorrent </tag>
            
            <tag> IPv6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【FastPanel面板系列】FastPanel + VLESS + WS +TLS 搭配XUI面板食用教程</title>
      <link href="/archives/fastpanel-vless-ws-tls-xui/"/>
      <url>/archives/fastpanel-vless-ws-tls-xui/</url>
      
        <content type="html"><![CDATA[<p>前言：</p><p><a href="https://blog.laoda.de/archives/fastpanel">【服务器面板】FastPanel——完美反代 + 邮件服务！又一个功能强大，颜值不错的国外主机面板</a></p><p><a href="https://blog.laoda.de/archives/fastpanel-mail-server">【FastPanel面板系列】自带的邮件服务器保姆级搭建教程！</a></p><h2 id="1-视频"><a href="#1-视频" class="headerlink" title="1. 视频"></a>1. 视频</h2><p>YouTube视频：<a href="https://youtu.be/mlIsVEko_9E">https://youtu.be/mlIsVEko_9E</a></p><h2 id="2-X-UI监控面板安装"><a href="#2-X-UI监控面板安装" class="headerlink" title="2. X-UI监控面板安装"></a>2. X-UI监控面板安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -Ls https://raw.githubusercontent.com/vaxilu/x-ui/master/install.sh)</span><br></pre></td></tr></table></figure><h2 id="3-修改网站的Nginx配置"><a href="#3-修改网站的Nginx配置" class="headerlink" title="3. 修改网站的Nginx配置"></a>3. 修改网站的Nginx配置</h2><p><img src="https://img.laoda.de/i/2022/06/17/zetyjf-2.webp" alt="image-20220617214121216"></p><p><img src="https://img.laoda.de/i/2022/06/11/hhegh9-0.webp" alt="a8112aa8a451f90fcb6e0020096de0c3.png"></p><p><img src="https://img.laoda.de/i/2022/06/11/hhgn0m-0.webp" alt="071144d2b575504b92668ecc01926d3e.png"></p><p>加入的配置文件：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span><span class="regexp"> ^~</span> /panel &#123;  <span class="comment"># panel改成自己的面板自定义路径</span></span><br><span class="line">      <span class="attribute">proxy_pass</span> http://127.0.0.1:63121/panel; <span class="comment">#端口和panel记得修改</span></span><br><span class="line">      <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">      <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">      <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  &#125;</span><br><span class="line"> <span class="section">location</span> /magic &#123;   <span class="comment"># magic改成自己的ws自定义路径</span></span><br><span class="line">          <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">          <span class="attribute">proxy_pass</span> http://127.0.0.1:20084; <span class="comment"># 端口改成自己的配置端口</span></span><br><span class="line">          <span class="attribute">proxy_http_version</span> <span class="number">1</span>.<span class="number">1</span>;</span><br><span class="line">          <span class="attribute">proxy_set_header</span> Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line">          <span class="attribute">proxy_set_header</span> Connection <span class="string">&quot;upgrade&quot;</span>;</span><br><span class="line">          <span class="attribute">proxy_set_header</span> Host <span class="variable">$http_host</span>;</span><br><span class="line">          <span class="attribute">proxy_read_timeout</span> <span class="number">300s</span>;</span><br><span class="line">          <span class="comment"># Show realip in access.log</span></span><br><span class="line">          <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">          <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="其他相关文章"><a href="#其他相关文章" class="headerlink" title="其他相关文章"></a>其他相关文章</h2><p><a href="https://blog.laoda.de/search?keyword=xui">https://blog.laoda.de/search?keyword=xui</a></p><p><a href="https://blog.laoda.de/archives/hcp-xui">【HestiaCP面板系列】HestiaCP + VLESS + WS +TLS 搭配XUI面板食用教程</a></p><p><a href="https://blog.laoda.de/archives/npm-xui">【Docker魔法系列】NPM与XUI共存！Nginx Proxy Manager搭配X-UI实现Vless+WS+TLS 教程！</a></p><p><a href="https://blog.laoda.de/archives/xui">可以与宝塔共存的一个“魔法”服务器状态监控应用——xui</a></p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> xui </tag>
            
            <tag> FastPanel </tag>
            
            <tag> VLESS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【FastPanel面板系列】自带的邮件服务器保姆级搭建教程！</title>
      <link href="/archives/fastpanel-mail-server/"/>
      <url>/archives/fastpanel-mail-server/</url>
      
        <content type="html"><![CDATA[<p>前情回顾：<a href="https://blog.laoda.de/archives/fastpanel">【服务器面板】FastPanel——完美反代 + 邮件服务！又一个功能强大，颜值不错的国外主机面板</a></p><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><p>YouTube：<a href="https://youtu.be/am_R4aHG2FQ">https://youtu.be/am_R4aHG2FQ</a></p><p>哔哩哔哩【高清版本可以点击去吐槽到B站观看】：<joe-bilibili bvid="BV1br4y137mV"></joe-bilibili></p><h2 id="1-检测25端口是否开放"><a href="#1-检测25端口是否开放" class="headerlink" title="1. 检测25端口是否开放"></a>1. 检测25端口是否开放</h2><p>在安装之前，您需要确保您的VPS的<code>25</code>端口是开放的。您可以在您的VPS上执行下面的命令来测试25端口是否开放。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">telnet smtp.aol.com 25</span><br></pre></td></tr></table></figure><p>如果看到类似下面的回显，则说明端口是开放的：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Trying 74.6.141.50...</span><br><span class="line">Connected to smtp.aol.g03.yahoodns.net.</span><br><span class="line">Escape character is <span class="string">&#x27;^]&#x27;</span>.</span><br><span class="line">220 smtp.mail.yahoo.com ESMTP ready</span><br></pre></td></tr></table></figure><p>如果显示超时，说明<code>25</code>端口不开放；您需要向主机商申请开放<code>25</code>端口，或者更换一台VPS。</p><h3 id="1-1-邮件参考："><a href="#1-1-邮件参考：" class="headerlink" title="1.1 邮件参考："></a>1.1 邮件参考：</h3><p>标题：SMTP Port Block Removal</p><blockquote><p>Describe the nature of the emails you intend to send:<br>Mainly used for website users’ message feedback, personal use</p><p>The volume of email that you plan to deliver on a daily&#x2F;monthly basis:<br>Less than 20 letters per day</p><p>Company Size:<br>Individual</p><p>Company Information:<br>I mainly use the server to build my personal blog site, run some Docker-based projects.</p></blockquote><p>之后回复内容参考：</p><blockquote><p>Hi, the emails I send do not contain marketing promotions, newsletters, coupons, account related notifications, etc. They are simply used as a Wordpress message feature to interact with visitors’ messages a small amount each day so that they can receive timely replies to my messages. I declare that I will not abuse it and I will not send spam.</p></blockquote><h2 id="2-Hostname和rDNS设置（参考自香菇肥牛大佬）"><a href="#2-Hostname和rDNS设置（参考自香菇肥牛大佬）" class="headerlink" title="2. Hostname和rDNS设置（参考自香菇肥牛大佬）"></a>2. Hostname和rDNS设置（参考自<a href="https://qing.su/">香菇肥牛</a>大佬）</h2><h3 id="2-1-为Linux服务器设置主机名"><a href="#2-1-为Linux服务器设置主机名" class="headerlink" title="2.1 为Linux服务器设置主机名"></a>2.1 为Linux服务器设置主机名</h3><p>参考：<a href="https://qing.su/how-to-set-hostname">https://qing.su/how-to-set-hostname</a></p><p>设置正确的主机名(hostname)非常重要。如果主机名设置不正确，那么很多服务，比如邮件服务等，均无法正常运行。今天我们介绍一下如何正确地在Linux系统上设置<code>hostname</code>.</p><p>我们首先需要了解到，主机名分为两部分，短主机名(short hostname)和长主机名(fully qualified domain name, FQDN)。这两部分都需要正确设置。假设我们需要设置的主机名为<code>mx.gugu.ge</code>, 那么段主机名为<code>mx</code>, 长主机名为<code>mx.gugu.ge</code>.</p><p>下面我们就以<code>mx.gugu.ge</code>为例介绍如何设置主机名。</p><p>首先，需要编辑<code>/etc/hosts</code>文件，找到含有你的VPS的IP地址的那一行；如果没有，则添加一行。内容如下：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">88.88.88.88    mx.gugu.ge    mx</span><br></pre></td></tr></table></figure><p>其中, <code>88.88.88.88</code>是你的服务器IP地址，后面依次填入长主机名和短主机名，切记不可填反了。</p><p>编辑好后，在SSH中执行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;mx&quot;</span> &gt; /etc/hostname</span><br><span class="line">hostname -F /etc/hostname</span><br></pre></td></tr></table></figure><p>这样，就设置好了主机名。此时我们检查一下是否设置正确。首先，执行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hostname</span><br></pre></td></tr></table></figure><p>此时我们应该只能看到短主机名<code>mx</code>. 如果你看到了长主机名<code>mx.gugu.ge</code>, 说明之前设置<strong>错误</strong>，请重新检查上述步骤。</p><p>然后，执行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hostname -f</span><br></pre></td></tr></table></figure><p>此时，我们应该只能看到长主机名<code>mx.gugu.ge</code>.</p><p>这样，我们就全部设置好了主机名<code>hostname</code>, 可以进行接下来的其他操作了。</p><h3 id="2-2-设置反向DNS（Reverse-DNS）（以Vultr为例）"><a href="#2-2-设置反向DNS（Reverse-DNS）（以Vultr为例）" class="headerlink" title="2.2 设置反向DNS（Reverse DNS）（以Vultr为例）"></a>2.2 设置反向DNS（Reverse DNS）（以Vultr为例）</h3><p><img src="https://img.laoda.de/i/2022/06/17/xznhno-0.webp" alt="image-20220617205524059"></p><blockquote><p>电子邮件服务器通常使用反向查找。电子邮件服务器会检查并查看电子邮件消息是否来自有效服务器，然后再将其带到网络中。许多电子邮件服务器会拒绝来自任何不支持反向查找的服务器或来自不太可能是合法的服务器的邮件。垃圾邮件发送者经常使用来自被劫持机器的 IP 地址，这意味着不会有 PTR 记录。或者，他们可能使用动态分配的 IP 地址，这些地址会导致具有高度通用名称的服务器域。</p></blockquote><h2 id="3-域名解析"><a href="#3-域名解析" class="headerlink" title="3. 域名解析"></a>3. 域名解析</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">A   gugu.ge  88.88.88.88</span><br><span class="line">A   mx.gugu.ge  88.88.88.88</span><br><span class="line">MX  gugu.ge  mx.gugu.ge  优先级10</span><br><span class="line">TXT gugu.ge  v=spf1 mx ~all</span><br><span class="line">TXT _dmarc.gugu.ge v=DMARC1; p=none; pct=100; rua=mailto:admin@gugu.ge</span><br><span class="line">TXT dkim._domainkey  填fastpanel里面的</span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/06/18/scqdys-2.webp" alt="image-20220617211126100"></p><h2 id="4-插件安装"><a href="#4-插件安装" class="headerlink" title="4. 插件安装"></a>4. 插件安装</h2><p><img src="https://img.laoda.de/i/2022/06/18/scshp5-2.webp" alt="image-20220617211334668"></p><p><img src="https://img.laoda.de/i/2022/06/18/scszu9-2.webp" alt="9729b5c6db144cb8fee70ccf99ec0e33.png"></p><h2 id="5-新建域名邮箱"><a href="#5-新建域名邮箱" class="headerlink" title="5. 新建域名邮箱"></a>5. 新建域名邮箱</h2><p><img src="https://img.laoda.de/i/2022/06/18/sd3bvc-2.webp" alt="d4cf801220cda91f443205f0e5953e93.png"></p><p><img src="https://img.laoda.de/i/2022/06/18/sd4xvq-2.webp" alt="c255da6980c7dff7d3c2ea7ac6c8c982.png"></p><p><img src="https://img.laoda.de/i/2022/06/18/sd6ree-2.webp" alt="d8c5e4667c3d4e77d68e59470c6eacf7.png"></p><h2 id="6-垃圾邮件检测"><a href="#6-垃圾邮件检测" class="headerlink" title="6. 垃圾邮件检测"></a>6. 垃圾邮件检测</h2><p><img src="https://img.laoda.de/i/2022/06/18/sdb1ot-2.webp" alt="52d57864d8cfc808865f8345c8c52a8d.png"></p><p>垃圾邮件检测网址：<a href="https://www.mail-tester.com/">https://www.mail-tester.com/</a></p><p><img src="https://img.laoda.de/i/2022/06/18/sd9il4-2.webp" alt="c3a32d59a47441c5a61fa702a40c4199.png"></p><h2 id="参考资料："><a href="#参考资料：" class="headerlink" title="参考资料："></a>参考资料：</h2><p><a href="https://qing.su/how-to-set-hostname">https://qing.su/how-to-set-hostname</a></p><p><a href="https://qing.su/article/mail-hosting-with-mailu-io.html">https://qing.su/article/mail-hosting-with-mailu-io.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 宝塔面板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FastPanel </tag>
            
            <tag> 邮件服务器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【服务器面板】FastPanel——完美反代 + 邮件服务！又一个功能强大，颜值不错的国外主机面板</title>
      <link href="/archives/fastpanel/"/>
      <url>/archives/fastpanel/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.laoda.de/i/2022/06/18/de9evj-2.webp" alt="image-20220618080959757"></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>上一期咕咕和大家介绍了<a href="https://blog.laoda.de/archives/hestiacp">一款海外的开源服务器面板——Hestia</a></p><p><img src="https://img.laoda.de/i/2022/06/10/hcv1wh-0.webp" alt="image-20220610104950409"></p><p>前俩天咕咕在网上闲逛的时候，发现了一个比Hestia界面颜值更高的服务器面板。经过咕咕测试，搭建网站、搭建邮件服务器、反向代理还有VLESS功能都可以完美实现，今天就来和大家分享一下。</p><h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h2><p>FastPanel，舒适、实用、现代。</p><p>管理服务器从未如此简单!</p><blockquote><p>只需点击几下就可以创建网站，管理邮件、数据库、备份、计划任务和分析流量。按照你的意愿设置和配置访问权限–每个站点可以分配给一个用户。为了提高你的账户的安全性，连接双因素认证。</p><p>动态通知使您能够了解服务器和网站的状态。此外，FASTPANEL还包括一个Web SSH客户端，网站预览和一个favicon编辑器。</p></blockquote><h3 id="1-1-特点"><a href="#1-1-特点" class="headerlink" title="1.1 特点"></a>1.1 特点</h3><ul><li>免费使用</li><li>海外面板</li><li>多语言，支持中文</li><li>带有PHP-FPM的Apache2和NGINX</li><li>支持多个PHP版本</li><li>POP&#x2F;IMAP&#x2F;SMTP邮件服务，带有反病毒、反垃圾邮件和网络邮件（SpamAssassin、Roundcube）</li><li>备份功能</li><li>文件管理功能</li><li>SSL证书申请</li><li>IPTABLES防火墙</li><li>定时任务</li><li>服务器负载情况图形化统计</li><li>病毒扫描等等</li></ul><p><img src="https://img.laoda.de/i/2022/06/18/dlevd2-2.webp" alt="image-20220618082159745"></p><p><img src="https://img.laoda.de/i/2022/06/18/dnfhuf-2.webp" alt="image-20220618082538906"></p><h3 id="1-2-支持的系统平台"><a href="#1-2-支持的系统平台" class="headerlink" title="1.2 支持的系统平台"></a>1.2 支持的系统平台</h3><ul><li><strong>Debian</strong>: 8, 9, 10, 11</li><li><strong>Ubuntu</strong>: 18.04, 20.04</li><li><strong>CentOS</strong>: 7</li><li><strong>AlmaLinux</strong>: 8</li><li><strong>Rocky Linux</strong>: 8</li></ul><p><img src="https://img.laoda.de/i/2022/06/18/dog7ut-2.webp" alt="image-20220618082710219"></p><h3 id="1-3-不足"><a href="#1-3-不足" class="headerlink" title="1.3 不足"></a>1.3 不足</h3><p>不是开源的面板</p><h2 id="2-面板展示"><a href="#2-面板展示" class="headerlink" title="2. 面板展示"></a>2. 面板展示</h2><p>官网地址：<a href="https://fastpanel.direct/">https://fastpanel.direct/</a></p><p>Demo地址：<a href="https://fastpanel.direct/demo">https://fastpanel.direct/demo</a></p><p>文档地址：<a href="https://fastpanel.direct/wiki/en/welcome-to-fastpanel-wiki">https://fastpanel.direct/wiki/en/welcome-to-fastpanel-wiki</a></p><p>直接丢几个图片：</p><p><img src="https://img.laoda.de/i/2022/06/18/dv5cz3-2.webp" alt="image-20220618083833227"></p><p><img src="https://img.laoda.de/i/2022/06/18/dv93yb-2.webp" alt="image-20220618083854125"></p><p><img src="https://img.laoda.de/i/2022/06/18/dvl4g8-2.webp" alt="image-20220618083910175"></p><p><img src="https://img.laoda.de/i/2022/06/18/dvulxs-2.webp" alt="image-20220618083953179"></p><p><img src="https://img.laoda.de/i/2022/06/18/dvryiy-2.webp" alt="image-20220618083941480"></p><h2 id="3-搭建环境"><a href="#3-搭建环境" class="headerlink" title="3. 搭建环境"></a>3. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器24元&#x2F;月VPS一台</del>展示用的服务器是<a href="https://netcup-sonderangebote.de/">Netcup</a>特价款，本期搭建用的是<a href="https://loll.cc/vultr">Vultr</a>的服务器，按小时计费，可随时销毁（最好是选<strong>非大陆的服务器</strong>）（<a href="https://loll.cc/tx">腾讯轻量购买链接</a>）<a href="https://loll.cc/hz">Hetzner注册免费得25欧试用金有效期一个月</a></li><li>系统：Debian 11（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本</a> 非必需DD用原来的系统也OK）</li><li>域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li></ul><blockquote><p>注意：建议VPS最好是<code>1核1G</code>以上配置，低配置不一定可以正常运行！</p></blockquote><h4 id="3-1-Hostname和rDNS设置（刚创建服务器时候）"><a href="#3-1-Hostname和rDNS设置（刚创建服务器时候）" class="headerlink" title="3.1 Hostname和rDNS设置（刚创建服务器时候）"></a>3.1 Hostname和rDNS设置（刚创建服务器时候）</h4><h5 id="3-1-1-设置Hostname"><a href="#3-1-1-设置Hostname" class="headerlink" title="3.1.1 设置Hostname"></a>3.1.1 设置Hostname</h5><p>这一步是为了给后续搭建域名邮箱做准备</p><p>选择一个你想要搭建域名邮箱的后缀，这边以<code>mx.gugu.ge</code>为例子</p><p>创建的时候Hostname就填<code>mx.gugu.ge</code></p><h5 id="3-1-2-设置反向DNS（Reverse-DNS）（以Vultr为例）"><a href="#3-1-2-设置反向DNS（Reverse-DNS）（以Vultr为例）" class="headerlink" title="3.1.2 设置反向DNS（Reverse DNS）（以Vultr为例）"></a>3.1.2 设置反向DNS（Reverse DNS）（以Vultr为例）</h5><p><img src="https://img.laoda.de/i/2022/06/17/xznhno-0.webp" alt="image-20220617205524059"></p><blockquote><p>电子邮件服务器通常使用反向查找。电子邮件服务器会检查并查看电子邮件消息是否来自有效服务器，然后再将其带到网络中。许多电子邮件服务器会拒绝来自任何不支持反向查找的服务器或来自不太可能是合法的服务器的邮件。垃圾邮件发送者经常使用来自被劫持机器的 IP 地址，这意味着不会有 PTR 记录。或者，他们可能使用动态分配的 IP 地址，这些地址会导致具有高度通用名称的服务器域。</p></blockquote><h2 id="4-搭建视频"><a href="#4-搭建视频" class="headerlink" title="4. 搭建视频"></a>4. 搭建视频</h2><p>YouTube：<a href="https://youtu.be/JjKpLfMGimA">https://youtu.be/JjKpLfMGimA</a></p><p>哔哩哔哩【高清版本可以点击去吐槽到B站观看】：<a href="https://www.bilibili.com/BV1ot4y1H79u">https://www.bilibili.com/BV1ot4y1H79u</a></p><h2 id="5-搭建方式"><a href="#5-搭建方式" class="headerlink" title="5. 搭建方式"></a>5. 搭建方式</h2><h3 id="5-1-服务器初始设置"><a href="#5-1-服务器初始设置" class="headerlink" title="5.1 服务器初始设置"></a>5.1 服务器初始设置</h3><p>服务器初始设置，参考</p><p><a href="https://blog.laoda.de/archives/vps-script"><strong>新买了一台服务器“必须”要做的6件小事</strong></a></p><p><a href="https://blog.laoda.de/archives/hello-docker">【Docker系列】不用宝塔面板，小白一样可以玩转VPS服务器！</a></p><blockquote><p>注意：VPS的内存如果过小，建议设置一下SWAP，一般为内存的1-1.5倍即可，可以让运行更流畅！</p></blockquote><p>设置SWAP可以用脚本:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O box.sh https://raw.githubusercontent.com/BlueSkyXN/SKY-BOX/main/box.sh &amp;&amp; <span class="built_in">chmod</span> +x box.sh &amp;&amp; clear &amp;&amp; ./box.sh</span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2022/05/28/uoikkd-0.webp" alt="image-20220528185512488" style="zoom: 33%;" /><p>选择<code>18</code>，然后输入你想要扩容的数值即可。</p><img src="https://img.laoda.de/i/2022/05/28/up2dkf-0.webp" alt="image-20220528185604586" style="zoom: 33%;" /><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i <span class="comment"># 切换到root用户</span></span><br><span class="line"></span><br><span class="line">apt update -y  <span class="comment"># 升级packages</span></span><br><span class="line"></span><br><span class="line">apt install wget curl sudo vim git  <span class="comment"># Debian系统比较干净，安装常用的软件</span></span><br></pre></td></tr></table></figure><h3 id="5-2-域名解析"><a href="#5-2-域名解析" class="headerlink" title="5.2 域名解析"></a>5.2 域名解析</h3><p>一般来说，需要解析下面几个域名（<code>gugu.ge</code>替换为你自己的实际域名，<code>88.88.88.88</code>替换为自己的服务IP，后面三个<code>TXT</code>记录可以现不设置，我们下一期讲邮件服务器的时候再设置也可以）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">A   gugu.ge  88.88.88.88</span><br><span class="line">A   mx.gugu.ge  88.88.88.88</span><br><span class="line">MX  gugu.ge  mx.gugu.ge  优先级10</span><br><span class="line">TXT gugu.ge  v=spf1 mx ~all</span><br><span class="line">TXT _dmarc.gugu.ge v=DMARC1; p=none; pct=100; rua=mailto:admin@gugu.ge</span><br><span class="line">TXT dkim._domainkey  填fastpanel里面的</span><br></pre></td></tr></table></figure><h3 id="5-3-搭建命令"><a href="#5-3-搭建命令" class="headerlink" title="5.3 搭建命令"></a>5.3 搭建命令</h3><p>非常简单。</p><p>首先确保你是<code>root</code>身份。</p><p> 该面板只能安装在一个没有任何预装软件的干净的操作系统上。支持的操作系统如下：</p><ul><li><strong>Debian</strong>: 8, 9, 10, 11</li><li><strong>Ubuntu</strong>: 18.04, 20.04</li><li><strong>CentOS</strong>: 7</li><li><strong>AlmaLinux</strong>: 8</li><li><strong>Rocky Linux</strong>: 8</li></ul><p>登陆服务器：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh root@your.server</span><br></pre></td></tr></table></figure><p>(可选) wget没装的话，用下面的命令安装：</p><p><strong>Debian &#x2F; Ubuntu</strong>:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get update; apt-get install wget</span><br></pre></td></tr></table></figure><p><strong>CentOS &#x2F; AlmaLinux &#x2F; Rocky Linux:</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum makecache; yum install wget</span><br></pre></td></tr></table></figure><p>下载官方安装脚本：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget http://repo.fastpanel.direct/install_fastpanel.sh -O - | bash -</span><br></pre></td></tr></table></figure><p>安装界面：</p><p><img src="https://img.laoda.de/i/2022/06/18/ds9cqq-2.webp" alt="a80582ec0a20b2ca33f81379560e0f93.png"></p><p>具体看服务器性能，大概需要花3-5分钟时间。</p><p><img src="https://img.laoda.de/i/2022/06/18/dsw9pu-2.webp"></p><p>在第一次登录时，FASTPANEL将要求获得一个许可证，为了得到许可证，需要在<code>https://cp.fastpanel.direct/orders</code>订购一个订阅，不收钱，不过需要输入一个电子邮件地址然后绑定一个服务器的IP，许可证将被发送到这个电子邮件中。</p><p>如果不想用自己的常用邮箱，可以到这边注册一个<code>ProtonMail</code>邮箱：<a href="https://proton.me/">https://proton.me/</a></p><blockquote><p>ProtonMail是一个端到端的加密电子邮件服务，由在欧洲核子研究中心研究设施工作过的科学家于2013年在瑞士日内瓦创立。 ProtonMail使用客户端加密来保护电子邮件内容和用户数据，然后再发送到ProtonMail服务器，这与Gmail和Outlook.com等其他普通电子邮件供应商不同。</p></blockquote><h2 id="6-登陆面板"><a href="#6-登陆面板" class="headerlink" title="6. 登陆面板"></a>6. 登陆面板</h2><p>浏览器输入：<code>https://ip:8888</code>登陆面板。</p><p><img src="https://img.laoda.de/i/2022/06/18/dtbfny-2.webp" alt="ff248397e8b3323abc12122d74953b96.png"></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mogwai chpasswd -u fastuser -p YourNewPasswordHere</span><br></pre></td></tr></table></figure><h2 id="7-创建一个网站"><a href="#7-创建一个网站" class="headerlink" title="7. 创建一个网站"></a>7. 创建一个网站</h2><p><img src="https://img.laoda.de/i/2022/06/18/pe2opk-2.webp" alt="defa069fb9e43861abc9794441515e5f.png"></p><p><img src="https://img.laoda.de/i/2022/06/18/pe39o0-2.webp" alt="28071bd104dec23dc2a6b3a931470bad.png"></p><p><img src="https://img.laoda.de/i/2022/06/18/pe4za4-2.webp" alt="6ebbb593f678b38ae38f3b4094c02939.png"></p><p><img src="https://img.laoda.de/i/2022/06/17/zbv3hf-2.webp" alt="image-20220617213621816"></p><p><img src="https://img.laoda.de/i/2022/06/18/pe7ndk-2.webp" alt="f5e2cdbfcbd2d6517dab613f0ea5a19f.png"></p><h4 id="7-1-申请SSL证书"><a href="#7-1-申请SSL证书" class="headerlink" title="7.1 申请SSL证书"></a>7.1 申请SSL证书</h4><p><img src="https://img.laoda.de/i/2022/06/17/zcygww-2.webp" alt="image-20220617213805710"><br><img src="https://img.laoda.de/i/2022/06/18/pej19u-2.webp" alt="fd5e70c76ed14955e238fa8dcd21543f.png"></p><h4 id="7-2-强制HTTPS"><a href="#7-2-强制HTTPS" class="headerlink" title="7.2 强制HTTPS"></a>7.2 强制HTTPS</h4><p><img src="https://img.laoda.de/i/2022/06/17/zd70zd-2.webp" alt="image-20220617213845555"></p><h4 id="7-3-更多Nginx的设置"><a href="#7-3-更多Nginx的设置" class="headerlink" title="7.3 更多Nginx的设置"></a>7.3 更多Nginx的设置</h4><p><img src="https://img.laoda.de/i/2022/06/17/ze3wir-2.webp" alt="image-20220617213959810"></p><h2 id="8-创建域名邮箱（下一期详细讲解）"><a href="#8-创建域名邮箱（下一期详细讲解）" class="headerlink" title="8. 创建域名邮箱（下一期详细讲解）"></a>8. 创建域名邮箱（下一期详细讲解）</h2><p>见视频</p><p>检查 25 端口是否开放</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">telnet smtp.aol.com 25</span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/06/10/pah9nc-0.webp" alt="image-20220610152923744"></p><p>内容有点多，放在下一期介绍。</p><h2 id="9-反向代理"><a href="#9-反向代理" class="headerlink" title="9. 反向代理"></a>9. 反向代理</h2><p><img src="https://img.laoda.de/i/2022/06/17/ze3wir-2.webp" alt="image-20220617213959810"></p><p><img src="https://img.laoda.de/i/2022/06/17/zh5hpi-2.webp" alt="image-20220617214509828"></p><p>注释掉上面这个。</p><p>添加下面的代码：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:8080/;  <span class="comment"># 改为你需要反代的地址</span></span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="10-其他特性介绍"><a href="#10-其他特性介绍" class="headerlink" title="10. 其他特性介绍"></a>10. 其他特性介绍</h2><p>见视频</p><h2 id="11-坑（有解决的小伙伴欢迎留言）"><a href="#11-坑（有解决的小伙伴欢迎留言）" class="headerlink" title="11. 坑（有解决的小伙伴欢迎留言）"></a>11. 坑（有解决的小伙伴欢迎留言）</h2><h4 id="11-1-HTTP验证"><a href="#11-1-HTTP验证" class="headerlink" title="11.1 HTTP验证"></a>11.1 HTTP验证</h4><p>实测HTTP验证打开之后，如果不想用了，关闭不起作用，重启服务器也不行。始终要求输入第一次的账号密码。</p><p><img src="https://img.laoda.de/i/2022/06/18/i7nbp1-2.webp" alt="image-20220618110121278"></p><h4 id="11-2-Vultr的UFW"><a href="#11-2-Vultr的UFW" class="headerlink" title="11.2 Vultr的UFW"></a>11.2 Vultr的UFW</h4><p>每次重启服务器都会自动开启防火墙，哪怕运行了<code>systemctl disable ufw</code>和<code>ufw disable</code></p><h2 id="12-结尾"><a href="#12-结尾" class="headerlink" title="12. 结尾"></a>12. 结尾</h2><p>祝大家用得开心，有问题可以在评论区互相交流探讨。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>官网地址：<a href="https://fastpanel.direct/">https://fastpanel.direct/</a></p><p>Demo地址：<a href="https://fastpanel.direct/demo">https://fastpanel.direct/demo</a></p><p>文档地址：<a href="https://fastpanel.direct/wiki/en/welcome-to-fastpanel-wiki">https://fastpanel.direct/wiki/en/welcome-to-fastpanel-wiki</a></p><p>Docker-UFW：<a href="https://github.com/chaifeng/ufw-docker#%E5%A4%AA%E9%95%BF%E4%B8%8D%E6%83%B3%E8%AF%BB">https://github.com/chaifeng/ufw-docker#%E5%A4%AA%E9%95%BF%E4%B8%8D%E6%83%B3%E8%AF%BB</a></p>]]></content>
      
      
      <categories>
          
          <category> 宝塔面板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FastPanel </tag>
            
            <tag> 服务器面板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【HestiaCP面板系列】HestiaCP 反向代理其他网站设置</title>
      <link href="/archives/hestiacp-reverse-proxy/"/>
      <url>/archives/hestiacp-reverse-proxy/</url>
      
        <content type="html"><![CDATA[<p>面板介绍：<a href="https://blog.laoda.de/archives/hestiacp">【服务器面板】自带邮件服务！宝塔面板替代品——HestiaCP 面板 保姆级教程 海外开源面板 颜值不错</a></p><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><p>YouTube：<a href="https://youtu.be/EbklLLRO7FE">https://youtu.be/EbklLLRO7FE</a></p><p>哔哩哔哩【高清版本可以点击去吐槽到B站观看】：<joe-bilibili bvid="BV1tv4y1g7vw"></joe-bilibili></p><h2 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/gugu/conf/web/halo2.gugu.ge</span><br><span class="line"></span><br><span class="line">vim nginx.ssl.conf</span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/06/18/kaot3o-2.webp" alt="image-20220618122725389"></p><p><img src="https://img.laoda.de/i/2022/06/18/kb9y3t-2.webp" alt="image-20220618122823974"></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">  proxy_pass http://144.202.92.52:8090/;</span><br><span class="line">  rewrite ^/(.*)$ /<span class="variable">$1</span> <span class="built_in">break</span>;</span><br><span class="line">  proxy_redirect off;</span><br><span class="line">  proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">  proxy_set_header X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  proxy_set_header Upgrade-Insecure-Requests 1;</span><br><span class="line">  proxy_set_header X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/06/18/kce20k-2.webp" alt="image-20220618123012227"></p><p>解决办法：</p><p>编辑<code>vim /etc/nginx/nginx.conf</code>，在<code>http</code>里面增加</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">proxy_headers_hash_max_size</span> <span class="number">51200</span>;</span><br><span class="line"><span class="attribute">proxy_headers_hash_bucket_size</span> <span class="number">6400</span>;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/06/18/keaqkt-2.webp" alt="image-20220618123331437"></p>]]></content>
      
      
      <categories>
          
          <category> 宝塔面板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 反向代理 </tag>
            
            <tag> HestiaCP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【HestiaCP面板系列】HestiaCP 常见问题汇总（持续更新）</title>
      <link href="/archives/hcp-issues/"/>
      <url>/archives/hcp-issues/</url>
      
        <content type="html"><![CDATA[<h2 id="1-忘记面板登陆密码"><a href="#1-忘记面板登陆密码" class="headerlink" title="1. 忘记面板登陆密码"></a>1. 忘记面板登陆密码</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo su -  <span class="comment">#切换到root</span></span><br><span class="line"></span><br><span class="line">v-change-user-password admin admin@1234 <span class="comment"># 修改admin的密码为admin@1234 注意必须是之前已经存在的用户才可以改密码</span></span><br></pre></td></tr></table></figure><h2 id="2-Nginx模版地址"><a href="#2-Nginx模版地址" class="headerlink" title="2. Nginx模版地址"></a>2. Nginx模版地址</h2><p>参考：<a href="https://forum.hestiacp.com/t/reverse-proxy-and-port-redirection/859/2">https://forum.hestiacp.com/t/reverse-proxy-and-port-redirection/859/2</a></p><p>一般的话，可以在<code>/usr/local/hestia/data/templates/web/nginx/</code>中创建一个新模板。</p><p>你会看到<code>default.stpl</code>和<code>default.stpl</code></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> default.tpl new_name.tpl</span><br><span class="line"><span class="built_in">cp</span> default.stpl new_name.stpl</span><br></pre></td></tr></table></figure><p>然后可以修改新的<code>tpl</code>和<code>stpl</code>文件</p><p>如果你是安装的 <code>NGiNX</code> + <code>PHP-FPM</code>，但没有安装 <code>Apache2</code>，那就直接修改位于 <code>php-fpm</code> 文件夹中的：</p><p><code>/usr/local/hestia/data/templates/web/nginx/php-fpm</code></p><p>假设我们修改了文件为<code>halo.tpl</code>和<code>halo.stpl</code></p><p>创建网站的时候，打开这个<code>高级选项</code></p><p><img src="https://img.laoda.de/i/2022/06/11/nwcbya-0.webp"></p><p>就可以选择了：</p><p><img src="https://img.laoda.de/i/2022/06/11/nwhhqh-0.webp"></p><p>更详细的内容可以自己参考<a href="https://docs.hestiacp.com/">官方文档</a>和<a href="https://forum.hestiacp.com/">官方社区</a>。</p><h2 id="3-配合XUI面板食用"><a href="#3-配合XUI面板食用" class="headerlink" title="3. 配合XUI面板食用"></a>3. 配合XUI面板食用</h2><p>【HestiaCP面板系列】HestiaCP + VLESS + WS +TLS 搭配XUI面板食用教程：<a href="https://blog.laoda.de/archives/hcp-xui">https://blog.laoda.de/archives/hcp-xui</a></p>]]></content>
      
      
      <categories>
          
          <category> 宝塔面板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HestiaCP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【HestiaCP面板系列】HestiaCP + VLESS + WS +TLS 搭配XUI面板食用教程</title>
      <link href="/archives/hcp-xui/"/>
      <url>/archives/hcp-xui/</url>
      
        <content type="html"><![CDATA[<h2 id="1-视频"><a href="#1-视频" class="headerlink" title="1. 视频"></a>1. 视频</h2><p>YouTube视频：<a href="https://youtu.be/V3nsDicSMBc">https://youtu.be/V3nsDicSMBc</a></p><h2 id="2-X-UI监控面板安装"><a href="#2-X-UI监控面板安装" class="headerlink" title="2. X-UI监控面板安装"></a>2. X-UI监控面板安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -Ls https://raw.githubusercontent.com/vaxilu/x-ui/master/install.sh)</span><br></pre></td></tr></table></figure><h2 id="3-修改HestiaCP的Nginx配置"><a href="#3-修改HestiaCP的Nginx配置" class="headerlink" title="3. 修改HestiaCP的Nginx配置"></a>3. 修改HestiaCP的Nginx配置</h2><p>HestiaCP里面的网址路径地址：</p><p>以用户名<code>gugu</code>, 网站<code>artatoutvar.com</code>举例：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/home/gugu/conf/web/artatoutvar.com</span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/06/11/hhegh9-0.webp" alt="a8112aa8a451f90fcb6e0020096de0c3.png"></p><p><img src="https://img.laoda.de/i/2022/06/11/hhgn0m-0.webp" alt="071144d2b575504b92668ecc01926d3e.png"></p><p>加入的配置文件：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span><span class="regexp"> ^~</span> /panel &#123;  <span class="comment"># panel改成自己的面板自定义路径</span></span><br><span class="line">    <span class="attribute">proxy_pass</span> http://127.0.0.1:63121/panel; <span class="comment">#端口和panel记得修改</span></span><br><span class="line">    <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="section">location</span> /magic &#123;   <span class="comment"># magic改成自己的ws自定义路径</span></span><br><span class="line">        <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://127.0.0.1:26222; <span class="comment"># 端口改成自己的配置端口</span></span><br><span class="line">        <span class="attribute">proxy_http_version</span> <span class="number">1</span>.<span class="number">1</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Connection <span class="string">&quot;upgrade&quot;</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Host <span class="variable">$http_host</span>;</span><br><span class="line">        <span class="attribute">proxy_read_timeout</span> <span class="number">300s</span>;</span><br><span class="line">        <span class="comment"># Show realip in access.log</span></span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-删除添加的端口"><a href="#4-删除添加的端口" class="headerlink" title="4. 删除添加的端口"></a>4. 删除添加的端口</h2><p><img src="https://img.laoda.de/i/2022/06/11/hhhyo5-0.webp" alt="20af339f464d48507d6954577de03b33.png"></p><h2 id="其他相关文章"><a href="#其他相关文章" class="headerlink" title="其他相关文章"></a>其他相关文章</h2><p><a href="https://blog.laoda.de/search?keyword=xui">https://blog.laoda.de/search?keyword=xui</a></p><p><a href="https://blog.laoda.de/archives/npm-xui">【Docker魔法系列】NPM与XUI共存！Nginx Proxy Manager搭配X-UI实现Vless+WS+TLS 教程！</a></p><p><a href="https://blog.laoda.de/archives/xui">可以与宝塔共存的一个“魔法”服务器状态监控应用——xui</a></p>]]></content>
      
      
      <categories>
          
          <category> 宝塔面板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 魔法上网 </tag>
            
            <tag> xui </tag>
            
            <tag> HestiaCP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【服务器面板】自带邮件服务！宝塔面板替代品——HestiaCP 面板 保姆级教程 海外开源面板 颜值不错</title>
      <link href="/archives/hestiacp/"/>
      <url>/archives/hestiacp/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这段时间，宝塔后台上传数据的事情闹得沸沸扬扬，包括网友发现，连海外版本的aapanel也会在凌晨的时候上传数据，引起了很多小伙伴的担心。</p><img src="https://img.laoda.de/i/2022/06/10/h9wp0f-0.webp" alt="image-20220610104454126" style="zoom:50%;" /><p><img src="https://img.laoda.de/i/2022/06/10/ha85i5-0.webp" alt="image-20220610104508326"></p><p>宝塔官方也发了声明：</p><blockquote><p>尊敬的堡塔用户您好：  </p><p>由于近期政府部门加强对网络公司的安全审核标准，堡塔公司作为东莞市信息与网络安全协会第一任会员单位，自然是起到带头作用，积极地配合相关部门协助调查。可能因为公安部门的执法方式，在直播期间有用户听到部分执法用语引起误会，并发布不实猜测，导致部分用户误解。  堡塔在此做统一申明：堡塔在积极响应政府任何有关安全、违法犯罪活动调查，并承诺无任何从事或协助违法相关活动的行为。在安全调查期间不会影响堡塔公司业务和产品正常运营，请用户放心继续使用我公司产品。</p></blockquote><p>其实，国产软件上传数据是基操，毕竟国情如此。一般的小伙伴其实也无需担心，不过不知道还好，知道了之后，还是有些小伙伴心里有点膈应。</p><p>对此，咕咕的建议是：</p><p>1、如果你只是想自己业余时间折腾折腾，可以直接选用LDMP（Linux+Docker+Mysql+PHP）的方式来给自己的服务器打地基。</p><p>具体可以看这篇文章——<a href="https://blog.laoda.de/archives/hello-docker">【Docker系列】不用宝塔面板，小白一样可以玩转VPS服务器！</a></p><p>2、如果你想要深入学习计算机相关知识，可以直接手撸LNMP。</p><p>具体自行搜索。</p><p>那么还有一些小伙伴，觉得没有一个可视化的面板，操作起来就是不习惯，然后又不想用宝塔了，该怎么办呢？</p><img src="https://img.laoda.de/i/2022/06/10/hc6iyx-0.webp" alt="image-20220610104837383" style="zoom:50%;" /><p>今天，咕咕就和这部分需求的小伙伴们分享一个海外的开源服务器面板——Hestia</p><p><img src="https://img.laoda.de/i/2022/06/10/hcv1wh-0.webp" alt="image-20220610104950409"></p><h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h2><p><strong>Hestia，是古希腊神话中的灶神、炉之女神和火焰女神，奥林匹斯十二主神之一。</strong></p><p>Vesta CP的分支。</p><h3 id="1-1-特点"><a href="#1-1-特点" class="headerlink" title="1.1 特点"></a>1.1 特点</h3><ul><li>多语言，支持中文</li><li>带有PHP-FPM的Apache2和NGINX</li><li>支持多个PHP版本（5.6 - 8.1，默认为8.0）</li><li>具有集群功能的DNS服务器(Bind)</li><li>POP&#x2F;IMAP&#x2F;SMTP邮件服务，带有反病毒、反垃圾邮件和网络邮件（ClamAV、SpamAssassin、Sieve、Roundcube、Rainloop）</li><li>MariaDB和&#x2F;或PostgreSQL数据库</li><li>支持Let’s Encrypt SSL与通配符证书</li><li>带有暴力攻击检测和 IP 列表的防火墙（iptables、fail2ban 和 ipset）。</li></ul><h3 id="1-2-支持的系统平台"><a href="#1-2-支持的系统平台" class="headerlink" title="1.2 支持的系统平台"></a>1.2 支持的系统平台</h3><h4 id="AMD-x86-64-Intel-AMD"><a href="#AMD-x86-64-Intel-AMD" class="headerlink" title="AMD (x86_64 Intel&#x2F;AMD)"></a>AMD (x86_64 Intel&#x2F;AMD)</h4><ul><li><strong>Debian:</strong> 11, 10 or 9</li><li><strong>Ubuntu:</strong> 20.04 LTS or 18.04 LTS</li></ul><h4 id="ARM64-arm64"><a href="#ARM64-arm64" class="headerlink" title="ARM64 (arm64)"></a>ARM64 (arm64)</h4><ul><li><strong>Debian:</strong> 11, 10 or 9</li><li><strong>Ubuntu:</strong> 20.04 LTS or 18.04 LTS</li></ul><h3 id="1-3-不足"><a href="#1-3-不足" class="headerlink" title="1.3 不足"></a>1.3 不足</h3><p>不支持CentOS</p><h2 id="2-面板展示"><a href="#2-面板展示" class="headerlink" title="2. 面板展示"></a>2. 面板展示</h2><p>GitHub原项目地址（感谢作者的付出）：<a href="https://github.com/hestiacp/hestiacp/">https://github.com/hestiacp/hestiacp/</a>（1.5k star）</p><p>官网地址：<a href="https://www.hestiacp.com/">https://www.hestiacp.com/</a></p><p>Demo地址：<a href="https://demo.hestiacp.com:8083/login/">https://demo.hestiacp.com:8083/login/</a></p><p>文档地址：<a href="https://docs.hestiacp.com/">https://docs.hestiacp.com/</a></p><p>直接丢几个图片：</p><p><img src="https://img.laoda.de/i/2022/06/10/hgz8o2-0.webp" alt="image-20220610105643026"></p><p><img src="https://img.laoda.de/i/2022/06/10/hhe6bh-0.webp" alt="image-20220610105712324"></p><p><img src="https://img.laoda.de/i/2022/06/10/hhiy8b-0.webp" alt="image-20220610105734932"></p><h2 id="3-搭建环境"><a href="#3-搭建环境" class="headerlink" title="3. 搭建环境"></a>3. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器24元&#x2F;月VPS一台</del>展示用的服务器是<a href="https://netcup-sonderangebote.de/">Netcup</a>特价款，本期搭建用的是<a href="https://loll.cc/vultr">Vultr</a>的服务器，按小时计费，可随时销毁（最好是选<strong>非大陆的服务器</strong>）（<a href="https://loll.cc/tx">腾讯轻量购买链接</a>）<a href="https://loll.cc/hz">Hetzner注册免费得25欧试用金有效期一个月</a></li><li>系统：Debian 10（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本</a> 非必需DD用原来的系统也OK）</li><li>域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li></ul><blockquote><p>注意：建议VPS最好是<code>1核1G</code>以上配置，低配置不一定可以正常运行！</p></blockquote><h2 id="4-搭建视频"><a href="#4-搭建视频" class="headerlink" title="4. 搭建视频"></a>4. 搭建视频</h2><p>YouTube：<a href="https://youtu.be/DC7KyK_1mzs">https://youtu.be/DC7KyK_1mzs</a></p><p>哔哩哔哩【高清版本可以点击去吐槽到B站观看】：<a href="https://www.bilibili.com/BV1iZ4y1q7XN">https://www.bilibili.com/BV1iZ4y1q7XN</a></p><h2 id="5-搭建方式"><a href="#5-搭建方式" class="headerlink" title="5. 搭建方式"></a>5. 搭建方式</h2><h3 id="5-1-服务器初始设置"><a href="#5-1-服务器初始设置" class="headerlink" title="5.1 服务器初始设置"></a>5.1 服务器初始设置</h3><p>服务器初始设置，参考</p><p><a href="https://blog.laoda.de/archives/vps-script"><strong>新买了一台服务器“必须”要做的6件小事</strong></a></p><p><a href="https://blog.laoda.de/archives/hello-docker">【Docker系列】不用宝塔面板，小白一样可以玩转VPS服务器！</a></p><blockquote><p>注意：VPS的内存如果过小，建议设置一下SWAP，一般为内存的1-1.5倍即可，可以让运行更流畅！</p></blockquote><p>设置SWAP可以用脚本:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O box.sh https://raw.githubusercontent.com/BlueSkyXN/SKY-BOX/main/box.sh &amp;&amp; <span class="built_in">chmod</span> +x box.sh &amp;&amp; clear &amp;&amp; ./box.sh</span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2022/05/28/uoikkd-0.webp" alt="image-20220528185512488" style="zoom: 33%;" /><p>选择<code>18</code>，然后输入你想要扩容的数值即可。</p><img src="https://img.laoda.de/i/2022/05/28/up2dkf-0.webp" alt="image-20220528185604586" style="zoom: 33%;" /><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i <span class="comment"># 切换到root用户</span></span><br><span class="line"></span><br><span class="line">apt update -y  <span class="comment"># 升级packages</span></span><br><span class="line"></span><br><span class="line">apt install wget curl sudo vim git  <span class="comment"># Debian系统比较干净，安装常用的软件</span></span><br></pre></td></tr></table></figure><h3 id="5-2-域名解析"><a href="#5-2-域名解析" class="headerlink" title="5.2 域名解析"></a>5.2 域名解析</h3><p>一般来说，需要解析下面几个域名（<code>admin.com</code>替换为你自己的实际域名）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hcp.admin.com      <span class="comment"># 面板域名</span></span><br><span class="line"></span><br><span class="line">mail.admin.com     <span class="comment"># 邮件域名</span></span><br><span class="line"></span><br><span class="line">webmail.admin.com  <span class="comment"># 邮件面板域名</span></span><br><span class="line"></span><br><span class="line">admin.com          <span class="comment"># 主域名</span></span><br><span class="line"></span><br><span class="line">www.admin.com      <span class="comment"># www域名</span></span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/06/10/i7n8hp-0.webp" alt="image-20220610110121548"></p><h3 id="5-3-搭建命令"><a href="#5-3-搭建命令" class="headerlink" title="5.3 搭建命令"></a>5.3 搭建命令</h3><p>非常简单。</p><p>首先确保你是<code>root</code>身份。</p><p>然后你的服务器系统是下面这几种（<strong>amd64 或者 arm64</strong>）：</p><ul><li>Debian 9</li><li>Debian 10</li><li>Debian 11</li><li>Ubuntu 18.04 LTS</li><li>Ubuntu 20.04 LTS</li></ul><p>下载官方脚本：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/hestiacp/hestiacp/release/install/hst-install.sh</span><br></pre></td></tr></table></figure><h4 id="5-3-1-交互式搭建"><a href="#5-3-1-交互式搭建" class="headerlink" title="5.3.1 交互式搭建"></a>5.3.1 交互式搭建</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash hst-install.sh</span><br></pre></td></tr></table></figure><h4 id="5-3-2-无人值守搭建（我们选这个）"><a href="#5-3-2-无人值守搭建（我们选这个）" class="headerlink" title="5.3.2 无人值守搭建（我们选这个）"></a>5.3.2 无人值守搭建（我们选这个）</h4><p>官方默认：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash hst-install.sh --interactive no --email email@domain.tld --password p4ssw0rd --hostname hostname.domain.tld -f</span><br></pre></td></tr></table></figure><p>我们不用这个，我们自定义参数，到这个网址：<a href="https://gabizz.github.io/hestiacp-scriptline-generator/">https://gabizz.github.io/hestiacp-scriptline-generator/</a></p><p>按需要选择：</p><p><img src="https://img.laoda.de/i/2022/06/10/i9lr77-0.webp" alt="image-20220610110450289"></p><p><img src="https://img.laoda.de/i/2022/06/10/i9xlyv-0.webp" alt="image-20220610110505429"></p><p>咕咕视频中的参考：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/hestiacp/hestiacp/release/install/hst-install.sh <span class="comment"># 下载脚本</span></span><br></pre></td></tr></table></figure><p>你如果嫌麻烦，也可以用咕咕的这个，不过，记得<code>hcp.domain.com</code>,<code>admin@guguge.com</code>,<code>admin@password1</code>改成你自己实际用的。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo bash hst-install.sh --apache no --phpfpm <span class="built_in">yes</span> --multiphp <span class="built_in">yes</span> --vsftpd no --proftpd <span class="built_in">yes</span> --named <span class="built_in">yes</span> --mysql <span class="built_in">yes</span> --postgresql no --exim <span class="built_in">yes</span> --dovecot <span class="built_in">yes</span> --sieve no --clamav <span class="built_in">yes</span> --spamassassin <span class="built_in">yes</span> --iptables <span class="built_in">yes</span> --fail2ban <span class="built_in">yes</span> --quota <span class="built_in">yes</span> --api <span class="built_in">yes</span> --interactive <span class="built_in">yes</span> --with-debs no  --port 2053 --hostname hcp.domain.com --email admin@guguge.com --password admin@password1 --lang zh-cn  --force  <span class="comment"># 执行脚本</span></span><br></pre></td></tr></table></figure><p>安装界面：</p><p><img src="https://img.laoda.de/i/2022/06/10/gvl17o-0.webp" alt="05b31cab4bfa001bcc064e995c74d5f4.png"></p><p><img src="https://img.laoda.de/i/2022/06/10/gvkdkn-0.webp" alt="9752b88b959d93977e84b1aabe4e6505.png"></p><p>具体看服务器性能，大概需要花3-5分钟时间（官方写的是10-15分钟）。</p><p><img src="https://img.laoda.de/i/2022/06/10/gvjs80-0.webp" alt="67c2a5714f4d3450b5f6fc988c24bc59.png"></p><p>回车，重启服务器。</p><h2 id="6-登陆面板"><a href="#6-登陆面板" class="headerlink" title="6. 登陆面板"></a>6. 登陆面板</h2><p>首先运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">v-add-letsencrypt-host <span class="comment"># 给面板的网址添加一个ssl证书</span></span><br></pre></td></tr></table></figure><p>如果之前hostname没有设置，需要先运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">v-change-sys-hostname host.domain.com <span class="comment"># 其中 host.domain.com 改成你自己的主机名字</span></span><br></pre></td></tr></table></figure><blockquote><p>Racknerd的hostname问题可以参考视频。</p></blockquote><p>之后浏览器输入<code>https://host.domain.com:2053</code> 就可以访问面板了。</p><p>账号密码可以在命令行里面看到。</p><p><img src="https://img.laoda.de/i/2022/06/10/gvj913-0.webp" alt="7ab159856d1cb744b1194cfcba286dbe.png"></p><h2 id="7-新建用户"><a href="#7-新建用户" class="headerlink" title="7. 新建用户"></a>7. 新建用户</h2><p><img src="https://img.laoda.de/i/2022/06/10/gvibua-0.webp" alt="3da958b320f9c1425714b2b0f687fa1a.png"></p><h2 id="8-创建一个网站"><a href="#8-创建一个网站" class="headerlink" title="8. 创建一个网站"></a>8. 创建一个网站</h2><p><img src="https://img.laoda.de/i/2022/06/10/gvi9jt-0.webp" alt="70ed909b8e9960bba1c3b93beb5b06ec.png"></p><p><img src="https://img.laoda.de/i/2022/06/10/gvgekw-0.webp" alt="f9606ef19aa9fefb245a415a8da89f39.png"></p><h2 id="9-创建域名邮箱"><a href="#9-创建域名邮箱" class="headerlink" title="9. 创建域名邮箱"></a>9. 创建域名邮箱</h2><p>见视频</p><p>检查 25 端口是否开放</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">telnet smtp.aol.com 25</span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/06/10/pah9nc-0.webp" alt="image-20220610152923744"></p><p><img src="/:/379c9da6309645b999978e08164731f9" alt="92271096a5e4fdbf5c607cebb041f721.png"></p><p>SMTP中继：<a href="https://www.sendinblue.com/">https://www.sendinblue.com/</a></p><h2 id="10-其他特性介绍"><a href="#10-其他特性介绍" class="headerlink" title="10. 其他特性介绍"></a>10. 其他特性介绍</h2><p>见视频</p><h2 id="11-结尾"><a href="#11-结尾" class="headerlink" title="11. 结尾"></a>11. 结尾</h2><p>祝大家用得开心，有问题可以去GitHub提<a href="https://github.com/hestiacp/hestiacp/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，有能力给项目做贡献的同学，也欢迎积极加入到<a href="https://github.com/hestiacp/hestiacp">项目</a>中来，贡献自己的一份力量！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://github.com/hestiacp/hestiacp/">https://github.com/hestiacp/hestiacp/</a></p><p><a href="https://www.hestiacp.com/">https://www.hestiacp.com/</a></p><p><a href="https://demo.hestiacp.com:8083/login/">https://demo.hestiacp.com:8083/login/</a></p><p><a href="https://docs.hestiacp.com/">https://docs.hestiacp.com/</a></p>]]></content>
      
      
      <categories>
          
          <category> 宝塔面板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 宝塔面板 </tag>
            
            <tag> aapanel </tag>
            
            <tag> 服务器面板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩儿的Docker项目】给你的自建服务整一个炫酷的面板——Dashy 一个功能非常强大的面板，可以监控服务状态！</title>
      <link href="/archives/docker-compose-install-dashy/"/>
      <url>/archives/docker-compose-install-dashy/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>之前咕咕也折腾过几个面板程序，比如像<a href="https://heimdall.site/">Heimdall</a>、<a href="https://soulteary.com/2022/01/19/flare-production-record-application-frontend-and-backend-performance-optimization.html">Flare</a> </p><p><img src="https://img.laoda.de/i/2022/06/02/svjovg-0.webp" alt="image-20220602174601025"></p><p><img src="https://img.laoda.de/i/2022/06/02/suci2u-0.webp" alt="Flare 的向导小工具"></p><p>但是都是用了一段时间就没用了，原因是自己发现了一个宝藏的Chrome插件——<a href="https://itab.link/install/chrome.html">iTab</a>，这段时间正好也是疫情在家，基本上很少在手机上浏览网页，iTab对我来说就足够用了。</p><p><img src="https://img.laoda.de/i/2022/06/02/10y2r97-0.webp" alt="image-20220602223358087"></p><p>不过，就在前俩天，发现一个面板程序，惊艳到了我（放一张我自己搭建的图）：</p><p><img src="https://img.laoda.de/i/2022/06/02/sy4r7q-0.webp" alt="image-20220602175035525"></p><p><img src="https://img.laoda.de/i/2022/06/02/sykgsx-0.webp" alt="image-20220602175109103"></p><p>看起来非常炫酷，今天就和大家分享一下。</p><h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1. 介绍"></a>1. 介绍</h2><p>这个面板的名字叫做——Dashy，是一个功能非常非常强大的面板，而且如果你查看他的文档，会发现写的非常非常详细。</p><h3 id="1-1-特点"><a href="#1-1-特点" class="headerlink" title="1.1 特点"></a>1.1 特点</h3><p>咕咕这边简单在网上<del>抄</del>搜集了一些特点，供大家参考：</p><ul><li>🚦 对您的每个应用程序&#x2F;链接进行实时状态监测</li><li>📊 使用小工具来显示来自自我托管服务的信息和动态内容</li><li>🔎 按名称、域名或标签进行即时搜索 + 可定制的热键和键盘快捷方式</li><li>🎨 许多内置的颜色主题，带有UI颜色编辑器并支持自定义CSS</li><li>🧸 许多图标选项 - Font-Awesome、homelab图标、自动获取Favicon、图像、表情符号等。</li><li>💂 可选的认证，包括多用户访问、可配置的权限和SSO支持</li><li>🌎 多语言支持，有10多种人工翻译的语言，还有更多的语言正在开发中</li><li>☁ 可选的、加密的、免费的异地云备份和恢复功能</li><li>💼 工作区视图，可同时在多个应用程序之间轻松切换</li><li>🛩️ 一个最小的视图，可作为快速加载的浏览器起始页使用</li><li>🖱️ 选择应用程序的启动方式：新标签、同一标签、剪贴板、弹出式模式或在工作区视图中打开</li><li>📏️可定制布局、尺寸、文本、组件可见性、排序顺序、行为等。</li><li>🖼️全屏背景图片、自定义导航栏链接、HTML页脚、标题等选项。</li><li>🚀️容易用Docker设置，或在裸机上，或用一键云部署</li><li>⚙️简单的基于YAML的单文件配置，以及通过UI配置应用程序的选项。</li><li>✨ 正在积极开发，定期添加改进和新功能</li><li>ᾐ极小的软件包，完全响应的UI，和PWA的基本离线访问。</li><li>🆓 100%免费和开放源代码</li><li>🔐 高度重视隐私问题</li><li>🌈 还有更多……</li></ul><p>关键，他还能添加很多小的组件，比如配合<code>glances</code>，监控你系统运行情况，像咕咕这样：</p><p><img src="https://img.laoda.de/i/2022/06/02/tsy3u0-0.webp" alt="image-20220602180211100"></p><p>总之，非常适合搭建在自己的Nas上，作为一个“主控”面板，当然，咕咕没有搭建Nas，我们就在VPS上来动手搞一个玩玩吧～</p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p>咕咕的Demo：<a href="http://dashy.ml2u.ml/">http://dashy.ml2u.ml/</a></p><p>GitHub原项目地址（感谢作者的付出）：<a href="https://github.com/Lissy93/dashy">https://github.com/Lissy93/dashy</a>（2.8k star）</p><p>官网地址：<a href="https://dashy.to/">https://dashy.to/</a></p><p>Demo地址：<a href="https://demo.dashy.to/">https://demo.dashy.to/</a></p><p>文档地址：<a href="https://dashy.to/docs/">https://dashy.to/docs/</a></p><p>直接丢几个图片：</p><p><img src="https://img.laoda.de/i/2022/06/02/ttrftt-0.webp" alt="image-20220602180347196"></p><p><img src="https://img.laoda.de/i/2022/06/02/tu7pnl-0.webp" alt="image-20220602180423796"></p><h2 id="3-搭建环境"><a href="#3-搭建环境" class="headerlink" title="3. 搭建环境"></a>3. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器24元&#x2F;月VPS一台</del>展示用的服务器是<a href="https://netcup-sonderangebote.de/">Netcup</a>特价款，本期搭建用的是<a href="https://loll.cc/vultr">Vultr</a>的服务器，按小时计费，可随时销毁（最好是选<strong>非大陆的服务器</strong>）（<a href="https://loll.cc/tx">腾讯轻量购买链接</a>）<a href="https://loll.cc/hz">Hetzner注册免费得25欧试用金有效期一个月</a></li><li>系统：Debian 10（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本</a> 非必需DD用原来的系统也OK）</li><li>域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>安装好Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需】提前安装好宝塔面板海外版本aapanel，并安装好Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程采用】安装好Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><blockquote><p>注意：如果要配合<code>glances</code>搭建监控，建议VPS最好是<code>2核2G</code>以上配置，低配置实测无法运行！</p></blockquote><h2 id="4-搭建视频"><a href="#4-搭建视频" class="headerlink" title="4. 搭建视频"></a>4. 搭建视频</h2><p>YouTube：<a href="https://youtu.be/OAt_wFU6Nwc">https://youtu.be/OAt_wFU6Nwc</a></p><p>哔哩哔哩【高清版本可以点击去吐槽到B站观看】：<joe-bilibili bvid="BV19341137Mz"></joe-bilibili></p><h2 id="5-搭建方式"><a href="#5-搭建方式" class="headerlink" title="5. 搭建方式"></a>5. 搭建方式</h2><h3 id="5-1-搭建"><a href="#5-1-搭建" class="headerlink" title="5.1 搭建"></a>5.1 搭建</h3><p>服务器初始设置，参考</p><p><a href="https://blog.laoda.de/archives/vps-script"><strong>新买了一台服务器“必须”要做的6件小事</strong></a></p><p><a href="https://blog.laoda.de/archives/hello-docker">【Docker系列】不用宝塔面板，小白一样可以玩转VPS服务器！</a></p><blockquote><p>注意：VPS的内存如果过小，建议设置一下SWAP，一般为内存的1-1.5倍即可，可以让运行更流畅！</p></blockquote><p>设置SWAP可以用脚本:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O box.sh https://raw.githubusercontent.com/BlueSkyXN/SKY-BOX/main/box.sh &amp;&amp; <span class="built_in">chmod</span> +x box.sh &amp;&amp; clear &amp;&amp; ./box.sh</span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/05/28/uoikkd-0.webp" alt="image-20220528185512488"></p><p>选择<code>18</code>，然后输入你想要扩容的数值即可。</p><p><img src="https://img.laoda.de/i/2022/05/28/up2dkf-0.webp" alt="image-20220528185604586"></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i <span class="comment"># 切换到root用户</span></span><br><span class="line"></span><br><span class="line">apt update -y  <span class="comment"># 升级packages</span></span><br><span class="line"></span><br><span class="line">apt install wget curl sudo vim git  <span class="comment"># Debian系统比较干净，安装常用的软件</span></span><br></pre></td></tr></table></figure><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/dashy/&#123;icons,public&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/dashy</span><br><span class="line"></span><br><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><p><code>docker-compose.yml</code>填入以下内容：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line">services:</span><br><span class="line">    dashy:</span><br><span class="line">        ports:</span><br><span class="line">            - <span class="string">&#x27;8395:80&#x27;</span></span><br><span class="line">        volumes:</span><br><span class="line">            - <span class="string">&#x27;/root/data/docker_data/dashy/public/conf.yml:/app/public/conf.yml&#x27;</span></span><br><span class="line">            - <span class="string">&#x27;/root/data/docker_data/dashy/icons:/app/public/item-icons/icons&#x27;</span></span><br><span class="line">        container_name: dashy</span><br><span class="line">        restart: unless-stopped</span><br><span class="line">        image: <span class="string">&#x27;lissy93/dashy:latest&#x27;</span></span><br></pre></td></tr></table></figure><p>没问题的话，<code>ctrl+x</code>退出，按<code>y</code>保存，<code>enter</code>确认。</p><p>查看端口是否被占用，输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:8395  <span class="comment">#查看8395端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用，我们接着可以运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> public/</span><br><span class="line"></span><br><span class="line">nano conf.yml</span><br></pre></td></tr></table></figure><p>粘贴如下官方Demo的内容：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="comment"># Page meta info, like heading, footer text and nav links</span></span><br><span class="line">pageInfo:</span><br><span class="line">  title: Dashy</span><br><span class="line">  description: Welcome to your new dashboard!</span><br><span class="line">  navLinks:</span><br><span class="line">  - title: GitHub</span><br><span class="line">    path: https://github.com/Lissy93/dashy</span><br><span class="line">  - title: Documentation</span><br><span class="line">    path: https://dashy.to/docs</span><br><span class="line"></span><br><span class="line"><span class="comment"># Optional app settings and configuration</span></span><br><span class="line">appConfig:</span><br><span class="line">  theme: colorful</span><br><span class="line">  layout: auto</span><br><span class="line">  iconSize: medium</span><br><span class="line">  language: en</span><br><span class="line">  auth:</span><br><span class="line">    <span class="built_in">users</span>:</span><br><span class="line">      - user: your-preferred-username    <span class="comment"># 改成自己的用户名</span></span><br><span class="line">        <span class="built_in">hash</span>: hash-of-a-password-you-choose-using-sha256-hashing  <span class="comment"># cha256 哈希加密，地址用这个： https://emn178.github.io/online-tools/sha256.html</span></span><br><span class="line">        <span class="built_in">type</span>: admin</span><br><span class="line"><span class="comment"># Main content - An array of sections, each containing an array of items</span></span><br><span class="line">sections:</span><br><span class="line">- name: Getting Started</span><br><span class="line">  icon: fas fa-rocket</span><br><span class="line">  items:</span><br><span class="line">  - title: Dashy Live</span><br><span class="line">    description: Development a project management links <span class="keyword">for</span> Dashy</span><br><span class="line">    icon: https://i.ibb.co/qWWpD0v/astro-dab-128.png</span><br><span class="line">    url: https://live.dashy.to/</span><br><span class="line">    target: newtab</span><br><span class="line">  - title: GitHub</span><br><span class="line">    description: Source Code, Issues and Pull Requests</span><br><span class="line">    url: https://github.com/lissy93/dashy</span><br><span class="line">    icon: favicon</span><br><span class="line">  - title: Docs</span><br><span class="line">    description: Configuring &amp; Usage Documentation</span><br><span class="line">    provider: Dashy.to</span><br><span class="line">    icon: far fa-book</span><br><span class="line">    url: https://dashy.to/docs</span><br><span class="line">  - title: Showcase</span><br><span class="line">    description: See how others are using Dashy</span><br><span class="line">    url: https://github.com/Lissy93/dashy/blob/master/docs/showcase.md</span><br><span class="line">    icon: far fa-grin-hearts</span><br><span class="line">  - title: Config Guide</span><br><span class="line">    description: See full list of configuration options</span><br><span class="line">    url: https://github.com/Lissy93/dashy/blob/master/docs/configuring.md</span><br><span class="line">    icon: fas fa-wrench</span><br><span class="line">  - title: Support</span><br><span class="line">    description: Get <span class="built_in">help</span> with Dashy, raise a bug, or get <span class="keyword">in</span> contact</span><br><span class="line">    url: https://github.com/Lissy93/dashy/blob/master/.github/SUPPORT.md</span><br><span class="line">    icon: far fa-hands-helping</span><br></pre></td></tr></table></figure><p>没问题的话，<code>ctrl+x</code>退出，按<code>y</code>保存，<code>enter</code>确认。</p><p>之后，我们：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/dashy/icons</span><br><span class="line"></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/walkxcode/dashboard-icons.git  <span class="comment"># 下载icons，新版的好像系统自带，咕咕没有尝试，就先用这个了。</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/dashy</span><br><span class="line"></span><br><span class="line">docker-compose up -d  </span><br></pre></td></tr></table></figure><p>访问：<code>http:服务ip:8395</code> 即可。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的IP。</p><p>2、遇到访问不了的情况，请在宝塔面板的防火墙和服务商的后台防火墙里打开对应端口。</p></blockquote><h3 id="5-2-更新"><a href="#5-2-更新" class="headerlink" title="5.2 更新"></a>5.2 更新</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/dashy /root/data/docker_data/dashy.archive  <span class="comment"># 万事先备份，以防万一</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/dashy  <span class="comment"># 进入docker-compose所在的文件夹</span></span><br><span class="line"></span><br><span class="line">docker-compose pull    <span class="comment"># 拉取最新的镜像</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d   <span class="comment"># 重新更新当前镜像</span></span><br></pre></td></tr></table></figure><p>利用Docker-compose搭建的应用，更新非常容易～</p><h3 id="5-3-卸载"><a href="#5-3-卸载" class="headerlink" title="5.3 卸载"></a>5.3 卸载</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/dashy  <span class="comment"># 进入docker-compose所在的文件夹</span></span><br><span class="line"></span><br><span class="line">docker-compose down    <span class="comment"># 停止容器，此时不会删除映射到本地的数据</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/dashy  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><h2 id="6-反向代理"><a href="#6-反向代理" class="headerlink" title="6. 反向代理"></a>6. 反向代理</h2><h3 id="6-1-利用Nginx-Proxy-Manager"><a href="#6-1-利用Nginx-Proxy-Manager" class="headerlink" title="6.1 利用Nginx Proxy Manager"></a>6.1 利用Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p>之后，登陆Nginx Proxy Manager（不会的看这个：<strong>安装Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称NPM）会用到<code>80</code>、<code>443</code>端口，所以本机不能占用（比如原来就有Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/03/20/wenk4d.webp" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/03/20/x2w60n.webp" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/06/02/10zgq7g-0.webp" alt="image-20220602223632735" style="zoom:50%;" /><blockquote><p> 注意填写对应的<code>域名</code>和<code>端口</code>，按文章来的话，应该是<code>8395</code></p></blockquote><p>这边我们不打开SSL，然后就可以用域名来安装访问了。</p><h2 id="7-使用教程"><a href="#7-使用教程" class="headerlink" title="7. 使用教程"></a>7. 使用教程</h2><h3 id="7-1-安装和配置"><a href="#7-1-安装和配置" class="headerlink" title="7.1 安装和配置"></a>7.1 安装和配置</h3><p>见咕咕鸽的视频</p><blockquote><p>注意：Dashy重启之后，大概需要<code>1-2分钟</code>才能激活，可以通过<code>docker logs dashy</code>查看日志情况。</p></blockquote><h3 id="7-2-安装服务器监控插件"><a href="#7-2-安装服务器监控插件" class="headerlink" title="7.2 安装服务器监控插件"></a>7.2 安装服务器监控插件</h3><h3 id="7-2-0-几个问题（有解决的欢迎评论区留言）"><a href="#7-2-0-几个问题（有解决的欢迎评论区留言）" class="headerlink" title="7.2.0 几个问题（有解决的欢迎评论区留言）"></a>7.2.0 几个问题（有解决的欢迎评论区留言）</h3><p>咕咕折腾了很久，发现安装服务器监控会有几个问题：</p><ul><li>打开SSL，监控数据无法读取</li><li>只能读取本机的数据，无法读取外部机器的数据</li></ul><p>如果有小伙伴解决了，欢迎评论区留言交流！</p><h4 id="7-2-1-安装glances"><a href="#7-2-1-安装glances" class="headerlink" title="7.2.1 安装glances"></a>7.2.1 安装glances</h4><p><img src="https://img.laoda.de/i/2022/06/02/z3ohrw-0.webp" alt="image-20220602212229824"></p><p><img src="https://img.laoda.de/i/2022/06/02/zasnnr-0.webp" alt="image-20220602213427835"></p><p><img src="https://img.laoda.de/i/2022/06/02/z1qqc3-0.webp" alt="image-20220602211921431"></p><p>服务器监控插件里面调用的数据，其实是从glances里面获得的。</p><blockquote><p>Glances 是一个跨平台的、基于命令行的系统监控工具，由 Python 语言编写，使用 Python 的 <strong>psutil</strong> 库来抓取系统数据。可以监控 CPU、负载均衡、内存、网络设备、磁盘 I&#x2F;O、进程和文件系统使用等。</p><p>作者：rollingstarky<br>链接：<a href="https://www.jianshu.com/p/799e8ccbe15f">https://www.jianshu.com/p/799e8ccbe15f</a><br>来源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p></blockquote><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install python3 python3-pip -y </span><br><span class="line"></span><br><span class="line">pip3 install bottle </span><br><span class="line"></span><br><span class="line">pip3 install glances </span><br></pre></td></tr></table></figure><blockquote><p>Bottle是一个用于Python编程语言的WSGI微web框架。它被设计为快速、简单和轻量的，可以容易的和快速的开发web应用。它被作为一个单一文件模块发行，不依赖于其他的Python标准库。同一个模块可运行于Python 2.7和3.x。</p><p>来源：<a href="https://zh.wikipedia.org/zh-cn/Bottle">维基百科</a></p></blockquote><p>这个时候，你直接输入</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">glances</span><br></pre></td></tr></table></figure><p>就可以显示服务器系统信息了。</p><p>输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">glances -w</span><br></pre></td></tr></table></figure><p>就可以利用网页来打开。</p><p>不过，只要我们<code>ctrl + c</code>服务就停止了，所以我们需要给他弄成后台启动，写一个<code>service</code></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo nano /etc/systemd/system/glances.service    <span class="comment"># 名字就叫 glances.service</span></span><br></pre></td></tr></table></figure><p>输入下面这个（默认你是root用户）：</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description = Glances <span class="keyword">in</span> Web Server Mode</span><br><span class="line">After = network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart = /usr/local/bin/glances  -w  -t  5</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy = multi-user.target</span><br></pre></td></tr></table></figure><p>保存退出。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> glances.service  <span class="comment"># 开机自动启动glances</span></span><br><span class="line"></span><br><span class="line">systemctl start glances.service  <span class="comment"># 启动glances</span></span><br><span class="line"></span><br><span class="line">systemctl status glances.service  <span class="comment"># 查看glances状态</span></span><br><span class="line"></span><br><span class="line">systemctl restart glances.service  <span class="comment"># 重启glances</span></span><br></pre></td></tr></table></figure><h4 id="7-2-2-安装监控插件"><a href="#7-2-2-安装监控插件" class="headerlink" title="7.2.2 安装监控插件"></a>7.2.2 安装监控插件</h4><p>接下来，配置一下<code>conf.yml</code>文件，这边为了省事，贴一个咕咕自己的配置给大家参考，更多的配置可以看<a href="https://dashy.to/docs/widgets">文档</a>：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">appConfig:</span><br><span class="line">  theme: dashy-docs</span><br><span class="line">  layout: auto</span><br><span class="line">  iconSize: medium</span><br><span class="line">  language: cn</span><br><span class="line">  auth:</span><br><span class="line">    <span class="built_in">users</span>:</span><br><span class="line">      - user: Roy</span><br><span class="line">        <span class="built_in">hash</span>: 6477fd513dcd82a78866654f9d064e8fea54a9d95e65c95ce6aee0699bf0948c</span><br><span class="line">        <span class="built_in">type</span>: admin</span><br><span class="line">      - user: gugu</span><br><span class="line">        <span class="built_in">hash</span>: 8b2d38b789e90bb18567c2be4abbd4295f461f6453dd0447a3bf248a75eb0ae7</span><br><span class="line">        <span class="built_in">type</span>: normal</span><br><span class="line">    enableGuestAccess: <span class="literal">true</span></span><br><span class="line">pageInfo:</span><br><span class="line">  title: GuGu<span class="string">&#x27;s Dashboard</span></span><br><span class="line"><span class="string">  description: 生命不息，折腾不止！咕～</span></span><br><span class="line"><span class="string">  navLinks:</span></span><br><span class="line"><span class="string">    - title: 咕咕的博客</span></span><br><span class="line"><span class="string">      path: https://blog.laoda.de</span></span><br><span class="line"><span class="string">      target: newtab</span></span><br><span class="line"><span class="string">    - title: B站</span></span><br><span class="line"><span class="string">      path: https://space.bilibili.com/19956596</span></span><br><span class="line"><span class="string">      target: newtab</span></span><br><span class="line"><span class="string">    - title: YouTube</span></span><br><span class="line"><span class="string">      path: https://www.youtube.com/channel/UCJeNmdZBL8QahqCbzxj4l3Q</span></span><br><span class="line"><span class="string">      target: newtab</span></span><br><span class="line"><span class="string">    - title: Telegram群</span></span><br><span class="line"><span class="string">      path: https://t.me/laodade</span></span><br><span class="line"><span class="string">      target: newtab</span></span><br><span class="line"><span class="string">    - title: 请喝咖啡</span></span><br><span class="line"><span class="string">      path: https://blog.laoda.de/s/buy-me-a-coffee</span></span><br><span class="line"><span class="string">      target: newtab</span></span><br><span class="line"><span class="string">  footerText: 欢迎来找咕咕玩～</span></span><br><span class="line"><span class="string">sections:</span></span><br><span class="line"><span class="string">  - name: Memory Usage</span></span><br><span class="line"><span class="string">    icon: fas fa-memory</span></span><br><span class="line"><span class="string">    widgets:</span></span><br><span class="line"><span class="string">      - type: gl-current-mem</span></span><br><span class="line"><span class="string">        options:</span></span><br><span class="line"><span class="string">          hostname: http://95.179.242.122:61208</span></span><br><span class="line"><span class="string">        id: 0_1166_glcurrentmem</span></span><br><span class="line"><span class="string">  - name: Getting Started</span></span><br><span class="line"><span class="string">    icon: fas fa-rocket</span></span><br><span class="line"><span class="string">    items:</span></span><br><span class="line"><span class="string">      - title: Dashy Live</span></span><br><span class="line"><span class="string">        description: Development a project management links for Dashy</span></span><br><span class="line"><span class="string">        icon: https://i.ibb.co/qWWpD0v/astro-dab-128.png</span></span><br><span class="line"><span class="string">        url: https://live.dashy.to/</span></span><br><span class="line"><span class="string">        target: newtab</span></span><br><span class="line"><span class="string">        id: 0_1481_dashylive</span></span><br><span class="line"><span class="string">      - title: GitHub</span></span><br><span class="line"><span class="string">        description: Source Code, Issues and Pull Requests</span></span><br><span class="line"><span class="string">        url: https://github.com/lissy93/dashy</span></span><br><span class="line"><span class="string">        icon: favicon</span></span><br><span class="line"><span class="string">        id: 1_1481_github</span></span><br><span class="line"><span class="string">      - title: Docs</span></span><br><span class="line"><span class="string">        description: Configuring &amp; Usage Documentation</span></span><br><span class="line"><span class="string">        provider: Dashy.to</span></span><br><span class="line"><span class="string">        icon: far fa-book</span></span><br><span class="line"><span class="string">        url: https://dashy.to/docs</span></span><br><span class="line"><span class="string">        id: 2_1481_docs</span></span><br><span class="line"><span class="string">      - title: Showcase</span></span><br><span class="line"><span class="string">        description: See how others are using Dashy</span></span><br><span class="line"><span class="string">        url: https://github.com/Lissy93/dashy/blob/master/docs/showcase.md</span></span><br><span class="line"><span class="string">        icon: far fa-grin-hearts</span></span><br><span class="line"><span class="string">        id: 3_1481_showcase</span></span><br><span class="line"><span class="string">      - title: Config Guide</span></span><br><span class="line"><span class="string">        description: See full list of configuration options</span></span><br><span class="line"><span class="string">        url: https://github.com/Lissy93/dashy/blob/master/docs/configuring.md</span></span><br><span class="line"><span class="string">        icon: fas fa-wrench</span></span><br><span class="line"><span class="string">        id: 4_1481_configguide</span></span><br><span class="line"><span class="string">      - title: Support</span></span><br><span class="line"><span class="string">        description: Get help with Dashy, raise a bug, or get in contact</span></span><br><span class="line"><span class="string">        url: https://github.com/Lissy93/dashy/blob/master/.github/SUPPORT.md</span></span><br><span class="line"><span class="string">        icon: far fa-hands-helping</span></span><br><span class="line"><span class="string">        id: 5_1481_support</span></span><br><span class="line"><span class="string">  - name: 服务器相关</span></span><br><span class="line"><span class="string">    icon: fas fa-server</span></span><br><span class="line"><span class="string">    displayData:</span></span><br><span class="line"><span class="string">      sortBy: default</span></span><br><span class="line"><span class="string">      rows: 1</span></span><br><span class="line"><span class="string">      cols: 1</span></span><br><span class="line"><span class="string">      collapsed: false</span></span><br><span class="line"><span class="string">      hideForGuests: false</span></span><br><span class="line"><span class="string">    items:</span></span><br><span class="line"><span class="string">      - title: Nginx Proxy Manager</span></span><br><span class="line"><span class="string">        description: 反向代理神器</span></span><br><span class="line"><span class="string">        icon: icons/dashboard-icons/png/nginxproxymanager.png</span></span><br><span class="line"><span class="string">        url: https://la-npm.laoda.de/</span></span><br><span class="line"><span class="string">        target: newtab</span></span><br><span class="line"><span class="string">        statusCheck: true</span></span><br><span class="line"><span class="string">        id: 0_120961_nginxproxymanager</span></span><br><span class="line"><span class="string">      - title: Portainer</span></span><br><span class="line"><span class="string">        description: 容器管理神器</span></span><br><span class="line"><span class="string">        icon: icons/dashboard-icons/png/portainer.png</span></span><br><span class="line"><span class="string">        url: https://portainer.laoda.de/</span></span><br><span class="line"><span class="string">        target: newtab</span></span><br><span class="line"><span class="string">        statusCheck: true</span></span><br><span class="line"><span class="string">        id: 1_120961_portainer</span></span><br><span class="line"><span class="string">      - title: qBittorrent</span></span><br><span class="line"><span class="string">        description: 下载神器</span></span><br><span class="line"><span class="string">        icon: icons/dashboard-icons/png/qbittorrent.png</span></span><br><span class="line"><span class="string">        url: http://193.29.62.197:8081/</span></span><br><span class="line"><span class="string">        target: newtab</span></span><br><span class="line"><span class="string">        statusCheck: true</span></span><br><span class="line"><span class="string">        id: 2_120961_qbittorrent</span></span><br><span class="line"><span class="string">      - title: UptimeKuma</span></span><br><span class="line"><span class="string">        icon: icons/dashboard-icons/png/uptime-kuma.png</span></span><br><span class="line"><span class="string">        url: https://uptime.laoda.de/</span></span><br><span class="line"><span class="string">        target: newtab</span></span><br><span class="line"><span class="string">        statusCheck: true</span></span><br><span class="line"><span class="string">        id: 3_120961_uptimekuma</span></span><br><span class="line"><span class="string">  - name: CPU Usage</span></span><br><span class="line"><span class="string">    icon: fas fa-tachometer</span></span><br><span class="line"><span class="string">    displayData:</span></span><br><span class="line"><span class="string">      rows: 2</span></span><br><span class="line"><span class="string">    widgets:</span></span><br><span class="line"><span class="string">      - type: gl-current-cpu</span></span><br><span class="line"><span class="string">        options:</span></span><br><span class="line"><span class="string">          hostname: http://95.179.242.122:61208</span></span><br><span class="line"><span class="string">        id: 0_765_glcurrentcpu</span></span><br><span class="line"><span class="string">      - type: gl-current-cores</span></span><br><span class="line"><span class="string">        options:</span></span><br><span class="line"><span class="string">          hostname: http://95.179.242.122:61208</span></span><br><span class="line"><span class="string">        id: 1_765_glcurrentcores</span></span><br><span class="line"><span class="string">  - name: 效率工具</span></span><br><span class="line"><span class="string">    icon: fas fa-battery-full</span></span><br><span class="line"><span class="string">    displayData:</span></span><br><span class="line"><span class="string">      sortBy: default</span></span><br><span class="line"><span class="string">      rows: 1</span></span><br><span class="line"><span class="string">      cols: 1</span></span><br><span class="line"><span class="string">      collapsed: false</span></span><br><span class="line"><span class="string">      hideForGuests: false</span></span><br><span class="line"><span class="string">    items:</span></span><br><span class="line"><span class="string">      - title: Tinytiny RSS</span></span><br><span class="line"><span class="string">        description: RSS阅读</span></span><br><span class="line"><span class="string">        icon: icons/dashboard-icons/png/tinytinyrss.png</span></span><br><span class="line"><span class="string">        url: &#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">        target: newtab</span></span><br><span class="line"><span class="string">        statusCheck: true</span></span><br><span class="line"><span class="string">        id: 0_100395_tinytinyrss</span></span><br><span class="line"><span class="string">      - title: Yourls</span></span><br><span class="line"><span class="string">        icon: icons/dashboard-icons/png/yourls.png</span></span><br><span class="line"><span class="string">        url: &#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">        target: newtab</span></span><br><span class="line"><span class="string">        statusCheck: true</span></span><br><span class="line"><span class="string">        id: 1_100395_yourls</span></span><br><span class="line"><span class="string">      - title: EasyImages</span></span><br><span class="line"><span class="string">        icon: fas fa-image</span></span><br><span class="line"><span class="string">        url: &#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">        target: newtab</span></span><br><span class="line"><span class="string">        statusCheck: true</span></span><br><span class="line"><span class="string">        id: 2_100395_easyimages</span></span><br><span class="line"><span class="string">      - title: Joplin Server</span></span><br><span class="line"><span class="string">        icon: icons/dashboard-icons/png/joplin.png</span></span><br><span class="line"><span class="string">        url: &#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">        target: newtab</span></span><br><span class="line"><span class="string">        statusCheck: true</span></span><br><span class="line"><span class="string">        id: 3_100395_joplinserver</span></span><br><span class="line"><span class="string">      - title: Vaultwarden</span></span><br><span class="line"><span class="string">        icon: icons/dashboard-icons/png/bitwarden.png</span></span><br><span class="line"><span class="string">        url: &#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">        target: newtab</span></span><br><span class="line"><span class="string">        statusCheck: true</span></span><br><span class="line"><span class="string">        id: 4_100395_vaultwarden</span></span><br><span class="line"><span class="string">      - title: Wallabag</span></span><br><span class="line"><span class="string">        icon: icons/dashboard-icons/png/wallabag.png</span></span><br><span class="line"><span class="string">        url: &#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">        target: newtab</span></span><br><span class="line"><span class="string">        statusCheck: true</span></span><br><span class="line"><span class="string">        id: 5_100395_wallabag</span></span><br><span class="line"><span class="string">  - name: 文件管理</span></span><br><span class="line"><span class="string">    icon: fas fa-file</span></span><br><span class="line"><span class="string">    displayData:</span></span><br><span class="line"><span class="string">      sortBy: default</span></span><br><span class="line"><span class="string">      rows: 1</span></span><br><span class="line"><span class="string">      cols: 1</span></span><br><span class="line"><span class="string">      collapsed: false</span></span><br><span class="line"><span class="string">      hideForGuests: false</span></span><br><span class="line"><span class="string">    items:</span></span><br><span class="line"><span class="string">      - title: Nextcloud</span></span><br><span class="line"><span class="string">        description: &#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">        icon: icons/dashboard-icons/png/nextcloud.png</span></span><br><span class="line"><span class="string">        url: &#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">        target: newtab</span></span><br><span class="line"><span class="string">        statusCheck: true</span></span><br><span class="line"><span class="string">        id: 0_107556_nextcloud</span></span><br><span class="line"><span class="string">      - title: Alist</span></span><br><span class="line"><span class="string">        icon: fas fa-file</span></span><br><span class="line"><span class="string">        url: &#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">        target: newtab</span></span><br><span class="line"><span class="string">        statusCheck: true</span></span><br><span class="line"><span class="string">        id: 1_107556_alist</span></span><br><span class="line"><span class="string">      - title: Wordpress</span></span><br><span class="line"><span class="string">        icon: icons/dashboard-icons/png/wordpress.png</span></span><br><span class="line"><span class="string">        id: 2_107556_wordpress</span></span><br><span class="line"><span class="string">      - title: Wikijs</span></span><br><span class="line"><span class="string">        icon: icons/dashboard-icons/png/wikijs.png</span></span><br><span class="line"><span class="string">        id: 3_107556_wikijs</span></span><br><span class="line"><span class="string">      - title: gugu</span></span><br><span class="line"><span class="string">        icon: icons/dashboard-icons/png/webdav.png</span></span><br><span class="line"><span class="string">        id: 4_107556_gugu</span></span><br><span class="line"><span class="string">  - name: 娱乐</span></span><br><span class="line"><span class="string">    icon: fas fa-film</span></span><br><span class="line"><span class="string">    displayData:</span></span><br><span class="line"><span class="string">      sortBy: default</span></span><br><span class="line"><span class="string">      rows: 1</span></span><br><span class="line"><span class="string">      cols: 1</span></span><br><span class="line"><span class="string">      collapsed: false</span></span><br><span class="line"><span class="string">      hideForGuests: false</span></span><br><span class="line"><span class="string">    items:</span></span><br><span class="line"><span class="string">      - title: Navidrome</span></span><br><span class="line"><span class="string">        icon: icons/dashboard-icons/png/navidrome.png</span></span><br><span class="line"><span class="string">        url: &#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">        target: newtab</span></span><br><span class="line"><span class="string">        statusCheck: true</span></span><br><span class="line"><span class="string">        id: 0_43137_navidrome</span></span><br><span class="line"><span class="string">      - title: Jellyfin</span></span><br><span class="line"><span class="string">        icon: icons/dashboard-icons/png/jellyfin.png</span></span><br><span class="line"><span class="string">        url: &#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">        target: newtab</span></span><br><span class="line"><span class="string">        statusCheck: true</span></span><br><span class="line"><span class="string">        id: 1_43137_jellyfin</span></span><br><span class="line"><span class="string">      - title: xmrig</span></span><br><span class="line"><span class="string">        icon: icons/dashboard-icons/png/xmrig.png</span></span><br><span class="line"><span class="string">        id: 2_43137_xmrig</span></span><br><span class="line"><span class="string">      - title: Speedtest-tracker</span></span><br><span class="line"><span class="string">        icon: icons/dashboard-icons/png/speedtest-tracker.png</span></span><br><span class="line"><span class="string">        id: 3_43137_speedtesttracker</span></span><br><span class="line"><span class="string">  - name: Disk Space</span></span><br><span class="line"><span class="string">    icon: fas fa-hdd</span></span><br><span class="line"><span class="string">    widgets:</span></span><br><span class="line"><span class="string">      - type: gl-disk-space</span></span><br><span class="line"><span class="string">        options:</span></span><br><span class="line"><span class="string">          hostname: http://95.179.242.122:61208</span></span><br><span class="line"><span class="string">        id: 0_919_gldiskspace</span></span><br><span class="line"><span class="string">  - name: CPU History</span></span><br><span class="line"><span class="string">    icon: fas fa-microchip</span></span><br><span class="line"><span class="string">    displayData:</span></span><br><span class="line"><span class="string">      cols: 2</span></span><br><span class="line"><span class="string">    widgets:</span></span><br><span class="line"><span class="string">      - type: gl-cpu-history</span></span><br><span class="line"><span class="string">        options:</span></span><br><span class="line"><span class="string">          hostname: http://95.179.242.122:61208</span></span><br><span class="line"><span class="string">          limit: 60</span></span><br><span class="line"><span class="string">        id: 0_1018_glcpuhistory</span></span><br><span class="line"><span class="string">  - name: System Alerts</span></span><br><span class="line"><span class="string">    icon: fas fa-sensor-alert</span></span><br><span class="line"><span class="string">    widgets:</span></span><br><span class="line"><span class="string">      - type: gl-alerts</span></span><br><span class="line"><span class="string">        options:</span></span><br><span class="line"><span class="string">          hostname: http://95.179.242.122:61208</span></span><br><span class="line"><span class="string">        id: 0_1296_glalerts</span></span><br><span class="line"><span class="string">  - name: System Load</span></span><br><span class="line"><span class="string">    icon: fas fa-tasks-alt</span></span><br><span class="line"><span class="string">    widgets:</span></span><br><span class="line"><span class="string">      - type: gl-system-load</span></span><br><span class="line"><span class="string">        options:</span></span><br><span class="line"><span class="string">          hostname: http://95.179.242.122:61208</span></span><br><span class="line"><span class="string">        id: 0_1061_glsystemload</span></span><br><span class="line"><span class="string">    displayData:</span></span><br><span class="line"><span class="string">      sortBy: default</span></span><br><span class="line"><span class="string">      rows: 1</span></span><br><span class="line"><span class="string">      cols: 1</span></span><br><span class="line"><span class="string">      collapsed: true</span></span><br><span class="line"><span class="string">      hideForGuests: false</span></span><br><span class="line"><span class="string">  - name: Network Interfaces</span></span><br><span class="line"><span class="string">    icon: fas fa-ethernet</span></span><br><span class="line"><span class="string">    widgets:</span></span><br><span class="line"><span class="string">      - type: gl-network-interfaces</span></span><br><span class="line"><span class="string">        options:</span></span><br><span class="line"><span class="string">          hostname: http://95.179.242.122:61208</span></span><br><span class="line"><span class="string">          limit: 500</span></span><br><span class="line"><span class="string">        id: 0_1806_glnetworkinterfaces</span></span><br><span class="line"><span class="string">    displayData:</span></span><br><span class="line"><span class="string">      sortBy: default</span></span><br><span class="line"><span class="string">      rows: 1</span></span><br><span class="line"><span class="string">      cols: 1</span></span><br><span class="line"><span class="string">      collapsed: true</span></span><br><span class="line"><span class="string">      hideForGuests: false</span></span><br><span class="line"><span class="string">  - name: Disk IO</span></span><br><span class="line"><span class="string">    icon: fas fa-disc-drive</span></span><br><span class="line"><span class="string">    widgets:</span></span><br><span class="line"><span class="string">      - type: gl-disk-io</span></span><br><span class="line"><span class="string">        options:</span></span><br><span class="line"><span class="string">          hostname: http://95.179.242.122:61208</span></span><br><span class="line"><span class="string">        id: 0_579_gldiskio</span></span><br><span class="line"><span class="string">    displayData:</span></span><br><span class="line"><span class="string">      sortBy: default</span></span><br><span class="line"><span class="string">      rows: 1</span></span><br><span class="line"><span class="string">      cols: 1</span></span><br><span class="line"><span class="string">      collapsed: true</span></span><br><span class="line"><span class="string">      hideForGuests: false</span></span><br></pre></td></tr></table></figure><p>注意观察，其实<code>yml</code>文件都是有规律的，灵活变通。</p><p>Font Awesome：<a href="http://www.fontawesome.com.cn/">http://www.fontawesome.com.cn/</a></p><p>图标路径：<code>icons/dashboard-icons/png/xxxx.png</code></p><p>修改完之后之后再重新运行 Dashy 即可：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="built_in">cd</span> /root/data/docker_data/dashy</span><br><span class="line"></span><br><span class="line">docker-compose restart</span><br></pre></td></tr></table></figure><blockquote><p>对于上述问题，有解决的小伙伴欢迎在评论区留言交流！</p></blockquote><h2 id="8-结尾"><a href="#8-结尾" class="headerlink" title="8. 结尾"></a>8. 结尾</h2><p>祝大家用得开心，有问题可以去GitHub提<a href="https://github.com/Lissy93/dashy/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，有能力给项目做贡献的同学，也欢迎积极加入到<a href="https://github.com/Lissy93/dashy">项目</a>中来，贡献自己的一份力量！</p><h2 id="9-参考资料"><a href="#9-参考资料" class="headerlink" title="9. 参考资料"></a>9. 参考资料</h2><p><a href="https://shownotes.opensourceisawesome.com/dashy-powerful-informative/">https://shownotes.opensourceisawesome.com/dashy-powerful-informative/</a></p><p><a href="https://github.com/Lissy93/dashy">https://github.com/Lissy93/dashy</a></p><p><a href="https://dashy.to/">https://dashy.to/</a></p><p><a href="https://demo.dashy.to/">https://demo.dashy.to/</a></p><p><a href="https://dashy.to/docs/">https://dashy.to/docs/</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Dashy </tag>
            
            <tag> 面板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【有用的小知识】服务器到底是什么？选VPS还是VDS？NAT和虚拟主机是个啥？裸金属是个啥？</title>
      <link href="/archives/server-selection/"/>
      <url>/archives/server-selection/</url>
      
        <content type="html"><![CDATA[<h2 id="搭建视频"><a href="#搭建视频" class="headerlink" title="搭建视频"></a>搭建视频</h2><p>YouTube：<a href="https://youtu.be/8PxbPU4g8aQ">https://youtu.be/8PxbPU4g8aQ</a></p><p>哔哩哔哩【高清版本可以点击去吐槽到B站观看】：<joe-bilibili bvid="BV1vY411u7Zw"></joe-bilibili></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前段时间发了视频，有小伙伴留言，问有没有最强VPS：</p><img src="https://img.laoda.de/i/2022/05/25/w7b7ly-0.webp" alt="image-20220525194716942" style="zoom:50%;" /><p>今天就和大家系统聊聊服务器那些事儿。</p><p><strong>什么是物理服务器？</strong></p><p><strong>什么是虚拟服务器？</strong></p><p><strong>裸金属是什么？</strong></p><p><strong>VPS属于什么服务器？</strong></p><h2 id="1-什么是服务器？"><a href="#1-什么是服务器？" class="headerlink" title="1. 什么是服务器？"></a>1. 什么是服务器？</h2><p><img src="https://img.laoda.de/i/2022/05/25/xtv3jm-0.webp" alt="wallhaven-v99jxm_1920x1080"></p><p>最简单来说，服务器就是一台<code>24小时开机</code>的电脑，它有<code>公网IP</code>，任何一台能上网的机器都能访问到它，由于人人都能访问到它，很容易会受到攻击，所以一般采用开源的<code>Linux系统</code>。</p><p>而且由于跑的是一些24小时的服务，所以一般不会装图形化界面（GUI），一般给它发送命令都是通过<code>SSH</code>的命令行模式（CLI）来进行。</p><h2 id="2-什么是物理服务器？"><a href="#2-什么是物理服务器？" class="headerlink" title="2. 什么是物理服务器？"></a>2. 什么是物理服务器？</h2><p><img src="https://img.laoda.de/i/2022/05/25/xt8xzq-0.webp" alt="wallhaven-nr2p17_1920x1080"></p><p>又叫独立服务器或者传统服务器。</p><p>顾名思义，物理服务器就是一台台看得见摸得着，摆在机房的实实在在的服务器。</p><p>我们可以理解为是一台具有高计算能力、高性能、高安全性、高稳定性、高可控性，独立又完整的电脑。有硬盘、内存、CPU，可以自行分配实行多种网络功能服务，将各种软硬件资源集于一身。</p><h3 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h3><ul><li>适合大型网站及应用</li></ul><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><ul><li>性能好</li><li>安全性高</li><li>资源独享</li></ul><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><ul><li>需要专业的服务器运维人员管理</li><li>灵活性弱，扩展限制大</li><li>价格高</li></ul><h3 id="价格"><a href="#价格" class="headerlink" title="价格"></a>价格</h3><ul><li>贵</li></ul><h2 id="3-云服务器"><a href="#3-云服务器" class="headerlink" title="3. 云服务器"></a>3. 云服务器</h2><p><img src="https://img.laoda.de/i/2022/05/25/xuuo70-0.webp" alt="Premium Vector | Business technology cloud storage and cloud server service  concept"></p><p>由于物理服务器前期投入大，对技术的要求高，而且后期维护有恒温恒电等要求，许多企业会选择将服务器进行托管，比如托管到运营商机房，节省一些人力物力的成本。</p><p>随着云计算概念逐渐发展、成熟，企业上云也变得原来越火。</p><p>云服务器应运而生。</p><p>对比物理服务器扩展不方便，云服务器最突出的一个特点就是——可扩展性强。</p><p>当你是一个小团队的时候，你可以选择低配的云服务器，当公司业务做大了之后，可以升级你的服务器配置，而且，你不需要前期投资去买实体的服务器，去建设自己的机房等等，总而言之，就是方便 + 能够让你更加省钱。</p><p>一些企业由于业务保密或者是安全的需要会选择私有云，另一些企业会直接选择公有云。</p><p><img src="https://img.laoda.de/i/2022/05/25/kj5jvy-0.webp" alt="image-20220525124145950"></p><p>上面这幅图就列举了常见的几种云服务器——<strong>虚拟私人服务器（VPS）</strong>、虚拟专用服务器（VDS）、<strong>裸金属&#x2F;独立服务器（BM&#x2F;DS）</strong>、<strong>大硬盘服务器（STORAGE BOX）</strong>。</p><p>听起来很复杂，不急，我们下面一一给大家介绍。</p><p>首先在介绍服务器之前，我们先来介绍最简单的虚拟主机(Web Hosting)和NAT。</p><h3 id="3-1-虚拟主机-Web-Hosting"><a href="#3-1-虚拟主机-Web-Hosting" class="headerlink" title="3.1 虚拟主机(Web Hosting)"></a>3.1 虚拟主机(Web Hosting)</h3><p><img src="https://img.laoda.de/i/2022/05/25/xvizqj-0.webp" alt="image-20220525204830501"></p><p>虚拟主机：又叫共享主机。是一种在单一主机或主机群上，比如物理服务器、VPS服务器或者云服务器上安装例如CPanel、Plesk等面板搭建而成的。</p><p>如果说用租房来比喻VPS和虚拟主机之间的区别，那VPS相当于整租，虚拟主机就是合租。但整租是毛坯房，合租是精装房。</p><h4 id="应用场景-1"><a href="#应用场景-1" class="headerlink" title="应用场景"></a>应用场景</h4><p>适用于非Java项目，且流量、内存较小的网站应用，举个例子，如果你想搭建一个Wordpress网站，不想折腾，操心配置，那么虚拟主机就是一个很好的选择。</p><h4 id="优点-1"><a href="#优点-1" class="headerlink" title="优点"></a>优点</h4><ul><li>基本上不需要折腾，开箱即用</li></ul><h4 id="缺点-1"><a href="#缺点-1" class="headerlink" title="缺点"></a>缺点</h4><ul><li>性能不足（网站在应对大流量访问时性能不足，对速度和流量有非常大的限制）</li><li>自由度低</li></ul><h4 id="价格-1"><a href="#价格-1" class="headerlink" title="价格"></a>价格</h4><ul><li>一般比较便宜</li></ul><h3 id="3-2-虚拟服务器-NAT-VPS"><a href="#3-2-虚拟服务器-NAT-VPS" class="headerlink" title="3.2 虚拟服务器(NAT-VPS)"></a>3.2 虚拟服务器(NAT-VPS)</h3><p><img src="https://img.laoda.de/i/2022/05/25/xw2ye4-0.webp" alt="image-20220525204924844"></p><p>基于 NAT 的虚拟服务器（又叫 NAT 鸡），是在VPS的基础上，通过共享 IP 的方式，为这个 IP 下的服务器提供外网访问能力。</p><p>说白了，就是NAT机公用一个IP地址，然后分配了不同的端口（服务器一共有65536个端口）</p><p>通常可能是1号NAT机端口是1000-1100，2号NAT机端口是1101-1200，以此类推。</p><p>与虚拟主机相比，只是有很多个端口你是可以随意使用的，自由度比虚拟主机高，</p><p>与VPS相比，你只能使用有限的端口，自由低比VPS低。</p><h4 id="应用场景-2"><a href="#应用场景-2" class="headerlink" title="应用场景"></a>应用场景</h4><ul><li>梯子、中转</li></ul><h4 id="优点-2"><a href="#优点-2" class="headerlink" title="优点"></a>优点</h4><ul><li>相对于VPS来讲，价格更加低廉（因为几乎没有 IP 的费用）</li></ul><h4 id="缺点-2"><a href="#缺点-2" class="headerlink" title="缺点"></a>缺点</h4><ul><li><p>如果你碰到一个折腾的邻居（尤其是拿到服务器就装 VPN啥的），会导致服务器 IP 被墙。</p></li><li><p>服务器 IP 一旦被墙，会导致同 IP 下所有的NAT机全部无法连接（有 DDNS 的话这点还能好点）</p></li><li><p>只能使用固定的端口访问服务器，而且无法用来建站（强行信仰建站当我没说）</p></li></ul><h4 id="价格-2"><a href="#价格-2" class="headerlink" title="价格"></a>价格</h4><ul><li>一般比较便宜</li></ul><h3 id="3-3-虚拟私人服务器-Virtual-Private-Server-VPS"><a href="#3-3-虚拟私人服务器-Virtual-Private-Server-VPS" class="headerlink" title="3.3 虚拟私人服务器(Virtual Private Server VPS)"></a>3.3 虚拟私人服务器(Virtual Private Server VPS)</h3><p><img src="https://img.laoda.de/i/2022/05/25/xwj2hy-0.webp" alt="image-20220525204959597"></p><p>虚拟私人服务器（又叫VPS、小鸡），是指服务商通过虚拟化技术（比如KVM、OpenVZ、Xen等），分割一整台（或者多台）物理服务器的资源，取其中的一部分资源供你使用。</p><p>由于是从物理服务器上虚拟出来的产品，因此没有物理服务器稳定，运算速度也要慢一些，性能不高，适合对配置要求不高的客户。</p><p>（展开讲，存在超售的行为）</p><h4 id="应用场景-3"><a href="#应用场景-3" class="headerlink" title="应用场景"></a>应用场景</h4><ul><li>适合预算不多的网站和应用</li><li>最适合普通玩家</li></ul><h4 id="优点-3"><a href="#优点-3" class="headerlink" title="优点"></a>优点</h4><ul><li>资源可以灵活分配，按需选择配置</li><li>价格适中</li><li>可玩性强</li></ul><h4 id="缺点-3"><a href="#缺点-3" class="headerlink" title="缺点"></a>缺点</h4><ul><li><p>配置不及独立服务器</p></li><li><p>宿主物理服务器（母鸡）阵亡，当前服务器下所有的VPS（小鸡）全部跟着阵亡（极少发生，但也分商家）</p></li><li><p>部分服务商会选择超售，或者你遇到一个恶意长时间占用资源的邻居（比如长时间PT下载、搭机场、挖矿等），导致实际性能不如标称配置性能，甚至发生宕机</p></li></ul><h4 id="价格-3"><a href="#价格-3" class="headerlink" title="价格"></a>价格</h4><ul><li>可以接受范围之内</li></ul><h3 id="3-4-虚拟服务器-阿里ECS-腾讯CVM"><a href="#3-4-虚拟服务器-阿里ECS-腾讯CVM" class="headerlink" title="3.4 虚拟服务器(阿里ECS&#x2F;腾讯CVM)"></a>3.4 虚拟服务器(阿里ECS&#x2F;腾讯CVM)</h3><p><img src="https://img.laoda.de/i/2022/05/25/xx5shv-0.webp" alt="image-20220525205105562"></p><p><img src="https://img.laoda.de/i/2022/05/25/xx9dvl-0.webp" alt="image-20220525205122136"></p><p>又叫云主机，简称ECS。在一组集群服务器上虚拟出多个类似独立服务器的部分。云服务器不是单个的物理服务器，它们之间通过网络技术连接起来形成一台超级计算机，拥有独立的宽带和IP。云服务器具有安全可靠性高、易部署、扩展性高（即时扩展，按需扩展）、性价比高等特点。因为是多个服务器的集群，云服务器还具有硬件独享、资源独享、风险共享的优势。云服务器还具备容错性，故障恢复快，操作系统和软件环境皆可备份，恢复后无需重新配置软件环境。</p><p>一句话，和上面的VPS相比，ECS是资源一般是独享的。</p><h4 id="应用场景-4"><a href="#应用场景-4" class="headerlink" title="应用场景"></a>应用场景</h4><p>适用于中小型网站和应用。</p><h4 id="优点-4"><a href="#优点-4" class="headerlink" title="优点"></a>优点</h4><ul><li>相比物理服务器更灵活</li><li>弹性伸缩管理</li><li>价格可按需实时制定，避免造成网络资源的浪费，降低了运营成本</li></ul><h4 id="缺点-4"><a href="#缺点-4" class="headerlink" title="缺点"></a>缺点</h4><ul><li>在安全性能方面，用户缺乏对云服务器的控制（因此出于企业数据安全层面考虑，建议选择大厂商）</li></ul><h4 id="价格-4"><a href="#价格-4" class="headerlink" title="价格"></a>价格</h4><ul><li>相对较高</li></ul><h3 id="3-5-虚拟专用服务器（Virtual-Dedicated-Servers-VDS）【Netcup（ROOT-SERVER）】"><a href="#3-5-虚拟专用服务器（Virtual-Dedicated-Servers-VDS）【Netcup（ROOT-SERVER）】" class="headerlink" title="3.5 虚拟专用服务器（Virtual Dedicated Servers  VDS）【Netcup（ROOT SERVER）】"></a>3.5 虚拟专用服务器（Virtual Dedicated Servers  VDS）【Netcup（ROOT SERVER）】</h3><p>小独立服务器。</p><p><img src="https://img.laoda.de/i/2022/05/25/xxrwu1-0.webp" alt="image-20220525205208797"></p><p><img src="https://img.laoda.de/i/2022/05/25/yukiea-0.webp" alt="image-20220525210716128"></p><h3 id="3-6-物理独立服务器-裸金属（Dedicated-Servers-Bare-Metal-Servers-裸金属）"><a href="#3-6-物理独立服务器-裸金属（Dedicated-Servers-Bare-Metal-Servers-裸金属）" class="headerlink" title="3.6 物理独立服务器&#x2F;裸金属（Dedicated Servers&#x2F;Bare Metal Servers 裸金属）"></a>3.6 物理独立服务器&#x2F;裸金属（Dedicated Servers&#x2F;Bare Metal Servers 裸金属）</h3><p><img src="https://img.laoda.de/i/2022/05/25/yxldel-0.webp" alt="image-20220525211223317"></p><p><img src="https://img.laoda.de/i/2022/05/25/xwozuj-0.webp" alt="image-20220525205027037"></p><p><img src="https://img.laoda.de/i/2022/05/25/yx36yd-0.webp" alt="image-20220525211138970"></p><p>独立服务器（又叫母鸡、独服、杜甫、毒妇），是指服务商提供给你一整台物理服务器的资源供你使用，整台服务器上的资源全部供你使用，不会有任何人跟你抢占服务器资源。</p><p>类似云上的专属物理服务器，在拥有弹性灵活的基础上，具有高性能的计算能力。</p><p>计算性能与传统物理机无差别，具有安全物理隔离的特点。</p><p>相当于传统物理服务器的“变态版”。裸金属服务器是集物理服务器的稳定性能，和云服务器高度弹性的资源优势于一身的超级平台。兼具超高计算性能的同时，满足用户对核心应用场景和服务器稳定性的要求。比如，阿里云弹性裸金属服务器-神龙，就具备这样的特点。</p><p><img src="https://img.laoda.de/i/2022/05/25/xo95nj-0.webp" alt="image-20220525203609627"></p><h4 id="应用场景-5"><a href="#应用场景-5" class="headerlink" title="应用场景"></a>应用场景</h4><p>适用于对数据安全、性能配置、安全监管等都要求非常严格的Web网站、中大型企业等重量级数据库应用、游戏和金融等高性能网站和应用。</p><h4 id="优点-5"><a href="#优点-5" class="headerlink" title="优点"></a>优点</h4><ul><li>服务器性能强大，资源充足</li><li>集合了物理服务器的稳定性和云服务器云上资源高度弹性的优势，性能更高，更灵活</li></ul><h4 id="缺点-5"><a href="#缺点-5" class="headerlink" title="缺点"></a>缺点</h4><ul><li>价格过于昂贵</li></ul><h4 id="价格-5"><a href="#价格-5" class="headerlink" title="价格"></a>价格</h4><ul><li>赶人</li></ul><h3 id="3-7-存储型服务器-Storage-Box"><a href="#3-7-存储型服务器-Storage-Box" class="headerlink" title="3.7 存储型服务器(Storage Box)"></a>3.7 存储型服务器(Storage Box)</h3><p><img src="https://img.laoda.de/i/2022/05/25/yy1lr5-0.webp" alt="image-20220525211300657"></p><p>适合用来做文件储存的备份服务器，一般有并发限制，硬盘的读取速度也很一般。</p><h4 id="应用场景-6"><a href="#应用场景-6" class="headerlink" title="应用场景"></a>应用场景</h4><ul><li>文件备份</li></ul><h4 id="优点-6"><a href="#优点-6" class="headerlink" title="优点"></a>优点</h4><ul><li>物美价廉</li></ul><h4 id="缺点-6"><a href="#缺点-6" class="headerlink" title="缺点"></a>缺点</h4><ul><li>有并发限制</li><li>机器性能一般</li></ul><h4 id="价格-6"><a href="#价格-6" class="headerlink" title="价格"></a>价格</h4><ul><li>适中</li></ul><h2 id="4-推荐阅读"><a href="#4-推荐阅读" class="headerlink" title="4. 推荐阅读"></a>4. 推荐阅读</h2><h3 id="4-1-各类VPS服务器购买分享"><a href="#4-1-各类VPS服务器购买分享" class="headerlink" title="4.1 各类VPS服务器购买分享"></a>4.1 各类VPS服务器购买分享</h3><p><a href="https://blog.laoda.de/tags/us-vps">美国VPS推荐</a></p><p><a href="https://blog.laoda.de/tags/eu-vps">欧洲VPS推荐</a></p><p><a href="https://blog.laoda.de/tags/asia-vps">亚太VPS推荐</a></p><h3 id="4-2-服务器线路、IP及机房知识"><a href="#4-2-服务器线路、IP及机房知识" class="headerlink" title="4.2 服务器线路、IP及机房知识"></a>4.2 服务器线路、IP及机房知识</h3><p><a href="https://blog.laoda.de/archives/cheap-datacenters">【冷知识】说说国外几大廉价机房，MC、CC、INAP、QN、Sharktech几大机房</a></p><p><a href="https://blog.laoda.de/archives/vps-speedtest">【VPS选购分享】影响VPS速度的几个因素以及测试的方法（Ping值测试、网速测试、路由测试、Looking Glass）</a></p><p><a href="https://blog.laoda.de/archives/vps-route">【VPS选购小常识】VPS线路解析不完全指南 什么是CN2 GIA？什么是AS9929、AS4837？什么是CU VIP？什么是移动CMI？如何判断回程路由？</a></p><p><a href="https://blog.laoda.de/archives/ip-netflix">【有用的小知识】原生IP是什么？原生IP和解锁奈飞（Netflix）是什么关系？广播IP和原生IP有什么区别？</a></p><h2 id="5-如何选择适合自己的服务器（网上抄的）"><a href="#5-如何选择适合自己的服务器（网上抄的）" class="headerlink" title="5. 如何选择适合自己的服务器（网上抄的）"></a>5. 如何选择适合自己的服务器（网上抄的）</h2><p>科普了这么多，可能大家最关心的还是如何选择适合自己的服务器。一般来说，选用服务器需要从以下几个维度来衡量性能指标：</p><h3 id="4-1-可用性"><a href="#4-1-可用性" class="headerlink" title="4.1 可用性"></a>4.1 可用性</h3><p>可用性是指在一段时间内服务器可供访问者正常使用的时间的百分比。提高可用性可从两方面着手：减少硬件平均故障时间和利用专用功能机制。专用功能机制可在出现故障时自动执行系统或部件切换机制，避免或减少意外停机。</p><h3 id="5-2-高性能"><a href="#5-2-高性能" class="headerlink" title="5.2 高性能"></a>5.2 高性能</h3><p>顾名思义，指服务器综合性能指标要高。主要要求在运行速度、磁盘空间、容错能力、扩展能力、稳定性、监测功能及电源等方面具有较高的性能指标。尤其是硬盘和电源的热插拔性能、网卡的自适应能力等性能指标要高。</p><h3 id="5-3-模块化"><a href="#5-3-模块化" class="headerlink" title="5.3 模块化"></a>5.3 模块化</h3><p>模块化是指电源、网卡、SCSI卡、硬盘等部件为模块化结构，且都具有热插拔功能，可在线维护，从而使系统停机的可能性大大减小。特别是分布式电源技术可使每个重要的部件都有独立的电源。</p><h3 id="5-4-可扩展性"><a href="#5-4-可扩展性" class="headerlink" title="5.4 可扩展性"></a>5.4 可扩展性</h3><p>为了使服务器随负荷的增加可以平稳升级，并保证服务器工作的安全性与稳定性，必须将服务器的可扩展性能作为一项重要衡量指标。首先，在机架上要有为硬盘和电源的增加而预留充分的空间。其次主机上的插槽不但要种类齐全，而且要有一定的余量。</p><h3 id="5-5-可管理性"><a href="#5-5-可管理性" class="headerlink" title="5.5 可管理性"></a>5.5 可管理性</h3><p>可管理性是指服务器的管理是否方便、快捷，应用软件是否丰富。在可管理性方面，基于Windows NT／2000平台的个人计算机服务器要优于Unix服务器。</p><p>当然，除了以上这些因素是在选购服务器时需要重点考虑的之外。品牌、价格、售后服务以及厂商实力等因素也是需要考虑在内的。</p><h2 id="6-其他问题（网上抄的）"><a href="#6-其他问题（网上抄的）" class="headerlink" title="6. 其他问题（网上抄的）"></a>6. 其他问题（网上抄的）</h2><p>讲到这里，相信大家对服务器的种类区别，以及如何选择适合自己的服务器已经心里有数了。但我最近也收到一些用户的反馈，他们对另外一些服务器相关的问题还存在疑惑，希望我能帮忙解答一下。借此机会，我也一并分享下。</p><h3 id="问题一：一个网站需要多少服务器？"><a href="#问题一：一个网站需要多少服务器？" class="headerlink" title="问题一：一个网站需要多少服务器？"></a>问题一：一个网站需要多少服务器？</h3><p>这个问题没法直接给出具体数字，因为影响一个网站所需服务器数量的因素有很多，最简单的比如网站源代码。事实上源代码写得越牛，需要的服务器数量就可以越少。反之，则越多。其次，网站业务量越大，整体架构就会越复杂。服务器数量的评估，需要根据不同业务系统的特点具体分析。</p><h3 id="问题二：中小型企业需要多少服务器："><a href="#问题二：中小型企业需要多少服务器：" class="headerlink" title="问题二：中小型企业需要多少服务器："></a>问题二：中小型企业需要多少服务器：</h3><p>情况一：企业自研发网站，就可以根据业务规模以及业务系统特点，选用不同配置的云服务器。比如阿里云服务器常用的配置有1核1G、1核2G、2核4G、2核8G、4核8G、4核16G、16核32G等，这些都是中小企业用户购买最多的，可以说是爆款云服务器配置。至于数量，这个需要根据网站的实际情况而定。</p><p>情况二：如果企业是购买的阿里云模板建站、半定制化建站产品，则不需要购买服务器。比如阿里云速成美站和云企业官网，服务器是包含在建站费用里的。拥有云服务器（ECS）、负载匀衡(SLB)、云数据库（RDS）、云存储（OSS）、网络加速（CDN）等云计算资源集群，以SaaS的方式提供给用户，让每一个网页都能秒开，同时确保网站稳定。</p><h3 id="问题三：大型网站需要多少服务器？"><a href="#问题三：大型网站需要多少服务器？" class="headerlink" title="问题三：大型网站需要多少服务器？"></a>问题三：大型网站需要多少服务器？</h3><p>对于电商网站来说，每天都会有大量用户访问，进行购买操作。所以服务器需要进行大量的数据请求处理，因此用于电商网站的服务器在CPU、内存上的要求会比较高。</p><p>对于视频类网站，除了用户访问请求和下载数据外，还需要有大硬盘、大带宽的配置，才能保障用户在观看视频时不会出现卡顿。</p><p>对于大型网站来说，无论是图片网站、视频网站、门户网站、企业网站、还是电商网站，在租用服务器时，需要注意基本的配置标准。比如CPU、硬盘、内存、带宽、防御上的配置都是需要我们考虑的。通常情况下，CPU建议最好是选择8核以上的，视频网站的话，内存不要低于16G，硬盘至少要1T，带宽独享100M会更好些。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://zhuanlan.zhihu.com/p/346666166">https://zhuanlan.zhihu.com/p/346666166</a></p><p><a href="https://www.itbulu.com/what-is-wuliserver.html">https://www.itbulu.com/what-is-wuliserver.html</a></p><p><a href="https://ednovas.xyz/2021/05/09/nat/#2-%E8%99%9A%E6%8B%9F%E6%9C%8D%E5%8A%A1%E5%99%A8-VPS">https://ednovas.xyz/2021/05/09/nat/#2-%E8%99%9A%E6%8B%9F%E6%9C%8D%E5%8A%A1%E5%99%A8-VPS</a></p><p><a href="https://blog.ilemonrain.com/linux/nat-server-tutorial.html">https://blog.ilemonrain.com/linux/nat-server-tutorial.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VDS </tag>
            
            <tag> 虚拟主机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩儿的Docker项目】10分钟搭建一个功能更强大的图床——Lsky Pro</title>
      <link href="/archives/docker-compose-install-lskypro/"/>
      <url>/archives/docker-compose-install-lskypro/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.laoda.de/i/2022/05/28/go5v4n-0.webp"></p><h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1. 介绍"></a>1. 介绍</h2><p>Lsky Pro 是一个用于在线上传、管理图片的图床程序，中文名：兰空图床，你可以将它作为自己的云上相册，亦可以当作你的写作贴图库。<br>兰空图床始于 2017 年 10 月，最早的版本由 ThinkPHP 5 开发，后又经历了数个版本的迭代，在 2021 年末启动了新的重写计划并于 2022 年 3 月份发布全新的 2.0 版本。</p><h3 id="1-1-特点"><a href="#1-1-特点" class="headerlink" title="1.1 特点"></a>1.1 特点</h3><p>咕咕这边简单在网上也<del>抄</del>搜集了一些特点，供大家参考：</p><ul><li>支持<code>本地</code>等多种第三方云储存 <code>AWS S3</code>、<code>阿里云 OSS</code>、<code>腾讯云 COS</code>、<code>七牛云</code>、<code>又拍云</code>、<code>SFTP</code>、<code>FTP</code>、<code>WebDav</code>、<code>Minio</code></li><li>多种数据库驱动支持，<code>MySQL 5.7+</code>、<code>PostgreSQL 9.6+</code>、<code>SQLite 3.8.8+</code>、<code>SQL Server 2017+</code></li><li>支持配置使用多种缓存驱动，<code>Memcached</code>、<code>Redis</code>、<code>DynamoDB</code>、等其他关系型数据库，默认以文件的方式缓存</li><li>多图上传、拖拽上传、粘贴上传、动态设置策略上传、复制、一键复制链接</li><li>强大的图片管理功能，瀑布流展示，支持鼠标右键、单选多选、重命名等操作</li><li>自由度极高的角色组配置，可以为每个组配置多个储存策略，同时储存策略可以配置多个角色组</li><li>可针对角色组设置上传文件、文件夹路径命名规则、上传频率限制、图片审核等功能</li><li>支持图片水印、文字水印、水印平铺、设置水印位置、X&#x2F;y 轴偏移量设置、旋转角度等</li><li>支持通过接口上传、管理图片、管理相册</li><li>支持在线增量更新、跨版本更新</li><li>图片广场</li></ul><h3 id="1-2-安装要求-（我们用Docker安装！）"><a href="#1-2-安装要求-（我们用Docker安装！）" class="headerlink" title="1.2 安装要求 （我们用Docker安装！）"></a>1.2 安装要求 （我们用Docker安装！）</h3><ul><li><del>PHP &gt;&#x3D; 8.0.2</del></li><li><del>BCMath PHP 扩展</del></li><li><del>Ctype PHP 扩展</del></li><li><del>DOM PHP 拓展</del></li><li><del>Fileinfo PHP 扩展</del></li><li><del>JSON PHP 扩展</del></li><li><del>Mbstring PHP 扩展</del></li><li><del>OpenSSL PHP 扩展</del></li><li><del>PDO PHP 扩展</del></li><li><del>Tokenizer PHP 扩展</del></li><li><del>XML PHP 扩展</del></li><li><del>Imagick 拓展</del></li><li><del>exec、shell_exec 函数</del></li><li><del>readlink、symlink 函数</del></li><li><del>putenv、getenv 函数</del></li></ul><h3 id="1-3-支持的数据库"><a href="#1-3-支持的数据库" class="headerlink" title="1.3 支持的数据库"></a>1.3 支持的数据库</h3><ul><li>Mysql 5.7+</li><li>PostgreSQL 9.6+</li><li>SQLite 3.8.8+</li><li>SQL Server 2017+</li></ul><p>感觉有没有心动呢？</p><p>来动手搞一个玩玩吧～</p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p>GitHub原项目地址（感谢作者的付出）：<a href="https://github.com/lsky-org/lsky-pro%EF%BC%882.3k">https://github.com/lsky-org/lsky-pro（2.3k</a> star）</p><p>官网地址：<a href="https://www.lsky.pro/">https://www.lsky.pro/</a></p><p>文档地址：<a href="https://docs.lsky.pro/">https://docs.lsky.pro/</a></p><p>本期用的Docker镜像地址 （感谢<a href="https://hellodk.cn/">@<strong>Allen Hua</strong></a>）：<a href="https://hub.docker.com/r/dko0/lsky-pro">https://hub.docker.com/r/dko0/lsky-pro</a> </p><p>PicGo插件：lankong（再次感谢<a href="https://hellodk.cn/">@<strong>Allen Hua</strong></a>）<a href="https://hellodk.cn/post/964">https://hellodk.cn/post/964</a></p><p>直接丢几个图片：</p><h2 id="3-搭建环境"><a href="#3-搭建环境" class="headerlink" title="3. 搭建环境"></a>3. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器24元&#x2F;月VPS一台</del>展示用的服务器是<a href="https://netcup-sonderangebote.de/">Netcup</a>特价款，本期搭建用的是<a href="https://loll.cc/vultr">Vultr</a>的服务器，按小时计费，可随时销毁（最好是选<strong>非大陆的服务器</strong>）（<a href="https://loll.cc/tx">腾讯轻量购买链接</a>）<a href="https://loll.cc/hz">Hetzner注册免费得25欧试用金有效期一个月</a></li><li>系统：Debian 10（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本</a> 非必需DD用原来的系统也OK）</li><li>域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>安装好Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需】提前安装好宝塔面板海外版本aapanel，并安装好Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程采用】安装好Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><h2 id="4-搭建视频（还没拍-待上传-）"><a href="#4-搭建视频（还没拍-待上传-）" class="headerlink" title="4. 搭建视频（还没拍 待上传 &#x3D; &#x3D;）"></a>4. 搭建视频（<del>还没拍</del> 待上传 &#x3D; &#x3D;）</h2><p>YouTube：<a href="https://youtu.be/ukOLHIMC2R4">https://youtu.be/ukOLHIMC2R4</a></p><p>哔哩哔哩【高清版本可以点击去吐槽到B站观看】：<joe-bilibili bvid="BV1bS4y1q7oe"></joe-bilibili></p><h2 id="5-搭建方式"><a href="#5-搭建方式" class="headerlink" title="5. 搭建方式"></a>5. 搭建方式</h2><h3 id="5-1-搭建"><a href="#5-1-搭建" class="headerlink" title="5.1 搭建"></a>5.1 搭建</h3><p>服务器初始设置，参考</p><p><a href="https://blog.laoda.de/archives/vps-script"><strong>新买了一台服务器“必须”要做的6件小事</strong></a></p><p><a href="https://blog.laoda.de/archives/hello-docker">【Docker系列】不用宝塔面板，小白一样可以玩转VPS服务器！</a></p><blockquote><p>注意：VPS的内存如果过小，建议设置一下SWAP，一般为内存的1-1.5倍即可，可以让运行更流畅！</p></blockquote><p>设置SWAP可以用脚本:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O box.sh https://raw.githubusercontent.com/BlueSkyXN/SKY-BOX/main/box.sh &amp;&amp; <span class="built_in">chmod</span> +x box.sh &amp;&amp; clear &amp;&amp; ./box.sh</span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/05/28/uoikkd-0.webp" alt="image-20220528185512488"></p><p>选择<code>18</code>，然后输入你想要扩容的数值即可。</p><p><img src="https://img.laoda.de/i/2022/05/28/up2dkf-0.webp" alt="image-20220528185604586"></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i <span class="comment"># 切换到root用户</span></span><br><span class="line"></span><br><span class="line">apt update -y  <span class="comment"># 升级packages</span></span><br><span class="line"></span><br><span class="line">apt install wget curl sudo vim git  <span class="comment"># Debian系统比较干净，安装常用的软件</span></span><br></pre></td></tr></table></figure><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/lsky-pro</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/lsky-pro</span><br><span class="line"></span><br><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><p><code>docker-compose.yml</code>填入以下内容：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&#x27;3&#x27;</span></span><br><span class="line">services:</span><br><span class="line">    lsky-pro:</span><br><span class="line">        container_name: lsky-pro</span><br><span class="line">        image: dko0/lsky-pro</span><br><span class="line">        restart: always</span><br><span class="line">        volumes:</span><br><span class="line">            - /root/data/docker_data/lsky-pro/lsky-pro-data:/var/www/html  <span class="comment">#映射到本地</span></span><br><span class="line">        ports:</span><br><span class="line">            - 7791:80</span><br><span class="line">        environment:</span><br><span class="line">            - MYSQL_HOST=mysql</span><br><span class="line">            - MYSQL_DATABASE=lsky-pro</span><br><span class="line">            - MYSQL_USER=lsky-pro</span><br><span class="line">            - MYSQL_PASSWORD=lsky-pro</span><br><span class="line"></span><br><span class="line">    mysql:</span><br><span class="line">        image: mysql:8.0</span><br><span class="line">        container_name: lsky-pro-db</span><br><span class="line">        restart: always</span><br><span class="line">        environment:</span><br><span class="line">          - MYSQL_DATABASE=lsky-pro</span><br><span class="line">          - MYSQL_USER=lsky-pro</span><br><span class="line">          - MYSQL_PASSWORD=lsky-pro</span><br><span class="line">          - MYSQL_ROOT_PASSWORD=lsky-pro</span><br><span class="line">        volumes:</span><br><span class="line">          - /root/data/docker_data/lsky-pro/db:/var/lib/mysql</span><br></pre></td></tr></table></figure><p>没问题的话，<code>ctrl+x</code>退出，按<code>y</code>保存，<code>enter</code>确认。</p><p>查看端口是否被占用，输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:7791  <span class="comment">#查看7791端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用，可以运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>访问：<code>http:服务ip:7791</code> 即可。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的IP。</p><p>2、遇到访问不了的情况，请在宝塔面板的防火墙和服务商的后台防火墙里打开对应端口。</p></blockquote><h3 id="5-2-更新"><a href="#5-2-更新" class="headerlink" title="5.2 更新"></a>5.2 更新</h3><p><img src="https://img.laoda.de/i/2022/05/28/ul1mln-0.webp" alt="0d5f4fa5aff604ea02967fc69a209500.png"></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/lsky-pro/lsky-pro-data /root/data/docker_data/lsky-pro/lsky-pro-data.archive  <span class="comment"># 万事先备份，以防万一</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/lsky-pro/db /root/data/docker_data/lsky-pro/db.archive <span class="comment">#数据库也备份一下</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/lsky-pro  <span class="comment"># 进入docker-compose所在的文件夹</span></span><br><span class="line"></span><br><span class="line">docker-compose pull    <span class="comment"># 拉取最新的镜像</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d   <span class="comment"># 重新更新当前镜像</span></span><br></pre></td></tr></table></figure><p>利用Docker-compose搭建的应用，更新非常容易～</p><h3 id="5-3-卸载"><a href="#5-3-卸载" class="headerlink" title="5.3 卸载"></a>5.3 卸载</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/lsky-pro  <span class="comment"># 进入docker-compose所在的文件夹</span></span><br><span class="line"></span><br><span class="line">docker-compose down    <span class="comment"># 停止容器，此时不会删除映射到本地的数据</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data//root/data/docker_data/lsky-pro  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><h2 id="6-反向代理"><a href="#6-反向代理" class="headerlink" title="6. 反向代理"></a>6. 反向代理</h2><h3 id="6-1-利用Nginx-Proxy-Manager"><a href="#6-1-利用Nginx-Proxy-Manager" class="headerlink" title="6.1 利用Nginx Proxy Manager"></a>6.1 利用Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p>之后，登陆Nginx Proxy Manager（不会的看这个：<strong>安装Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称NPM）会用到<code>80</code>、<code>443</code>端口，所以本机不能占用（比如原来就有Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/03/20/wenk4d.webp" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/03/20/x2w60n.webp" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/05/28/gwroox-0.webp" alt="image-20220528102248072" style="zoom: 50%;" /><blockquote><p> 注意填写对应的<code>域名</code>和<code>端口</code>，按文章来的话，应该是<code>7791</code></p></blockquote><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom:50%;" /><img src="https://img.laoda.de/i/2022/05/28/gx78hb-0.webp" alt="image-20220528102321203" style="zoom:50%;" /><p>然后就可以用域名来安装访问了。</p><h2 id="7-使用教程"><a href="#7-使用教程" class="headerlink" title="7. 使用教程"></a>7. 使用教程</h2><p>见咕咕鸽的视频</p><h3 id="7-1-安装"><a href="#7-1-安装" class="headerlink" title="7.1 安装"></a>7.1 安装</h3><h4 id="安装界面："><a href="#安装界面：" class="headerlink" title="安装界面："></a>安装界面：</h4><img src="https://img.laoda.de/i/2022/05/28/vgki5m-0.webp" alt="3b67780cb2230ee681c3c4437bfd1fc7.png" style="zoom:50%;" /><p>注意，数据库连接地址，填docker-compose文件里的容器名称<code>lsky-pro-db</code>，连接端口不用填。</p><img src="https://img.laoda.de/i/2022/05/28/vgmuye-0.webp" alt="1c3b8421b57e87bceeffb692f016d8a3.png" style="zoom:50%;" /><h4 id="成功安装："><a href="#成功安装：" class="headerlink" title="成功安装："></a>成功安装：</h4><img src="https://img.laoda.de/i/2022/05/28/vgovnb-0.webp" alt="2e7edcc6fc9ffd151af3e6cf37542681.png" style="zoom:50%;" /><img src="https://img.laoda.de/i/2022/05/28/vgqnvz-0.webp" alt="0e20398390300cd4bbb35f1880e39606.png" style="zoom:50%;" /><h4 id="管理员登陆："><a href="#管理员登陆：" class="headerlink" title="管理员登陆："></a>管理员登陆：</h4><img src="https://img.laoda.de/i/2022/05/28/vh0v04-0.webp" alt="522d1160c8404752b712cf0bf3f3ec45.png" style="zoom:50%;" /><p>扔几张后台的图片：</p><img src="https://img.laoda.de/i/2022/05/28/vh2tuu-0.webp" alt="72e367082f40df1fb8079b0a9dce8866.png" style="zoom:50%;" /><img src="https://img.laoda.de/i/2022/05/28/vh4oon-0.webp" alt="fdd16a41a52d0a873d193912349f54eb.png" style="zoom:50%;" /><img src="https://img.laoda.de/i/2022/05/28/vh6nc1-0.webp" alt="b8b7037c621cbbd66ba426dc84a8a3a0.png" style="zoom:50%;" /><img src="https://img.laoda.de/i/2022/05/28/vh9dq6-0.webp" alt="4c4dad2c7ef0cfda7f53afed65786cb5.png" style="zoom:50%;" /><h4 id="图片管理（搜索）："><a href="#图片管理（搜索）：" class="headerlink" title="图片管理（搜索）："></a>图片管理（搜索）：</h4><img src="https://img.laoda.de/i/2022/05/28/vhb94x-0.webp" alt="d216aed64612227d6f7f3b6067e24743.png" style="zoom:50%;" /><h4 id="开启-关闭注册："><a href="#开启-关闭注册：" class="headerlink" title="开启&#x2F;关闭注册："></a>开启&#x2F;关闭注册：</h4><img src="https://img.laoda.de/i/2022/05/28/vhlvhx-0.webp" alt="7d49581858ddbb6af7bbde66e34825be.png" style="zoom:50%;" /><h4 id="多种储存策略："><a href="#多种储存策略：" class="headerlink" title="多种储存策略："></a>多种储存策略：</h4><img src="https://img.laoda.de/i/2022/05/28/vhnunq-0.webp" alt="91396074dfcd211965ccd3b534d535fe.png" style="zoom:50%;" /><h4 id="修改站点名称："><a href="#修改站点名称：" class="headerlink" title="修改站点名称："></a>修改站点名称：</h4><img src="https://img.laoda.de/i/2022/05/28/vhpp1h-0.webp" alt="f297538b05651cefff7417392dd16dbe.png" style="zoom:50%;" /><h4 id="API接口："><a href="#API接口：" class="headerlink" title="API接口："></a>API接口：</h4><img src="https://img.laoda.de/i/2022/05/28/vhrl0a-0.webp" alt="4c6f280b9c39426b8b9cbe40e297d4ee.png" style="zoom:50%;" /><h4 id="上传测试："><a href="#上传测试：" class="headerlink" title="上传测试："></a>上传测试：</h4><img src="https://img.laoda.de/i/2022/05/28/vhtpxr-0.webp" alt="1947dd590e26252c555e03c850a70872.png" style="zoom:50%;" /><h3 id="7-2-配置PicGO与Typora（来自-Nesxc）"><a href="#7-2-配置PicGO与Typora（来自-Nesxc）" class="headerlink" title="7.2 配置PicGO与Typora（来自@Nesxc）"></a>7.2 配置PicGO与Typora（来自<a href="https://www.nesxc.com/1068/">@Nesxc</a>）</h3><p>我们用图床，写博客，当然是为了方便。</p><p>咕咕习惯使用Typora来写东西，我们想要做到粘贴图片到Typora就能实现自动上传到图床，兰空图床有可以用的API，我们搭配PicGO就可以实现这个效果。</p><h4 id="获取token"><a href="#获取token" class="headerlink" title="获取token"></a>获取token</h4><p>2.0的兰空图床不在直接显示token了，所以我们要自己获取一下token。</p><p><img src="https://img.laoda.de/i/2022/05/28/vhw8zq-0.webp" alt="image-20220528184251718"></p><p>按照后台给的教程，我们直接去post一下，google或者百度一下就能找到很多支持在线post的网站。</p><p>比如我们使用<code>https://www.sojson.com/httpRequest/</code></p><p><img src="https://img.laoda.de/i/2022/05/28/vhxunw-0.webp" alt="a3a58d9998b66ea64e7bf44730ceab18.png"></p><p>首先，post的地址是 <code>https://你的网站/api/v1/tokens</code> （例如，咕咕这个就是<code>https://typecho.guguge.ga/api/v1/tokens</code>）然后参数就是<code>email</code>和<code>password</code>两个常规参数，直接post。</p><p><img src="https://img.laoda.de/i/2022/05/28/vi845s-0.webp" alt="685dc5ba1aba30df56a30274a4ed57f9.png"></p><p>然后他会返回一个名称为token的数据（咕咕这里是<code>1|C75sSXxxdkPG63rgMor43335qVd1H9tRQozkonttZeNw</code>），复制他保存，这就是后面会用到的<code>token</code>。</p><h4 id="PicGo设置"><a href="#PicGo设置" class="headerlink" title="PicGo设置"></a>PicGo设置</h4><p>在PicGo的插件页面，直接搜索<code>lankong</code>安装。</p><p><img src="https://img.laoda.de/i/2022/05/28/vib78t-0.webp" alt="fd181f118c2a731f71d1789cf3835be5.png"></p><p>然后在图床设置中，设置兰空图床的参数。</p><p>其中，版本设置为<code>V2</code>。</p><p><code>Server</code>为你的兰空图床站点（咕咕这里是<code>https://typecho.guguge.ga</code>），注意不要<code>/</code>结尾。</p><p><code>Auth token</code>为 <code>Bearer + token</code>。 举例为： <code>Bearer 1|C75sSXxxdkPG63rgMor43335qVd1H9tRQozkonttZeNw</code>。注意<code>Bearer</code>和<code>token</code>中间有空格。</p><p>然后其他的参数可以根据插件<code>readme</code>来进行设置，一般可以不用动。</p><h4 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h4><p>至此，我们的PicGo使用兰空2.0的方法就完成了。</p><p><img src="https://img.laoda.de/i/2022/05/28/vicmg0-0.webp" alt="ddb29acbd9860d5c82be18d14432bc4c.png"></p><h4 id="Typora测试"><a href="#Typora测试" class="headerlink" title="Typora测试"></a>Typora测试</h4><p>简单复制一张图片，直接粘贴，测试一下，发现能够正常上传并生成图床链接。</p><img src="https://img.laoda.de/i/2022/05/28/viecg0-0.webp" alt="36e52ee94c7f519455bef4548a5c45f5.png" style="zoom:50%;" /><p>图床后台也成功显示了。</p><img src="https://img.laoda.de/i/2022/05/28/vigprq-0.webp" alt="023e5d07ff41507a0a28a0509584f15f.png" style="zoom:50%;" /><blockquote><p>对于上述问题，有解决的小伙伴欢迎在评论区留言交流！</p></blockquote><h2 id="8-结尾"><a href="#8-结尾" class="headerlink" title="8. 结尾"></a>8. 结尾</h2><p>祝大家用得开心，有问题可以去GitHub提<a href="https://github.com/lsky-org/lsky-pro/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，有能力给项目做贡献的同学，也欢迎积极加入到<a href="https://github.com/lsky-org/lsky-pro">项目</a>中来，贡献自己的一份力量！</p><h2 id="9-参考资料"><a href="#9-参考资料" class="headerlink" title="9. 参考资料"></a>9. 参考资料</h2><p><a href="https://github.com/lsky-org/lsky-pro">https://github.com/lsky-org/lsky-pro</a></p><p><a href="https://www.lsky.pro/">https://www.lsky.pro/</a></p><p><a href="https://docs.lsky.pro/">https://docs.lsky.pro/</a></p><p><a href="https://www.sojson.com/httpRequest/">https://www.sojson.com/httpRequest/</a></p><p>本期用的Docker镜像地址 （感谢<a href="https://hellodk.cn/">@<strong>Allen Hua</strong></a>）：<a href="https://hub.docker.com/r/dko0/lsky-pro">https://hub.docker.com/r/dko0/lsky-pro</a> </p><p>PicGo插件：lankong（再次感谢<a href="https://hellodk.cn/">@<strong>Allen Hua</strong></a>）<a href="https://hellodk.cn/post/964">https://hellodk.cn/post/964</a></p><p><a href="https://www.nesxc.com/1068/">https://www.nesxc.com/1068/</a></p><p><a href="https://blog.laoda.de/archives/docker-compose-install-lskypro">https://blog.laoda.de/archives/docker-compose-install-lskypro</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【有用的小知识】原生IP是什么？原生IP和解锁奈飞（Netflix）是什么关系？广播IP和原生IP有什么区别？</title>
      <link href="/archives/ip-netflix/"/>
      <url>/archives/ip-netflix/</url>
      
        <content type="html"><![CDATA[<h2 id="搭建视频"><a href="#搭建视频" class="headerlink" title="搭建视频"></a>搭建视频</h2><p>YouTube：<a href="https://youtu.be/_tq5EizdeJU">https://youtu.be/_tq5EizdeJU</a></p><h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><p>上一个<a href="https://blog.laoda.de/archives/vps-ion-cloud">iON的视频</a>里，有小伙伴留言，让咕咕推荐一下原生IP的机器，其实iON就是原生IP的，估摸着可能小伙伴是要搞一个解锁流媒体的机器，但是iON虽然是原生IP，却无法解锁奈飞。</p><p>那么<strong>奈飞和原生IP是什么关系呢？</strong></p><p><strong>原生IP到底是个啥？</strong></p><p><strong>该如何判断自己的服务器是不是原生IP？</strong></p><p>今天我们就来花五分钟简单了解一下！</p><h2 id="2-原生IP-本土IP"><a href="#2-原生IP-本土IP" class="headerlink" title="2. 原生IP (本土IP)"></a>2. 原生IP (本土IP)</h2><p>原生IP简单说就是本土IP，是由当地ISP运营商提供的本地IP地址，即纯本土归属地。</p><p>一般来说，价格相对较高，可以被限制区域的服务或游戏所认可。</p><h2 id="3-广播IP-非原生ip、国际IP"><a href="#3-广播IP-非原生ip、国际IP" class="headerlink" title="3. 广播IP(非原生ip、国际IP)"></a>3. 广播IP(非原生ip、国际IP)</h2><p>如果一台有公网的VPS不是原生IP，那它就是广播IP，即非原生IP（非本土IP），IP地址与机房所在地不一致的IP地址。</p><p>这个IP不是当地归属的IP，而是通过广播手段，将其他国际区域的IP分配到可用区所在地。</p><p>一般来说，价格亲民，网络体验和当地IP也是一致的。</p><blockquote><p>一般来说，除了流媒体解锁，广播IP和原生IP其他基本没啥区别。 现在IP资源枯竭，各家服务商都是能租到哪里的就是哪里，然后到处广播的。</p></blockquote><h2 id="4-原生IP的优劣势"><a href="#4-原生IP的优劣势" class="headerlink" title="4. 原生IP的优劣势"></a>4. 原生IP的优劣势</h2><p>一般来说，原生IP和非原生IP的最大的不同就是价格，原生IP价格相对较高，而非原生IP的价格相对便宜。</p><p>原生IP的真正作用：某些网站要检测原生IP，广播IP则无效，比如需要知识产权的或者版权网站等等。</p><p>如何能买到原生IP更好，然而对于做普通类型网站随意。毕竟广播IP更亲民一些。</p><h2 id="5-原生IP与奈飞Netflix"><a href="#5-原生IP与奈飞Netflix" class="headerlink" title="5. 原生IP与奈飞Netflix"></a>5. 原生IP与奈飞Netflix</h2><p>一般来说，大家的第一反应是，原生IP能解锁奈飞，解锁各种流媒体，其实不然。</p><p>就奈飞（Netflix）来说，理解那么多原生不原生其实都没太大用，因为奈飞默认都是家宽用户订阅，VPS的IP就算是原生IP，也有可能被机房看心情咔擦掉。</p><p><strong>解锁奈飞 &#x3D; 没在奈飞黑名单</strong></p><p>原生IP解锁的概率高一些（理论上是全部，但是有的VPS可能用的人不止一个，然后被奈飞把IP拉进了黑名单，有的可能是按IP段拉黑的。）</p><h2 id="6-判断原生IP的方法"><a href="#6-判断原生IP的方法" class="headerlink" title="6. 判断原生IP的方法"></a>6. 判断原生IP的方法</h2><p>其实从概念上就可以来判断，方法很简单，自己的服务器，肯定都知道机房位置的，所以我们要做的就是看下这个IP的<code>Whois</code>信息中的地区&#x2F;国家与你<code>机房的位置</code>是否一致，相同即为原生IP，否则则为广播非原生IP。</p><p>目前检测国外服务器IP地址所在地的工具有很多，比如我们可以用这个：</p><p><a href="https://bgp.he.net/">https://bgp.he.net/</a></p><p>比较简单好用。</p><p>打开网站之后，输入服务器IP地址直接<code>Whois</code>查询就行了。</p><img src="https://img.laoda.de/i/2022/05/24/mg2ive-0.webp" alt="image-20220524135722766" style="zoom:50%;" /><h2 id="7-咕咕实测"><a href="#7-咕咕实测" class="headerlink" title="7. 咕咕实测"></a>7. 咕咕实测</h2><h3 id="7-1-原生IP-奈飞检测"><a href="#7-1-原生IP-奈飞检测" class="headerlink" title="7.1 原生IP&#x2F;奈飞检测"></a>7.1 原生IP&#x2F;奈飞检测</h3><h4 id="iON"><a href="#iON" class="headerlink" title="iON"></a><a href="https://blog.laoda.de/archives/vps-ion-cloud">iON</a></h4><p>机房地点：<code>美国洛杉矶</code></p><p>测试IP：<code>98.126.41.xxx</code></p><img src="https://img.laoda.de/i/2022/05/24/n9e4ds-0.webp" alt="image-20220524140647187" style="zoom:50%;" /><img src="https://img.laoda.de/i/2022/05/24/nfc4qp-0.webp" alt="image-20220524141646203" style="zoom:50%;" /><p>推荐阅读：<a href="https://blog.laoda.de/archives/vps-ion-cloud">【VPS选购分享】iON —— 咕咕的神鸡！ Krypt旗下，专为国人优化的VPS，适合电信用户！7×24小时 全天候人工服务，还是单向流量！</a></p><hr><h4 id="Racknerd"><a href="#Racknerd" class="headerlink" title="Racknerd"></a><a href="https://blog.laoda.de/archives/vps-racknerd">Racknerd</a></h4><p>机房地点：<code>美国西雅图</code></p><p>测试IP：<code>23.95.18.xxx</code></p><p>奈飞解锁情况：啥也不解锁</p><img src="https://img.laoda.de/i/2022/05/24/n9wj1d-0.webp" alt="image-20220524140734017" style="zoom:50%;" /><img src="https://img.laoda.de/i/2022/05/24/nelgyr-0.webp" alt="image-20220524141521578" style="zoom:50%;" /><p>推荐阅读：<a href="https://blog.laoda.de/archives/vps-racknerd">【VPS选购分享】Racknerd——曾经的“四大金刚”，如今的性价比之王</a></p><hr><h4 id="Cloudcone"><a href="#Cloudcone" class="headerlink" title="Cloudcone"></a><a href="https://blog.laoda.de/archives/vps-cloudcone">Cloudcone</a></h4><p>机房地点：<code>美国洛杉矶</code></p><p>测试IP：<code>23.234.254.xx</code></p><p>奈飞解锁情况：解锁自制剧</p><img src="https://img.laoda.de/i/2022/05/24/nahadr-0.webp" alt="image-20220524140830775" style="zoom:50%;" /><img src="https://img.laoda.de/i/2022/05/24/nfpmx6-0.webp" alt="image-20220524141709586" style="zoom:50%;" /><p>推荐阅读：<a href="https://blog.laoda.de/archives/vps-cloudcone">【VPS选购分享】Cloudcone—— 高性价比, 自研面板，客服退款干脆利落 廉价VPS</a></p><hr><h4 id="BuyVM"><a href="#BuyVM" class="headerlink" title="BuyVM"></a><a href="https://blog.laoda.de/archives/vps-buyvm">BuyVM</a></h4><p>机房地点：<code>卢森堡</code></p><p>测试IP： <code>107.189.11.xx</code></p><p>奈飞解锁情况：解锁自制剧</p><img src="https://img.laoda.de/i/2022/05/24/namd6j-0.webp" alt="image-20220524140854477" style="zoom:50%;" /><img src="https://img.laoda.de/i/2022/05/24/nfwn98-0.webp" alt="image-20220524141740918" style="zoom:50%;" /><p>推荐阅读：<a href="https://blog.laoda.de/archives/vps-buyvm">【VPS选购分享】BuyVM——下载神器！无限流量，无视版权投诉，经常缺货DCMA版权投诉&#x2F;适合BT&#x2F;PT下载&#x2F;Netflix解锁</a></p><hr><h4 id="Vultr"><a href="#Vultr" class="headerlink" title="Vultr"></a><a href="https://blog.laoda.de/archives/vps-vlutr">Vultr</a></h4><p>机房地点：<code>美国西雅图</code></p><p>测试IP：<code>144.202.92.xx</code></p><p>奈飞解锁情况：啥也不解锁</p><img src="https://img.laoda.de/i/2022/05/24/nbn6zt-0.webp" alt="image-20220524141025225" style="zoom:50%;" /><img src="https://img.laoda.de/i/2022/05/24/ngf316-0.webp" alt="image-20220524141823307" style="zoom:50%;" /><p>推荐阅读：<a href="https://blog.laoda.de/archives/vps-vlutr">【VPS选购分享】Vultr——咕咕的第一台VPS，只适合海外业务，机房遍布全球</a></p><hr><h4 id="搬瓦工"><a href="#搬瓦工" class="headerlink" title="搬瓦工"></a><a href="https://blog.laoda.de/archives/vps-bandwagonhost">搬瓦工</a></h4><p>机房地点：<code>美国洛杉矶</code></p><p>测试IP：<code>173.242.115.xxx</code></p><p>奈飞解锁情况：解锁自制剧</p><img src="https://img.laoda.de/i/2022/05/24/nc6sjl-0.webp" alt="image-20220524141117678" style="zoom:50%;" /><img src="https://img.laoda.de/i/2022/05/24/nhhp6q-0.webp" alt="image-20220524141925652" style="zoom:50%;" /><p>推荐阅读：<a href="https://blog.laoda.de/archives/vps-bandwagonhost">【VPS选购分享】Bandwagonhost（搬瓦工）——曾经的王者，三网G口GIA，贵族VPS</a></p><hr><h4 id="Justhost"><a href="#Justhost" class="headerlink" title="Justhost"></a>Justhost</h4><p>机房地点：<code>俄罗斯</code></p><p>测试IP： <code>185.22.152.xxx</code></p><p>奈飞解锁情况：解锁自制剧</p><img src="https://img.laoda.de/i/2022/05/24/mg2ive-0.webp" alt="image-20220524135722766" style="zoom:50%;" /><img src="https://img.laoda.de/i/2022/05/24/nhnd55-0.webp" alt="image-20220524142034144" style="zoom:50%;" /><p>不推荐购买Justhost，CPU巨拉胯。</p><hr><h4 id="Olink"><a href="#Olink" class="headerlink" title="Olink"></a><a href="https://blog.laoda.de/archives/vps-olinkcloud">Olink</a></h4><p>机房地点：<code>德国法兰克福</code></p><p>测试IP：<code>31.22.108.xx</code></p><p>奈飞解锁情况：解锁自制剧</p><img src="https://img.laoda.de/i/2022/05/24/mgpl5s-0.webp" alt="image-20220524135830171" style="zoom:50%;" /><img src="https://img.laoda.de/i/2022/05/24/nj7ztx-0.webp" alt="image-20220524142258078" style="zoom:50%;" /><p>推荐阅读：<a href="https://blog.laoda.de/archives/vps-olinkcloud">【VPS推荐】Olink Cloud：美国&#x2F;德国 CUPM&#x2F;AS9929&#x2F;AS10099 免备案建站高速稳定 VPS 推荐</a></p><hr><h4 id="甲骨文日本东京"><a href="#甲骨文日本东京" class="headerlink" title="甲骨文日本东京"></a><a href="https://blog.laoda.de/archives/oracle-always-free-vps">甲骨文日本东京</a></h4><p>机房地点：<code>日本东京</code></p><p>测试IP： <code>132.145.121.xxx</code></p><p>奈飞解锁情况：解锁自制剧</p><img src="https://img.laoda.de/i/2022/05/24/nceigt-0.webp" alt="image-20220524141153696" style="zoom:50%;" /><img src="https://img.laoda.de/i/2022/05/24/nicdeh-0.webp" alt="image-20220524142151241" style="zoom:50%;" /><h4 id="甲骨文韩国春川"><a href="#甲骨文韩国春川" class="headerlink" title="甲骨文韩国春川"></a><a href="https://blog.laoda.de/archives/oracle-always-free-vps">甲骨文韩国春川</a></h4><p>机房地点：<code>韩国春川</code></p><p>测试IP：<code>150.230.253.xxx</code></p><p>奈飞解锁情况：全部解锁</p><img src="https://img.laoda.de/i/2022/05/24/ncwzg9-0.webp" alt="image-20220524141239364" style="zoom:50%;" /><img src="https://img.laoda.de/i/2022/05/24/njf7gm-0.webp" alt="image-20220524142332407" style="zoom:50%;" /><p>推荐阅读：<a href="https://blog.laoda.de/archives/oracle-always-free-vps">千字长文！甲骨文永久免费小鸡折腾记录</a></p><h2 id="8-观看奈飞的两种方法推荐"><a href="#8-观看奈飞的两种方法推荐" class="headerlink" title="8. 观看奈飞的两种方法推荐"></a>8. 观看奈飞的两种方法推荐</h2><h3 id="8-1-WARP解锁"><a href="#8-1-WARP解锁" class="headerlink" title="8.1 WARP解锁"></a>8.1 WARP解锁</h3><p>利用WARP，给VPS套一个cloudflare的IP，完成解锁。（以前很好用，现在貌似奈飞也封了很多IP段了）</p><p>具体方法请自行谷歌。</p><h3 id="8-2-使用流媒体解锁🐔场"><a href="#8-2-使用流媒体解锁🐔场" class="headerlink" title="8.2 使用流媒体解锁🐔场"></a>8.2 使用流媒体解锁🐔场</h3><p>推荐：</p><p><a href="https://www.mojie.cyou/#/register?code=w2Q7Wsuh">魔戒</a> 老🐔场，限量不限时间。最低有1元套餐。</p><p>脚本地址：<a href="https://gao.ee/nf">https://gao.ee/nf</a><br>解锁流媒体机场：<a href="https://gao.ee/mj">https://gao.ee/mj</a><br>邀请码：w2Q7Wsuh 或者 6cLj3fiM</p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 奈飞 </tag>
            
            <tag> 原生IP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【VPS选购分享】iON —— 咕咕的神鸡！ Krypt旗下，专为国人优化的VPS，适合电信用户！7×24小时 全天候人工服务，还是单向流量！</title>
      <link href="/archives/vps-ion-cloud/"/>
      <url>/archives/vps-ion-cloud/</url>
      
        <content type="html"><![CDATA[<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><h3 id="2023年9月22日"><a href="#2023年9月22日" class="headerlink" title="2023年9月22日"></a>2023年9月22日</h3><p>洛杉矶和圣何塞依旧三网回程4837，速度非常不错。联通、移动、电信都很合适。</p><h3 id="2023年9月10日"><a href="#2023年9月10日" class="headerlink" title="2023年9月10日"></a>2023年9月10日</h3><p>线路又炸了 &#x3D; &#x3D; </p><p>最近似乎还在调整，不太稳定。</p><h3 id="2023年8月8日"><a href="#2023年8月8日" class="headerlink" title="2023年8月8日"></a>2023年8月8日</h3><p>iON洛杉矶已经恢复四网回程AS4837（包括成都教育网），丝般顺滑！</p><h3 id="2023年6月10日"><a href="#2023年6月10日" class="headerlink" title="2023年6月10日"></a>2023年6月10日</h3><p>目前四网回程不是4837了，不知道是不是暂时性调整，等待后续观察。</p><p><img src="https://img.laoda.de/i/2023/06/10/w6omsb-0.webp" alt="image-20230610194611174"></p><p><img src="https://img.laoda.de/i/2023/06/10/w6r4lq-0.webp" alt="image-20230610194623517"></p><p><img src="https://img.laoda.de/i/2023/06/10/w6xgqd-0.webp" alt="image-20230610194652805"></p><p><img src="https://img.laoda.de/i/2023/06/10/w77y9j-0.webp" alt="image-20230610194702791"></p><h3 id="2023年6月10日-1"><a href="#2023年6月10日-1" class="headerlink" title="2023年6月10日"></a>2023年6月10日</h3><p>历时20天，iON机器终于恢复了……</p><p>不过虽然面板依然显示等待中……<br><img src="https://img.laoda.de/i/2023/06/10/r0zqd5-0.webp" alt="image-20230610163423260"></p><p><img src="https://img.laoda.de/i/2023/06/10/r1ofta-0.webp" alt="image-20230610163538723"></p><p>机器配置没变<br><img src="https://img.laoda.de/i/2023/06/10/r2am4y-0.webp" alt="image-20230610163643168"></p><h3 id="2023年6月1日"><a href="#2023年6月1日" class="headerlink" title="2023年6月1日"></a>2023年6月1日</h3><img src="https://img.laoda.de/i/2023/06/01/e4l2w8-0.webp" alt="image-20230601085421339" style="zoom:33%;" /><p>机器还是没恢复 &#x3D; &#x3D;   太拉胯了</p><h3 id="2023年05月22日"><a href="#2023年05月22日" class="headerlink" title="2023年05月22日"></a>2023年05月22日</h3><p>iON机房因为烟雾报警导致停电，正在等待消防人员排查问题，目前已经失联13小时。</p><p><img src="https://img.laoda.de/i/2023/05/22/iyl64y-0.webp" alt="image-20230522114646662"></p><p><img src="https://img.laoda.de/i/2023/05/22/iyn3hv-0.webp" alt="image-20230522114656350"></p><p><img src="https://img.laoda.de/i/2023/05/22/iz3121-0.webp" alt="image-20230522114730029"></p><h3 id="iON双十一活动（2022-11-09更新）"><a href="#iON双十一活动（2022-11-09更新）" class="headerlink" title="iON双十一活动（2022-11-09更新）"></a>iON双十一活动（2022-11-09更新）</h3><p><strong>更新</strong>：ION 往年没黑五 只有双十一 要买的可以下午四点去官网抢就可以了。下午四点活动更新</p><p>各位Krypt&#x2F;<a href="https://loll.cc/iON">iON</a>好朋友们：</p><p>Krypt一年一度的1111活动已开始！</p><p>此次的两个优惠码针对月付和年付两种周期，请把握这次的优惠！</p><p>开始时间：美国洛杉矶时间2022年11月09日</p><p>优惠一：<br>以下机房03系列VPS月付$11.11 (原价$15)，优惠码：1111MONEVO<br>配置：2G内存 &#x2F; 2核 &#x2F; 60GB SSD &#x2F; 1Gbps带宽 &#x2F; 3T流量&#x2F;月</p><p>洛杉矶： ION-L03 ， <a href="https://ion.krypt.asia/aff.php?aff=1520&pid=8">Linux</a> &#x2F; <a href="https://ion.krypt.asia/aff.php?aff=1520&pid=36">Windows</a><br>圣何塞： ION-SV03 ， <a href="https://ion.krypt.asia/aff.php?aff=1520&pid=68">Linux</a> &#x2F; <a href="https://ion.krypt.asia/aff.php?aff=1520&pid=72">Windows</a><br>夏威夷： iON-HNL03 ， <a href="https://ion.krypt.asia/aff.php?aff=1520&pid=115">Linux</a></p><p>优惠二：<br>以下机房04系列VPS年付$111.1 (原价$216)，优惠码：YEAR1111EVO</p><p>配置：4G内存 &#x2F; 2核 &#x2F; 80GB SSD &#x2F; 1Gbps带宽 &#x2F; 4T流量&#x2F;月</p><p>洛杉矶： ION-L04 ， <a href="https://ion.krypt.asia/aff.php?aff=1520&pid=5">Linux</a> &#x2F; <a href="https://ion.krypt.asia/aff.php?aff=1520&pid=37">Windows</a><br>圣何塞： ION-SV04 ， <a href="https://ion.krypt.asia/aff.php?aff=1520&pid=69">Linux</a> &#x2F; <a href="https://ion.krypt.asia/aff.php?aff=1520&pid=73">Windows</a><br>夏威夷： iON-HNL04 ， <a href="https://ion.krypt.asia/aff.php?aff=1520&pid=116">Linux</a></p><p>备注：未来续费依然享折扣，云服务器流量仅计算出站方向。</p><p>测试IPv4：</p><p>圣何塞：174.139.126.166，<a href="http://174.139.126.166/speedtest/1GB.bin">http://174.139.126.166/speedtest/1GB.bin</a></p><p>洛杉矶：98.126.41.162，<a href="http://98.126.41.162/speedtest/test1Gb.bin">http://98.126.41.162/speedtest/test1Gb.bin</a></p><p>夏威夷：107.6.255.2，<a href="http://107.6.255.2/speedtest/1GB.bin">http://107.6.255.2/speedtest/1GB.bin</a></p><h3 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h3><p>YouTube：<a href="https://youtu.be/qeFW6G8SZsk">https://youtu.be/qeFW6G8SZsk</a></p><h3 id="注意如果购买，不要开VPN，个人信息不用填真的，但是要合乎逻辑，不然会被商家判定为欺诈"><a href="#注意如果购买，不要开VPN，个人信息不用填真的，但是要合乎逻辑，不然会被商家判定为欺诈" class="headerlink" title="注意如果购买，不要开VPN，个人信息不用填真的，但是要合乎逻辑，不然会被商家判定为欺诈"></a>注意如果购买，不要开VPN，个人信息不用填真的，但是要合乎逻辑，不然会被商家判定为欺诈</h3><h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><p><img src="https://img.laoda.de/i/2022/05/22/dtz9fe-0.webp" alt="image-20220522083639603"></p><p>今天来介绍一下咕咕的这台香喷喷的年付<code>20.19</code>美元的服务器——iON</p><p>监控搭建：<a href="https://blog.laoda.de/archives/ward-serverstatus-install">教程</a></p><h2 id="2-简介"><a href="#2-简介" class="headerlink" title="2. 简介"></a>2. 简介</h2><p><img src="https://img.laoda.de/i/2022/05/22/h3n77d-0.webp" alt="image-20220522103400588"></p><p><a href="https://loll.cc/iON">iON</a>属于是<a href="https://www.krypt.com/">Krypt</a>旗下，Krypt又是属于<a href="https://www.vpls.com/">VPLS Inc</a>公司旗下，提供CN2 GIA、CN2 GT、PCCW、中国移动直连等多种线路套餐，同时提供Linux和Windows系统可选。建站非常稳定。</p><p>总体来说，是一家大公司，大家不用担心跑路风险。</p><p>而且iON专门做了中文的网站，方便国人购买VPS。</p><h3 id="2-1-优点"><a href="#2-1-优点" class="headerlink" title="2.1 优点"></a>2.1 优点</h3><p>咕咕实际使用了这么久，总结了iON的几个优点，供大家参考：</p><ul><li>云服务器流量仅计算出站方向（即<code>单向流量</code>而不是一般服务器商家普遍的<code>双向流量</code>，这个是VPS商家中极少见的，意味着1T就是真正的1T）</li><li>大厂（稳定，不用担心跑路）</li><li>支持支付宝、PayPal付款购买</li><li>客服 7×24小时 反馈快（可以直接中文交流）</li><li>洛杉矶、圣何塞三网回程<code>AS4837</code>（咕咕实测晚高峰依旧丝滑，南方电信甚至有时候跑的比<a href="https://blog.laoda.de/archives/vps-bandwagonhost">搬瓦工DC06</a>还高）</li></ul><h3 id="2-2-缺点"><a href="#2-2-缺点" class="headerlink" title="2.2 缺点"></a>2.2 缺点</h3><ul><li>贵</li><li>iON无自带快照和备份功能（需要自己备份，<a href="https://blog.laoda.de/archives/docker-compose-install-duplicati">备份教程推荐</a>）</li><li>每台机器只能换一次IP，需要花费2美元</li></ul><h2 id="3-套餐"><a href="#3-套餐" class="headerlink" title="3. 套餐"></a>3. 套餐</h2><p><img src="https://img.laoda.de/i/2022/05/22/e27yno-0.webp" alt="image-20220522085022669"></p><p>目前iON共有达拉斯、檀香山、洛杉矶、纽约（即将推出）、圣何塞、新加坡、华盛顿特区（即将推出）几个机房的VPS，咕咕手上的这款是洛杉矶的，也就是上图中的第一款，年付68刀的这个。（至于为什么咕咕的只要20.19刀，后面会说）</p><p>这款也是iON所有VPS中<code>最便宜</code>的一款。（其他的一般都是8刀&#x2F;月或者是10刀&#x2F;月 &#x3D; &#x3D;）</p><p>实测三网回程AS4837，晚高峰依旧丝滑。</p><img src="https://img.laoda.de/i/2022/05/22/gx7w5h-0.webp" alt="image-20220522102321876" style="zoom:33%;" /><h3 id="3-1-常规套餐"><a href="#3-1-常规套餐" class="headerlink" title="3.1 常规套餐"></a>3.1 常规套餐</h3><p>下单之前，先试试这个<code>75折</code>的优惠码：<code>LY5SR64FR4</code>（貌似只有洛杉矶和圣何塞有效果，而且最便宜的这款无法使用 &#x3D; &#x3D; ）</p><p>这个也可以试试：iON优惠码：<code>SU4N7S2HAL</code> （特价款有时无法使用优惠码）</p><h4 id="3-1-1-洛杉矶（推荐，最便宜）"><a href="#3-1-1-洛杉矶（推荐，最便宜）" class="headerlink" title="3.1.1 洛杉矶（推荐，最便宜）"></a>3.1.1 洛杉矶（推荐，最便宜）</h4><p>洛杉矶机房测试IP：<code>98.126.41.162</code><br>洛杉矶Premium系列VPS为去程动态直连，三网回程走联通CUVIP AS4837优化线路。(之前貌似是CN2的 &#x3D; &#x3D;)<br>有Linux款，Windows款，KVM VPS，1Gbps带宽。</p><p><img src="https://img.laoda.de/i/2022/05/22/e5yn9z-0.webp" alt="image-20220522085652454"></p><table><thead><tr><th>套餐</th><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th><th></th></tr></thead><tbody><tr><td>ION-L09</td><td>2G</td><td>1核</td><td>40G</td><td>1T&#x2F;月</td><td>$68&#x2F;年</td><td><a href="https://loll.cc/iON">Linux</a></td><td>&#x2F;</td></tr><tr><td>iON-L02</td><td>2G</td><td>1核</td><td>50G</td><td>2T&#x2F;月</td><td>$10&#x2F;mo</td><td><a href="https://loll.cc/iON">Linux</a></td><td>&#x2F;</td></tr><tr><td>iON-L03</td><td>2G</td><td>2核</td><td>60G</td><td>3T&#x2F;月</td><td>$15&#x2F;mo</td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=8&promocode=SU4N7S2HAL&billingcycle=quarterly">Linux</a></strong></td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=36&promocode=SU4N7S2HAL&billingcycle=quarterly">Windows</a></strong></td></tr><tr><td>iON-L04</td><td>4G</td><td>2核</td><td>80G</td><td>4T&#x2F;月</td><td>$20&#x2F;mo</td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=5&promocode=SU4N7S2HAL&billingcycle=quarterly">Linux</a></strong></td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=37&promocode=SU4N7S2HAL&billingcycle=quarterly">Windows</a></strong></td></tr><tr><td>iON-L05</td><td>8G</td><td>4核</td><td>160G</td><td>5T&#x2F;月</td><td>$40&#x2F;mo</td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=9&promocode=SU4N7S2HAL&billingcycle=quarterly">Linux</a></strong></td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=38&promocode=SU4N7S2HAL&billingcycle=quarterly">Windows</a></strong></td></tr><tr><td>iON-L06</td><td>16G</td><td>6核</td><td>320G</td><td>6T&#x2F;月</td><td>$80&#x2F;mo</td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=10&promocode=SU4N7S2HAL&billingcycle=quarterly">Linux</a></strong></td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=39&promocode=SU4N7S2HAL&billingcycle=quarterly">Windows</a></strong></td></tr><tr><td>iON-L07</td><td>32G</td><td>8核</td><td>640G</td><td>7T&#x2F;月</td><td>$160&#x2F;mo</td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=11&promocode=SU4N7S2HAL&billingcycle=quarterly">Linux</a></strong></td><td><strong>&#x2F;</strong></td></tr><tr><td>iON-L08</td><td>64G</td><td>12核</td><td>960G</td><td>8T&#x2F;月</td><td>$320&#x2F;mo</td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=12&promocode=SU4N7S2HAL&billingcycle=quarterly">Linux</a></strong></td><td><strong>&#x2F;</strong></td></tr></tbody></table><h4 id="3-1-2-圣何塞（推荐，有GIA款）"><a href="#3-1-2-圣何塞（推荐，有GIA款）" class="headerlink" title="3.1.2 圣何塞（推荐，有GIA款）"></a>3.1.2 圣何塞（推荐，有GIA款）</h4><h5 id="PREMIUM款（据说是CN2-GT）："><a href="#PREMIUM款（据说是CN2-GT）：" class="headerlink" title="PREMIUM款（据说是CN2 GT）："></a>PREMIUM款（据说是CN2 GT）：</h5><p>KVM虚拟，SSD硬盘，1Gbps带宽，CN2 GT&#x2F;AS4837 优化网络。</p><p>圣何塞机房测试IP：<code>174.139.126.166</code></p><p><img src="https://img.laoda.de/i/2022/05/22/e6w92p-0.webp" alt="image-20220522085808768"></p><table><thead><tr><th>套餐</th><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th><th></th></tr></thead><tbody><tr><td>iON-SV02</td><td>2G</td><td>1核</td><td>50G</td><td>2T&#x2F;月</td><td>$10&#x2F;mo</td><td><a href="https://loll.cc/iON">Linux</a></td><td>&#x2F;</td></tr><tr><td>iON-SV03</td><td>2G</td><td>2核</td><td>60G</td><td>3T&#x2F;月</td><td>$15&#x2F;mo</td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=68&promocode=LY5SR64FR4&billingcycle=annually">Linux</a></strong></td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=72&promocode=LY5SR64FR4&billingcycle=annually">Windows</a></strong></td></tr><tr><td>iON-SV04</td><td>4G</td><td>2核</td><td>160G</td><td>4T&#x2F;月</td><td>$20&#x2F;mo</td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=69&promocode=LY5SR64FR4&billingcycle=annually">Linux</a></strong></td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=73&promocode=LY5SR64FR4&billingcycle=annually">Windows</a></strong></td></tr><tr><td>iON-SV05</td><td>8G</td><td>4核</td><td>320G</td><td>5T&#x2F;月</td><td>$40&#x2F;mo</td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=70&promocode=LY5SR64FR4&billingcycle=annually">Linux</a></strong></td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=74&promocode=LY5SR64FR4&billingcycle=annually">Windows</a></strong></td></tr><tr><td>iON-SV06</td><td>16G</td><td>6核</td><td>320G</td><td>6T&#x2F;月</td><td>$80&#x2F;mo</td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=71&promocode=LY5SR64FR4&billingcycle=annually">Linux</a></strong></td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=76&promocode=LY5SR64FR4&billingcycle=annually">Windows</a></strong></td></tr></tbody></table><h5 id="GIA款："><a href="#GIA款：" class="headerlink" title="GIA款："></a>GIA款：</h5><p>圣何塞机房测试IP：<code>107.6.242.105</code></p><p>KVM虚拟，SSD硬盘，20Mbps-30Mbps带宽，CN2 GIA优化网络。</p><blockquote><p>注意：带宽只有20-30Mbps，不像搬瓦工是G口的，由此可见，CN2 GIA线路是多么贵！</p></blockquote><p>搬瓦工G口 GIA套餐：<a href="https://blog.laoda.de/archives/vps-bandwagonhost">点击查看</a></p><p><img src="https://img.laoda.de/i/2022/05/22/e6ye5q-0.webp" alt="image-20220522085819101"></p><table><thead><tr><th>套餐</th><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th>带宽</th><th><strong>价格</strong></th><th><strong>购买</strong></th><th></th></tr></thead><tbody><tr><td>ION-SVG01</td><td>2G</td><td>1核</td><td>25G</td><td>0.5T&#x2F;月</td><td>20Mbps</td><td>$35&#x2F;月</td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=78">Linux</a></strong></td><td><strong>&#x2F;</strong></td></tr><tr><td>ION-SVG02</td><td>4G</td><td>2核</td><td>60G</td><td>1T&#x2F;月</td><td>30Mbps</td><td>$55&#x2F;月</td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=79">Linux</a></strong></td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=88">Windows</a></strong></td></tr><tr><td>ION-SVG03</td><td>6G</td><td>2核</td><td>100G</td><td>2T&#x2F;月</td><td>30Mbps</td><td>$85&#x2F;月</td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=84">Linux</a></strong></td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=89">Windows</a></strong></td></tr><tr><td>ION-SVG04</td><td>8G</td><td>4核</td><td>160G</td><td>4T&#x2F;月</td><td>30Mbps</td><td>$155&#x2F;月</td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=85">Linux</a></strong></td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=90">Windows</a></strong></td></tr><tr><td>ION-SVG06</td><td>16G</td><td>8核</td><td>320G</td><td>8T&#x2F;月</td><td>30Mbps</td><td>$355&#x2F;月</td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=86">Linux</a></strong></td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=91">Windows</a></strong></td></tr></tbody></table><h4 id="3-1-3-新加坡"><a href="#3-1-3-新加坡" class="headerlink" title="3.1.3 新加坡"></a>3.1.3 新加坡</h4><h5 id="CN2款："><a href="#CN2款：" class="headerlink" title="CN2款："></a>CN2款：</h5><p>KVM虚拟，SSD硬盘，10Mbps-50Mbps带宽，CN2优化网络。</p><p><img src="https://img.laoda.de/i/2022/05/22/e70nv1-0.webp" alt="image-20220522085829572"></p><table><thead><tr><th>套餐</th><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>SDD</strong></th><th><strong>IP</strong></th><th><strong>流量</strong></th><th><strong>带宽</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>ION-ST01</td><td>1核</td><td>2G</td><td>25G</td><td>1个</td><td>250G</td><td>10Mbps</td><td>$35&#x2F;月</td><td><strong><a href="https://ion.kryptcloud.com/aff.php?aff=1520&pid=30">直达</a></strong></td></tr><tr><td>ION-ST02</td><td>2核</td><td>4G</td><td>60G</td><td>1个</td><td>500G</td><td>20Mbps</td><td>$55&#x2F;月</td><td><a href="https://ion.kryptcloud.com/aff.php?aff=1520&pid=31"><strong>直达</strong></a></td></tr><tr><td>ION-ST03</td><td>2核</td><td>6G</td><td>100G</td><td>1个</td><td>1T</td><td>20Mbps</td><td>$85&#x2F;月</td><td><a href="https://ion.kryptcloud.com/aff.php?aff=1520&pid=32"><strong>直达</strong></a></td></tr><tr><td>ION-ST04</td><td>4核</td><td>8G</td><td>160G</td><td>1个</td><td>2T</td><td>50Mbps</td><td>$155&#x2F;月</td><td><a href="https://ion.kryptcloud.com/aff.php?aff=1520&pid=33"><strong>直达</strong></a></td></tr><tr><td>ION-ST06</td><td>8核</td><td>16G</td><td>320G</td><td>1个</td><td>4T</td><td>50Mbps</td><td>$355&#x2F;月</td><td><a href="https://ion.kryptcloud.com/aff.php?aff=1520&pid=46"><strong>直达</strong></a></td></tr></tbody></table><p>iON新加坡网络，请用下列的下载测试和测试IP。</p><p><strong>iON新加坡网络下载测试</strong></p><ul><li>CN2网络:</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://110.34.181.1/100MB.bin</span><br></pre></td></tr></table></figure><p><strong>iON新加坡网络测试IP</strong></p><ul><li>China Telecom CN2:</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">110.34</span><span class="number">.181</span><span class="number">.1</span></span><br></pre></td></tr></table></figure><p>注意：</p><ul><li><p>选择CN2网络，则你的网络为双向CN2网络。</p></li><li><p>不同网络之间不可以相互转移或升级降级</p></li></ul><h5 id="PCCW款（长期缺货）："><a href="#PCCW款（长期缺货）：" class="headerlink" title="PCCW款（长期缺货）："></a>PCCW款（长期缺货）：</h5><p>KVM虚拟，SSD硬盘，5-50Mbps带宽，PCCW直连。</p><p>iON Cloud新加坡PCCW机房测试信息（双向PCCW网络）：</p><ul><li>测试IP：<code>110.34.185.1</code></li><li>测速文件：<a href="http://110.34.181.1/100MB.bin">http://110.34.181.1/100MB.bin</a></li></ul><p><img src="https://img.laoda.de/i/2022/05/22/e731qu-0.webp" alt="image-20220522085841282"></p><table><thead><tr><th>套餐</th><th>内存</th><th>CPU</th><th>硬盘</th><th>流量</th><th>带宽</th><th>价格</th><th>购买</th></tr></thead><tbody><tr><td>ION-SP01</td><td>2G</td><td>1核</td><td>25G</td><td>500G&#x2F;月</td><td>100Mbps</td><td>$15&#x2F;月</td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=22">链接</a></strong></td></tr><tr><td>ION-SP02</td><td>4G</td><td>2核</td><td>60G</td><td>1T&#x2F;月</td><td>100Mbps</td><td>$25&#x2F;月</td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=23">链接</a></strong></td></tr><tr><td>ION-SP03</td><td>6G</td><td>2核</td><td>100G</td><td>2T&#x2F;月</td><td>100Mbps</td><td>$45&#x2F;月</td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=24">链接</a></strong></td></tr><tr><td>ION-SP04</td><td>8G</td><td>4核</td><td>160G</td><td>3T&#x2F;月</td><td>100Mbps</td><td>$75&#x2F;月</td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=25">链接</a></strong></td></tr></tbody></table><h5 id="中国移动（CMI）优化款（长期缺货）："><a href="#中国移动（CMI）优化款（长期缺货）：" class="headerlink" title="中国移动（CMI）优化款（长期缺货）："></a>中国移动（CMI）优化款（长期缺货）：</h5><p>KVM虚拟，SSD硬盘，100Mbps带宽，中国移动国际（CMI）直连。</p><p>iON Cloud新加坡China Mobile测试信息（双向China Mobile网络）：</p><ul><li>测试IP：<code>110.34.184.1</code></li><li>测速文件：<a href="http://110.34.181.1/100MB.bin">http://110.34.181.1/100MB.bin</a></li></ul><p><img src="https://img.laoda.de/i/2022/05/22/e759lq-0.webp" alt="image-20220522085850875"></p><table><thead><tr><th>套餐</th><th>内存</th><th>CPU</th><th>硬盘</th><th>流量</th><th>带宽</th><th>价格</th><th>购买</th></tr></thead><tbody><tr><td>ION-SM01</td><td>2G</td><td>1核</td><td>25G</td><td>500G&#x2F;月</td><td>100Mbps</td><td>$25&#x2F;月</td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=26">链接</a></strong></td></tr><tr><td>ION-SM02</td><td>4G</td><td>2核</td><td>60G</td><td>1T&#x2F;月</td><td>100Mbps</td><td>$45&#x2F;月</td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=27">链接</a></strong></td></tr><tr><td>ION-SM03</td><td>6G</td><td>2核</td><td>100G</td><td>2T&#x2F;月</td><td>100Mbps</td><td>$65&#x2F;月</td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=28">链接</a></strong></td></tr><tr><td>ION-SM04</td><td>8G</td><td>4核</td><td>160G</td><td>3T&#x2F;月</td><td>100Mbps</td><td>$125&#x2F;月</td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=29">链接</a></strong></td></tr></tbody></table><h4 id="3-1-4-达拉斯"><a href="#3-1-4-达拉斯" class="headerlink" title="3.1.4 达拉斯"></a>3.1.4 达拉斯</h4><p>KVM虚拟，SSD硬盘，1Gbps带宽，直连线路。（不推荐，线路没优化）</p><p><img src="https://img.laoda.de/i/2022/05/22/e6ilj0-0.webp" alt="image-20220522085744731"></p><table><thead><tr><th>套餐</th><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th><th></th></tr></thead><tbody><tr><td>iON-DA02</td><td>2G</td><td>1核</td><td>50G</td><td>2T&#x2F;月</td><td>$8&#x2F;mo</td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=105&promocode=SU4N7S2HAL&billingcycle=quarterly">Linux</a></strong></td><td><strong>&#x2F;</strong></td></tr><tr><td>iON-DA03</td><td>2G</td><td>2核</td><td>60G</td><td>3T&#x2F;月</td><td>$12&#x2F;mo</td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=106&promocode=SU4N7S2HAL&billingcycle=quarterly">Linux</a></strong></td><td><strong>&#x2F;</strong></td></tr><tr><td>iON-DA04</td><td>4G</td><td>2核</td><td>80G</td><td>4T&#x2F;月</td><td>$18&#x2F;mo</td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=107&promocode=SU4N7S2HAL&billingcycle=quarterly">Linux</a></strong></td><td><strong>&#x2F;</strong></td></tr><tr><td>iON-DA05</td><td>8G</td><td>4核</td><td>160G</td><td>5T&#x2F;月</td><td>$36&#x2F;mo</td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=108&promocode=SU4N7S2HAL&billingcycle=quarterly">Linux</a></strong></td><td><strong>&#x2F;</strong></td></tr><tr><td>iON-DA06</td><td>16G</td><td>6核</td><td>320G</td><td>5T&#x2F;月</td><td>$72&#x2F;mo</td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=109&promocode=SU4N7S2HAL&billingcycle=quarterly">Linux</a></strong></td><td><strong>&#x2F;</strong></td></tr></tbody></table><h4 id="3-1-5-檀香山"><a href="#3-1-5-檀香山" class="headerlink" title="3.1.5 檀香山"></a>3.1.5 檀香山</h4><p>KVM虚拟，SSD硬盘，1Gbps带宽，直连线路。（不推荐，线路没优化）</p><p><img src="https://img.laoda.de/i/2022/05/22/e6l3np-0.webp" alt="image-20220522085756224"></p><table><thead><tr><th>套餐</th><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th><th></th></tr></thead><tbody><tr><td>iON-HNL02</td><td>2G</td><td>1核</td><td>50G</td><td>2T&#x2F;月</td><td>$10&#x2F;月</td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=114">Linux</a></strong></td><td><strong>&#x2F;</strong></td></tr><tr><td>iON-HNL03</td><td>2G</td><td>2核</td><td>60G</td><td>3T&#x2F;月</td><td>$15&#x2F;月</td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=115">Linux</a></strong></td><td><strong>&#x2F;</strong></td></tr><tr><td>iON-HNL04</td><td>4G</td><td>2核</td><td>80G</td><td>4T&#x2F;月</td><td>$20&#x2F;月</td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=116">Linux</a></strong></td><td><strong>&#x2F;</strong></td></tr><tr><td>iON-HNL05</td><td>8G</td><td>4核</td><td>160G</td><td>5T&#x2F;月</td><td>$40&#x2F;月</td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=117">Linux</a></strong></td><td><strong>&#x2F;</strong></td></tr><tr><td>iON-HNL06</td><td>16G</td><td>6核</td><td>320G</td><td>5T&#x2F;月</td><td>$80&#x2F;月</td><td><strong><a href="https://ion.krypt.asia/aff.php?aff=1520&pid=119">Linux</a></strong></td><td><strong>&#x2F;</strong></td></tr></tbody></table><h3 id="3-2-“传家宝”套餐"><a href="#3-2-“传家宝”套餐" class="headerlink" title="3.2 “传家宝”套餐"></a>3.2 “传家宝”套餐</h3><h4 id="iON-11-11刀-年"><a href="#iON-11-11刀-年" class="headerlink" title="iON 11.11刀&#x2F;年"></a>iON 11.11刀&#x2F;年</h4><p>配置就是iON-L09，也就是68刀&#x2F;年的洛杉矶同款</p><h4 id="iON-20-19刀-年"><a href="#iON-20-19刀-年" class="headerlink" title="iON 20.19刀&#x2F;年"></a>iON 20.19刀&#x2F;年</h4><p>配置就是iON-L09，也就是68刀&#x2F;年的洛杉矶同款</p><h4 id="iON-22-22刀-年"><a href="#iON-22-22刀-年" class="headerlink" title="iON 22.22刀&#x2F;年"></a>iON 22.22刀&#x2F;年</h4><p>配置就是iON-L02，也就是10刀&#x2F;月的洛杉矶同款</p><h2 id="4-注意事项"><a href="#4-注意事项" class="headerlink" title="4. 注意事项"></a>4. 注意事项</h2><h3 id="4-1-不要轻易DD系统！！！可能会删鸡！"><a href="#4-1-不要轻易DD系统！！！可能会删鸡！" class="headerlink" title="4.1 不要轻易DD系统！！！可能会删鸡！"></a>4.1 不要轻易DD系统！！！可能会删鸡！</h3><h3 id="4-2-关于IP被墙"><a href="#4-2-关于IP被墙" class="headerlink" title="4.2 关于IP被墙"></a>4.2 关于IP被墙</h3><p>新买的机器，如果发现IP被墙了，可以在24小时之内联系客服免费更换。</p><p>超过24小时之后，每台机器只有一次换IP的机会，而且需要付2美元的费用。</p><h3 id="4-3-流量超了怎么办？"><a href="#4-3-流量超了怎么办？" class="headerlink" title="4.3 流量超了怎么办？"></a>4.3 流量超了怎么办？</h3><p>如果你使用的流量超出限额，你的VPS将被暂停（会有邮件通知），然后你可以加购流量包，<strong>每250GB流量5美元</strong>（别问我怎么知道的，1T流量一般人是用不完的，我是被打了 &#x3D; &#x3D;）</p><p><img src="https://img.laoda.de/i/2022/05/22/f1f7wl-0.webp" alt="image-20220522090937302"></p><h3 id="4-4-改邮箱"><a href="#4-4-改邮箱" class="headerlink" title="4.4 改邮箱"></a>4.4 改邮箱</h3><p>如果收购别人传家宝套餐，iON貌似不能push，但是支持直接改邮箱，具体方法：</p><p><img src="https://img.laoda.de/i/2022/05/22/f2myh6-0.webp" alt="image-20220522091140191"></p><p><img src="https://img.laoda.de/i/2022/05/22/f3kxba-0.webp" alt="image-20220522091258731"></p><h2 id="5-iON-Cloud线路测试"><a href="#5-iON-Cloud线路测试" class="headerlink" title="5. iON Cloud线路测试"></a>5. iON Cloud线路测试</h2><p>测试IP：</p><ul><li>洛杉矶<del>CN2 GT</del>（AS4837）： <code>98.126.41.162</code></li><li>圣何塞CN2 GT（可能也是AS4837）: <code>174.139.126.166</code></li><li>圣何塞CN2 GIA：<code>107.6.242.105</code>  <code>107.6.242.126</code></li><li>达拉斯：<code>96.62.102.100</code></li><li>檀香山测试IP：<code>107.6.255.15</code></li></ul><p>iON Cloud新加坡CN2机房测试信息：</p><ul><li>测试IP：<code>110.34.181.1</code></li><li>测速文件：<a href="http://110.34.181.1/100MB.bin">http://110.34.181.1/100MB.bin</a></li></ul><p>iON Cloud新加坡PCCW机房测试信息（双向PCCW网络）：</p><ul><li>测试IP：<code>110.34.185.1</code></li><li>测速文件：<a href="http://110.34.181.1/100MB.bin">http://110.34.181.1/100MB.bin</a></li></ul><p>iON Cloud新加坡China Mobile测试信息（双向China Mobile网络）：</p><ul><li>测试IP：<code>110.34.184.1</code></li><li>测速文件：<a href="http://110.34.181.1/100MB.bin">http://110.34.181.1/100MB.bin</a></li></ul><h2 id="6-附录"><a href="#6-附录" class="headerlink" title="6. 附录"></a>6. 附录</h2><p>咕咕的iON 2019测试情况（洛杉矶68刀&#x2F;年同款）</p><p>供大家参考～</p><h3 id="6-1-bench-sh"><a href="#6-1-bench-sh" class="headerlink" title="6.1 bench.sh"></a>6.1 bench.sh</h3><p>首先还是请出秋水的 bench.sh 脚本，这个脚本可以查看 Linux 系统信息，还可以测试网络带宽及硬盘读写速率。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -qO- bench.sh | bash</span><br></pre></td></tr></table></figure><p>运行后如图：</p><img src="https://img.laoda.de/i/2022/05/22/ugz2zl-0.webp" alt="image-20220522184246737" style="zoom:50%;" /><img src="https://img.laoda.de/i/2022/05/22/uih9hl-0.webp" alt="image-20220522184459820" style="zoom:50%;" /><p>注意看<code>Upload Speed</code>，数值除以8，就是我们常说的下载速度了。</p><p>时间：22&#x2F;05&#x2F;2022 18:44</p><h3 id="6-2-回程测试"><a href="#6-2-回程测试" class="headerlink" title="6.2 回程测试"></a>6.2 回程测试</h3><p>回程多地区测试脚本：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -qO- git.io/besttrace | bash</span><br></pre></td></tr></table></figure><h4 id="北京电信"><a href="#北京电信" class="headerlink" title="北京电信"></a>北京电信</h4><p><img src="https://img.laoda.de/i/2022/05/22/vqtz0i-0.webp" alt="image-20220522191949489"></p><h4 id="北京联通"><a href="#北京联通" class="headerlink" title="北京联通"></a>北京联通</h4><p><img src="https://img.laoda.de/i/2022/05/22/vr53e6-0.webp" alt="image-20220522192000765"></p><h4 id="北京移动"><a href="#北京移动" class="headerlink" title="北京移动"></a>北京移动</h4><p><img src="https://img.laoda.de/i/2022/05/22/vr7bkf-0.webp" alt="image-20220522192011532"></p><h4 id="上海电信"><a href="#上海电信" class="headerlink" title="上海电信"></a>上海电信</h4><p><img src="https://img.laoda.de/i/2022/05/22/vr9k9m-0.webp" alt="image-20220522192020815"></p><h4 id="上海联通"><a href="#上海联通" class="headerlink" title="上海联通"></a>上海联通</h4><p><img src="https://img.laoda.de/i/2022/05/22/vrat1k-0.webp" alt="image-20220522192028687"></p><h4 id="上海移动"><a href="#上海移动" class="headerlink" title="上海移动"></a>上海移动</h4><p><img src="https://img.laoda.de/i/2022/05/22/vrduie-0.webp" alt="image-20220522192041769"></p><h4 id="深圳电信"><a href="#深圳电信" class="headerlink" title="深圳电信"></a>深圳电信</h4><p><img src="https://img.laoda.de/i/2022/05/22/vrgvem-0.webp" alt="image-20220522192056023"></p><h4 id="深圳联通"><a href="#深圳联通" class="headerlink" title="深圳联通"></a>深圳联通</h4><p><img src="https://img.laoda.de/i/2022/05/22/vrr49m-0.webp" alt="image-20220522192104316"></p><h4 id="深圳移动"><a href="#深圳移动" class="headerlink" title="深圳移动"></a>深圳移动</h4><p><img src="https://img.laoda.de/i/2022/05/22/vrt0qj-0.webp" alt="image-20220522192113010"></p><h4 id="成都教育网"><a href="#成都教育网" class="headerlink" title="成都教育网"></a>成都教育网</h4><p><img src="https://img.laoda.de/i/2022/05/22/vrw2go-0.webp" alt="image-20220522192127306"></p><h3 id="6-3-ping值查询"><a href="#6-3-ping值查询" class="headerlink" title="6.3 ping值查询"></a>6.3 ping值查询</h3><p>网址：<a href="https://ping.pe/">https://ping.pe/</a></p><p><img src="https://img.laoda.de/i/2022/05/22/vgjols-0.webp" alt="image-20220522190133965"></p><p>时间：22&#x2F;05&#x2F;2022 19:02</p><h3 id="6-4-CPU性能测试"><a href="#6-4-CPU性能测试" class="headerlink" title="6.4 CPU性能测试"></a>6.4 CPU性能测试</h3><p>还是请出秋水的 UnixBench 脚本来测试。</p><p>UnixBench 是一个类 Unix 系（Unix，BSD，Linux）统下的性能测试工具，一个开源工具，被广泛用与测试 Linux 系统主机的性能。UnixBench 的主要测试项目有：系统调用、读写、进程、管道、运算、C库等系统基准性能提供测试数据。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget --no-check-certificate https://github.com/teddysun/across/raw/master/unixbench.sh &amp;&amp; chmod +x unixbench.sh &amp;&amp; ./unixbench.sh</span><br></pre></td></tr></table></figure><p>上面脚本运行需要很长时间。</p><img src="https://img.laoda.de/i/2022/05/22/vphljf-0.webp" alt="image-20220522191723980" style="zoom:50%;" /><img src="https://img.laoda.de/i/2022/05/22/vposzg-0.webp" alt="image-20220522191757451" style="zoom:50%;" />]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 美国VPS </tag>
            
            <tag> 亚太VPS </tag>
            
            <tag> iON </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Docker小知识】告别长命令，Composerize你的Docker部署命令！Docker-compose YYDS！</title>
      <link href="/archives/composerize-docker-cli/"/>
      <url>/archives/composerize-docker-cli/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.composerize.com/">https://www.composerize.com/</a></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我们在搭建docker项目的时候，通常会有两种形式，</p><p>一种是类似这样的命令行模式的（比如zfile）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --name=zfile --restart=always \</span><br><span class="line">    -p 8080:8080 \</span><br><span class="line">    -v /root/data/docker_data/zfile/conf:/root/.zfile \</span><br><span class="line">    -v /root/data/docker_data/root/zfile/db:/root/.zfile-new/db \</span><br><span class="line">    -v /root/data/docker_data/root/zfile/data:/root/zfile/data \</span><br><span class="line">    stilleshan/zfile</span><br></pre></td></tr></table></figure><p>还有一种是docker-compose的形式的（比如<a href="https://blog.laoda.de/archives/docker-install-qbittorrent">qBittorrent</a>）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&quot;2&quot;</span></span><br><span class="line">services:</span><br><span class="line">  qbittorrent:</span><br><span class="line">    image: linuxserver/qbittorrent</span><br><span class="line">    container_name: qbittorrent</span><br><span class="line">    environment:</span><br><span class="line">      - PUID=1000</span><br><span class="line">      - PGID=1000</span><br><span class="line">      - TZ=Asia/Shanghai <span class="comment"># 你的时区</span></span><br><span class="line">      - UMASK_SET=022</span><br><span class="line">      - WEBUI_PORT=8081 <span class="comment"># 将此处修改成你欲使用的 WEB 管理平台端口 </span></span><br><span class="line">    volumes:</span><br><span class="line">      - /root/data/docker_data/qBittorrent/config:/config <span class="comment"># 绝对路径请修改为自己的config文件夹</span></span><br><span class="line">      - /root/data/docker_data/qBittorrent/downloads:/downloads <span class="comment"># 绝对路径请修改为自己的downloads文件夹</span></span><br><span class="line">    ports:</span><br><span class="line">      <span class="comment"># 要使用的映射下载端口与内部下载端口，可保持默认，安装完成后在管理页面仍然可以改成其他端口。</span></span><br><span class="line">      - 6881:6881 </span><br><span class="line">      - 6881:6881/udp</span><br><span class="line">      <span class="comment"># 此处WEB UI 目标端口与内部端口务必保证相同，见问题1</span></span><br><span class="line">      - 8081:8081</span><br><span class="line">    restart: unless-stopped</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>很明显，相比前一种方式，后一种<code>docker-compose</code>的方法更简单一些，所有配置文件都在<code>docker-compose.yml</code>里头，我们只需要在这个文件夹下，运行<code>docker-compose up -d</code>就可以了，搬家换服务器的时候，也把这份配置文件带上，可以很轻松地完成<a href="https://blog.laoda.de/archives/docker-issues">服务器迁移</a>工作。</p><p>那么，有没有办法，把前面的那种类似命令行的模式，改成docker-compose的模式呢？其实，仔细观察，就会发现，他们是一个东西，我们没有深入研究<code>docker compose</code>，也能猜到，<code>docker-compose</code>的文件，其实就是把命令行的那串东西，通过一定的规则，<code>转换</code>而来的。</p><p>你对照着，其实也能大概写出一个雏形。</p><p>而今天，我们要分享的，就是利用工具，快速完成这个<code>转换</code>的动作！</p><h2 id="1-演示"><a href="#1-演示" class="headerlink" title="1. 演示"></a>1. 演示</h2><p>项目站点：<a href="https://www.composerize.com/">https://www.composerize.com/</a></p><p>GitHub地址：<a href="https://github.com/magicmark/composerize">https://github.com/magicmark/composerize</a></p><p>好了，其实这已经是今天视频的核心内容了，如果你不像自己麻烦搭建，后面的可以不用看了。</p><p>如果你担心这个网站哪天没了，或者是他的服务器崩了，导致服务不可用，那么我们来看看自己怎么搭建一个这样的服务。</p><h2 id="2-自建"><a href="#2-自建" class="headerlink" title="2. 自建"></a>2. 自建</h2><h3 id="2-1-搭建环境"><a href="#2-1-搭建环境" class="headerlink" title="2.1 搭建环境"></a>2.1 搭建环境</h3><ul><li>服务器：<del>腾讯香港轻量应用服务器24元&#x2F;月VPS一台</del>，本期搭建用的是<a href="https://loll.cc/vultr">Vultr</a>的服务器，按小时计费，可随时销毁（建议大家也最好是选<strong>非大陆的服务器</strong>）（<a href="https://loll.cc/tx">腾讯轻量购买链接</a>）<a href="https://loll.cc/hz">Hetzner注册免费得25欧试用金有效期一个月</a></li><li>系统：Debian 10（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本</a> 非必需DD用原来的系统也OK）</li><li><del>域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</del></li><li>安装好Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li><del>【非必需】提前安装好宝塔面板海外版本aapanel，并安装好Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</del></li><li><del>【非必需本教程采用】安装好Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</del></li></ul><h3 id="2-2-搭建视频"><a href="#2-2-搭建视频" class="headerlink" title="2.2 搭建视频"></a>2.2 搭建视频</h3><p>YouTube：<a href="https://youtu.be/hH-ezOV4lY0">https://youtu.be/hH-ezOV4lY0</a></p><p>哔哩哔哩【高清版本可以点击去吐槽到B站观看】：<a href="https://www.bilibili.com/BV1aU4y1176c">https://www.bilibili.com/BV1aU4y1176c</a></p><p>其实很简单。</p><p>首先我们要安装一个NPM（注意，这里的NPM是真的NPM，不是指Nginx Proxy Manager）</p><img src="https://img.laoda.de/i/2022/05/20/tzqbt6-0.webp" alt="image-20220520181351747" style="zoom:50%;" /><blockquote><p><code>npm</code>是<code>Node.js</code>默认的、用<code>JavaScript</code>编写的软件包管理系统。 <a href="https://zh.wikipedia.org/zh-cn/Npm">维基百科</a></p></blockquote><p>然后用NPM来安装。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt update -y </span><br><span class="line"></span><br><span class="line">sudo apt install npm -y </span><br><span class="line"></span><br><span class="line">npm install composerize -g  <span class="comment"># -g 表示全局安装</span></span><br></pre></td></tr></table></figure><p>使用方法：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">composerize docker run -d --name tinypin -p 3030:3000 -v <span class="string">&quot;<span class="subst">$(pwd)</span>/data:/data&quot;</span> --restart=unless-stopped slynn1324/tinypin</span><br></pre></td></tr></table></figure><h2 id="3-注意事项"><a href="#3-注意事项" class="headerlink" title="3. 注意事项"></a>3. 注意事项</h2><p>遇到部分复杂的命令，可能会转换不成功，例如：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --name=Whiteboard -p 8080:8080  --memory=2g --cpus=1 --restart=always --net=vlan100 --ip=192.168.100.17 rofl256/whiteboard </span><br></pre></td></tr></table></figure><p>转换结果如下：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line">services:</span><br><span class="line">    whiteboard:</span><br><span class="line">        container_name: Whiteboard</span><br><span class="line">        ports:</span><br><span class="line">            - <span class="string">&#x27;8080:8080&#x27;</span></span><br><span class="line">        restart: always</span><br><span class="line">        network_mode: vlan100</span><br><span class="line">        image: rofl256/whiteboard</span><br></pre></td></tr></table></figure><p>可以发现，丢失了很多东西  &#x3D; &#x3D;</p><p>项目还在维护中，希望能越来越好。</p><h2 id="4-最后"><a href="#4-最后" class="headerlink" title="4. 最后"></a>4. 最后</h2><p>祝大家用得开心，有问题可以去GitHub提<a href="https://github.com/magicmark/composerize/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，有能力给项目做贡献的同学，也欢迎积极加入到<a href="https://github.com/magicmark/composerize">项目</a>中来，贡献自己的一份力量！</p><h2 id="5-鸣谢"><a href="#5-鸣谢" class="headerlink" title="5. 鸣谢"></a>5. 鸣谢</h2><p><strong>捐赠列表：</strong></p><table><thead><tr><th align="center">时间</th><th align="center">小伙伴ID</th><th align="center">平台</th><th align="center">金额</th><th align="center">小伙伴留言</th></tr></thead><tbody><tr><td align="center">2022-05-01</td><td align="center">B*r</td><td align="center">微信</td><td align="center">20 RMB</td><td align="center">大佬，我可以加你吗！ （这位没有留联系方式，很尴尬）</td></tr><tr><td align="center">2022-05-03</td><td align="center">**成</td><td align="center">支付宝</td><td align="center">30  RMB</td><td align="center">感谢up主提供rss服务</td></tr><tr><td align="center">2022-02-07</td><td align="center">old_drive</td><td align="center">B站</td><td align="center">4.03贝壳</td><td align="center">充电</td></tr><tr><td align="center">2022-03-10</td><td align="center">环球公司朱总</td><td align="center">B站</td><td align="center">4.03贝壳</td><td align="center">充电</td></tr><tr><td align="center">2022-03-20</td><td align="center">深刻小黄瓜</td><td align="center">B站</td><td align="center">4.03贝壳</td><td align="center">充电</td></tr><tr><td align="center">2022-03-27</td><td align="center">眼里全是珍惜</td><td align="center">B站</td><td align="center">3.36贝壳</td><td align="center">充电</td></tr><tr><td align="center">2022-04-26</td><td align="center">ryanwang-ya</td><td align="center">B站</td><td align="center">59.14贝壳</td><td align="center">充电</td></tr><tr><td align="center">2022-05-03</td><td align="center">vivianglia</td><td align="center">B站</td><td align="center">0.68贝壳</td><td align="center">充电</td></tr><tr><td align="center">2022-05-09</td><td align="center">**铭</td><td align="center">支付宝</td><td align="center">66 RMB</td><td align="center">感谢您为中国教育做出的贡献 哈哈哈</td></tr><tr><td align="center">2022-05-17</td><td align="center">**兰</td><td align="center">支付宝</td><td align="center">15 RMB</td><td align="center">B站</td></tr><tr><td align="center">2022-05-19</td><td align="center">尼禄ばら</td><td align="center">B站</td><td align="center">3.36贝壳</td><td align="center">充电</td></tr><tr><td align="center">2022-05-20</td><td align="center">新星Starman</td><td align="center">B站</td><td align="center">4.47贝壳</td><td align="center">充电</td></tr></tbody></table><p>非常感谢上面的小伙伴给咕咕充电！</p><p>YouTube的小伙伴可以发现现在视频下方有个<code>感谢</code>功能，也可以给咕咕充电了！</p><p><img src="https://img.laoda.de/i/2022/05/20/u99g9u-0.webp" alt="image-20220520182952683"></p><img src="https://img.laoda.de/i/2022/05/20/ua55o2-0.webp" alt="image-20220520183101106" style="zoom:33%;" /><p><code>购买并发送</code>之后，你的评论在评论区就会显示彩色 &#x3D; &#x3D;</p><p>大家的鼓励是咕咕持续分享的动力！</p><h2 id="6-参考资料"><a href="#6-参考资料" class="headerlink" title="6. 参考资料"></a>6. 参考资料</h2><p><a href="https://www.composerize.com/">https://www.composerize.com/</a></p><p><a href="https://github.com/magicmark/composerize">https://github.com/magicmark/composerize</a></p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DockerCompose </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Docker魔法系列】NPM与XUI共存！Nginx Proxy Manager搭配X-UI实现Vless+WS+TLS 教程！</title>
      <link href="/archives/npm-xui/"/>
      <url>/archives/npm-xui/</url>
      
        <content type="html"><![CDATA[<p>之前分享过搭建<a href="https://blog.laoda.de/archives/xui">可以与宝塔共存的一个“魔法”服务器状态监控应用——xui</a>，支持Vmess+WS+TLS。</p><p>最近Docker视频出的比较多，前阵子又出现了宝塔国内版存在隐私泄露的问题，很多小伙伴其实都不用宝塔了，那么，在我们现在装了Nginx Proxy Manager（NPM）的环境下，<code>80</code>和<code>443</code>端口都转由NPM来管理了，可以让XUI和NPM共存吗？如何用NPM来反代XUI呢？今天我们就来折腾一下！</p><h2 id="1-搭建环境"><a href="#1-搭建环境" class="headerlink" title="1. 搭建环境"></a>1. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器24元&#x2F;月VPS一台</del>展示用的服务器是<a href="https://www.oracle.com/free">甲骨文圣何塞永久免费服务器</a>，本期搭建用的是<a href="https://loll.cc/vultr">Vultr</a>的服务器，按小时计费，可随时销毁（最好是选<strong>非大陆的服务器</strong>）（<a href="https://loll.cc/tx">腾讯轻量购买链接</a>）<a href="https://blog.laoda.de/archives/cheap-vps-racknerd">移动、联通用户建议可以用Racknerd试试</a></li><li>系统：Debian 10（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本</a> 非必需DD用原来的系统也OK）</li><li>域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>安装好Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>安装好Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><h2 id="2-搭建视频"><a href="#2-搭建视频" class="headerlink" title="2. 搭建视频"></a>2. 搭建视频</h2><p>YouTube：<a href="https://youtu.be/aYC4BTzbw8c">https://youtu.be/aYC4BTzbw8c</a></p><h2 id="3-搭建方式"><a href="#3-搭建方式" class="headerlink" title="3. 搭建方式"></a>3. 搭建方式</h2><h3 id="3-1-服务器初始设置"><a href="#3-1-服务器初始设置" class="headerlink" title="3.1 服务器初始设置"></a>3.1 服务器初始设置</h3><p>服务器初始设置，参考</p><p><a href="https://blog.laoda.de/archives/vps-script"><strong>新买了一台服务器“必须”要做的6件小事</strong></a></p><p><a href="https://blog.laoda.de/archives/hello-docker">【Docker系列】不用宝塔面板，小白一样可以玩转VPS服务器！</a></p><h3 id="3-2-下载xui"><a href="#3-2-下载xui" class="headerlink" title="3.2 下载xui"></a>3.2 下载xui</h3><p>新版（支持功能更多）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -Ls https://raw.githubusercontent.com/FranzKafkaYu/x-ui/master/install.sh)</span><br></pre></td></tr></table></figure><p>GitHub地址：<a href="https://github.com/FranzKafkaYu/x-ui">https://github.com/FranzKafkaYu/x-ui</a></p><p>旧版：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -Ls https://raw.githubusercontent.com/vaxilu/x-ui/master/install.sh)</span><br></pre></td></tr></table></figure><p>根据提示设置<code>端口信息</code>、<code>用户名</code>、<code>密码</code>。</p><h3 id="3-3-登陆xui面板并配置"><a href="#3-3-登陆xui面板并配置" class="headerlink" title="3.3 登陆xui面板并配置"></a>3.3 登陆xui面板并配置</h3><img src="https://img.laoda.de/i/2022/05/19/sr0928-0.webp" alt="image-20220519173838476" style="zoom:33%;" /><p>切换最新版本：</p><img src="https://img.laoda.de/i/2022/05/19/srde88-0.webp" alt="image-20220519173900021" style="zoom:33%;" /><p>修改面板路径：</p><img src="https://img.laoda.de/i/2022/05/19/srgxxx-0.webp" alt="image-20220519173916580" style="zoom:33%;" /><p>记得<code>保存配置</code>。</p><p>添加<code>入站列表</code>:</p><img src="https://img.laoda.de/i/2022/05/19/ss2h72-0.webp" alt="image-20220519174016372" style="zoom:33%;" /><p>如果配置，只需要修改<code>4</code>个地方：</p><img src="https://img.laoda.de/i/2022/05/19/sst10j-0.webp" alt="image-20220519174141370" style="zoom:33%;" /><p>点击<code>添加</code>，之后点击<code>重启面板</code></p><img src="https://img.laoda.de/i/2022/05/19/stdsd0-0.webp" alt="image-20220519174237766" style="zoom:33%;" /><h3 id="3-4-NPM配置"><a href="#3-4-NPM配置" class="headerlink" title="3.4 NPM配置"></a>3.4 NPM配置</h3><h4 id="2022-12-15更新简单方法"><a href="#2022-12-15更新简单方法" class="headerlink" title="2022-12-15更新简单方法"></a>2022-12-15更新简单方法</h4><p>无需手动进入目录修改，只需要在面版即可操作！</p><p>选择任意一个NPM代理上，分别在下面两个位置填入下面两个部分内容：</p><p><img src="https://img.laoda.de/i/2022/12/15/u4xzin-2.webp" alt="image-20221215182225687"></p><p>代替了旧方法中的：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span><span class="regexp"> ^~</span> /fuckgfw &#123;              <span class="comment">#fuckgfw换成你前面设置的面板的url根路径</span></span><br><span class="line">    <span class="attribute">proxy_pass</span> http://158.101.3.171:54331/fuckgfw;  <span class="comment"># IP填服务器IP，这边不能填127.0.0.1，因为是在容器里，54331换成你xui面板的端口</span></span><br><span class="line">    <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/12/15/u51sws-2.webp" alt="image-20221215182244204"></p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> /plogger &#123;                 <span class="comment"># plogger填你前面设置的ws的路径</span></span><br><span class="line">        <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://158.101.3.171:13997;    <span class="comment"># IP填服务器IP，这边不能填127.0.0.1，因为是在容器里，13997换成你入站规则那边的IP</span></span><br><span class="line">        <span class="attribute">proxy_http_version</span> <span class="number">1</span>.<span class="number">1</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Connection <span class="string">&quot;upgrade&quot;</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Host <span class="variable">$http_host</span>;</span><br><span class="line">        <span class="attribute">proxy_read_timeout</span> <span class="number">300s</span>;</span><br><span class="line">        <span class="comment"># Show realip in v2ray access.log</span></span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>保存即可！</p><hr><p>以下为旧方法，不建议采用</p><p>登陆服务器，来到NPM的安装路径下（这边假设大家都是用<a href="https://blog.laoda.de/archives/nginxproxymanager">【Docker系列】一个反向代理神器——Nginx Proxy Manager</a>这篇文章的方法搭建的）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/npm</span><br></pre></td></tr></table></figure><p>查看当前文件：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> -al</span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2022/05/19/swrqhj-0.webp" alt="image-20220519174804818" style="zoom: 50%;" /><p>我们的文件都在<code>data</code>目录下，一层一层找，找到我们的Nginx配置文件。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> data/nginx/proxy_host</span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2022/05/19/syntz8-0.webp" alt="image-20220519175123930" style="zoom:50%;" /><p>可以看到两个文件（如果你NPM反代多的话，可能有很多个）</p><p>这边比较讨厌，是数字命名的，其实我们随便选一个也行。</p><img src="https://img.laoda.de/i/2022/05/19/szyhi6-0.webp" alt="image-20220519175343318" style="zoom:50%;" /><img src="https://img.laoda.de/i/2022/05/19/t15atw-0.webp" alt="image-20220519175542303" style="zoom:50%;" /><hr><p>以上为旧方法，不建议采用。</p><p>在上述位置加入以下内容：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span><span class="regexp"> ^~</span> /fuckgfw &#123;              <span class="comment">#fuckgfw换成你前面设置的面板的url根路径</span></span><br><span class="line">    <span class="attribute">proxy_pass</span> http://158.101.3.171:54331/fuckgfw;  <span class="comment"># IP填服务器IP，这边不能填127.0.0.1，因为是在容器里，54331换成你xui面板的端口</span></span><br><span class="line">    <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="section">location</span> /plogger &#123;                 <span class="comment"># plogger填你前面设置的ws的路径</span></span><br><span class="line">        <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://158.101.3.171:13997;    <span class="comment"># IP填服务器IP，这边不能填127.0.0.1，因为是在容器里，13997换成你入站规则那边的IP</span></span><br><span class="line">        <span class="attribute">proxy_http_version</span> <span class="number">1</span>.<span class="number">1</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Connection <span class="string">&quot;upgrade&quot;</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Host <span class="variable">$http_host</span>;</span><br><span class="line">        <span class="attribute">proxy_read_timeout</span> <span class="number">300s</span>;</span><br><span class="line">        <span class="comment"># Show realip in v2ray access.log</span></span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>保存后，重启一下NPM。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/npm    <span class="comment"># 来到docker-compose.yml所在的文件夹下</span></span><br><span class="line"></span><br><span class="line">docker-compose restart  <span class="comment"># 重启</span></span><br></pre></td></tr></table></figure><h2 id="4-客户端连接"><a href="#4-客户端连接" class="headerlink" title="4. 客户端连接"></a>4. 客户端连接</h2><p>以小火煎为例子，其他客户端类似：</p><p>点击打开二维码：</p><img src="https://img.laoda.de/i/2022/05/19/tt2r0u-0.webp" alt="image-20220519180233466" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/05/19/tu4uac-0.webp" alt="image-20220519180412072" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/05/19/tupyfd-0.webp" alt="image-20220519180510046" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/05/19/tuzhi5-0.webp" alt="image-20220519180554086" style="zoom:33%;" /><p>完整配置参考：</p><img src="https://img.laoda.de/i/2022/05/19/tvfzmm-0.webp" alt="image-20220519180630504" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/05/19/tviqsr-0.webp" alt="image-20220519180644375" style="zoom:33%;" /><p>启动节点：</p><img src="https://img.laoda.de/i/2022/05/19/tw10vi-0.webp" alt="image-20220519180728131" style="zoom:33%;" /><p>浏览器输入<code>https://ip.skk.moe/</code></p><img src="https://img.laoda.de/i/2022/05/19/twneod-0.webp" alt="image-20220519180831650" style="zoom: 33%;" /><p>搞定！</p><h2 id="5-注意事项（重要）"><a href="#5-注意事项（重要）" class="headerlink" title="5. 注意事项（重要）"></a>5. 注意事项（重要）</h2><p>由于我们是直接修改的配置文件，所以，在反代的这个站点，不用轻易在NPM后台面板上修改原来的配置（比如打开，然后点确定），这样会破坏掉我们这边写的Nginx配置文件，导致节点无法正常使用。</p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NginxProxyManager </tag>
            
            <tag> Docker部署 </tag>
            
            <tag> 魔法上网 </tag>
            
            <tag> xui </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【有用的小知识】Docker容器如何更新？如何迁移应用？如何卸载？</title>
      <link href="/archives/docker-issues/"/>
      <url>/archives/docker-issues/</url>
      
        <content type="html"><![CDATA[<blockquote><p>针对无基础的小伙伴，常用的一些方法。供参考～</p></blockquote><h2 id="1-搭建环境"><a href="#1-搭建环境" class="headerlink" title="1. 搭建环境"></a>1. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器24元&#x2F;月VPS一台</del>，本期搭建用的是<a href="https://loll.cc/vultr">Vultr</a>的服务器，按小时计费，可随时销毁（建议大家也最好是选<strong>非大陆的服务器</strong>）（<a href="https://loll.cc/tx">腾讯轻量购买链接</a>）<a href="https://loll.cc/hz">Hetzner注册免费得25欧试用金有效期一个月</a></li><li>系统：Debian 10（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本</a> 非必需DD用原来的系统也OK）</li><li><del>域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</del></li><li>安装好Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li><del>【非必需】提前安装好宝塔面板海外版本aapanel，并安装好Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</del></li><li><del>【非必需本教程采用】安装好Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</del></li></ul><h2 id="2-搭建视频"><a href="#2-搭建视频" class="headerlink" title="2. 搭建视频"></a>2. 搭建视频</h2><p>YouTube：<a href="https://youtu.be/VQiP0r-gMOo">https://youtu.be/VQiP0r-gMOo</a></p><p>哔哩哔哩：<a href="https://www.bilibili.com/BV1f541197es">https://www.bilibili.com/BV1f541197es</a></p><h2 id="3-Docker项目更新"><a href="#3-Docker项目更新" class="headerlink" title="3. Docker项目更新"></a>3. Docker项目更新</h2><h3 id="3-1-docker命令搭建的常用更新方法"><a href="#3-1-docker命令搭建的常用更新方法" class="headerlink" title="3.1 docker命令搭建的常用更新方法"></a>3.1 docker命令搭建的常用更新方法</h3><p>以Halo博客的搭建为例子：</p><p>搭建的命令为：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -it -d --name halo -p 8090:8090 -v ~/.halo:/root/.halo --restart=unless-stopped halohub/halo:1.5.2</span><br></pre></td></tr></table></figure><p>更新方法：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker stop halo   <span class="comment"># 先停止容器，这一步所有都一样，注意你容器的名字</span></span><br><span class="line"></span><br><span class="line">docker <span class="built_in">rm</span> -f halo  <span class="comment"># 删除容器，这一步所有都一样，注意你容器的名字</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r ~/.halo ~/.halo.archive   <span class="comment">#备份数据（非常非常非常重要）这一步所有都一样，注意你挂载出来的路径地址</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf ~/.halo/.leveldb    <span class="comment"># 这一步是halo特有的</span></span><br><span class="line"></span><br><span class="line">docker pull halohub/halo:1.5.3   <span class="comment"># 拉取最新的镜像，一般的话你知道特定的版本号就直接写即可，比如这边的1.5.3，如果不知道版本号，可以直接写latest，即 docker pull halohub/halo:latest</span></span><br><span class="line"></span><br><span class="line">docker run -it -d --name halo -p 8090:8090 -v ~/.halo:/root/.halo --restart=unless-stopped halohub/halo:1.5.3    <span class="comment"># 重新运行容器 注意和搭建时候唯一不同的就是最后面的版本号不同，如果你是latest 那就把1.5.3改成latest</span></span><br><span class="line"></span><br><span class="line">docker image prune <span class="comment"># 删除掉旧的镜像（可选）</span></span><br></pre></td></tr></table></figure><p>参考自官方文档：<a href="https://docs.halo.run/getting-started/upgrade">https://docs.halo.run/getting-started/upgrade</a></p><h3 id="3-2-docker-compose搭建的更新方法"><a href="#3-2-docker-compose搭建的更新方法" class="headerlink" title="3.2 docker-compose搭建的更新方法"></a>3.2 docker-compose搭建的更新方法</h3><p>以<a href="https://iwanlab.com/docker-compose-install-qbittorrent/">qbittorrent</a>为例：</p><p>搭建命令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/qBittorrent <span class="comment">#创建qbitorrent数据文件夹</span></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/qBittorrent</span><br><span class="line"><span class="built_in">mkdir</span> config downloads <span class="comment">#创建配置文件目录与下载目录</span></span><br><span class="line">nano docker-compose.yml <span class="comment">#创建并编辑文件</span></span><br></pre></td></tr></table></figure><p><code>docker-compose.yml</code>里面的内容：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&quot;2&quot;</span></span><br><span class="line">services:</span><br><span class="line">  qbittorrent:</span><br><span class="line">    image: linuxserver/qbittorrent:4.4.0</span><br><span class="line">    container_name: qbittorrent</span><br><span class="line">    environment:</span><br><span class="line">      - PUID=1000</span><br><span class="line">      - PGID=1000</span><br><span class="line">      - TZ=Asia/Shanghai <span class="comment"># 你的时区</span></span><br><span class="line">      - UMASK_SET=022</span><br><span class="line">      - WEBUI_PORT=8081 <span class="comment"># 将此处修改成你欲使用的 WEB 管理平台端口 </span></span><br><span class="line">    volumes:</span><br><span class="line">      - /root/data/docker_data/qBittorrent/config:/config <span class="comment"># 绝对路径请修改为自己的config文件夹</span></span><br><span class="line">      - /root/data/docker_data/qBittorrent/downloads:/downloads <span class="comment"># 绝对路径请修改为自己的downloads文件夹</span></span><br><span class="line">    ports:</span><br><span class="line">      <span class="comment"># 要使用的映射下载端口与内部下载端口，可保持默认，安装完成后在管理页面仍然可以改成其他端口。</span></span><br><span class="line">      - 6881:6881 </span><br><span class="line">      - 6881:6881/udp</span><br><span class="line">      <span class="comment"># 此处WEB UI 目标端口与内部端口务必保证相同，见问题1</span></span><br><span class="line">      - 8081:8081</span><br><span class="line">    restart: unless-stopped</span><br></pre></td></tr></table></figure><p>更新方法：</p><p>首先进入到<code>docker-compose</code>所在的文件夹下，然后：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose pull     <span class="comment"># 注意到上方docker-compose.yml里面linuxserver/qbittorrent后面有版本号4.4.0，（如果没有默认就是latest），所以更新需要修改版本号为新的版本号（更新到特定版本），或者直接删去现在的版本号（更新到最新版本）</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r qBittorrent qBittorrent.archive    <span class="comment"># 同样你可以备份一下,也可以直接备份配置文档，因为有些时候，downloads里面文件都是小电影，很大，浪费空间 = = </span></span><br><span class="line"></span><br><span class="line">docker-compose up -d   <span class="comment">#完成</span></span><br><span class="line"></span><br><span class="line">docker image prune <span class="comment"># 删除掉旧的镜像（可选）</span></span><br></pre></td></tr></table></figure><h3 id="3-3-Portainer更新"><a href="#3-3-Portainer更新" class="headerlink" title="3.3 Portainer更新"></a>3.3 Portainer更新</h3><p>见<a href="https://iwanlab.com/docker-container-update/">【Docker系列】Docker更新容器镜像的三种方法</a></p><h2 id="4-Docker项目迁移到新服务器"><a href="#4-Docker项目迁移到新服务器" class="headerlink" title="4. Docker项目迁移到新服务器"></a>4. Docker项目迁移到新服务器</h2><blockquote><p><strong>核心思想：</strong></p><p>容器本身是可以pull下来的，没必要备份，我们只需要把搭建的命令（或者docker-compose文件）放到新机器上运行一下，然后把之前容器映射到本地的文件夹放到新的机器上就行。</p></blockquote><h3 id="4-1-带面板迁移"><a href="#4-1-带面板迁移" class="headerlink" title="4.1 带面板迁移"></a>4.1 带面板迁移</h3><p>见视频。</p><h3 id="4-2-命令行迁移"><a href="#4-2-命令行迁移" class="headerlink" title="4.2 命令行迁移"></a>4.2 命令行迁移</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -czvpf .halo.tar.gz .halo.archive</span><br><span class="line"></span><br><span class="line">scp -P 22 -r .halo.tar.gz root@192.248.190.156:/root  <span class="comment"># scp -P 端口 -r /root/backup/backup.tar 你的用户名@你的IP:/root/data/docker_data/</span></span><br><span class="line"></span><br><span class="line">tar -zxvpf .halo.tar.gz</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">mv</span> .halo.archive .halo   <span class="comment">#把.halo.archive重命名成.halo</span></span><br></pre></td></tr></table></figure><p>参考：<a href="https://www.runoob.com/linux/linux-comm-scp.html">https://www.runoob.com/linux/linux-comm-scp.html</a></p><p><a href="https://www.runoob.com/linux/linux-comm-tar.html">https://www.runoob.com/linux/linux-comm-tar.html</a></p><h2 id="5-Docker项目卸载（包括卸载Docker、docker-compose）"><a href="#5-Docker项目卸载（包括卸载Docker、docker-compose）" class="headerlink" title="5. Docker项目卸载（包括卸载Docker、docker-compose）"></a>5. Docker项目卸载（包括卸载Docker、docker-compose）</h2><h3 id="5-1-docker命令搭建的常用卸载方法"><a href="#5-1-docker命令搭建的常用卸载方法" class="headerlink" title="5.1 docker命令搭建的常用卸载方法"></a>5.1 docker命令搭建的常用卸载方法</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker ps </span><br><span class="line"></span><br><span class="line">docker stop 容器名字</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"></span><br><span class="line">docker <span class="built_in">rm</span> -f 容器名字</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf 映射出来的路径</span><br></pre></td></tr></table></figure><h3 id="5-2-docker-compose搭建的卸载方法"><a href="#5-2-docker-compose搭建的卸载方法" class="headerlink" title="5.2 docker-compose搭建的卸载方法"></a>5.2 docker-compose搭建的卸载方法</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/qBittorrent</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/qBittorrent <span class="comment"># rm -rf 映射出来的路径</span></span><br></pre></td></tr></table></figure><h3 id="5-3-卸载docker本身"><a href="#5-3-卸载docker本身" class="headerlink" title="5.3 卸载docker本身"></a>5.3 卸载docker本身</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get purge docker-ce docker-ce-cli containerd.io docker-compose-plugin</span><br><span class="line"></span><br><span class="line">sudo <span class="built_in">rm</span> -rf /var/lib/docker</span><br><span class="line"></span><br><span class="line">sudo <span class="built_in">rm</span> -rf /var/lib/containerd</span><br></pre></td></tr></table></figure><p>参考：<a href="https://docs.docker.com/engine/install/debian/">https://docs.docker.com/engine/install/debian/</a></p><h3 id="5-4-卸载docker-compose"><a href="#5-4-卸载docker-compose" class="headerlink" title="5.4 卸载docker-compose"></a>5.4 卸载docker-compose</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/bin/</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf docker-compose</span><br></pre></td></tr></table></figure><h2 id="6-参考资料"><a href="#6-参考资料" class="headerlink" title="6. 参考资料"></a>6. 参考资料</h2><p><a href="https://docs.docker.com/engine/install/debian/">https://docs.docker.com/engine/install/debian/</a></p><p><a href="https://www.runoob.com/linux/linux-comm-scp.html">https://www.runoob.com/linux/linux-comm-scp.html</a></p><p><a href="https://www.runoob.com/linux/linux-comm-tar.html">https://www.runoob.com/linux/linux-comm-tar.html</a></p><p><a href="https://docs.halo.run/getting-started/upgrade">https://docs.halo.run/getting-started/upgrade</a></p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> 更新 </tag>
            
            <tag> 服务器搬家 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩儿的Docker项目】10分钟搭建美国白宫也用的博客框架——Wordpress</title>
      <link href="/archives/docker-compose-install-wordpress/"/>
      <url>/archives/docker-compose-install-wordpress/</url>
      
        <content type="html"><![CDATA[<h2 id="更新（不用redis的可以跳过）"><a href="#更新（不用redis的可以跳过）" class="headerlink" title="更新（不用redis的可以跳过）"></a>更新（不用redis的可以跳过）</h2><p>应小伙伴要求，更新一般redis的yaml文件</p><p>默认放在<code>/root/data/docker_data/wordpress</code>文件夹下。</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.0&#x27;</span></span><br><span class="line"> </span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">db:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mysql:8.0</span> <span class="comment"># 使用mysql镜像，不建议修改版本号，后续如果要升级，千万记得备份数据库</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">wordpress-db</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">--max-binlog-size=200M</span> <span class="string">--expire-logs-days=2</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">MYSQL_ROOT_PASSWORD:</span> <span class="string">rootpassword</span> <span class="comment"># 这里是上面的root密码</span></span><br><span class="line">      <span class="attr">MYSQL_DATABASE:</span> <span class="string">wordpress</span></span><br><span class="line">      <span class="attr">MYSQL_USER:</span> <span class="string">wordpress</span></span><br><span class="line">      <span class="attr">MYSQL_PASSWORD:</span> <span class="string">rootpassword</span> <span class="comment"># 这里是原来的密码</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;./db:/var/lib/mysql&#x27;</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">default</span></span><br><span class="line"> </span><br><span class="line">  <span class="attr">app:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">wordpress:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">wordpress-app</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8080</span><span class="string">:80</span>  <span class="comment"># 按需修改,左边的8080可以改成服务器上没有用过的端口</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">WORDPRESS_DB_HOST:</span> <span class="string">db</span></span><br><span class="line">      <span class="attr">WORDPRESS_DB_NAME:</span> <span class="string">wordpress</span></span><br><span class="line">      <span class="attr">WORDPRESS_DB_USER:</span> <span class="string">wordpress</span></span><br><span class="line">      <span class="attr">WORDPRESS_DB_PASSWORD:</span> <span class="string">rootp1ass2wo3rd</span> <span class="comment"># 按需修改</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;./app:/var/www/html&#x27;</span></span><br><span class="line">    <span class="attr">links:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">db:db</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">db</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">default</span></span><br><span class="line"> </span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis:alpine</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">wordpress-redis</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./redis-data:/data</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">default</span></span><br><span class="line"> </span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">default:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">wordpress</span></span><br></pre></td></tr></table></figure><p>redis设置</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/wordpress/app/wp-config.php</span><br></pre></td></tr></table></figure><p>找到<code>DB_COLLATE</code> 在<code>define( &#39;DB_COLLATE&#39;, &#39;XXX...&#39;);</code> 后添加如下内容：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** Redis Object Cache */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;WP_REDIS_HOST&#x27;</span>, <span class="string">&#x27;wordpress-redis&#x27;</span>); </span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;WP_REDIS_DATABASE&#x27;</span>, <span class="string">&#x27;0&#x27;</span>);</span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2023/08/09/nolsrz-0.webp" alt="image-20230809143203592" style="zoom:33%;" /><p>重启docker之后，在后台安装<code>Redis Object Cache</code>插件,直接点击<code>Enable Object Cache</code>即可。</p><img src="https://img.laoda.de/i/2023/08/09/nr37wn-0.webp" alt="image-20230809143621537" style="zoom:33%;" /><p>右键查看网页源代码：</p><p><img src="https://img.laoda.de/i/2023/08/09/nqe8fk-0.webp" alt="image-20230809143504003"></p><p>最后面出现这个说明搞定了！</p><img src="https://img.laoda.de/i/2023/08/09/nrpiez-0.webp" alt="image-20230809143725049" style="zoom:33%;" /><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">Performance optimized by Redis Object Cache. Learn more: https://wprediscache.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Retrieved 3855 objects (507 KB) from Redis using Predis (v2.1.2).</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><p>上传文件大小限制：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/wordpress/app/</span><br><span class="line"></span><br><span class="line">vim php.ini</span><br></pre></td></tr></table></figure><p>填入下面内容：</p><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">upload_max_filesize</span> = <span class="number">512</span>M</span><br><span class="line"><span class="attr">post_max_size</span> = <span class="number">512</span>M</span><br><span class="line"><span class="attr">memory_limit</span> = <span class="number">1024</span>M</span><br></pre></td></tr></table></figure><p>翻译过来就是</p><figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">最大的文件上传:    512M</span><br><span class="line">最大的执行大小:    512M</span><br><span class="line">内存限制:    1G</span><br></pre></td></tr></table></figure><p>英文输入法下，按冒号+wq保存退出之后，修改一下<code>php.ini</code>的权限</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">chown</span> -R 33:33 php.ini</span><br></pre></td></tr></table></figure><p>然后重启一下Wordpress服务器就行啦：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/wordpress</span><br><span class="line"></span><br><span class="line">docker-compose up -d  <span class="comment"># 或者 docker compose up -d</span></span><br></pre></td></tr></table></figure><p>这下上传主题或者文件啥的就没问题了。</p><h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1. 介绍"></a>1. 介绍</h2><p>美国白宫的官网也是Wordpress搭建的，含金量还可以的。</p><p><a href="https://blog.laoda.de/archives/blog-choosing">Hexo还是Hugo？Typecho还是Wordpress？读完这篇或许你就有答案了！</a></p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p>GitHub原项目地址：<a href="https://github.com/WordPress/WordPress">https://github.com/WordPress/WordPress</a>（16.2k star）</p><p><img src="https://img.laoda.de/i/2022/05/14/fcpfbh-0.webp" alt="image-20220514092831188"></p><p><img src="https://img.laoda.de/i/2022/05/14/fcjh6d-0.webp" alt="image-20220514092801802"></p><p>（哈哈，Halo居然比Wordpress高 &#x3D; &#x3D;）</p><p>Halo搭建教程：<a href="https://blog.laoda.de/archives/docker-install-halo">【好玩儿的Docker项目】10分钟搭建一个咕咕目前用的博客——Halo</a></p><h2 id="3-搭建环境"><a href="#3-搭建环境" class="headerlink" title="3. 搭建环境"></a>3. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器24元&#x2F;月VPS一台</del>展示用的服务器是<a href="https://netcup-sonderangebote.de/">Netcup</a>特价款，本期搭建用的是<a href="https://loll.cc/vultr">Vultr</a>的服务器，按小时计费，可随时销毁（最好是选<strong>非大陆的服务器</strong>）（<a href="https://loll.cc/tx">腾讯轻量购买链接</a>）<a href="https://loll.cc/hz">Hetzner注册免费得25欧试用金有效期一个月</a></li><li>系统：Debian 10（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本</a> 非必需DD用原来的系统也OK）</li><li>域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>安装好Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需】提前安装好宝塔面板海外版本aapanel，并安装好Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程采用】安装好Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><h2 id="4-搭建视频"><a href="#4-搭建视频" class="headerlink" title="4. 搭建视频"></a>4. 搭建视频</h2><p>YouTube：<a href="https://youtu.be/q43owHn9OsU">https://youtu.be/q43owHn9OsU</a></p><blockquote><p>00:00 唠嗑<br>01:10 Wordpress搭建环境介绍<br>01:40 开始搭建Wordpress<br>03:43 域名解析及反向代理<br>05:00 Wordpress访问安装页面（解决小问题）<br>08:09 Wordpress后台配置<br>10:40 安装Wordpress主题（解决上传文件大小问题）</p></blockquote><p>哔哩哔哩：<a href="https://www.bilibili.com/BV1Mu411671f">https://www.bilibili.com/BV1Mu411671f</a></p><h2 id="5-搭建方式"><a href="#5-搭建方式" class="headerlink" title="5. 搭建方式"></a>5. 搭建方式</h2><h3 id="5-1-搭建"><a href="#5-1-搭建" class="headerlink" title="5.1 搭建"></a>5.1 搭建</h3><p>服务器初始设置，参考</p><p><a href="https://blog.laoda.de/archives/vps-script"><strong>新买了一台服务器“必须”要做的6件小事</strong></a></p><p><a href="https://blog.laoda.de/archives/hello-docker">【Docker系列】不用宝塔面板，小白一样可以玩转VPS服务器！</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i <span class="comment"># 切换到root用户</span></span><br><span class="line"></span><br><span class="line">apt update -y  <span class="comment"># 升级packages</span></span><br><span class="line"></span><br><span class="line">apt install wget curl sudo vim git  <span class="comment"># Debian系统比较干净，安装常用的软件</span></span><br></pre></td></tr></table></figure><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/wordpress</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/wordpress</span><br><span class="line"></span><br><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><p><code>docker-compose.yml</code>来源<a href="https://hub.docker.com/_/wordpress">官方仓库</a>，内容如下：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&#x27;3.1&#x27;</span></span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line"></span><br><span class="line">  wordpress:</span><br><span class="line">    image: wordpress</span><br><span class="line">    restart: always</span><br><span class="line">    ports:</span><br><span class="line">      - 8080:80</span><br><span class="line">    environment:</span><br><span class="line">      WORDPRESS_DB_HOST: db</span><br><span class="line">      WORDPRESS_DB_USER: exampleuser</span><br><span class="line">      WORDPRESS_DB_PASSWORD: examplepass</span><br><span class="line">      WORDPRESS_DB_NAME: exampledb</span><br><span class="line">    volumes:</span><br><span class="line">      - /root/data/docker_data/wordpress/data:/var/www/html</span><br><span class="line"></span><br><span class="line">  db:</span><br><span class="line">    image: mysql:5.7</span><br><span class="line">    restart: always</span><br><span class="line">    environment:</span><br><span class="line">      MYSQL_DATABASE: exampledb</span><br><span class="line">      MYSQL_USER: exampleuser</span><br><span class="line">      MYSQL_PASSWORD: examplepass</span><br><span class="line">      MYSQL_RANDOM_ROOT_PASSWORD: <span class="string">&#x27;1&#x27;</span></span><br><span class="line">    volumes:</span><br><span class="line">      - /root/data/docker_data/wordpress/db:/var/lib/mysql</span><br><span class="line"></span><br><span class="line"><span class="comment">#volumes:</span></span><br><span class="line"><span class="comment">#  wordpress:</span></span><br><span class="line"><span class="comment">#  db:</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：VPS的内存最好大于1G，可以再设置1G的SWAP。</p></blockquote><p>设置SWAP可以用脚本:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O box.sh https://raw.githubusercontent.com/BlueSkyXN/SKY-BOX/main/box.sh &amp;&amp; <span class="built_in">chmod</span> +x box.sh &amp;&amp; clear &amp;&amp; ./box.sh</span><br></pre></td></tr></table></figure><p>没问题的话，<code>ctrl+x</code>退出，按<code>y</code>保存，<code>enter</code>确认。</p><p>查看端口是否被占用，输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:8080  <span class="comment">#查看8080端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用，可以运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>访问：<code>http:服务ip:8080</code> 即可。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的IP。</p><p>2、遇到访问不了的情况，请在宝塔面板的防火墙和服务商的后台防火墙里打开对应端口。</p></blockquote><h3 id="5-2-更新"><a href="#5-2-更新" class="headerlink" title="5.2 更新"></a>5.2 更新</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/wordpress  <span class="comment"># 进入docker-compose所在的文件夹</span></span><br><span class="line"></span><br><span class="line">docker-compose pull    <span class="comment"># 拉取最新的镜像</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d   <span class="comment"># 重新更新当前镜像</span></span><br></pre></td></tr></table></figure><p>利用Docker-compose搭建的应用，更新非常容易～</p><h3 id="5-3-卸载"><a href="#5-3-卸载" class="headerlink" title="5.3 卸载"></a>5.3 卸载</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i  <span class="comment"># 切换到root</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/wordpress  <span class="comment"># 进入docker-compose所在的文件夹</span></span><br><span class="line"></span><br><span class="line">docker-compose down    <span class="comment"># 停止容器，此时不会删除映射到本地的数据</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/wordpress  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>利用Docker-compose搭建的应用，删除也非常容易～</p><h2 id="6-反向代理（必须）"><a href="#6-反向代理（必须）" class="headerlink" title="6. 反向代理（必须）"></a>6. 反向代理（必须）</h2><blockquote><p><strong>此项目和别的项目不同，必须采用https形式，否则浏览器无法加密，无法使用。</strong></p></blockquote><h3 id="6-1-利用Nginx-Proxy-Manager"><a href="#6-1-利用Nginx-Proxy-Manager" class="headerlink" title="6.1 利用Nginx Proxy Manager"></a>6.1 利用Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p>之后，登陆Nginx Proxy Manager（不会的看这个：<strong>安装Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称NPM）会用到<code>80</code>、<code>443</code>端口，所以本机不能占用（比如原来就有Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom: 33%;" /><img src="https://img.laoda.de/i/2022/05/14/h3a8q0-0.webp" alt="image-20220514103342515" style="zoom: 33%;" /><blockquote><p> 注意填写对应的<code>域名</code>、<code>IP</code>和<code>端口</code>，按文章来的话，应该是<code>8080</code></p></blockquote><p><strong>IP填写：</strong></p><p>如果<code>Nginx Proxy Manager</code>和<code>Wordpress</code>在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的Docker容器内部IP。</p><p>否则直接填<code>cryptgeon所在的服务器IP</code>就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom: 33%;" /><p>再次打开，勾选这些：</p><img src="https://img.laoda.de/i/2022/05/14/h3q94q-0.webp" alt="image-20220514103416636" style="zoom:33%;" /><p>然后就可以用域名来安装访问了。</p><h2 id="7-使用教程"><a href="#7-使用教程" class="headerlink" title="7. 使用教程"></a>7. 使用教程</h2><h4 id="7-1-出现上传的文件尺寸超过php-ini中定义的upload-max-filesize值"><a href="#7-1-出现上传的文件尺寸超过php-ini中定义的upload-max-filesize值" class="headerlink" title="7.1 出现上传的文件尺寸超过php.ini中定义的upload_max_filesize值"></a>7.1 出现上传的文件尺寸超过<code>php.ini</code>中定义的<code>upload_max_filesize</code>值</h4><p>默认php设置的上传文件大小为2M，我们需要调整一下。参考：<a href="https://github.com/docker-library/wordpress/issues/375">https://github.com/docker-library/wordpress/issues/375</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/wordpress</span><br><span class="line"></span><br><span class="line">nano uploads.ini</span><br></pre></td></tr></table></figure><p>输入下面的内容：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">file_uploads = On</span><br><span class="line">upload_max_filesize = 256M    <span class="comment">#可以自己设置大小</span></span><br><span class="line">post_max_size = 256M  <span class="comment">#可以自己设置大小</span></span><br></pre></td></tr></table></figure><p><code>ctrl+x</code>，<code>y</code>，<code>enter</code> 确认。</p><p>修改<code>docker-compose</code>文件，<code>volume</code>下面加入一句：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">- ./uploads.ini:/usr/local/etc/php/conf.d/uploads.ini</span><br></pre></td></tr></table></figure><p>完整的配置文件：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&#x27;3.1&#x27;</span></span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line"></span><br><span class="line">  wordpress:</span><br><span class="line">    image: wordpress</span><br><span class="line">    restart: always</span><br><span class="line">    ports:</span><br><span class="line">      - 8080:80</span><br><span class="line">    environment:</span><br><span class="line">      WORDPRESS_DB_HOST: db</span><br><span class="line">      WORDPRESS_DB_USER: exampleuser</span><br><span class="line">      WORDPRESS_DB_PASSWORD: examplepass</span><br><span class="line">      WORDPRESS_DB_NAME: exampledb</span><br><span class="line">    volumes:</span><br><span class="line">      - /root/data/docker_data/wordpress/data:/var/www/html</span><br><span class="line">      - /root/data/docker_data/wordpress/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini</span><br><span class="line"></span><br><span class="line">  db:</span><br><span class="line">    image: mysql:5.7</span><br><span class="line">    restart: always</span><br><span class="line">    environment:</span><br><span class="line">      MYSQL_DATABASE: exampledb</span><br><span class="line">      MYSQL_USER: exampleuser</span><br><span class="line">      MYSQL_PASSWORD: examplepass</span><br><span class="line">      MYSQL_RANDOM_ROOT_PASSWORD: <span class="string">&#x27;1&#x27;</span></span><br><span class="line">    volumes:</span><br><span class="line">      - /root/data/docker_data/wordpress/db:/var/lib/mysql</span><br><span class="line"></span><br><span class="line"><span class="comment">#volumes:</span></span><br><span class="line"><span class="comment">#  wordpress:</span></span><br><span class="line"><span class="comment">#  db:</span></span><br></pre></td></tr></table></figure><p>重新启动容器：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>查看：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> 你的wp容器<span class="built_in">id</span> php -i | grep upload</span><br></pre></td></tr></table></figure><h4 id="7-2-出现“因为我们不能复制一些文件，升级未被安装，这通常是因为存在不一致的文件权限”的错误"><a href="#7-2-出现“因为我们不能复制一些文件，升级未被安装，这通常是因为存在不一致的文件权限”的错误" class="headerlink" title="7.2 出现“因为我们不能复制一些文件，升级未被安装，这通常是因为存在不一致的文件权限”的错误"></a>7.2 出现“因为我们不能复制一些文件，升级未被安装，这通常是因为存在不一致的文件权限”的错误</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/wordpress/data</span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> -R 777 wp-content</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><h4 id="7-3-上传主题，出现“您点击的链接已过期”"><a href="#7-3-上传主题，出现“您点击的链接已过期”" class="headerlink" title="7.3 上传主题，出现“您点击的链接已过期”"></a>7.3 上传主题，出现“您点击的链接已过期”</h4><p>解决方法：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/wordpress/data</span><br><span class="line"></span><br><span class="line">vim .htaccess</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在<code>.htaccess</code>最后面加上：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">php_value max_execution_time 300</span><br><span class="line">php_value upload_max_filesize 256M</span><br><span class="line">php_value post_max_size 256M</span><br><span class="line">php_value memory_limit 128M</span><br><span class="line">php_value max_input_vars 5000</span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/10/12/p1grzz-2.webp"></p><p>这样就能成功上传了～</p><p><img src="https://img.laoda.de/i/2022/10/12/p1m9ww-2.webp"></p><h2 id="8-结尾"><a href="#8-结尾" class="headerlink" title="8. 结尾"></a>8. 结尾</h2><p>祝大家用得开心，有问题可以去GitHub提<a href="https://github.com/WordPress/WordPress">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，有能力给项目做贡献的同学，也欢迎积极<a href="https://github.com/WordPress/WordPress">加入到项目</a>中来，贡献自己的一份力量！</p><h2 id="9-参考资料"><a href="#9-参考资料" class="headerlink" title="9. 参考资料"></a>9. 参考资料</h2><p><a href="https://github.com/WordPress/WordPress">https://github.com/WordPress/WordPress</a></p><p><a href="https://hub.docker.com/_/wordpress">https://hub.docker.com/_/wordpress</a></p><p><a href="https://github.com/docker-library/wordpress/issues/375">https://github.com/docker-library/wordpress/issues/375</a></p><p><a href="https://blognas.hwb0307.com/linux/docker/238">https://blognas.hwb0307.com/linux/docker/238</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客搭建 </tag>
            
            <tag> Typecho </tag>
            
            <tag> Wordpress </tag>
            
            <tag> Halo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩儿的Docker项目】10分钟搭建一个Typecho博客｜太破口！念念不忘，必有回响！</title>
      <link href="/archives/docker-compose-install-typecho/"/>
      <url>/archives/docker-compose-install-typecho/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.laoda.de/i/2022/05/07/za93c1-0.webp" alt="image-20220507213351069"></p><h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1. 介绍"></a>1. 介绍</h2><p>Typecho时隔多年，终于在今年愚人节更新了新版本，之前咕咕最早也用过Typecho，非常轻量的一款博客，整个源文件就<code>608K</code></p><img src="https://img.laoda.de/i/2022/05/07/zbumtg-0.webp" alt="image-20220507213620714" style="zoom:50%;" /><p>正常来说，这个是不适合用Docker来部署的，因为会把一个轻量的东西弄得很“重”，但是，谁叫我们懒呢，用Docker部署，维护和搬家方便呀，而且部署也简单，所以今天就索性来折腾一下吧。</p><p>宝塔搭建的详情见<a href="https://blog.laoda.de/archives/typecho-building">【从0开始搭建个人博客】自建服务器，搭建一个typecho博客</a></p><blockquote><p><strong>推荐阅读：</strong><a href="https://blog.laoda.de/archives/blog-choosing.html">Hexo还是Hugo？Typecho还是Wordpress？读完这篇或许你就有答案了！</a></p></blockquote><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p>见<a href="https://blog.laoda.de/archives/typecho-building">【从0开始搭建个人博客】自建服务器，搭建一个typecho博客</a></p><h2 id="3-搭建环境"><a href="#3-搭建环境" class="headerlink" title="3. 搭建环境"></a>3. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器24元&#x2F;月VPS一台</del>展示用的服务器是<a href="https://netcup-sonderangebote.de/">Netcup</a>特价款，本期搭建用的是<a href="https://loll.cc/vultr">Vultr</a>的服务器，按小时计费，可随时销毁（最好是选<strong>非大陆的服务器</strong>）（<a href="https://loll.cc/tx">腾讯轻量购买链接</a>）<a href="https://loll.cc/hz">Hetzner注册免费得25欧试用金有效期一个月</a></li><li>系统：Debian 10（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本</a> 非必需DD用原来的系统也OK）</li><li>域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>安装好Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需】提前安装好宝塔面板海外版本aapanel，并安装好Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程采用】安装好Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><h2 id="4-搭建视频"><a href="#4-搭建视频" class="headerlink" title="4. 搭建视频"></a>4. 搭建视频</h2><p>YouTube：<a href="https://youtu.be/OYSvwY-GHIQ">https://youtu.be/OYSvwY-GHIQ</a></p><blockquote><p>00:00 唠嗑<br>01:45 Typecho搭建环境介绍<br>03:08 开始搭建Typecho<br>03:41 先创建几个文件<br>07:28 下载Typecho源码<br>09:13 docker-compose文件<br>10:31 域名解析及反向代理<br>11:07 Typecho网页端安装配置<br>13:09 Typecho博客地址重写功能</p></blockquote><p>哔哩哔哩【高清版本可以点击去吐槽到B站观看】：<joe-bilibili bvid="BV1Au41167Dk"></joe-bilibili></p><h2 id="5-搭建方式"><a href="#5-搭建方式" class="headerlink" title="5. 搭建方式"></a>5. 搭建方式</h2><h3 id="5-1-搭建"><a href="#5-1-搭建" class="headerlink" title="5.1 搭建"></a>5.1 搭建</h3><p>服务器初始设置，参考</p><p><a href="https://blog.laoda.de/archives/vps-script"><strong>新买了一台服务器“必须”要做的6件小事</strong></a></p><p><a href="https://blog.laoda.de/archives/hello-docker">【Docker系列】不用宝塔面板，小白一样可以玩转VPS服务器！</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i <span class="comment"># 切换到root用户</span></span><br><span class="line"></span><br><span class="line">apt update -y  <span class="comment"># 升级packages</span></span><br><span class="line"></span><br><span class="line">apt install wget curl sudo vim git  <span class="comment"># Debian系统比较干净，安装常用的软件</span></span><br></pre></td></tr></table></figure><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/typecho</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/typecho</span><br></pre></td></tr></table></figure><p>先创建几个文件。</p><h4 id="5-1-1-mysql"><a href="#5-1-1-mysql" class="headerlink" title="5.1.1 mysql"></a>5.1.1 mysql</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/typecho</span><br><span class="line"></span><br><span class="line">nano mysql.env</span><br></pre></td></tr></table></figure><p>填入下面的内容：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">MYSQL_ROOT_PASSWORD=root_pass</span><br><span class="line">MYSQL_DATABASE=typecho</span><br><span class="line">MYSQL_USER=username</span><br><span class="line">MYSQL_PASSWORD=password</span><br></pre></td></tr></table></figure><h4 id="5-1-2-php-fpm"><a href="#5-1-2-php-fpm" class="headerlink" title="5.1.2 php-fpm"></a>5.1.2 php-fpm</h4><p>其中 php 目录为 <code>php-fpm</code> 的 Dockerfile，在官方镜像的基础上，添加了 <code>PDO_MYSQL</code>（如果使用 MySQL 作为 Typecho 的数据库，则需安装此扩展），并设置 <code>buffer</code> 为 <code>4kb</code>，即一个内存页。同时设置了时区为<code>RPC</code>，来源于issue: <a href="https://github.com/typecho/typecho/issues/1090">https://github.com/typecho/typecho/issues/1090</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/typecho</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> php</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> php</span><br><span class="line"></span><br><span class="line">nano Dockerfile</span><br></pre></td></tr></table></figure><p>输入下面的内容：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">FROM php:7.3.29-fpm</span><br><span class="line">RUN apt-get update \</span><br><span class="line">    &amp;&amp; docker-php-ext-install pdo_mysql \</span><br><span class="line">    &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;output_buffering = 4096&quot;</span> &gt; /usr/local/etc/php/conf.d/php.ini \</span><br><span class="line">    &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;date.timezone = PRC&quot;</span> &gt;&gt; /usr/local/etc/php/conf.d/php.ini</span><br></pre></td></tr></table></figure><h4 id="5-1-3-nginx"><a href="#5-1-3-nginx" class="headerlink" title="5.1.3 nginx"></a>5.1.3 nginx</h4><p>nginx 的配置要注意的是需要有<code>rewrite</code> 规则（后续typecho后台有一个地址重写功能），如果需要指定域名的话，需要写 <code>server_name</code> 字段。这里我并没有指定<code>443</code>端口，因为我们后面用到了反向代理。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/typecho</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> nginx</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> nginx</span><br><span class="line"></span><br><span class="line">nano default.conf</span><br></pre></td></tr></table></figure><p>输入下面的内容：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span> default_server;</span><br><span class="line">    <span class="attribute">root</span> /var/www/html;</span><br><span class="line">    <span class="attribute">index</span> index.php;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">access_log</span> /var/log/nginx/typecho_access.log main;</span><br><span class="line">    <span class="attribute">if</span> (!-e <span class="variable">$request_filename</span>) &#123;</span><br><span class="line">        <span class="attribute">rewrite</span><span class="regexp"> ^(.*)$</span> /index.php<span class="variable">$1</span> <span class="literal">last</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="section">location</span> / &#123;</span><br><span class="line">        <span class="attribute">index</span> index.html index.htm index.php;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">if</span> (!-e <span class="variable">$request_filename</span>) &#123;</span><br><span class="line">            <span class="attribute">rewrite</span> . /index.php <span class="literal">last</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="section">location</span> <span class="regexp">~ \.php(.*)$</span> &#123;</span><br><span class="line">        <span class="attribute">fastcgi_pass</span>   php:<span class="number">9000</span>;</span><br><span class="line">        <span class="attribute">fastcgi_index</span>  index.php;</span><br><span class="line">        <span class="attribute">fastcgi_param</span>  PATH_TRANSLATED <span class="variable">$document_root</span><span class="variable">$fastcgi_path_info</span>;</span><br><span class="line">        <span class="attribute">fastcgi_split_path_info</span> <span class="regexp"> ^((?U).+\.php)(/?.+)$</span>;</span><br><span class="line">        <span class="attribute">fastcgi_param</span>  PATH_INFO  <span class="variable">$fastcgi_path_info</span>;</span><br><span class="line">        <span class="attribute">fastcgi_param</span>  SCRIPT_NAME <span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">        <span class="attribute">fastcgi_param</span>  SCRIPT_FILENAME <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">        <span class="attribute">include</span>        fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下载源码：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/typecho/typecho</span><br><span class="line"></span><br><span class="line">wget https://github.com/typecho/typecho/releases/download/v1.2.0/typecho.zip</span><br><span class="line"></span><br><span class="line">apt install zip -y </span><br><span class="line"></span><br><span class="line">unzip typecho.zip</span><br></pre></td></tr></table></figure><p>创建<code>docker-compose</code>文件。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/typecho</span><br><span class="line"></span><br><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><p><code>docker-compose.yml</code>内容如下：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&quot;3&quot;</span></span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  nginx:</span><br><span class="line">    image: nginx</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">&quot;8223:80&quot;</span>    <span class="comment"># 左边可以改成任意没使用的端口</span></span><br><span class="line">    restart: always</span><br><span class="line">    environment:</span><br><span class="line">      - TZ=Asia/Shanghai</span><br><span class="line">    volumes:</span><br><span class="line">      - ./typecho:/var/www/html</span><br><span class="line">      - ./nginx:/etc/nginx/conf.d</span><br><span class="line">      - ./logs:/var/log/nginx</span><br><span class="line">    depends_on:</span><br><span class="line">      - php</span><br><span class="line">    networks:</span><br><span class="line">      - web</span><br><span class="line"></span><br><span class="line">  php:</span><br><span class="line">    build: php</span><br><span class="line">    restart: always</span><br><span class="line">    expose:</span><br><span class="line">      - <span class="string">&quot;9000&quot;</span>       <span class="comment"># 不暴露公网，故没有写9000:9000</span></span><br><span class="line">    volumes:</span><br><span class="line">      - ./typecho:/var/www/html</span><br><span class="line">    environment:</span><br><span class="line">      - TZ=Asia/Shanghai</span><br><span class="line">    depends_on:</span><br><span class="line">      - mysql</span><br><span class="line">    networks:</span><br><span class="line">      - web</span><br><span class="line"></span><br><span class="line">  mysql:</span><br><span class="line">    image: mysql:5.7</span><br><span class="line">    restart: always</span><br><span class="line">    environment:</span><br><span class="line">      - TZ=Asia/Shanghai</span><br><span class="line">    expose:</span><br><span class="line">      - <span class="string">&quot;3306&quot;</span>  <span class="comment"># 不暴露公网，故没有写3306:3306</span></span><br><span class="line">    volumes:</span><br><span class="line">      - ./mysql/data:/var/lib/mysql</span><br><span class="line">      - ./mysql/logs:/var/log/mysql</span><br><span class="line">      - ./mysql/conf:/etc/mysql/conf.d</span><br><span class="line">    env_file:</span><br><span class="line">      - mysql.env</span><br><span class="line">    networks:</span><br><span class="line">      - web</span><br><span class="line"></span><br><span class="line">networks:</span><br><span class="line">  web:</span><br></pre></td></tr></table></figure><blockquote><p>注意：如果VPS的内存比较小 ，推荐设置一下SWAP，一般为内存的1-1.5倍即可～</p></blockquote><p>设置SWAP可以用脚本:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O box.sh https://raw.githubusercontent.com/BlueSkyXN/SKY-BOX/main/box.sh &amp;&amp; <span class="built_in">chmod</span> +x box.sh &amp;&amp; clear &amp;&amp; ./box.sh</span><br></pre></td></tr></table></figure><p>没问题的话，<code>ctrl+x</code>退出，按<code>y</code>保存，<code>enter</code>确认。</p><p>查看端口是否被占用，输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:8223  <span class="comment">#查看8223端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用，可以运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>访问：<code>http:服务ip:8223</code> 即可。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的IP。</p><p>2、遇到访问不了的情况，请在宝塔面板的防火墙和服务商的后台防火墙里打开对应端口。</p></blockquote><h3 id="5-2-更新"><a href="#5-2-更新" class="headerlink" title="5.2 更新"></a>5.2 更新</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/typecho  <span class="comment"># 进入docker-compose所在的文件夹</span></span><br><span class="line"></span><br><span class="line">docker-compose pull    <span class="comment"># 拉取最新的镜像</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d   <span class="comment"># 重新更新当前镜像</span></span><br></pre></td></tr></table></figure><p>利用Docker-compose搭建的应用，更新非常容易～</p><h3 id="5-3-卸载"><a href="#5-3-卸载" class="headerlink" title="5.3 卸载"></a>5.3 卸载</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i  <span class="comment"># 切换到root</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/typecho <span class="comment"># 进入docker-compose所在的文件夹</span></span><br><span class="line"></span><br><span class="line">docker-compose down    <span class="comment"># 停止容器，此时不会删除映射到本地的数据</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/typecho  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>利用Docker-compose搭建的应用，删除也非常容易～</p><h2 id="6-反向代理"><a href="#6-反向代理" class="headerlink" title="6. 反向代理"></a>6. 反向代理</h2><h3 id="6-1-利用Nginx-Proxy-Manager"><a href="#6-1-利用Nginx-Proxy-Manager" class="headerlink" title="6.1 利用Nginx Proxy Manager"></a>6.1 利用Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p>之后，登陆Nginx Proxy Manager（不会的看这个：<strong>安装Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称NPM）会用到<code>80</code>、<code>443</code>端口，所以本机不能占用（比如原来就有Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom:50%;" /><img src="https://img.laoda.de/i/2022/05/07/z5h3el-0.webp" alt="image-20220507212548875" style="zoom:50%;" /><img src="https://img.laoda.de/i/2022/05/07/z5wbw0-0.webp" alt="image-20220507212620260" style="zoom:50%;" /><blockquote><p> 注意填写对应的<code>域名</code>、<code>IP</code>和<code>端口</code>，按文章来的话，应该是<code>8223</code></p></blockquote><p><strong>IP填写：</strong></p><p>如果Nginx Proxy Manager和reader在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的Docker容器内部IP。</p><p>否则直接填<code>docker所在的服务器IP</code>就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom:50%;" /><p>完成之后，记得再次打开这个，把Force SSL再勾选上（小BUG）</p><p>然后就可以用域名来安装访问了。</p><h2 id="7-使用教程"><a href="#7-使用教程" class="headerlink" title="7. 使用教程"></a>7. 使用教程</h2><p>安装看咕咕的视频。</p><p><img src="https://img.laoda.de/i/2022/05/13/z6ntu3-0.webp" alt="image-20220513212747473"></p><p><img src="https://img.laoda.de/i/2022/05/13/z6jcr6-0.webp" alt="image-20220513212726407"></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/typecho/typecho</span><br><span class="line"></span><br><span class="line">nano config.inc.php</span><br></pre></td></tr></table></figure><p>填入上面的内容，然后点击继续安装即可。</p><h3 id="7-1-地址重写功能"><a href="#7-1-地址重写功能" class="headerlink" title="7.1 地址重写功能"></a>7.1 地址重写功能</h3><p><img src="https://img.laoda.de/i/2022/05/07/yy5ted-0.webp" alt="image-20220507211319272"></p><h2 id="8-结尾"><a href="#8-结尾" class="headerlink" title="8. 结尾"></a>8. 结尾</h2><p>祝大家用得开心，有问题可以去GitHub提<a href="https://github.com/typecho/typecho">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，有能力给项目做贡献的同学，也欢迎积极<a href="https://github.com/typecho/typecho">加入到项目</a>中来，贡献自己的一份力量！</p><h2 id="9-参考资料"><a href="#9-参考资料" class="headerlink" title="9. 参考资料"></a>9. 参考资料</h2><p><a href="https://zhuanlan.zhihu.com/p/398776433">https://zhuanlan.zhihu.com/p/398776433</a></p><p><a href="https://saucer-man.com/operation_and_maintenance/607.html">https://saucer-man.com/operation_and_maintenance/607.html</a></p><p><a href="http://typecho.org/">http://typecho.org/</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客搭建 </tag>
            
            <tag> Typecho </tag>
            
            <tag> 个人博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩儿的Docker项目】10分钟搭建一个简单图床——Easyimage</title>
      <link href="/archives/docker-compose-install-easyimage/"/>
      <url>/archives/docker-compose-install-easyimage/</url>
      
        <content type="html"><![CDATA[<h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1. 介绍"></a>1. 介绍</h2><p>上期我们介绍了宝塔搭建，这俩天Easyimage的Docker镜像也做出来了，一起试试Docker搭建，一个docker-compose文件，一行命令搞定！</p><p>见<a href="https://blog.laoda.de/archives/aapanel-install-easyimage">【宝塔面板系列】10分钟搭建一个简单图床——EasyImage 简单到无需数据库！</a></p><h3 id="1-1-特点"><a href="#1-1-特点" class="headerlink" title="1.1 特点"></a>1.1 特点</h3><p>见<a href="https://blog.laoda.de/archives/aapanel-install-easyimage">【宝塔面板系列】10分钟搭建一个简单图床——EasyImage 简单到无需数据库！</a></p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p>GitHub原项目地址：<a href="https://github.com/icret/EasyImages2.0">https://github.com/icret/EasyImages2.0</a></p><p>公益图床地址：<a href="https://img.gugu.ovh/">https://img.gugu.ovh/</a></p><p>Docker镜像：<a href="https://hub.docker.com/r/ddsderek/easyimage">https://hub.docker.com/r/ddsderek/easyimage</a></p><p>见<a href="https://blog.laoda.de/archives/aapanel-install-easyimage">【宝塔面板系列】10分钟搭建一个简单图床——EasyImage 简单到无需数据库！</a></p><h2 id="3-搭建环境"><a href="#3-搭建环境" class="headerlink" title="3. 搭建环境"></a>3. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器24元&#x2F;月VPS一台</del>展示用的服务器是<a href="https://netcup-sonderangebote.de/">Netcup</a>特价款，本期搭建用的是<a href="https://loll.cc/vultr">Vultr</a>的服务器，按小时计费，可随时销毁（最好是选<strong>非大陆的服务器</strong>）（<a href="https://loll.cc/tx">腾讯轻量购买链接</a>）<a href="https://loll.cc/hz">Hetzner注册免费得25欧试用金有效期一个月</a></li><li>系统：Debian 10（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本</a> 非必需DD用原来的系统也OK）</li><li>域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>安装好Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需】提前安装好宝塔面板海外版本aapanel，并安装好Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程采用】安装好Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><h2 id="4-搭建视频"><a href="#4-搭建视频" class="headerlink" title="4. 搭建视频"></a>4. 搭建视频</h2><p>YouTube：<a href="https://youtu.be/jUQ_wbgXQjU">https://youtu.be/jUQ_wbgXQjU</a></p><p>哔哩哔哩【高清版本可以点击去吐槽到B站观看】：<joe-bilibili bvid="BV1vv4y1P7fd"></joe-bilibili></p><h2 id="5-搭建方式"><a href="#5-搭建方式" class="headerlink" title="5. 搭建方式"></a>5. 搭建方式</h2><h3 id="5-1-搭建"><a href="#5-1-搭建" class="headerlink" title="5.1 搭建"></a>5.1 搭建</h3><p>服务器初始设置，参考</p><p><a href="https://blog.laoda.de/archives/vps-script"><strong>新买了一台服务器“必须”要做的6件小事</strong></a></p><p><a href="https://blog.laoda.de/archives/hello-docker">【Docker系列】不用宝塔面板，小白一样可以玩转VPS服务器！</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i <span class="comment"># 切换到root用户</span></span><br><span class="line"></span><br><span class="line">apt update -y  <span class="comment"># 升级packages</span></span><br><span class="line"></span><br><span class="line">apt install wget curl sudo vim git  <span class="comment"># Debian系统比较干净，安装常用的软件</span></span><br></pre></td></tr></table></figure><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/easyimage</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/easyimage</span><br><span class="line"></span><br><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><p><code>docker-compose.yml</code>里面的镜像来源<a href="https://hub.docker.com/r/ddsderek/easyimage">这里</a>，内容如下：</p><p>amd64架构（一般VPS用这个就行）：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">easyimage:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">ddsderek/easyimage:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">easyimage</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;8080:80&#x27;</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PUID=1000</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PGID=1000</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;/root/data/docker_data/easyimage/config:/app/web/config&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;/root/data/docker_data/easyimage/i:/app/web/i&#x27;</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br></pre></td></tr></table></figure><p>linux&#x2F;arm&#x2F;v7 | linux&#x2F;arm64&#x2F;v8 | linux&#x2F;s390x | linux&#x2F;ppc64le架构：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">easyimage:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">ddsderek/easyimage:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">easyimage</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;8080:80&#x27;</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PUID=1000</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PGID=1000</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;/root/data/docker_data/easyimage/config:/app/web/config&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;/root/data/docker_data/easyimage/i:/app/web/i&#x27;</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：VPS的内存最好大于1G，可以再设置1G的SWAP，本项目内容存储在内存中～</p></blockquote><p>设置SWAP可以用脚本:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O box.sh https://raw.githubusercontent.com/BlueSkyXN/SKY-BOX/main/box.sh &amp;&amp; <span class="built_in">chmod</span> +x box.sh &amp;&amp; clear &amp;&amp; ./box.sh</span><br></pre></td></tr></table></figure><p>没问题的话，<code>ctrl+x</code>退出，按<code>y</code>保存，<code>enter</code>确认。</p><p>查看端口是否被占用，输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:8080  <span class="comment">#查看8080端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用，可以运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>访问：<code>http:服务ip:8080</code> 即可。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的IP。</p><p>2、遇到访问不了的情况，请在宝塔面板的防火墙和服务商的后台防火墙里打开对应端口。</p></blockquote><h3 id="5-2-更新"><a href="#5-2-更新" class="headerlink" title="5.2 更新"></a>5.2 更新</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/easyimage  <span class="comment"># 进入docker-compose所在的文件夹</span></span><br><span class="line"></span><br><span class="line">docker-compose pull    <span class="comment"># 拉取最新的镜像</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d   <span class="comment"># 重新更新当前镜像</span></span><br><span class="line"></span><br><span class="line">docker <span class="built_in">exec</span> -it easyimage <span class="built_in">rm</span> -rf /app/web/install <span class="comment">#因为更新后镜像自带install目录，所以要删除</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>利用Docker-compose搭建的应用，更新非常容易～</p><h3 id="5-3-卸载"><a href="#5-3-卸载" class="headerlink" title="5.3 卸载"></a>5.3 卸载</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i  <span class="comment"># 切换到root</span></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/easyimage  <span class="comment"># 进入docker-compose所在的文件夹</span></span><br><span class="line">docker-compose down    <span class="comment"># 停止容器，此时不会删除映射到本地的数据</span></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/easyimage  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>利用Docker-compose搭建的应用，删除也非常容易～</p><h2 id="6-反向代理"><a href="#6-反向代理" class="headerlink" title="6. 反向代理"></a>6. 反向代理</h2><h3 id="6-1-利用Nginx-Proxy-Manager"><a href="#6-1-利用Nginx-Proxy-Manager" class="headerlink" title="6.1 利用Nginx Proxy Manager"></a>6.1 利用Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p>之后，登陆Nginx Proxy Manager（不会的看这个：<strong>安装Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称NPM）会用到<code>80</code>、<code>443</code>端口，所以本机不能占用（比如原来就有Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom:50%;" /><img src="https://img.laoda.de/i/2022/05/08/sys5m6-0.webp" alt="image-20220508175145390" style="zoom:50%;" /><blockquote><p> 注意填写对应的<code>域名</code>、<code>IP</code>和<code>端口</code>，按文章来的话，应该是<code>8080</code></p></blockquote><p><strong>IP填写：</strong></p><p>如果Nginx Proxy Manager和reader在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的Docker容器内部IP。</p><p>否则直接填<code>easyimage</code>所在的服务器IP就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom:50%;" /><p>再次打开，勾选这些：</p><img src="https://img.laoda.de/i/2022/05/08/sz9fo3-0.webp" alt="image-20220508175225684" style="zoom:50%;" /><p>之后修改<code>/root/data/docker_data/easyimage/config/config.php</code>里的内容，把<code>domain</code>和<code>imgurl</code>分别改成自己的域名。（如果你用Nginx或者宝塔做反向代理，也记得在这边修改，否则会出现奇怪的错误 &#x3D; &#x3D;）</p><p><img src="https://img.laoda.de/i/2022/05/08/t0l7wa-0.webp" alt="image-20220508175448378"></p><p>然后就可以用域名来安装访问了。</p><h2 id="7-使用教程"><a href="#7-使用教程" class="headerlink" title="7. 使用教程"></a>7. 使用教程</h2><p>看咕咕的视频，或者自己研究，看<a href="https://www.kancloud.cn/easyimage/easyimage/2625222">文档</a></p><h2 id="8-结尾"><a href="#8-结尾" class="headerlink" title="8. 结尾"></a>8. 结尾</h2><p>祝大家用得开心，有问题可以去GitHub提<a href="https://github.com/icret/EasyImages2.0/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，有能力给项目做贡献的同学，也欢迎积极<a href="https://github.com/icret/EasyImages2.0">加入到项目</a>中来，贡献自己的一份力量！</p><h2 id="9-参考资料"><a href="#9-参考资料" class="headerlink" title="9. 参考资料"></a>9. 参考资料</h2><p><a href="https://github.com/icret/EasyImages2.0/issues">https://github.com/icret/EasyImages2.0/issues</a></p><p><a href="https://www.kancloud.cn/easyimage/easyimage/2625229">https://www.kancloud.cn/easyimage/easyimage/2625229</a></p><h2 id="10-感谢"><a href="#10-感谢" class="headerlink" title="10. 感谢"></a>10. 感谢</h2><p>感谢<a href="https://blog.ddsrem.gq/">@Derek</a> 制作了Docker镜像，并一起调试了反向代理的错误。</p><p>感谢<a href="https://blog.png.cm/">@大官人</a>制作了Easyimage，让我可以方便使用WebP。</p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图床 </tag>
            
            <tag> easyimage </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩儿的Docker项目】10分钟搭建一个自己的短链接服务——YOURLS</title>
      <link href="/archives/docker-compose-install-yourls/"/>
      <url>/archives/docker-compose-install-yourls/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.laoda.de/i/2022/05/07/uo5eqc-0.svg" alt="YOURLS"></p><h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1. 介绍"></a>1. 介绍</h2><p>YOURLS是基于PHP的，一个可以让你在自己的服务器上运行的URL缩短服务。（已经有近10年的历史了！）</p><p>利用它，我们可以完全控制自己的数据，其中包括详细的统计、分析、还可以安装一些插件。</p><p>免费！开源！</p><p>见<a href="https://blog.laoda.de/archives/yourls-building">【服务器能干什么】搭建一个短网址平台，可以查看数据详情！</a></p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p>见<a href="https://blog.laoda.de/archives/yourls-building">【服务器能干什么】搭建一个短网址平台，可以查看数据详情！</a></p><h2 id="3-搭建环境"><a href="#3-搭建环境" class="headerlink" title="3. 搭建环境"></a>3. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器24元&#x2F;月VPS一台</del>展示用的服务器是<a href="https://netcup-sonderangebote.de/">Netcup</a>特价款，本期搭建用的是<a href="https://loll.cc/vultr">Vultr</a>的服务器，按小时计费，可随时销毁（最好是选<strong>非大陆的服务器</strong>）（<a href="https://loll.cc/tx">腾讯轻量购买链接</a>）<a href="https://loll.cc/hz">Hetzner注册免费得25欧试用金有效期一个月</a></li><li>系统：Debian 10（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本</a> 非必需DD用原来的系统也OK）</li><li>域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>安装好Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需】提前安装好宝塔面板海外版本aapanel，并安装好Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程采用】安装好Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><h2 id="4-搭建视频"><a href="#4-搭建视频" class="headerlink" title="4. 搭建视频"></a>4. 搭建视频</h2><p>YouTube：<a href="https://youtu.be/pz3XZG_QZ-U">https://youtu.be/pz3XZG_QZ-U</a></p><p>哔哩哔哩【高清版本可以点击去吐槽到B站观看】：<joe-bilibili bvid="BV1DT4y167oY"></joe-bilibili></p><h2 id="5-搭建方式"><a href="#5-搭建方式" class="headerlink" title="5. 搭建方式"></a>5. 搭建方式</h2><h3 id="5-1-搭建"><a href="#5-1-搭建" class="headerlink" title="5.1 搭建"></a>5.1 搭建</h3><p>服务器初始设置，参考</p><p><a href="https://blog.laoda.de/archives/vps-script"><strong>新买了一台服务器“必须”要做的6件小事</strong></a></p><p><a href="https://blog.laoda.de/archives/hello-docker">【Docker系列】不用宝塔面板，小白一样可以玩转VPS服务器！</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i <span class="comment"># 切换到root用户</span></span><br><span class="line"></span><br><span class="line">apt update -y  <span class="comment"># 升级packages</span></span><br><span class="line"></span><br><span class="line">apt install wget curl sudo vim git  <span class="comment"># Debian系统比较干净，安装常用的软件</span></span><br></pre></td></tr></table></figure><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/yourls</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/yourls</span><br><span class="line"></span><br><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><p><code>docker-compose.yml</code>中的镜像来源<a href="https://hub.docker.com/_/yourls?tab=description">官方仓库</a>，内容如下：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3.5&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">mysql:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mysql:5.7.22</span>              <span class="comment"># 如果遇到不正确的数据库配置，或无法连接到数据库PDOException: SQLSTATE[HY000] [1045] 用户&#x27;yourls&#x27;@&#x27;yourls_service.yourls_default&#x27;的访问被拒绝（使用密码：是）   可以把5.7.22 改为 5.7</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_ROOT_PASSWORD=my-secret-pw</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_DATABASE=yourls</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_USER=yourls</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_PASSWORD=yourls</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./mysql/db/:/var/lib/mysql</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./mysql/conf/:/etc/mysql/conf.d</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">mysql</span></span><br><span class="line">  </span><br><span class="line">  <span class="attr">yourls:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">yourls</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8200:80&quot;</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">YOURLS_DB_HOST:</span> <span class="string">mysql</span></span><br><span class="line">      <span class="attr">YOURLS_DB_USER:</span> <span class="string">yourls</span></span><br><span class="line">      <span class="attr">YOURLS_DB_PASS:</span> <span class="string">yourls</span></span><br><span class="line">      <span class="attr">YOURLS_DB_NAME:</span> <span class="string">yourls</span></span><br><span class="line">      <span class="attr">YOURLS_USER:</span> <span class="string">admin</span>      <span class="comment"># 自己起一个名字</span></span><br><span class="line">      <span class="attr">YOURLS_PASS:</span> <span class="string">admin</span>      <span class="comment"># 自己换一个登陆密码</span></span><br><span class="line">      <span class="attr">YOURLS_SITE:</span> <span class="string">https://gao.ee</span>  <span class="comment"># 换成你自己的域名</span></span><br><span class="line">      <span class="attr">YOURLS_HOURS_OFFSET:</span> <span class="number">8</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./yourls_data/:/var/www/html</span>   </span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">yourls_service</span></span><br><span class="line">    <span class="attr">links:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mysql:mysql</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：如果VPS的内存比较小 ，推荐设置一下SWAP，一般为内存的1-1.5倍即可～</p></blockquote><p>设置SWAP可以用脚本:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O box.sh https://raw.githubusercontent.com/BlueSkyXN/SKY-BOX/main/box.sh &amp;&amp; <span class="built_in">chmod</span> +x box.sh &amp;&amp; clear &amp;&amp; ./box.sh</span><br></pre></td></tr></table></figure><p>没问题的话，<code>ctrl+x</code>退出，按<code>y</code>保存，<code>enter</code>确认。</p><p>查看端口是否被占用，输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:8200  <span class="comment">#查看8200端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用，可以运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>访问：<code>http:服务ip:8200</code> 即可。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的IP。</p><p>2、遇到访问不了的情况，请在宝塔面板的防火墙和服务商的后台防火墙里打开对应端口。</p></blockquote><h3 id="5-2-更新"><a href="#5-2-更新" class="headerlink" title="5.2 更新"></a>5.2 更新</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/yourls  <span class="comment"># 进入docker-compose所在的文件夹</span></span><br><span class="line">docker-compose pull    <span class="comment"># 拉取最新的镜像</span></span><br><span class="line">docker-compose up -d   <span class="comment"># 重新更新当前镜像</span></span><br></pre></td></tr></table></figure><p>利用Docker-compose搭建的应用，更新非常容易～</p><h3 id="5-3-卸载"><a href="#5-3-卸载" class="headerlink" title="5.3 卸载"></a>5.3 卸载</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i  <span class="comment"># 切换到root</span></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/yourls  <span class="comment"># 进入docker-compose所在的文件夹</span></span><br><span class="line">docker-compose down    <span class="comment"># 停止容器，此时不会删除映射到本地的数据</span></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/yourls  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>利用Docker-compose搭建的应用，删除也非常容易～</p><h2 id="6-反向代理（必须）"><a href="#6-反向代理（必须）" class="headerlink" title="6. 反向代理（必须）"></a>6. 反向代理（必须）</h2><h3 id="6-1-利用Nginx-Proxy-Manager"><a href="#6-1-利用Nginx-Proxy-Manager" class="headerlink" title="6.1 利用Nginx Proxy Manager"></a>6.1 利用Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p>之后，登陆Nginx Proxy Manager（不会的看这个：<strong>安装Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称NPM）会用到<code>80</code>、<code>443</code>端口，所以本机不能占用（比如原来就有Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom:50%;" /><img src="https://img.laoda.de/i/2022/05/07/uf1u9j-0.webp" alt="image-20220507183924997" style="zoom:50%;" /><img src="https://img.laoda.de/i/2022/05/07/uf5jv3-0.webp" alt="image-20220507183942596" style="zoom:50%;" /><blockquote><p> 注意填写对应的<code>域名</code>、<code>IP</code>和<code>端口</code>，按文章来的话，应该是<code>8200</code></p></blockquote><p><strong>IP填写：</strong></p><p>如果Nginx Proxy Manager和reader在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的Docker容器内部IP。</p><p>否则直接填<code>docker所在的服务器IP</code>就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom:50%;" /><p>完成之后，记得再次打开这个，把Force SSL再勾选上（小BUG）</p><p>然后就可以用域名+<code>/admin</code>（即<code>https://你的域名/admin</code>）来安装访问了。</p><p><img src="https://img.laoda.de/i/2022/05/07/mgscmd-0.webp" alt="image-20220507135843362"></p><p><img src="https://img.laoda.de/i/2022/05/07/mgqc6o-0.webp" alt="image-20220507135832639"></p><p><img src="https://img.laoda.de/i/2022/05/07/mbatpj-0.webp" alt="image-20220507134920965"></p><p><img src="https://img.laoda.de/i/2022/05/07/mbd3uy-0.webp" alt="image-20220507134932563"></p><h2 id="7-使用教程"><a href="#7-使用教程" class="headerlink" title="7. 使用教程"></a>7. 使用教程</h2><p>看咕咕的视频。</p><h3 id="7-1-下载中文语言包"><a href="#7-1-下载中文语言包" class="headerlink" title="7.1 下载中文语言包"></a>7.1 下载中文语言包</h3><p>下载地址：<code>https://github.com/ZvonimirSun/YOURLS-zh_CN/archive/refs/tags/v1.7.3.zip</code></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://github.com/ZvonimirSun/YOURLS-zh_CN/archive/refs/tags/v1.7.3.zip</span><br><span class="line">apt install zip -y</span><br><span class="line">unzip v1.7.3.zip</span><br></pre></td></tr></table></figure><p>需要下载并解压到<code>/root/data/docker_data/yourls/yourls_data/user/languages</code>目录，</p><p><img src="https://img.laoda.de/i/2022/05/07/uj7el3-0.webp" alt="image-20220507184622216"></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chown</span> -R www-data:www-data zh_CN.mo  <span class="comment"># 修改文件拥有者和组</span></span><br><span class="line"><span class="built_in">chown</span> -R www-data:www-data zh_CN.po  <span class="comment"># 修改文件拥有者和组</span></span><br></pre></td></tr></table></figure><p>然后修改<code>/root/data/docker_data/yourls/yourls_data/user/config.php</code>。</p><p><img src="https://img.laoda.de/i/2022/05/07/uka6it-0.webp" alt="image-20220507184803986"></p><p>如果你有宝塔，可以直接登陆宝塔：</p><p><img src="https://img.laoda.de/i/2022/05/07/n6d2on-0.webp" alt="image-20220507140138519"></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chown</span> -R www-data:www-data zh_CN.mo</span><br><span class="line"><span class="built_in">chown</span> -R www-data:www-data zh_CN.po</span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/05/07/ndgvme-0.webp" alt="image-20220507141331384"></p><h3 id="7-2-激活插件"><a href="#7-2-激活插件" class="headerlink" title="7.2 激活插件"></a>7.2 激活插件</h3><p><img src="https://img.laoda.de/i/2022/05/07/mc0bql-0.webp" alt="image-20220507135039672"></p><h3 id="7-3-同一条链接对应多个短链接"><a href="#7-3-同一条链接对应多个短链接" class="headerlink" title="7.3 同一条链接对应多个短链接"></a>7.3 同一条链接对应多个短链接</h3><p>同样是在刚刚修改语言的地方<code>/root/data/docker_data/yourls/yourls_data/user/config.php</code><br>下面一行，把这个改成<code>true</code>就可以了~ （正常应该改成<code>false</code>才对的，感觉是个BUG &#x3D; &#x3D;）</p><p><img src="https://img.laoda.de/i/2022/05/08/ls484i-0.webp" alt="image-20220508131658470"></p><p>记得重启容器：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/yourls</span><br><span class="line"></span><br><span class="line">docker-compose restart</span><br></pre></td></tr></table></figure><p>实测成功！</p><img src="https://img.laoda.de/i/2022/05/08/lsvk2w-0.webp" alt="image-20220508131826759" style="zoom:50%;" /><h3 id="7-5-换个主题试试-（失败了）"><a href="#7-5-换个主题试试-（失败了）" class="headerlink" title="7.5 换个主题试试 （失败了）"></a>7.5 换个主题试试 （失败了）</h3><p>yourls虽然功能强大，但界面比较复古，好在可以<a href="https://github.com/YOURLS/awesome-yourls#themes-">更换主题</a>，当然，你也可以自己开发。这里以 <a href="https://github.com/Flynntes/Sleeky">Sleeky主题</a> 为例。</p><p><img src="https://img.laoda.de/i/2022/05/08/lyt6u8-0.webp" alt="yourls-sleeky"></p><p>Sleeky 主题包括前端和后台两个部分。下载解压 Sleeky 主题后可以看到两个文件夹 <code>sleeky-frontend</code> 和 <code>sleeky-backend</code> ，前端只需要将 <code>sleeky-frontend</code> 中的文件复制到yourls网站根目录即可，后端则需要将 <code>sleeky-backend</code> 文件夹放到yourls目录下的 <code>user/plugins</code> 中，然后在后台管理(<code>yourdomain.com/admin/plugins.php</code>)中启动主题插件即可看到效果。</p><p>同时也要注意权限问题：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chown</span> -R www-data:www-data sleeky-frontend</span><br><span class="line"></span><br><span class="line"><span class="built_in">chown</span> -R www-data:www-data sleeky-backend</span><br></pre></td></tr></table></figure><p>你可以选择只安装前端或者只安装后端主题，如果你的前端主题没有 css 样式的话，可能是因为你的网站开启了 https，只需修改一下前面的 <code>config.php</code> 配置文件：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">define( &#x27;YOURLS_SITE&#x27;, &#x27;http://your-own-domain-here.com&#x27; );</span><br></pre></td></tr></table></figure><p>将你的网站设置为 <code>https://your-own-domain-here.com</code> 即可。</p><p>记得重启一下容器：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/yourls</span><br><span class="line"></span><br><span class="line">docker-compose restart</span><br></pre></td></tr></table></figure><p>失败：</p><p><img src="https://img.laoda.de/i/2022/05/08/mb9pze-0.webp" alt="image-20220508134916416"></p><p><img src="https://img.laoda.de/i/2022/05/08/ngwkbk-0.webp" alt="image-20220508141909255"></p><p>有成功的小伙伴欢迎评论区反馈！</p><h2 id="8-结尾"><a href="#8-结尾" class="headerlink" title="8. 结尾"></a>8. 结尾</h2><p>祝大家用得开心，有问题可以去GitHub提<a href="https://github.com/YOURLS/YOURLS">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，有能力给项目做贡献的同学，也欢迎积极<a href="https://github.com/YOURLS/YOURLS">加入到项目</a>中来，贡献自己的一份力量！</p><h2 id="9-参考资料"><a href="#9-参考资料" class="headerlink" title="9. 参考资料"></a>9. 参考资料</h2><p><a href="http://yourls.org/">http://yourls.org/</a></p><p><a href="https://docs.yourls.org/">https://docs.yourls.org/</a></p><p><a href="https://www.hellosanta.com.tw/knowledge/category-38/post-219">https://www.hellosanta.com.tw/knowledge/category-38/post-219</a></p><p><a href="https://github.com/YOURLS/YOURLS">https://github.com/YOURLS/YOURLS</a></p><p><a href="https://hub.docker.com/_/yourls?tab=description">https://hub.docker.com/_/yourls?tab=description</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DockerCompose </tag>
            
            <tag> YOURLS </tag>
            
            <tag> 短链接 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩儿的Docker项目】10分钟搭建一个咕咕目前用的博客——Halo</title>
      <link href="/archives/docker-install-halo/"/>
      <url>/archives/docker-install-halo/</url>
      
        <content type="html"><![CDATA[<h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1. 介绍"></a>1. 介绍</h2><p>一个很牛逼的博客框架。</p><blockquote><p><strong>推荐阅读：</strong></p><p><a href="https://blog.laoda.de/archives/blog-choosing.html">1、Hexo还是Hugo？Typecho还是Wordpress？读完这篇或许你就有答案了！</a><br><a href="https://blog.laoda.de/categories/website-building">2、【如何优雅地写博客系列】</a></p></blockquote><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p>见此博客。</p><h2 id="3-搭建环境"><a href="#3-搭建环境" class="headerlink" title="3. 搭建环境"></a>3. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器24元&#x2F;月VPS一台</del>展示用的服务器是<a href="https://netcup-sonderangebote.de/">Netcup</a>特价款，本期搭建用的是<a href="https://loll.cc/vultr">Vultr</a>的服务器，按小时计费，可随时销毁（最好是选<strong>非大陆的服务器</strong>）（<a href="https://loll.cc/tx">腾讯轻量购买链接</a>）<a href="https://loll.cc/hz">Hetzner注册免费得25欧试用金有效期一个月</a></li><li>系统：Debian 10（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本</a> 非必需DD用原来的系统也OK）</li><li>域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>安装好Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需】提前安装好宝塔面板海外版本aapanel，并安装好Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程采用】安装好Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><h2 id="4-搭建视频"><a href="#4-搭建视频" class="headerlink" title="4. 搭建视频"></a>4. 搭建视频</h2><p>YouTube：<a href="https://www.youtube.com/watch?v=odQ9ui0hq-4&list=PLIN0r_kqXu-6PJkfOaEDhrr5A7NIj03Ku">https://www.youtube.com/watch?v=odQ9ui0hq-4&amp;list=PLIN0r_kqXu-6PJkfOaEDhrr5A7NIj03Ku</a></p><p>哔哩哔哩【高清版本可以点击去吐槽到B站观看】：<joe-bilibili bvid="BV1JN411Q7Na"></joe-bilibili></p><h2 id="5-搭建方式"><a href="#5-搭建方式" class="headerlink" title="5. 搭建方式"></a>5. 搭建方式</h2><h3 id="5-1-搭建"><a href="#5-1-搭建" class="headerlink" title="5.1 搭建"></a>5.1 搭建</h3><p>服务器初始设置，参考</p><p><a href="https://blog.laoda.de/archives/vps-script"><strong>新买了一台服务器“必须”要做的6件小事</strong></a></p><p><a href="https://blog.laoda.de/archives/hello-docker">【Docker系列】不用宝塔面板，小白一样可以玩转VPS服务器！</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i <span class="comment"># 切换到root用户</span></span><br><span class="line"></span><br><span class="line">apt update -y  <span class="comment"># 升级packages</span></span><br><span class="line"></span><br><span class="line">apt install wget curl sudo vim git  <span class="comment"># Debian系统比较干净，安装常用的软件</span></span><br></pre></td></tr></table></figure><h4 id="5-1-1-使用-Docker-部署-Halo（此部分来自Halo官方文档）"><a href="#5-1-1-使用-Docker-部署-Halo（此部分来自Halo官方文档）" class="headerlink" title="5.1.1 使用 Docker 部署 Halo（此部分来自Halo官方文档）"></a>5.1.1 使用 Docker 部署 Halo（此部分来自<a href="https://docs.halo.run/getting-started/install/docker">Halo官方文档</a>）</h4><blockquote><p>在继续操作之前，我们推荐您先阅读<a href="https://docs.halo.run/getting-started/prepare">《写在前面》</a>，这可以快速帮助你了解 Halo。</p></blockquote><h4 id="5-1-2-使用-Docker-镜像"><a href="#5-1-2-使用-Docker-镜像" class="headerlink" title="5.1.2 使用 Docker 镜像"></a>5.1.2 使用 Docker 镜像</h4><p>Halo 在 Docker Hub 上发布的镜像为 <a href="https://hub.docker.com/r/halohub/halo">halohub&#x2F;halo</a></p><p><strong>1）创建工作目录</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> ~/.halo &amp;&amp; <span class="built_in">cd</span> ~/.halo</span><br></pre></td></tr></table></figure><p><strong>2）下载示例配置文件到 <a href="https://docs.halo.run/getting-started/prepare#%E5%B7%A5%E4%BD%9C%E7%9B%AE%E5%BD%95">工作目录</a></strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://dl.halo.run/config/application-template.yaml -O ./application.yaml</span><br></pre></td></tr></table></figure><p><strong>3）编辑配置文件，配置数据库或者端口等，如需配置请参考 <a href="https://docs.halo.run/getting-started/config">配置参考</a></strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim application.yaml</span><br></pre></td></tr></table></figure><p><strong>4）拉取最新的 Halo 镜像</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull halohub/halo:1.5.2</span><br></pre></td></tr></table></figure><blockquote><p>查看最新版本镜像：<a href="https://hub.docker.com/r/halohub/halo">https://hub.docker.com/r/halohub/halo</a> ，我们推荐使用具体版本号的镜像，但也提供了 <code>latest</code> 标签的镜像，它始终是最新的。</p></blockquote><p><strong>5）创建容器</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -it -d --name halo -p 8090:8090 -v ~/.halo:/root/.halo --restart=unless-stopped halohub/halo:1.5.2</span><br></pre></td></tr></table></figure><blockquote><p>注意：此命令默认使用自带的 H2 Database 数据库。如需使用 MySQL，请参考：<a href="https://docs.halo.run/getting-started/install/other/docker-mysql">使用 Docker 部署 Halo 和 MySQL</a></p></blockquote><ul><li><strong>-it：</strong> 开启输入功能并连接伪终端</li><li><strong>-d：</strong> 后台运行容器</li><li><strong>–name：</strong> 为容器指定一个名称</li><li><strong>-p：</strong> 端口映射，格式为 <code>主机(宿主)端口:容器端口</code> ，可在 <code>application.yaml</code> 配置。</li><li><strong>-v：</strong> 工作目录映射。形式为：-v 宿主机路径:&#x2F;root&#x2F;.halo，后者不能修改。</li><li><strong>–restart：</strong> 建议设置为 <code>unless-stopped</code>，在 Docker 启动的时候自动启动 Halo 容器。</li></ul><p><strong>6）打开 <code>http://ip:端口号</code> 即可看到安装引导界面。</strong></p><blockquote><p>如果需要配置域名访问，建议先配置好反向代理以及域名解析再进行初始化。如果通过 <code>http://ip:端口号</code> 的形式无法访问，请到服务器厂商后台将运行的端口号添加到安全组，如果服务器使用了 Linux 面板，请检查此 Linux 面板是否有还有安全组配置，需要同样将端口号添加到安全组。</p></blockquote><blockquote><p>注意：如果VPS的内存比较小 ，推荐设置一下SWAP，一般为内存的1-1.5倍即可～</p></blockquote><p>设置SWAP可以用脚本:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O box.sh https://raw.githubusercontent.com/BlueSkyXN/SKY-BOX/main/box.sh &amp;&amp; <span class="built_in">chmod</span> +x box.sh &amp;&amp; clear &amp;&amp; ./box.sh</span><br></pre></td></tr></table></figure><p>查看端口是否被占用，输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:8090  <span class="comment">#查看8090端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装lsof</span></span><br></pre></td></tr></table></figure><p>如果端口被占用，可以换一个端口运行。</p><p>访问：<code>http:服务ip:8090</code> 即可。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的IP。</p><p>2、遇到访问不了的情况，请在宝塔面板的防火墙和服务商的后台防火墙里打开对应端口。</p></blockquote><h3 id="5-2-更新"><a href="#5-2-更新" class="headerlink" title="5.2 更新"></a>5.2 更新</h3><p>我们假设您的容器是按照 <a href="https://docs.halo.run/getting-started/install/docker">使用 Docker 部署 Halo</a> 中的命令构建的。如有不同，请根据实际情况修改。</p><ol><li>停止并删除当前运行中的容器</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker stop halo</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">rm</span> -f halo</span><br></pre></td></tr></table></figure><blockquote><p>你的容器名称不一定为 <code>halo</code>，在执行前可以先执行 <code>docker ps -a</code> 查看一下。</p></blockquote><ol start="2"><li>备份数据（重要）</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> -r ~/.halo ~/.halo.archive</span><br></pre></td></tr></table></figure><blockquote><p>需要注意的是，<code>.halo.archive</code> 文件名不一定要根据此文档命名，这里仅仅是个示例。</p></blockquote><ol start="3"><li>清空 <a href="https://docs.halo.run/getting-started/config#%E7%BC%93%E5%AD%98">leveldb</a> 缓存（如果有使用 leveldb 作为缓存策略）</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">rm</span> -rf ~/.halo/.leveldb</span><br></pre></td></tr></table></figure><ol start="4"><li>拉取最新的 Halo 镜像</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull halohub/halo:1.5.2</span><br></pre></td></tr></table></figure><blockquote><p>查看最新版本镜像：<a href="https://hub.docker.com/r/halohub/halo">https://hub.docker.com/r/halohub/halo</a> ，我们推荐使用具体版本号的镜像，但也提供了 <code>latest</code> 标签的镜像，它始终是最新的。</p></blockquote><ol start="5"><li>创建容器</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -it -d --name halo -p 8090:8090 -v ~/.halo:/root/.halo --restart=unless-stopped halohub/halo:1.5.2</span><br></pre></td></tr></table></figure><ul><li><strong>-it：</strong> 开启输入功能并连接伪终端</li><li><strong>-d：</strong> 后台运行容器</li><li><strong>–name：</strong> 为容器指定一个名称</li><li><strong>-p：</strong> 端口映射，格式为 <code>主机(宿主)端口:容器端口</code> ，可在 <code>application.yaml</code> 配置。</li><li><strong>-v：</strong> 工作目录映射。形式为：-v 宿主机路径:&#x2F;root&#x2F;.halo，后者不能修改。</li><li><strong>–restart：</strong> 建议设置为 <code>unless-stopped</code>，在 Docker 启动的时候自动启动 Halo 容器。</li></ul><h3 id="5-3-卸载"><a href="#5-3-卸载" class="headerlink" title="5.3 卸载"></a>5.3 卸载</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i  <span class="comment"># 切换到root</span></span><br><span class="line"></span><br><span class="line">docker stop halo</span><br><span class="line"></span><br><span class="line">docker <span class="built_in">rm</span> -f halo</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf ~/.halo     <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>利用Docker搭建的应用，删除也非常容易～</p><h2 id="6-反向代理（必须）"><a href="#6-反向代理（必须）" class="headerlink" title="6. 反向代理（必须）"></a>6. 反向代理（必须）</h2><h3 id="6-1-利用Nginx-Proxy-Manager"><a href="#6-1-利用Nginx-Proxy-Manager" class="headerlink" title="6.1 利用Nginx Proxy Manager"></a>6.1 利用Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p>之后，登陆Nginx Proxy Manager（不会的看这个：<strong>安装Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称NPM）会用到<code>80</code>、<code>443</code>端口，所以本机不能占用（比如原来就有Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom:50%;" /><img src="https://img.laoda.de/i/2022/05/07/127o61b-0.webp" alt="image-20220507231148258" style="zoom:50%;" /><img src="https://img.laoda.de/i/2022/05/07/1287cn3-0.webp" alt="image-20220507231148258" style="zoom:50%;" /><blockquote><p> 注意填写对应的<code>域名</code>、<code>IP</code>和<code>端口</code>，按文章来的话，应该是<code>8090</code></p></blockquote><p><strong>IP填写：</strong></p><p>如果Nginx Proxy Manager和reader在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的Docker容器内部IP。</p><p>否则直接填<code>docker所在的服务器IP</code>就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom:50%;" /><p><strong>完成之后，记得再次打开这个，把<code>Force SSL</code>再勾选上（小BUG）</strong></p><p>然后就可以用域名来安装访问了。</p><h2 id="7-使用教程"><a href="#7-使用教程" class="headerlink" title="7. 使用教程"></a>7. 使用教程</h2><p>看咕咕的视频。</p><p>更多详情，可以查看文档：<a href="https://docs.halo.run/">https://docs.halo.run/</a></p><p>有任何问题可以到官方论坛求助：<a href="https://bbs.halo.run/">https://bbs.halo.run/</a> </p><p>更多好看的主题，可以看这边：<a href="https://halo.run/themes.html">https://halo.run/themes.html</a></p><h2 id="8-结尾"><a href="#8-结尾" class="headerlink" title="8. 结尾"></a>8. 结尾</h2><p>祝大家用得开心，有问题可以去GitHub提<a href="https://github.com/halo-dev/halo/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，有能力给项目做贡献的同学，也欢迎积极<a href="https://github.com/halo-dev/halo/issues">加入到项目</a>中来，贡献自己的一份力量！</p><h2 id="9-参考资料"><a href="#9-参考资料" class="headerlink" title="9. 参考资料"></a>9. 参考资料</h2><p><a href="https://github.com/halo-dev/halo/issues">https://github.com/halo-dev/halo/issues</a></p><p><a href="https://docs.halo.run/">https://docs.halo.run/</a></p><p><a href="https://halo.run/">https://halo.run/</a></p><p><a href="https://bbs.halo.run/">https://bbs.halo.run/</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客搭建 </tag>
            
            <tag> Halo </tag>
            
            <tag> 个人博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【宝塔面板系列】10分钟搭建一个简单图床——EasyImage 简单到无需数据库！</title>
      <link href="/archives/aapanel-install-easyimage/"/>
      <url>/archives/aapanel-install-easyimage/</url>
      
        <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><p>熟悉咕咕的老朋友都知道，咕咕之前<a href="https://blog.laoda.de/search?keyword=%E5%86%99%E5%8D%9A%E5%AE%A2">博客搭建系列</a>出过<a href="https://blog.laoda.de/archives/chevereto-picgo-typora">图床</a>的视频，当时用的是<a href="https://www.bilibili.com/video/BV1K44y1b74r?zw">Chevereto</a>，配合了Typora + Picgo插件，完成了博客图片的上传。</p><p>因为Chevereto后来维护的人员发生了变动，免费版本似乎已经没有中文语言包了，加之咕咕之前一直想研究WebP的转换，但是一直搞不成，心里有些不爽。（总感觉图片太大了，自己一个一个压缩又浪费时间）</p><p>无意中网上冲浪的时候，发现了一个叫做<code>简单图床——EasyImage</code>的图床，居然自带把图片上传就转换成WebP的功能，大喜，遂下载尝试之，发现果然床如其名，搭建也很简单，故而推荐给小伙伴们。</p><h3 id="1-1-WebP是什么？"><a href="#1-1-WebP是什么？" class="headerlink" title="1.1 WebP是什么？"></a>1.1 WebP是什么？</h3><blockquote><p>WebP 的有损压缩算法是基于 VP8 视频格式的帧内编码[17]，并以 RIFF 作为容器格式。[2] 因此，它是一个具有八位色彩深度和以 1:2 的比例进行色度子采样的亮度-色度模型（YCbCr 4:2:0）的基于块的转换方案。[18] 不含内容的情况下，RIFF 容器要求只需 20 字节的开销，依然能保存额外的 元数据(metadata)。[2] WebP 图像的边长限制为 16383 像素。</p></blockquote><p><em>WebP 是一种衍生自 Google VP8 的图像格式，同时支持有损和无损编码。当使用有损模式，它在相同体积提供比 JPG 图像更好的质量；当使用无损模式，它提供比最佳压缩的 PNG 图像更小的体积。简单来说，WebP 图片格式的存在，让我们在 WebP 上展示的图片体积可以有较大幅度的缩小。网站上的图片资源如果使用 WebP，那么自然也会减少这些图片文件的加载时间，也就带来了网站加载性能的提升。关于 webp 图像格式的具体实现细节可以去维基百科或者文末我提到的推荐阅读看一下，总之 webp 很香就是啦 (●’◡’●)</em>  </p><p>以上WebP内容摘抄自<a href="https://blog.k8s.li/oh-my-webpsh.html">Reimu’s blog</a></p><p><strong>简而言之，就是WebP格式的图片，可以再损失很小画质的前提下，大幅度减少图片的体积，一方面可以节省你服务器的储存，另一方面也可以节省带宽，让你的网站打开速度更快！目前大厂（腾讯的微信公众号、谷歌等公司）都在用，我们当然也要用起来！</strong></p><h2 id="2-特点"><a href="#2-特点" class="headerlink" title="2. 特点"></a>2. 特点</h2><p><del>始于2018年7月，支持多文件上传,简单无数据库,返回图片url,markdown,bbscode,html的一款图床程序</del><br><del>之前一直用的图床程序是:<a href="https://www.jb51.net/codes/40544.html">PHP多图长传程序2.4.3</a></del><br><del>由于版本过老并且使用falsh上传，在当前html5流行大势所趋下，遂利用基础知识新写了一个以html5为默认上传并且支持flash,向下兼容至IE9。</del> 文档的说明，有点长，可以不看  &#x3D; &#x3D;</p><ul><li>支持WebP格式转换</li><li>支持仅登录后上传</li><li>支持设置图片质量</li><li>支持文字&#x2F;图片水印</li><li>支持设置图片指定宽&#x2F;高</li><li>支持上传图片转换为指定格式</li><li>支持限制最低宽度&#x2F;高度上传</li><li>支持API</li><li>在线管理图片</li><li>支持网站统计</li><li>支持设置广告</li><li>支持图片鉴黄</li><li>支持自定义代码</li><li>支持上传IP黑白名单</li><li>支持创建仅上传用户</li><li>更多支持请安装尝试···</li></ul><h2 id="3-项目展示"><a href="#3-项目展示" class="headerlink" title="3. 项目展示"></a>3. 项目展示</h2><p>GitHub开源地址：<a href="https://github.com/icret/EasyImages2.0">https://github.com/icret/EasyImages2.0</a></p><p>稳定版下载地址：<a href="https://github.com/icret/EasyImages2.0/releases">稳定版</a></p><p>文档地址：<a href="https://www.kancloud.cn/easyimage/easyimage/2625222">https://www.kancloud.cn/easyimage/easyimage/2625222</a></p><p>公益图床地址：<a href="https://img.gugu.ovh/">https://img.gugu.ovh/</a></p><p>作者博客：<a href="https://blog.png.cm/">https://blog.png.cm/</a>   (此条5</p><h3 id="3-1-界面演示"><a href="#3-1-界面演示" class="headerlink" title="3.1 界面演示"></a>3.1 界面演示</h3><p>官方提供的图：</p><p><img src="https://img.kancloud.cn/8e/e9/8ee9ed406d3fa02fe9121b8c2026db55_1920x1062.png" alt="简单图床 - 上传界面"><br><img src="https://img.kancloud.cn/96/88/9688330ddd15aa92906e5469f48f3067_1920x2027.png" alt="简单图床 - 广场界面"><br><img src="https://img.kancloud.cn/2d/01/2d019eb45155ba1be58f67a3505b7be2_1920x1222.png" alt="简单图床 - 后台界面"><br><img src="https://img.kancloud.cn/85/a3/85a33988daa53f646c5986ac7a5a1f0f_1920x1585.png" alt="简单图床 - 统计界面"><br><img src="https://img.kancloud.cn/fe/42/fe4276567f96e589b7c53153412104c1_1134x904.png" alt="简单图床 - 图片信息"></p><p>后台的几张图：</p><img src="https://img.laoda.de/i/2022/05/03/pcv4lz_7.webp" alt="image-20220503153323454" style="zoom:50%;" /><img src="https://img.laoda.de/i/2022/05/03/pcxwh5_7.webp" alt="image-20220503153335997" style="zoom:50%;" /><img src="https://img.laoda.de/i/2022/05/03/pd11c9_7.webp" alt="image-20220503153350570" style="zoom:50%;" /><p><img src="https://img.laoda.de/i/2022/05/03/pde7a1_7.webp" alt="image-20220503153411763"></p><p><img src="https://img.laoda.de/i/2022/05/03/pdileh_7.webp" alt="image-20220503153431787"></p><p><img src="https://img.laoda.de/i/2022/05/03/pdm4q4_7.webp" alt="image-20220503153448741"></p><h2 id="4-搭建环境"><a href="#4-搭建环境" class="headerlink" title="4. 搭建环境"></a>4. 搭建环境</h2><ul><li><p>服务器：<del>腾讯香港轻量应用服务器24元&#x2F;月VPS一台</del>展示用的服务器是<a href="https://netcup-sonderangebote.de/">Netcup</a>特价款，本期搭建用的是<a href="https://loll.cc/vultr">Vultr</a>的服务器，按小时计费，可随时销毁（最好是选<strong>非大陆的服务器</strong>）（<a href="https://loll.cc/tx">腾讯轻量购买链接</a>）<a href="https://loll.cc/hz">Hetzner注册免费得25欧试用金有效期一个月</a></p></li><li><p>系统：Debian 10（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本</a> 非必需DD用原来的系统也OK）</p></li><li><p>域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p></li><li><p>【本教程采用】提前安装好宝塔面板海外版本aapanel，并安装好<code>Nginx 1.21</code>、<code>PHP 7.4</code>（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</p></li></ul><p><img src="https://img.laoda.de/i/2022/05/03/iofqsh_7.webp" alt="image-20220503112939633"></p><h3 id="4-1-兼容"><a href="#4-1-兼容" class="headerlink" title="4.1 兼容"></a>4.1 兼容</h3><ul><li>最低<code>PHP 5.6</code>,推荐<code>PHP≥7.0</code>及以上版本，需要PHP支持<code>Fileinfo,iconv,zip,mbstring,openssl</code>扩展,如果缺失会导致无法上传&#x2F;删除图片</li><li>文件上传视图提供文件列表管理和文件批量上传功能，允许拖拽（需要<code>HTML5</code>支持）来添加上传文件，支持上传大图片，优先使用<code>HTML5</code>旧得浏览器自动使用<code>Flash和Silverlight</code>的方式兼容</li></ul><h2 id="5-搭建视频（上传中）"><a href="#5-搭建视频（上传中）" class="headerlink" title="5. 搭建视频（上传中）"></a>5. 搭建视频（上传中）</h2><p>YouTube：<a href="https://youtu.be/kOW46igrQvA">https://youtu.be/kOW46igrQvA</a></p><p>哔哩哔哩【高清版本可以点击去吐槽到B站观看】：<a href="https://www.bilibili.com/BV1Ya411e7ES">https://www.bilibili.com/BV1Ya411e7ES</a></p><h2 id="6-搭建方式"><a href="#6-搭建方式" class="headerlink" title="6. 搭建方式"></a>6. 搭建方式</h2><p>其实可以直接看<a href="https://www.kancloud.cn/easyimage/easyimage/2625222">文档</a></p><h3 id="6-1-安装必需的PHP扩展"><a href="#6-1-安装必需的PHP扩展" class="headerlink" title="6.1 安装必需的PHP扩展"></a>6.1 安装必需的PHP扩展</h3><h4 id="6-1-1-apparel（宝塔面板）"><a href="#6-1-1-apparel（宝塔面板）" class="headerlink" title="6.1.1 apparel（宝塔面板）"></a>6.1.1 apparel（宝塔面板）</h4><p>打开宝塔后台-&gt;<code>软件商店</code>-&gt;<code>已安装</code>-&gt;<code>选择php</code>-&gt;<code>设置</code>-&gt;安装<code>Fileinfo</code>、<code>iconv</code>、<code>zip</code>、<code>mbstring</code>、<code>openssl</code>扩展（如果没有就是已经安装了）。</p><p><img src="https://img.laoda.de/i/2022/05/03/keyffm_7.webp" alt="image-20220503123440397"></p><p><img src="https://img.kancloud.cn/57/4f/574f01e9d34e4b3aaa35d1399a6dffac_1920x891.png" alt="img"></p><p>Fileinfo安装不上，可能是因为内存太小了，添加虚拟内存的方法如下：</p><p>软件商店，搜索<code>Linux工具箱</code></p><p><img src="https://img.laoda.de/i/2022/05/03/kfh8kv_7.webp" alt="image-20220503123529266"></p><p><img src="https://img.laoda.de/i/2022/05/03/kfl65p_7.webp" alt="image-20220503123547515"></p><p><img src="https://img.laoda.de/i/2022/05/03/kg0sxc_7.webp" alt="image-20220503123620762"></p><p>尝试再次安装。</p><p><del>依次再安装其他需要的扩展。</del>实测只有这一个需要安装。</p><p>安装完成之后，记得重启PHP。</p><img src="https://img.laoda.de/i/2022/05/03/pbsbjd_7.webp" alt="image-20220503153141936" style="zoom:50%;" /><h4 id="6-1-2-Lnmp"><a href="#6-1-2-Lnmp" class="headerlink" title="6.1.2 Lnmp"></a>6.1.2 Lnmp</h4><p><a href="https://www.vpser.net/manage/lnmp-php-install-ext.html">lnmp安装扩展教程</a></p><h3 id="6-2-将域名解析到服务器"><a href="#6-2-将域名解析到服务器" class="headerlink" title="6.2 将域名解析到服务器"></a>6.2 将域名解析到服务器</h3><p>把你图床打算用的域名解析到搭建图床的服务器上，这边以cloudflare为例子：</p><img src="https://img.laoda.de/i/2022/05/03/ke3joa_7.webp" alt="image-20220503123257657" style="zoom:50%;" /><h3 id="6-3-新建一个站点"><a href="#6-3-新建一个站点" class="headerlink" title="6.3 新建一个站点"></a>6.3 新建一个站点</h3><p>宝塔面板点击新建站点：</p><img src="https://img.laoda.de/i/2022/05/03/kdqvtk_7.webp" alt="image-20220503123238332" style="zoom: 33%;" /><p>只需要填写<code>域名</code>，选择<code>PHP</code>即可，简单图床足够简单，不需要数据库！</p><img src="https://img.laoda.de/i/2022/05/03/kdjnuf_7.webp" alt="image-20220503123204832" style="zoom:33%;" /><p>空壳站点成功创建！</p><p>接下来我们配置SSL证书！</p><img src="https://img.laoda.de/i/2022/05/03/keaa5x_7.webp" alt="image-20220503123328160" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/05/03/keexcl_7.webp" alt="image-20220503123350171" style="zoom:33%;" /><p>记得打开<code>强制SSL</code></p><blockquote><p>SSL配置相关问题可以查看这篇文章：<a href="https://blog.laoda.de/archives/aapanel-ssl-issues">aapanel（宝塔面板）SSL证书申请经常错误的解决方法</a></p></blockquote><p>紧接着我们打开网站的根路径：</p><p><img src="https://img.laoda.de/i/2022/05/03/kj5imf_7.webp" alt="image-20220503124146163"></p><p>把里面的东西都删了：</p><p><img src="https://img.laoda.de/i/2022/05/03/kjjnbk_7.webp" alt="image-20220503124211766"></p><p>然后我们下载EasyImage的安装包，点开<code>远程下载</code>，输入下面的链接：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://github.com/icret/EasyImages2.0/archive/refs/tags/2.6.0.zip</span><br></pre></td></tr></table></figure><p>点击确认：</p><p><img src="https://img.laoda.de/i/2022/05/03/kk1wjn_7.webp" alt="image-20220503124256535"></p><p>然后解压这个安装包，紧接着把解压后文件夹里面的所有内容，复制到根目录，并删除这个压缩包。</p><p><img src="https://img.laoda.de/i/2022/05/03/kk8lbe_7.webp" alt="image-20220503124327969"></p><p>然后打开站点目录，把下图的这个勾勾去掉：</p><p><img src="https://img.laoda.de/i/2022/05/03/km3eah_7.webp" alt="image-20220503124639939"></p><p>之后打开网址，安装环境检测完毕：</p><p><img src="https://img.laoda.de/i/2022/05/03/kmjtea_7.webp" alt="image-20220503124716076"></p><p><img src="https://img.laoda.de/i/2022/05/03/kn43l6_7.webp" alt="image-20220503124811010"></p><p>后台登陆界面：</p><p><img src="https://img.laoda.de/i/2022/05/03/knbsg6_7.webp" alt="image-20220503124846805"></p><p>首次登陆后台，自动检测安装环境：</p><p><img src="https://img.laoda.de/i/2022/05/03/knomkb_7.webp" alt="image-20220503124907201"></p><h3 id="6-4-开始安装"><a href="#6-4-开始安装" class="headerlink" title="6.4 开始安装"></a>6.4 开始安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/icret/EasyImages2.0.git  <span class="comment"># 至web目录赋予www:www和0755权限</span></span><br><span class="line"><span class="built_in">chmod</span> 755 -R /网站绝对路径</span><br><span class="line"><span class="built_in">chown</span> -R www:www /网站绝对路径</span><br></pre></td></tr></table></figure><p>EasyImage2.0 不需要任何伪静态支持，在Apache、Nginx均完美通过使用。</p><p>程序名称为简单图床，真的非常简单。</p><p>如果复杂的说总共需要四步：</p><blockquote><p><code>下载程序并上传</code>-&gt;<code>打开安装网站页面</code>-&gt;<code>输入基本配置</code>–&gt;<code>开始上传图片使用</code></p></blockquote><ul><li>提示：图片域名可以是多个域名以英文,区分 最后一个不加英文逗号分隔符，</li><li>上传完毕后软件会随机选择一个图片域名</li></ul><p><img src="https://img.kancloud.cn/4c/b6/4cb68efb604b98344af08498719d3d85_1267x627.png" alt="img"><br><img src="https://img.kancloud.cn/97/1e/971e5f3ddd974582d874356aff0ffdb8_1243x577.png" alt="img"><br><img src="https://img.kancloud.cn/1f/fb/1ffb0a9ec536187347c7d17af30043f1_620x278.png" alt="img"></p><h3 id="6-5-安全设置（非必需）"><a href="#6-5-安全设置（非必需）" class="headerlink" title="6.5 安全设置（非必需）"></a>6.5 安全设置（非必需）</h3><ul><li>Nginx环境禁止多个目录运行<code>PHP</code>程序：</li></ul><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"> <span class="comment"># &quot;i|public&quot;是你要禁止的目录 放到listen段落之后才生效</span></span><br><span class="line"> <span class="section">location</span> <span class="regexp">~* ^/(i|public)/.*\.(php|php5)$</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="attribute">deny</span> all;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>或者参考：<a href="https://blog.png.cm/996.html">https://blog.png.cm/996.html</a></p><h2 id="7-使用教程"><a href="#7-使用教程" class="headerlink" title="7. 使用教程"></a>7. 使用教程</h2><p>看咕咕的视频，或者自己研究，看<a href="https://www.kancloud.cn/easyimage/easyimage/2625222">文档</a></p><h3 id="7-1-使用PicGo上传"><a href="#7-1-使用PicGo上传" class="headerlink" title="7.1 使用PicGo上传"></a>7.1 使用PicGo上传</h3><p>1、下载最新版<a href="https://github.com/Molunerfinn/PicGo/releases">PicGo-windows版</a>或者<a href="https://github.com/Molunerfinn/PicGo/releases">PicGo-mac版</a>（我下载的版本是：2.3.1-beta.2）</p><p>2、安装后在插件设置中搜索web-uploader并安装（下载插件可能需要<a href="https://nodejs.org/zh-cn/">node.js</a>插件）</p><p>3、图床设置-自定义Web图床中按照如下方式填写，然后点击确定并设置为<code>默认图床</code>。</p><blockquote><p>需要在<code>config.php</code>中开启API上传</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">API地址: https://img.545141.com/api/index.php // 输入你的网站api地址</span><br><span class="line">POST参数名: image</span><br><span class="line">JSON路径: url</span><br><span class="line">自定义Body: &#123;&quot;token&quot;:&quot;1c17b11693cb5ec63859b091c5b9c1b2&quot;&#125; // 这里输入你网站生成的token</span><br></pre></td></tr></table></figure><p><img src="https://img.kancloud.cn/01/64/0164ca38ca578478912acb095ba5867f_800x450.png" alt="EasyImage简单图床使用PicGo上传图片"></p><p>再贴一张咕咕自己的配置：</p><p><img src="https://img.laoda.de/i/2022/05/03/j55gd5_7.webp" alt="image-20220503115747553"></p><h3 id="7-2-鉴黄（咕咕没尝试过，有兴趣的自行研究）"><a href="#7-2-鉴黄（咕咕没尝试过，有兴趣的自行研究）" class="headerlink" title="7.2 鉴黄（咕咕没尝试过，有兴趣的自行研究）"></a>7.2 鉴黄（咕咕没尝试过，有兴趣的自行研究）</h3><p>图床支持moderatecontent和nsfwjs方式鉴黄</p><ul><li>moderatecontent：<ol><li>注册<a href="https://client.moderatecontent.com/">moderatecontent</a>并获取Token</li><li>后台API设置中填入Moderate Key</li><li>后台图片安全图片鉴黄以moderatecontent方式</li></ol></li><li>nsfwjs <a href="https://hub.docker.com/r/icret/nsfw_restful_api">nsfwjs docker</a><ol><li>确定已安装<code>docker</code>和<code>docker-compose</code></li><li>拉取镜像 <code>docker pull icret/nsfw_restful_api:latest</code> 或者直接 <code>docker run -p 3307:3307 -d icret/nsfw_restful_api</code></li><li>后台API设置中填入网址 比如：<code>http://IP:3307/api/nsfw/classify?url=</code></li><li>后台图片安全图片鉴黄以nsfwjs方式</li><li>如果你使用别的nsfwjs api,必须返回json 并且格式如下：</li></ol></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[&#123;</span><br><span class="line">    &quot;className&quot;: &quot;Drawing&quot;,</span><br><span class="line">    &quot;probability&quot;: 0.824431836605072</span><br><span class="line">&#125;, &#123;</span><br><span class="line">    &quot;className&quot;: &quot;Hentai&quot;,</span><br><span class="line">    &quot;probability&quot;: 0.16360442340373993</span><br><span class="line">&#125;, &#123;</span><br><span class="line">    &quot;className&quot;: &quot;Neutral&quot;,</span><br><span class="line">    &quot;probability&quot;: 0.007620695047080517</span><br><span class="line">&#125;, &#123;</span><br><span class="line">    &quot;className&quot;: &quot;Porn&quot;,</span><br><span class="line">    &quot;probability&quot;: 0.004154415801167488</span><br><span class="line">&#125;, &#123;</span><br><span class="line">    &quot;className&quot;: &quot;Sexy&quot;,</span><br><span class="line">    &quot;probability&quot;: 0.00018858206749428064</span><br><span class="line">&#125;]</span><br></pre></td></tr></table></figure><h3 id="7-3-其他功能"><a href="#7-3-其他功能" class="headerlink" title="7.3 其他功能"></a>7.3 其他功能</h3><p><a href="https://github.com/icret/EasyImage-Browser-Extension">图床的Chrome&#x2F;Edge 插件地址：</a></p><p>以下功能，咕咕用的不多，请自行查看相关<a href="https://www.kancloud.cn/easyimage/easyimage/2625222">文档</a></p><img src="https://img.laoda.de/i/2022/05/03/j2ljh6_7.webp" alt="image-20220503115319647" style="zoom: 50%;" /><h3 id="7-4-常见问题"><a href="#7-4-常见问题" class="headerlink" title="7.4 常见问题"></a>7.4 常见问题</h3><ol><li>请将所有文件赋予<code>0755</code>和<code>www</code>权限</li><li>对<code>PHP</code>不太熟悉的请不要将图床程序放置于二级目录</li><li>请关闭防跨站或删除域名文件夹内的<code>user.ini</code>文件 如<code>宝塔面板</code>|<code>军哥lnmp</code></li><li>网站域名与图片域名必须填写，如果只有一个域名请填写成一样的</li><li>首次使用会执行安装程序并生成<code>install.lock</code> 跳过安装流程请删除<code>install</code>目录</li><li>首次访问首页会检查环境并在<code>config</code>目录下生成<code>EasyImage.lock</code></li><li>可以使用谷歌浏览器的调试模式查看错误<code>F12-&gt;console</code></li><li>不显示验证码: 1. 权限问题见问题<code>1</code> 2. CDN缓存了 3. 开防火墙了</li><li><code>upload File size exceeds the maximum value</code> 调整<code>PHP</code>上传大小</li><li><code>undefined function imagecreatefromwebp()</code>GD没安装webp, 以此类推</li><li><code>Warning: is_dir(): open_basedir restriction in effect</code>解决方法同<code>3</code></li><li><code>Fatal error: Allowed memory size......</code>主机内存或分配给PHP的内存不够 解决方法百度</li><li>开启原图保护功能后打开图片链接显示<code>404</code>是因为<code>nginx</code>或<code>Apache</code>页面缓存导致的,<code>Nginx</code>解决办法:</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 把Nginx这段配置删掉</span><br><span class="line">location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$</span><br><span class="line">&#123;</span><br><span class="line">    expires      30d;</span><br><span class="line">    error_log /dev/null;</span><br><span class="line">    access_log /dev/null;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-5-程序升级"><a href="#7-5-程序升级" class="headerlink" title="7.5 程序升级"></a>7.5 程序升级</h3><ul><li>备份<code>config</code>目录(没有增加上传用户和api可以只保留<code>config.php</code>文件)和<code>上传文件目录</code></li><li>将新程序下载至网站目录解压覆盖，然后将备份的文件替换既完成升级</li><li>如果出现错误请在设置中把所有设置中底部按钮 <code>保存</code> 一次</li></ul><h2 id="8-结尾"><a href="#8-结尾" class="headerlink" title="8. 结尾"></a>8. 结尾</h2><p>祝大家用得开心，有问题可以去GitHub提<a href="https://github.com/icret/EasyImages2.0/issues">Issues</a>（作者自称善写bug），也可以在评论区互相交流探讨。</p><p>同时，有能力给项目做贡献的同学，也欢迎积极<a href="https://github.com/icret/EasyImages2.0">加入到项目</a>中来，贡献自己的一份力量！</p><h2 id="9-参考资料"><a href="#9-参考资料" class="headerlink" title="9. 参考资料"></a>9. 参考资料</h2><p><a href="https://github.com/icret/EasyImages2.0/issues">https://github.com/icret/EasyImages2.0/issues</a></p><p><a href="https://www.kancloud.cn/easyimage/easyimage/2625229">https://www.kancloud.cn/easyimage/easyimage/2625229</a></p>]]></content>
      
      
      <categories>
          
          <category> 宝塔面板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 宝塔面板 </tag>
            
            <tag> aapanel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩儿的Docker项目】10分钟搭建一个自己的网文阅读器 安卓的“阅读”APP网页版 附带书源！</title>
      <link href="/archives/docker-compose-install-reader/"/>
      <url>/archives/docker-compose-install-reader/</url>
      
        <content type="html"><![CDATA[<img src="https://img.laoda.de/i/2022/05/03/h4zr0y_7.webp" alt="image-20220503103627745" style="zoom:33%;" /><h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1. 介绍"></a>1. 介绍</h2><p>安卓手机APP<code>阅读3</code>服务器版，桌面端。<br>后端 <code>Kotlin</code> + <code>Spring Boot</code> + <code>Vert.x</code> + <code>Coroutine</code> ；<br>前端 <code>Vue.js</code> + <code>Element</code>。</p><p>GitHub 开源项目，支持Docker搭建。</p><h3 id="1-1-特点"><a href="#1-1-特点" class="headerlink" title="1.1 特点"></a>1.1 特点</h3><p>咕咕这边简单在网上也<del>抄~~~~搜集</del>了一些特点，供大家参考（翻译自<a href="https://github.com/hectorqin/reader">GitHub</a>的<code>README</code>）：</p><ul><li><p>GitHub完全开源，可以免费使用</p></li><li><p>Docker搭建，10分钟搞定</p></li><li><p>书架管理</p></li><li><p>搜索</p></li><li><p>书海</p></li><li><p>看书</p></li><li><p>移动端适配</p></li><li><p>换源</p></li><li><p>翻页方式</p></li><li><p>手势支持</p></li><li><p>自定义主题</p></li><li><p>自定义样式</p></li><li><p>WebDAV同步</p></li><li><p>文字替换过滤</p></li><li><p>听书&lt;仅部分浏览器支持，手机端会因为锁屏而失效&gt;</p></li><li><p>用户配置备份恢复</p></li><li><p>支持漫画</p></li><li><p>支持音频</p></li><li><p>书源失效检测</p></li><li><p>导入本地TXT、EPUB、UMD格式的书籍</p></li><li><p>书籍分组</p></li><li><p>RSS订阅</p></li><li><p>定时更新书架</p></li><li><p>并发搜书</p></li><li><p>本地书仓</p></li></ul><h3 id="1-2-问题"><a href="#1-2-问题" class="headerlink" title="1.2 问题"></a>1.2 问题</h3><ul><li>部分使用了 <code>Javascript</code> 的书源可能会报错，不支持 <code>cookie</code> 和 <code>cache</code> 功能</li><li>不支持使用了 <code>webview</code> 的书源</li><li>不支持书源登录功能</li></ul><h3 id="1-3-技术栈"><a href="#1-3-技术栈" class="headerlink" title="1.3 技术栈"></a>1.3 技术栈</h3><p>后端 <code>Kotlin</code> + <code>Spring Boot</code> + <code>Vert.x</code> + <code>Coroutine</code> ；</p><p>前端 <code>Vue.js</code> + <code>Element</code></p><h3 id="1-4-免责声明（Disclaimer）"><a href="#1-4-免责声明（Disclaimer）" class="headerlink" title="1.4 免责声明（Disclaimer）"></a>1.4 免责声明（Disclaimer）</h3><p><code>阅读</code>是一款提供网络文学搜索的工具，为广大网络文学爱好者提供一种方便、快捷舒适的试读体验。</p><p>当您搜索一本书的时，阅读会将该书的书名以关键词的形式提交到各个第三方网络文学网站。各第三方网站返回的内容与阅读无关，阅读对其概不负责，亦不承担任何法律责任。任何通过使用阅读而链接到的第三方网页均系他人制作或提供，您可能从第三方网页上获得其他服务，阅读对其合法性概不负责，亦不承担任何法律责任。第三方搜索引擎结果根据您提交的书名自动搜索获得并提供试读，不代表阅读赞成或被搜索链接到的第三方网页上的内容或立场。您应该对使用搜索引擎的结果自行承担风险。</p><p>阅读不做任何形式的保证：不保证第三方搜索引擎的搜索结果满足您的要求，不保证搜索服务不中断，不保证搜索结果的安全性、正确性、及时性、合法性。因网络状况、通讯线路、第三方网站等任何原因而导致您不能正常使用阅读，阅读不承担任何法律责任。阅读尊重并保护所有使用阅读用户的个人隐私权，您注册的用户名、电子邮件地址等个人资料，非经您亲自许可或根据相关法律、法规的强制性规定，阅读不会主动地泄露给第三方。</p><p>阅读致力于最大程度地减少网络文学阅读者在自行搜寻过程中的无意义的时间浪费，通过专业搜索展示不同网站中网络文学的最新章节。阅读在为广大小说爱好者提供方便、快捷舒适的试读体验的同时，也使优秀网络文学得以迅速、更广泛的传播，从而达到了在一定程度促进网络文学充分繁荣发展之目的。阅读鼓励广大小说爱好者通过阅读发现优秀网络小说及其提供商，并建议阅读正版图书。任何单位或个人认为通过阅读搜索链接到的第三方网页内容可能涉嫌侵犯其信息网络传播权，应该及时向阅读提出书面权力通知，并提供身份证明、权属证明及详细侵权情况证明。阅读在收到上述法律文件后，将会依法尽快断开相关链接内容。</p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p>GitHub原项目地址：<a href="https://github.com/hectorqin/reader">https://github.com/hectorqin/reader</a>（<del>617</del> 1.9k star）</p><p><del>Demo地址(服务器位于日本) : <a href="https://reader.nxnow.online(此域名7月过期)更换为/">https://reader.nxnow.online(此域名7月过期)更换为</a> <a href="https://read.nxnow.top/">https://read.nxnow.top</a></del></p><p><del>Demo测试账号&#x2F;密码分别为<code>guest</code>&#x2F;<code>guest123</code>,也可自行创建账号添加书源</del></p><p>直接丢几个图片：</p><img src="https://img.laoda.de/i/2022/05/03/hb0og7_7.webp" alt="image-20220503104639843" style="zoom:50%;" /><img src="https://img.laoda.de/i/2022/05/03/habanq_7.webp" alt="image-20220503104521027" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/05/03/haf4ai_7.webp" alt="image-20220503104539532" style="zoom:50%;" /><p><img src="https://img.laoda.de/i/2022/05/03/hai9gn_7.webp" alt="image-20220503104554596"></p><h2 id="3-搭建环境"><a href="#3-搭建环境" class="headerlink" title="3. 搭建环境"></a>3. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器24元&#x2F;月VPS一台</del>展示用的服务器是<a href="https://netcup-sonderangebote.de/">Netcup</a>特价款，本期搭建用的是<a href="https://loll.cc/vultr">Vultr</a>的服务器，按小时计费，可随时销毁（最好是选<strong>非大陆的服务器</strong>）（<a href="https://loll.cc/tx">腾讯轻量购买链接</a>）<a href="https://loll.cc/hz">Hetzner注册免费得25欧试用金有效期一个月</a></li><li>系统：Debian 10（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本</a> 非必需DD用原来的系统也OK）</li><li>域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>安装好Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需】提前安装好宝塔面板海外版本aapanel，并安装好Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程采用】安装好Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><h2 id="4-搭建视频"><a href="#4-搭建视频" class="headerlink" title="4. 搭建视频"></a>4. 搭建视频</h2><p>YouTube：<a href="https://youtu.be/Yjtrl4zii5g">https://youtu.be/Yjtrl4zii5g</a></p><p>哔哩哔哩：<a href="https://www.bilibili.com/BV16F411G757">https://www.bilibili.com/BV16F411G757</a></p><h2 id="5-搭建方式"><a href="#5-搭建方式" class="headerlink" title="5. 搭建方式"></a>5. 搭建方式</h2><h3 id="5-1-搭建"><a href="#5-1-搭建" class="headerlink" title="5.1 搭建"></a>5.1 搭建</h3><p>服务器初始设置，参考</p><p><a href="https://blog.laoda.de/archives/vps-script"><strong>新买了一台服务器“必须”要做的6件小事</strong></a></p><p><a href="https://blog.laoda.de/archives/hello-docker">【Docker系列】不用宝塔面板，小白一样可以玩转VPS服务器！</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i <span class="comment"># 切换到root用户</span></span><br><span class="line"></span><br><span class="line">apt update -y  <span class="comment"># 升级packages</span></span><br><span class="line"></span><br><span class="line">apt install wget curl sudo vim git  <span class="comment"># Debian系统比较干净，安装常用的软件</span></span><br></pre></td></tr></table></figure><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/reader</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/reader</span><br><span class="line"></span><br><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><p><code>docker-compose.yml</code>来源<a href="https://github.com/hectorqin/reader/blob/master/docker-compose.yaml">官方仓库</a>，内容如下：</p><h4 id="自用版本"><a href="#自用版本" class="headerlink" title="自用版本"></a><strong>自用版本</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&#x27;3.1&#x27;</span></span><br><span class="line">services:</span><br><span class="line"></span><br><span class="line"><span class="comment"># reader 在线阅读</span></span><br><span class="line"><span class="comment"># 本人在线演示(服务器位于日本) : https://reader.nxnow.online(此域名7月过期)更换为 https://read.nxnow.top</span></span><br><span class="line"><span class="comment"># 在线演示测试账号/密码分别为guest/guest123,也可自行创建账号添加书源</span></span><br><span class="line"><span class="comment"># 书源参考 : https://github.com/NZESupB/ReadSource,书源合集下选一个合集进入网页后, Ctrl+S 保存至本地后导入网站即可,或者点击远程书源,将链接导入即可</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#docker run -d --restart=always --name=reader -e &quot;SPRING_PROFILES_ACTIVE=prod&quot; -v $(pwd)/logs:/logs -v $(pwd)/storage:/storage -p 8080:8080 hectorqin/reader</span></span><br><span class="line"><span class="comment"># 多用户版</span></span><br><span class="line"><span class="comment">#docker run -d --restart=always --name=reader -v $(pwd)/logs:/logs -v $(pwd)/storage:/storage -p 8080:8080 hectorqin/reader java -jar /app/bin/reader.jar --spring.profiles.active=prod --reader.app.secure=true --reader.app.secureKey=管理密码 --reader.app.inviteCode=注册邀请码</span></span><br><span class="line"><span class="comment"># 多用户版 使用环境变量</span></span><br><span class="line"><span class="comment">#docker run -d --restart=always --name=reader -e &quot;SPRING_PROFILES_ACTIVE=prod&quot; -e &quot;READER_APP_SECURE=true&quot; -e &quot;READER_APP_SECUREKEY=管理密码&quot; -e &quot;READER_APP_INVITECODE=注册邀请码&quot; -v $(pwd)/logs:/logs -v $(pwd)/storage:/storage -p 8080:8080 hectorqin/reader</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自用版</span></span><br><span class="line"><span class="comment">#  read_own:</span></span><br><span class="line"><span class="comment">#    image: hectorqin/reader</span></span><br><span class="line"><span class="comment">#    container_name: reader_own</span></span><br><span class="line"><span class="comment">#    restart: always</span></span><br><span class="line"><span class="comment">#    ports:</span></span><br><span class="line"><span class="comment">#      - 4395:8080</span></span><br><span class="line"><span class="comment">#    volumes:</span></span><br><span class="line"><span class="comment">#      - /home/reader/logs:/logs</span></span><br><span class="line"><span class="comment">#      - /home/reader/storage:/storage</span></span><br><span class="line"><span class="comment">#    environment:</span></span><br><span class="line"><span class="comment">#      - SPRING_PROFILES_ACTIVE=prod</span></span><br><span class="line"><span class="comment">#      - READER_APP_CACHECHAPTERCONTENT=true #是否开启缓存章节内容 V2.0</span></span><br><span class="line"><span class="comment"># 多用户版</span></span><br><span class="line">  read_all:</span><br><span class="line">    image: hectorqin/reader</span><br><span class="line">    container_name: reader <span class="comment">#容器名 可自行修改</span></span><br><span class="line">    restart: always</span><br><span class="line">    ports:</span><br><span class="line">      - 4396:8080 <span class="comment">#4396端口映射可自行修改</span></span><br><span class="line">    volumes:</span><br><span class="line">      - /root/data/docker_data/reader/logs:/logs <span class="comment">#log映射目录 /root/data/docker_data/reader/logs 映射目录可自行修改</span></span><br><span class="line">      - /root/data/docker_data/reader/storage:/storage <span class="comment">#数据映射目录 /root/data/docker_data/reader/storage 映射目录可自行修改</span></span><br><span class="line">    environment:</span><br><span class="line">      - SPRING_PROFILES_ACTIVE=prod</span><br><span class="line">      - READER_APP_SECURE=<span class="literal">true</span> <span class="comment">#开启登录鉴权，开启后将支持多用户模式</span></span><br><span class="line">      - READER_APP_CACHECHAPTERCONTENT=<span class="literal">true</span> <span class="comment">#是否开启缓存章节内容 V2.0</span></span><br><span class="line">      - READER_APP_SECUREKEY=adminpwd  <span class="comment">#管理员密码  可自行修改</span></span><br><span class="line">      <span class="comment">#- READER_APP_INVITECODE=registercode #注册邀请码,如需要取消注释 可自行修改</span></span><br><span class="line"><span class="comment"># 自动更新docker</span></span><br><span class="line">  watchtower:</span><br><span class="line">    image: containrrr/watchtower</span><br><span class="line">    container_name: watchtower</span><br><span class="line">    restart: always</span><br><span class="line">    <span class="comment"># 环境变量,设置为上海时区</span></span><br><span class="line">    environment:</span><br><span class="line">        - TZ=Asia/Shanghai</span><br><span class="line">    volumes:</span><br><span class="line">      - /var/run/docker.sock:/var/run/docker.sock</span><br><span class="line">    <span class="built_in">command</span>: reader watchtower --cleanup --schedule <span class="string">&quot;0 0 4 * * *&quot;</span></span><br><span class="line">    <span class="comment"># 仅更新reader与watchtower容器,如需其他自行添加 &#x27;容器名&#x27; ,如:reader watchtower redis</span></span><br><span class="line">    <span class="comment"># --cleanup 更新后清理旧版本镜像</span></span><br><span class="line">    <span class="comment"># --schedule 自动检测更新 crontab定时(限定6位crontab) 此处代表凌晨4点整</span></span><br></pre></td></tr></table></figure><h4 id="视频演示版本"><a href="#视频演示版本" class="headerlink" title="视频演示版本"></a>视频演示版本</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&#x27;3.1&#x27;</span></span><br><span class="line">services:</span><br><span class="line"></span><br><span class="line"><span class="comment"># reader 在线阅读</span></span><br><span class="line"><span class="comment"># 第三方在线演示(服务器位于日本)：https://reader.nxnow.top</span></span><br><span class="line"><span class="comment"># 在线演示测试账号/密码分别为guest/guest123，也可自行创建账号添加书源，不定期删除长期未登录账号</span></span><br><span class="line"><span class="comment"># 书源参考 : https://github.com/NZESupB/ReadSource，书源合集下选一个合集进入网页后，Ctrl+S 保存至本地后导入网站即可，或者点击远程书源，将链接导入即可</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 单用户版</span></span><br><span class="line"><span class="comment">#docker run -d --restart=always --name=reader -e &quot;SPRING_PROFILES_ACTIVE=prod&quot; -v $(pwd)/logs:/logs -v $(pwd)/storage:/storage -p 8080:8080 hectorqin/reader</span></span><br><span class="line"><span class="comment"># 多用户版</span></span><br><span class="line"><span class="comment">#docker run -d --restart=always --name=reader -e &quot;SPRING_PROFILES_ACTIVE=prod&quot; -e &quot;READER_APP_SECURE=true&quot; -e &quot;READER_APP_SECUREKEY=管理密码&quot; -e &quot;READER_APP_INVITECODE=注册邀请码&quot; -v $(pwd)/logs:/logs -v $(pwd)/storage:/storage -p 8080:8080 hectorqin/reader</span></span><br><span class="line"></span><br><span class="line">  reader:</span><br><span class="line">    image: hectorqin/reader</span><br><span class="line">    <span class="comment">#image: hectorqin/reader:openj9-latest #docker镜像，arm64架构和小内存机器可以使用</span></span><br><span class="line">    container_name: reader <span class="comment">#容器名 可自行修改</span></span><br><span class="line">    restart: always</span><br><span class="line">    <span class="comment">#限制镜像最大资源占用(可选) 低内存(&lt;=2G)可考虑限制 使用此方式启动需加--compatibility,例如   docker-compose --compatibility up -d</span></span><br><span class="line">    <span class="comment">#deploy:</span></span><br><span class="line">      <span class="comment">#resources:</span></span><br><span class="line">        <span class="comment">#limits:  #最大限制资源</span></span><br><span class="line">          <span class="comment">#cpus: &#x27;0.50&#x27; #cpu建议不做限制,保持注释即可,1表示100%</span></span><br><span class="line">          <span class="comment">#memory: 1024M</span></span><br><span class="line">        <span class="comment">#reservations:  #保留最小资源</span></span><br><span class="line">          <span class="comment">#cpus: 0.25</span></span><br><span class="line">          <span class="comment">#memory: 256M</span></span><br><span class="line">    ports:</span><br><span class="line">      - 4396:8080 <span class="comment">#4396端口映射可自行修改</span></span><br><span class="line">    volumes:</span><br><span class="line">      - /root/data/docker_data/reader/logs:/logs <span class="comment">#log映射目录 /home/reader/logs 映射目录可自行修改</span></span><br><span class="line">      - /root/data/docker_data/reader/storage:/storage <span class="comment">#数据映射目录 /home/reader/storage 映射目录可自行修改</span></span><br><span class="line">      <span class="comment">#可配置默认书源,默认书源存放于数据映射目录中:storage/data/default/bookSource.json</span></span><br><span class="line">      <span class="comment">#书源参考(大部分可通用):https://www.legado.top/blog/book-source</span></span><br><span class="line">      <span class="comment">#wget -c https://namofree.gitee.io/yuedu3/legado3_booksource_by_Namo.json -O /home/reader/storage/data/default/bookSource.json</span></span><br><span class="line">    environment:</span><br><span class="line">      - SPRING_PROFILES_ACTIVE=prod</span><br><span class="line">      - READER_APP_USERLIMIT=50 <span class="comment">#用户上限,默认50</span></span><br><span class="line">      - READER_APP_USERBOOKLIMIT=200 <span class="comment">#用户书籍上限,默认200</span></span><br><span class="line">      - READER_APP_CACHECHAPTERCONTENT=<span class="literal">true</span> <span class="comment">#开启缓存章节内容 V2.0</span></span><br><span class="line">      <span class="comment"># 下面都是多用户模式配置</span></span><br><span class="line">      - READER_APP_SECURE=<span class="literal">true</span> <span class="comment">#开启登录鉴权，开启后将支持多用户模式</span></span><br><span class="line">      - READER_APP_SECUREKEY=adminpwd  <span class="comment">#管理员密码  建议修改</span></span><br><span class="line">      - READER_APP_INVITECODE=registercode <span class="comment">#注册邀请码 建议修改,如不需要可注释或删除</span></span><br><span class="line"><span class="comment"># 自动更新docker</span></span><br><span class="line">  watchtower:</span><br><span class="line">    image: containrrr/watchtower</span><br><span class="line">    container_name: watchtower</span><br><span class="line">    restart: always</span><br><span class="line">    <span class="comment"># 环境变量,设置为上海时区</span></span><br><span class="line">    environment:</span><br><span class="line">        - TZ=Asia/Shanghai</span><br><span class="line">    volumes:</span><br><span class="line">      - /var/run/docker.sock:/var/run/docker.sock</span><br><span class="line">    <span class="built_in">command</span>: reader watchtower --cleanup --schedule <span class="string">&quot;0 0 4 * * *&quot;</span></span><br><span class="line">    <span class="comment"># 仅更新reader与watchtower容器,如需其他自行添加 &#x27;容器名&#x27; ,如:reader watchtower nginx</span></span><br><span class="line">    <span class="comment"># --cleanup 更新后清理旧版本镜像</span></span><br><span class="line">    <span class="comment"># --schedule 自动检测更新 crontab定时(限定6位crontab) 此处代表凌晨4点整</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：VPS的内存最好大于1G，可以再设置1G的SWAP，本项目内容存储在内存中～</p></blockquote><p>设置SWAP可以用脚本:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O box.sh https://raw.githubusercontent.com/BlueSkyXN/SKY-BOX/main/box.sh &amp;&amp; <span class="built_in">chmod</span> +x box.sh &amp;&amp; clear &amp;&amp; ./box.sh</span><br></pre></td></tr></table></figure><p>没问题的话，<code>ctrl+x</code>退出，按<code>y</code>保存，<code>enter</code>确认。</p><p>查看端口是否被占用，输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:4396  <span class="comment">#查看4396端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用，可以运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>访问：<code>http:服务ip:4396</code> 即可。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的IP。</p><p>2、遇到访问不了的情况，请在宝塔面板的防火墙和服务商的后台防火墙里打开对应端口。</p></blockquote><h3 id="5-2-更新"><a href="#5-2-更新" class="headerlink" title="5.2 更新"></a>5.2 更新</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/reader  <span class="comment"># 进入docker-compose所在的文件夹</span></span><br><span class="line">docker-compose pull    <span class="comment"># 拉取最新的镜像</span></span><br><span class="line">docker-compose up -d   <span class="comment"># 重新更新当前镜像</span></span><br></pre></td></tr></table></figure><p>利用Docker-compose搭建的应用，更新非常容易～</p><h3 id="5-3-卸载"><a href="#5-3-卸载" class="headerlink" title="5.3 卸载"></a>5.3 卸载</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i  <span class="comment"># 切换到root</span></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/reader  <span class="comment"># 进入docker-compose所在的文件夹</span></span><br><span class="line">docker-compose down    <span class="comment"># 停止容器，此时不会删除映射到本地的数据</span></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/reader  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>利用Docker-compose搭建的应用，删除也非常容易～</p><h2 id="6-反向代理（必须）"><a href="#6-反向代理（必须）" class="headerlink" title="6. 反向代理（必须）"></a>6. 反向代理（必须）</h2><blockquote><p><strong>此项目和别的项目不同，必须采用https形式，否则浏览器无法加密，无法使用。</strong></p></blockquote><h3 id="6-1-利用Nginx-Proxy-Manager"><a href="#6-1-利用Nginx-Proxy-Manager" class="headerlink" title="6.1 利用Nginx Proxy Manager"></a>6.1 利用Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p>之后，登陆Nginx Proxy Manager（不会的看这个：<strong>安装Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称NPM）会用到<code>80</code>、<code>443</code>端口，所以本机不能占用（比如原来就有Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom:50%;" /><img src="https://img.laoda.de/i/2022/05/03/hcsx34_7.webp" alt="image-20220503104939490" style="zoom: 50%;" /><blockquote><p> 注意填写对应的<code>域名</code>、<code>IP</code>和<code>端口</code>，按文章来的话，应该是<code>4396</code></p></blockquote><p><strong>IP填写：</strong></p><p>如果Nginx Proxy Manager和reader在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的Docker容器内部IP。</p><p>否则直接填<code>cryptgeon所在的服务器IP</code>就行。</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom:50%;" /><p>再次打开，勾选这些：</p><img src="https://img.laoda.de/i/2022/05/03/hdck5x_7.webp" alt="image-20220503105031748" style="zoom:50%;" /><p>然后就可以用域名来安装访问了。</p><h2 id="7-使用教程"><a href="#7-使用教程" class="headerlink" title="7. 使用教程"></a>7. 使用教程</h2><p>看咕咕的视频，或者自己研究，看<a href="https://github.com/hectorqin/reader/blob/master/doc.md">文档</a></p><h3 id="7-1-书源地址（请支持正版书籍）"><a href="#7-1-书源地址（请支持正版书籍）" class="headerlink" title="7.1 书源地址（请支持正版书籍）"></a>7.1 书源地址（请支持正版书籍）</h3><p><a href="https://github.com/XIU2/Yuedu">https://github.com/XIU2/Yuedu</a></p><blockquote><p>数量不多，因为我觉得质量比数量更重要（当然我也不保证质量就一定多么好哈），我以前也用过那些几百上千个的书源列表，杂七杂八太乱了，质量参差不齐，而且正常情况下大家也就主用几个书源罢了。。。</p></blockquote><p><code>https://blog.3cat.cc/142.html</code></p><blockquote><p>本书源集成了1000+个源，基本涵盖全网！<br>为了长久使用，请勿滥用！</p></blockquote><p>书源：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://shuyuan.mgz6.cc/shuyuan/84083d2be227881b0e3b90b9cd01c685.json</span><br></pre></td></tr></table></figure><blockquote><p><code>json</code>的就是可以直接导入的<br>网址：</p></blockquote><p><code>http://yck.mumuceo.com/yuedu/shuyuan/index.html</code></p><blockquote><p>里面有很多书源</p></blockquote><h2 id="8-结尾"><a href="#8-结尾" class="headerlink" title="8. 结尾"></a>8. 结尾</h2><p>祝大家用得开心，有问题可以去GitHub提<a href="https://github.com/hectorqin/reader/issues">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，有能力给项目做贡献的同学，也欢迎积极<a href="https://github.com/hectorqin/reader/issues">加入到项目</a>中来，贡献自己的一份力量！</p><h2 id="9-参考资料"><a href="#9-参考资料" class="headerlink" title="9. 参考资料"></a>9. 参考资料</h2><p>GitHub原项目地址：<a href="https://github.com/hectorqin/reader">https://github.com/hectorqin/reader</a>（617 star）</p><p><a href="https://hostloc.com/thread-1010700-1-3.html">https://hostloc.com/thread-1010700-1-3.html</a></p><p><a href="https://github.com/XIU2/Yuedu">https://github.com/XIU2/Yuedu</a></p><p><a href="https://blog.3cat.cc/142.html">https://blog.3cat.cc/142.html</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> reader </tag>
            
            <tag> 小说阅读器 </tag>
            
            <tag> 网文阅读 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>aapanel（宝塔面板）SSL证书申请经常错误的解决方法</title>
      <link href="/archives/aapanel-ssl-issues/"/>
      <url>/archives/aapanel-ssl-issues/</url>
      
        <content type="html"><![CDATA[<h2 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h2><p>最近，咕咕发现装的aapanel面板上的站点列表中的ssl证书一栏，都显示 “Not Set （未设置）”，申请SSL证书，也经常跳转一下，又没了，再次点击还是跳转一下页面，又没了，多点击几次，甚至出现当天SSL证书申请超过限制的提示，非常蛋疼。</p><img src="https://img.laoda.de/i/2022/03/18/j24dru.webp" style="zoom:50%;" /><p>还有时候，SSL证书这边直接空白了，但网站是正常访问的。</p><p>点击了右上角的<code>修复</code>和<code>重启面板</code>，情况还是一样。</p><p>咕咕的aapanel版本是<code>6.8.22</code>，服务器操作系统是<code>Debian 11</code>。</p><p><img src="https://img.laoda.de/i/2022/03/18/j2qdo4.webp"></p><h2 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h2><p>官方给的解决方法：</p><p>更新<code>pyOpenSSL</code>包，然后再试试。</p><p>具体操作：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">btpip install --upgrade pyOpenSSL</span><br><span class="line">bt reload</span><br></pre></td></tr></table></figure><p>实测有效。</p>]]></content>
      
      
      <categories>
          
          <category> 宝塔面板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 宝塔面板 </tag>
            
            <tag> 宝塔 </tag>
            
            <tag> aapanel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx Proxy Manager忘记登陆账号/密码了怎么办？</title>
      <link href="/archives/reset-password-for-nginxproxymanager/"/>
      <url>/archives/reset-password-for-nginxproxymanager/</url>
      
        <content type="html"><![CDATA[<p>其实这个问题在<a href="https://github.com/NginxProxyManager/nginx-proxy-manager/issues/230">官方的issues</a>上有人提过，并也有详细的回答，这边只是做一个简单的中文记录。</p><h2 id="步骤1"><a href="#步骤1" class="headerlink" title="步骤1"></a>步骤1</h2><p>在运行包含数据库的docker容器的机器上运行这些命令。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it nginxproxymanager_db_1 sh  <span class="comment"># nginxproxymanager_db_1这边改成你自己的容器名，可以通过docker ps 查看到</span></span><br><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><p>然后你需要输入当时给数据库设置的root密码。</p><p>可以进入到NPM的<code>docker-compose</code>所在的文件夹，通过下面命令查看：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> docker-compose.yml</span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2022/05/02/12b83jl_7.webp" alt="image-20220502231651136" style="zoom:50%;" /><p>输入完密码之后，继续输入以下命令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">USE npm;</span><br><span class="line">UPDATE user SET is_deleted=1;</span><br><span class="line">quit</span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><h2 id="步骤2"><a href="#步骤2" class="headerlink" title="步骤2"></a>步骤2</h2><p>如果你的NPM容器一直在运行，现在可以重新启动它。如果它还没有运行，现在就启动它。</p><h2 id="步骤3"><a href="#步骤3" class="headerlink" title="步骤3"></a>步骤3</h2><p>在浏览器中访问你的NPM，用下面的账号密码登录：</p><blockquote><p><strong>登录：</strong> <a href="mailto:&#x61;&#100;&#x6d;&#x69;&#x6e;&#x40;&#101;&#120;&#x61;&#x6d;&#x70;&#108;&#x65;&#46;&#99;&#111;&#109;">&#x61;&#100;&#x6d;&#x69;&#x6e;&#x40;&#101;&#120;&#x61;&#x6d;&#x70;&#108;&#x65;&#46;&#99;&#111;&#109;</a><br><strong>密码：</strong> changeme</p></blockquote><h2 id="步骤4"><a href="#步骤4" class="headerlink" title="步骤4"></a>步骤4</h2><p>不出意外的话，你现在已经创建了一个可以登录的管理员用户。</p><p>你可以选择以后只使用这个用户作为管理员，或者如果你之前的账户设置过网站的代理，你想要重新恢复之前那些设置的网站，（即启用旧账户），那么可以执行以下命令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it nginxproxymanager_db_1 sh   <span class="comment"># 同上，nginxproxymanager_db_1这边改成你自己的容器名</span></span><br><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><p>再次输入root密码，如步骤1：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">USE npm;</span><br><span class="line">UPDATE user SET is_deleted=0;</span><br><span class="line">quit</span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><p>不出意外，现在你就已经恢复了之前创建的代理网站了。</p><h2 id="参考资料："><a href="#参考资料：" class="headerlink" title="参考资料："></a>参考资料：</h2><p><a href="https://github.com/NginxProxyManager/nginx-proxy-manager/issues/230">https://github.com/NginxProxyManager/nginx-proxy-manager/issues/230</a></p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NginxProxyManager </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩儿的Docker项目】自建一个加密鸽（可以阅后即焚的共享笔记或文件服务）——cryptgeon</title>
      <link href="/archives/docker-compose-install-cryptgeon/"/>
      <url>/archives/docker-compose-install-cryptgeon/</url>
      
        <content type="html"><![CDATA[<img src="https://img.laoda.de/i/2022/05/02/inwir8_7.webp" alt="logo" style="zoom: 33%;" /><h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1. 介绍"></a>1. 介绍</h2><p>cryptgeon是一个安全的、开源的共享笔记或文件服务，其灵感来源于<a href="https://privnote.com/">PrivNote</a>。</p><p>后台是用Rust写的，前台是用Svelte和Typecript。</p><p>GitHub 开源项目，支持Docker搭建。</p><h3 id="1-1-特点"><a href="#1-1-特点" class="headerlink" title="1.1 特点"></a>1.1 特点</h3><p>咕咕这边简单在网上也<del>抄~~~~搜集</del>了一些特点，供大家参考（翻译自<a href="https://github.com/cupcakearmy/cryptgeon">GitHub</a>的README）：</p><ul><li>GitHub完全开源，可以免费使用</li><li>Docker搭建，10分钟搞定</li><li>在浏览器中加密，服务器端无法解密内容</li><li>可以设置浏览次数或指定分享时间，超出次数（最大可设置<code>100次</code>）或者时间后（最长可设置<code>360分钟</code>），文件永久消失（服务器所有者也无法看到）</li><li>文件存在内存中，没有持久性</li><li>支持黑暗模式</li></ul><h3 id="1-2-工作原理"><a href="#1-2-工作原理" class="headerlink" title="1.2 工作原理"></a>1.2 工作原理</h3><p>每个笔记都会生成一个的ID（256位）和密钥256（位）。这个ID用于保存和检索笔记。</p><p>然后，在客户端用密钥以GCM模式对笔记进行AES加密，之后后发送到服务器。</p><p>数据只存储在内存中，不会持久化到硬盘上（意味着重启数据会丢失）。</p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p>GitHub原项目地址：<a href="https://github.com/cupcakearmy/cryptgeon">https://github.com/cupcakearmy/cryptgeon</a>（205 star）</p><p>Demo地址：<a href="https://cryptgeon.nicco.io/">https://cryptgeon.nicco.io</a></p><p>官方Docker地址：<a href="https://hub.docker.com/r/cupcakearmy/cryptgeon">https://hub.docker.com/r/cupcakearmy/cryptgeon</a></p><p>直接丢几个图片：</p><p><img src="https://img.laoda.de/i/2022/05/02/ixyi0m_7.webp" alt="screenshot"></p><h2 id="3-搭建环境"><a href="#3-搭建环境" class="headerlink" title="3. 搭建环境"></a>3. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器24元&#x2F;月VPS一台</del>展示用的服务器是<a href="https://netcup-sonderangebote.de/">Netcup</a>特价款，本期搭建用的是<a href="https://loll.cc/vultr">Vultr</a>的服务器，按小时计费，可随时销毁（最好是选<strong>非大陆的服务器</strong>）（<a href="https://loll.cc/tx">腾讯轻量购买链接</a>）<a href="https://loll.cc/hz">Hetzner注册免费得25欧试用金有效期一个月</a></li><li>系统：Debian 10（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本</a> 非必需DD用原来的系统也OK）</li><li>域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>安装好Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需】提前安装好宝塔面板海外版本aapanel，并安装好Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程采用】安装好Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><h2 id="4-搭建视频"><a href="#4-搭建视频" class="headerlink" title="4. 搭建视频"></a>4. 搭建视频</h2><p>YouTube：<a href="https://youtu.be/SrXThpfc4ow">https://youtu.be/SrXThpfc4ow</a></p><p>哔哩哔哩【高清版本可以点击去吐槽到B站观看】：<joe-bilibili bvid="BV1YB4y117b5"></joe-bilibili></p><h2 id="5-搭建方式"><a href="#5-搭建方式" class="headerlink" title="5. 搭建方式"></a>5. 搭建方式</h2><h3 id="5-1-搭建"><a href="#5-1-搭建" class="headerlink" title="5.1 搭建"></a>5.1 搭建</h3><p>服务器初始设置，参考</p><p><a href="https://blog.laoda.de/archives/vps-script"><strong>新买了一台服务器“必须”要做的6件小事</strong></a></p><p><a href="https://blog.laoda.de/archives/hello-docker">【Docker系列】不用宝塔面板，小白一样可以玩转VPS服务器！</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i <span class="comment"># 切换到root用户</span></span><br><span class="line"></span><br><span class="line">apt update -y  <span class="comment"># 升级packages</span></span><br><span class="line"></span><br><span class="line">apt install wget curl sudo vim git  <span class="comment"># Debian系统比较干净，安装常用的软件</span></span><br></pre></td></tr></table></figure><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/cryptgeon</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/cryptgeon</span><br><span class="line"></span><br><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><p><code>docker-compose.yml</code>填入以下内容：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># docker-compose.yml</span></span><br><span class="line">version: <span class="string">&#x27;3.8&#x27;</span></span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  redis:</span><br><span class="line">    image: redis:7-alpine</span><br><span class="line"></span><br><span class="line">  app:</span><br><span class="line">    image: cupcakearmy/cryptgeon:latest</span><br><span class="line">    depends_on:</span><br><span class="line">      - redis</span><br><span class="line">    environment:</span><br><span class="line">      SIZE_LIMIT: 4 MiB</span><br><span class="line">    ports:</span><br><span class="line">      - 8080:5000</span><br></pre></td></tr></table></figure><p>下面是旧版的，留言区读者反馈无法创建加密内容，建议用上面新版yaml文件，后续大家发现搭建有问题，可以去看看文末的GitHub原仓库信息。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&#x27;3.7&#x27;</span></span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  memcached:</span><br><span class="line">    image: memcached:1-alpine</span><br><span class="line">    entrypoint: memcached -m 256M -I 8M   <span class="comment"># Limit to 128 MB Ram, 4M per entry, customize at free will. （限制最大使用128M的内存，每条项目最大使用4M内存，可以自己修改）</span></span><br><span class="line"></span><br><span class="line">  app:</span><br><span class="line">    image: cupcakearmy/cryptgeon:latest</span><br><span class="line">    depends_on:</span><br><span class="line">      - memcached</span><br><span class="line">    environment:</span><br><span class="line">      SIZE_LIMIT: 8M  <span class="comment"># 这边的4M要与上面对应</span></span><br><span class="line">    ports:</span><br><span class="line">      - 8080:5000   <span class="comment"># 冒号左边的端口8080可以改成任意你没有用过的端口</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：VPS的内存最好大于1G，可以再设置1G的SWAP，本项目内容存储在内存中～</p></blockquote><p>设置SWAP可以用脚本:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O box.sh https://raw.githubusercontent.com/BlueSkyXN/SKY-BOX/main/box.sh &amp;&amp; <span class="built_in">chmod</span> +x box.sh &amp;&amp; clear &amp;&amp; ./box.sh</span><br></pre></td></tr></table></figure><p>没问题的话，<code>ctrl+x</code>退出，按<code>y</code>保存，<code>enter</code>确认。</p><p>查看端口是否被占用，输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:8080  <span class="comment">#查看8080端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用，可以运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>访问：<code>http:服务ip:8080</code> 即可。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的IP。</p><p>2、遇到访问不了的情况，请在宝塔面板的防火墙和服务商的后台防火墙里打开对应端口。</p></blockquote><h3 id="5-2-更新"><a href="#5-2-更新" class="headerlink" title="5.2 更新"></a>5.2 更新</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/cryptgeon  <span class="comment"># 进入docker-compose所在的文件夹</span></span><br><span class="line">docker-compose pull    <span class="comment"># 拉取最新的镜像</span></span><br><span class="line">docker-compose up -d   <span class="comment"># 重新更新当前镜像</span></span><br></pre></td></tr></table></figure><p>利用Docker-compose搭建的应用，更新非常容易～</p><h3 id="5-3-卸载"><a href="#5-3-卸载" class="headerlink" title="5.3 卸载"></a>5.3 卸载</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/cryptgeon  <span class="comment"># 进入docker-compose所在的文件夹</span></span><br><span class="line">docker-compose down    <span class="comment"># 停止容器，此时不会删除映射到本地的数据</span></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/cryptgeon  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>利用Docker-compose搭建的应用，删除也非常容易～</p><h2 id="6-反向代理（必须）"><a href="#6-反向代理（必须）" class="headerlink" title="6. 反向代理（必须）"></a>6. 反向代理（必须）</h2><blockquote><p><strong>此项目和别的项目不同，必须采用https形式，否则浏览器无法加密，无法使用。</strong></p></blockquote><h3 id="6-1-利用Nginx-Proxy-Manager"><a href="#6-1-利用Nginx-Proxy-Manager" class="headerlink" title="6.1 利用Nginx Proxy Manager"></a>6.1 利用Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p>之后，登陆Nginx Proxy Manager（不会的看这个：<strong>安装Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称NPM）会用到<code>80</code>、<code>443</code>端口，所以本机不能占用（比如原来就有Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/05/02/kfes4s_7.webp" alt="image-20220502123517401" style="zoom:50%;" /><img src="https://img.laoda.de/i/2022/05/02/kfx69t_7.webp" alt="image-20220502123603513" style="zoom:50%;" /><blockquote><p> 注意填写对应的<code>域名</code>、<code>IP</code>和<code>端口</code>，按文章来的话，应该是<code>8080</code></p></blockquote><p><strong>IP填写：</strong></p><p>如果Nginx Proxy Manager和cryptgeon在同一台服务器上，可以在终端输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><p>查看对应的Docker容器内部IP。</p><p>否则直接填<code>cryptgeon所在的服务器IP</code>就行</p><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom:50%;" /><p>再次打开，勾选这些：</p><img src="https://img.laoda.de/i/2022/05/02/kg48si_7.webp" alt="image-20220502123637151" style="zoom:50%;" /><p>然后就可以用域名来安装访问了。</p><h2 id="7-使用教程"><a href="#7-使用教程" class="headerlink" title="7. 使用教程"></a>7. 使用教程</h2><p>见咕咕鸽的视频</p><h2 id="8-结尾"><a href="#8-结尾" class="headerlink" title="8. 结尾"></a>8. 结尾</h2><p>祝大家用得开心，有问题可以去GitHub提<a href="https://github.com/cupcakearmy/cryptgeon">Issues</a>，也可以在评论区互相交流探讨。</p><p>同时，有能力给项目做翻译的同学，也欢迎积极<a href="https://github.com/cupcakearmy/cryptgeon">加入到项目</a>中来，贡献自己的一份力量！</p><h2 id="9-参考资料"><a href="#9-参考资料" class="headerlink" title="9. 参考资料"></a>9. 参考资料</h2><p>GitHub原项目地址：<a href="https://github.com/cupcakearmy/cryptgeon">https://github.com/cupcakearmy/cryptgeon</a>（205 star）</p><p>Demo地址：<a href="https://cryptgeon.nicco.io/">https://cryptgeon.nicco.io</a></p><p>官方Docker地址：<a href="https://hub.docker.com/r/cupcakearmy/cryptgeon">https://hub.docker.com/r/cupcakearmy/cryptgeon</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker部署 </tag>
            
            <tag> DockerCompose </tag>
            
            <tag> cryptgeon </tag>
            
            <tag> 加密 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【VPS选购小常识】VPS线路解析不完全指南 什么是CN2 GIA？什么是AS9929、AS4837？什么是CU VIP？什么是移动CMI？如何判断回程路由？</title>
      <link href="/archives/vps-route/"/>
      <url>/archives/vps-route/</url>
      
        <content type="html"><![CDATA[<h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><p>YouTube：<a href="https://youtu.be/4_uXH8309QI">https://youtu.be/4_uXH8309QI</a></p><p>哔哩哔哩【高清版本可以点击去吐槽到B站观看】：<joe-bilibili bvid="BV1ba411a7Mv"></joe-bilibili></p><blockquote><p>00:00 前言<br>00:29 简单版本介绍<br>05:51 测试回程路由的两个脚本<br>09:01 搬瓦工CN2 GIA回程路由分析<br>10:08 斯巴达AS4837回程路由分析<br>11:15 OLinkAS9929回程路由分析<br>12:27 电信线路详解<br>16:46 什么是163线路<br>18:11 什么是CN2线路<br>19:04 什么是CN2 GT线路<br>20:28 什么是CN2 GIA线路<br>24:07 CN2线路的缺点<br>26:51 三网回程CN2 GIA的VPS哪家好？<br>27:40 联通线路详解<br>28:15 CU VIP是什么？为什么火了？<br>30:09 AS9929和CU VIP的关系<br>31:00 AS4837和AS9929哪个好？<br>33:30 AS9929和CN2 GIA哪个好？<br>34:22 CU VIP的神话终结<br>35:39 三网回程AS9929的VPS哪家好？<br>36:09 移动线路详解<br>37:06 三网回程CMI的VPS推荐<br>38:34 最后</p></blockquote><div style="position: relative; padding: 30% 45%;"><video style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" controls>    <source src="https://share.laoda.de/s/73pwku" type="video/mp4"></video></div><h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><img src="https://img.laoda.de/i/2022/04/30/x8ed6o_7.webp" alt="image-20220430200946968" style="zoom:50%;" /><p>前两天有小伙伴想让咕咕做一个VPS线路的知识点梳理，其实之前也有写过——<a href="https://blog.laoda.de/archives/cn2">【VPS各种线路】如何分辨CN2 GIA与CN2 GT？</a>今天就再整理一下，结合咕咕自己的一些经验，和大家分享一下电信、移动、联通三家的各种线路。</p><p>咕咕也在学习中，水平有限，如果发现内容有错误，欢迎在留言区指正。</p><p>我的所有小鸡在这里：<a href="https://status.laoda.de/">咕咕鸡的探针</a></p><h2 id="2-简单版本"><a href="#2-简单版本" class="headerlink" title="2. 简单版本"></a>2. 简单版本</h2><h3 id="2-1-三网简介"><a href="#2-1-三网简介" class="headerlink" title="2.1 三网简介"></a>2.1 三网简介</h3><ul><li>电信<ul><li>ChinaNet(<code>ChinaNet</code>也叫 163 骨干网，AS4134), ip以<code>202.97</code>开头. 定位于承载普通质量的互联网业务, 基建早, 带宽大, 便宜。</li><li>CN2 (<code>ChinaNet Next Carrier Network</code> 之后由中国电信发展的下一代承载网，AS4809), ip以<code>59.43</code>开头. CN2 相比较 163 网络, 带宽小, 稳定高速. CN2分为CN2 GT和CN2 GIA.</li><li>CN2 GT(<code>ChinaNet Next Carrier Network Global Transit</code> 半程走 CN2) CN2中端产品, 本身接入网络是 ChinaNet(AS4134), 省级骨干走163(去程和回程都会出现202.97节点), 出口才走 CN2(AS4809).</li><li>CN2 GIA(<code>ChinaNet Next Carrier Networ Global Internet Access</code>全程走 CN2) CN2高端线路, 本身接入网络 CN2(AS4809)，出口也是 CN2(AS4809). 部分未部署CN2 节点的省份城市, 会经163(202.97)然后接入CN2节点. CN2 GIA（<code>Global Internet Access</code>）的价格比CN2 CT（<code>Global Transit</code>）高出约3倍.</li></ul></li><li>联通<ul><li>AS4837 (联通 169 网络) 民用骨干网, 定位相当于163. 回程走海联通AS4837称之为 CU VIP.</li><li>AS9929 (联通A网, CU PM), 定位相当于CN2, 更像CN2 GT, 服务于政企大客户. AS9929的价格比AS4837贵5倍以上. 和电信的GIA差距还很大(炸起来的时候完全没法用).</li><li>AS10099 (联通国际出口, CUG). 联通出国 可能是AS4837直接出国, 或 内地AS4837&#x2F;AS9929, 出境接入AS10099.</li></ul></li><li>移动<ul><li>CMI (<code>China Mobile International Limited</code>，CMI移动自己的国际出口, AS58453-AS9808) 一般回国有Qos限速(可加钱可升级保证国内带宽) 晚高峰可能会炸</li><li>CMCB (移动商宽) 国际出口高Qos等级特权</li></ul></li></ul><p>大体上的排名: CN2 GIA  &gt;&gt; AS9929&#x2F;CN2 GT &gt;&gt; 163&#x2F;AS4837</p><blockquote><p><code>AS号码</code>即自治系统号码，是用来标识独立的自治系统的，在同一个自治系统内，使用相同内部路由协议，自治系统间使用外部路由协议（通常是BGP协议）。 申请AS号码的单位需要与两家以上（包括两家）、有不同AS号码的网络接入商进行网络互联，并计划三个月内与他们同时运行BGP协议进行外部路由。</p></blockquote><h3 id="2-2-测回程的脚本"><a href="#2-2-测回程的脚本" class="headerlink" title="2.2 测回程的脚本"></a>2.2 测回程的脚本</h3><h4 id="2-2-1-脚本一"><a href="#2-2-1-脚本一" class="headerlink" title="2.2.1 脚本一"></a>2.2.1 脚本一</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl https://raw.githubusercontent.com/zhucaidan/mtr_trace/main/mtr_trace.sh|bash  <span class="comment"># 检测回程脚本</span></span><br></pre></td></tr></table></figure><h5 id="2-2-1-1-搬瓦工"><a href="#2-2-1-1-搬瓦工" class="headerlink" title="2.2.1.1 搬瓦工"></a>2.2.1.1 <a href="https://blog.laoda.de/archives/vps-bandwagonhost">搬瓦工</a></h5><img src="https://img.laoda.de/i/2022/04/30/wai9yh_7.webp" alt="image-20220430195253213" style="zoom:50%;" /><h5 id="2-2-1-2-腾讯云香港轻量"><a href="#2-2-1-2-腾讯云香港轻量" class="headerlink" title="2.2.1.2 腾讯云香港轻量"></a>2.2.1.2 <a href="https://loll.cc/tx">腾讯云香港轻量</a></h5><img src="https://img.laoda.de/i/2022/04/30/w9w5g5_7.webp" alt="image-20220430195149496" style="zoom:50%;" /><h5 id="2-2-1-3-Cloudcone"><a href="#2-2-1-3-Cloudcone" class="headerlink" title="2.2.1.3 Cloudcone"></a>2.2.1.3 <a href="https://loll.cc/cc">Cloudcone</a></h5><img src="https://img.laoda.de/i/2022/04/30/wab1kq_7.webp" alt="image-20220430195219211" style="zoom:50%;" /><h4 id="2-2-2-脚本二"><a href="#2-2-2-脚本二" class="headerlink" title="2.2.2 脚本二"></a>2.2.2 脚本二</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O jcnf.sh https://raw.githubusercontent.com/Netflixxp/jcnfbesttrace/main/jcnf.sh</span><br><span class="line"></span><br><span class="line">bash jcnf.sh</span><br></pre></td></tr></table></figure><blockquote><p>在TraceRoute中常常会遇到中间返回<code>*</code>的情况，这是由于发送的TTL值未得到任何的交换机响应，可能是屏蔽亦可能是不存在对应交换机；</p><p>再就是比如DDoS-GUARD这样的服务商在进入其骨干网后<strong>屏蔽了ICMP协议</strong>，我们便无法通过ICMP测得在其骨干网中的路由情况，<strong>这也是对于自身骨干网的一种简单保护</strong>。</p></blockquote><h2 id="3-电信"><a href="#3-电信" class="headerlink" title="3. 电信"></a>3. 电信</h2><p><a href="https://blog.laoda.de/archives/cn2">【VPS各种线路】如何分辨CN2 GIA与CN2 GT？</a></p><p>中国电信目前拥有两条线路，一条是 <strong>163 骨干网（ChinaNet）</strong>，另一条就是 <strong>CN2 网络</strong>。</p><p><strong>所以，CN2是针对电信用户来讲的。</strong></p><h3 id="3-1-为什么会卡"><a href="#3-1-为什么会卡" class="headerlink" title="3.1 为什么会卡"></a>3.1 为什么会卡</h3><h4 id="3-1-1-丢包"><a href="#3-1-1-丢包" class="headerlink" title="3.1.1 丢包"></a>3.1.1 丢包</h4><p>上网不稳定，网络时通时断，这是丢包的典型表现。</p><p>原因是不管我们的网有多好，我们的数据都不会是以线性（就象打电话一样）传输的，中间总是有空洞。数据包的传输，不可能百分之百的能够完成，因为种种原因，总会有一定的损失。碰到这种情况，INTERNET会自动的让双方的电脑根据协议来补包。如果我们的线路好，速度快，包的损失会非常小，补包的工作也相对较易完成，因此可以近似的将我们的数据看做是无损传输。但是，如果我们的线路较差，数据的损失量就会非常大，补包工作也不可能百分之百完成。在这种情况下，数据的传输就会出现空洞，造成丢包。</p><p>以电信为例子，由于出口的带宽是有限的，电信 163 网连接国际网络，会在高峰时段，在路由出海前的最后一跳，根据优先级，策略性地人为丢包，以减轻对主网的负担(QOS)，这会让普通电信用户糟糕的外网访问质量雪上加霜。</p><h3 id="3-2-为什么网速很慢"><a href="#3-2-为什么网速很慢" class="headerlink" title="3.2 为什么网速很慢"></a>3.2 为什么网速很慢</h3><h4 id="3-2-1-绕路"><a href="#3-2-1-绕路" class="headerlink" title="3.2.1 绕路"></a>3.2.1 绕路</h4><p>同样是上海访问新加坡的服务器，一个是上海——香港——新加坡，一个是上海——日本——新加坡，还有一个是上海——洛杉矶——新加坡，很明显，这三段路程差距很大，数据传输到达目的地的时间，也就是访问的延时也变高了，你就会感觉网速很慢。</p><h3 id="3-3-什么是普通163线路"><a href="#3-3-什么是普通163线路" class="headerlink" title="3.3 什么是普通163线路"></a>3.3 什么是普通163线路</h3><p><strong>普通163:</strong> 这是最常见也是最普通的线路，也叫ChinaNet(AS4134)，也有人叫它CN1。 </p><p>163 网是中国电信建设的最早的一个网络，它为超过 1 亿的中国电信用户承载包括连往境外的，普通质量的互联网业务。身为电信用户，如果在晚上连接境外网络总是感觉卡顿，丢包高，99.99%的原因都是因为走的这张网，大家一起挤，线路就 boom 了。</p><h4 id="3-3-1-IP段表现为："><a href="#3-3-1-IP段表现为：" class="headerlink" title="3.3.1 IP段表现为："></a><strong>3.3.1 IP段表现为：</strong></h4><p>省级&#x2F;出国&#x2F;国际骨干节点都以<code>202.97</code>开头，全程没有<code>59.43</code>开头的CN2节点。</p><h3 id="3-4-什么是CN2"><a href="#3-4-什么是CN2" class="headerlink" title="3.4 什么是CN2"></a>3.4 什么是CN2</h3><p>CN2，即“ChinaNet Next Carrier Network（ChinaNet 的下一代承载网络）”，在 2005 年投入使用，最初架设的目标，是提供一个拓扑合理，架构先进，建设科学，用于满足未来 10-20 年替代 163 网成为未来新骨干网的网络（这个 flag 还未实现），CN2 网络能够同时承载语音、数据、视频、全球互联等业务，尤其是全球互联方面，相对于 163 网而言，CN2 网络的低丢包、低延时、轻负载，让众多用户趋之若鹜。</p><p>而CN2线路又分为CN2 GT线路（中端）与CN2 GIA线路（高端）两种。</p><h3 id="3-5-什么是CN2-GT线路"><a href="#3-5-什么是CN2-GT线路" class="headerlink" title="3.5 什么是CN2 GT线路"></a>3.5 什么是CN2 GT线路</h3><p><strong>CN2 GT:</strong> GT是Global Transit的缩写，CN2 GT是CN2线路的一种，但是CN2线路中的中端产品，在CN2里的等级比较低，去程和回程都会有<code>202.97</code>传统节点的出现，一般来说是<code>202.97</code>和<code>59.43</code>两种节点都会出现，并且只有在国际出口才会走<code>59.43</code> CN2节点。CN2 GT线路因为加入了<code>59.43</code>高速节点，CN2(AS4809)，线路质量会比传统163骨干网(中国电信骨干网)优秀。</p><h4 id="3-5-1-路由判断"><a href="#3-5-1-路由判断" class="headerlink" title="3.5.1 路由判断"></a>3.5.1 路由判断</h4><p>CN2 GT 产品在从<code>市级</code> →<code> 省级</code> → <code>国际出口</code>这一段走的是 <code>163</code> 网络，<code>国际出口</code> → <code>境外接入点</code>这一段汇入 <code>CN2 </code>网络，返程同理，偶尔可能会走联通的国际网络。</p><p>作为典型的半程 CN2 产品，CN2 GT 网络的数据包即使在国际间传送几乎不会出现丢包的情况，但依然非常容易在国内这一段拥堵时，出现被中国电信舍弃数据包的情况，CN2 GT 网络全天的丢包率在 4% ~ 6%左右，如果在夜晚间高峰期（UTC+8 18:00 至 23:00 时），丢包率可达到 8% 以上。</p><h3 id="3-6-什么是CN2-GIA线路"><a href="#3-6-什么是CN2-GIA线路" class="headerlink" title="3.6 什么是CN2 GIA线路"></a>3.6 什么是CN2 GIA线路</h3><p><strong>CN2 GIA:</strong> GIA是Global Internet Access的缩写，CN2 GIA自然也是CN2线路的一种，并且是CN2线路中的高端产品，在CN2里的等级最高，全程和回程全部走<code>59.43</code>高速节点，CN2(AS4809)。CN2 GIA线路一般比较稳定，速度较快，丢包率低。</p><h4 id="3-6-1-路由判断"><a href="#3-6-1-路由判断" class="headerlink" title="3.6.1 路由判断"></a>3.6.1 路由判断</h4><p>CN2 GIA 产品在从<code>市级</code> → <code>省级</code> → <code>国际出口</code> → <code>境外接入点</code>的过程中，全程走 <code>AS 号为 4809 </code>的路由节点，这些路由节点的 IP 地址开头一律是 <code>59.43.*.*</code>，基本上全程不会经过 <code>163</code> 网络节点。（部分偏远地区的电信用户，比如在县级、村级、非重点市级，访问境外 CN2 GIA 线路的服务器时，会经过 IP 地址为 <code>202.97.*.*</code> 的 <code>AS4314 </code>路由一跳，并入到已布设 CN2 网络的重点市级节点，随后再全程走 CN2 网络）</p><p>CN2 GIA 产品还分为单网、双网、三网三种。</p><h4 id="3-6-2-单网-CN2-GIA"><a href="#3-6-2-单网-CN2-GIA" class="headerlink" title="3.6.2 单网 CN2 GIA"></a>3.6.2 单网 CN2 GIA</h4><p>一般指的是仅中国电信用户访问去回，走 CN2 GIA 网络，联通&#x2F;移动&#x2F;教育网等用户访问过去，均走各自运营商的国际出口（典型产品为阿里云国际香港节点）；</p><h4 id="3-6-3-双网-CN2-GIA"><a href="#3-6-3-双网-CN2-GIA" class="headerlink" title="3.6.3 双网 CN2 GIA"></a>3.6.3 双网 CN2 GIA</h4><p>一般指的是中国电信&#x2F;中国联通用户访问过去，走 CN2 GIA 网络（特别地，该产品允许中国联通线路在省级跨网并入到中国电信的 CN2 网络，典型产品为标准互联的圣何塞 CN2 GIA 产品）；</p><h4 id="3-6-4-三网-CN2-GIA"><a href="#3-6-4-三网-CN2-GIA" class="headerlink" title="3.6.4 三网 CN2 GIA"></a>3.6.4 三网 CN2 GIA</h4><p>一般指的是中国电信&#x2F;中国联通&#x2F;中国移动三网用户的去回访问，均会在省级并入到 CN2 网络，适用性最强（典型产品为搬瓦工的 DC9、DC6 机房）。</p><h3 id="3-7-怎么判断普通163线路"><a href="#3-7-怎么判断普通163线路" class="headerlink" title="3.7 怎么判断普通163线路"></a>3.7 怎么判断普通163线路</h3><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-5-8/1620483028504-image.png"></p><p>全程都没有<code>59.43</code>出现，晚高峰的时候速度会受到较大的影响。</p><h3 id="3-8-怎么判断CN2-GT线路"><a href="#3-8-怎么判断CN2-GT线路" class="headerlink" title="3.8 怎么判断CN2 GT线路"></a>3.8 怎么判断CN2 GT线路</h3><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-5-8/1620483382675-image.png"></p><p>服务器来自hostdare。这是一个非常典型的 CN2 GT 网络，注意在国内走的时候，一定是 <code>202.97</code> 路由，国际出口点和出海后才走的 <code>59.43</code> 路由。</p><p>就是因为国内段都是走的163骨干网，所以晚高峰还是会拥堵的！</p><h3 id="3-9-怎么判断CN2-GIA线路"><a href="#3-9-怎么判断CN2-GIA线路" class="headerlink" title="3.9 怎么判断CN2 GIA线路"></a>3.9 怎么判断CN2 GIA线路</h3><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-5-8/1620482895714-image.png"></p><p>服务器来自腾讯云香港轻量服务器。这是一个非常典型的 CN2 GIA 网络，全程 <code>59.43</code>。</p><p>因为全程都走了<code>59.43</code>，所以不会受到163骨干网晚高峰拥堵的影响，速度还是很快。</p><blockquote><p>注意：部分偏远地区的电信用户（比如在县级、村级、非重点市级）访问境外 CN2 GIA 线路的服务器时，会经过 IP 地址为 <code>202.97.*.*</code> 的 <code>AS4314</code> 路由一跳，并入到已布设 CN2 网络的重点市级节点，随后再全程走 CN2 网络。</p></blockquote><blockquote><p>对于于GT与GIA的区别，个人就推荐一个最简单的方法，在IPIP.NET选择一个四川电信的节点，如果去程在成都进入CN2骨干网就是GIA，如果在上海或者广州那就是GT。此方法同样适用于陕西、江苏等具有CN2民用互联点的省份，只要出现了在北上广外跨入CN2骨干网则一定是GIA网络。</p></blockquote><p><img src="https://img.laoda.de/i/2022/05/01/qxkyv9_7.webp" alt="img"></p><h3 id="3-10-CN2线路的缺点"><a href="#3-10-CN2线路的缺点" class="headerlink" title="3.10 CN2线路的缺点"></a>3.10 CN2线路的缺点</h3><h4 id="3-10-1-贵"><a href="#3-10-1-贵" class="headerlink" title="3.10.1 贵"></a>3.10.1 贵</h4><p>在没有购买昂贵的政企专线网络或氮气瓶加速服务的情况下，中国电信普通宽带用户连接海外节点具体走何种线路，取决于对方节点采用了何种路由自治协议，当然，决定它并不是靠心情，而是要和接入的电信运营商签署协议，一旦签署了走何种协议，如纯 CN2 网络，势必要向中国电信缴纳一笔高昂的 CN2 网络使用费用（最后这笔钱还得由用户承担），这就导致支持 CN2 GIA 网络的 VPS 产品价格最昂贵，CN2 GT 价格其次，163 网最为低廉（不用向中国电信缴纳一笔专门优化中国线路的银子）</p><h4 id="3-10-2-一打就瘫痪"><a href="#3-10-2-一打就瘫痪" class="headerlink" title="3.10.2 一打就瘫痪"></a>3.10.2 一打就瘫痪</h4><p>由于担负的网络流量并不高（163骨干网承担了约 <code>85%</code> 的网络流量，其余的 <code>15%</code> 流量，由 CN2 网络承担），冗余量不够，CN2 网络的防御力比较脆弱。</p><p>比如说，VPS 商之间同行攻击的情况屡见不鲜，所以很容易发现某家 CN2 GIA 网络的 VPS 一旦被打（DDoS攻击），毫无还手之力，整个网络会陷入瘫痪，只有等硬扛过去，该家的 CN2 GIA 网络才能重新恢复使用。</p><p>最明显的例子就是搬瓦工家的服务器，一被DDOS，马上进小黑屋。</p><h3 id="3-11-CN2-GIA-哪家好？"><a href="#3-11-CN2-GIA-哪家好？" class="headerlink" title="3.11 CN2 GIA 哪家好？"></a>3.11 CN2 GIA 哪家好？</h3><p>对于想体验CN2 GIA的小伙伴，这里推荐几家在售 CN2 GIA VPS 的商家，都是咕咕自己购买过且使用过一段时间觉得不错的。</p><ul><li><a href="https://bwg.laoda.de/">Bandwagonhost（搬瓦工）</a>在售香港和美国洛杉矶的CN2 GIA，最便宜为 $79.99 一年，结合优惠码<code>BWH3HYATVBJW</code>差不多$74 一年，经常无货，需要蹲一波，也可以直接买现货，不过贵一些，【<a href="https://blog.laoda.de/archives/vps-bandwagonhost">点击查看 Bandwagonhost（搬瓦工） 最新优惠活动</a>】</li><li><a href="https://loll.cc/dmit">DMIT VPS</a>——搬瓦工CN2 GIA 线路的上游服务商，目前DMIT的日本机房有lite和pro套餐，前者是三网CMI线路，后者是CN2线路。【<a href="https://loll.cc/dmit">点击查看 DMIT VPS 官网</a>】 这家太贵，咕咕没买过 &#x3D; &#x3D;</li></ul><h2 id="4-联通"><a href="#4-联通" class="headerlink" title="4. 联通"></a>4. 联通</h2><p>以下内容<del>参考</del>抄的<a href="https://p3terx.com/archives/what-are-the-as4837-and-as9929-lines-the-origin-of-cu-vip-and-the-end-of-myth.html">CU VIP 是什么？AS4837、AS9929 线路 VPS 哪个好？</a></p><p>前段时间名为 CU VIP 线路的 VPS 火了，随之而来的 AS4837、AS9929 等代号频繁出现在广大 VPS 玩家的视野中。CU VIP 是什么？AS4837、AS9929 线路 VPS 哪个好？这篇文章将告诉你答案。</p><h3 id="4-1-AS4837-与-AS9929-的起源"><a href="#4-1-AS4837-与-AS9929-的起源" class="headerlink" title="4.1 AS4837 与 AS9929 的起源"></a>4.1 AS4837 与 AS9929 的起源</h3><p>1994 年 7 月 19 日，中国联通经国务院批准，正式挂牌成立，主要经营 GSM 移动通信业务。</p><p>1999 年 10 月 22 日，中国网通（小网通、老网通）由中科院、广电总局、铁道部、上海市政府四方出资成立，在全国 17 个城市开通互联网服务。此外，邮电部当年除了 163 网之外，在 1997 年还建设了一张中国公众多媒体通信网。这张网络很特别，完全独立于 163 网，采用私有地址 10.0.0.0&#x2F;8，只能国内互相访问，相当于是一张 “国内局域网”。如果需要访问 163 网和 In­ter­net 的话，需要找专门的代理服务器跳转。因为这张网络的接入号码为 169，故又称 169 网。网通也建设了一张自己的骨干网，就是 “中国网通公用互联网”（CNC­NET）。</p><p>2002 年，国内电信行业重组，中国电信 “南北分家”。北方九省一市电信公司从原中国电信剥离，与小网通、吉通合并，成立新的中国网通（大网通、新网通）。于是，中国网通在既有 CNC­NET 的基础上，得到了中国电信从 163 网拆出来的部分精华骨干网。为了区别于中国电信的 163 网，网通带走的这个网被称为 “CHI­NA169”（自治域为 <strong>AS4837</strong>）。</p><p>2008 年，中国电信业再次重组，中国联通和中国网通合并，变成新的中国联通。所以自然而然地接管了 CHI­NA169。网通最初的骨干网 CNC­NET（主要承载原网通 NGN 软交换、DCN 等业务）也交给联通运营。这个 CNC­NET（自治域为 <strong>AS9929</strong>）保持相对独立，后来被称为 “联通 A 网”。与之相对应的 “联通 B 网”，就是原联通建设的 IP 承载网，主要承载 2G&#x2F;3G 移动网业务的那个网。后来好像逐渐没用了，业务迁到了 A 网。</p><p>2018 年，联通将 IP 承载 A 网改名为中国联通工业（产业）互联网（China Uni­com In­dus­trial In­ter­net），简称 CUII。其定位有点像中国电信的 CN2，但这张 “吃老本” 的 <strong>A 网技术并不先进，所具备的优势仅仅是用户少，网络负荷小</strong>，所以表现也还不错，主要提供国际和国内跨地市 MPLS-VPN 和大客户互联网专线任务的承载，常用于企业宽带和 IDC，极少用于家用宽带。</p><h3 id="4-2-CU-VIP-是什么？"><a href="#4-2-CU-VIP-是什么？" class="headerlink" title="4.2 CU VIP 是什么？"></a>4.2 CU VIP 是什么？</h3><p>联通官方将 <strong>AS4837</strong> 回程路由的产品称之为 <strong>CU VIP</strong> ，实际这个产品已经存在多年了。这种企业级产品并不会对公众进行详细披露，所以非相关行业内人士对此了解甚少。目前网传的一些说法并不准确，也造成了很多人错误的理解，以讹传讹。</p><h3 id="4-3-CU-VIP-怎么火了？"><a href="#4-3-CU-VIP-怎么火了？" class="headerlink" title="4.3 CU VIP 怎么火了？"></a>4.3 CU VIP 怎么火了？</h3><p>大约在北京时间 2021 年 2 月 12 日前后，<a href="https://loll.cc/spa">Spartanhost</a> 通过上游 Cer­aNet­works 全面接入了三网回程上海联通 AS4837 的 CU VIP 线路，而后通过各大 affman 传播开来。联通因为其拥仅次于电信的国际总出口带宽，本身用户就不多，所以带宽大、负载小，再加上最近几年市场不断被中国移动蚕食，使得网络状况愈发良好。彼时这条 AS4837 线路三网都可以达到最高带宽，而且丢包极少，晚高峰稳定，加上相关 VPS 产品的价格便宜，一时间 CU VIP 几乎成为了 “稳定、速度、便宜” 的代名词。因此受到广大 MJJ 和机场主追捧，不明真相的萌新也蜂拥而至、争相上车。之后的时间里又有越来越多的商家<del>跟风</del>推出了相关产品。</p><img src="https://img.laoda.de/i/2022/05/01/p2pdwi_7.webp" style="zoom:50%;" /><h3 id="4-4-AS9929-与-CU-VIP-是什么关系？"><a href="#4-4-AS9929-与-CU-VIP-是什么关系？" class="headerlink" title="4.4 AS9929 与 CU VIP 是什么关系？"></a>4.4 AS9929 与 CU VIP 是什么关系？</h3><p>由于信息不透明，很多人只是浅显的了解到联通有个服务于政企大客户的联通 A 网 (AS9929)，而 AS4837 是民用骨干网，所以有人错误的认为 AS9929 应该叫 VIP ，实际上联通内部将 AS9929 相关产品称为 CU Pre­mium (简称 CU PM)。此时有一些机智的 affman <del>蹭热度</del>使用了 CU VIP 去推广走 AS9929 线路的 VPS ，同时也有一些不明真相的 affman 跟风，大家一起闷声发大财。在此之前 AS9929 的相关 VPS 产品似乎很难推广，自从蹭上了 CU VIP 的热度，也一跃成为了网红产品。</p><img src="https://img.laoda.de/i/2022/05/01/p2rlwm_7.webp" style="zoom:50%;" /><h3 id="4-5-AS4837-与-AS9929-哪个好？"><a href="#4-5-AS4837-与-AS9929-哪个好？" class="headerlink" title="4.5 AS4837 与 AS9929 哪个好？"></a>4.5 AS4837 与 AS9929 哪个好？</h3><p>先说结论，AS9929 线路肯定是优于 AS4837 线路的，对于 AS9929 与 AS4837 的 VPS 而言并不具备绝对优势。从下面两张回程路由图就能窥见端倪。</p><h4 id="4-5-1-AS4837-VPS-回程路由"><a href="#4-5-1-AS4837-VPS-回程路由" class="headerlink" title="4.5.1 AS4837 VPS 回程路由"></a>4.5.1 AS4837 VPS 回程路由</h4><p>国际段和国内段部分走联通 AS4837 ，然后转到相应运营商的大骨干网（图示是移动 AS9808），最终到本地运营商。</p><p><img src="https://img.laoda.de/i/2022/05/01/p41l9c_7.webp" alt="AS4837 VPS 回程路由"></p><h4 id="4-5-2-AS9929-VPS-回程路由"><a href="#4-5-2-AS9929-VPS-回程路由" class="headerlink" title="4.5.2 AS9929 VPS 回程路由"></a>4.5.2 AS9929 VPS 回程路由</h4><p>国际段走联通香港 AS10099 ，然后转国内段联通 AS9929 ，再转到相应运营商的大骨干网（图示是联通 AS4837），最终到本地运营商。</p><p><img src="https://img.laoda.de/i/2022/05/01/p4drhz_7.webp" alt="AS9929 VPS 回程路由"></p><h4 id="4-5-3-AS4837-与-AS9929-对比分析"><a href="#4-5-3-AS4837-与-AS9929-对比分析" class="headerlink" title="4.5.3 AS4837 与 AS9929 对比分析"></a>4.5.3 AS4837 与 AS9929 对比分析</h4><p>懂行的小伙伴肯定马上就看出点门路来了。没错，AS9929 只负责一部分国内段的承载，一部分承载还是得靠 AS4837 骨干网。对比 AS4837 的 VPS 走的国际出口不同，以及国内段的优势。也就是说如果上海联通 AS4837 骨干网的国际出口炸了，那么 AS4837 VPS 的网络也就会受到波及，而走联通香港 AS10099 国际出口的 AS9929 VPS 最大的优势就在于此。</p><p>有业内人士曾透露 AS9929 成本价要比 AS4837 贵 5 倍以上，所以目前市场上的 AS9929 相关 VPS 产品的带宽和流量普遍都给得非常少，价格高劝退大多数人继续保持低负载是它最后的护城河。而 AS4837 的 VPS 因价格相对更便宜所以一开始上车的人就很多，所以网络状态也已逐渐开始疲软，经常会有不稳定现象。</p><h3 id="4-6-AS9929-与-CN2-GIA-哪个好？"><a href="#4-6-AS9929-与-CN2-GIA-哪个好？" class="headerlink" title="4.6 AS9929 与 CN2 GIA 哪个好？"></a>4.6 AS9929 与 CN2 GIA 哪个好？</h3><p>有人拿 AS9929 和 CN2 GIA 划等号，其实看前面的回程路由就知道它更像是 CN2 GT 。虽然与 CN2 GIA 还是有一定差距的，但价格相对比较便宜，所以它也不失为在预算有限情况下的替代品，至少体验是绝对好于一般线路的。</p><h3 id="4-7-CU-VIP-神话的终结"><a href="#4-7-CU-VIP-神话的终结" class="headerlink" title="4.7 CU VIP 神话的终结"></a>4.7 CU VIP 神话的终结</h3><p>随着近期中国电信 163 骨干网迎来了史上最大的一次汇聚层扩容和区域划分，已经有使用电信宽带的小伙伴发现之前在晚高峰炸成狗的廉价美西三网直连 VPS 已经能随随便便跑满带宽、丝般顺滑的播放 4K 甚至 8K 视频。而此时随着 AS4837 上车的人越来越多也使得其优势变得不再明显。</p><p>至此，CU VIP 短短不到两个月时间的神话就此终结。至于 AS9929 ，未来还将迎来后起之秀中国移动 CM2 的挑战，以及中国电信 CN2 持续扩容的碾压。这场 ISP 三国杀似乎留给中国联通的时间已经不多了。</p><h3 id="4-8-AS9929-VPS-哪家好？"><a href="#4-8-AS9929-VPS-哪家好？" class="headerlink" title="4.8 AS9929 VPS 哪家好？"></a>4.8 AS9929 VPS 哪家好？</h3><p>对于预算有限不能上 CN2 GIA 线路 VPS 或者想体验 AS9929 VPS 的小伙伴，这里推荐两家在售 AS9929 VPS 的商家，其中Olink是咕咕目前博客的服务器，使用过一段时间觉得还不错的。（欢迎大家在留言区反馈博客打开速度！）</p><ul><li><a href="https://loll.cc/cp"><strong>CloudPowerall</strong></a> 在售洛杉矶 Cera 机房的 AS9929 VPS，最低 $26.99 一年，性价非常比高。【<a href="https://loll.cc/cp">点击查看 CloudPowerall 最新优惠活动</a>】 <strong>这家咕咕没买过</strong></li><li><a href="https://loll.cc/olink"><strong>OLink Cloud</strong></a> 在售市面上极为少见的德国 AS9929 VPS 与圣何塞 G 口大带宽 AS9929 VPS。【<a href="https://blog.laoda.de/archives/olink">点击查看 OLink Cloud 最新优惠活动</a>】</li></ul><h3 id="AS4837-VPS-推荐："><a href="#AS4837-VPS-推荐：" class="headerlink" title="AS4837 VPS 推荐："></a>AS4837 VPS 推荐：</h3><ul><li><a href="https://blog.laoda.de/archives/spartanhost">斯巴达</a></li><li><a href="https://loll.cc/iON">iON</a></li></ul><hr><h3 id="4-9-参考文献"><a href="#4-9-参考文献" class="headerlink" title="4.9 参考文献"></a>4.9 参考文献</h3><ul><li><a href="https://www.ithome.com/0/524/799.htm">大话中国骨干网（下）</a></li><li><a href="https://zhuanlan.zhihu.com/p/64467370">国内主流网络运营商国际连接线路简谈</a></li></ul><h2 id="5-移动"><a href="#5-移动" class="headerlink" title="5. 移动"></a>5. 移动</h2><p>中国移动运营有CMNET、CMHK、CMI三张骨干网，其中CMI为CMNET和CMHK提供国际网络Transit。</p><p>CMI出售的带宽仅保证本地速度，不保证到达CMNET的速度。这里就想说一句，香港移动即使是香港最便宜的大陆直连带宽，也要十几刀1M，还是比北美CN2贵，而且那个质量是很一言难尽的。</p><p>切记不要被延迟冲昏了头脑，一切还是要以实际体验为准的～</p><h3 id="5-1-移动CMI-哪家好？"><a href="#5-1-移动CMI-哪家好？" class="headerlink" title="5.1 移动CMI 哪家好？"></a>5.1 移动CMI 哪家好？</h3><p>对于想体验三网回程CMI的小伙伴，这里推荐一家在售三网回程CMI VPS 的商家， <strong>这家太贵，咕咕没买过 &#x3D; &#x3D;</strong> 。</p><ul><li><a href="https://loll.cc/dmit">DMIT VPS</a>——搬瓦工CN2 GIA 线路的上游服务商，目前DMIT的日本机房有lite和pro套餐，前者是三网CMI线路，后者是CN2线路。【<a href="https://loll.cc/dmit">点击查看 DMIT VPS 官网</a>】 <strong>这家太贵，咕咕没买过 &#x3D; &#x3D;</strong></li></ul><h4 id="5-1-1-优惠码"><a href="#5-1-1-优惠码" class="headerlink" title="5.1.1 优惠码"></a>5.1.1 优惠码</h4><p>1）年付7折循环优惠码：**<a href="https://www.dmit.io/aff.php?aff=3967"> Lite-Annually-Recur-30OFF</a>**</p><p>2）半年付8折循环优惠码： <strong><a href="https://www.dmit.io/aff.php?aff=3967">Lite-Semi-Annually-Recur-20OFF</a></strong></p><p>注意：上述两个折扣码仅适用于 STARTER 及以上规格的 Lite 产品，TINY 不包含在内。以下表格中的价格最低的vps即为TINY系列。</p><h4 id="5-1-2-日本PVM-TYO-Lite型VPS"><a href="#5-1-2-日本PVM-TYO-Lite型VPS" class="headerlink" title="5.1.2 日本PVM.TYO.Lite型VPS"></a>5.1.2 日本PVM.TYO.Lite型VPS</h4><p>日本三网CMI，测试IP：<code>154.31.112.1</code></p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>带宽</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1核</td><td>0.75G</td><td>10G</td><td>2.0T</td><td>1G</td><td>$6.9&#x2F;月</td><td><strong><a href="https://www.dmit.io/aff.php?aff=3967&pid=131">购买</a></strong></td></tr><tr><td>1核</td><td>1.5G</td><td>20G</td><td>4.0T</td><td>1G</td><td>$12.9&#x2F;月</td><td><strong><a href="https://www.dmit.io/aff.php?aff=3967&pid=132">购买</a></strong></td></tr><tr><td>2核</td><td>2.0G</td><td>40G</td><td>6.0T</td><td>2G</td><td>$21.9&#x2F;月</td><td><a href="https://www.dmit.io/aff.php?aff=3967&pid=133"><strong>购买</strong></a></td></tr><tr><td>2核</td><td>4.0G</td><td>60G</td><td>8.0T</td><td>2G</td><td>$32.9&#x2F;月</td><td><a href="https://www.dmit.io/aff.php?aff=3967&pid=134"><strong>购买</strong></a></td></tr><tr><td>4核</td><td>4.0G</td><td>80G</td><td>12T</td><td>3G</td><td>$49.9&#x2F;月</td><td><strong><a href="https://www.dmit.io/aff.php?aff=3967&pid=135">购买</a></strong></td></tr><tr><td>4核</td><td>8.0G</td><td>100G</td><td>22T</td><td>3G</td><td>$99.9&#x2F;月</td><td><a href="https://www.dmit.io/aff.php?aff=3967&pid=136"><strong>购买</strong></a></td></tr></tbody></table><ul><li>他们家的服务器CPU清一色的<code>AMD EPYC 7402P</code>，Average I&#x2F;O Speed : <code>1100+ MB/s</code></li><li>流媒体测试，IP不错，既能看奈菲也能看Disney+（不确定是不是都能解锁）</li><li>国内、国外测速，晚高峰测试，跑的速度都还不错</li><li>线路三网回程皆走的移动CMI线路，去程各家都各家的骨干线路</li></ul><h2 id="6-参考文献"><a href="#6-参考文献" class="headerlink" title="6. 参考文献"></a>6. 参考文献</h2><p><a href="https://hostcsr.com/77.html">https://hostcsr.com/77.html</a></p><p><a href="https://ip.skk.moe/">https://ip.skk.moe/</a></p><p><a href="https://p3terx.com/archives/what-are-the-as4837-and-as9929-lines-the-origin-of-cu-vip-and-the-end-of-myth.html">https://p3terx.com/archives/what-are-the-as4837-and-as9929-lines-the-origin-of-cu-vip-and-the-end-of-myth.html</a></p><p><a href="https://luotianyi.vc/4242.html">https://luotianyi.vc/4242.html</a></p><p><a href="https://vps.dance/vps-routes.html">https://vps.dance/vps-routes.html</a></p><p><a href="https://ip.skk.moe/">https://ip.skk.moe/</a></p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 回程路由 </tag>
            
            <tag> AS4837 </tag>
            
            <tag> AS9929 </tag>
            
            <tag> CMI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【VPS选购分享】影响VPS速度的几个因素以及测试的方法（Ping值测试、网速测试、路由测试、Looking Glass）</title>
      <link href="/archives/vps-speedtest/"/>
      <url>/archives/vps-speedtest/</url>
      
        <content type="html"><![CDATA[<h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><p>YouTube：<a href="https://youtu.be/jpsRj1DBkkA">https://youtu.be/jpsRj1DBkkA</a></p><h2 id="1-影响VPS网速的因素"><a href="#1-影响VPS网速的因素" class="headerlink" title="1. 影响VPS网速的因素"></a><strong>1. 影响VPS网速的因素</strong></h2><blockquote><p>声明：这篇文章其实是<del>参考</del>抄的<a href="https://www.zhihu.com/people/vpsfool">@老付聊主机</a><a href="https://zhuanlan.zhihu.com/p/415412919">VPS常用测速工具与脚本介绍</a></p><p>不过咕咕也都测试过，再补充了一些自己的内容进去。</p></blockquote><p>有一些网络基础知识的朋友都知道，请求数据包从客户端发出后，经过一定的路由（去程路由）到达服务器，服务器响应数据包再经过一定的路由（回程路由）到达客户端，这样就完成了一次最简单的通信。</p><h3 id="1-1-Ping值"><a href="#1-1-Ping值" class="headerlink" title="1.1 Ping值"></a>1.1 <strong>Ping值</strong></h3><p>ping值代表从客户端发出数据包到服务器返回数据包到达客户端一次的时间，时间越小，表示响应越快。一般国内服务器ping值约几十ms（毫秒），日韩新加坡等附近国家服务器ping值约几十到100多ms，美国欧洲服务器约200+ms。<strong>ping值并不能完全代表网速，不过在其他条件相同的情况下，ping值越小肯定越好</strong>。</p><h3 id="1-2-丢包率"><a href="#1-2-丢包率" class="headerlink" title="1.2 丢包率"></a>1.2 <strong>丢包率</strong></h3><p>如果不发生丢包，肯定ping值越小最终网速越快，如果有丢包发生，则要看看丢包率的大小。一般当网络发生拥塞时，中间路由器会根据一定的策略进行丢包，比如：</p><ul><li><p>优先丢弃UDP包</p></li><li><p>TCP优先保证80，443端口包，而丢弃其他端口的包  </p></li><li><p>icmp包优先</p><p>如果丢包率比较高，比如高于5%，则可认为网络情况较差。</p></li></ul><h3 id="1-3-线路"><a href="#1-3-线路" class="headerlink" title="1.3 线路"></a>1.3 <strong>线路</strong></h3><p>大家也许经常听说电信CN2 GIA&#x2F;GT，联通AS9929&#x2F;AS4837，IPLC&#x2F;IEPL等，这就是我们所说的“线路”。从客户端到服务器通常有多条线路，有的线路使用的人多，质量自然就差，使用人数少的线路质量自然就好，好的VPS会花较多的钱来购买优质线路，价格自然就贵许多。</p><p>需要注意的是，线路包含去程线路与回程线路，而且回程线路往往更加重要（因为服务器响应的数据量通常比用户请求的数据量大），部分VPS商家所谓三网优化线路只优化了去程，没有优化回程，效果自然就大打折扣。 </p><blockquote><p><strong>下期我们来讲讲国内三家运营商的优质线路，敬请期待！</strong></p></blockquote><h3 id="1-4-带宽"><a href="#1-4-带宽" class="headerlink" title="1.4 带宽"></a>1.4 <strong>带宽</strong></h3><p>带宽是VPS商家设置的限制，一般国内服务器带宽比较小(1-10M)，海外服务器带宽会比较大（100M甚至1000M)。带宽一般来说越大越好，但是朋友们也不要一味追求大带宽，小流量非图片站5M带宽足够，代理上网20M足够看youtube 4K视频。</p><p>总之，VPS服务商提供的带宽越大，ping值越低，丢包率越小，VPS的网速则越快，而好的线路则会具备上面说的这些特征（ping值低，丢包少），所以大家选购VPS的时候注意主机商的线路说明，同时也需要自己测试，看看真实情况如何。</p><p>下面就给大家推荐一些常用的测速工具或脚本，需要提前说明的是，<strong>大家测试时尽量在高峰时期测试（晚上8:00-10:00），低峰期测试结果可能很好，但一到高峰期就原地爆炸</strong>。</p><h2 id="2-Ping值测试"><a href="#2-Ping值测试" class="headerlink" title="2. Ping值测试"></a><strong>2. Ping值测试</strong></h2><h3 id="2-1-ping-pe-国内外多地到服务器连续ping值及丢包率测试"><a href="#2-1-ping-pe-国内外多地到服务器连续ping值及丢包率测试" class="headerlink" title="2.1 ping.pe - 国内外多地到服务器连续ping值及丢包率测试"></a>2.1 <strong>ping.pe - 国内外多地到服务器连续ping值及丢包率测试</strong></h3><blockquote><p>地址： <a href="http://ping.pe/">http://ping.pe/</a></p></blockquote><p>相比普通工具只能测试一次，ping.pe可以从不同区域连续进行多次ping测试，实时显示出最大&#x2F;最小&#x2F;平均延时及丢包率，并以图表的方式显示（右侧线条）。</p><p><img src="https://img.laoda.de/i/2022/04/30/y0p5y1_7.webp" alt="image-20220430205658755"></p><p><img src="https://img.laoda.de/i/2022/04/30/y0egaa_7.webp" alt="image-20220430205635382"></p><p>上图是咕咕的搬瓦工DC6 测试结果（测试时间20:54，高峰期），机器在洛杉矶，美国的ping值比较低，大陆平均ping值140ms左右，丢包率基本为0。晚高峰不丢包，很关键。<a href="https://blog.laoda.de/archives/vps-bandwagonhost">同款服务器购买直达链接</a>。</p><p>类似测试工具还有：</p><blockquote><p><a href="https://www.itdog.cn/ping/">https://www.itdog.cn/ping/</a><br><a href="https://tools.ipip.net/newping.php">https://tools.ipip.net/newping.php</a><br><a href="https://www.17ce.com/">https://www.17ce.com/</a><br><a href="https://www.boce.com/ping">https://www.boce.com/ping</a> （很慢，不推荐）</p></blockquote><h3 id="2-2-TCPing-使用TCP协议的PING测试"><a href="#2-2-TCPing-使用TCP协议的PING测试" class="headerlink" title="2.2 TCPing - 使用TCP协议的PING测试"></a>2.2 <strong>TCPing - 使用TCP协议的PING测试</strong></h3><blockquote><p>地址： <a href="https://www.itdog.cn/tcping/">https://www.itdog.cn/tcping/</a></p></blockquote><p>前面提到，电信运营商做QoS优化时可能会提高icmp包的优先级（普通ping正是采用的icmp协议），导致ping的测试结果与实际上网体验不符。</p><p>本工具使用TCP协议进行ping测试，测试结果更具有说服力。</p><p>唯一要求是VPS需要开启TCP端口。</p><p><img src="https://img.laoda.de/i/2022/04/30/ytkklv_7.webp" alt="image-20220430210548804"></p><p>上图是咕咕博客各地的TCPing结果，解析到了德国法兰克福服务器，由于是AS9929线路，大陆ping值平均170ms左右，应该还是不错的。（大家可以在评论区反馈一下打开博客的速度怎么样 &#x3D; &#x3D;）</p><p>Ping值检测使用上面两个工具基本足够，由于ping测试的是往返时延，所以没有必要测试所谓回程ping值。当然，如果仅仅是用来代理上网的VPS，在自己电脑上使用ping命令直接测试自己当前网络到VPS的ping值及丢包才是最重要的。</p><h2 id="3-网速（带宽）测试"><a href="#3-网速（带宽）测试" class="headerlink" title="3. 网速（带宽）测试"></a>3. <strong>网速（带宽）测试</strong></h2><h3 id="3-1-SuperSpeed-sh-VPS三网测速脚本"><a href="#3-1-SuperSpeed-sh-VPS三网测速脚本" class="headerlink" title="3.1 SuperSpeed.sh - VPS三网测速脚本"></a>3.1 <strong>SuperSpeed.sh - VPS三网测速脚本</strong></h3><p>使用方法(需要以root用户执行)</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line">bash &lt;(curl -Lso- https://git.io/superspeed_uxh)</span><br></pre></td></tr></table></figure><h4 id="3-1-1-搬瓦工"><a href="#3-1-1-搬瓦工" class="headerlink" title="3.1.1 搬瓦工"></a>3.1.1 <a href="https://blog.laoda.de/archives/vps-bandwagonhost">搬瓦工</a></h4><img src="https://img.laoda.de/i/2022/04/30/z1nckq_7.webp" alt="image-20220430211905462" style="zoom:50%;" /><h4 id="3-1-2-Cloudcone"><a href="#3-1-2-Cloudcone" class="headerlink" title="3.1.2 Cloudcone"></a>3.1.2 <a href="https://blog.laoda.de/archives/vps-cloudcone">Cloudcone</a></h4><img src="https://img.laoda.de/i/2022/04/30/z1rk78_7.webp" alt="image-20220430211924930" style="zoom:50%;" /><h4 id="3-1-3-腾讯云香港轻量"><a href="#3-1-3-腾讯云香港轻量" class="headerlink" title="3.1.3 腾讯云香港轻量"></a>3.1.3 <a href="https://loll.cc/tx">腾讯云香港轻量</a></h4><img src="https://img.laoda.de/i/2022/04/30/z1aceu_7.webp" alt="image-20220430211844187" style="zoom:50%;" /><p>此脚本由老鬼@oooldking编写，后经过多人修复与改进，可以一键测试VPS到三网不同地区的速度。我们应该更加关注图中<code>上传速度</code>的结果，因为这是用户访问我们的网站的速度，或者是我们用来代理上网的实际速度。</p><blockquote><p><strong>小科普：</strong></p><p>Mbps是megabits per second的缩写，是一种传输速率单位，指每秒传输的位（比特）数量。 比特和字节直接是8倍的关系。</p><p><strong>所以：</strong></p><p>100Mbps&#x3D;100&#x2F;8&#x3D;12.5MB&#x2F;s<br>4Mbps&#x3D;4&#x2F;8(MB&#x2F;s)&#x3D;0.5MB&#x2F;s</p></blockquote><h3 id="3-2-Speedtest-cli-测试VPS到任意区域的速度"><a href="#3-2-Speedtest-cli-测试VPS到任意区域的速度" class="headerlink" title="3.2 Speedtest-cli - 测试VPS到任意区域的速度"></a>3.2 <strong>Speedtest-cli - 测试VPS到任意区域的速度</strong></h3><blockquote><p>安装 <a href="https://www.speedtest.net/zh-Hans/apps/cli">https://www.speedtest.net/zh-Hans/apps/cli</a><br>使用<br># 显示附近测速服务器<br># 如果需要更多，可访问<a href="https://www.speedtest.net/api/js/servers?engine=js">https://www.speedtest.net/api/js/servers?engine=js</a><br>speedtest -L<br># 指定服务器测速<br>speedtest -s <id></p></blockquote><p>以腾讯云香港轻量（Debian10）举例子：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install curl</span><br><span class="line">curl -s https://install.speedtest.net/app/cli/install.deb.sh | sudo bash</span><br><span class="line">sudo apt-get install speedtest</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">speedtest -L</span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2022/04/30/z2yb5e_7.webp" alt="image-20220430212124095" style="zoom:50%;" /><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">speedtest 1536  <span class="comment"># 测香港的</span></span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2022/04/30/z3o37u_7.webp" alt="image-20220430212243753" style="zoom:50%;" /><p>speedtest-cli就是由大名鼎鼎的OOKLA出品的<a href="https://link.zhihu.com/?target=http://speedtest.net">http://speedtest.net</a>的命令行版本，上面提到的superspeed.sh脚本亦是包装了speedtest-cli而来的。</p><h2 id="4-路由测试"><a href="#4-路由测试" class="headerlink" title="4. 路由测试"></a>4. <strong>路由测试</strong></h2><p>路由就是我们通常所说的线路，由于一般情况下去程路由与回程路由不同，因此测试路由需要分别测试去程路由与回程路由。通过路由中的IP或ASN初步可以判断线路质量好坏。例如：路由中如果有<code>59.43.*.*</code>则代表CN2线路，如果去程与回程都有<code>59.43.*.*</code>，则是CN2 GIA线路，如果仅有去程有，则是CN2 GT线路，如果仅有<code>202.97.*.*</code>则是普通163线路。</p><p><strong>关于线路的知识后续专门写一篇文章来介绍。</strong></p><h3 id="4-1-http-itdog-cn-多地去程路由测试"><a href="#4-1-http-itdog-cn-多地去程路由测试" class="headerlink" title="4.1 http://itdog.cn - 多地去程路由测试"></a><strong>4.1 <a href="http://itdog.cn/">http://itdog.cn</a> - 多地去程路由测试</strong></h3><blockquote><p>地址: <a href="https://www.itdog.cn/tracert/">https://www.itdog.cn/tracert/</a></p></blockquote><p>此在线工具可以追踪国内多机房到指定VPS的去程路由，显示中间路由节点的IP、位置、AS号、延时等信息。</p><img src="https://img.laoda.de/i/2022/04/30/z85enz_7.webp" alt="image-20220430212957505" style="zoom:50%;" /><p>上图为上海电信到咕咕的搬瓦工DC6 的主机的路由，中间经过的59.53，且不止一跳，说明线路为CN2 GIA 质量很棒，在高峰期访问质量也有保证。</p><h3 id="4-2-简单测试-多地回程路由测试"><a href="#4-2-简单测试-多地回程路由测试" class="headerlink" title="4.2 简单测试- 多地回程路由测试"></a>4.2 简单测试- 多地回程路由测试</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl https://raw.githubusercontent.com/zhucaidan/mtr_trace/main/mtr_trace.sh|bash</span><br></pre></td></tr></table></figure><h4 id="4-2-1-搬瓦工DC6"><a href="#4-2-1-搬瓦工DC6" class="headerlink" title="4.2.1 搬瓦工DC6"></a>4.2.1 搬瓦工DC6</h4><img src="https://img.laoda.de/i/2022/04/30/wai9yh_7.webp" alt="image-20220430195253213" style="zoom:50%;" /><p>能够直接显示出回程线路情况。</p><h4 id="4-2-2-腾讯云香港轻量"><a href="#4-2-2-腾讯云香港轻量" class="headerlink" title="4.2.2 腾讯云香港轻量"></a>4.2.2 腾讯云香港轻量</h4><img src="https://img.laoda.de/i/2022/04/30/w9w5g5_7.webp" alt="image-20220430195149496" style="zoom:50%;" /><h4 id="4-2-3-Cloudcone"><a href="#4-2-3-Cloudcone" class="headerlink" title="4.2.3 Cloudcone"></a>4.2.3 Cloudcone</h4><img src="https://img.laoda.de/i/2022/04/30/wab1kq_7.webp" alt="image-20220430195219211" style="zoom:50%;" /><h3 id="4-3-testrace-sh-多地回程路由测试"><a href="#4-3-testrace-sh-多地回程路由测试" class="headerlink" title="4.3 testrace.sh - 多地回程路由测试"></a>4.3 <strong>testrace.sh - 多地回程路由测试</strong></h3><blockquote><p> 注意：脚本会安装必要软件包</p></blockquote><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/PhilCity/testrace/master/testrace.sh</span><br><span class="line">bash testrace.sh</span><br></pre></td></tr></table></figure><p>此脚本可以测试VPS到三网各地多个服务器的路由回程路由，<strong>相比去程路由，回程路由更加重要</strong>，是VPS线路选择的关键。</p><p><img src="https://img.laoda.de/i/2022/04/30/zcistp_7.webp" alt="image-20220430213731305"></p><h3 id="4-4-besttrace-指定IP路由测试工具"><a href="#4-4-besttrace-指定IP路由测试工具" class="headerlink" title="4.4 besttrace - 指定IP路由测试工具"></a>4.4 <strong>besttrace - 指定IP路由测试工具</strong></h3><blockquote><p>下载地址 <a href="https://cdn.ipip.net/17mon/besttrace4linux.zip">https://cdn.ipip.net/17mon/besttrace4linux.zip</a><br>使用<br>bestrace &lt;ip或域名&gt;</p><p>查看本地IP：<a href="https://ip.skk.moe/">https://ip.skk.moe/</a></p></blockquote><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://cdn.ipip.net/17mon/besttrace4linux.zip</span><br><span class="line"></span><br><span class="line">apt install zip</span><br><span class="line"></span><br><span class="line">unzip besttrace4linux.zip</span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> +x besttrace</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">./besttrace -q1 -g cn  8.8.8.8     <span class="comment"># ./besttrace -q1 -g cn IP   换成你本地的IP，查看本地IP：https://ip.skk.moe/</span></span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2022/04/30/zlfuro_7.webp" alt="image-20220430215227753" style="zoom:50%;" /><p>besttrace 是由<a href="http://ipip.net出品的路由追踪工具,前面提到的`testrace.sh`脚本亦是对bestrace工具的封装./">http://IPIP.net出品的路由追踪工具，前面提到的`testrace.sh`脚本亦是对bestrace工具的封装。</a></p><p>bestrace可测试当前机器到任意IP的路由，并显示中间节点的IP&#x2F;位置&#x2F;ASN&#x2F;延时。</p><p>如果用VPS代理上网，不妨测试下自己电脑到VPS之间的去&#x2F;回程路由，看看线路。</p><h2 id="5-购买前测试"><a href="#5-购买前测试" class="headerlink" title="5. 购买前测试"></a>5. <strong>购买前测试</strong></h2><p>上面提到的一些脚本需要在VPS上执行，所以有些脚本在购买前无法执行，对于这种情况，一般VPS商家会给出测试IP，有了测试IP我们可以进行Ping测试与去程路由测试，有的商家还会给出LibreSpeed测速页面（demo: <a href="https://librespeed.org/">https://librespeed.org/</a> ），我们可以测试当前机器到测速VPS的速度。</p><p>有的商家还会给出Looking Glass咱们可以通过Looking Glass来测试回程路由。</p><p>不过，最好还是联系商家要一个测试VPS，自己登录后用脚本测试一下。如果实在没有测试VPS，咱们可以先购买一个月，测试效果不好直接发工单申请退款。</p><h3 id="5-1-Web测速-speedtestX"><a href="#5-1-Web测速-speedtestX" class="headerlink" title="5.1 Web测速 speedtestX"></a>5.1 Web测速 speedtestX</h3><p>Web测速 speedtestX <a href="https://github.com/BadApple9/speedtest-x">https://github.com/BadApple9/speedtest-x</a>  后续出搭建教程。</p><p><img src="https://img.laoda.de/i/2022/04/30/10tkxa5_7.webp" alt="image-20220430222639489"></p><h3 id="5-2-Looking-Glass"><a href="#5-2-Looking-Glass" class="headerlink" title="5.2 Looking Glass"></a>5.2 Looking Glass</h3><p><a href="http://lg.sea.spartanhost.net/">http://lg.sea.spartanhost.net/</a></p><p><a href="https://lg-lax02.racknerd.com/">https://lg-lax02.racknerd.com/</a></p><img src="https://img.laoda.de/i/2022/04/30/10xlbb5_7.webp" alt="image-20220430223316913" style="zoom:50%;" /><p>Looking Glass：<a href="https://github.com/ILLKX/LookingGlass">https://github.com/ILLKX/LookingGlass</a>  路由回程，mtr等，可以生成文件下载。</p><p>直接文件下载的，弄个web环境，生成一个文件就行了。</p><p>用个looking glass就可以了，dd几个测试文件给用户测试下载就好，H5 speedtest测的不一定准。</p><h2 id="6-后记"><a href="#6-后记" class="headerlink" title="6. 后记"></a>6. <strong>后记</strong></h2><p>通过上面的工具与脚本，相信朋友们已经能找到满意的VPS了，最后还有几点个人经验分享：</p><ul><li><p>VPS会存在各种意外（跑路、被墙、路由变差等），请尽量按月购买，不要年付！（尽量Paypal支付）</p></li><li><p>测速时选择高峰期（晚上8：00-10：00）测试，高峰低谷测试结果差别非常大。</p></li><li><p>如果VPS是用来代理上网，不用过分迷信什么三网GIA（毕竟<a href="https://blog.laoda.de/archives/vps-bandwagonhost">搬瓦工</a>还是太贵了），选择与自己电脑（或路由器）连接速度最快的即可，毕竟是自用。（土豪请忽略）</p></li></ul><p>本文介绍了VPS测速常用的工具和脚本，除了速度，VPS本身的性能对于网站、数据库等也非常重要，VPS性能测试常用的工具与脚本之前也发过——<a href="https://blog.laoda.de/archives/useful-script">整理一些常用的脚本（持续更新中）</a>。</p><blockquote><p><strong>PayPal争议：</strong> 利用PayPal付款的商家，PayPal支持在6个月的时间内对该笔交易提前争议，可以一定程度上维护买家的权益（不过不要滥用）</p></blockquote><p>下一期，下期我们来讲讲国内三家运营商的优质线路，敬请期待！</p><h2 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h2><h2 id="推荐阅读-1"><a href="#推荐阅读-1" class="headerlink" title="推荐阅读"></a>推荐阅读</h2><p> <a href="https://iwanlab.com/vps-choose/">1、VPS服务器选购不完全指南</a></p><p>  <a href="https://iwanlab.com/cn2-gia-and-cn2-gt/">2、【VPS各种线路】如何分辨CN2 GIA与CN2 GT？</a></p><p> <a href="https://iwanlab.com/useful-script/"> 3、 整理一些常用的脚本（持续更新中）</a>  </p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ping </tag>
            
            <tag> speedtest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VPS服务器选购不完全指南</title>
      <link href="/archives/vps-choose/"/>
      <url>/archives/vps-choose/</url>
      
        <content type="html"><![CDATA[<p><joe-pdf src="https://blog.laoda.de/upload/2022/04/VPS_choosing.pdf" width="100%" height="500px"></joe-pdf></p><p><strong>建议结合这仨篇文章一起看，效果更好！</strong></p><blockquote><p><a href="https://iwanlab.com/vps-speedtest/">1、【VPS选购分享】影响VPS速度的几个因素以及测试的方法（Ping值测试、网速测试、路由测试、Looking Glass）</a></p><p><a href="https://iwanlab.com/vps-route/">2、【VPS选购小常识】VPS线路解析不完全指南 什么是CN2 GIA？什么是AS9929、AS4837？什么是CU VIP？什么是移动CMI？如何判断回程路由？</a></p><p><a href="https://iwanlab.com/cheap-datacenters/">3、【冷知识】说说国外几大廉价机房，MC、CC、INAP、QN、Sharktech几大机房</a></p></blockquote><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><p>YouTube：<a href="https://youtu.be/Z36Cz_qKkGQ">https://youtu.be/Z36Cz_qKkGQ</a></p><blockquote><p>00:00 前言<br>00:57 为什么不随意推荐VPS<br>03:20 VPS选购三色图<br>03:42 VPS选购分享<br>04:33 适合建站的VPS<br>09:26 适合代理的VPS<br>12:18 适合下载的VPS<br>13:00 BBR、VPS虚拟化、VPS线路等小知识</p></blockquote><p>YouTube：<a href="https://youtu.be/Z36Cz_qKkGQ">https://youtu.be/Z36Cz_qKkGQ</a></p><h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><p>最近经常会有童鞋私信咕咕鸽，一上来就让本鸽推荐一款VPS，这让我很是为难。</p><p>为什么呢？</p><p>因为，我国地大物博，同样的一台VPS，面对不同的地域，不同的运营商，它的表现会完全不一样。</p><p>所以，随意推荐一款VPS给大家，是一个非常不负责任的表现（当然搬瓦工除外）。</p><p>可是伙伴们的要求也不能不满足。</p><p>思来想去，本鸽决定在工作之余，结合自己的玩鸡经验，摸鱼整理一篇VPS选购不完全指南。</p><p>相信只要耐心读完这篇文章，大家一定能够选购到一台适合自己的服务器（VPS）。</p><p>懒得看？不想选？不差钱？</p><p>那就推荐你一款百搭的VPS——搬瓦工。唯一缺点就是贵。</p><p>购买地址：<a href="https://loll.cc/bwg">搬瓦工</a></p><p><strong>强烈推荐：</strong> 搬瓦工的CN2 GIA款限量套餐（不定期补货）<a href="https://loll.cc/bwgia">https://loll.cc/bwgia</a></p><h3 id="1-1-所有咕咕买过的服务器"><a href="#1-1-所有咕咕买过的服务器" class="headerlink" title="1.1 所有咕咕买过的服务器"></a>1.1 所有咕咕买过的服务器</h3><blockquote><p>Racknerd <a href="https://loll.cc/rn">https://loll.cc/rn</a></p><p>搬瓦工 <a href="https://loll.cc/bwg">https://loll.cc/bwg</a></p><p>cloudcone <a href="https://loll.cc/cc">https://loll.cc/cc</a></p><p>olik <a href="https://loll.cc/olink">https://loll.cc/olink</a></p><p>斯巴达 <a href="https://loll.cc/spa">https://loll.cc/spa</a></p><p>iON <a href="https://loll.cc/iON">https://loll.cc/iON</a></p><p>腾讯云 <a href="https://loll.cc/tx">https://loll.cc/tx</a></p><p>阿里云 <a href="https://loll.cc/ali">https://loll.cc/ali</a></p><p>BuyVM <a href="https://loll.cc/buyvm">https://loll.cc/buyvm</a></p><p>Hosthatch <a href="https://loll.cc/hosthatch">https://loll.cc/hosthatch</a></p><p>Vultr <a href="https://loll.cc/vultr">https://loll.cc/vultr</a></p><p>Contabo <a href="https://loll.cc/contabo">https://loll.cc/contabo</a></p><p>Hetzner <a href="https://loll.cc/hz">https://loll.cc/hz</a></p><p>Netcup  <a href="https://loll.cc/netcup">https://loll.cc/netcup</a></p></blockquote><h2 id="2-明确自己的需求"><a href="#2-明确自己的需求" class="headerlink" title="2. 明确自己的需求"></a>2. 明确自己的需求</h2><p>购买时VPS前，首先清楚自己购买的用途是什么。</p><p>大体上，可以分为这么三种用途：<strong>建站</strong>和<strong>代理</strong>（看YouTube浏览网页等）以及<strong>下载</strong>。</p><p>下面分别针对这三种情况来告诉大家应该怎么挑选对应的机子。</p><h3 id="2-1-建站用途"><a href="#2-1-建站用途" class="headerlink" title="2.1 建站用途"></a>2.1 建站用途</h3><p>首选问自己，我是想自己搭个网站玩玩而已？还是想要建立一个稳定长期的网站？</p><h4 id="2-1-1-我就想搭个网站玩玩！"><a href="#2-1-1-我就想搭个网站玩玩！" class="headerlink" title="2.1.1 我就想搭个网站玩玩！"></a>2.1.1 我就想搭个网站玩玩！</h4><p>那就很随意了，推荐直接买大陆境外的服务器，因为不用备案，自己随便折腾，反正都是1IP。</p><h5 id="2-1-1-1-推荐机器："><a href="#2-1-1-1-推荐机器：" class="headerlink" title="2.1.1.1 推荐机器："></a>2.1.1.1 <strong>推荐机器：</strong></h5><p>回到博客首页的第一篇文章里，随便挑选一个你看着顺眼的买就行。</p><p><a href="https://blog.laoda.de/archives/vps-recommad">【高性价比VPS推荐】——那些年，我用过的VPS们（持续更新中）</a></p><p><strong>唯一需要提醒的一点是</strong>：尽量<strong>月付</strong>就行，相信我，更省钱！（当然年付只要几刀或者十几刀的也可以）</p><p>买了服务器，你还需要一个域名，可以看这篇文章：</p><p><a href="https://blog.laoda.de/archives/namesilo">【服务器、域名购买】Namesilo优惠码和域名解析教程（附带服务器购买推荐和注意事项）</a></p><h4 id="2-1-2-我想建稳一个稳定长期的网站！"><a href="#2-1-2-我想建稳一个稳定长期的网站！" class="headerlink" title="2.1.2 我想建稳一个稳定长期的网站！"></a>2.1.2 我想建稳一个稳定长期的网站！</h4><p>你面向的客户是国内还是国外？</p><h5 id="2-1-2-1-面向国内客户"><a href="#2-1-2-1-面向国内客户" class="headerlink" title="2.1.2.1 面向国内客户"></a>2.1.2.1 <strong>面向国内客户</strong></h5><p>首选大陆境内的服务器。</p><p>原因是延迟低，有点地方可以达到几毫秒。</p><p>而选择了大陆境内的服务器，不可避免的一个问题就是备案。（只有服务器的所在地是在大陆境内的，才需要备案）</p><p>由于政策原因，你可能需要花半个月左右时间完成网站备案，当然备案本身是免费的。</p><p>而且据说在相同的情况下，搜索引擎会更偏向收录已经备案的网站的内容。</p><p>做网站就是为了让更多的人看到，所以这一点上来看，备案是有好处的。</p><blockquote><p> <strong>推荐机器：</strong></p></blockquote><p>首推腾讯云。</p><p>俗称良心云。为了抢占市场，经常会有薅羊毛的活动，而且机子也很不错。</p><p>购买链接：<a href="https://loll.cc/tx">腾讯云</a></p><p>当然你也可以选择阿里云。</p><p>阿里云又被广大网友戏称套路云，原因是经常他们也会经常搞一些活动，但是套路贼多，机子本身应该是没啥问题的。</p><p>购买链接：<a href="https://loll.cc/ali">阿里云</a></p><p>当然也可以选择华为云、Ucloud等大厂，但是由于我没有买过，这边大家可以自行去搜索。</p><p>其他厂商一律别买！尤其是小厂！</p><p>因为既然选择了建站，我们要的就是一个稳，大厂不管是从技术还是客服，都是小厂所不能比拟的，千万不要贪小便宜，选择一些阿猫阿狗的厂家。</p><p>另外就是国内服务器的线路选择问题，有BGP就选BGP，没有BGP选电信，电信带宽质量相当不错。联通和移动尽量不要选择。</p><h5 id="2-1-2-2-面向国外客户"><a href="#2-1-2-2-面向国外客户" class="headerlink" title="2.1.2.2 面向国外客户"></a><strong>2.1.2.2 面向国外客户</strong></h5><p>首选国外的大厂服务器提供商。</p><p>只要服务器不在大陆境内，就不用备案。</p><p>这个时候其实就很简单了，选择一些大厂，千万不要贪图小便宜选小厂，因为我们建站需要的就是一个字，稳！尤其是对外贸站点来说，因为几百钱的服务器出的问题，损失了几个大单，得不偿失。</p><p>服务器一般可选择的稳定地区主要有香港、日本、韩国、美国这四个地区。</p><p>主要看你的客户在哪个地区居多一些。</p><p>如果你只是不想备案，站点还是主要给国人访问的，那么地区线路优先度排序：香港&gt;韩国&gt;日本&gt;美国 </p><p>日本服务器大多会绕路，上方排序为理想状况下的选择。</p><p>如果你对网络延时要求高就选择亚太地区，延时要求不高的就建议选择美国地区（一般首选美西，洛杉矶、圣何塞）。</p><p>这两大地区的主要区别是亚太地区延时低，但是带宽一般都比较小，价格相对要高一些。</p><p>美国地区配置和带宽都比较大，但是网络延时相对较高一般在200延时左右，价格比较低。</p><p>在选择时我们主要看以下几个事项：</p><h4 id="2-1-2-延时稳定性"><a href="#2-1-2-延时稳定性" class="headerlink" title="2.1.2 延时稳定性"></a>2.1.2 延时稳定性</h4><p>建站对我们带宽需要的并不大，延时波动是一定要考虑的。下载跑的高不代表网站打开速度快。很多服务器只用来作为下载服务器，这种就可以考虑那些波动大一些但是带宽跑的较高的服务器。</p><p>延时稳定的服务器网站打开速度一般都不错。以美国地区服务器为例</p><p>个人买过买过洛杉矶地区的163国际直连线路和CN2 GIA的线路。GIA线路相比163直连就要稳定的多，延时波动几乎是在10ms内。</p><p>如下图，我这台搬瓦工洛杉矶 CN2 GIA的服务器延时测试基本在133ms左右，波动非常之小。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/mdnice4/2021-6-19/1624084527425-e5551fae24ad4280af377f05e9d03bc3.png"></p><h4 id="2-1-3-服务器网络线路"><a href="#2-1-3-服务器网络线路" class="headerlink" title="2.1.3 服务器网络线路"></a>2.1.3 服务器网络线路</h4><p>亚太地区的服务器需要注意的是线路是否绕路，很多日本的服务器到国内的线路是绕路走其他地区的，而不是直接直连到国内。我们测一下路由信息就可以看到线路是否绕路。</p><p>一般来说买服务器，下单付钱之前，商家都会给一个相应机房的测试ip，这里我们测一个甲骨文东京的服务器，看看是否会绕路。</p><p>这边测试线路用到的工具是：<a href="https://www.ipip.net/product/client.html">BestTrace</a></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/mdnice4/2021-6-19/1624084537881-725b6d623e564c77a47a2b0380a92a70.png"></p><p>可以看到我们本地到服务器的线路是直连的，并没有绕路，说明线路不错。</p><p>想看其他地方到服务器的ping值情况，可以用用<a href="http://ping.chinaz.com/">站长工具</a>ping一下，</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/mdnice4/2021-6-19/1624084553148-fb2ce29b09a34dff8a83a6088b8a6351.png"></p><p>当然想看其他地方到服务器到线路情况，可以用这个网站来看看 <a href="https://tools.ipip.net/traceroute.php">https://tools.ipip.net/traceroute.php</a></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/mdnice4/2021-6-19/1624084575809-cc1d40ed116f47a4a3fb21213e5b9e54.png"></p><p>直连的话就是你和服务器直接，不过经过第三个国家，这种线路一般也是不错的。</p><p>最好是尝试先月付一个月试试，等感觉不错了，再尝试年付。</p><p>当然这边等你年付了，线路也有可能会变差的情况。</p><p><strong>1、买的太好了，超售严重</strong>   </p><p>100M的带宽，本来是10个人用，现在变成了20个人用了，速度自然就慢了<br>硬盘IO也一样，所以有个不折腾的好邻居很重要</p><p>超售的概念见文末<strong>VPS的虚拟化</strong>。</p><p><strong>2、商家悄咪咪换了自己机房的线路  一般大厂不会这么干，也会发邮件通知</strong></p><p>上面看的路由情况都是去程，也就是我们到服务器的这段路由。但是，一般来看，服务器的回程其实比去程更重要一些，但是回程的话一般要服务器厂商搭个Looking Glass才能测，很少厂商会提供这个功能，所以比较蛋疼，我们可以尝试发工单要求厂商提供一个。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/mdnice4/2021-6-19/1624084592197-7f9124f08d29448ebe9fe6f42bc1c052.png"></p><p>综合上面的条件以及配置价格我们基本就可以筛选出自己适合的地区。</p><p>另外需要注意的是，延时及路由测试，有可能你当时测试结果非常出色，但是后期线路是有可能会更改的（取决于VPS商家），所以说我们选择时候尽量选择高质量的线路。</p><p>线路优先度 <code>CN2 GIA&gt;CN2 GT&gt;163直连</code></p><p>CN2 GIA只有中美之间才有，其他地区最好的就是普通的是CN2线路。</p><p>CN2 GIA和CN2 GT区分：<a href="https://blog.laoda.de/archives/cn2">CN2 GIA和CN2 GT线路的辨别方式</a></p><p><strong>建站推荐服务器：</strong></p><p>商业站点可以用的：</p><ol><li>Vultr</li></ol><p>购买地址：<a href="https://loll.cc/vultr">https://loll.cc/vultr</a></p><ol start="2"><li>Linode</li></ol><p>购买地址：<a href="https://loll.cc/linode">https://loll.cc/linode</a></p><ol start="3"><li>Contabo</li></ol><p>购买地址：<a href="https://contabo.com/">https://contabo.com/</a></p><ol start="4"><li>搬瓦工</li></ol><p>购买地址：<a href="https://loll.cc/bwg">https://loll.cc/bwg</a></p><ol start="5"><li>iON</li></ol><p>购买地址：<a href="https://loll.cc/iON">https://loll.cc/iON</a></p><p>以下是适合个人站点的：</p><ol><li>GreenCloud</li></ol><p>购买地址：<a href="https://loll.cc/greencloud">https://loll.cc/greencloud</a></p><ol start="2"><li>Racknerd 洛杉矶、圣何塞机房</li></ol><p>文章地址：<a href="https://blog.laoda.de/archives/cheap-vps-racknerd">https://blog.laoda.de/archives/cheap-vps-racknerd</a></p><ol start="3"><li>Cloudcone</li></ol><p>文章地址：<a href="https://blog.laoda.de/archives/cheap-vps-cloudcone">https://blog.laoda.de/archives/cheap-vps-cloudcone</a></p><p>最后一定记得，即使是在机房，也不能保证数据100%不会丢失，为了自己的数据安全，重要的数据，一定要多备份几处地方。可以是本地、服务器、网盘都留有备份。</p><h3 id="2-2-代理用途"><a href="#2-2-代理用途" class="headerlink" title="2.2 代理用途"></a>2.2 代理用途</h3><p>在选择代理服务器的时候，我们同样需要注意延时波动这一项，但是范围可以适当放宽，只要波动不太大的服务器最为代理使用都还不错。</p><p>另外一点需要注意的是，作为代理用途，我们需要的就是带宽大。这一点关系到价格问题，很多用户就没法选择香港、韩国、日本等地区的服务器了（有钱例外）。</p><p>美国的服务器带宽一般都能跑到2M每秒的速度，换算成带宽大概是20M带宽。</p><blockquote><p><strong>小科普：</strong></p><p>Mbps是megabits per second的缩写，是一种传输速率单位，指每秒传输的位（比特）数量。 比特和字节直接是8倍的关系。</p><p>所以：</p><p>100Mbps&#x3D;100&#x2F;8&#x3D;12.5MB&#x2F;s<br>4Mbps&#x3D;4&#x2F;8(MB&#x2F;s)&#x3D;0.5MB&#x2F;s</p></blockquote><h4 id="2-2-1-推荐服务器"><a href="#2-2-1-推荐服务器" class="headerlink" title="2.2.1 推荐服务器"></a>2.2.1 <strong>推荐服务器</strong></h4><p>参考线路：线路优先度CN2 GIA&gt;CN2 GT&gt;163直连</p><p>三网回程GIA &gt; 三网回程9929 &gt; 三网回程4837</p><p>买了基本上就无忧的：</p><p><strong>最贵的：</strong></p><ol><li>搬瓦工</li></ol><p>购买地址：<a href="https://loll.cc/bwg">https://loll.cc/bwg</a></p><p>剩下的以我的本地上海电信500M实际体验为例子：</p><p><strong>最便宜的：</strong></p><ol><li>Racknerd  美西洛杉矶 圣何塞</li></ol><p>文章地址：<a href="https://blog.laoda.de/archives/cheap-vps-racknerd">https://blog.laoda.de/archives/cheap-vps-racknerd</a></p><ol start="2"><li>Virmach  尽量选美西</li></ol><p>购买地址：<a href="https://billing.virmach.com/cart.php?a=view">https://billing.virmach.com/cart.php?a=view</a></p><ol start="3"><li>Cloudcone 洛杉矶 也可以</li></ol><p>文章地址：<a href="https://blog.laoda.de/archives/cheap-vps-cloudcone">https://blog.laoda.de/archives/cheap-vps-cloudcone</a></p><p><strong>性价比还ok的：</strong></p><ol><li>斯巴达</li></ol><p>购买地址：<a href="https://loll.cc/spa">https://loll.cc/spa</a></p><ol start="2"><li>iON</li></ol><p>购买地址：<a href="https://loll.cc/iON">https://loll.cc/iON</a></p><h3 id="2-3-下载服务器"><a href="#2-3-下载服务器" class="headerlink" title="2.3 下载服务器"></a>2.3 下载服务器</h3><p>下载服务器一般是用来下载电影等资源，常见的是在服务器上搭建个Aria2可实现离线下载种子电影，版权电影等。</p><p>需要注意的是，比如美国等地对版权要求严格。有时候你下载一个最新上映的电影种子可能就中了“种子蜜罐”。</p><p>种子蜜罐是美国的一些版权机构搞的，他们把种子资源存在自己服务器，当有人下载时从他服务器上请求数据就知道了下载服务器的IP，然后可以投诉到服务器的服务商。美国服务商一般都会处理，比如关机清退等。</p><h4 id="2-3-1-服务器推荐："><a href="#2-3-1-服务器推荐：" class="headerlink" title="2.3.1 服务器推荐："></a>2.3.1 <strong>服务器推荐：</strong></h4><p>Buyvm 无视版权的卢森堡</p><p>购买地址：<a href="https://loll.cc/buyvm">https://loll.cc/buyvm</a></p><p>Virmach</p><p>购买地址：<a href="https://billing.virmach.com/cart.php?a=view">https://billing.virmach.com/cart.php?a=view</a></p><p>Hosthatch</p><p>购买地址：<a href="https://loll.cc/hosthatch">https://loll.cc/hosthatch</a></p><p>Greencloud</p><p>购买地址：<a href="https://loll.cc/greencloud">https://loll.cc/greencloud</a></p><p>当然这是针对热门电影，如果你下载一些其他文件或者是小电影之类是没人管你的。</p><p>关于如何搭建Aria2，可以参考这篇文章：</p><p><a href="https://blog.laoda.de/archives/aria2-rclone-filebrowser">手把手教你搭建私人离线下载神器Aria2，搭配Rclone+Filebrowser自动上传至网盘</a></p><h2 id="3-推荐阅读"><a href="#3-推荐阅读" class="headerlink" title="3. 推荐阅读"></a>3. 推荐阅读</h2><p>1、【冷知识】说说国外几大廉价机房，MC、CC、INAP、QN、Sharktech几大机房<a href="https://blog.laoda.de/archives/cheap-datacenters">https://blog.laoda.de/archives/cheap-datacenters</a></p><p>2、【高性价比VPS推荐】——那些年，我用过的VPS们（持续更新中）<a href="https://blog.laoda.de/archives/vps-recommad">https://blog.laoda.de/archives/vps-recommad</a></p><p>3、【VPS各种线路】如何分辨CN2 GIA与CN2 GT？<a href="https://blog.laoda.de/archives/cn2">https://blog.laoda.de/archives/cn2</a></p><p>4、新拿到手一台服务器，怎么样给它做个全方位的“体检”？<a href="https://blog.laoda.de/archives/666clouds">https://blog.laoda.de/archives/666clouds</a></p><p>5、CDN加速-隐藏真实IP-复活IP<a href="https://blog.laoda.de/archives/cdn-ip">https://blog.laoda.de/archives/cdn-ip</a></p><p>6、美国VPS推荐 <a href="https://blog.laoda.de/tags/us-vps">https://blog.laoda.de/tags/us-vps</a></p><p>7、欧洲VPS推荐 <a href="https://blog.laoda.de/tags/eu-vps">https://blog.laoda.de/tags/eu-vps</a></p><p>8、亚太VPS推荐 <a href="https://blog.laoda.de/tags/asia-vps">https://blog.laoda.de/tags/asia-vps</a></p><p>9、【VPS测评】斯巴达 AMD 黑五31刀测评 <a href="https://blog.laoda.de/archives/spartanhost">https://blog.laoda.de/archives/spartanhost</a></p><p>10、【VPS测评】Olink 法兰克福三网9929测评<a href="https://blog.laoda.de/archives/olink">https://blog.laoda.de/archives/olink</a></p><h2 id="4-知识补充"><a href="#4-知识补充" class="headerlink" title="4. 知识补充"></a>4. 知识补充</h2><h3 id="4-1-关于BBR加速"><a href="#4-1-关于BBR加速" class="headerlink" title="4.1 关于BBR加速"></a>4.1 关于BBR加速</h3><h4 id="4-1-1-传说中的BBR"><a href="#4-1-1-传说中的BBR" class="headerlink" title="4.1.1 传说中的BBR"></a>4.1.1 传说中的BBR</h4><p>我相信，你在搜索各种科学上网技术的时候，肯定不止一次的听过bbr这个东西，在各种博客添油加醋之下，让人觉得它神乎其神。更有bbrplus, bbr2, 魔改bbr 等一大堆衍生品。仿佛神油一般，用了就能野鸡线路变专线。</p><p>那么，这东西究竟是什么？它有没有用？又该用哪一个版本呢？</p><h4 id="4-1-2-实际的BBR"><a href="#4-1-2-实际的BBR" class="headerlink" title="4.1.2 实际的BBR"></a>4.1.2 实际的BBR</h4><p>BBR &#x3D; Bottleneck Bandwidth and Round-trip propagation time，是一种TCP的拥塞控制算法。简单粗暴的理解就是数据流量的交通管理：当公路不再塞车的时候，每辆车自然就能保持较快的车速了。</p><p>那么它有没有用呢？一般而言，有BBR 和 没有BBR 会有可以感知的差别（速度、稳定性、延迟方面都会有一些改善），所以 【非常建议开启 BBR】。</p><p>但开启之后，BBR 在 4.x 和 5.x 之间的差异往往比较微妙、见仁见智，造成体验差别的决定性因素仍然是线路质量。所以 【不必纠结版本、不必盲目追新、跟随你的发行版更新内核即可】</p><h4 id="4-1-3-bbrplus-bbr2-魔改bbr-和其他各种听起来就酷炫的版本是不是更好？"><a href="#4-1-3-bbrplus-bbr2-魔改bbr-和其他各种听起来就酷炫的版本是不是更好？" class="headerlink" title="4.1.3 bbrplus, bbr2, 魔改bbr 和其他各种听起来就酷炫的版本是不是更好？"></a>4.1.3 bbrplus, bbr2, 魔改bbr 和其他各种听起来就酷炫的版本是不是更好？</h4><p>一句话：不是！不要用这些！这些都为了吸引眼球乱起的名字！</p><p>BBR 的更新和发布，都是跟随Linux的内核（Kernel）进行的。换言之，只要你用的是比较新的内核，就自然会使用到新版BBR。</p><p>而这些名字看起来很酷炫的东西，说白了就是仍未正式发布的、尚在测试阶段的内核及其对应的BBR版本。这些脚本也仅仅就是通过下载预览版的内核（甚至第三方魔改内核）来率先开启而已。</p><p>内核的稳定是一台服务器稳定运行的基石。【BBR测试版带来的细微性能差异绝对不值得更换不稳定的内核。】 请选择你所在的Linux发行版所支持的最新内核，这样可以最大限度的保持服务器的长期稳定和兼容。</p><blockquote><p>注意： 所谓魔改bbr的【领先】是有非常强的时效性的。比如很多 bbrplus 脚本，因为几年来都没有更新，到现在还会把你的内核换成 4.19，要知道现在稳定如 Debian 已经是 5.9 的时代了，那么这个脚本放在2018年1月也许领先了一点，到2018年10月4.19正发布时就已经失去了意义，放在现在甚至可以说是完完全全的【降级】和【劣化】</p></blockquote><p>fq, fq_codel, fq_pie, cake和其他算法哪个好？</p><p>一句话：看不懂的话，请保持fq，足够、且不会劣化你的线路</p><p>锐速、Finalspeed、LotServer和其他“加速工具”</p><p><strong>一句话：不要用这些！把他们丢进历史的垃圾桶吧！</strong></p><p>它能解决的也只有丢包率的问题。不太准确的比喻，就是本来你用一辆车送你的货，有时候车半路就坏了（丢包），用了这些以后，你直接派出3份一样的货，让三辆车同时送，只要有一辆没坏就能送到。马路上都是你的车，自然就能把别人挤下去。但可想而知，你挤别人的时候，别人也会来挤你，而整个机房的出口道路一共就那么宽，最终势必就变成集体大堵车了。</p><blockquote><p>说明： 它们的原理不是算法优化、不是提速、大多数是简单粗暴的多倍发包。对于【丢包率非常高】的差线路可能有一点作用，但【对丢包率低的好线路没有任何优化作用，反而会成倍的消耗你的流量】，进而造成服务器和你的邻居不必要的压力。</p></blockquote><p>如果你的线路真的丢包率奇高，真正靠谱的解决方案是【换线路】。</p><p><strong>一句话总结，用原版BBR。</strong></p><h4 id="4-1-4-Ubuntu的参考这篇"><a href="#4-1-4-Ubuntu的参考这篇" class="headerlink" title="4.1.4 Ubuntu的参考这篇"></a><strong>4.1.4 Ubuntu的参考这篇</strong></h4><p><a href="https://blog.laoda.de/archives/vps-script#toc-head-1">新买了一台服务器“必须”要做的6件小事</a></p><h4 id="4-1-5-CentOS-7"><a href="#4-1-5-CentOS-7" class="headerlink" title="4.1.5 CentOS 7"></a>4.1.5 CentOS 7</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -N --no-check-certificate <span class="string">&quot;https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh&quot;</span></span><br><span class="line"><span class="built_in">chmod</span> +x tcp.sh</span><br><span class="line">./tcp.sh</span><br></pre></td></tr></table></figure><p>选择对应的BBR即可，推荐原版。</p><h4 id="4-1-6-Debian-10"><a href="#4-1-6-Debian-10" class="headerlink" title="4.1.6 Debian 10"></a>4.1.6 Debian 10</h4><ol><li>给 Debian 10 添加官方<code> backports</code> 源，获取更新的软件库</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo nano /etc/apt/sources.list</span><br></pre></td></tr></table></figure><blockquote><p>说明： 本文以 Debian 10 为例，所以使用 <code>/etc/apt/sources.list</code> 仍无问题，但如果你并不是根据本文从头开始，或者使用了其他Linux发行版，那么建议你建立 <code>/etc/apt/sources.list.d/ </code>文件夹，并在这个文件夹内建立自己的配置文件，形如 <code>/etc/apt/sources.list.d/vpsadmin.list</code>，以此保证兼容性，也可避免默认文件在不可预见的情况下被覆盖而导致配置丢失。</p></blockquote><ol start="2"><li>然后把下面这一条加在最后，并保存退出。</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deb http://deb.debian.org/debian buster-backports main</span><br></pre></td></tr></table></figure><ol start="3"><li>刷新软件库并查询 Debian 官方的最新版内核并安装。请务必安装你的VPS对应的版本（本文以比较常见的【amd64】为例）。</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt update &amp;&amp; sudo apt -t buster-backports install linux-image-amd64</span><br></pre></td></tr></table></figure><blockquote><p>注意： 如果你的VPS支持，可以尝试【云服务器专用内核】linux-image-cloud-amd64，优点就是精简、资源占用低，缺点嘛是有同学反馈不支持的系统强行安装会导致无法开机（Kernel无法识别）。</p><p>为了避免无法识别的悲剧，请确保：</p><ul><li>尝试前做一个系统快照，或者</li><li>你有 vnc 可以救场（并且你知道怎么用）</li></ul></blockquote><ol start="4"><li>修改 kernel 参数配置文件 sysctl.conf 并指定开启 BBR</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo nano /etc/sysctl.conf</span><br></pre></td></tr></table></figure><blockquote><p>说明： 本文以 Debian 10 为例，所以使用<code>/etc/sysctl.conf</code>仍无问题，但如果你并不是跟着本文从头开始，或者使用了其他Linux发行版，那么建议你建立<code>/etc/sysctl.d/</code>文件夹，并在这个文件夹内建立自己的配置文件，形如<code> /etc/sysctl.d/vpsadmin.conf</code>，以此保证兼容性，因为部分发行版在 systemd 207 版本之后便不再从<code>/etc/sysctl.conf</code>读取参数。使用自定义配置文件也可避免默认文件在不可预见的情况下被覆盖而导致配置丢失。</p></blockquote><ol start="5"><li>把下面的内容添加进去</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">net.core.default_qdisc=fq</span><br><span class="line">net.ipv4.tcp_congestion_control=bbr</span><br></pre></td></tr></table></figure><ol start="6"><li>重启VPS、使内核更新和BBR设置都生效</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo reboot</span><br></pre></td></tr></table></figure><p>完整流程演示如下：</p><blockquote><p>啰嗦君： 因为我做展示的VPS支持云服务器专用内核，所以动图中我用了 <code>linux-image-cloud-amd64 </code>。如果你不确定你的VPS是否支持，那请务必按照第3步的命令，使用常规内核<code> linux-image-amd64</code>。</p></blockquote><p><img src="https://xtls.github.io/documents/level-0/ch07-img06-bbr-proper.gif" alt="更新Debian内核并开启`BBR`"></p><ol start="8"><li>确认BBR开启</li></ol><p>如果你想确认 BBR 是否正确开启，可以使用下面的命令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsmod | grep bbr</span><br></pre></td></tr></table></figure><p>此时应该返回这样的结果：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tcp_bbr</span><br></pre></td></tr></table></figure><p>如果你想确认 fq 算法是否正确开启，可以使用下面的命令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsmod | grep fq</span><br></pre></td></tr></table></figure><p>此时应该返回这样的结果：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sch_fq</span><br></pre></td></tr></table></figure><h3 id="4-2-VPS-虚拟化"><a href="#4-2-VPS-虚拟化" class="headerlink" title="4.2 VPS 虚拟化"></a>4.2 VPS 虚拟化</h3><p>在选择服务器时尽量选择KVM架构，OpenVZ架构的服务器，可超开的数量更多。</p><p>目前中小型 IDC 的 VPS 虚拟化无非就是：<strong>OpenVZ</strong>、<strong>KVM</strong>、<strong>XEN</strong>、<strong>VM-Ware</strong>。</p><p>你要说 OpenVZ 是超售专用虚拟化，也太绝对，因为其他两个的虚拟化也能实现超售，不过 OpenVZ 的更容易超售，所以价格普遍更便宜。</p><p><strong>而 OpenVZ 无法安装 TCP 加速软件</strong>（至于 VPS 内安装虚拟机来实现安装使用 BBR 行为，首先安装虚拟机是违规行为，其次该方式会造成性能损失，且对新手不友好）。</p><p><strong>KVM、XEN、VM-Ware 都可以安装 锐速、LotServer 以及 更换内核开启 BBR。</strong></p><p><strong>BBR加速相关脚本可以参考这篇</strong>：<a href="https://blog.laoda.de/archives/vps-script#toc-head-1">新买了一台服务器“必须”要做的6件小事</a></p><p>所以除非你实在预算少，否则我更<strong>推荐你选择 KVM、XEN、VM-Ware 虚拟化</strong>的 VPS 。</p><p>另外，XEN 虚拟化分为 <strong>xen-hvm</strong>（全虚拟化）和 <strong>xen-pv</strong>（半虚拟化），只有前者支持更换内核。</p><p>区分方法：ROOT 用户运行 <code>virt-what</code> 命令，若只显示 <code>xen</code> 则为 xen-pv（半虚拟化），同时显示 <code>xen</code> 和 <code>xen-hvm</code> 则为 xen-hvm（全虚拟化）。</p><p><strong>在选择服务器时尽量选择KVM架构。</strong></p><h3 id="4-3-关于测评"><a href="#4-3-关于测评" class="headerlink" title="4.3 关于测评"></a>4.3 关于测评</h3><p>测评得出的下载速度，延时等，跟VPS的母服务器有关，可能当时母服务器只开了他一台VPS，这样测出的硬盘速度、带宽等都比较好但是你购买后这台服务器可是会不断的开VPS的，结果就是硬盘速度越来越差，带宽可用的越来越小。所以说顶多有个参考意义，不可当真。</p><p>由于本鸽实力有限，暂时能想到的就这么多，如果错误欢迎大家纠正，也欢迎大家留言补充其他的细节。</p><p>【VPS测评】斯巴达 AMD 黑五31刀测评 </p><p><a href="https://iwanlab.com/spartanhost/">https://iwanlab.com/spartanhost/</a></p><p>【VPS测评】Olink 法兰克福三网9929测评</p><p><a href="https://iwanlab.com/olink/">https://iwanlab.com/olink/</a></p>]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Racknerd </tag>
            
            <tag> Cloudcone </tag>
            
            <tag> 美国VPS </tag>
            
            <tag> 欧洲VPS </tag>
            
            <tag> VPS推荐 </tag>
            
            <tag> 甲骨文 </tag>
            
            <tag> CN2 </tag>
            
            <tag> CN2 GIA </tag>
            
            <tag> VPS线路 </tag>
            
            <tag> 腾讯云轻量应用 </tag>
            
            <tag> 搬瓦工 </tag>
            
            <tag> Vultr </tag>
            
            <tag> Contabo </tag>
            
            <tag> BuyVM </tag>
            
            <tag> 亚太VPS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>整理一些常用的脚本（持续更新中）</title>
      <link href="/archives/useful-script/"/>
      <url>/archives/useful-script/</url>
      
        <content type="html"><![CDATA[<h2 id="更新列表"><a href="#更新列表" class="headerlink" title="更新列表"></a>更新列表</h2><p>2023-0525  检测是否可以访问ChatGPT脚本 <a href="https://github.com/moeakwak/chatgpt-web-share/wiki/%E4%B8%AD%E6%96%87%E6%8C%87%E5%8D%97">来源</a></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -Ls https://raw.githubusercontent.com/missuo/OpenAI-Checker/main/openai.sh)</span><br></pre></td></tr></table></figure><p>2023-4-29 修改检测是否可以访问ChatGPT脚本</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -Ls https://ourl.co/oaic)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -Ls https://cdn.jsdelivr.net/gh/missuo/OpenAI-Checker/openai.sh)</span><br></pre></td></tr></table></figure><h2 id="综合工具箱（强烈推荐，集成了很多脚本）"><a href="#综合工具箱（强烈推荐，集成了很多脚本）" class="headerlink" title="综合工具箱（强烈推荐，集成了很多脚本）"></a>综合工具箱（强烈推荐，集成了很多脚本）</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O box.sh https://raw.githubusercontent.com/BlueSkyXN/SKY-BOX/main/box.sh &amp;&amp; <span class="built_in">chmod</span> +x box.sh &amp;&amp; clear &amp;&amp; ./box.sh</span><br></pre></td></tr></table></figure><h2 id="杜甫测试"><a href="#杜甫测试" class="headerlink" title="杜甫测试"></a>杜甫测试</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -q https://github.com/Aniverse/A/raw/i/a &amp;&amp; bash a</span><br></pre></td></tr></table></figure><h2 id="DD相关"><a href="#DD相关" class="headerlink" title="DD相关"></a>DD相关</h2><h3 id="1、甲骨文DD脚本"><a href="#1、甲骨文DD脚本" class="headerlink" title="1、甲骨文DD脚本"></a>1、甲骨文DD脚本</h3><p>DD成Debian 10</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(wget --no-check-certificate -qO- <span class="string">&#x27;https://raw.githubusercontent.com/MoeClub/Note/master/InstallNET.sh&#x27;</span>) -d 10 -v 64 -p <span class="string">&quot;自定义root密码&quot;</span> -port <span class="string">&quot;自定义ssh端口&quot;</span></span><br></pre></td></tr></table></figure><p>DD成Ubuntu 20.04</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(wget --no-check-certificate -qO- <span class="string">&#x27;https://raw.githubusercontent.com/MoeClub/Note/master/InstallNET.sh&#x27;</span>) -u 20.04 -v 64 -p <span class="string">&quot;自定义root密码&quot;</span> -port <span class="string">&quot;自定义ssh端口&quot;</span></span><br></pre></td></tr></table></figure><h3 id="2、MoeClub脚本"><a href="#2、MoeClub脚本" class="headerlink" title="2、MoeClub脚本"></a>2、MoeClub脚本</h3><p><strong>重点推荐</strong>：</p><p>时间：22&#x2F;11&#x2F;2021 15:21 萌咖更新脚本：</p><p>1.新增对 Oracle AMD，Oracle ARM全面支持. 可支持从 Ubuntu, Oracle Linux 等系统网络重装.<br>2.更新 dd 镜像的基础系统版本.<br>3.移除对外部 wget 的依赖.<br>4.新增 -port 参数, 可更改默认SSH端口.<br>5.更新 内置的网络参数计算 逻辑.<br>6.更新 grub 配置文件定位逻辑, 可支持任意引导grub的系统.</p><p>以下系统已通过测试(其他自测):<br>Debian: 9, 10, 11;<br>Ubuntu: 18.04, 20.04;<br>CentOS: 6.10;<br>以下平台已通过测试(其他自测):<br>Oracle、Do、Azure</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(wget --no-check-certificate -qO- <span class="string">&#x27;https://raw.githubusercontent.com/MoeClub/Note/master/InstallNET.sh&#x27;</span>) -d 10 -v 64 -p <span class="string">&quot;自定义root密码&quot;</span> -port <span class="string">&quot;自定义ssh端口&quot;</span></span><br></pre></td></tr></table></figure><p>-d 10 -v 64<br>-d 9 -v 64<br>-u 20.04 -v 64<br>-u 18.04 -v 64</p><p>开机改密码脚本：</p><p>开机改密：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> root:Vicer |sudo chpasswd root</span><br><span class="line">sudo sed -i <span class="string">&#x27;s/^#\?PermitRootLogin.*/PermitRootLogin yes/g&#x27;</span> /etc/ssh/sshd_config;</span><br><span class="line">sudo sed -i <span class="string">&#x27;s/^#\?PasswordAuthentication.*/PasswordAuthentication yes/g&#x27;</span> /etc/ssh/sshd_config;</span><br><span class="line">sudo reboot</span><br></pre></td></tr></table></figure><h3 id="3、另一位大佬的脚本"><a href="#3、另一位大佬的脚本" class="headerlink" title="3、另一位大佬的脚本"></a>3、另一位大佬的脚本</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget --no-check-certificate -O AutoReinstall.sh https://git.io/AutoReinstall.sh &amp;&amp; bash AutoReinstall.sh</span><br></pre></td></tr></table></figure><ul><li><p>CentOS默认密码Pwd@CentOS  其它系统Pwd@Linux</p></li><li><p>OpenVZ &#x2F; LXC 架构系统不适用</p></li></ul><p>来源：<a href="https://blog.hicasper.com/post/135.html">https://blog.hicasper.com/post/135.html</a> 参考：<a href="https://www.ydyno.com/archives/1245.html">https://www.ydyno.com/archives/1245.html</a>  感谢大佬的付出！</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(wget --no-check-certificate -qO- <span class="string">&#x27;https://file.geekn.net/CNODnjau/InstallNET.sh&#x27;</span>) -d 11 -v 64 -a -firmware</span><br></pre></td></tr></table></figure><p>-firmware  额外的驱动支持<br>-d             后面是系统版本号<br>-v             后面写64位 32位<br>-a             （不清楚这个干啥的但是每个脚本都带）<br>–mirror     后面是镜像源地址</p><p>-p        后面写自定义密码</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">镜像站地址</span><br><span class="line">官方给出的地址列表：https://www.debian.org/mirror/list</span><br><span class="line"></span><br><span class="line">一些国内的</span><br><span class="line">ftp.cn.debian.org</span><br><span class="line">mirror.bjtu.edu.cn</span><br><span class="line">mirror.lzu.edu.cn        </span><br><span class="line">mirror.nju.edu.cn        </span><br><span class="line">mirrors.163.com        </span><br><span class="line">mirrors.bfsu.edu.cn        </span><br><span class="line">mirrors.hit.edu.cn        </span><br><span class="line">mirrors.huaweicloud.com        </span><br><span class="line">mirror.sjtu.edu.cn        </span><br><span class="line">mirrors.tuna.tsinghua.edu.cn        </span><br><span class="line">mirrors.ustc.edu.cn        </span><br><span class="line"></span><br><span class="line">使用方法：（大致都是一样的）</span><br><span class="line"></span><br><span class="line">清华源</span><br><span class="line">--mirror <span class="string">&#x27;https://mirrors.ustc.edu.cn/debian/&#x27;</span></span><br><span class="line"></span><br><span class="line">腾讯源</span><br><span class="line">--mirror <span class="string">&#x27;https://mirrors.aliyun.com/debian/&#x27;</span></span><br><span class="line"></span><br><span class="line">阿里源</span><br><span class="line">--mirror <span class="string">&#x27;https://mirrors.aliyun.com/debian/&#x27;</span></span><br><span class="line"></span><br><span class="line">华为源</span><br><span class="line">--mirror <span class="string">&#x27;https://mirrors.huaweicloud.com/debian/&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="4、秋水逸冰-Windows-2012-2016-2019-2022-10-11-DD-镜像"><a href="#4、秋水逸冰-Windows-2012-2016-2019-2022-10-11-DD-镜像" class="headerlink" title="4、秋水逸冰 Windows 2012&#x2F;2016&#x2F;2019&#x2F;2022 10&#x2F;11 DD 镜像"></a>4、秋水逸冰 Windows 2012&#x2F;2016&#x2F;2019&#x2F;2022 10&#x2F;11 DD 镜像</h3><p>适用于 UEFI 启动的多个 Windows 系统 DD 镜像：</p><p><a href="https://teddysun.com/656.html">https://teddysun.com/656.html</a></p><p>分别是：</p><ol><li>Windows Server 2012 R2 Datacenter</li><li>Windows Server 2016 Datacenter (build: 14393.5006)</li><li>Windows Server 2019 Datacenter (build: 17763.2686)</li><li>Windows Server 2022 Datacenter (build: 20348.587)</li><li>Windows 10 Enterprise LTSC (build: 19044.1288)</li><li>Windows 11 Pro for Workstations 21H2 (build: 22000.194)</li></ol><p>适用于 BIOS 启动的 Windows Server 2022 Datacenter DD 镜像：</p><p><a href="https://teddysun.com/629.html">https://teddysun.com/629.html</a></p><p>适用于 BIOS 启动的 Windows 11 Pro for Workstations 21H2 DD 镜像：</p><p><a href="https://teddysun.com/642.html">https://teddysun.com/642.html</a></p><p>适用于 BIOS 启动的 Windows 10 Enterprise LTSC DD 镜像：</p><p><a href="https://teddysun.com/640.html">https://teddysun.com/640.html</a></p><p>适用于 BIOS 启动的 Windows Server 2019&#x2F;2016&#x2F;2012R2 Datacenter DD 镜像：</p><p><a href="https://teddysun.com/545.html">https://teddysun.com/545.html</a></p><p>分别是：</p><ol><li>Windows Server 2019 Datacenter（Build: 17763.2686）</li><li>Windows Server 2016 Datacenter（Build: 14393.5006）</li><li>Windows Server 2012 R2 Datacenter</li></ol><h2 id="测试相关"><a href="#测试相关" class="headerlink" title="测试相关"></a>测试相关</h2><h3 id="机器测试"><a href="#机器测试" class="headerlink" title="机器测试"></a>机器测试</h3><h4 id="单线程测试"><a href="#单线程测试" class="headerlink" title="单线程测试"></a>单线程测试</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -Lso- https://bench.im/hyperspeed)</span><br></pre></td></tr></table></figure><h4 id="最全测速脚本"><a href="#最全测速脚本" class="headerlink" title="最全测速脚本"></a>最全测速脚本</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -fsL https://ilemonra.in/LemonBenchIntl | bash -s fast</span><br></pre></td></tr></table></figure><h4 id="superbench"><a href="#superbench" class="headerlink" title="superbench"></a>superbench</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -qO- git.io/superbench.sh | bash</span><br></pre></td></tr></table></figure><h4 id="Bench-sh"><a href="#Bench-sh" class="headerlink" title="Bench.sh"></a>Bench.sh</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -qO- bench.sh | bash</span><br></pre></td></tr></table></figure><h3 id="速度测试"><a href="#速度测试" class="headerlink" title="速度测试"></a>速度测试</h3><h4 id="显示延迟、抖动"><a href="#显示延迟、抖动" class="headerlink" title="显示延迟、抖动"></a>显示延迟、抖动</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(wget -qO- https://bench.im/hyperspeed)</span><br></pre></td></tr></table></figure><h4 id="直接显示回程线路"><a href="#直接显示回程线路" class="headerlink" title="直接显示回程线路"></a>直接显示回程线路</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl https://raw.githubusercontent.com/zhucaidan/mtr_trace/main/mtr_trace.sh|bash</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -q route.f2k.pub -O route &amp;&amp; bash route</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 第一个</span><br><span class="line">wget https://raw.githubusercontent.com/nanqinlang-script/testrace/master/testrace.sh</span><br><span class="line">bash testrace.sh</span><br><span class="line"></span><br><span class="line"># 第二个</span><br><span class="line">wget -qO- git.io/besttrace | bash</span><br></pre></td></tr></table></figure><h4 id="四网测速"><a href="#四网测速" class="headerlink" title="四网测速"></a>四网测速</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O jcnf.sh https://raw.githubusercontent.com/Netflixxp/jcnfbesttrace/main/jcnf.sh</span><br><span class="line"></span><br><span class="line">bash jcnf.sh</span><br></pre></td></tr></table></figure><h3 id=""><a href="#" class="headerlink" title=""></a></h3><h4 id="三网测速"><a href="#三网测速" class="headerlink" title="三网测速"></a>三网测速</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -Lso- https://git.io/superspeed_uxh)</span><br></pre></td></tr></table></figure><p>带快速四网测试版本：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -Lso- https://dl.233.mba/d/sh/speedtest.sh)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -Lso- https://git.io/J1SEh)</span><br></pre></td></tr></table></figure><h3 id="测试25端口是否开放"><a href="#测试25端口是否开放" class="headerlink" title="测试25端口是否开放"></a>测试25端口是否开放</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">telnet smtp.aol.com 25</span><br></pre></td></tr></table></figure><h3 id="测试IPv4优先还是IPv6优先"><a href="#测试IPv4优先还是IPv6优先" class="headerlink" title="测试IPv4优先还是IPv6优先"></a>测试IPv4优先还是IPv6优先</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl ip.p3terx.com</span><br></pre></td></tr></table></figure><h3 id="流媒体测试"><a href="#流媒体测试" class="headerlink" title="流媒体测试"></a>流媒体测试</h3><h4 id="全媒体测试"><a href="#全媒体测试" class="headerlink" title="全媒体测试"></a>全媒体测试</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -L -s https://raw.githubusercontent.com/lmc999/RegionRestrictionCheck/main/check.sh)</span><br></pre></td></tr></table></figure><h4 id="奈飞测试"><a href="#奈飞测试" class="headerlink" title="奈飞测试"></a>奈飞测试</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O nf https://github.com/sjlleo/netflix-verify/releases/download/2.5/nf_2.5_linux_amd64 &amp;&amp; <span class="built_in">chmod</span> +x nf &amp;&amp; clear &amp;&amp; ./nf</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#第一个</span><br><span class="line">bash &lt;(curl -L -s https://raw.githubusercontent.com/lmc999/RegionRestrictionCheck/main/check.sh)</span><br><span class="line"></span><br><span class="line"># 第二个</span><br><span class="line">bash &lt;(curl -sSL &quot;https://github.com/CoiaPrant/MediaUnlock_Test/raw/main/check.sh&quot;)</span><br></pre></td></tr></table></figure><h2 id="WARP"><a href="#WARP" class="headerlink" title="WARP"></a>WARP</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -N --no-check-certificate https://cdn.jsdelivr.net/gh/YG-tsj/CFWarp-Pro/multi.sh &amp;&amp; <span class="built_in">chmod</span> +x multi.sh &amp;&amp; ./multi.sh</span><br></pre></td></tr></table></figure><p>之后进入脚本快捷方式为 <code>bash multi.sh</code></p><h2 id="服务器时间"><a href="#服务器时间" class="headerlink" title="服务器时间"></a>服务器时间</h2><h4 id="CentOS-同步时间"><a href="#CentOS-同步时间" class="headerlink" title="CentOS  同步时间"></a>CentOS  同步时间</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install ntpdate</span><br><span class="line">timedatectl set-timezone Asia/Shanghai</span><br><span class="line">ntpdate ntp1.aliyun.com</span><br></pre></td></tr></table></figure><h2 id="BBR"><a href="#BBR" class="headerlink" title="BBR"></a>BBR</h2><h4 id="CentOS-7-BBR"><a href="#CentOS-7-BBR" class="headerlink" title="CentOS 7 BBR"></a>CentOS 7 BBR</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -N --no-check-certificate <span class="string">&quot;https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh&quot;</span> &amp;&amp; <span class="built_in">chmod</span> +x tcp.sh &amp;&amp; ./tcp.sh</span><br></pre></td></tr></table></figure><h4 id="一键开启BBR"><a href="#一键开启BBR" class="headerlink" title="一键开启BBR"></a>一键开启BBR</h4><p>注意：需要Linux Kernel 内核升级到 4.9 及以上版本可以实现 BBR 加速</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">uname</span> -srm</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Linux 3.10.0-957.12.2.el7.x86_64 x86_64</span><br><span class="line">3 - 内核版本.</span><br><span class="line">10 - 主修订版本.</span><br><span class="line">0-957 - 次要修订版本.</span><br><span class="line">12 - 补丁版本.</span><br></pre></td></tr></table></figure><p>一般来说，Ubuntu18.04以上就可以(默认的内核<code>4.15</code>) </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &quot;net.core.default_qdisc=fq&quot; &gt;&gt; /etc/sysctl.conf</span><br><span class="line">echo &quot;net.ipv4.tcp_congestion_control=bbr&quot; &gt;&gt; /etc/sysctl.conf</span><br><span class="line"></span><br><span class="line">sysctl -p</span><br><span class="line"></span><br><span class="line">sysctl net.ipv4.tcp_available_congestion_control</span><br><span class="line"></span><br><span class="line">lsmod | grep bbr</span><br></pre></td></tr></table></figure><h2 id="Docker相关"><a href="#Docker相关" class="headerlink" title="Docker相关"></a>Docker相关</h2><h4 id="更新、安装必备软件"><a href="#更新、安装必备软件" class="headerlink" title="更新、安装必备软件"></a>更新、安装必备软件</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get update &amp;&amp; apt-get install -y wget vim</span><br></pre></td></tr></table></figure><h3 id="海外服务器"><a href="#海外服务器" class="headerlink" title="海外服务器"></a>海外服务器</h3><h4 id="非大陆Docker安装"><a href="#非大陆Docker安装" class="headerlink" title="非大陆Docker安装"></a>非大陆Docker安装</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -qO- get.docker.com | bash</span><br></pre></td></tr></table></figure><h4 id="卸载Docker"><a href="#卸载Docker" class="headerlink" title="卸载Docker"></a>卸载Docker</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get purge docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">rm</span> -rf /var/lib/docker</span><br><span class="line">sudo <span class="built_in">rm</span> -rf /var/lib/containerd</span><br></pre></td></tr></table></figure><h4 id="非大陆Docker-compose安装"><a href="#非大陆Docker-compose安装" class="headerlink" title="非大陆Docker-compose安装"></a>非大陆Docker-compose安装</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/1.29.2/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><p>查看版本</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose --version</span><br></pre></td></tr></table></figure><h3 id="大陆服务器"><a href="#大陆服务器" class="headerlink" title="大陆服务器"></a>大陆服务器</h3><h4 id="国内机安装docker"><a href="#国内机安装docker" class="headerlink" title="国内机安装docker"></a>国内机安装docker</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -sSL https://get.daocloud.io/docker | sh</span><br></pre></td></tr></table></figure><h4 id="国内机安装docker-compose"><a href="#国内机安装docker-compose" class="headerlink" title="国内机安装docker-compose"></a>国内机安装docker-compose</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -L https://get.daocloud.io/docker/compose/releases/download/v2.1.1/docker-compose-`<span class="built_in">uname</span> -s`-`<span class="built_in">uname</span> -m` &gt; /usr/local/bin/docker-compose</span><br><span class="line"><span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><h4 id="卸载docker"><a href="#卸载docker" class="headerlink" title="卸载docker"></a>卸载docker</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get remove docker docker-engine</span><br><span class="line">rm -fr /var/lib/docker/</span><br></pre></td></tr></table></figure><h2 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h2><h4 id="CentOS-关闭防火墙"><a href="#CentOS-关闭防火墙" class="headerlink" title="CentOS 关闭防火墙"></a>CentOS 关闭防火墙</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start supervisord</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure><h2 id="宝塔相关"><a href="#宝塔相关" class="headerlink" title="宝塔相关"></a>宝塔相关</h2><h4 id="宝塔去除登陆-已经失效，解决方法见：https-blog-laoda-de-archives-bt-to-aapanel"><a href="#宝塔去除登陆-已经失效，解决方法见：https-blog-laoda-de-archives-bt-to-aapanel" class="headerlink" title="宝塔去除登陆 (已经失效，解决方法见：https://blog.laoda.de/archives/bt-to-aapanel)"></a>宝塔去除登陆 (已经失效，解决方法见：<a href="https://blog.laoda.de/archives/bt-to-aapanel">https://blog.laoda.de/archives/bt-to-aapanel</a>)</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">&quot;s|if (bind_user == &#x27;True&#x27;) &#123;|if (bind_user == &#x27;REMOVED&#x27;) &#123;|g&quot;</span> /www/server/panel/BTPanel/static/js/index.js</span><br><span class="line"><span class="built_in">rm</span> -rf /www/server/panel/data/bind.pl</span><br></pre></td></tr></table></figure><h4 id="宝塔-aapanel破解（这个目前也不保证可用了）"><a href="#宝塔-aapanel破解（这个目前也不保证可用了）" class="headerlink" title="宝塔&amp;aapanel破解（这个目前也不保证可用了）"></a>宝塔&amp;aapanel破解（这个目前也不保证可用了）</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 宝塔&amp;aapanel破解</span></span><br><span class="line">编辑 /www/server/panel/class/panelplugin.py</span><br><span class="line">找到 softList[<span class="string">&#x27;list&#x27;</span>] = tmpList 这行代码</span><br><span class="line">在下面添加以下代码，注意缩进</span><br><span class="line"></span><br><span class="line">softList[<span class="string">&#x27;pro&#x27;</span>] = 1</span><br><span class="line"><span class="keyword">for</span> soft <span class="keyword">in</span> softList[<span class="string">&#x27;list&#x27;</span>]:</span><br><span class="line">soft[<span class="string">&#x27;endtime&#x27;</span>] = 0</span><br><span class="line"></span><br><span class="line">编辑完毕后保存重启面板即可</span><br></pre></td></tr></table></figure><h2 id="呆梨相关"><a href="#呆梨相关" class="headerlink" title="呆梨相关"></a>呆梨相关</h2><h4 id="XUI"><a href="#XUI" class="headerlink" title="XUI"></a>XUI</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -Ls https://raw.githubusercontent.com/FranzKafkaYu/x-ui/master/install.sh)</span><br></pre></td></tr></table></figure><p>脚本来源：<a href="https://github.com/FranzKafkaYu/x-ui">https://github.com/FranzKafkaYu/x-ui</a></p><h4 id="mack-a"><a href="#mack-a" class="headerlink" title="mack-a"></a>mack-a</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -P /root -N --no-check-certificate <span class="string">&quot;https://raw.githubusercontent.com/mack-a/v2ray-agent/master/install.sh&quot;</span> &amp;&amp; <span class="built_in">chmod</span> 700 /root/install.sh &amp;&amp; /root/install.sh</span><br></pre></td></tr></table></figure><p>持续更新中</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>大家有好用的脚本欢迎推荐，有需求也欢迎留言提出来！</p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚本 </tag>
            
            <tag> 测速 </tag>
            
            <tag> 奈飞检测 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【VPS选购分享】BuyVM——下载神器！无限流量，无视版权投诉，经常缺货DCMA版权投诉/适合BT/PT下载/Netflix解锁</title>
      <link href="/archives/vps-buyvm/"/>
      <url>/archives/vps-buyvm/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.laoda.de/i/2022/04/26/ndm08r_7.webp" alt="banner"></p><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><p>YouTube：<a href="https://youtu.be/pCpCpgZppZw">https://youtu.be/pCpCpgZppZw</a></p><blockquote><p>00:00 前言<br>00:58 BuyVM简单介绍<br>05:13 BuyVM优缺点及适合人群<br>11:49 BuyVM套餐介绍<br>14:18 BuyVM后台介绍<br>15:59 BuyVM搭配Aria2离线下载</p></blockquote><h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><p><a href="https://loll.cc/buyvm">BuyVM</a> 成立于 2010 年，英国注册公司 FRAN­TECH SO­LU­TIONS LTD (07743806) 旗下的 VPS 品牌，属于知名老牌商家。</p><p>目前主营美国纽约 &#x2F; 拉斯维加斯 &#x2F; 迈阿密和卢森堡的 KVM Slice VPS，采用 KVM 虚拟，Stal­lion 控制面板 (自主研发)，1Gbps 带宽不限制流量，1 个 IPv4 和 &#x2F;48 IPv6，免费快照。</p><p><a href="https://loll.cc/buyvm">BuyVM</a> 在以上地区都提供了可供 VPS 挂载的 Block Stor­age Slabs (附加存储块)，每 256GB 仅需 $1.25 &#x2F; 月，每月加 3 美元可以获得 DDoS 高防 IPv4 。</p><p>支持支付宝、Pay­Pal、信用卡等付款方式。</p><p>1G 内存及以上 VPS 支持 Win­dows 系统。</p><p><a href="https://loll.cc/buyvm">BuyVM</a> 是自建网盘存储，BT&#x2F;PT 离线下载，OneDrive、Google Drive 网盘中转离线下载的绝佳选择之一。</p><p>咕咕自己持有一个卢森堡地区的小鸡：</p><p><img src="https://img.laoda.de/i/2022/04/26/li7xc0_7.webp" alt="image-20220426130035939"></p><p>目前没有库存，有需求的小伙伴建议先<a href="https://loll.cc/buyvm"><strong>注册账号</strong></a>，可抢先一步下单，切勿错失良机。</p><h2 id="1-1-BuyVM官方网站"><a href="#1-1-BuyVM官方网站" class="headerlink" title="1.1 BuyVM官方网站"></a>1.1 BuyVM官方网站</h2><p>官网地址：<a href="https://loll.cc/buyvm">https://buyvm.net</a> (进入后会跳转到 fran­tech 域名的页面。因为是子品牌，所以采用了同一个销售和管理页面)</p><p>管理页面：<a href="https://my.frantech.ca/">https://my.frantech.ca</a></p><h2 id="2-特点"><a href="#2-特点" class="headerlink" title="2. 特点"></a>2. 特点</h2><ul><li>无限流量！</li><li>提供了可供 VPS 挂载的 Block Stor­age Slabs (附加存储块)</li><li>卢森堡地区抗DCMA版权投诉，适合BT、PT下载</li><li>每月加 3 美元可以获得 DDoS 高防 IPv4 </li><li>1G 内存及以上 VPS 支持 Win­dows 系统。</li><li>Stal­lion 控制面板 (自主研发)</li></ul><h2 id="3-注意事项"><a href="#3-注意事项" class="headerlink" title="3. 注意事项"></a>3. 注意事项</h2><ul><li><p>支付宝支付有优惠（看起来是官网是美元，实际上是加拿大元，会便宜一些）</p></li><li><p>每个VPS支持挂载8个块存储，每个块存储最大支持10T硬盘</p></li><li><p>商家开启了反欺诈验证，不要挂代理和魔法爱国科学上网，尽量使用真实信息下单(主要是注册邮箱和支付工具邮箱要对应，大概地址要和 IP 所在地相符)。</p></li><li><p>推荐使用支付宝付款，加拿大元(CAD)结算便宜很多。比如原价是 5 USD ，PayPal 支付需要支付人民币 32 元左右，而支付宝结算是 5 CAD 结汇成人民币，就只需要 25 元左右。</p></li><li><p><a href="https://loll.cc/buyvm">BuyVM</a> 的价格是按自然月结算的，比如当月1日购买就是一整个月的价格，2-15日为当月剩余天数计算的价格，15日后购买就是按当月剩余天数计算的价格加下个月整月的价格。</p></li><li><p>PayPal 付款需注意注册邮箱一致，否则可能风控进入人工审核。</p></li><li><p>附加存储块购买后要<a href="https://blog.laoda.de/archives/buyvm-mount">进行挂载操作</a>才能附加到 VPS 上，教程随便咕鸽搜索都能找到。</p></li><li><p>由于非常抢手，可能存在 VPS 有货而存储块没货，或者 VPS 没货而存储块有货的情况。总之有货的先买，等几天补货时再来买就凑齐了。</p></li><li><p>补货时间一般在工作日的凌晨1-2点(北京时间)左右，提前<a href="https://loll.cc/buyvm"><strong>注册账号</strong></a>、登录账号再抢购。</p></li><li><p>对于下载用途，建议不要长时间大量占用网络，适当进行限速，以免被限速或停机。</p></li><li><p><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1423">卢森堡(LU)</a>机房抗 DCMA 版权投诉，适合需要使用 BT 下载大量生肉资源的小伙伴。</p></li><li><p><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1411">拉斯维加斯(LV)</a>机房可同时兼顾魔法科学爱国上网与下载需求。</p></li><li><p>美国对版权要求严格，<a href="https://my.frantech.ca/aff.php?aff=4666&pid=1411">拉斯维加斯(LV)</a>、<a href="https://my.frantech.ca/aff.php?aff=4666&pid=1413">纽约(NY)</a>、<a href="https://my.frantech.ca/aff.php?aff=4666&pid=1501">迈阿密(MIA)</a>机房的 VPS 不要用于下载国外知名 BT 资源网站(比如rarbg)提供的热门影视资源，以防被钓鱼执法导致停机。</p></li><li><p>512M 内存配置套餐已于2021年11月永久下架，表格中的购买链接仅供纪念。</p></li></ul><h2 id="4-适合人群"><a href="#4-适合人群" class="headerlink" title="4. 适合人群"></a>4. 适合人群</h2><ul><li>BT、PT用户</li><li>不适合建站（个人感觉）</li></ul><h2 id="5-套餐介绍"><a href="#5-套餐介绍" class="headerlink" title="5. 套餐介绍"></a>5. 套餐介绍</h2><h3 id="5-1-BuyVM-AMD-Ryzen-KVM-VPS"><a href="#5-1-BuyVM-AMD-Ryzen-KVM-VPS" class="headerlink" title="5.1 BuyVM AMD Ryzen KVM VPS"></a>5.1 BuyVM AMD Ryzen KVM VPS</h3><p>VPS 特征：AMD Ryzen 9 3900X 高性能处理器，NVMe 超高速固态硬盘，最高 1Gbps 带宽，<strong>无限流量</strong>，1 个 IPv4 和 &#x2F;48 IPv6。</p><p>可选机房：<a href="https://my.frantech.ca/aff.php?aff=4666&pid=1411">拉斯维加斯 (LV)</a>、<a href="https://my.frantech.ca/aff.php?aff=4666&pid=1413">纽约 (NY)</a>、<a href="https://my.frantech.ca/aff.php?aff=4666&pid=1423">卢森堡 (LU)</a>、<a href="https://my.frantech.ca/aff.php?aff=4666&pid=1501">迈阿密 (MIA)</a></p><p>目前库存已经不多了，有需求的小伙伴建议先<a href="https://loll.cc/buyvm"><strong>注册账号</strong></a>，可抢先一步下单，切勿错失良机。</p><p>以下为配置列表和购买链接，建议购买 1G 内存及以上的配置，网速和性能会有明显提升，而且可安装 Win­dows。如果觉得配置不够用可以发工单加钱升级。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>SSD</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>512M</td><td>1核</td><td>10G</td><td>$2&#x2F;月</td><td><strong><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1439">拉斯维加斯(LV)</a></strong></td><td><strong><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1440">纽约(NY)</a></strong></td><td><strong><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1441">卢森堡(LU)</a></strong></td><td><strong><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1500">迈阿密(MIA)</a></strong></td></tr><tr><td>1G</td><td>1核</td><td>20G</td><td>$3.5&#x2F;月</td><td><strong><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1411">拉斯维加斯(LV)</a></strong></td><td><strong><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1413">纽约(NY)</a></strong></td><td><strong><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1423">卢森堡(LU)</a></strong></td><td><strong><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1501">迈阿密(MIA)</a></strong></td></tr><tr><td>2G</td><td>1核</td><td>40G</td><td>$7.0&#x2F;月</td><td><strong><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1402">拉斯维加斯(LV)</a></strong></td><td><strong><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1414">纽约(NY)</a></strong></td><td><strong><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1424">卢森堡(LU)</a></strong></td><td><strong><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1502">迈阿密(MIA)</a></strong></td></tr><tr><td>4G</td><td>1核</td><td>80G</td><td>$15&#x2F;月</td><td><strong><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1403">拉斯维加斯(LV)</a></strong></td><td><strong><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1415">纽约(NY)</a></strong></td><td><strong><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1425">卢森堡(LU)</a></strong></td><td><strong><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1503">迈阿密(MIA)</a></strong></td></tr><tr><td>8G</td><td>2核</td><td>160G</td><td>$30&#x2F;月</td><td><strong><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1404">拉斯维加斯(LV)</a></strong></td><td><strong><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1416">纽约(NY)</a></strong></td><td><strong><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1426">卢森堡(LU)</a></strong></td><td><strong><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1504">迈阿密(MIA)</a></strong></td></tr><tr><td>12G</td><td>3核</td><td>240G</td><td>$45&#x2F;月</td><td><strong><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1405">拉斯维加斯(LV)</a></strong></td><td><strong><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1417">纽约(NY)</a></strong></td><td><strong><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1427">卢森堡(LU)</a></strong></td><td><strong><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1505">迈阿密(MIA)</a></strong></td></tr><tr><td>16G</td><td>4核</td><td>320G</td><td>$60&#x2F;月</td><td><strong><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1406">拉斯维加斯(LV)</a></strong></td><td><strong><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1418">纽约(NY)</a></strong></td><td><strong><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1428">卢森堡(LU)</a></strong></td><td><strong><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1506">迈阿密(MIA)</a></strong></td></tr><tr><td>20G</td><td>5核</td><td>400G</td><td>$75&#x2F;月</td><td><strong><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1407">拉斯维加斯(LV)</a></strong></td><td><strong><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1419">纽约(NY)</a></strong></td><td><strong><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1429">卢森堡(LU)</a></strong></td><td><strong><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1507">迈阿密(MIA)</a></strong></td></tr><tr><td>24G</td><td>6核</td><td>480G</td><td>$90&#x2F;月</td><td><strong><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1408">拉斯维加斯(LV)</a></strong></td><td><strong><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1420">纽约(NY)</a></strong></td><td><strong><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1430">卢森堡(LU)</a></strong></td><td><strong><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1508">迈阿密(MIA)</a></strong></td></tr><tr><td>28G</td><td>7核</td><td>560G</td><td>$105 &#x2F;月</td><td><strong><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1409">拉斯维加斯(LV)</a></strong></td><td><strong><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1421">纽约(NY)</a></strong></td><td><strong><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1431">卢森堡(LU)</a></strong></td><td><strong><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1509">迈阿密(MIA)</a></strong></td></tr><tr><td>32G</td><td>8核</td><td>640G</td><td>$120&#x2F;月</td><td><strong><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1410">拉斯维加斯(LV)</a></strong></td><td><strong><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1422">纽约(NY)</a></strong></td><td><strong><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1432">卢森堡(LU)</a></strong></td><td><strong><a href="https://my.frantech.ca/aff.php?aff=4666&pid=1510">迈阿密(MIA)</a></strong></td></tr></tbody></table><h3 id="5-2-BuyVM-附加存储块-Block-Storage-Slab-购买链接"><a href="#5-2-BuyVM-附加存储块-Block-Storage-Slab-购买链接" class="headerlink" title="5.2 BuyVM 附加存储块(Block Storage Slab)购买链接"></a>5.2 BuyVM 附加存储块(Block Storage Slab)购买链接</h3><p>Block Stor­age Slab 每 256GB 存储 1.25 美元 &#x2F; 月，最高 10TB。购买时要注意与 VPS 的机房对应。</p><ul><li><a href="https://my.frantech.ca/aff.php?aff=4666&gid=42">拉斯维加斯(LV) 附加存储购买链接</a></li><li><a href="https://my.frantech.ca/aff.php?aff=4666&gid=45">纽约(NY) 附加存储购买链接</a></li><li><a href="https://my.frantech.ca/aff.php?aff=4666&gid=46">卢森堡(LU) 附加存储购买链接</a></li><li><a href="https://my.frantech.ca/aff.php?aff=4666&gid=49">迈阿密(MIA) 附加存储购买链接</a></li></ul><h3 id="5-3-BuyVM拉斯维加斯-LV-中国特别版-流媒体解锁-VPS-已经下架"><a href="#5-3-BuyVM拉斯维加斯-LV-中国特别版-流媒体解锁-VPS-已经下架" class="headerlink" title="5.3 BuyVM拉斯维加斯(LV) 中国特别版 流媒体解锁 VPS 已经下架"></a>5.3 <del>BuyVM拉斯维加斯(LV) 中国特别版 流媒体解锁 VPS</del> 已经下架</h3><p><a href="https://loll.cc/buyvm">BuyVM</a> 面向中国大陆地区用户特别推出的附带流媒体解锁 IP 的 VPS，与前面的常规套餐相比多了个流媒体解锁专用 IP 地址，适合有流媒体需求的小伙伴。</p><p>VPS 特征：AMD Ryzen 9 3900X 高性能处理器，NVMe 超高速固态硬盘，最高 1Gbps 带宽，<strong>无限流量</strong>，1 个常规 IPv4 和 &#x2F;48 IPv6 地址以及 1 个流媒体解锁 IPv4 地址。</p><p>可选机房：拉斯维加斯 (LV)</p><p>流媒体支持：美区 Net­flix、YouTube Pre­mium、Tik­tok、Dis­ney+、hulu、HBO 等。</p><table><thead><tr><th align="left">内存</th><th align="left">CPU</th><th align="left">硬盘</th><th align="left">价格(USD)</th><th align="left">支付宝价(CAD to CNY)</th><th align="left">购买链接</th></tr></thead><tbody><tr><td align="left">1G</td><td align="left">1核</td><td align="left">20G</td><td align="left">$5&#x2F;月</td><td align="left">≈¥25&#x2F;月</td><td align="left"><a href="https://my.frantech.ca/aff.php?aff=4666&pid=4666">点击购买</a></td></tr><tr><td align="left">2G</td><td align="left">1核</td><td align="left">40G</td><td align="left">$9&#x2F;月</td><td align="left">≈¥46&#x2F;月</td><td align="left"><a href="https://my.frantech.ca/aff.php?aff=4666&pid=4666">点击购买</a></td></tr><tr><td align="left">4G</td><td align="left">1核</td><td align="left">80G</td><td align="left">$18&#x2F;月</td><td align="left">≈¥92&#x2F;月</td><td align="left"><a href="https://my.frantech.ca/aff.php?aff=4666&pid=4666">点击购买</a></td></tr></tbody></table><blockquote><p><strong>TIPS:</strong> 流媒体解锁 IP 不同于默认的 IP 。要使用需在管理后台把<code>outgoing IP</code>改成<code>steam IP</code>，并且<code>steam IP</code>不能设置为<code>main IP</code>(为了防止 <code>steam IP</code>被和谐，一旦<code>steam IP</code>被和谐是不给退款而且不给更换的)。流媒体 IP 默认没有绑定到网卡，请手动绑定到<code>eth0:1</code>。</p></blockquote><h4 id="5-3-1-eth0添加流媒体IP（以Debian10为例子）"><a href="#5-3-1-eth0添加流媒体IP（以Debian10为例子）" class="headerlink" title="5.3.1 eth0添加流媒体IP（以Debian10为例子）"></a>5.3.1 eth0添加流媒体IP（以Debian10为例子）</h4><p>Debian10单网卡配置IP，因为只有1个网卡<code>eth0</code>，所以这里我们只要在<code>eth0</code>这个网卡下面配置，具体如下：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano /etc/network/interfaces</span><br><span class="line">auto eth0:1  </span><br><span class="line">iface eth0:1 inet static</span><br><span class="line">address 206.253.164.20   <span class="comment">#举例这个是你之前的主IP</span></span><br><span class="line">netmask 255.255.255.0  <span class="comment">#这个是掩码</span></span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2022/04/26/lrucev_7.webp" alt="image-20220426131649591" style="zoom: 50%;" /><p>2）添加完成后，如果没有vnc，最好重启VPS，如果使用 <code>systemctl restart networking</code> 则会可能造成网络断开，而SSH连接不上。简单的办法就是你重启下vps即可，重启完成后就可以了。</p><p>重启完成后，可以用<code>systemctl status networking</code>，看看网络状态，不过一般是没有问题的。</p><p>34）之后，我们用 <code>ip addr</code> 这个命令查看分配好的IP，其实已经是可以看到你的IP了。</p><p><img src="https://img.laoda.de/i/2022/04/26/lsb4d0_7.webp" alt="buyvm，全新流媒体优化vps（不限流量） – $5/月起，附解锁教程"></p><p>4）我们还需要到后台设置流媒体IP的Status 为 开启的状态，看图：</p><p><img src="https://img.laoda.de/i/2022/04/26/lsvgyo_7.webp" alt="image-20220426131825301"></p><p><strong>注意，保存后，需要重启下系统！！之后，我们用这个IP来连接ssh就可以连接成功。</strong></p><p>5）这个时候，我们继续设置刚才设置的流媒体IP为主IP，最后保存重启即可生效。</p><p><img src="https://img.laoda.de/i/2022/04/26/ltd7e9_7.webp" alt="image-20220426131908530"></p><p>6）绑定之前的主IP为可用状态</p><p>因为你设置里流媒体IP为主IP，所以之前的主IP，就需要重新绑定在网卡上，如果重新上面的操作，你会发现这个IP竟然也能解锁nf了。</p><p>7）要设置你的流媒体IP为出站IP，即可解锁，具体的查找你的IP是否为出站IP，可以使用如下命令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl ipinfo.io</span><br><span class="line">curl ifconfig.me</span><br><span class="line">curl ipinfo.io/json</span><br><span class="line">curl ifconfig.me/all.json</span><br></pre></td></tr></table></figure><p><strong>注意，</strong> 以上命令任用一个即可看到～</p><h2 id="6-网络测试"><a href="#6-网络测试" class="headerlink" title="6. 网络测试"></a>6. 网络测试</h2><p>提供的测试IP和大文件下载。</p><h3 id="6-1-拉斯维加斯机房测试IP"><a href="#6-1-拉斯维加斯机房测试IP" class="headerlink" title="6.1 拉斯维加斯机房测试IP"></a><strong>6.1 拉斯维加斯机房测试IP</strong></h3><ul><li>IP：209.141.46.189</li><li>下载：<a href="http://209.141.46.189/1gb.bin">http://209.141.46.189/1gb.bin</a></li><li>测速：<a href="http://209.141.46.189/speed/">http://209.141.46.189/speed/</a></li></ul><h3 id="6-2-纽约机房测试IP"><a href="#6-2-纽约机房测试IP" class="headerlink" title="6.2 纽约机房测试IP"></a><strong>6.2 纽约机房测试IP</strong></h3><ul><li>IP：198.98.62.145</li><li>下载：<a href="http://198.98.56.80/1gb.bin">http://198.98.56.80/1gb.bin</a></li><li>测速：<a href="http://198.98.56.80/speed/">http://198.98.56.80/speed/</a></li></ul><h3 id="6-3-卢森堡机房测试IP"><a href="#6-3-卢森堡机房测试IP" class="headerlink" title="6.3 卢森堡机房测试IP"></a><strong>6.3 卢森堡机房测试IP</strong></h3><ul><li>IP：107.189.31.120</li><li>下载：<a href="http://107.189.31.120/1gb.bin">http://107.189.31.120/1gb.bin</a></li><li>测速：<a href="http://107.189.31.120/speed/">http://107.189.31.120/speed/</a></li></ul><h3 id="6-4-迈阿密网络测试"><a href="#6-4-迈阿密网络测试" class="headerlink" title="6.4 迈阿密网络测试"></a><strong>6.4 迈阿密网络测试</strong></h3><ul><li>测试IP，45.61.184.50</li><li>speed测试：<a href="http://45.61.184.50/">http://45.61.184.50/</a></li><li>下载测试：<a href="http://45.61.184.50/1gb.bin">http://45.61.184.50/1gb.bin</a></li></ul><h2 id="7-相关推荐"><a href="#7-相关推荐" class="headerlink" title="7. 相关推荐"></a>7. 相关推荐</h2><p><a href="https://iwanlab.com/buyvm-mount/">如何给BuyVM添加存储块？</a></p><p><a href="https://iwanlab.com/buyvm-ipv6/">如何给BuyVM添加IPv6？</a></p><p><a href="https://iwanlab.com/aria2-rclone-filebrowser/">手把手教你搭建私人离线下载神器Aria2，搭配Rclone+Filebrowser自动上传至网盘</a></p><p><a href="https://iwanlab.com/vps-choose/">VPS服务器选购不完全指南</a></p><p><a href="https://iwanlab.com/vps-racknerd/">【VPS选购分享】Racknerd——曾经的“四大金刚”，如今的性价比之王</a></p><p><a href="https://iwanlab.com/vps-bandwagonhost/">【VPS选购分享】Bandwagonhost（搬瓦工）——曾经的王者，三网G口GIA，贵族VPS</a></p><h2 id="8-参考资料"><a href="#8-参考资料" class="headerlink" title="8. 参考资料"></a>8. 参考资料</h2><p><a href="https://www.daniao.org/15082.html">https://www.daniao.org/15082.html</a></p><p><a href="https://p3terx.com/archives/cheap-vps-buyvm.html">https://p3terx.com/archives/cheap-vps-buyvm.html</a></p>]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 美国VPS </tag>
            
            <tag> 欧洲VPS </tag>
            
            <tag> BuyVM </tag>
            
            <tag> PT </tag>
            
            <tag> 无限流量 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【VPS选购分享】HostHatch——目前看过的最高性价比大盘鸡！40刀/年 2T硬盘！</title>
      <link href="/archives/vps-hosthatch/"/>
      <url>/archives/vps-hosthatch/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.laoda.de/i/2022/04/26/hag95n_7.webp" alt="image-20220426104542848"></p><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><p>YouTube：<a href="https://youtu.be/FUo-xMkPSRU">https://youtu.be/FUo-xMkPSRU</a></p><blockquote><p>00:00 前言<br>01:23 HostHatch介绍<br>05:17 HostHatch优缺点及适合人群<br>07:20 HostHatch套餐介绍及购买方法<br>08:35 HostHatch后台介绍</p></blockquote><h2 id="1-背景介绍"><a href="#1-背景介绍" class="headerlink" title="1. 背景介绍"></a>1. 背景介绍</h2><p><a href="https://loll.cc/hosthatch">HostHatch</a>，成立于2011年的美国公司，目前主营全球14个地区的NVMe VPS和大硬盘VPS；</p><p>目前Hosthatch主要提供KVM SSD、OpenVZ SSD以及KVM Storage三大类VPS主机。</p><p>尤其是KVM Storage存储型VPS，价格便宜容量大，深受国内用户喜爱。</p><p><strong>数据中心一览：</strong></p><ol><li>荷兰阿姆斯特丹Amsterdam</li><li>瑞典Stockholm</li><li>美国洛杉矶Los Angeles</li><li>芝加哥Chicago</li><li>纽约New York</li><li>瑞士苏黎世Zurich</li><li>挪威奥斯陆Oslo</li><li>奥地利维也纳Vienna</li><li>波兰华沙Warsaw</li><li>英国伦敦London</li><li>澳大利亚悉尼Sydney</li><li>中国香港Hong Kong</li><li>西班牙马德里Madrid</li><li>意大利米兰Milan</li></ol><p>咕咕自己目前手持三台芝加哥的2020 黑五机器：</p><p><img src="https://img.laoda.de/i/2022/04/25/yuks5l_7.webp" alt="image-20220425210718108"></p><p>分别是<code>1C 1G 10G NVMe 1T 11刀/年</code>、<code>2C 8G 40G NVMe 5T 30刀/年</code>、<code>1C 4G 2T SSD 6T 40刀/年</code>。</p><p>因为这三台机器都在芝加哥，很有可能都是同一台母鸡开出来的，同机房的机器，可以向HostHatch发工单申请内网IP，这样的话，两台机器之间互相传送数据是不消耗流量的（比较是在同一台物理机器上，相当于互相拷贝东西了）</p><p>咕咕利用内网IP，把2T容量的大盘鸡通过NFS挂载到了2C 8G 40G NVMe 5T 30刀&#x2F;年的这台高性能机器上，这样就相当于我的这台30刀的机器现在多了2T的硬盘空间。成为了2C 8G 2TSSD+40G NVMe的超级小鸡。</p><p>然后，咕咕在这个上面安装了QBittorrent，刷PT，意外发现（可能是Bug），似乎流量变成了无限的（正常后台只有5T流量）……</p><p><img src="https://img.laoda.de/i/2022/04/25/z4x3mv_7.webp" alt="image-20220425212454443"></p><p>这个月跑了50多T了，还没停机……</p><p>官网地址：<a href="https://cloud.hosthatch.com/a/2978">https://hosthatch.com</a></p><p>旧面板地址：<a href="https://manage.hosthatch.com/">https://manage.hosthatch.com</a></p><p>新面板地址：<a href="https://cloud.hosthatch.com/">https://cloud.hosthatch.com</a></p><h2 id="2-特点"><a href="#2-特点" class="headerlink" title="2. 特点"></a>2. 特点</h2><ul><li>效率低，工单回复慢</li><li>只有活动套餐适合购买，和Racknerd、Cloudcone一样，官网</li><li>性价比最高的大盘鸡</li><li>面板的参数可能会与实际的参数不符</li></ul><h2 id="3-注意事项"><a href="#3-注意事项" class="headerlink" title="3. 注意事项"></a>3. 注意事项</h2><ul><li>机器很稳定，但是线路较差，对于国内用户来说。因为这么多的数据中心，没有直连的线路。买来落地，你还需要一个转发。</li><li><strong>可能是由于便宜的缘故，Hosthatch工单回复很慢，有时候可能需要一个月时间；</strong></li><li>可以自行改邮箱出给别人，修改完邮箱之后，需要到你原始邮箱里面点击确认修改；</li><li>PUSH机器貌似要收10刀的手续费</li></ul><h2 id="4-适合人群"><a href="#4-适合人群" class="headerlink" title="4. 适合人群"></a>4. 适合人群</h2><ul><li>想买高性价比大盘鸡的用户</li></ul><h2 id="5-套餐介绍"><a href="#5-套餐介绍" class="headerlink" title="5. 套餐介绍"></a>5. 套餐介绍</h2><h3 id="5-1-常规套餐"><a href="#5-1-常规套餐" class="headerlink" title="5.1 常规套餐"></a>5.1 常规套餐</h3><p>官网有售，不建议购买</p><h3 id="5-2-活动套餐"><a href="#5-2-活动套餐" class="headerlink" title="5.2 活动套餐"></a>5.2 活动套餐</h3><p>一出来就售罄了，建议收二手的</p><p>介绍几个咕咕知道的或者是使用过的套餐。</p><p>重点推荐2020 黑五机器：</p><p><code>**1C 4G 2T SSD 6T 40刀/年  芝加哥**</code></p><blockquote><p>其他活动有货之后，咕咕会在这边添加，届时也会在<a href="https://www.youtube.com/c/%E6%88%91%E4%B8%8D%E6%98%AF%E5%92%95%E5%92%95%E9%B8%BD">YouTube</a>、<a href="https://space.bilibili.com/19956596">哔哩哔哩</a>等平台通知大家。</p></blockquote><h4 id="5-1-1-如何购买（以黑五套餐举例）"><a href="#5-1-1-如何购买（以黑五套餐举例）" class="headerlink" title="5.1.1  如何购买（以黑五套餐举例）"></a>5.1.1  如何购买（以黑五套餐举例）</h4><p>1）先注册个账号：<a href="https://cloud.hosthatch.com/a/2978">https://hosthatch.com</a></p><p>2）接着充值：<a href="https://cloud.hosthatch.com/a/2978">https://manage.hosthatch.com/billing/credit/</a></p><p>3）然后发ticket，在ticket里面明确说明你要的VPS配置（你要买的那款），然后等官方帮你处理。一般交货时间大致在<code>7天</code>左右，和往年是一样的，香港、马德里、米兰的就要等的时间长一些了！</p><p><img src="https://img.laoda.de/i/2022/04/26/hhlqz2_7.webp" alt="image-20220426105745565"></p><p>4）具体就是告诉销售人员你的需求（产品分类&#x2F; 配置 &#x2F;所选的机房&#x2F;价格-要详细），客服会帮你创建一个优惠订单，然后去Paypal付款。等待安排机器就成，外国人效率比较慢，可能要等久一些。</p><h2 id="6-测试IP"><a href="#6-测试IP" class="headerlink" title="6. 测试IP"></a>6. 测试IP</h2><ul><li>荷兰Amsterdam</li><li>IP：31.220.6.30</li><li><a href="http://lg.ams.hosthatch.com/100MB.test">http://lg.ams.hosthatch.com/100MB.test</a></li></ul><hr><ul><li>芝加哥Chicago</li><li>IP：193.29.62.40</li><li>下载：<a href="http://lg.chi.hosthatch.com/100MB.test">http://lg.chi.hosthatch.com/100MB.test</a></li></ul><hr><ul><li>香港Hong Kong</li><li>IP：216.250.96.96</li><li>下载：<a href="http://lg.hkg.hosthatch.com/100MB.test">http://lg.hkg.hosthatch.com/100MB.test</a></li></ul><hr><ul><li>英国London</li><li>IP：45.91.93.93</li><li>下载：<a href="http://lg.lon.hosthatch.com/100MB.test">http://lg.lon.hosthatch.com/100MB.test</a></li></ul><hr><ul><li>洛杉矶Los</li><li>IP：185.197.30.30</li><li>下载：<a href="http://lg.lax.hosthatch.com/100MB.test">http://lg.lax.hosthatch.com/100MB.test</a></li></ul><hr><ul><li>纽约New York</li><li>IP：185.213.26.26</li><li>下载：<a href="http://lg.ny.hosthatch.com/100MB.test">http://lg.ny.hosthatch.com/100MB.test</a></li></ul><hr><ul><li>挪威Oslo</li><li>IP：185.175.56.60</li><li>下载：<a href="http://lg.osl.hosthatch.com/100MB.test">http://lg.osl.hosthatch.com/100MB.test</a></li></ul><hr><ul><li>瑞典Stockholm</li><li>IP：176.126.70.17</li><li>下载：<a href="http://lg.sto.hosthatch.com/100MB.test">http://lg.sto.hosthatch.com/100MB.test</a></li></ul><hr><ul><li>悉尼Sydney</li><li>IP：103.73.65.65</li><li>下载：<a href="http://lg.syd.hosthatch.com/100MB.test">http://lg.syd.hosthatch.com/100MB.test</a></li></ul><hr><ul><li>维也纳Vienna</li><li>IP：185.175.59.70</li><li>下载：<a href="http://lg.vie.hosthatch.com/100MB.test">http://lg.vie.hosthatch.com/100MB.test</a></li></ul><hr><ul><li>华沙Warsaw</li><li>IP：45.132.75.75</li><li>下载：<a href="http://lg.waw.hosthatch.com/100MB.test">http://lg.waw.hosthatch.com/100MB.test</a></li></ul><hr><ul><li>苏黎世Zurich</li><li>IP：45.91.92.92</li><li>下载：<a href="http://lg.zrh.hosthatch.com/100MB.test">http://lg.zrh.hosthatch.com/100MB.test</a></li></ul><h2 id="7-相关推荐"><a href="#7-相关推荐" class="headerlink" title="7. 相关推荐"></a>7. 相关推荐</h2><p><a href="https://iwanlab.com/vps-choose/">VPS服务器选购不完全指南</a></p><p><a href="https://iwanlab.com/vps-racknerd/">【VPS选购分享】Racknerd——曾经的“四大金刚”，如今的性价比之王</a></p><p><a href="https://iwanlab.com/vps-bandwagonhost/">【VPS选购分享】Bandwagonhost（搬瓦工）——曾经的王者，三网G口GIA，贵族VPS</a></p>]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 美国VPS </tag>
            
            <tag> Hosthatch </tag>
            
            <tag> 欧洲VPS </tag>
            
            <tag> 亚太VPS </tag>
            
            <tag> 大盘鸡 </tag>
            
            <tag> 香港VPS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【VPS选购分享】Cloudcone—— 高性价比, 自研面板，客服退款干脆利落 廉价VPS</title>
      <link href="/archives/vps-cloudcone/"/>
      <url>/archives/vps-cloudcone/</url>
      
        <content type="html"><![CDATA[<p>上上一期和大家介绍了——<a href="https://blog.laoda.de/archives/vps-racknerd">【VPS选购分享】Racknerd——曾经的“四大金刚”，如今的性价比之王</a></p><p>这期和大家介绍咕咕用过的另一款廉价VPS——Cloudcone</p><img src="https://img.laoda.de/i/2022/04/25/somync_7.webp" alt="image-20220425173440175" style="zoom:50%;" /><p>CloudCone 目前主要提供美国洛杉矶 <a href="https://blog.laoda.de/archives/cheap-datacenters">MC 机房</a>的主机，对于电信用户很多地区会走 CN2 线路，因此延迟和稳定性都较为优秀。同时该主机商提供了按秒计费，随删随用，免费&#x2F;付费 定期备份服务。支持支付宝、Paypal、信用卡等方式付款，增加 IP 只需每月 1 美元一个，更换 IP 每次仅需 2 美元，增加 DDoS 高防 IPv4 是 2.5 美元 &#x2F; 月 &#x2F; 个。</p><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><p>YouTube：<a href="https://youtu.be/ok7TG03Rqx4">https://youtu.be/ok7TG03Rqx4</a></p><blockquote><p>00:00 前言<br>00:20 简单介绍<br>03:05 咕咕目前手持的套餐<br>03:46 Cloudcone特点<br>05:55 Cloudcone注意事项<br>06:36 Cloudcone套餐介绍</p></blockquote><h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><img src="https://img.laoda.de/i/2022/04/25/snfp8s_7.webp" alt="image-20220425173238299" style="zoom:50%;" /><p>咕咕最早接触Cloudcone，第一眼就被他们家的VPS面板后台给吸引了，因为不想Racknerd还有一些VPS厂商一样，用的都是同一个模板，个人感觉他们的后台还是比较好看的，当时挑选了一款20多刀的VPS，用来搭建了个人的邮箱服务器。</p><p>不过，后来莫名其妙被告知说我发垃圾邮件，让我停机整改，发了工单之后，重新安装了系统，后来就放着吃灰了。</p><p>目前咕咕手持一款老用户绝版套餐，年付7.5美元：</p><p><img src="https://img.laoda.de/i/2022/04/25/snufzr_7.webp" alt="image-20220425173307543"></p><h2 id="2-特点"><a href="#2-特点" class="headerlink" title="2. 特点"></a>2. 特点</h2><ul><li>便宜</li><li>只有洛杉矶机房</li><li>经常针对国人做促销活动</li><li>支持免费备份和快照功能（大多数需要额外付费）</li><li>存在超售现象</li><li>有SC系列（后续可扩展升级硬件）和VPS系列（不可扩展）</li><li>按时间计费，支持退款，退款效率比较高</li></ul><h2 id="3-注意事项"><a href="#3-注意事项" class="headerlink" title="3. 注意事项"></a>3. 注意事项</h2><ul><li>购买需要预先充值，充值支持支付宝、Paypal、信用卡等支付方式。例如需要购买2美元月付主机的用户，可以预先充值2美刀。收到活动提示，既可快速抢购活动主机。</li><li>由于可能开到被墙 IP 地址，所以可以选择删掉主机重新购买，由于按秒计费实际并不会扣款，会全额返还金额。也可以选择工单支付2美元更换可用 IP 。</li><li>除了IPV4地址，部分套餐还附赠了3个IPV6地址，需要手动在控制菜单Networking菜单开启。</li><li>部分套餐的免费定期备份功能也需要在Backup菜单开启，之后每天会滚动备份，一直保持三个备份。</li><li>PUSH账号需要接受方和发起方均发工单给Cloudcone的客服人员</li></ul><h2 id="4-适合人群"><a href="#4-适合人群" class="headerlink" title="4. 适合人群"></a>4. 适合人群</h2><ul><li>刚开始折腾的新人（一年就8-15刀，100块钱不到，线路也还凑合，适合练手）；</li><li>电信“出国考察”用户；</li><li>建站其实不是很推荐，感觉机器性能不咋地。</li></ul><h2 id="5-套餐介绍"><a href="#5-套餐介绍" class="headerlink" title="5. 套餐介绍"></a>5. 套餐介绍</h2><p>官网网址：<a href="https://app.cloudcone.com.cn/?ref=6630">https://cloudcone.com/</a></p><h3 id="2022年黑五更新"><a href="#2022年黑五更新" class="headerlink" title="2022年黑五更新"></a>2022年黑五更新</h3><p>$9.99&#x2F;Year<br>1 vCPU Core<br>0.5 GB Dedicated RAM<br>25 GB RAID-10 Drive<br>SSD Cached Storage<br>2 TB&#x2F;Mo Bandwidth at 1 Gb&#x2F;s<br>1x IPv4 address<br>3x IPv6 addresses<br>Instantly Deployed<br>Los Angeles, US<br>Virtualization: KVM<br>Category: VPS<br>Upgradable during order</p><p>购买地址：<a href="https://pull.hello.cloudcone.com/2022-black-friday-vps-sale/?ref=6630">Black Friday VPS</a></p><h3 id="5-1-年付便宜的美国vps"><a href="#5-1-年付便宜的美国vps" class="headerlink" title="5.1 年付便宜的美国vps"></a>5.1 年付便宜的美国vps</h3><p>特征：KVM虚拟，HDD raid10硬盘，G口带宽，默认一个IPv4，洛杉矶<a href="https://blog.laoda.de/archives/cheap-datacenters">multacom机房</a>。</p><p>注意：这促销的便宜VPS硬盘是HDD raid10，不是SSD。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>硬盘</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>512M</td><td>1核</td><td>20G</td><td>2T&#x2F;月</td><td>$9.99&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/79/create?token=hashtag%202022%20vps%20-%201&ref=6630">链接</a></strong></td></tr><tr><td>1G</td><td>2核</td><td>40G</td><td>3T&#x2F;月</td><td>$14.5&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/80/create?token=hashtag%202022%20vps%20-%202&ref=6630">链接</a></strong></td></tr><tr><td>2G</td><td>2核</td><td>80G</td><td>3T&#x2F;月</td><td>$26&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/81/create?token=hashtag%202022%20vps%20-%203&ref=6630">链接</a></strong></td></tr><tr><td>3G</td><td>2核</td><td>110G</td><td>4T&#x2F;月</td><td>$33&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/82/create?token=hashtag%202022%20vps%20-%204&ref=6630">链接</a></strong></td></tr><tr><td>4G</td><td>4核</td><td>180G</td><td>5T&#x2F;月</td><td>$47.8&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/83/create?token=hashtag%202022%20vps%20-%205&ref=6630">链接</a></strong></td></tr><tr><td>8G</td><td>4核</td><td>280G</td><td>7T&#x2F;月</td><td>$89.6&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/84/create?token=hashtag%202022%20vps%20-%206&ref=6630">链接</a></strong></td></tr><tr><td>16G</td><td>8核</td><td>570G</td><td>16T&#x2F;月</td><td>$171&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/85/create?token=hashtag%202022%20vps%20-%207&ref=6630">链接</a></strong></td></tr></tbody></table><p>测试IP，173.82.220.148，IPv6: 2607:f130:0:ef::2，<a href="http://la.lg.cloudc.one/1000MB.test">http://la.lg.cloudc.one/1000MB.test</a></p><p>建议：买Racknerd，Racknerd是SSD，这个是HHD，而且RN最便宜的也只要$9.89&#x2F;年。链接：<a href="https://blog.laoda.de/archives/cheap-vps-racknerd">https://blog.laoda.de/archives/cheap-vps-racknerd</a></p><h3 id="5-2-双12促销VPS【2021-12-21更新】"><a href="#5-2-双12促销VPS【2021-12-21更新】" class="headerlink" title="5.2 双12促销VPS【2021-12-21更新】"></a>5.2 双12促销VPS【2021-12-21更新】</h3><p>特征：MC机房，KVM虚拟，1Gbps带宽，纯SSD RAID10，自带一个ipv4。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>SSD</strong></th><th><strong>月流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>750M</td><td>1核</td><td>18G</td><td>2T</td><td>$8.1&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/70/create?token=12.12-vps-offer-1&ref=6630">链接</a></strong></td></tr><tr><td>1G</td><td>1核</td><td>32G</td><td>2T</td><td>$10.99&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/71/create?token=12.12-vps-offer-2&ref=6630">链接</a></strong></td></tr><tr><td>1G</td><td>2核</td><td>40G</td><td>4T</td><td>$12.12&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/72/create?token=12.12-vps-offer-3&ref=6630">链接</a></strong></td></tr><tr><td>2G</td><td>2核</td><td>48G</td><td>4T</td><td>$19&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/73/create?token=12.12-vps-offer-4&ref=6630">链接</a></strong></td></tr></tbody></table><h3 id="5-3-还有以前的促销"><a href="#5-3-还有以前的促销" class="headerlink" title="5.3 还有以前的促销"></a>5.3 还有以前的促销</h3><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>硬盘</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1G</td><td>1核</td><td>50G</td><td>1T&#x2F;月</td><td>$17.99&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/1/create?token=vps-1&ref=6630">链接</a></strong></td></tr><tr><td>2G</td><td>2核</td><td>95G</td><td>3T&#x2F;月</td><td>$28.99&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/2/create?token=vps-2&ref=6630">链接</a></strong></td></tr><tr><td>3.5G</td><td>3核</td><td>190G</td><td>6T&#x2F;月</td><td>$48.99&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/3/create?token=vps-3&ref=6630">链接</a></strong></td></tr></tbody></table><h3 id="5-4-最后"><a href="#5-4-最后" class="headerlink" title="5.4 最后"></a>5.4 最后</h3><p>测试IP，173.82.220.148，IPv6: 2607:f130:0:ef::2，<a href="http://la.lg.cloudc.one/1000MB.test">http://la.lg.cloudc.one/1000MB.test</a></p><h3 id="5-5-大盘鸡（大硬盘-VPS）【8月4号更新】"><a href="#5-5-大盘鸡（大硬盘-VPS）【8月4号更新】" class="headerlink" title="5.5 大盘鸡（大硬盘 VPS）【8月4号更新】"></a>5.5 大盘鸡（大硬盘 VPS）【8月4号更新】</h3><table><thead><tr><th>内存</th><th>CPU</th><th>硬盘(HDD)</th><th>流量</th><th>带宽</th><th>价格</th><th>购买链接</th></tr></thead><tbody><tr><td>512M</td><td>1核</td><td>100G</td><td>3T&#x2F;月</td><td>1Gbps</td><td>$17.77&#x2F;年</td><td><a href="https://app.cloudcone.com.cn/compute/1291/create?token=storage21.0&ref=6630">点击购买</a></td></tr><tr><td>1G</td><td>1核</td><td>250G</td><td>5T&#x2F;月</td><td>1Gbps</td><td>$20.00&#x2F;年</td><td><a href="https://app.cloudcone.com.cn/compute/1280/create?token=storage21.1&ref=6630">点击购买</a></td></tr><tr><td>2G</td><td>2核</td><td>450G</td><td>8T&#x2F;月</td><td>1Gbps</td><td>$37.77&#x2F;年</td><td><a href="https://app.cloudcone.com.cn/compute/1292/create?token=storage21.4&ref=6630">点击购买</a></td></tr><tr><td>3G</td><td>2核</td><td>750G</td><td>10T&#x2F;月</td><td>1Gbps</td><td>$69.55&#x2F;年</td><td><a href="https://app.cloudcone.com.cn/compute/1293/create?token=storage21.5&ref=6630">点击购买</a></td></tr></tbody></table><h3 id="5-6-常规款-年付"><a href="#5-6-常规款-年付" class="headerlink" title="5.6 常规款 - 年付"></a>5.6 常规款 - 年付</h3><table><thead><tr><th>内存</th><th>CPU</th><th>硬盘(SSD)</th><th>流量</th><th>带宽</th><th>价格</th><th>购买链接</th></tr></thead><tbody><tr><td>512M</td><td>1核</td><td>15G</td><td>5T&#x2F;月</td><td>1Gbps</td><td>$12.95&#x2F;年</td><td><a href="https://app.cloudcone.com.cn/compute/1276/create?token=cexclusive-21.1&ref=6630">点击购买</a></td></tr><tr><td>768M</td><td>1核</td><td>20G</td><td>5T&#x2F;月</td><td>1Gbps</td><td>$14.02&#x2F;年</td><td><a href="https://app.cloudcone.com.cn/compute/1277/create?token=cexclusive-21.2&ref=6630">点击购买</a></td></tr><tr><td>1G</td><td>1核</td><td>30G</td><td>5T&#x2F;月</td><td>1Gbps</td><td>$15.00&#x2F;年</td><td><a href="https://app.cloudcone.com.cn/compute/1278/create?token=cexclusive-21.3&ref=6630">点击购买</a></td></tr><tr><td>2G</td><td>2核</td><td>30G</td><td>4T&#x2F;月</td><td>1Gbps</td><td>$19.55&#x2F;年</td><td><a href="https://app.cloudcone.com.cn/compute/1274/create?token=flash2021-c2&ref=6630">点击购买</a></td></tr><tr><td>3G</td><td>2核</td><td>40G</td><td>6T&#x2F;月</td><td>1Gbps</td><td>$27.77&#x2F;年</td><td><a href="https://app.cloudcone.com.cn/compute/1275/create?token=flash2021-c3&ref=6630">点击购买</a></td></tr></tbody></table><h3 id="5-7-常规款-月付"><a href="#5-7-常规款-月付" class="headerlink" title="5.7 常规款 - 月付"></a>5.7 常规款 - 月付</h3><table><thead><tr><th>内存</th><th>CPU</th><th>硬盘(SSD)</th><th>流量</th><th>带宽</th><th>价格</th><th>购买链接</th></tr></thead><tbody><tr><td>768M</td><td>1核</td><td>15G</td><td>3T&#x2F;月</td><td>1Gbps</td><td>$1.99&#x2F;月</td><td><a href="https://app.cloudcone.com.cn/compute/1266/create?token=flash2021-1&ref=6630">点击购买</a></td></tr><tr><td>1.5G</td><td>1核</td><td>25G</td><td>5T&#x2F;月</td><td>1Gbps</td><td>$2.89&#x2F;月</td><td><a href="https://app.cloudcone.com.cn/compute/1267/create?token=flash2021-2&ref=6630">点击购买</a></td></tr><tr><td>2.5G</td><td>2核</td><td>45G</td><td>5T&#x2F;月</td><td>1Gbps</td><td>$4.99&#x2F;月</td><td><a href="https://app.cloudcone.com.cn/compute/1268/create?token=flash2021-3&ref=6630">点击购买</a></td></tr></tbody></table><h2 id="6-相关推荐"><a href="#6-相关推荐" class="headerlink" title="6. 相关推荐"></a>6. 相关推荐</h2><p>1、<a href="https://blog.laoda.de/archives/cheap-vps-racknerd">【国外便宜高性价比的VPS 推荐】——RackNerd</a><br>2、<a href="https://blog.laoda.de/archives/vps-bandwagonhost">【VPS选购分享】Bandwagonhost（搬瓦工）——曾经的王者，三网G口GIA，贵族VPS</a><br>3、<a href="https://blog.laoda.de/archives/vps-vlutr">【VPS选购分享】Vultr——咕咕的第一台VPS，只适合海外业务，机房遍布全球</a></p>]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cloudcone </tag>
            
            <tag> 美国VPS </tag>
            
            <tag> 廉价VPS </tag>
            
            <tag> CC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【VPS选购分享】Vultr——咕咕的第一台VPS，只适合海外业务，机房遍布全球</title>
      <link href="/archives/vps-vlutr/"/>
      <url>/archives/vps-vlutr/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.laoda.de/i/2022/04/22/skcdej_7.webp" alt="Vultr"></p><h2 id="2023-01-16-更新"><a href="#2023-01-16-更新" class="headerlink" title="2023-01-16 更新"></a>2023-01-16 更新</h2><p><strong>2023 年 Vultr 最新优惠码：新用户免费赠送 250 美元账户余额优惠码</strong></p><p><a href="https://blog.laoda.de/tags/vultr">Vultr</a> 2023 年新年新优惠，目前放出了一个全新的 250 美元优惠码，此外之前的充多少送多少活动仍然还在继续，最高可以充值 100 美元赠送 100 美元账户余额，使用的时候账户余额里面充值的金额和赠送的金额是 1 比 1 的。而这个赠送 250 美元的活动赠送的余额有效期一般是比较短的，一般是 30 天或者 60 天。由于咕咕没有新账户，暂时无法测试，大家可以自行测试。</p><h3 id="一、Vultr-充多少送多少活动"><a href="#一、Vultr-充多少送多少活动" class="headerlink" title="一、Vultr 充多少送多少活动"></a>一、<a href="https://blog.laoda.de/tags/vultr">Vultr 充多少送多少</a>活动</h3><p><strong>优惠码：<a href="https://www.vultr.com/match/?ref=8338420-6G">VULTRMATCH</a></strong></p><p><strong>优惠说明：</strong> 双倍存款！当您开设新账户时，Vultr 将匹配您的第一笔充值，最高 100 美元。不能与任何其他优惠结合使用，仅限新客户。</p><p><strong>优惠页面：</strong><a href="https://www.vultr.com/match/?ref=8338420-6G">点击直达充值页面</a></p><h3 id="二、Vultr-新用户免费赠送-250-美元"><a href="#二、Vultr-新用户免费赠送-250-美元" class="headerlink" title="二、Vultr 新用户免费赠送 250 美元"></a>二、Vultr 新用户免费赠送 250 美元</h3><p><strong>优惠码：FLYVULTR250</strong></p><p><strong>优惠说明：</strong> 使用 250 美元免费额度免费试用 Vultr。仅限新客户。赠送余额有效期一般为 30 天或者 60 天，尽快使用。</p><p><strong>优惠页面：</strong><a href="https://www.vultr.com/promo/try250/?ref=8338420-6G">点击直达优惠页面</a></p><h3 id="三、Vultr-VPS-终身-75-折优惠码"><a href="#三、Vultr-VPS-终身-75-折优惠码" class="headerlink" title="三、Vultr VPS 终身 75 折优惠码"></a>三、<a href="https://blog.laoda.de/tags/vultr">Vultr VPS</a> 终身 75 折优惠码</h3><p><strong>优惠码：25OFF</strong></p><p><strong>优惠说明：</strong> 只要实例处于活动状态，新的云计算实例将获得 25% 的折扣。优惠仅对新客户有效，适用于在创建帐户后 30 天内启动的实例。</p><p><strong>优惠页面：</strong><a href="https://www.vultr.com/promo/25off/?ref=8338420-6G">点击直达购买页面</a></p><hr><h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1. 介绍"></a>1. 介绍</h2><p>VULTR VPS，目前拥有日本东京、美国洛杉矶、西雅图、英国伦敦、德国等全球20个数据中心，这个在同类VPS主机商中数一数二。</p><p>机器全部采用KVM架构，而且是当前主流VPS商家中，唯一可用户自定义通过ISO方法安装Windows系统的商家。</p><p>同时，对于新注册用户，我们可以使用vultr优惠码享受赠送的5-50美元赠送余额，力度还是比较大的。</p><p>VULTR采用小时计费的方式，我们对于建站需要多IP，以及项目需要不同机房的用户来说还是有不少的用途的。尤其是还支持在KVM架构的LINUX中部署WINDOWS系统，一般的服务商是不能做到的。</p><p>咕咕的第一台服务器买的就是Vultr，当时搭建的第一个留学工具也是用的Vultr，用了两个月，被ban了 &#x3D; &#x3D;</p><p>之后就出现了Vultr机房的大量IP被大陆ban掉的情况，而且Vultr似乎没有专门针对大陆做线路优化，导致即使是日本的机房，到大陆也是卡的一批，新加坡、洛杉矶等机房的IP更是基本都是被墙的，所以咕咕后来就转战了别的商家。</p><p>不过Vultr对于海外用户建站，依旧是个不错的选择，今天就和大家简单聊聊。</p><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><p>YouTube：<a href="https://youtu.be/LbRy-v1aluc">https://youtu.be/LbRy-v1aluc</a></p><blockquote><p>00:00 前言<br>01:29 Vultr具体介绍<br>04:05 Vultr优惠活动<br>05:22 Vultr的优缺点<br>08:50 Vultr服务器购买实操</p></blockquote><h3 id="1-1-官网"><a href="#1-1-官网" class="headerlink" title="1.1 官网"></a>1.1 官网</h3><p><strong>网址：<a href="https://www.vultr.com/zh/?ref=8338420">https://www.vultr.com/zh/</a></strong></p><h3 id="1-2-优惠活动"><a href="#1-2-优惠活动" class="headerlink" title="1.2 优惠活动"></a>1.2 优惠活动</h3><h4 id="1-2-1-150-美元免费赠金"><a href="#1-2-1-150-美元免费赠金" class="headerlink" title="1.2.1 150 美元免费赠金"></a>1.2.1 150 美元免费赠金</h4><p><strong>传送门：<a href="https://www.vultr.com/zh/promo/linode150/?ref=8338420">Vultr 新用户免费 150 美元赠金</a></strong></p><p>注意：有效期是一个月</p><p><em>以下是一些常规的优惠，注意，赠金获取一定要通过邀请连接注册才会有效！！</em></p><hr><h4 id="1-2-2-新用户赠送-50-常规优惠"><a href="#1-2-2-新用户赠送-50-常规优惠" class="headerlink" title="1.2.2 新用户赠送$50 - 常规优惠"></a>1.2.2 新用户赠送$50 - 常规优惠</h4><p>注意，有效期30天！</p><p>赠送$50：**<a href="https://www.vultr.com/zh/promo/try50/?ref=8338420">点击获取 $50 美金账户余额</a>**</p><h4 id="1-2-3-新用户赠送-100-常规优惠"><a href="#1-2-3-新用户赠送-100-常规优惠" class="headerlink" title="1.2.3 新用户赠送 $100 -常规优惠"></a>1.2.3 新用户赠送 $100 -常规优惠</h4><p>注意：<strong>有效期只有 14 天</strong></p><p>赠送$100：**<a href="https://www.vultr.com/?ref=8942765-8H">点击获取 $100 美金账户余额</a>**</p><h4 id="1-2-4-充多少送多少活动"><a href="#1-2-4-充多少送多少活动" class="headerlink" title="1.2.4 充多少送多少活动"></a>1.2.4 充多少送多少活动</h4><p>1）<strong>活动地址：<a href="https://www.vultr.com/zh/match/?ref=8338420">Vultr 充值翻倍活动地址</a></strong></p><p>2）充多少，送多少，上限100美元，一年有效期。</p><p><strong>注意事项：</strong></p><ol><li>必须是新用户，老用户没有资格。</li><li>账户扣款的时候充值金额和赠金按照 50&#x2F;50 的比例扣，也就是各扣一半，比如消费了 $10，充值金额扣 $5，赠金扣 $5。</li><li>活动结束时间未知，但是说是限时活动，尽快参加。</li></ol><h2 id="2-特点"><a href="#2-特点" class="headerlink" title="2. 特点"></a>2. 特点</h2><h3 id="2-1-优点"><a href="#2-1-优点" class="headerlink" title="2.1 优点"></a>2.1 优点</h3><ul><li>按小时计费，随用随删，适合一些临时的项目需要</li><li>带快照和备份功能</li><li>用户可以自定义通过ISO方法安装Windows系统</li><li>可以免费使用Plesk Web Admin SE（估计是全球最好用的面板，不过限制3个域名）</li><li>机器性能优秀</li></ul><h3 id="2-2-缺点"><a href="#2-2-缺点" class="headerlink" title="2.2 缺点"></a>2.2 缺点</h3><ul><li>到大陆的线路比较差</li></ul><h2 id="3-适合人群"><a href="#3-适合人群" class="headerlink" title="3. 适合人群"></a>3. 适合人群</h2><ul><li>做面向海外业务的小伙伴</li><li>小白刚接触vps，推荐用vultr来练手</li><li>建站需要多IP</li><li>项目需要不同机房的用户</li><li>需要部署WINDOWS系统的用户</li></ul><h2 id="4-套餐介绍"><a href="#4-套餐介绍" class="headerlink" title="4. 套餐介绍"></a>4. 套餐介绍</h2><h4 id="4-1-Vultr-部分优惠套餐"><a href="#4-1-Vultr-部分优惠套餐" class="headerlink" title="4.1 Vultr 部分优惠套餐"></a>4.1 Vultr 部分优惠套餐</h4><p>最便宜的 $2.5&#x2F;月的VPS的IP地址为ipv6！目前vultr运营着多达20个数据中心。</p><table><thead><tr><th><strong>CPU</strong></th><th><strong>内存</strong></th><th><strong>硬盘</strong></th><th><strong>流量</strong></th><th><strong>IP</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1 核</td><td>0.5GB</td><td>10GB</td><td>0.5TB</td><td>1</td><td>$2.5&#x2F;月</td><td><strong><a href="https://www.vultr.com/?ref=8338420">购买</a></strong></td></tr><tr><td>1 核</td><td>0.5GB</td><td>10GB</td><td>0.5TB</td><td>1</td><td>$3.5&#x2F;月</td><td><a href="https://www.vultr.com/?ref=8338420"><strong>购买</strong></a></td></tr><tr><td>1 核</td><td>1GB</td><td>25GB</td><td>1TB</td><td>1</td><td>$5&#x2F;月</td><td><strong><a href="https://www.vultr.com/?ref=8338420">购买</a></strong></td></tr><tr><td>1 核</td><td>2GB</td><td>55GB</td><td>2TB</td><td>1</td><td>$10&#x2F;月</td><td><strong><a href="https://www.vultr.com/?ref=8338420">购买</a></strong></td></tr><tr><td>2 核</td><td>4GB</td><td>80GB</td><td>3TB</td><td>1</td><td>$20&#x2F;月</td><td><strong><a href="https://www.vultr.com/?ref=8338420">购买</a></strong></td></tr><tr><td>4 核</td><td>8GB</td><td>160GB</td><td>4TB</td><td>1</td><td>$40&#x2F;月</td><td><a href="https://www.vultr.com/?ref=8338420"><strong>购买</strong></a></td></tr><tr><td>6 核</td><td>16GB</td><td>320GB</td><td>5TB</td><td>1</td><td>$80&#x2F;月</td><td><a href="https://www.vultr.com/?ref=8338420"><strong>购买</strong></a></td></tr><tr><td>8 核</td><td>32GB</td><td>640GB</td><td>6TB</td><td>1</td><td>$160&#x2F;月</td><td><a href="https://www.vultr.com/?ref=8338420"><strong>购买</strong></a></td></tr><tr><td>16 核</td><td>64GB</td><td>1280GB</td><td>10TB</td><td>1</td><td>$320&#x2F;月</td><td><a href="https://www.vultr.com/?ref=8338420"><strong>购买</strong></a></td></tr><tr><td>24 核</td><td>96GB</td><td>1600GB</td><td>15TB</td><td>1</td><td>$640&#x2F;月</td><td><a href="https://www.vultr.com/?ref=8338420"><strong>购买</strong></a></td></tr></tbody></table><h4 id="4-2-测试-IP"><a href="#4-2-测试-IP" class="headerlink" title="4.2 测试 IP"></a>4.2 测试 IP</h4><p>官网地址：<a href="https://www.vultr.com/resources/faq/#downloadspeedtests">https://www.vultr.com/resources/faq/#downloadspeedtests</a></p><table><thead><tr><th><strong>机房</strong></th><th><strong>测试 IP</strong></th><th><strong>100MB</strong></th><th><strong>1GB</strong></th><th><strong>LookingGlass</strong></th></tr></thead><tbody><tr><td>Atlanta</td><td>108.61.193.166</td><td><a href="http://ga-us-ping.vultr.com/vultr.com.100MB.bin">100MB</a></td><td><a href="http://ga-us-ping.vultr.com/vultr.com.1000MB.bin">1GB</a></td><td><a href="http://ga-us-ping.vultr.com/">ga-us-ping.vultr.com</a></td></tr><tr><td>Chicago</td><td>107.191.51.12</td><td><a href="http://il-us-ping.vultr.com/vultr.com.100MB.bin">100MB</a></td><td><a href="http://il-us-ping.vultr.com/vultr.com.1000MB.bin">1GB</a></td><td><a href="http://il-us-ping.vultr.com/">il-us-ping.vultr.com</a></td></tr><tr><td>Dallas</td><td>108.61.224.175</td><td><a href="http://tx-us-ping.vultr.com/vultr.com.100MB.bin">100MB</a></td><td><a href="http://tx-us-ping.vultr.com/vultr.com.1000MB.bin">1GB</a></td><td><a href="http://tx-us-ping.vultr.com/">tx-us-ping.vultr.com</a></td></tr><tr><td>Los Angeles</td><td>108.61.219.200</td><td><a href="http://lax-ca-us-ping.vultr.com/vultr.com.100MB.bin">100MB</a></td><td><a href="http://lax-ca-us-ping.vultr.com/vultr.com.1000MB.bin">1GB</a></td><td><a href="http://lax-ca-us-ping.vultr.com/">lax-ca-us-ping.vultr.com</a></td></tr><tr><td>Miami</td><td>104.156.244.232</td><td><a href="http://fl-us-ping.vultr.com/vultr.com.100MB.bin">100MB</a></td><td><a href="http://fl-us-ping.vultr.com/vultr.com.1000MB.bin">1GB</a></td><td><a href="http://fl-us-ping.vultr.com/">fl-us-ping.vultr.com</a></td></tr><tr><td>New Jersey</td><td>108.61.149.182</td><td><a href="https://nj-us-ping.vultr.com/vultr.com.100MB.bin">100MB</a></td><td><a href="https://nj-us-ping.vultr.com/vultr.com.1000MB.bin">1GB</a></td><td><a href="http://nj-us-ping.vultr.com/">nj-us-ping.vultr.com</a></td></tr><tr><td>Seattle</td><td>108.61.194.105</td><td><a href="http://wa-us-ping.vultr.com/vultr.com.100MB.bin">100MB</a></td><td><a href="http://wa-us-ping.vultr.com/vultr.com.1000MB.bin">1GB</a></td><td><a href="http://wa-us-ping.vultr.com/">wa-us-ping.vultr.com</a></td></tr><tr><td>Silicon Valley</td><td>104.156.230.107</td><td><a href="http://sjo-ca-us-ping.vultr.com/vultr.com.100MB.bin">100MB</a></td><td><a href="http://sjo-ca-us-ping.vultr.com/vultr.com.1000MB.bin">1GB</a></td><td><a href="http://sjo-ca-us-ping.vultr.com/">sjo-ca-us-ping.vultr.com</a></td></tr><tr><td>Toronto</td><td>149.248.50.81</td><td><a href="http://tor-ca-ping.vultr.com/vultr.com.100MB.bin">100MB</a></td><td><a href="http://tor-ca-ping.vultr.com/vultr.com.1000MB.bin">1GB</a></td><td><a href="http://tor-ca-ping.vultr.com/">tor-ca-ping.vultr.com</a></td></tr><tr><td>Amsterdam</td><td>108.61.198.102</td><td><a href="http://ams-nl-ping.vultr.com/vultr.com.100MB.bin">100MB</a></td><td><a href="http://ams-nl-ping.vultr.com/vultr.com.1000MB.bin">1GB</a></td><td><a href="http://ams-nl-ping.vultr.com/">ams-nl-ping.vultr.com</a></td></tr><tr><td>Stockholm</td><td>70.34.194.86</td><td><a href="https://sto-se-ping.vultr.com/vultr.com.100MB.bin">100MB</a></td><td><a href="https://sto-se-ping.vultr.com/vultr.com.1000MB.bin">1GB</a></td><td><a href="https://sto-se-ping.vultr.com/">sto-se-ping.vultr.com</a></td></tr><tr><td>Frankfurt</td><td>108.61.210.117</td><td><a href="http://fra-de-ping.vultr.com/vultr.com.100MB.bin">100MB</a></td><td><a href="http://fra-de-ping.vultr.com/vultr.com.1000MB.bin">1GB</a></td><td><a href="http://fra-de-ping.vultr.com/">fra-de-ping.vultr.com</a></td></tr><tr><td>London</td><td>108.61.196.101</td><td><a href="http://lon-gb-ping.vultr.com/vultr.com.100MB.bin">100MB</a></td><td><a href="http://lon-gb-ping.vultr.com/vultr.com.1000MB.bin">1GB</a></td><td><a href="http://lon-gb-ping.vultr.com/">lon-gb-ping.vultr.com</a></td></tr><tr><td>Paris</td><td>108.61.209.127</td><td><a href="http://par-fr-ping.vultr.com/vultr.com.100MB.bin">100MB</a></td><td><a href="http://par-fr-ping.vultr.com/vultr.com.1000MB.bin">1GB</a></td><td><a href="http://par-fr-ping.vultr.com/">par-fr-ping.vultr.com</a></td></tr><tr><td>Singapore</td><td>45.32.100.168</td><td><a href="http://sgp-ping.vultr.com/vultr.com.100MB.bin">100MB</a></td><td><a href="http://sgp-ping.vultr.com/vultr.com.1000MB.bin">1GB</a></td><td><a href="http://sgp-ping.vultr.com/">sgp-ping.vultr.com</a></td></tr><tr><td>Tokyo</td><td>108.61.201.151</td><td><a href="http://hnd-jp-ping.vultr.com/vultr.com.100MB.bin">100MB</a></td><td><a href="http://hnd-jp-ping.vultr.com/vultr.com.1000MB.bin">1GB</a></td><td><a href="http://hnd-jp-ping.vultr.com/">hnd-jp-ping.vultr.com</a></td></tr><tr><td>Sydney</td><td>108.61.212.117</td><td><a href="http://syd-au-ping.vultr.com/vultr.com.100MB.bin">100MB</a></td><td><a href="http://syd-au-ping.vultr.com/vultr.com.1000MB.bin">1GB</a></td><td><a href="http://syd-au-ping.vultr.com/">syd-au-ping.vultr.com</a></td></tr><tr><td>Seoul</td><td>141.164.34.61</td><td><a href="http://sel-kor-ping.vultr.com/vultr.com.100MB.bin">100MB</a></td><td><a href="http://sel-kor-ping.vultr.com/vultr.com.1000MB.bin">1GB</a></td><td><a href="http://sel-kor-ping.vultr.com/">sel-kor-ping.vultr.com</a></td></tr><tr><td>Mexico</td><td>216.238.66.16</td><td><a href="https://mex-mx-ping.vultr.com/vultr.com.100MB.bin">100MB</a></td><td><a href="https://mex-mx-ping.vultr.com/vultr.com.1000MB.bin">1GB</a></td><td><a href="http://mex-mx-ping.vultr.com/">mex-mx-ping.vultr.com</a></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 美国VPS </tag>
            
            <tag> 欧洲VPS </tag>
            
            <tag> Vultr </tag>
            
            <tag> 亚太VPS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【VPS选购分享】Bandwagonhost（搬瓦工）——曾经的王者，三网G口GIA，贵族VPS</title>
      <link href="/archives/vps-bandwagonhost/"/>
      <url>/archives/vps-bandwagonhost/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.laoda.de/i/2022/04/21/12dgp97_7.webp" alt="image-20220421232028829"></p><p>说起搬瓦工，但凡玩过VPS的同学可能都听过它的大名，毕竟曾经可是后台可以一键SSR的商家。</p><p>咕咕大概是在2020年接触的VPS，当时并没有入手搬瓦工（主要还是没很花时间去了解各个商家），入手了之后的话，现在也算是传家宝了。</p><p>目前咕咕手持一个<a href="https://bwg.laoda.de/"><strong>CN2 GIA-E 新款限量版</strong></a>，当时刚出的时候抢的，打完折之后，年付$78.99，可以切换DC6、DC9、日本软银和欧洲联通阿姆斯特丹共12个机房。</p><p>今天就正好来分享一下咕咕对搬瓦工的一些经验分享。</p><h2 id="【补货通知】2023年1月13日更新"><a href="#【补货通知】2023年1月13日更新" class="headerlink" title="【补货通知】2023年1月13日更新"></a>【补货通知】2023年1月13日更新</h2><p>搬瓦工 THE PLAN 限量版套餐即将下架，目前官网已移除介绍页面，仅可通过<a href="https://bwh81.net/aff.php?aff=67086&pid=129">直达链接</a>购买，限时限量，下架后极大概率不会再补货。</p><p>瓦工限量促销一款神秘套餐，年付99美元，购买套餐配置翻倍，优惠完年付92.49刀，配置为2H2G40GSSD1T流量，可以切换瓦工的所有机房，所有的高端机房，包括2月份即将上线的加拿大gia机房。</p><p>优点：可以切换瓦工17个机房，包括所有的高端机房(香港CMI&#x2F;美西CN2 GIA&#x2F;日本软银&#x2F;荷兰9929)</p><p>方案配置：</p><p>硬盘：40 GB SSD<br>内存：2G<br>CPU：2 核<br>流量：1000 GB&#x2F;月<br>带宽：1Gbps<br>方案价格：$99.99 USD&#x2F;年(优惠完年付92.49刀)<br>优惠码：BWH3HYATVBJW<br>购买链接：<a href="https://bwh81.net/aff.php?aff=67086&pid=129">点击直达</a></p><h2 id="【补货通知】2022年1月11日更新"><a href="#【补货通知】2022年1月11日更新" class="headerlink" title="【补货通知】2022年1月11日更新"></a>【补货通知】2022年1月11日更新</h2><p>目前咕咕博客的同款，搬瓦工新款 DC9 限量版套餐补货！$79.99&#x2F;年，1核 CPU，1GB 内存，20GB SSD 硬盘，500GB 月流量，1Gbps 带宽，三网 CN2 GIA。可使用 DC9 CN2 GIA、DC3 CN2 等机房（不能用 DC6、软银、EUNL_9）。</p><p>购买链接：<a href="https://loll.cc/dc9limited">https://loll.cc/dc9limited</a><br>优惠码：<code>BWH3HYATVBJW</code>   （优惠之后是$74.73&#x2F;年）<br>所有方案：<a href="https://bwg.laoda.de/">https://bwg.laoda.de/</a><br>方案选择：<a href="https://blog.laoda.de/archives/vps-bandwagonhost">https://blog.laoda.de/archives/vps-bandwagonhost</a><br>购买教程：<a href="https://blog.laoda.de/archives/vps-bandwagonhost">https://blog.laoda.de/archives/vps-bandwagonhost</a></p><h2 id="2022年11月7日更新"><a href="#2022年11月7日更新" class="headerlink" title="2022年11月7日更新"></a>2022年11月7日更新</h2><p>搬瓦工在售库存监控：<a href="https://bwg.laoda.de/">https://bwg.laoda.de/</a></p><h2 id="2022年7月13日更新"><a href="#2022年7月13日更新" class="headerlink" title="2022年7月13日更新"></a>2022年7月13日更新</h2><h4 id="悉尼限量版"><a href="#悉尼限量版" class="headerlink" title="悉尼限量版"></a>悉尼限量版</h4><p>方案名称：SPECIAL 20G KVM PROMO V5 - SYDNEY LIMITED EDITION VPS</p><p>三网AS10099+AS9929回程，去程：电信163，联通去程还是AS10099+AS9929，移动走的cmi，双程线路都经过香港！此外，悉尼机房上游服务商仍然是xTom。</p><ul><li>硬盘：20 GB SSD</li><li>内存：1024 MB</li><li>CPU：1 核</li><li>流量：500 GB&#x2F;月</li><li>带宽：1Gbps</li><li>测试IP: 103.57.167.91</li><li>日常6.58%优惠码：<a href="https://bwh81.net/aff.php?aff=67086">BWH3HYATVBJW</a></li><li>价格：优惠后年付93.41（原价99.99美元）</li><li>购买：<a href="https://bwh81.net/aff.php?aff=67086&pid=126"><strong>购买链接</strong></a></li></ul><h4 id="香港cmi限量版"><a href="#香港cmi限量版" class="headerlink" title="香港cmi限量版"></a>香港cmi限量版</h4><p>搬瓦工上线全新香港限量版套餐 HONG KONG 85 LIMITED EDITION VPS，采用全新 HK85 机房（并非香港 CN2 GIA）。</p><p>去程：电信和联通绕日本 NTT，再回香港 NTT，移动香港 CMI 直连，回程：三网直连，基本都是走香港 CMI 直连！！</p><p>方案配置：</p><ul><li>硬盘：20 GB SSD</li><li>内存：1024 MB</li><li>CPU：1 核</li><li>流量：500 GB&#x2F;月</li><li>带宽：1Gbps</li><li>方案价格：$79.99 USD&#x2F;年</li><li>购买链接：<a href="https://bwh81.net/aff.php?aff=67086&pid=121"><strong>点击直达</strong></a></li><li>优惠码：<a href="https://bwh81.net/aff.php?aff=67086&pid=121">BWH3HYATVBJW</a></li><li>测试IP：45.78.16.144</li></ul><h4 id="迪拜机房套餐整理"><a href="#迪拜机房套餐整理" class="headerlink" title="迪拜机房套餐整理"></a>迪拜机房套餐整理</h4><p>特征：kvm虚拟，SSD存储，1G带宽，月流量500G起步。</p><p>日常6.58%优惠码：<a href="https://bwh81.net/aff.php?aff=67086">BWH3HYATVBJW</a></p><p>除了香港GIA, 日本GIA外所有机房可以切换， 包括DC6&#x2F;DC9&#x2F;荷兰9929等</p><p>测试IP：162.213.25.70</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>带宽</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1G</td><td>2核</td><td>20G</td><td>0.5T&#x2F;月</td><td>1G</td><td>$50&#x2F;季</td><td><strong><a href="https://bwh81.net/aff.php?aff=67086&pid=114">链接</a></strong></td></tr><tr><td>2G</td><td>3核</td><td>40G</td><td>1.0T&#x2F;月</td><td>1G</td><td>$90&#x2F;季</td><td><strong><a href="https://bwh81.net/aff.php?aff=67086&pid=115">链接</a></strong></td></tr><tr><td>4G</td><td>4核</td><td>80G</td><td>2.0T&#x2F;月</td><td>1G</td><td>$57&#x2F;月</td><td><strong><a href="https://bwh81.net/aff.php?aff=67086&pid=116">链接</a></strong></td></tr><tr><td>16G</td><td>8核</td><td>320G</td><td>4.0T&#x2F;月</td><td>1G</td><td>$160&#x2F;月</td><td><strong><a href="https://bwh81.net/aff.php?aff=67086&pid=118">链接</a></strong></td></tr><tr><td>32G</td><td>10核</td><td>640G</td><td>5.0T&#x2F;月</td><td>1G</td><td>$290&#x2F;月</td><td><strong><a href="https://bwh81.net/aff.php?aff=67086&pid=119">链接</a></strong></td></tr><tr><td>64G</td><td>12核</td><td>1280G</td><td>6.0T&#x2F;月</td><td>1G</td><td>$549&#x2F;月</td><td><strong><a href="https://bwh81.net/aff.php?aff=67086&pid=120">链接</a></strong></td></tr></tbody></table><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><p>YouTube：<a href="https://youtu.be/DuPgALgWyu0">https://youtu.be/DuPgALgWyu0</a></p><blockquote><p>00:00 唠嗑<br>01:08 搬瓦工简单介绍<br>04:49 搬瓦工后台概览<br>12:13 搬瓦工购买或者收购二手需要注意的事项<br>15:15 如果判断搬瓦工原始邮箱（一手邮箱）<br>16:06 关于CN2 GIA线路的迷思<br>17:45 搬瓦工传家宝套餐介绍<br>23:46 搬瓦工在售套餐介绍<br>24:48 搬瓦工特点介绍<br>28:24 KiviVM面板介绍（补充）<br>29:00 最后提醒</p></blockquote><h2 id="1-简单介绍"><a href="#1-简单介绍" class="headerlink" title="1. 简单介绍"></a>1. 简单介绍</h2><p><a href="https://bwh81.net/aff.php?aff=67086">BandwagonHost</a>，加拿大 IT7 Net­works Inc.(819826-8)(2004~) 旗下品牌。因为其拼写和汉语拼音的 “ban­wag­ong” 极为相似，所以大家都亲切地称其为 “搬瓦工”。</p><p>其在美国洛杉矶 &#x2F; 费利蒙市 &#x2F; 新泽西 &#x2F; 纽约、荷兰阿姆斯特丹、中国香港以及日本大阪均有机房，其中洛杉矶有三网直连、CN2 GT、CN2 GIA 顶级线路接入，香港有 CN2 GIA 顶级线路接入，日本大阪有软银 (BBTEC, Soft­Bank) 线路接入，荷兰有联通 CU PM (AS9929&#x2F;AS10099) 精品线路接入。顶级技术，自研 VPS 后台管理面板 Ki­wiVM Con­trol Panel ，已实现高度自动化并提供完善的 API 接口，支持一键迁移机房，并且提供免费自动备份、免费快照以及 99.9% SLA 保障。支持支付宝、Pay­Pal、信用卡等主流付款方式。</p><h3 id="1-1-BandwagonHost-搬瓦工-最新官网镜像地址"><a href="#1-1-BandwagonHost-搬瓦工-最新官网镜像地址" class="headerlink" title="1.1 BandwagonHost(搬瓦工) 最新官网镜像地址"></a>1.1 <a href="https://bwh81.net/aff.php?aff=67086">BandwagonHost</a>(搬瓦工) 最新官网镜像地址</h3><p>由于你懂的原因搬瓦工官网经常会被迫失联，所以官方提供了一个主域名和几个镜像域名。最后一个是官方最新提供的，可流畅访问。</p><ul><li><a href="https://bandwagonhost.com/aff.php?aff=67086">bandwagonhost.com</a>（已被墙）</li><li><a href="https://bwh1.net/aff.php?aff=67086">bwh1.net</a>（已被墙）</li><li><a href="https://bwh8.net/aff.php?aff=67086">bwh8.net</a>（已被墙）</li><li><a href="https://bwh88.net/aff.php?aff=67086">bwh88.net</a>（已被墙）</li><li><a href="https://bwh81.net/aff.php?aff=67086">bwh89.net</a>（移动用户无法访问）</li><li><strong><a href="https://bwh81.net/aff.php?aff=67086">bwh81.net</a></strong></li></ul><h3 id="1-2-BandwagonHost-搬瓦工-最新优惠码"><a href="#1-2-BandwagonHost-搬瓦工-最新优惠码" class="headerlink" title="1.2 BandwagonHost(搬瓦工) 最新优惠码"></a>1.2 BandwagonHost(搬瓦工) 最新优惠码</h3><p><a href="https://bwg.laoda.de/"><code>BWHNY2022</code></a> (循环优惠 12.22%)</p><p><a href="https://bwg.laoda.de/"><code>BWH3HYATVBJW</code></a> (循环优惠 6.58%)</p><p>以下表格中均为原价，不要忘记使用优惠码。年付优惠可与优惠码叠加。</p><h3 id="1-3-搬瓦工线路对比"><a href="#1-3-搬瓦工线路对比" class="headerlink" title="1.3 搬瓦工线路对比"></a>1.3 搬瓦工线路对比</h3><p>搬瓦工服务器套餐种类比较多，但是梳理下来后的服务器网速排序是：<code>搬瓦工香港CN2</code> &gt; <code>搬瓦工CN2 GIA-E</code> &gt;&#x3D; <code>搬瓦工CN2 GIA</code> &gt; <code>搬瓦工CN2 GT</code> &gt; <code>普通KVM</code>。</p><p>一般来说速度越好的越贵(香港vps每月90刀起，仅有500G流量，适合土豪)，性价比高的套餐经常断货（早期49.99刀每年的CN2 GIA基本抢不到）。</p><h2 id="2-注意事项"><a href="#2-注意事项" class="headerlink" title="2. 注意事项"></a>2. 注意事项</h2><h3 id="2-1-自己购买"><a href="#2-1-自己购买" class="headerlink" title="2.1 自己购买"></a>2.1 自己购买</h3><ul><li>进入<a href="https://bwh81.net/aff.php?aff=67086">搬瓦工官网</a>前请先关闭代理或魔法上网，填写注册信息时请尽量填写真实信息，<strong>以免被判定为欺诈导致被砍单</strong>。</li><li>搬瓦工官网首页展示的只是普通线路VPS，如需购买高端线路请点击<a href="https://bwg.laoda.de/">这里</a>的直达购买链接。</li></ul><h3 id="2-2-收购二手"><a href="#2-2-收购二手" class="headerlink" title="2.2 收购二手"></a>2.2 收购二手</h3><p>不少小伙伴有收藏癖，喜欢收一些传家宝套餐，使得搬瓦工最近获得一个称号——“找回工”，原因是买家收购的如果是卖家的二手机器，如果卖家没有把原始邮箱（第一次注册时候的邮箱）一起出给买家的话，后续卖家可以通过这个原始邮箱，向搬瓦工官方申请找回账号，导致二手买家人鸡两空的情况出现。</p><p>所以收购二手的搬瓦工，一定记得要带原始一手邮箱。</p><h4 id="2-2-1-判断一手邮箱的方法"><a href="#2-2-1-判断一手邮箱的方法" class="headerlink" title="2.2.1 判断一手邮箱的方法"></a>2.2.1 判断一手邮箱的方法</h4><img src="https://img.laoda.de/i/2022/04/21/10ndueb_7.webp" alt="image-20220421221602228" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/04/21/10ni2ge_7.webp" alt="image-20220421221623025" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/04/21/10nz3rp_7.webp" alt="image-20220421221701982" style="zoom:33%;" /><h3 id="2-3-关于被打"><a href="#2-3-关于被打" class="headerlink" title="2.3 关于被打"></a>2.3 关于被打</h3><p>GIA整体的带宽有限，容易被打，瓦工一旦被打，会被关小黑屋。</p><h2 id="3-套餐推荐"><a href="#3-套餐推荐" class="headerlink" title="3. 套餐推荐"></a>3. 套餐推荐</h2><h3 id="3-1-传家宝套餐"><a href="#3-1-传家宝套餐" class="headerlink" title="3.1 传家宝套餐"></a>3.1 传家宝套餐</h3><h4 id="3-1-1-2018年双十一2C2G40G1T（29美刀款）"><a href="#3-1-1-2018年双十一2C2G40G1T（29美刀款）" class="headerlink" title="3.1.1 2018年双十一2C2G40G1T（29美刀款）"></a>3.1.1 2018年双十一2C2G40G1T（29美刀款）</h4><p>这款是建站神器（自动备份 + 免费快照），不过因为历史久远，一般收不到带原始邮箱的。</p><h4 id="3-1-2-DC9-CN2-GIA-限量版（39-99刀）"><a href="#3-1-2-DC9-CN2-GIA-限量版（39-99刀）" class="headerlink" title="3.1.2  DC9 CN2 GIA 限量版（39.99刀）"></a>3.1.2  DC9 CN2 GIA 限量版（39.99刀）</h4><img src="https://img.laoda.de/i/2022/04/21/111wdvv_7.webp" alt="image-20220421224040261" style="zoom:50%;" /><p>这款应该是目前能买到的最便宜的 CN2 GIA 方案。</p><p>如果没记错，应该是2019年左右出的，有的小伙伴可以留言区留言，出国留学神器，流量300G&#x2F;月，基本也够中度使用了。</p><p>不过相信当时购买的小伙伴应该都是用的自己的邮箱购买的，如果卖给别人，一般不舍得带原始邮箱，所以想买的小伙伴也要注意啦！</p><h4 id="3-1-3-DC6-CN2-GIA-E-限量版（49-99刀）"><a href="#3-1-3-DC6-CN2-GIA-E-限量版（49-99刀）" class="headerlink" title="3.1.3  DC6 CN2 GIA-E 限量版（49.99刀）"></a>3.1.3  DC6 CN2 GIA-E 限量版（49.99刀）</h4><p>这款的 $49.99&#x2F;年的 DC6 CN2 GIA-E 限量版和之前的 $39.99&#x2F;年的 CN2 GIA 限量版方案是不一样的，这次的 $49.99 的可以使用 DC6 机房和 DC9 机房等其他机房，前面的 $39.99 的只能用 DC9 机房和其他机房（不包括 DC6 机房）。（不能切换软银和阿姆斯特丹AS9929机房）</p><img src="https://img.laoda.de/i/2022/04/21/10zfxve_7.webp" alt="image-20220421223628597" style="zoom: 50%;" /><p>如果没记错，应该也是2019年左右出的，有的小伙伴可以留言区留言，出国留学神器，流量比起39刀的多了200G，500G&#x2F;月，是目前搬瓦工性价比最高的留学鸡。</p><p>不过相信当时购买的小伙伴同样应该都是用的自己的邮箱购买的，如果卖给别人，一般不舍得带原始邮箱，所以想买的小伙伴也要注意啦！</p><h4 id="3-1-4-DC6-CN2-GIA-E-限量版（79-99-89-99-99-99刀）"><a href="#3-1-4-DC6-CN2-GIA-E-限量版（79-99-89-99-99-99刀）" class="headerlink" title="3.1.4  DC6 CN2 GIA-E 限量版（79.99&#x2F;89.99&#x2F;99.99刀）"></a>3.1.4  DC6 CN2 GIA-E 限量版（79.99&#x2F;89.99&#x2F;99.99刀）</h4><p>可使用 DC6 CN2 GIA-E、DC9 CN2 GIA、日本软银、阿姆斯特丹AS9929机房等机房</p><p>79.99刀的折扣之后大概在年付$74.73。</p><p>咕咕买的是89.99刀的，当时各种折扣码，最后是年付$78.99。</p><p>从这款开始，因为之前找回工的称号，很多人已经学聪明了，用一个专门的邮箱来注册，之后方便转手，所以目前市面上流传最多的瓦工CN2 GIA-E 限量版就是这几个价位的机子，买家收鸡也比较放心。</p><img src="https://img.laoda.de/i/2022/04/21/116psfd_7.webp" alt="image-20220421224849332" style="zoom:50%;" /><p>89.99刀的，使用优惠码之后大约在 $84&#x2F;年左右。</p><p>可以明显看到，搬瓦工在不停挑战我们的底线，89.99刀的售罄之后，他家后来还出过相同的配置的，卖99.99刀。</p><img src="https://img.laoda.de/i/2022/04/21/118i1p5_7.webp" alt="image-20220421225149944" style="zoom:50%;" /><p>然后发现没人买，<strong>又降价到 $89.99&#x2F;年了</strong></p><p>从这款89.99开始，加上163扩容，搬瓦工之后再涨价的套餐已经没有了性价比可言，大于90刀，不建议购买。</p><h3 id="3-2-GIA套餐"><a href="#3-2-GIA套餐" class="headerlink" title="3.2 GIA套餐"></a>3.2 GIA套餐</h3><h4 id="3-2-1-BandwagonHost-搬瓦工-美国洛杉矶三网-CN2-GIA-E-线路-VPS"><a href="#3-2-1-BandwagonHost-搬瓦工-美国洛杉矶三网-CN2-GIA-E-线路-VPS" class="headerlink" title="3.2.1 BandwagonHost(搬瓦工) 美国洛杉矶三网 CN2 GIA-E  线路 VPS"></a>3.2.1 BandwagonHost(搬瓦工) 美国洛杉矶三网 <strong>CN2 GIA-E</strong>  线路 VPS</h4><p>电信、联通双程 CN2 GIA 线路；移动去程直连，回程 CN2 GIA 线路。测试 IPv4 地址：<code>173.242.115.254</code></p><h5 id="特点："><a href="#特点：" class="headerlink" title="特点："></a>特点：</h5><ul><li>默认 G口 带宽</li><li>纯 SSD RAID-10</li><li>免费自动备份</li><li>后台有一键快照（备份VPS，还可以导入导出）功能</li><li>在后台 Ki­wiVM 面板可免费一键切换到下面几个机房</li></ul><h5 id="机房："><a href="#机房：" class="headerlink" title="机房："></a>机房：</h5><p>在 CN2 GIA 方案的基础上，再加一个 DC6 CN2 GIA-E 机房、日本大阪软银机房（CN2 GIA-E 11个机房）、阿姆斯特丹联通CUVIP AS9929，且流量保持不变：</p><ul><li><strong>US: Los Angeles, California (DC6 CT CN2GIA-E) [USCA_6] 美国 洛杉矶</strong></li><li><strong>US: Los Angeles, California (DC9 CT CN2GIA) [USCA_9] 美国 洛杉矶</strong></li><li><strong>US: Los Angeles, California (DC3 CN2) [USCA_3] 美国 洛杉矶</strong></li><li>US: Los Angeles, California (DC8 ZNET) [USCA_8] 美国 洛杉矶</li><li>US: Los Angeles, California (DC2 QNET) [USCA_2] 美国 洛杉矶</li><li>US: Los Angeles, California (DC4 MCOM) [USCA_4] 美国 洛杉矶</li><li>US: Fremont, California [USCA_FMT] 美国 弗里蒙特</li><li>US: New Jersey [USNJ] 美国 新泽西</li><li>US: New York [USNY_2] 美国 纽约</li><li>EU: Amsterdam, Netherlands [EUNL_3] 荷兰 阿姆斯特丹</li><li>EU: Amsterdam, Netherlands (China Unicom Premium) UNSTABLE&#x2F;Early access [EUNL_9] 荷兰 阿姆斯特丹</li><li><strong>Japan: Osaka (Softbank) [JPOS_1] 日本 大阪软银</strong></li></ul><table><thead><tr><th align="left">内存</th><th align="left">CPU</th><th align="left">硬盘(SSD)</th><th align="left">带宽</th><th align="left">流量</th><th align="left">价格</th><th align="left">购买链接</th></tr></thead><tbody><tr><td align="left">1G</td><td align="left">1核</td><td align="left">20G</td><td align="left">1Gbps</td><td align="left">500G&#x2F;月</td><td align="left">$79.99&#x2F;年</td><td align="left"><a href="https://bwh81.net/aff.php?aff=67086&pid=105">点击购买</a></td></tr><tr><td align="left">1G</td><td align="left">1核</td><td align="left">20G</td><td align="left">1Gbps</td><td align="left">500G&#x2F;月</td><td align="left">$89.99&#x2F;年</td><td align="left"><a href="https://bwh81.net/aff.php?aff=67086&pid=105">点击购买</a></td></tr></tbody></table><h4 id="3-2-1-BandwagonHost-搬瓦工-美国洛杉矶三网-CN2-GIA-线路-VPS"><a href="#3-2-1-BandwagonHost-搬瓦工-美国洛杉矶三网-CN2-GIA-线路-VPS" class="headerlink" title="3.2.1 BandwagonHost(搬瓦工) 美国洛杉矶三网 CN2 GIA 线路 VPS"></a>3.2.1 BandwagonHost(搬瓦工) 美国洛杉矶三网 CN2 GIA 线路 VPS</h4><p>电信、联通双程 CN2 GIA 线路；移动去程直连，回程 CN2 GIA 线路。测试 IPv4 地址：<code>173.242.115.254</code></p><h5 id="特点：-1"><a href="#特点：-1" class="headerlink" title="特点："></a>特点：</h5><ul><li>默认 G口 带宽</li><li>纯 SSD RAID-10</li><li>免费自动备份</li><li>后台有一键快照（备份VPS，还可以导入导出）功能</li><li>在后台 Ki­wiVM 面板可免费一键切换到下面几个机房</li></ul><h5 id="机房：-1"><a href="#机房：-1" class="headerlink" title="机房："></a>机房：</h5><p>在 CN2 方案的基础上加一个 DC9 CN2 GIA 机房（<strong>CN2 GIA 9个机房</strong>），<strong>且流量保持不变</strong></p><ul><li><strong>US: Los Angeles, California (DC9 CT CN2GIA) [USCA_9] 美国 洛杉矶</strong></li><li><strong>US: Los Angeles, California (DC3 CN2) [USCA_3] 美国 洛杉矶</strong></li><li>US: Los Angeles, California (DC8 ZNET) [USCA_8] 美国 洛杉矶</li><li>US: Los Angeles, California (DC2 QNET) [USCA_2] 美国 洛杉矶</li><li>US: Los Angeles, California (DC4 MCOM) [USCA_4] 美国 洛杉矶</li><li>US: Fremont, California [USCA_FMT] 美国 弗里蒙特</li><li>US: New Jersey [USNJ] 美国 新泽西</li><li>US: New York [USNY_2] 美国 纽约</li><li>EU: Amsterdam, Netherlands [EUNL_3] 荷兰 阿姆斯特丹</li></ul><table><thead><tr><th align="left">内存</th><th align="left">CPU</th><th align="left">硬盘(SSD)</th><th align="left">带宽</th><th align="left">流量</th><th align="left">价格</th><th align="left">购买链接</th></tr></thead><tbody><tr><td align="left">1G</td><td align="left">2核</td><td align="left">20G</td><td align="left">2.5Gbps</td><td align="left">1T&#x2F;月</td><td align="left">$49.99&#x2F;季 $169.99&#x2F;年</td><td align="left"><a href="https://bwh81.net/aff.php?aff=67086&pid=87">点击购买</a></td></tr><tr><td align="left">2G</td><td align="left">3核</td><td align="left">40G</td><td align="left">2.5Gbps</td><td align="left">2T&#x2F;月</td><td align="left">$89.99&#x2F;季 $299.99&#x2F;年</td><td align="left"><a href="https://bwh81.net/aff.php?aff=67086&pid=88">点击购买</a></td></tr><tr><td align="left">4G</td><td align="left">4核</td><td align="left">80G</td><td align="left">2.5Gbps</td><td align="left">3T&#x2F;月</td><td align="left">$56.99&#x2F;月 $549.99&#x2F;年</td><td align="left"><a href="https://bwh81.net/aff.php?aff=67086&pid=89">点击购买</a></td></tr><tr><td align="left">8G</td><td align="left">6核</td><td align="left">160G</td><td align="left">5Gbps</td><td align="left">5T&#x2F;月</td><td align="left">$86.99&#x2F;月 $879.99&#x2F;年</td><td align="left"><a href="https://bwh81.net/aff.php?aff=67086&pid=90">点击购买</a></td></tr><tr><td align="left">16G</td><td align="left">8核</td><td align="left">320G</td><td align="left">5Gbps</td><td align="left">8T&#x2F;月</td><td align="left">$159.99&#x2F;月 $1599.99&#x2F;年</td><td align="left"><a href="https://bwh81.net/aff.php?aff=67086&pid=91">点击购买</a></td></tr><tr><td align="left">32G</td><td align="left">10核</td><td align="left">640G</td><td align="left">10Gbps</td><td align="left">10T&#x2F;月</td><td align="left">$289.99&#x2F;月 $2759.99&#x2F;年</td><td align="left"><a href="https://bwh81.net/aff.php?aff=67086&pid=92">点击购买</a></td></tr><tr><td align="left">64G</td><td align="left">12核</td><td align="left">1280G</td><td align="left">10Gbps</td><td align="left">12T&#x2F;月</td><td align="left">$549.99&#x2F;月 $5399.99&#x2F;年</td><td align="left"><a href="https://bwh81.net/aff.php?aff=67086&pid=93">点击购买</a></td></tr></tbody></table><h4 id="3-2-2-BandwagonHost-搬瓦工-中国香港-CN2-GIA-线路-VPS"><a href="#3-2-2-BandwagonHost-搬瓦工-中国香港-CN2-GIA-线路-VPS" class="headerlink" title="3.2.2 BandwagonHost(搬瓦工) 中国香港 CN2 GIA 线路 VPS"></a>3.2.2 BandwagonHost(搬瓦工) 中国香港 CN2 GIA 线路 VPS</h4><p>适合预算高，对速度特别看重的土豪用户！</p><p>SSD RAID-10，免费自动备份，免费快照。1Gbps 带宽，目前市面上<strong>唯一一家提供“香港”1Gbps cn2 gia带宽</strong>的VPS！</p><p>电信走 CN2 GIA 线路；联通、移动常规线路直连。测试 IPv4 地址：<code>93.179.124.1</code></p><table><thead><tr><th align="left">内存</th><th align="left">CPU</th><th align="left">硬盘(SSD)</th><th align="left">带宽</th><th align="left">流量</th><th align="left">价格</th><th align="left">购买链接</th></tr></thead><tbody><tr><td align="left">2G</td><td align="left">2核</td><td align="left">40G</td><td align="left">1Gbps</td><td align="left">500G&#x2F;月</td><td align="left">$89.99&#x2F;月 $899.99&#x2F;年</td><td align="left"><a href="https://bwh81.net/aff.php?aff=67086&pid=95">点击购买</a></td></tr><tr><td align="left">4G</td><td align="left">4核</td><td align="left">80G</td><td align="left">1Gbps</td><td align="left">1T&#x2F;月</td><td align="left">$155.99&#x2F;月 $1559.99&#x2F;年</td><td align="left"><a href="https://bwh81.net/aff.php?aff=67086&pid=96">点击购买</a></td></tr><tr><td align="left">8G</td><td align="left">6核</td><td align="left">160G</td><td align="left">1Gbps</td><td align="left">2T&#x2F;月</td><td align="left">$299.99&#x2F;月 $2999.99&#x2F;年</td><td align="left"><a href="https://bwh81.net/aff.php?aff=67086&pid=97">点击购买</a></td></tr><tr><td align="left">16G</td><td align="left">8核</td><td align="left">320G</td><td align="left">1Gbps</td><td align="left">4T&#x2F;月</td><td align="left">$589.99&#x2F;月 $5899.99&#x2F;年</td><td align="left"><a href="https://bwh81.net/aff.php?aff=67086&pid=98">点击购买</a></td></tr></tbody></table><h3 id="3-3-联通套餐"><a href="#3-3-联通套餐" class="headerlink" title="3.3 联通套餐"></a>3.3 联通套餐</h3><h4 id="3-3-1-BandwagonHost-搬瓦工-日本大阪-软银线路-VPS"><a href="#3-3-1-BandwagonHost-搬瓦工-日本大阪-软银线路-VPS" class="headerlink" title="3.3.1 BandwagonHost(搬瓦工) 日本大阪 软银线路 VPS"></a>3.3.1 BandwagonHost(搬瓦工) 日本大阪 软银线路 VPS</h4><p>SSD RAID-10，免费自动备份，免费快照；支持后台自助迁移机房。</p><p>三网软银 (BBTEC, Soft­Bank) 线路。测试 IPv4 地址：<code>185.212.59.2</code></p><p>待补充</p><h4 id="3-3-2-BandwagonHost-搬瓦工-荷兰阿姆斯特丹-CU-PM-线路-VPS"><a href="#3-3-2-BandwagonHost-搬瓦工-荷兰阿姆斯特丹-CU-PM-线路-VPS" class="headerlink" title="3.3.2 BandwagonHost(搬瓦工) 荷兰阿姆斯特丹 CU PM 线路 VPS"></a>3.3.2 BandwagonHost(搬瓦工) 荷兰阿姆斯特丹 CU PM 线路 VPS</h4><p>SSD RAID-10，免费自动备份，免费快照；支持后台自助迁移机房。</p><p>三网联通 CU PM (AS9929&#x2F;AS10099) 线路。测试 IPv4 地址：<code>104.255.64.1</code></p><p>待补充</p><h3 id="3-3-普通套餐"><a href="#3-3-普通套餐" class="headerlink" title="3.3 普通套餐"></a>3.3 普通套餐</h3><h4 id="3-3-1-BandwagonHost-搬瓦工-美国洛杉矶-CN2-GT-线路-VPS"><a href="#3-3-1-BandwagonHost-搬瓦工-美国洛杉矶-CN2-GT-线路-VPS" class="headerlink" title="3.3.1 BandwagonHost(搬瓦工) 美国洛杉矶 CN2 GT 线路 VPS"></a>3.3.1 BandwagonHost(搬瓦工) 美国洛杉矶 CN2 GT 线路 VPS</h4><p>电信走 CN2 GT 线路；联通、移动常规线路直连。测试 IPv4 地址：<code>184.170.210.254</code></p><h5 id="特点：-2"><a href="#特点：-2" class="headerlink" title="特点："></a>特点：</h5><ul><li>默认 1Gbps 带宽</li><li>纯 SSD RAID-10</li><li>免费自动备份</li><li>后台有一键快照（备份VPS，还可以导入导出）功能</li><li>默认洛杉矶 DC3 机房，在后台 Ki­wiVM 面板可免费一键切换到下面几个机房</li></ul><h5 id="机房：-2"><a href="#机房：-2" class="headerlink" title="机房："></a>机房：</h5><p>随便怎么迁移，<strong>流量都保持不变，一共有下面 8 个机房可选（CN2 8个机房）：</strong></p><ul><li><strong>US: Los Angeles, California (DC3 CN2) [USCA_3] 美国 洛杉矶</strong></li><li>US: Los Angeles, California (DC8 ZNET) [USCA_8] 美国 洛杉矶</li><li>US: Los Angeles, California (DC2 QNET) [USCA_2] 美国 洛杉矶</li><li>US: Los Angeles, California (DC4 MCOM) [USCA_4] 美国 洛杉矶</li><li>US: Fremont, California [USCA_FMT] 美国 弗里蒙特</li><li>US: New Jersey [USNJ] 美国 新泽西</li><li>US: New York [USNY_2] 美国 纽约</li><li>EU: Amsterdam, Netherlands [EUNL_3] 荷兰 阿姆斯特丹</li></ul><table><thead><tr><th align="left">内存</th><th align="left">CPU</th><th align="left">硬盘(SSD)</th><th align="left">带宽</th><th align="left">流量</th><th align="left">价格</th><th align="left">购买链接</th></tr></thead><tbody><tr><td align="left">1G</td><td align="left">1核</td><td align="left">20G</td><td align="left">1Gbps</td><td align="left">1T&#x2F;月</td><td align="left">$49.99&#x2F;年</td><td align="left"><a href="https://bwh81.net/aff.php?aff=67086&pid=57">点击购买</a></td></tr><tr><td align="left">2G</td><td align="left">1核</td><td align="left">40G</td><td align="left">1Gbps</td><td align="left">2T&#x2F;月</td><td align="left">$52.99&#x2F;半年 $99.99&#x2F;年</td><td align="left"><a href="https://bwh81.net/aff.php?aff=67086&pid=58">点击购买</a></td></tr><tr><td align="left">4G</td><td align="left">2核</td><td align="left">80G</td><td align="left">1Gbps</td><td align="left">3T&#x2F;月</td><td align="left">$59.99&#x2F;季 $199.99&#x2F;年</td><td align="left"><a href="https://bwh81.net/aff.php?aff=67086&pid=59">点击购买</a></td></tr><tr><td align="left">8G</td><td align="left">2核</td><td align="left">160G</td><td align="left">1Gbps</td><td align="left">5T&#x2F;月</td><td align="left">$39.99&#x2F;月 $399.99&#x2F;年</td><td align="left"><a href="https://bwh81.net/aff.php?aff=67086&pid=67">点击购买</a></td></tr><tr><td align="left">16G</td><td align="left">3核</td><td align="left">320G</td><td align="left">1Gbps</td><td align="left">8T&#x2F;月</td><td align="left">$79.99&#x2F;月 $799.99&#x2F;年</td><td align="left"><a href="https://bwh81.net/aff.php?aff=67086&pid=68">点击购买</a></td></tr><tr><td align="left">16G</td><td align="left">3核</td><td align="left">320G</td><td align="left">1Gbps</td><td align="left">12T&#x2F;月</td><td align="left">$99.99&#x2F;月 $999.99&#x2F;年</td><td align="left"><a href="https://bwh81.net/aff.php?aff=67086&pid=106">点击购买</a></td></tr><tr><td align="left">16G</td><td align="left">3核</td><td align="left">320G</td><td align="left">1Gbps</td><td align="left">16T&#x2F;月</td><td align="left">$129.99&#x2F;月 $1299.99&#x2F;年</td><td align="left"><a href="https://bwh81.net/aff.php?aff=67086&pid=107">点击购买</a></td></tr></tbody></table><h4 id="3-3-2-BandwagonHost-搬瓦工-其它多机房-VPS"><a href="#3-3-2-BandwagonHost-搬瓦工-其它多机房-VPS" class="headerlink" title="3.3.2 BandwagonHost(搬瓦工) 其它多机房 VPS"></a>3.3.2 BandwagonHost(搬瓦工) 其它多机房 VPS</h4><p>VM虚拟，购买VPS之后如果想换机房，可以在后台点击一下，可以自动一键转移到其他几个你喜欢的某个机房去（不包括CN2 GIA的两个机房 和 香港）。所有VPS自带一个IPv4。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1G</td><td>2核</td><td>20G</td><td>1T&#x2F;月</td><td>$50&#x2F;年</td><td><strong><a href="https://bwh81.net/aff.php?aff=67086&pid=44">链接</a></strong></td></tr><tr><td>2G</td><td>3核</td><td>40G</td><td>2T&#x2F;月</td><td>$100&#x2F;年</td><td><strong><a href="https://bwh81.net/aff.php?aff=67086&pid=45">链接</a></strong></td></tr><tr><td>4G</td><td>4核</td><td>80G</td><td>3T&#x2F;月</td><td>$20&#x2F;月</td><td><strong><a href="https://bwh81.net/aff.php?aff=67086&pid=46">链接</a></strong></td></tr><tr><td>8G</td><td>5核</td><td>160G</td><td>4T&#x2F;月</td><td>$40&#x2F;月</td><td><strong><a href="https://bwh81.net/aff.php?aff=67086&pid=47">链接</a></strong></td></tr><tr><td>16G</td><td>6核</td><td>320G</td><td>5T&#x2F;月</td><td>$80&#x2F;月</td><td><strong><a href="https://bwh81.net/aff.php?aff=67086&pid=48">链接</a></strong></td></tr></tbody></table><p>其实不是很推荐购买普通套餐，要么GIA要么别买，因为瓦工性价比不咋地，有点儿贵了。</p><h2 id="4-面板介绍"><a href="#4-面板介绍" class="headerlink" title="4. 面板介绍"></a>4. 面板介绍</h2><h3 id="4-1-自动备份"><a href="#4-1-自动备份" class="headerlink" title="4.1 自动备份"></a>4.1 自动备份</h3><p>瓦工根据实际使用的硬盘大小会自动备份，备份可以导入到快照中</p><h3 id="4-2-免费快照"><a href="#4-2-免费快照" class="headerlink" title="4.2 免费快照"></a>4.2 免费快照</h3><p>后台有一键快照（备份VPS，还可以导入导出）功能。</p><p>快照可以免费有三个，可以设置成永久，没设置永久的话，默认保存30天</p><h3 id="4-3-机房转移"><a href="#4-3-机房转移" class="headerlink" title="4.3 机房转移"></a>4.3 机房转移</h3><p>支持转移到各个机房，转移会消耗流量，转移之后，唯一变化的是你服务器的IP，其他东西都保持原样，非常方便。</p>]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 美国VPS </tag>
            
            <tag> CN2 GIA </tag>
            
            <tag> 搬瓦工 </tag>
            
            <tag> Bandwagonhost </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【冷知识】说说国外几大廉价机房，MC、CC、INAP、QN、Sharktech几大机房</title>
      <link href="/archives/cheap-datacenters/"/>
      <url>/archives/cheap-datacenters/</url>
      
        <content type="html"><![CDATA[<h2 id="CC-机房"><a href="#CC-机房" class="headerlink" title="CC 机房"></a>CC 机房</h2><p>首先是 CC 机房，全称是 ColoCrossing，这个机房几乎是廉价 VPS 的标配，比如 VirMach 和 RackNerd 都在用，这个机房线路表现比较好的是洛杉矶和圣何塞、欧洲三个地方。IP 基本被 Google 列入黑名单了，跳 Google 验证，一般比较便宜。25端口默认是开的。<br>测试IP：<br>圣何塞：192.210.207.10<br>西雅图：192.210.143.198<br>洛杉矶：172.245.218.53</p><p>推荐购买：<a href="https://my.racknerd.com/aff.php?aff=1158&pid=621">点击购买</a></p><h2 id="MC机房"><a href="#MC机房" class="headerlink" title="MC机房"></a>MC机房</h2><p>其次是MC机房，全称是 Multacom Corporation，这个机房一些 VPS 也比较常用，比如 CloudCone 和 RackNerd 家的 DC2 用的就是这个机房产品，线路速度和 CC 机房差不多，只有洛杉矶线路。唯一的好处的是 IP 不会跳 Google 验证，另有IPv6。25端口默认是开的。<br>测试IP：204.13.154.10</p><p>推荐购买：<a href="https://my.racknerd.com/aff.php?aff=1158&pid=199">点击购买</a></p><h2 id="INAP机房"><a href="#INAP机房" class="headerlink" title="INAP机房"></a>INAP机房</h2><p>INAP机房，用它的商家分别有DediPath和如今风头正劲的VirMach家的AMD机型，这家这个路由时好时坏，推荐圣何塞和洛杉矶，10g防D，线路一般，不会跳Google验证。有IPv6的，但是25端口默认是关的。<br>测试IP：<br>洛杉矶：45.10.153.103</p><p>买Virmach家的amd机型就对了，千万不要去买DediPath家的正价机，贵得离谱。</p><h2 id="QN机房"><a href="#QN机房" class="headerlink" title="QN机房"></a>QN机房</h2><p>QN机房，全称是 QuadraNet，QN其实是以上机房对大陆优化最好的机房，买杜甫不错，VPS别买PR的就行。</p><p>机房是好机房，独服也香。只是小弟把一手好牌打得稀烂。</p><p>论坛经典名言：狗都不用</p><p>具体见<a href="https://blog.laoda.de/archives/vps-racknerd">这篇文章</a></p><h2 id="鲨鱼机房"><a href="#鲨鱼机房" class="headerlink" title="鲨鱼机房"></a>鲨鱼机房</h2><p>最后是鲨鱼机房，全称是 Sharktech，这个机房号称 CN2，其实狗屁。线路和速度和 MC，CC 家差不多，推洛杉矶线路。好处是全系 IP 防 D，建个网站挺好的，Google 不会跳验证。它家自己有 VPS 销售，另，它家收购了ChangeIP，还有就是贵。有IPv6，以前25端口默认是开的，最近给关了。<br>测试IP：<br>洛杉矶：170.178.171.89<br>丹佛：174.128.247.171</p><p>这家就不推荐购买了，代理不行，建站太贵。</p><p>以上各家机房线路因为没有刻意对国内优化，路由基本就是小孩子尿尿，尿到那算那。运气好的能碰上好线路，不好也没辙。</p><p>补充：</p><blockquote><p>MC机房废了，挤，速度已不如CC机房；鲨鱼机房听说不怎么耐D 线路比其他慢 ；Dedipath机房最近速度明显不如去年了，现在最快的反而是CC 因为用户在离开……</p></blockquote><p>如有不对，欢迎留言区留言斧正！</p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【VPS选购分享】Racknerd——曾经的“四大金刚”，如今的性价比之王</title>
      <link href="/archives/vps-racknerd/"/>
      <url>/archives/vps-racknerd/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.laoda.de/i/2022/04/10/xzrcc4_7.webp" alt="RackNerd"></p><h2 id="特别提醒"><a href="#特别提醒" class="headerlink" title="特别提醒"></a>特别提醒</h2><blockquote><p><strong>注意：</strong><br>1、Racknerd的机器不能DD Windows系统，一旦被发现会删机；<br>2、Racknerd的机器便宜的套餐不支持退款！</p></blockquote><h2 id="RackNerd-在售机型推荐"><a href="#RackNerd-在售机型推荐" class="headerlink" title="RackNerd 在售机型推荐"></a>RackNerd 在售机型推荐</h2><p>所有在售便宜VPS清单：<a href="https://blog.laoda.de/vps.html">https://blog.laoda.de/vps.html</a></p><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><p>YouTube：<a href="https://youtu.be/eOXtxPailNM">https://youtu.be/eOXtxPailNM</a></p><blockquote><p>00:00 唠嗑<br>01:13 正式开始<br>03:46 背景介绍<br>16:52 特点及适合人群<br>20:06 套餐介绍及购买人群</p></blockquote><h2 id="1-前言小故事"><a href="#1-前言小故事" class="headerlink" title="1. 前言小故事"></a>1. 前言小故事</h2><p>开篇就要说到美国VPS的四大金刚（老玩家应该比较熟，咕咕其实是在这之后接触的VPS）——<code>alpharacks</code>、<code>woothosting</code>、<code>nfphosting</code>、<code>hostmybytes</code></p><p>为什么称他们叫金刚呢？因为我们一般说到石头盘，都是因为IO非常低，那么能称为金刚的可想而知，IO要低成什么样子，</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">硬盘I/O (第一次测试) : 2.0 MB/s</span><br><span class="line">硬盘I/O (第二次测试) : 3.0 MB/s</span><br><span class="line">硬盘I/O (第三次测试) : 1.6 MB/s</span><br></pre></td></tr></table></figure><p>欣赏一下什么叫做钻石盘。</p><p>为什么要提到他们呢？因为我们今天的主角——Racknerd的老板，和曾经的四大金刚的老板，是同一个人。（不过现在士别三日，刮目相看了）</p><h3 id="1-1-背景介绍"><a href="#1-1-背景介绍" class="headerlink" title="1.1 背景介绍"></a>1.1 背景介绍</h3><p>想要吃清楚瓜，需要先了解一下基本的背景，咕咕搜集了一些资料，供有兴趣的小伙伴参考。</p><h4 id="1-1-1-Quadranet-介绍"><a href="#1-1-1-Quadranet-介绍" class="headerlink" title="1.1.1 Quadranet 介绍"></a>1.1.1 <strong>Quadranet</strong> 介绍</h4><p><strong>QuadraNet</strong>（以下简称QN）, 最初成立于2001年，是洛杉矶及周边地区的电信提供商。 随着客户群的增长，以及适应不断发展的行业趋势，随着时间的推移，不断扩展服务产品，以涵盖更多种类的基于互联网的产品和服务。 最终发展成为一家提供独立服务器租赁，服务器托管，数据中心空间租赁等全方位服务的数据中心。在过去的十年中，在众多才华横溢的员工的帮助下，QuadraNet已发展成为加利福尼亚州洛杉矶最大的独立服务器租赁、托管、云服务以及带宽提供商之一。</p><p>自2004年起，QuadraNet就在位于洛杉矶市中心与624 South Grand的One Wilshire大厦一墙之隔的洛杉矶电信中心大楼内运营。</p><p>由于来自各大骨干和互联网同行的大量光纤集中接入，One Wilshire被称为世界上连接最多的数据中心大楼。QuadraNet拥有超过400根高速光纤接入One Wilshire网络连接室。</p><h4 id="1-1-2-PR-Pacificrack品牌起家"><a href="#1-1-2-PR-Pacificrack品牌起家" class="headerlink" title="1.1.2 PR|Pacificrack品牌起家"></a>1.1.2 PR|Pacificrack品牌起家</h4><p>Pacificrack,以下简称PR。PR是2007年成立的美国VPS 主机商，2009 年被大公司Quadranet 收购，在2019 年11 月又重新开始独自运作。 产品主要销售VPS，包括便宜vps、KVM SSD vps、站群vps、云主机。</p><p>现任管理人员是一名中国人，称号“Liangzai”，靓仔。</p><h4 id="1-1-3-RN-Racknerd发展史"><a href="#1-1-3-RN-Racknerd发展史" class="headerlink" title="1.1.3 RN|Racknerd发展史"></a>1.1.3 RN|Racknerd发展史</h4><p>racknerd是一家成立于 2019 年的美国主机商，自从开业后至今都保持着火爆的热度。</p><p>主要原因是其 SSD 磁盘、网络不错加上低至年付 <del>20 美元</del> 不到10美元的价格，使其 vps 产品极具性价比。racknerd 主要产品包括 VPS 和独立服务器租用等。在众多美国的 vps 商家里，racknerd 算是价格便宜的 vps，比较适合新手建站。</p><p>根据 racknerd 官网的介绍，在 14 个地区有 17 个数据中心，包括美国洛杉矶、达拉斯、圣何塞、芝加哥、西雅图、纽约、荷兰阿姆斯特丹英国伦敦等。据网友测评反馈系列主机是国内三网直连线路，接入 CN2，国内访问速度还算理想。</p><h3 id="1-2-Racknerd老板介绍"><a href="#1-2-Racknerd老板介绍" class="headerlink" title="1.2 Racknerd老板介绍"></a>1.2 Racknerd老板介绍</h3><p>今天我们一起来看一下Racknerd（简称RN）的老板——Racknerd CEO, Dustin B. Cisneros 的来历。</p><p>他是从QN出来独立开公司发展业务的<strong>技术类销售员</strong>，刚开始的时候他是QN的一名销售经理。</p><p>但是，用QN的话说，Dustin利用QN的资源，超低价批发给自己在QN公司外面注册运营的几个小品牌使用，相当于他赚了至少2份钱。QN机房的销售经理利用职权以超低价在机房拿机器，然后伙同QN的某个职员一起创办并且运作了“alpharacks”，以贱卖VPS的形式运作了5年之久！</p><p><strong>实际上远不止这些：</strong></p><p>（1）hostmybytes这个有23000用户的VPS品牌也是从alpharacks拿机器并且最后被alpharacks收购；</p><p>（2）nfphosting，这个有15000用户的VPS品牌也是一样的套路；</p><p>（3）woothosting，这个有20000用户的贱卖VPS品牌，同套路；</p><p>此外，还有techvps等众多低端贱卖为主的VPS品牌也在这里拿了部分机器售卖VPS。</p><p>QN偶然发现后，果然扯掉了Dustin合作的几个自己的品牌机器网络。</p><p>有人会问，QN多久发现这个事情？</p><p>只能说，非常的迟……因为，Dustin自己偷摸弄的几个品牌，注册用户都已经10万级别的数量。</p><p>QN怎么发现Dustin这种操作的？猜测是，Dustin操盘太过于急中，几个品牌短时间内急中整合，被QN发现。当然，也不排除是QN内部同事举报。</p><h3 id="1-3-事情结果"><a href="#1-3-事情结果" class="headerlink" title="1.3 事情结果"></a>1.3 事情结果</h3><p>QN发现后，非常不爽地立即扯掉了Dustin操盘的几乎所有客户的网线，所以，很多19年的上半年，非常多的中国用户发现，这几家vps供应商无法SSH连接，官网数据库不能用，工单弄不了，大家发现他们好像跑路了。</p><p>不过，alpharacks在推特上，还是说得冠冕堂皇的。</p><p>“19年的6月在推特上宣布倒闭，大体意思是经过了十年的运营，目前因为断供原因，灾备能力超过了服务与金融能力，因此永不再提供相应服务”</p><p>哪不少付了钱的用户怎么办呢？有些用户使用了PP争议，不过据说基本都没有拿到钱，好在钱也不是很多。</p><blockquote><p><strong>PayPal争议</strong>：利用PayPal付款的商家，PayPal支持在6个月的时间内对该笔交易提前争议，可以一定程度上维护买家的权益（不过不要滥用）</p></blockquote><p>QN呢，也想利用下Dustin发展的客户群体，试了很多方法后，开启了PR|Pacificrack的新旅程。（Quadranet发现Alpharacks由其员工Dustin和AdamNG运营，然后Dustin和AdamNG目前因此已经被炒鱿鱼了）</p><p>Dustin并没有回复广大网友的若干问题，而是选择了静默，一段时间之后，和一位华裔“金毛”Jinmao 兄弟，开始了Racknerd的创业之路。</p><img src="https://img.laoda.de/i/2022/04/20/hatkut_7.webp" alt="RN老板接受采访 – Racknerd CEO, Dustin B. Cisneros and VP of Sales Jinmao Xu" style="zoom: 33%;" /><h3 id="1-4-结论"><a href="#1-4-结论" class="headerlink" title="1.4 结论"></a>1.4 结论</h3><p>所以这边给大家理顺了。</p><ul><li>Pacificrack是<strong>QuadraNet</strong>公司自己的；</li><li>Racknerd是之前跑路的四大金刚的老板（也是QuadraNet的前员工）开的。</li></ul><p>那讲道理来说，大家应该是去买Pacificrack，毕竟是大公司的东西，有保证，而不是去买有跑路黑历史的Racknerd才对，为什么咕咕要推荐Racknerd呢？</p><h4 id="1-4-1-PR，狗都不买"><a href="#1-4-1-PR，狗都不买" class="headerlink" title="1.4.1 PR，狗都不买"></a>1.4.1 PR，狗都不买</h4><p><strong>原因是，Pacificrack会无故封号！</strong></p><p>QN找到华人甚至中国人，来操盘发展中国市场业务。</p><p>目前中国区域是一位叫做<code>靓仔liangzai</code>的中国人在操作，人在中国大陆。</p><p>PR商家完全掌握了消费者的心理，提供的VPS看起来极具“性价比”（比如4H4G，年付只要20美元的这类套餐），大家可能一不小心就入手了，当然咕咕也是一样的，发现这种高性价比的机器，感觉不入手就亏了，结果入手之后发现更亏。</p><p>当你买了之后，你就会发现，机器的性能非常垃圾，而且会有各种限制，比如不能跑大流量、CPU不能占满（短时间也不行）等迷幻限制，用户工单或者上TG反映情况之后，轻则靓仔liangzai辱骂，重则被删鸡、删号。（咕咕也有幸有过一次被删号的经历，一开始以为是个例，没想到没被删被骂的才是个例）</p><p>总之，PR的口碑在主机论坛非常之差，狗都不买！</p><blockquote><p><strong>交学费</strong>：买大大小小的VPS（我们亲切地称VPS为小鸡，因为主“机”和“鸡”同音），总归会碰到一些垃圾的商家，一般我们把给这样垃圾商家花掉的钱为<strong>交学费</strong>。</p></blockquote><h4 id="1-4-2-RN，目前看来还不错"><a href="#1-4-2-RN，目前看来还不错" class="headerlink" title="1.4.2 RN，目前看来还不错"></a>1.4.2 RN，目前看来还不错</h4><p>因为之前的跑路黑历史，Racknerd一开始出来的时候，有经验的MJJ们还是非常谨慎的，都称之为灵车（因为随时会翻车）</p><p>不过大家应该知道，嘴和脑子其实是不同步的——<strong>只要你够便宜，就一定会有人买，哪怕会翻车！</strong></p><p>可以说这些VPS商家真的完完全全拿捏了消费者的心理，提供的都是“<strong>极具性价比</strong>”的VPS，大家可能一不小心没忍住，就入手了。</p><p>RN最早提供的机器确实不稳定，三天两头的出问题，入手的朋友都觉得要交学费了，感觉能挺过半年就不错了，反正也没几个钱。</p><p>不过这个想法也是我们的惯性思维，和开头提到的那样，士别三日，刮目相看。从商家的后期表现来看还是想好好的运营的，一直在着手解决问题，咕咕的小鸡挺了一年多了，表现依旧稳定，目前已经快到了续费的日子（圣何塞一年14刀AMD的处理器10GNVME的硬盘）。</p><p>RN的用户，估计一大半都是中国的，太懂咱中国用户了，基本所有的节日都会放出非常优惠的套餐，不停的吸引着用户进入。</p><p>使用一段时间下来，大家发现，商家的机器开始稳定了，虽然线路方面都是比较普通的，但是G口的带宽还是够用的，而且商家不像PR那样限制DD其他系统，甚至有朋友开始用他家的机器挖矿。</p><p>随后商家开始拓展业务，从QN机房到MC机房，再到鲨鱼高防机房，然后开始上圣何塞机房，但是价格却没有太多的提升，直到2020年的黑五，他家推出了闪购活动，机器已经开始抢了。</p><p>机房开拓完成后，商家开始上高性能的AMD+NVMe，虽然价格有提高，但是性价比还是非常好，直到最后在主机论坛的风评渐渐好，甚至在国外主机论坛，成了大家最喜欢的高性价比VPS商家。</p><p>一个当时大家预测半年就会跑路的商家，已经稳定运营了两年，而且业务规模也越来越大，机器也越来越稳定的商家，算是彻底摆脱了之前的跑路风波。（当一个公司能赚钱了，用户也越来越多了，跑路的概率就小了）</p><h2 id="2-特点"><a href="#2-特点" class="headerlink" title="2. 特点"></a>2. 特点</h2><ul><li>廉价VPS；</li><li>主打性价比，有不少便宜的机器，尤其是美西的圣何塞、洛杉矶、西雅图，随着电信163的扩容，比较适合电信用户的国人“出国”考察；</li><li>高性价比账单基本都是年付（官网上面月付的套餐，性价比很低，小伙伴可以在咕咕这边直接看下面的活动套餐是否还有货，进行选购）</li></ul><h2 id="3-适合人群"><a href="#3-适合人群" class="headerlink" title="3. 适合人群"></a>3. 适合人群</h2><ul><li>刚开始折腾的新人（一年就8-15刀，100块钱不到，线路也还凑合，适合练手）；</li><li>电信“出国考察”用户，地区选美西，YouTube轻松过万；</li><li>建站其实不是很推荐（系统无自带的备份和快照功能）不过经常备份问题也不大。</li></ul><h2 id="4-套餐介绍"><a href="#4-套餐介绍" class="headerlink" title="4. 套餐介绍"></a>4. 套餐介绍</h2><h3 id="4-1-官网"><a href="#4-1-官网" class="headerlink" title="4.1 官网"></a>4.1 官网</h3><p>网址：<a href="https://my.racknerd.com/aff.php?aff=1158">https://www.racknerd.com</a></p><h3 id="4-2-RackNerd-隐藏了个超级套餐，性价比很高（貌似断货了已经）"><a href="#4-2-RackNerd-隐藏了个超级套餐，性价比很高（貌似断货了已经）" class="headerlink" title="4.2 RackNerd 隐藏了个超级套餐，性价比很高（貌似断货了已经）"></a>4.2 <del>RackNerd 隐藏了个超级套餐，性价比很高</del>（貌似断货了已经）</h3><p>这个应该是以前做活动时候的套餐，还没下架，性价比很高：</p><ul><li>3x vCPU Core</li><li>45 GB SSD</li><li>3 GB RAM</li><li>6500GB Monthly Premium Bandwidth</li><li>1Gbps Public Network Port</li><li>1 Dedicated IPv4 Address</li><li>KVM &#x2F; SolusVM Control Panel</li><li>LOCATION: 洛杉矶，圣何塞</li><li>JUST $24.28&#x2F;年付 or $47.06&#x2F;两年付（支持支付宝）</li></ul><p><a href="https://my.racknerd.com/aff.php?aff=1158&pid=199">点击购买</a></p><h2 id="2022年9月更新】推荐这款："><a href="#2022年9月更新】推荐这款：" class="headerlink" title="[2022年9月更新】推荐这款："></a>[2022年9月更新】推荐这款：</h2><p>便宜稳定<br>RN   2G &#x2F; 2C &#x2F; 25G SSD &#x2F; 4T<br>$20.98&#x2F;年</p><p>2 GB KVM VPS Special</p><ul><li>2x vCPU Cores</li><li>25 GB PURE SSD RAID-10 Storage</li><li>2 GB RAM</li><li>4000GB Monthly Premium Bandwidth</li><li>1Gbps Public Network Port</li><li>Full Root Admin Access</li><li>1 Dedicated IPv4 Address</li><li>KVM &#x2F; SolusVM Control Panel - Reboot, Reinstall, Manage rDNS, &amp; much more</li><li>Available in Multiple Locations</li><li>JUST $20.98&#x2F;YEAR - WOW!!</li></ul><p><a href="https://my.racknerd.com/aff.php?aff=1158&pid=681">点击购买</a></p><p>可选地区：</p><p><img src="https://img.laoda.de/i/2022/09/09/itst3t-2.webp"></p><p>个人建议洛杉矶和西雅图（第一个Los Angeles和最后一个Seattle）</p><p>还是以前的活动有诚意！</p><blockquote><p>注意：洛杉矶dc2可以申请IPv6，其它不行</p></blockquote><h3 id="【2022年8月更新】22年7月份促销款"><a href="#【2022年8月更新】22年7月份促销款" class="headerlink" title="【2022年8月更新】22年7月份促销款"></a>【2022年8月更新】22年7月份促销款</h3><p><a href="https://blog.laoda.de/tags/racknerd/">RackNerd</a>发布了7月份的促销，这一波促销最低配年付$14.88，此外还有年付$25.88和年付$35.88款，续费同价，感兴趣的小伙伴可以围观。</p><p>KVM虚拟，纯SSD raid10，1Gbps带宽，solusvm面板管理，自带一个IPv4，支持rdns不过需要找客服开启。可选圣何塞&#x2F;纽约&#x2F;芝加哥&#x2F;亚特兰大&#x2F;阿什本</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1.G</td><td>1核</td><td>18G</td><td>2T&#x2F;月</td><td>$14.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=670">链接</a></strong></td></tr><tr><td>2.5G</td><td>2核</td><td>40G</td><td>3T&#x2F;月</td><td>$25.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=671">链接</a></strong></td></tr><tr><td>3.5G</td><td>2核</td><td>60G</td><td>6T&#x2F;月</td><td>$35.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=672">链接</a></strong></td></tr></tbody></table><p><strong>racknerd：美国洛杉矶AMDRyzen +NVMeSSD系列高性能Windows VPS促销，$60&#x2F;年，1核&#x2F;2G&#x2F;35GNVMe&#x2F;1G带宽@2T月流量</strong></p><h3 id="【2022年6月更新】西雅图促销VPS"><a href="#【2022年6月更新】西雅图促销VPS" class="headerlink" title="【2022年6月更新】西雅图促销VPS"></a>【2022年6月更新】西雅图促销VPS</h3><p><a href="https://blog.laoda.de/tags/racknerd">RackNerd</a> 发布了2022年的美国独立日的促销活动，这次优惠仅有<a href="https://blog.laoda.de/tags/us-vps">美国西雅图VPS</a>，服务器统一的1Gbps带宽，最低配年付$12.99起(1核&#x2F;1G内存&#x2F;15G SSD&#x2F;1Gbps@2000G流量)</p><p>KVM虚拟，纯SSD raid10，1Gbps带宽，solusvm面板管理，自带一个IPv4，支持rdns不过需要找客服开启。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1G</td><td>1核</td><td>15G</td><td>2T&#x2F;月</td><td>$12.99&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=666">链接</a></strong></td></tr><tr><td>2G</td><td>1核</td><td>30G</td><td>4T&#x2F;月</td><td>$19.99&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=667">链接</a></strong></td></tr><tr><td>3G</td><td>2核</td><td>45G</td><td>5T&#x2F;月</td><td>$28.99&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=668">链接</a></strong></td></tr></tbody></table><h3 id="1、【2022-4-10更新】洛杉矶Windows-VPS-套餐促销"><a href="#1、【2022-4-10更新】洛杉矶Windows-VPS-套餐促销" class="headerlink" title="1、【2022-4-10更新】洛杉矶Windows VPS 套餐促销"></a>1、【2022-4-10更新】洛杉矶Windows VPS 套餐促销</h3><p>高性能 Windows VPS，采用ryzen 3900X（4.6G主频），DDR4内存，纯NVMe（阵列），洛杉矶DC-02机房（multacom），1G共享带宽,1个ipv4，支持rdns，需要联系客服开启。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>NVMe</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>2.0G</td><td>1核</td><td>35G</td><td>2.0T&#x2F;月</td><td>$60&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=340">链接</a></strong></td></tr><tr><td>2.5G</td><td>1核</td><td>40G</td><td>3.5T&#x2F;月</td><td>$69&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=435">链接</a></strong></td></tr><tr><td>3.0G</td><td>2核</td><td>35G</td><td>3.0T&#x2F;月</td><td>$79&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=346">链接</a></strong></td></tr><tr><td>4.0G</td><td>3核</td><td>60G</td><td>6.0T&#x2F;月</td><td>$115&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=436">链接</a></strong></td></tr><tr><td>12G</td><td>4核</td><td>160G</td><td>12T&#x2F;月</td><td>$289&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=437">链接</a></strong></td></tr></tbody></table><p>以下都是之前的促销，感兴趣的可以看看！！</p><hr><h3 id="2、4月圣何塞vps促销"><a href="#2、4月圣何塞vps促销" class="headerlink" title="2、4月圣何塞vps促销"></a>2、4月圣何塞vps促销</h3><p>KVM虚拟，纯SSD raid10，1Gbps带宽，solusvm面板管理，自带一个IPv4，支持rdns不过需要找客服开启。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1G</td><td>1核</td><td>12G</td><td>1T&#x2F;月</td><td>$11.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=648">链接</a></strong></td></tr><tr><td>2G</td><td>1核</td><td>25G</td><td>3T&#x2F;月</td><td>$17.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=649">链接</a></strong></td></tr><tr><td>3G</td><td>2核</td><td>55G</td><td>5T&#x2F;月</td><td>$29.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=650">链接</a></strong></td></tr></tbody></table><h3 id="3、3月份促销vps"><a href="#3、3月份促销vps" class="headerlink" title="3、3月份促销vps"></a>3、3月份促销vps</h3><p>特征：KVM虚拟，1Gbps带宽，纯SSD阵列，支持RDNS，可选圣何塞、芝加哥、达拉斯、亚特兰大、纽约、阿什本这6个数据中心！！！</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>SSD</strong></th><th><strong>月流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1G</td><td>1核</td><td>22G</td><td>2.5T</td><td>$13.89&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=645">链接</a></strong></td></tr><tr><td>2G</td><td>2核</td><td>30G</td><td>4.0T</td><td>$23.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=646">链接</a></strong></td></tr><tr><td>3.5G</td><td>2核</td><td>55G</td><td>6.0T</td><td>$36.89&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=647">链接</a></strong></td></tr></tbody></table><h3 id="4、2022虎年春节促销"><a href="#4、2022虎年春节促销" class="headerlink" title="4、2022虎年春节促销"></a>4、2022虎年春节促销</h3><p>可选机房： 圣何塞, 达拉斯, 芝加哥, 纽约, 西雅图。</p><p>基于KVM虚拟，纯SSD raid10整列，自带一个IPv4，1Gbps带宽，solusvm管理面板，支持rdns。</p><p>提示：圣何塞，西雅图位于位于西海岸，对于国内来说，速度会好一点。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>SSD</strong></th><th><strong>月流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>768M</td><td>1核</td><td>13G</td><td>1T</td><td>$10.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=632">链接</a></strong></td></tr><tr><td>1.5G</td><td>1核</td><td>23G</td><td>3T</td><td>$15.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=633">链接</a></strong></td></tr><tr><td>2.5G</td><td>2核</td><td>43G</td><td>6T</td><td>$26.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=634">链接</a></strong></td></tr></tbody></table><h3 id="5、2022年元旦促销-续费同价"><a href="#5、2022年元旦促销-续费同价" class="headerlink" title="5、2022年元旦促销-续费同价"></a>5、2022年元旦促销-续费同价</h3><p>可选机房：洛杉矶, 圣何塞, 达拉斯, 芝加哥, 纽约, 西雅图。</p><p>基于KVM虚拟，纯SSD raid10整列，自带一个IPv4，1Gbps带宽，solusvm管理面板，支持rdns。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>SSD</strong></th><th><strong>月流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>512M</td><td>1核</td><td>10G</td><td>1T</td><td>$9.89&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=620">链接</a></strong></td></tr><tr><td>1G</td><td>1核</td><td>20G</td><td>2T</td><td>$13.98&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=621">链接</a></strong></td></tr><tr><td>2G</td><td>2核</td><td>35G</td><td>4T</td><td>$24.98&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=622">链接</a></strong></td></tr><tr><td>3G</td><td>2核</td><td>50G</td><td>6T</td><td>$31.98&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=623">链接</a></strong></td></tr></tbody></table><h3 id="6、2021年的黑五促销"><a href="#6、2021年的黑五促销" class="headerlink" title="6、2021年的黑五促销"></a>6、2021年的黑五促销</h3><p>可选机房：洛杉矶、圣何塞、达拉斯、芝加哥、纽约和西雅图</p><p>基于KVM虚拟，纯SSD raid10整列，自带一个IPv4，1Gbps带宽，solusvm管理面板，支持rdns。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>SSD</strong></th><th><strong>月流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>768M</td><td>1核</td><td>12G</td><td>1T</td><td>$10.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=587">链接</a></strong></td></tr><tr><td>1G</td><td>1核</td><td>25G</td><td>4T</td><td>$14.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=588">链接</a></strong></td></tr><tr><td>2.5G</td><td>2核</td><td>50G</td><td>6T</td><td>$27.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=589">链接</a></strong></td></tr><tr><td>3G</td><td>2核</td><td>60G</td><td>8T</td><td>$34.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=590">链接</a></strong></td></tr><tr><td>4G</td><td>3核</td><td>75G</td><td>10T</td><td>$43.39&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=591">链接</a></strong></td></tr></tbody></table><h3 id="7、内存1-5-2G配置的VPS"><a href="#7、内存1-5-2G配置的VPS" class="headerlink" title="7、内存1.5-2G配置的VPS"></a>7、内存1.5-2G配置的VPS</h3><p>基于KVM虚拟，纯SSD raid10整列，自带一个IPv4，1Gbps带宽，solusvm管理面板，支持rdns。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>硬盘</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1.5G</td><td>2核</td><td>20G</td><td>5.5T&#x2F;月</td><td>$19.50&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=102">链接</a></strong></td></tr><tr><td>1.5G</td><td>1核</td><td>30G</td><td>3T&#x2F;月</td><td>$25.95&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=319">链接</a></strong></td></tr><tr><td>2G</td><td>2核</td><td>23G</td><td>3.5T&#x2F;月</td><td>$20.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=74">链接</a></strong></td></tr><tr><td>2G</td><td>2核</td><td>35G</td><td>5T&#x2F;月</td><td>$22.49&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=513">链接</a></strong></td></tr><tr><td>2G</td><td>3核</td><td>25G</td><td>3T&#x2F;月</td><td>$21.80&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=58">链接</a></strong></td></tr><tr><td>2G</td><td>2核</td><td>25G</td><td>4.5T&#x2F;月</td><td>$21.89&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=121">链接</a></strong></td></tr><tr><td>2G</td><td>2核</td><td>35G</td><td>4T&#x2F;月</td><td>$22.80&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=66">链接</a></strong></td></tr><tr><td>2G</td><td>2核</td><td>27G</td><td>5T&#x2F;月</td><td>$24.00&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=165">链接</a></strong></td></tr><tr><td>2G</td><td>2核</td><td>27G</td><td>5T&#x2F;月</td><td>$24.00&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=168">链接</a></strong></td></tr><tr><td>2G</td><td>2核</td><td>25G</td><td>4T&#x2F;月</td><td>$24.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=237">链接</a></strong></td></tr><tr><td>2G</td><td>2核</td><td>35G</td><td>4T&#x2F;月</td><td>$25.89&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=193">链</a><a href="https://my.racknerd.com/aff.php?aff=1158&pid=193">接</a></strong></td></tr></tbody></table><h3 id="8、内存2-5G-2-8G-VPS"><a href="#8、内存2-5G-2-8G-VPS" class="headerlink" title="8、内存2.5G-2.8G VPS"></a>8、内存2.5G-2.8G VPS</h3><p>基于KVM虚拟，纯SSD raid10整列，自带一个IPv4，1Gbps带宽，solusvm管理面板，支持rdns。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>硬盘</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>2.5G</td><td>1核</td><td>25G</td><td>3T&#x2F;月</td><td>$23.59&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=290">链接</a></strong></td></tr><tr><td>2.5G</td><td>2核</td><td>45G</td><td>5T&#x2F;月</td><td>$21.50&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=477">链接</a></strong></td></tr><tr><td>2.5G</td><td>3核</td><td>25G</td><td>5T&#x2F;月</td><td>$22.00&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=171">链接</a></strong></td></tr><tr><td>2.5G</td><td>2核</td><td>35G</td><td>4T&#x2F;月</td><td>$22.38&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=430">链接</a></strong></td></tr><tr><td>2.5G</td><td>2核</td><td>45G</td><td>5T&#x2F;月</td><td>$22.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=182">链接</a></strong></td></tr><tr><td>2.5G</td><td>3核</td><td>35G</td><td>6T&#x2F;月</td><td>$23.50&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=98">链接</a></strong></td></tr><tr><td>2.5G</td><td>2核</td><td>33G</td><td>4T&#x2F;月</td><td>$25.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=240">链接</a></strong></td></tr><tr><td>2.5G</td><td>2核</td><td>40G</td><td>5T&#x2F;月</td><td>$25.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=327">链接</a></strong></td></tr><tr><td>2.5G</td><td>3核</td><td>40G</td><td>6T&#x2F;月</td><td>$27.80&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=57">链接</a></strong></td></tr><tr><td>2.5G</td><td>3核</td><td>40G</td><td>5T&#x2F;月</td><td>$27.80&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=59">链接</a></strong></td></tr><tr><td>2.5G</td><td>2核</td><td>38G</td><td>6.5T&#x2F;月</td><td>$28.71&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=53">链接</a></strong></td></tr><tr><td>2.5G</td><td>2核</td><td>50G</td><td>5T&#x2F;月</td><td>$39.95&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=320">链接</a></strong></td></tr><tr><td>2.74G</td><td>2核</td><td>43G</td><td>6T&#x2F;月</td><td>$27.40&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=263">链接</a></strong></td></tr><tr><td>2.8G</td><td>3核</td><td>58G</td><td>5T&#x2F;月</td><td>$29.99&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=522">链接</a></strong></td></tr></tbody></table><h3 id="9、内存3-3-74G-VPS"><a href="#9、内存3-3-74G-VPS" class="headerlink" title="9、内存3-3.74G VPS"></a>9、内存3-3.74G VPS</h3><p>基于KVM虚拟，纯SSD raid10整列，自带一个IPv4，1Gbps带宽，solusvm管理面板，支持rdns。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>硬盘</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>3G</td><td>3核</td><td>45G</td><td>6.5T&#x2F;月</td><td>$24.28&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=199">链接</a></strong></td></tr><tr><td>3G</td><td>2核</td><td>32G</td><td>4T&#x2F;月</td><td>$24.60&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=75">链接</a></strong></td></tr><tr><td>3G</td><td>3核</td><td>40G</td><td>4T&#x2F;月</td><td>$27.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=147">链接</a></strong></td></tr><tr><td>3G</td><td>3核</td><td>42G</td><td>5T&#x2F;月</td><td>$28.20&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=234">链接</a></strong></td></tr><tr><td>3G</td><td>2核</td><td>40G</td><td>5T&#x2F;月</td><td>$28.99&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=291">链接</a></strong></td></tr><tr><td>3G</td><td>3核</td><td>33G</td><td>6T&#x2F;月</td><td>$29.89&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=122">链接</a></strong></td></tr><tr><td>3G</td><td>2核</td><td>35G</td><td>5T&#x2F;月</td><td>$29.99&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=473">链接</a></strong></td></tr><tr><td>3G</td><td>3核</td><td>48G</td><td>7T&#x2F;月</td><td>$31.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=253">链接</a></strong></td></tr><tr><td>3.5G</td><td>3核</td><td>45G</td><td>7T&#x2F;月</td><td>$28.99&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=136">链接</a></strong></td></tr><tr><td>3.5G</td><td>3核</td><td>45G</td><td>7T&#x2F;月</td><td>$28.99&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=130">链接</a></strong></td></tr><tr><td>3.5G</td><td>3核</td><td>36G</td><td>5T&#x2F;月</td><td>$30.19&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=125">链接</a></strong></td></tr><tr><td>3.5G</td><td>3核</td><td>55G</td><td>6T&#x2F;月</td><td>$32.38&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=431">链接</a></strong></td></tr><tr><td>3.5G</td><td>3核</td><td>40G</td><td>6.5T&#x2F;月</td><td>$34.00&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=169">链接</a></strong></td></tr><tr><td>3.5G</td><td>2核</td><td>50G</td><td>6.5T&#x2F;月</td><td>$34.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=285">链接</a></strong></td></tr><tr><td>3.74G</td><td>3核</td><td>57G</td><td>8T&#x2F;月</td><td>$37.40&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=264">链接</a></strong></td></tr></tbody></table><h3 id="10、内存4G以上VPS"><a href="#10、内存4G以上VPS" class="headerlink" title="10、内存4G以上VPS"></a>10、内存4G以上VPS</h3><p>基于KVM虚拟，纯SSD raid10整列，自带一个IPv4，1Gbps带宽，solusvm管理面板，支持rdns。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>硬盘</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>4G</td><td>3核</td><td>45G</td><td>6T&#x2F;月</td><td>$35.68&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=153">链接</a></strong></td></tr><tr><td>4G</td><td>3核</td><td>45G</td><td>6T&#x2F;月</td><td>$35.68&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=76">链接</a></strong></td></tr><tr><td>4G</td><td>3核</td><td>50G</td><td>5T&#x2F;月</td><td>$42.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=241">链接</a></strong></td></tr><tr><td>4G</td><td>3核</td><td>50G</td><td>10T&#x2F;月</td><td>$45.89&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=474">链接</a></strong></td></tr><tr><td>4G</td><td>4核</td><td>55G</td><td>8T&#x2F;月</td><td>$39.89&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=195">链接</a></strong></td></tr><tr><td>5.5G</td><td>4核</td><td>88G</td><td>10T&#x2F;月</td><td>$63.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=254">链接</a></strong></td></tr><tr><td>8G</td><td>4核</td><td>100G</td><td>5T&#x2F;月</td><td>$89.00&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=312">链接</a></strong></td></tr></tbody></table><h3 id="11、大硬盘VPS"><a href="#11、大硬盘VPS" class="headerlink" title="11、大硬盘VPS"></a>11、大硬盘VPS</h3><p><strong>特征</strong>：1Gbps带宽，自带一个IPv4，solusvm管理，硬盘SSD cached，洛杉矶MC机房！</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>硬盘</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>2G</td><td>2核</td><td>50G</td><td>4T&#x2F;月</td><td>$36&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=61">链接</a></strong></td></tr><tr><td>4G</td><td>3核</td><td>80G</td><td>5T&#x2F;月</td><td>$59&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=62">链接</a></strong></td></tr><tr><td>6G</td><td>4核</td><td>140G</td><td>6T&#x2F;月</td><td>$95&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=63">链接</a></strong></td></tr><tr><td>8G</td><td>4核</td><td>100G</td><td>5T&#x2F;月</td><td>$89&#x2F;年</td><td><a href="https://my.racknerd.com/aff.php?aff=1158&pid=312"><strong>链接</strong></a></td></tr><tr><td>8G</td><td>4核</td><td>200G</td><td>8T&#x2F;月</td><td>$135&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=64">链接</a></strong></td></tr></tbody></table><h3 id="12、网络测试"><a href="#12、网络测试" class="headerlink" title="12、网络测试"></a>12、网络测试</h3><p><strong>洛杉矶DC02：</strong> 204.13.154.3，<a href="http://lg-lax02.racknerd.com/1000MB.test">http://lg-lax02.racknerd.com/1000MB.test</a></p><p><strong>洛杉矶DC05：</strong> 5.181.135.8，<a href="http://lg-lax05.racknerd.com/1000MB.test">http://lg-lax05.racknerd.com/1000MB.test</a></p><p><strong>圣何塞：</strong> 192.210.207.88，<a href="http://lg-sj.racknerd.com/1000MB.test">http://lg-sj.racknerd.com/1000MB.test</a></p><p><strong>西雅图：</strong> 192.3.253.2，<a href="http://lg-sea.racknerd.com/1000MB.test">http://lg-sea.racknerd.com/1000MB.test</a></p><p><strong>新泽西：</strong> 192.3.165.30，<a href="http://lg-nj.racknerd.com/1000MB.test">http://lg-nj.racknerd.com/1000MB.test</a></p><p><strong>达拉斯</strong>：198.23.249.100，<a href="http://lg-dal.racknerd.com/1000MB.test">http://lg-dal.racknerd.com/1000MB.test</a></p><p><strong>芝加哥：</strong> 198.23.228.15，<a href="http://lg-chi.racknerd.com/1000MB.test">http://lg-chi.racknerd.com/1000MB.test</a></p><p><strong>阿什本：</strong> 107.173.166.10，<a href="http://lg-ash.racknerd.com/1000MB.test">http://lg-ash.racknerd.com/1000MB.test</a></p><p><strong>亚特兰大：</strong> 107.173.164.160，<a href="http://lg-atl.racknerd.com/1000MB.test">http://lg-atl.racknerd.com/1000MB.test</a></p><p><strong>荷兰.阿姆斯特丹：</strong> 23.94.101.88，<a href="http://lg-ams.racknerd.com/1000MB.test">http://lg-ams.racknerd.com/1000MB.test</a></p><p><strong>水牛城：</strong> 192.3.81.8，<a href="http://lg-ny.racknerd.com/1000MB.test">http://lg-ny.racknerd.com/1000MB.test</a></p><h2 id="5-相关推荐"><a href="#5-相关推荐" class="headerlink" title="5. 相关推荐"></a>5. 相关推荐</h2><p>1、<a href="https://blog.laoda.de/archives/cheap-vps-cloudcone">【国外便宜高性价比的VPS 推荐】——CloudCone</a></p><h2 id="6-参考资料"><a href="#6-参考资料" class="headerlink" title="6. 参考资料"></a>6. 参考资料</h2><p><a href="https://tech.a-better-planet.com/pr-pacificrack-rn-racknerd-history.html">https://tech.a-better-planet.com/pr-pacificrack-rn-racknerd-history.html</a></p><p><a href="https://tech.a-better-planet.com/vps">https://tech.a-better-planet.com/vps</a></p><p><a href="https://www.kxceping.com/20110.htm">https://www.kxceping.com/20110.htm</a></p><p><a href="https://www.kxceping.com/6210.htm">https://www.kxceping.com/6210.htm</a></p>]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Racknerd </tag>
            
            <tag> 美国VPS </tag>
            
            <tag> 四大金刚 </tag>
            
            <tag> Quadranet </tag>
            
            <tag> Pacificrack </tag>
            
            <tag> alpharacks </tag>
            
            <tag> woothosting </tag>
            
            <tag> nfphosting </tag>
            
            <tag> hostmybytes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩儿的Docker项目】自建一个真正属于自己的开源IM聊天系统——Rocket.chat</title>
      <link href="/archives/docker-compose-install-rocketchat/"/>
      <url>/archives/docker-compose-install-rocketchat/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.laoda.de/i/2022/04/16/hf1nmi_7.webp" alt="image-20220416105315207"></p><blockquote><p>注意：VPS的内存最好大于2G，再设置2G的SWAP，否则可能跑不起来！</p></blockquote><p>设置SWAP可以用脚本:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O box.sh https://raw.githubusercontent.com/BlueSkyXN/SKY-BOX/main/box.sh &amp;&amp; <span class="built_in">chmod</span> +x box.sh &amp;&amp; clear &amp;&amp; ./box.sh</span><br></pre></td></tr></table></figure><h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1. 介绍"></a>1. 介绍</h2><p>RocketChat是一个开源并且完全免费的WEB聊天系统，虽然核心部分是基于WEB，但是官方开发了众多跨平台客户端：</p><blockquote><p>你可以到<a href="https://rocket.chat/download">这里</a>下载Windows、macOS、Linux的桌面客户端。</p><p>安卓用户和iOS用户可以在分别在<a href="https://play.google.com/store/apps/details?id=chat.rocket.android">Google Play</a>和<a href="https://itunes.apple.com/app/rocket-chat/id1148741252">App Store</a>上下载移动端。</p></blockquote><p>可以说RocketChat现在在众多主流操作系统上使用是完全没有问题的。</p><p>其实，与其说RocketChat是一个聊天系统不如说它是一个强大的团队协作平台。</p><h3 id="1-1-特点"><a href="#1-1-特点" class="headerlink" title="1.1 特点"></a>1.1 特点</h3><p>咕咕这边简单在网上也<del>抄</del>搜集了一些特点，供大家参考：</p><p>1、公共频道聊天，就类似QQ群或者Telegram群组。当然我们可以新建任意多的频道。</p><p>2、频道只读，功能类似于Telegram的频道系统，在Telegram中群组可以公开发言，但频道只能由创建者发言。</p><p>3、私人对话，功能就相当于QQ好友与好友之间聊天。</p><p>4、无记录对话，类似于“阅后即焚”。聊私密信息的神器~</p><p>5、@功能，可以在群组和频道中使用，类似于Telegram中@一个人的用户名，该用户可以得到消息提示。</p><p>6、语音聊天以及视频聊天的支持。</p><p>7、网址链接预览，类似于Telegram中发一个网站地址可以读取网站的标题和描述。</p><p>8、文件共享、上传、下载、分享等等。</p><p>9、用户搜索、群组搜索、消息搜索等等一系列强大的搜索功能。</p><p>10、自定义聊天表情，这个可以由管理员设置。</p><p>11、完善的用户权限设置功能，每个用户所对应的用户组都可以设置相应的使用权限。</p><p>12、完善的自定义功能，可以自定义CSS、上传站点LOGO、站标、设置描述、设置ToS、开关闭用户注册，等等。</p><p>13、各种额外属性的支持，比如OAUTH第三方登录、外部聊天窗口，等等等等。。。</p><p>感觉有没有心动呢？</p><p>来动手搞一个玩玩吧～</p><p>一般教程都是用的是snap搭建的。</p><blockquote><p>安装 <code>Rocket.Chat</code> 最快的方法是使用它的 <code>Snap</code>。<code>Snap</code> 是 <code>Linux</code> 系统上一种软件包管理的方式。它类似一个容器拥有一个应用程序所有的文件和库，各个应用程序之间完全独立。所以使用snap包的好处就是它解决了应用程序之间的依赖问题，使应用程序之间更容易管理。</p></blockquote><p>在群里的小伙伴应该知道，咕咕很早之前就折腾过这个Rocket.chat了，当时就是用的Snap搭建的，可能是自己不太熟悉还是怎么，莫名其妙会崩，之后也就没管它，后来好像又好了，之后又有一些其他的问题，就被咕咕闲置了。</p><p>这次，之所以又折腾出来，存粹是因为有个小伙伴在B站又问起Rocket.chat，然后昨天咕咕又折腾了一下，发现其实用Docker来搭建也还不错（也有几个问题还没解决，欢迎大家评论区交流探讨），所以来分享给大家。</p><p>咕咕鸽的激情聊天室：<a href="https://chat.laoda.de/">https://chat.laoda.de/</a></p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p>GitHub原项目地址：<a href="https://github.com/RocketChat/Rocket.Chat%EF%BC%8832k">https://github.com/RocketChat/Rocket.Chat（32k</a> star）</p><p>官网地址：<a href="https://rocket.chat/">https://rocket.chat/</a></p><p>文档地址：<a href="https://docs.rocket.chat/">https://docs.rocket.chat/</a></p><p>直接丢几个图片：</p><p><img src="https://img.laoda.de/i/2022/04/16/ids1di_7.webp" alt="image-20220416111150015"></p><p><img src="https://img.laoda.de/i/2022/04/16/m2yrid_7.webp" alt="image-20220416133520475"></p><p><img src="https://img.laoda.de/i/2022/04/16/iffzx0_7.webp" alt="image-20220416111429840"></p><p><img src="https://img.laoda.de/i/2022/04/16/ie5oog_7.webp" alt="image-20220416111214122"></p><p><img src="https://img.laoda.de/i/2022/04/16/ieoxrx_7.webp" alt="image-20220416111303732"></p><h2 id="3-搭建环境"><a href="#3-搭建环境" class="headerlink" title="3. 搭建环境"></a>3. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器24元&#x2F;月VPS一台</del>展示用的服务器是<a href="https://netcup-sonderangebote.de/">Netcup</a>特价款，本期搭建用的是<a href="https://loll.cc/vultr">Vultr</a>的服务器，按小时计费，可随时销毁（最好是选<strong>非大陆的服务器</strong>）（<a href="https://loll.cc/tx">腾讯轻量购买链接</a>）<a href="https://loll.cc/hz">Hetzner注册免费得25欧试用金有效期一个月</a></li><li>系统：Debian 10（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本</a> 非必需DD用原来的系统也OK）</li><li>域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>安装好Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需】提前安装好宝塔面板海外版本aapanel，并安装好Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程采用】安装好Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><h2 id="4-搭建视频（还没拍-待上传-）"><a href="#4-搭建视频（还没拍-待上传-）" class="headerlink" title="4. 搭建视频（还没拍 待上传 &#x3D; &#x3D;）"></a>4. 搭建视频（<del>还没拍</del> 待上传 &#x3D; &#x3D;）</h2><p>YouTube：<a href="https://youtu.be/DxwpCFFDnpA">https://youtu.be/DxwpCFFDnpA</a></p><p>哔哩哔哩【高清版本可以点击去吐槽到B站观看】：<joe-bilibili bvid="BV18A4y1Q75y"></joe-bilibili></p><h2 id="5-搭建方式"><a href="#5-搭建方式" class="headerlink" title="5. 搭建方式"></a>5. 搭建方式</h2><h3 id="5-1-搭建"><a href="#5-1-搭建" class="headerlink" title="5.1 搭建"></a>5.1 搭建</h3><p>服务器初始设置，参考</p><p><a href="https://blog.laoda.de/archives/vps-script"><strong>新买了一台服务器“必须”要做的6件小事</strong></a></p><p><a href="https://blog.laoda.de/archives/hello-docker">【Docker系列】不用宝塔面板，小白一样可以玩转VPS服务器！</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i <span class="comment"># 切换到root用户</span></span><br><span class="line"></span><br><span class="line">apt update -y  <span class="comment"># 升级packages</span></span><br><span class="line"></span><br><span class="line">apt install wget curl sudo vim git  <span class="comment"># Debian系统比较干净，安装常用的软件</span></span><br></pre></td></tr></table></figure><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/rocketchat</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/rocketchat</span><br><span class="line"></span><br><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><p><code>docker-compose.yml</code>填入以下内容：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&#x27;2&#x27;</span></span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  rocketchat:</span><br><span class="line">    image: rocketchat/rocket.chat:latest</span><br><span class="line">    <span class="built_in">command</span>: &gt;</span><br><span class="line">      bash -c</span><br><span class="line">        <span class="string">&quot;for i in `seq 1 30`; do</span></span><br><span class="line"><span class="string">          node main.js &amp;&amp;</span></span><br><span class="line"><span class="string">          s=$$? &amp;&amp; break || s=$$?;</span></span><br><span class="line"><span class="string">          echo \&quot;Tried $<span class="variable">$i</span> times. Waiting 5 secs...\&quot;;</span></span><br><span class="line"><span class="string">          sleep 5;</span></span><br><span class="line"><span class="string">        done; (exit $<span class="variable">$s</span>)&quot;</span></span><br><span class="line">    restart: unless-stopped</span><br><span class="line">    volumes:</span><br><span class="line">      - ./uploads:/app/uploads</span><br><span class="line">    environment:</span><br><span class="line">      - PORT=3000</span><br><span class="line">      - ROOT_URL=http://localhost:3000</span><br><span class="line">      - MONGO_URL=mongodb://mongo:27017/rocketchat</span><br><span class="line">      - MONGO_OPLOG_URL=mongodb://mongo:27017/local</span><br><span class="line">      - MAIL_URL=smtp://smtp.email</span><br><span class="line"><span class="comment">#       - HTTP_PROXY=http://proxy.domain.com</span></span><br><span class="line"><span class="comment">#       - HTTPS_PROXY=http://proxy.domain.com</span></span><br><span class="line">    depends_on:</span><br><span class="line">      - mongo</span><br><span class="line">    ports:</span><br><span class="line">      - 3000:3000               <span class="comment"># 只需要改这一个地方，把左边的3000改掉就好啦</span></span><br><span class="line">  mongo:</span><br><span class="line">    image: mongo:4.0</span><br><span class="line">    restart: unless-stopped</span><br><span class="line">    volumes:</span><br><span class="line">     - ./data/db:/data/db</span><br><span class="line">     <span class="comment">#- ./data/dump:/dump</span></span><br><span class="line">    <span class="built_in">command</span>: mongod --smallfiles --oplogSize 128 --replSet rs0 --storageEngine=mmapv1</span><br><span class="line"></span><br><span class="line">  <span class="comment"># this container&#x27;s job is just run the command to initialize the replica set.</span></span><br><span class="line">  <span class="comment"># it will run the command and remove himself (it will not stay running)</span></span><br><span class="line">  mongo-init-replica:</span><br><span class="line">    image: mongo:4.0</span><br><span class="line">    <span class="built_in">command</span>: &gt;</span><br><span class="line">      bash -c</span><br><span class="line">        <span class="string">&quot;for i in `seq 1 30`; do </span></span><br><span class="line"><span class="string">            mongo mongo/rocketchat --eval \&quot;</span></span><br><span class="line"><span class="string">            rs.initiate(&#123;</span></span><br><span class="line"><span class="string">              _id: &#x27;rs0&#x27;,</span></span><br><span class="line"><span class="string">              members: [ &#123; _id: 0, host: &#x27;localhost:27017&#x27; &#125; ]&#125;)\&quot; &amp;&amp;</span></span><br><span class="line"><span class="string">          s=$$? &amp;&amp; break || s=$$?;</span></span><br><span class="line"><span class="string">          echo \&quot;Tried $<span class="variable">$i</span> times. Waiting 5 secs...\&quot;;</span></span><br><span class="line"><span class="string">          sleep 5;</span></span><br><span class="line"><span class="string">        done; (exit $<span class="variable">$s</span>)&quot;</span></span><br><span class="line">    depends_on:</span><br><span class="line">      - mongo</span><br></pre></td></tr></table></figure><p>没问题的话，<code>ctrl+x</code>退出，按<code>y</code>保存，<code>enter</code>确认。</p><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>访问：<code>http:服务ip:3000</code> 即可。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的IP。</p><p>2、遇到访问不了的情况，请在宝塔面板的防火墙和服务商的后台防火墙里打开对应端口。</p></blockquote><h3 id="5-2-更新"><a href="#5-2-更新" class="headerlink" title="5.2 更新"></a>5.2 更新</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/rocketchat /root/data/docker_data/rocketchat.archive  <span class="comment"># 万事先备份，以防万一</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/rocketchat  <span class="comment"># 进入docker-compose所在的文件夹</span></span><br><span class="line"></span><br><span class="line">docker-compose pull    <span class="comment"># 拉取最新的镜像</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d   <span class="comment"># 重新更新当前镜像</span></span><br></pre></td></tr></table></figure><p>利用Docker-compose搭建的应用，更新非常容易～</p><h3 id="5-3-卸载"><a href="#5-3-卸载" class="headerlink" title="5.3 卸载"></a>5.3 卸载</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/rocketchat  <span class="comment"># 进入docker-compose所在的文件夹</span></span><br><span class="line"></span><br><span class="line">docker-compose down    <span class="comment"># 停止容器，此时不会删除映射到本地的数据</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/rocketchat  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><h2 id="6-反向代理"><a href="#6-反向代理" class="headerlink" title="6. 反向代理"></a>6. 反向代理</h2><blockquote><p>实测不管是Nginx Proxy Manager还是aapanel，反向代理之后，均无法连接到远程云端（比如OneDrive、Google Drive）。</p><p>有成功的小伙伴欢迎评论区留言分享。</p></blockquote><h3 id="6-1-利用Nginx-Proxy-Manager"><a href="#6-1-利用Nginx-Proxy-Manager" class="headerlink" title="6.1 利用Nginx Proxy Manager"></a>6.1 利用Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p>之后，登陆Nginx Proxy Manager（不会的看这个：<strong>安装Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称NPM）会用到<code>80</code>、<code>443</code>端口，所以本机不能占用（比如原来就有Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/03/20/wenk4d.webp" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/03/20/x2w60n.webp" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/04/16/iwltp5_7.webp" alt="image-20220416114312387" style="zoom:50%;" /><blockquote><p> 注意填写对应的<code>域名</code>和<code>端口</code>，按文章来的话，应该是<code>3000</code></p></blockquote><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom:50%;" /><img src="https://img.laoda.de/i/2022/04/16/iy0lul_7.webp" alt="image-20220416114549823" style="zoom:50%;" /><p>然后就可以用域名来安装访问了。</p><h2 id="7-使用教程"><a href="#7-使用教程" class="headerlink" title="7. 使用教程"></a>7. 使用教程</h2><p>见咕咕鸽的视频</p><h2 id="8-还未解决的问题"><a href="#8-还未解决的问题" class="headerlink" title="8. 还未解决的问题"></a>8. 还未解决的问题</h2><h3 id="8-1-注册提示too-many-request"><a href="#8-1-注册提示too-many-request" class="headerlink" title="8.1 注册提示too many request"></a>8.1 注册提示too many request</h3><p><img src="https://img.laoda.de/i/2022/04/16/m01shw_7.webp" alt="image-20220416133030140"></p><h4 id="尝试的措施："><a href="#尝试的措施：" class="headerlink" title="尝试的措施："></a><strong>尝试的措施：</strong></h4><p>Rate Limiter这边关闭，貌似仍然会报错 &#x3D; &#x3D; </p><p><img src="https://img.laoda.de/i/2022/04/16/m0s5j4_7.webp" alt="image-20220416133153741"></p><h3 id="8-2-无法批量上传表情包"><a href="#8-2-无法批量上传表情包" class="headerlink" title="8.2 无法批量上传表情包"></a>8.2 无法批量上传表情包</h3><p><img src="https://img.laoda.de/i/2022/04/16/lzdsc5_7.webp" alt="image-20220416132918290"></p><h3 id="8-3-主页不支持markdown"><a href="#8-3-主页不支持markdown" class="headerlink" title="8.3 主页不支持markdown"></a>8.3 主页不支持markdown</h3><p><img src="https://img.laoda.de/i/2022/04/16/j0ppm9_7.webp" alt="image-20220416115002421"></p><h3 id="8-3-MongoDB-4-0-28-已弃用"><a href="#8-3-MongoDB-4-0-28-已弃用" class="headerlink" title="8.3 MongoDB 4.0.28 已弃用"></a>8.3 MongoDB 4.0.28 已弃用</h3><p>Docker安装，会有机器人提示“MongoDB 4.0.28 已弃用”</p><p><img src="https://img.laoda.de/i/2022/04/16/lx7c50_7.webp" alt="image-20220416132552334"></p><h3 id="8-4-SMTP配置失败"><a href="#8-4-SMTP配置失败" class="headerlink" title="8.4 SMTP配置失败"></a>8.4 SMTP配置失败</h3><p>咕咕按照之前Halo和Wordpress的经验配置，发信始终不成功 &#x3D; &#x3D;</p><p><img src="https://img.laoda.de/i/2022/04/16/pdemut_7.webp" alt="SMTP配置失败"></p><blockquote><p>对于上述问题，有解决的小伙伴欢迎在评论区留言交流！</p></blockquote><h2 id="9-结尾"><a href="#9-结尾" class="headerlink" title="9. 结尾"></a>9. 结尾</h2><p>祝大家用得开心，有问题可以去GitHub提<a href="https://github.com/duplicati/duplicati">Issues</a>，也可以在评论区互相交流探讨。</p><h2 id="10-参考资料"><a href="#10-参考资料" class="headerlink" title="10. 参考资料"></a>10. 参考资料</h2><p><a href="https://lala.im/2705.html">https://lala.im/2705.html</a></p><p><a href="https://github.com/RocketChat/Rocket.Chat">https://github.com/RocketChat/Rocket.Chat</a></p><p><a href="https://wlfcss.com/rocket-chat-bu-shu-zhi-nan/">https://wlfcss.com/rocket-chat-bu-shu-zhi-nan/</a></p><p><a href="https://ssine.ink/posts/matrix-bot-and-bridges/">https://ssine.ink/posts/matrix-bot-and-bridges/</a></p><p><a href="https://blog.stsecurity.moe/archives/125/">https://blog.stsecurity.moe/archives/125/</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 即时聊天 </tag>
            
            <tag> Docker部署 </tag>
            
            <tag> DockerCompose </tag>
            
            <tag> Rocket.chat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CloudCone：2022复活节彩蛋狩猎活动来了！</title>
      <link href="/archives/cloudcones-easter-egg-hunt-2022/"/>
      <url>/archives/cloudcones-easter-egg-hunt-2022/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.laoda.de/i/2022/04/15/z5iqnp_7.webp" alt="image-20220415212555877"></p><p>稀有特卖，疯狂折扣，CloudCone一年一度的复活节彩蛋活动开始了，商家一共发布了9款性价比机型，其中2款为现售机型，7款为彩蛋机型，找到彩蛋的小火鸡可以幸运的以超低的价格购买。</p><p><img src="https://img.laoda.de/i/2022/04/15/zg4rf2_7.webp" alt="image-20220415214339313"></p><p>彩蛋活动时间：4 月 17 日星期日上午 7 点（太平洋标准时间），也就是<strong>北京时间 17 日星期天晚上22点准时开始</strong>。</p><blockquote><p>注意：需要先注册 <a href="https://app.cloudcone.com/?ref=6630">https://cloudcone.com</a>，然后后台充值，再购买对应套餐，支持支付宝和信用卡支付，七天无理由退款。</p></blockquote><h2 id="活动一：现售机型（终身折扣）"><a href="#活动一：现售机型（终身折扣）" class="headerlink" title="活动一：现售机型（终身折扣）"></a>活动一：现售机型（终身折扣）</h2><p><img src="https://img.laoda.de/i/2022/04/15/zg2flf_7.webp" alt="image-20220415214327294"></p><h3 id="EBUNNY22-–-1"><a href="#EBUNNY22-–-1" class="headerlink" title="EBUNNY22 – 1"></a>EBUNNY22 – 1</h3><p>CPU：2核心<br>内存：1G<br>硬盘：45G SSD CACHE（RAID10）<br>流量：4T&#x2F;月（1Gbps端口）<br>IP：1<br>数据中心：洛杉矶<br>价格：$14.28&#x2F;年<br>购买地址：<a href="https://app.cloudcone.com/vps/94/create?token=ebunny22-1&ref=6630">立即前往</a></p><h3 id="EBUNNY22-–-2"><a href="#EBUNNY22-–-2" class="headerlink" title="EBUNNY22 – 2"></a>EBUNNY22 – 2</h3><p>CPU：4核心<br>内存：2G<br>硬盘：90G SSD CACHE（RAID10）<br>流量：8T&#x2F;月（1Gbps端口）<br>IP：1<br>数据中心：洛杉矶<br>价格：$24.90&#x2F;年<br>购买地址：<a href="https://app.cloudcone.com/vps/95/create?token=ebunny22-2&ref=6630">立即前往</a></p><h2 id="活动二：彩蛋狩猎活动（终身折扣）"><a href="#活动二：彩蛋狩猎活动（终身折扣）" class="headerlink" title="活动二：彩蛋狩猎活动（终身折扣）"></a>活动二：彩蛋狩猎活动（终身折扣）</h2><p><img src="https://img.laoda.de/i/2022/04/15/zjo3n2_7.webp" alt="image-20220415214932200"></p><p>具体内容：先注册好账号，复活节彩蛋套餐隐藏在以下网站中：主页<a href="https://cloudcone.com/?ref=6630">cloudcone.com</a>或控制台<a href="https://app.cloudcone.com/?ref=6630">app.cloudcone.com</a>。通过寻找可以引导到隐藏点的某些关键字来发现线索。发现隐藏代码的幸运者可以重定向到购买页面。</p><p>大致意思就是在这两个网址中，找到四个字母，然后与<code>www.clco.cc/</code>拼接，即可打开机器下单页面。例如：<code>www.clco.cc/PL8B</code></p><h3 id="VPS系列："><a href="#VPS系列：" class="headerlink" title="VPS系列："></a>VPS系列：</h3><h4 id="Bunny-X-VPS"><a href="#Bunny-X-VPS" class="headerlink" title="Bunny X (VPS)"></a>Bunny X (VPS)</h4><p>CPU：2核心<br>内存：2G<br>硬盘：40G SSD CACHE（RAID10）<br>流量：4T&#x2F;月（1Gbps端口）<br>IP：1<br>数据中心：洛杉矶<br>价格：$12.00&#x2F;年<br>购买地址：待发现彩蛋</p><h4 id="Bunny-Y-VPS"><a href="#Bunny-Y-VPS" class="headerlink" title="Bunny Y (VPS)"></a>Bunny Y (VPS)</h4><p>CPU：2核心<br>内存：3G<br>硬盘：70G SSD CACHE（RAID10）<br>流量：5T&#x2F;月（1Gbps端口）<br>IP：1<br>数据中心：洛杉矶<br>价格：$15.00&#x2F;年<br>购买地址：待发现彩蛋</p><h4 id="Bunny-Z-VPS"><a href="#Bunny-Z-VPS" class="headerlink" title="Bunny Z (VPS)"></a>Bunny Z (VPS)</h4><p>CPU：2核心<br>内存：4G<br>硬盘：100G SSD CACHE（RAID10）<br>流量：6T&#x2F;月（1Gbps端口）<br>IP：1<br>数据中心：洛杉矶<br>价格：$18.00&#x2F;年<br>购买地址：待发现彩蛋</p><h3 id="云服务器系列："><a href="#云服务器系列：" class="headerlink" title="云服务器系列："></a>云服务器系列：</h3><h4 id="Golden-Egg-A-SC2"><a href="#Golden-Egg-A-SC2" class="headerlink" title="Golden Egg A (SC2)"></a>Golden Egg A (SC2)</h4><p>CPU：2核心<br>内存：2G<br>硬盘：30G SSD（RAID10）<br>流量：4T&#x2F;月（1Gbps端口）<br>IP：1<br>数据中心：洛杉矶<br>价格：$3.99&#x2F;月<br>购买地址：待发现彩蛋</p><h4 id="Golden-Egg-B-SC2"><a href="#Golden-Egg-B-SC2" class="headerlink" title="Golden Egg B (SC2)"></a>Golden Egg B (SC2)</h4><p>CPU：2核心<br>内存：2G<br>硬盘：30G SSD（RAID10）<br>流量：4T&#x2F;月（1Gbps端口）<br>IP：1<br>数据中心：洛杉矶<br>价格：$3.99&#x2F;月<br>购买地址：待发现彩蛋</p><h4 id="Golden-Egg-C-SC2"><a href="#Golden-Egg-C-SC2" class="headerlink" title="Golden Egg C (SC2)"></a>Golden Egg C (SC2)</h4><p>CPU：3核心<br>内存：4G<br>硬盘：50G SSD（RAID10）<br>流量：4T&#x2F;月（1Gbps端口）<br>IP：1<br>数据中心：洛杉矶<br>价格：$7.40&#x2F;月<br>购买地址：待发现彩蛋</p><h4 id="Golden-Egg-D-独立服务器"><a href="#Golden-Egg-D-独立服务器" class="headerlink" title="Golden Egg D (独立服务器)"></a>Golden Egg D (独立服务器)</h4><p>CPU：Intel Xeon E3-1270 v2 4 Cores, 8 Threads at 3.90 GHz<br>内存：32G ECC<br>硬盘：512G SSD硬盘或者1T机械硬盘（包含硬件RAID卡）<br>流量：100M不限流量或者15T月流量&#x2F;1Gbps<br>IP：&#x2F;29 IPv4（5个IP可用）和&#x2F;64 IPv6<br>数据中心：洛杉矶<br>价格：$55&#x2F;月<br>购买地址：待发现彩蛋</p><p>速度测试：173.82.2.222 &#x2F;&#x2F; <a href="http://la.lg.cloudc.one/100MB.test">http://la.lg.cloudc.one/100MB.test</a></p><h2 id="相关阅读"><a href="#相关阅读" class="headerlink" title="相关阅读"></a>相关阅读</h2><p><a href="https://blog.laoda.de/archives/cheap-vps-cloudcone">【国外便宜高性价比的VPS 推荐】——CloudCone</a></p>]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cloudcone </tag>
            
            <tag> 美国VPS </tag>
            
            <tag> 复活节彩蛋 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>chereveto</title>
      <link href="/archives/chereveto/"/>
      <url>/archives/chereveto/</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&#x27;3&#x27;</span></span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  db:</span><br><span class="line">    image: mariadb</span><br><span class="line">    volumes:</span><br><span class="line">      - database:/var/lib/mysql:rw</span><br><span class="line">    restart: always</span><br><span class="line">    networks:</span><br><span class="line">      - private</span><br><span class="line">    environment:</span><br><span class="line">      MYSQL_ROOT_PASSWORD: chevereto_root</span><br><span class="line">      MYSQL_DATABASE: chevereto</span><br><span class="line">      MYSQL_USER: chevereto</span><br><span class="line">      MYSQL_PASSWORD: chevereto</span><br><span class="line"></span><br><span class="line">  chevereto:</span><br><span class="line">    depends_on:</span><br><span class="line">      - db</span><br><span class="line">    image: nmtan/chevereto</span><br><span class="line">    restart: always</span><br><span class="line">    networks:</span><br><span class="line">      - private</span><br><span class="line">    environment:</span><br><span class="line">      CHEVERETO_DB_HOST: db</span><br><span class="line">      CHEVERETO_DB_USERNAME: chevereto</span><br><span class="line">      CHEVERETO_DB_PASSWORD: chevereto</span><br><span class="line">      CHEVERETO_DB_NAME: chevereto</span><br><span class="line">      CHEVERETO_DB_PREFIX: chv_</span><br><span class="line">    volumes:</span><br><span class="line">      - chevereto_images:/var/www/html/images:rw</span><br><span class="line">    ports:</span><br><span class="line">      - 8008:80</span><br><span class="line"></span><br><span class="line">networks:</span><br><span class="line">  private:</span><br><span class="line">volumes:</span><br><span class="line">  database:</span><br><span class="line">  chevereto_images:</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>【好玩儿的Docker项目】可能是目前全网最完整的Docker搭建Nextcloud教程（包含安全与设置警告报错信息的解决方法）</title>
      <link href="/archives/docker-compose-install-nextcloud/"/>
      <url>/archives/docker-compose-install-nextcloud/</url>
      
        <content type="html"><![CDATA[<p><img src="https://pic.loll.cc/images/2022/03/06/202203061124799.png" alt="image-20220409160141010"></p><h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1. 介绍"></a>1. 介绍</h2><p>上次，咕咕在博客里分享了aapanel（宝塔）安装Nextcloud的教程——<a href="https://blog.laoda.de/archives/nextcloud-aapanel-install">【好玩的项目】可能是史上最全的基于宝塔面板（海外版aapanel）的Nextcloud网盘搭建教程！</a>（对于Nextcloud还不了解的小伙伴也可以看一下这篇文章）</p><p>当时不用Docker搭建的原因就是Nextcloud安装完成之后，</p><p><img src="https://img.laoda.de/i/2022/04/13/phntal_7.webp" alt="image-20220413154128369"></p><p>这边的<code>安全与设置警告</code>会有很多提示信息，需要你一个一个优化，用Docker的话，会非常麻烦。而用aapanel（宝塔）安装，由于有一个可视化的面板，很多操作会容易很多。</p><p>然而，从文章发布之后，后台一直还是有小伙伴询问用Docker安装Nextcloud的事情，今天咕咕自己也稍微尝试了一下，基本上把<code>安全与设置警告</code>的信息都解决了，所以想着索性分享给大家。</p><p>相对于之前的安装方法，这个Docker版本的安装最大的两个特点：</p><ul><li>更新方便</li><li>搬家、转移方便</li></ul><p>今天用到的镜像来自Nextcloud官方镜像：<a href="https://hub.docker.com/_/nextcloud">https://hub.docker.com/_/nextcloud</a></p><p>支持多平台：linux&#x2F;386、linux&#x2F;amd64、linux&#x2F;arm&#x2F;v5</p><h2 id="2-搭建环境"><a href="#2-搭建环境" class="headerlink" title="2. 搭建环境"></a>2. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器24元&#x2F;月VPS一台</del>展示用的服务器是<a href="https://netcup-sonderangebote.de/">Netcup</a>特价款，本期搭建用的是<a href="https://loll.cc/vultr">Vultr</a>的服务器，按小时计费，可随时销毁（最好是选非大陆的服务器）（<a href="https://loll.cc/tx">腾讯轻量购买链接</a>）<a href="https://loll.cc/hz">Hetzner注册免费得25欧试用金有效期一个月</a></li><li>系统：Debian 10（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本</a> 非必需DD用原来的系统也OK）</li><li>域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>安装好Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需】提前安装好宝塔面板海外版本aapanel，并安装好Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需但本次使用】安装好Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><h2 id="3-搭建视频（还没拍-待上传-）"><a href="#3-搭建视频（还没拍-待上传-）" class="headerlink" title="3. 搭建视频（还没拍 待上传 &#x3D; &#x3D;）"></a>3. 搭建视频（<del>还没拍</del> 待上传 &#x3D; &#x3D;）</h2><p>YouTube：<a href="https://youtu.be/twhyKoIBiVY">https://youtu.be/twhyKoIBiVY</a></p><p>哔哩哔哩【高清版本可以点击去吐槽到B站观看】：<joe-bilibili bvid="BV1gr4y1H7ME"></joe-bilibili></p><h2 id="4-搭建方式"><a href="#4-搭建方式" class="headerlink" title="4. 搭建方式"></a>4. 搭建方式</h2><h3 id="4-1-搭建"><a href="#4-1-搭建" class="headerlink" title="4.1 搭建"></a>4.1 搭建</h3><p>服务器初始设置，参考</p><p><a href="https://blog.laoda.de/archives/vps-script"><strong>新买了一台服务器“必须”要做的6件小事</strong></a></p><p><a href="https://blog.laoda.de/archives/hello-docker">【Docker系列】不用宝塔面板，小白一样可以玩转VPS服务器！</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i <span class="comment"># 切换到root用户</span></span><br><span class="line"></span><br><span class="line">apt update -y  <span class="comment"># 升级packages</span></span><br><span class="line"></span><br><span class="line">apt install wget curl sudo vim git  <span class="comment"># Debian系统比较干净，安装常用的软件</span></span><br></pre></td></tr></table></figure><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/nextcloud</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/nextcloud</span><br><span class="line"></span><br><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><p><code>docker-compose.yml</code>填入以下内容：</p><p>2022年5月12日更新版本，建议直接用这个，镜像比官方好用，可以省去后面的一些安全警告的配置等（记得NPM第一页那边，选<code>https</code>）：</p><p>新版的<code>config.php</code>位置在</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/root/data/docker_data/nextcloud/config/www/nextcloud/config/config.php</span><br></pre></td></tr></table></figure><p>apps目录在这边：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/root/data/docker_data/nextcloud/config/www/nextcloud/apps</span><br></pre></td></tr></table></figure><p>升级可以直接在后台升级（记得先备份一下数据稳妥一些）：</p><p><img src="https://img.laoda.de/i/2023/01/07/zh5zsk-2.webp" alt="image-20230107214512843"></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">version: <span class="string">&quot;2.1&quot;</span></span><br><span class="line">services:</span><br><span class="line">  nextcloud:</span><br><span class="line">    image: lscr.io/linuxserver/nextcloud:latest</span><br><span class="line">    container_name: nextcloud</span><br><span class="line">    environment:</span><br><span class="line">      - PUID=1000</span><br><span class="line">      - PGID=1000</span><br><span class="line">      - TZ=Asia/Shanghai</span><br><span class="line">      - MYSQL_HOST=mysql</span><br><span class="line">      - MYSQL_DATABASE=nextcloud</span><br><span class="line">      - MYSQL_USER=nextcloud</span><br><span class="line">      - MYSQL_PASSWORD=nextcloud</span><br><span class="line">    volumes:</span><br><span class="line">      - /root/data/docker_data/nextcloud/config:/config</span><br><span class="line">      - /root/data/docker_data/nextcloud/data:/data</span><br><span class="line">    ports:</span><br><span class="line">      - 4433:443</span><br><span class="line">    restart: unless-stopped</span><br><span class="line"></span><br><span class="line">  mysql:</span><br><span class="line">    image: mysql:8.0</span><br><span class="line">    container_name: nextcloud-db</span><br><span class="line">    restart: unless-stopped</span><br><span class="line">    environment:</span><br><span class="line">      - MYSQL_DATABASE=nextcloud</span><br><span class="line">      - MYSQL_USER=nextcloud</span><br><span class="line">      - MYSQL_PASSWORD=nextcloud</span><br><span class="line">      - MYSQL_ROOT_PASSWORD=nextcloud</span><br><span class="line">    volumes:</span><br><span class="line">      - /root/data/docker_data/nextcloud/db:/var/lib/mysql</span><br></pre></td></tr></table></figure><p>旧版：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&quot;3&quot;</span></span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  nextcloud:</span><br><span class="line">    container_name: nextcloud-app</span><br><span class="line">    image: nextcloud:latest</span><br><span class="line">    restart: unless-stopped</span><br><span class="line">    ports:</span><br><span class="line">      - 8080:80</span><br><span class="line">    environment:</span><br><span class="line">      - MYSQL_HOST=mysql</span><br><span class="line">      - MYSQL_DATABASE=nextcloud</span><br><span class="line">      - MYSQL_USER=nextcloud</span><br><span class="line">      - MYSQL_PASSWORD=nextcloud</span><br><span class="line">    volumes:</span><br><span class="line">      - /root/data/docker_data/nextcloud/data:/var/www/html</span><br><span class="line"></span><br><span class="line">  mysql:</span><br><span class="line">    image: mysql:8.0</span><br><span class="line">    container_name: nextcloud-db</span><br><span class="line">    restart: unless-stopped</span><br><span class="line">    environment:</span><br><span class="line">      - MYSQL_DATABASE=nextcloud</span><br><span class="line">      - MYSQL_USER=nextcloud</span><br><span class="line">      - MYSQL_PASSWORD=nextcloud</span><br><span class="line">      - MYSQL_ROOT_PASSWORD=nextcloud</span><br><span class="line">    volumes:</span><br><span class="line">      - /root/data/docker_data/nextcloud/db:/var/lib/mysql</span><br><span class="line"></span><br><span class="line"><span class="comment">#volumes:</span></span><br><span class="line"><span class="comment">#  mysql:</span></span><br><span class="line"><span class="comment">#  nextcloud:</span></span><br></pre></td></tr></table></figure><p>没问题的话，<code>ctrl+x</code>退出，按<code>y</code>保存，<code>enter</code>确认。</p><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>访问：<code>http:服务ip:8080</code> 即可。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的IP。</p><p>2、遇到访问不了的情况，请在宝塔面板的防火墙和服务商的后台防火墙里打开对应端口。</p></blockquote><h3 id="4-2-更新"><a href="#4-2-更新" class="headerlink" title="4.2 更新"></a>4.2 更新</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/nextcloud /root/data/docker_data/nextcloud.archive  <span class="comment"># 万事先备份，以防万一</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/nextcloud  <span class="comment"># 进入docker-compose所在的文件夹</span></span><br><span class="line"></span><br><span class="line">docker-compose pull    <span class="comment"># 拉取最新的镜像</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d   <span class="comment"># 重新更新当前镜像</span></span><br></pre></td></tr></table></figure><p>利用Docker-compose搭建的应用，更新非常容易～</p><h3 id="4-3-卸载"><a href="#4-3-卸载" class="headerlink" title="4.3 卸载"></a>4.3 卸载</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/nextcloud  <span class="comment"># 进入docker-compose所在的文件夹</span></span><br><span class="line"></span><br><span class="line">docker-compose down    <span class="comment"># 停止容器，此时不会删除映射到本地的数据</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/nextcloud  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><h2 id="5-反向代理"><a href="#5-反向代理" class="headerlink" title="5. 反向代理"></a>5. 反向代理</h2><blockquote><p>实测不管是Nginx Proxy Manager还是aapanel，反向代理之后，均无法连接到远程云端（比如OneDrive、Google Drive）。</p><p>有成功的小伙伴欢迎评论区留言分享。</p></blockquote><h3 id="5-1-利用Nginx-Proxy-Manager"><a href="#5-1-利用Nginx-Proxy-Manager" class="headerlink" title="5.1 利用Nginx Proxy Manager"></a>5.1 利用Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p>之后，登陆Nginx Proxy Manager（不会的看这个：<strong>安装Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称NPM）会用到<code>80</code>、<code>443</code>端口，所以本机不能占用（比如原来就有Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/03/20/wenk4d.webp" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/03/20/x2w60n.webp" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/04/13/poun5g_7.webp" alt="image-20220413155337013" style="zoom: 50%;" /><blockquote><p> 注意填写对应的<code>域名</code>和<code>端口</code>，按文章来的话，应该是<code>8080</code></p></blockquote><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom:50%;" /><blockquote><p>这边申请成功后，千万记得再次打开，然后把<code>Force SSL</code> 和<code>HSTS Enable</code>勾选上</p></blockquote><img src="https://img.laoda.de/i/2022/04/13/ppadze_7.webp" alt="image-20220413155409545" style="zoom:50%;" /><p>然后就可以用域名来安装访问了。</p><h2 id="6-安全与设置警告解决方法"><a href="#6-安全与设置警告解决方法" class="headerlink" title="6. 安全与设置警告解决方法"></a>6. 安全与设置警告解决方法</h2><h3 id="6-1-通过不被信任的域名访问"><a href="#6-1-通过不被信任的域名访问" class="headerlink" title="6.1 通过不被信任的域名访问"></a>6.1 通过不被信任的域名访问</h3><img src="https://img.laoda.de/i/2022/04/13/xqlu90_7.webp" alt="image-20220413204003769" style="zoom:50%;" /><p>如果你啥也没设置，第一步就会遇到这个问题。</p><p>我们需要按提示的要求进行设置：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/nextcloud/data/config</span><br><span class="line"></span><br><span class="line">nano config.php</span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2022/04/13/xqoj92_7.webp" alt="image-20220413204017210" style="zoom:50%;" /><p>加入：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span> =&gt; <span class="string">&#x27;nx.gao.ee&#x27;</span>,  </span><br></pre></td></tr></table></figure><p>注意改成自己的域名。</p><p><code>ctrl+x</code> 退出，按<code>y</code>保存，按 <code>enter</code>退出。</p><h3 id="6-2-你的实例正生成不安全的URL"><a href="#6-2-你的实例正生成不安全的URL" class="headerlink" title="6.2 你的实例正生成不安全的URL"></a>6.2 你的实例正生成不安全的URL</h3><img src="https://img.laoda.de/i/2022/04/13/xtrdau_7.webp" alt="image-20220413204533787" style="zoom:50%;" /><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano config.php</span><br></pre></td></tr></table></figure><p>加入这个：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;overwrite.cli.url&#x27;</span> =&gt; <span class="string">&#x27;https://nx.gao.ee&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;overwriteprotocol&#x27;</span> =&gt; <span class="string">&#x27;https&#x27;</span>,</span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2022/04/13/xtl8lc_7.webp" alt="image-20220413204506389" style="zoom:50%;" /><p><code>ctrl+x</code> 退出，按<code>y</code>保存，按 <code>enter</code>退出。</p><h3 id="6-3-您的安装没有设置默认的电话区域"><a href="#6-3-您的安装没有设置默认的电话区域" class="headerlink" title="6.3 您的安装没有设置默认的电话区域"></a>6.3 您的安装没有设置默认的电话区域</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano config.php</span><br></pre></td></tr></table></figure><p>加入这个：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;default_phone_region&#x27;</span> =&gt; <span class="string">&#x27;CN&#x27;</span>,</span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2022/04/13/xwmily_7.webp" alt="image-20220413205015997" style="zoom:50%;" /><p><code>ctrl+x</code> 退出，按<code>y</code>保存，按 <code>enter</code>退出。</p><h3 id="6-4-未正确设置以解析……"><a href="#6-4-未正确设置以解析……" class="headerlink" title="6.4 未正确设置以解析……"></a>6.4 未正确设置以解析……</h3><p>打开Nginx Proxy Manager，找到Advanced，加入这个</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> = /.well-known/carddav &#123;</span><br><span class="line">      <span class="attribute">return</span> <span class="number">301</span> <span class="variable">$scheme</span>://<span class="variable">$host</span>:<span class="variable">$server_port</span>/remote.php/dav;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="section">location</span> = /.well-known/caldav &#123;</span><br><span class="line">      <span class="attribute">return</span> <span class="number">301</span> <span class="variable">$scheme</span>://<span class="variable">$host</span>:<span class="variable">$server_port</span>/remote.php/dav;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2022/04/13/yy7dih_7.webp" alt="image-20220413211327697" style="zoom:50%;" /><p>保存即可。</p><h3 id="6-5-php-imagick-模块不支持-SVG模块不支持SVG"><a href="#6-5-php-imagick-模块不支持-SVG模块不支持SVG" class="headerlink" title="6.5 php-imagick 模块不支持 SVG模块不支持SVG"></a>6.5 php-imagick 模块不支持 SVG模块不支持SVG</h3><p>虽然不影响正常使用，但强迫症使然，总想解决掉。</p><p>经过一番查找，发现这个和libmagickcore的某个组件有关，试着安装看看。</p><p>首先我们需要进入到容器内部，然后安装。</p><p>先来查看容器ID：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker container <span class="built_in">ls</span></span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2022/04/13/xyj927_7.webp" alt="image-20220413205336044" style="zoom:50%;" /><p>进入Nextcloud容器：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it 2ee2 bash  <span class="comment"># 只要写前四位即可</span></span><br></pre></td></tr></table></figure><p>安装：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt update -y </span><br><span class="line"></span><br><span class="line">apt install libmagickcore-6.q16-6-extra -y</span><br></pre></td></tr></table></figure><p>然后退出即可</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：此方法修改，后续每次镜像更新，都需要进入容器重新安装</p></blockquote><h3 id="6-6-cron任务自动执行"><a href="#6-6-cron任务自动执行" class="headerlink" title="6.6 cron任务自动执行"></a>6.6 cron任务自动执行</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">*/5 * * * * root docker <span class="built_in">exec</span> -u 1000 nextcloud php -f /config/www/nextcloud/cron.php 2&gt;&amp;1 /dev/null</span><br></pre></td></tr></table></figure><p>注意<code>nextcloud</code>是容器名字，<code>1000</code>是id，是linuxserver容器的<code>cron</code>路径。</p><h3 id="6-7-重启Nextcloud"><a href="#6-7-重启Nextcloud" class="headerlink" title="6.7 重启Nextcloud"></a>6.7 重启Nextcloud</h3><p>上述都搞定之后，最后重启Nextcloud：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/nextcloud  <span class="comment"># 进入docker-compose所在的文件夹</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d   <span class="comment"># 重新启动</span></span><br></pre></td></tr></table></figure><p>错误全部解决。</p><h2 id="7-结尾"><a href="#7-结尾" class="headerlink" title="7. 结尾"></a>7. 结尾</h2><p>祝大家用得开心，有问题可以去GitHub提<a href="https://github.com/nextcloud/docker">Issues</a>，也可以在评论区互相交流探讨。</p><h2 id="8-参考资料"><a href="#8-参考资料" class="headerlink" title="8. 参考资料"></a>8. 参考资料</h2><p><a href="https://github.com/NginxProxyManager/nginx-proxy-manager/issues/448">https://github.com/NginxProxyManager/nginx-proxy-manager/issues/448</a><br><a href="https://www.himstudy.net/%E8%A7%A3%E5%86%B3nextcloud%E6%8F%90%E7%A4%BAphp-imagick%E6%A8%A1%E5%9D%97%E4%B8%8D%E6%94%AF%E6%8C%81svg%E7%9A%84%E9%97%AE%E9%A2%98/">https://www.himstudy.net/%E8%A7%A3%E5%86%B3nextcloud%E6%8F%90%E7%A4%BAphp-imagick%E6%A8%A1%E5%9D%97%E4%B8%8D%E6%94%AF%E6%8C%81svg%E7%9A%84%E9%97%AE%E9%A2%98/</a></p><p><a href="https://yeasy.gitbook.io/docker_practice/container/attach_exec">https://yeasy.gitbook.io/docker_practice/container/attach_exec</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker部署 </tag>
            
            <tag> DockerCompose </tag>
            
            <tag> Nextcloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩儿的Docker项目】自建一个非常好用的多平台备份神器——Duplicati</title>
      <link href="/archives/docker-compose-install-duplicati/"/>
      <url>/archives/docker-compose-install-duplicati/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.laoda.de/i/2022/04/09/qhgip3_7.webp" alt="image-20220409160141010"></p><h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1. 介绍"></a>1. 介绍</h2><p>半个多月前，咕咕曾经发起过一个投票，问大家想看分享啥内容，里面排名第二的就是“<strong>用Docker搭的容器，可备份VPS的数据</strong>”。</p><img src="https://img.laoda.de/i/2022/04/09/qlp3fy_7.webp" alt="image-20220409160852862" style="zoom:50%;" /><img src="https://img.laoda.de/i/2022/04/09/qm1q1x_7.webp" alt="image-20220409160912854" style="zoom:50%;" /><p>也出了一个视频，简单讲了讲服务器备份那些事儿——<a href="https://blog.laoda.de/archives/backup-server-series">【服务器备份系列】聊一聊服务器备份那些事儿｜VPS备份总览</a></p><p>而且给大家介绍过一个多平台的<strong>同步</strong>工具——<a href="https://blog.laoda.de/archives/docker-compose-install-syncthing">【好玩儿的Docker项目】目前最好用的免费开源同步工具——Syncthing</a></p><p>今天，就给大家介绍一个非常好用的多平台<strong>备份</strong>工具——<strong>Duplicati</strong></p><h3 id="1-1-特点"><a href="#1-1-特点" class="headerlink" title="1.1 特点"></a>1.1 特点</h3><p>Duplicati是一个免费的、开源的备份客户端，可以在云存储服务和远程文件服务器上安全地存储加密的、增量的、压缩的备份。</p><ul><li>Duplicati使用AES-256加密（或GNU Privacy Guard）来保证所有数据在上传前的安全；</li><li>Duplicati最初会上传一个完整的备份，之后会存储较小的增量更新，以节省带宽和存储空间（增量备份）；</li><li>只需要一个调度程序就可以让备份自动保持最新状态；</li><li>当新版本出来时，集成的更新器发出通知（我们用Docker部署，更新很方便）；</li><li>加密的备份文件可以传输到FTP、Cloudfiles、WebDAV、SSH（SFTP）、Amazon S3等地方；</li><li>Duplicati允许备份文件夹、文件类型，如文档或图片，或自定义过滤规则；</li><li>Duplicati可以作为具有易于使用的用户界面的应用程序和命令行工具使用；</li><li>Duplicati可以使用Windows下的卷快照服务（VSS）或Linux下的逻辑卷管理器（LVM）对打开或锁定的文件进行适当的备份。这使得Duplicati可以在Outlook运行时备份Microsoft Outlook PST文件；</li><li>拥有过滤器、删除规则、传输和带宽选项等选项。</li></ul><p>今天用到的镜像来自GitHub：<a href="https://hub.docker.com/r/linuxserver/duplicati">https://hub.docker.com/r/linuxserver/duplicati</a></p><p>支持多平台：x86-64、arm64、armhf</p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p>GitHub原项目地址：<a href="https://github.com/duplicati/duplicati">https://github.com/duplicati/duplicati</a></p><p>官网地址：<a href="https://www.duplicati.com/download">https://www.duplicati.com/download</a></p><p>直接丢几个图片：</p><p><img src="https://img.laoda.de/i/2022/04/09/z1tfn3_7.webp" alt="image-20220409211933268"></p><p><img src="https://img.laoda.de/i/2022/04/09/z1c0wj_7.webp" alt="image-20220409211852938"></p><p><img src="https://img.laoda.de/i/2022/04/09/z27w43_7.webp" alt="image-20220409212002123"></p><p><img src="https://img.laoda.de/i/2022/04/09/z2d0e9_7.webp" alt="image-20220409212025218"></p><p><img src="https://img.laoda.de/i/2022/04/09/z2h4wu_7.webp" alt="image-20220409212045054"></p><p><img src="https://img.laoda.de/i/2022/04/09/z2sonq_7.webp" alt="image-20220409212058171"></p><p><img src="https://img.laoda.de/i/2022/04/09/z2welu_7.webp" alt="image-20220409212113910"></p><p><img src="https://img.laoda.de/i/2022/04/09/z31e4x_7.webp" alt="image-20220409212138611"></p><h2 id="3-搭建环境"><a href="#3-搭建环境" class="headerlink" title="3. 搭建环境"></a>3. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器24元&#x2F;月VPS一台</del>展示用的服务器是<a href="https://netcup-sonderangebote.de/">Netcup</a>特价款，本期搭建用的是<a href="https://loll.cc/vultr">Vultr</a>的服务器，按小时计费，可随时销毁（最好是选非大陆的服务器）（<a href="https://loll.cc/tx">腾讯轻量购买链接</a>）<a href="https://loll.cc/hz">Hetzner注册免费得25欧试用金有效期一个月</a></li><li>系统：Debian 10（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本</a> 非必需DD用原来的系统也OK）</li><li>域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>安装好Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需】提前安装好宝塔面板海外版本aapanel，并安装好Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需】安装好Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><h2 id="4-搭建视频"><a href="#4-搭建视频" class="headerlink" title="4. 搭建视频"></a>4. 搭建视频</h2><p>YouTube：<a href="https://youtu.be/72iYt5Tcfrc">https://youtu.be/72iYt5Tcfrc</a></p><p>哔哩哔哩【高清版本可以点击去吐槽到B站观看】：<joe-bilibili bvid="BV1BT4y1Y7ZU"></joe-bilibili></p><h2 id="5-搭建方式"><a href="#5-搭建方式" class="headerlink" title="5. 搭建方式"></a>5. 搭建方式</h2><h3 id="5-1-搭建"><a href="#5-1-搭建" class="headerlink" title="5.1 搭建"></a>5.1 搭建</h3><p>服务器初始设置，参考</p><p><a href="https://blog.laoda.de/archives/vps-script"><strong>新买了一台服务器“必须”要做的6件小事</strong></a></p><p><a href="https://blog.laoda.de/archives/hello-docker">【Docker系列】不用宝塔面板，小白一样可以玩转VPS服务器！</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i <span class="comment"># 切换到root用户</span></span><br><span class="line"></span><br><span class="line">apt update -y  <span class="comment"># 升级packages</span></span><br><span class="line"></span><br><span class="line">apt install wget curl sudo vim git  <span class="comment"># Debian系统比较干净，安装常用的软件</span></span><br></pre></td></tr></table></figure><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/duplicati</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/duplicati</span><br><span class="line"></span><br><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><p><code>docker-compose.yml</code>填入以下内容：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&quot;2.1&quot;</span></span><br><span class="line">services:</span><br><span class="line">  duplicati:</span><br><span class="line">    image: lscr.io/linuxserver/duplicati</span><br><span class="line">    container_name: duplicati</span><br><span class="line">    environment:</span><br><span class="line">      - PUID=0</span><br><span class="line">      - PGID=0</span><br><span class="line">      - TZ=Asia/Shanghai</span><br><span class="line">    volumes:</span><br><span class="line">      - /root/data/docker_data/duplicati/config:/config</span><br><span class="line">      - /root/data/docker_data/duplicati/backups:/backups</span><br><span class="line">      - /root/data:/source</span><br><span class="line">    ports:</span><br><span class="line">      - 8080:8200</span><br><span class="line">    restart: unless-stopped</span><br></pre></td></tr></table></figure><p>没问题的话，<code>ctrl+x</code>退出，按<code>y</code>保存，<code>enter</code>确认。</p><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>访问：<code>http:服务ip:8080</code> 即可。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的IP。</p><p>2、遇到访问不了的情况，请在宝塔面板的防火墙和服务商的后台防火墙里打开对应端口。</p></blockquote><h3 id="5-2-更新"><a href="#5-2-更新" class="headerlink" title="5.2 更新"></a>5.2 更新</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/duplicati /root/data/docker_data/duplicati.archive  <span class="comment"># 万事先备份，以防万一</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/duplicati  <span class="comment"># 进入docker-compose所在的文件夹</span></span><br><span class="line"></span><br><span class="line">docker-compose pull    <span class="comment"># 拉取最新的镜像</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d   <span class="comment"># 重新更新当前镜像</span></span><br></pre></td></tr></table></figure><p>利用Docker-compose搭建的应用，更新非常容易～</p><h3 id="5-3-卸载"><a href="#5-3-卸载" class="headerlink" title="5.3 卸载"></a>5.3 卸载</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/duplicati  <span class="comment"># 进入docker-compose所在的文件夹</span></span><br><span class="line"></span><br><span class="line">docker-compose down    <span class="comment"># 停止容器，此时不会删除映射到本地的数据</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/duplicati  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><h2 id="6-【本项目不建议使用】反向代理（二选一）"><a href="#6-【本项目不建议使用】反向代理（二选一）" class="headerlink" title="6. 【本项目不建议使用】反向代理（二选一）"></a>6. 【本项目不建议使用】反向代理（二选一）</h2><blockquote><p>实测不管是Nginx Proxy Manager还是aapanel，反向代理之后，均无法连接到远程云端（比如OneDrive、Google Drive）。</p><p>有成功的小伙伴欢迎评论区留言分享。</p></blockquote><h3 id="6-1-利用Nginx-Proxy-Manager"><a href="#6-1-利用Nginx-Proxy-Manager" class="headerlink" title="6.1 利用Nginx Proxy Manager"></a>6.1 利用Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p>之后，登陆Nginx Proxy Manager（不会的看这个：<strong>安装Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称NPM）会用到<code>80</code>、<code>443</code>端口，所以本机不能占用（比如原来就有Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/03/20/wenk4d.webp" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/03/20/x2w60n.webp" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/04/03/h8h7ss_7.webp" alt="image-20220403104213716" style="zoom: 50%;" /><blockquote><p> 注意填写对应的<code>域名</code>和<code>端口</code>，按文章来的话，应该是<code>8080</code></p></blockquote><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom:50%;" /><p>然后就可以用域名来安装访问了。</p><h3 id="6-2-利用aapanel（宝塔面板通用）"><a href="#6-2-利用aapanel（宝塔面板通用）" class="headerlink" title="6.2 利用aapanel（宝塔面板通用）"></a>6.2 利用aapanel（宝塔面板通用）</h3><p>如果遇到NPM反代出现问题，可以尝试aapanel（宝塔面板通用）的反代。</p><p><img src="https://img.laoda.de/i/2022/04/04/nivw3j_7.webp" alt="image-20220404142238645"></p><p>打开网站的Nginx配置文件，在最后修改下面的内容：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment"># location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$</span></span><br><span class="line"><span class="comment"># &#123;</span></span><br><span class="line"><span class="comment">#     expires      30d;</span></span><br><span class="line"><span class="comment">#     error_log /dev/null;</span></span><br><span class="line"><span class="comment">#     access_log off;</span></span><br><span class="line"><span class="comment"># &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># location ~ .*\.(js|css)?$</span></span><br><span class="line"><span class="comment"># &#123;</span></span><br><span class="line"><span class="comment">#     expires      12h;</span></span><br><span class="line"><span class="comment">#     error_log /dev/null;</span></span><br><span class="line"><span class="comment">#     access_log off; </span></span><br><span class="line"><span class="comment"># &#125;</span></span><br><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:8080/;</span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意把上面原来有的一段注释掉，大家也可以直接删除，然后复制咕咕的这一段。</p><img src="https://img.laoda.de/i/2022/04/09/ue0ytg_7.webp" alt="image-20220409183752333" style="zoom:50%;" /><img src="https://img.laoda.de/i/2022/04/09/uebqie_7.webp" alt="image-20220409183802790" style="zoom:50%;" /><h2 id="7-使用教程"><a href="#7-使用教程" class="headerlink" title="7. 使用教程"></a>7. 使用教程</h2><p>见咕咕鸽的视频</p><h2 id="8-结尾"><a href="#8-结尾" class="headerlink" title="8. 结尾"></a>8. 结尾</h2><p>祝大家用得开心，有问题可以去GitHub提<a href="https://github.com/duplicati/duplicati">Issues</a>，也可以在评论区互相交流探讨。</p><h2 id="9-参考资料"><a href="#9-参考资料" class="headerlink" title="9. 参考资料"></a>9. 参考资料</h2><p>GitHub原项目地址：<a href="https://github.com/duplicati/duplicati">https://github.com/duplicati/duplicati</a></p><p>官网地址：<a href="https://www.duplicati.com/download">https://www.duplicati.com/download</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自动备份 </tag>
            
            <tag> 服务器备份 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩的Docker项目】10分钟搭建一个高大上的论坛程序——Flarum</title>
      <link href="/archives/docker-compose-install-flarum/"/>
      <url>/archives/docker-compose-install-flarum/</url>
      
        <content type="html"><![CDATA[<img src="https://img.laoda.de/i/2022/04/04/k49qqq_7.webp" alt="image-20220404121639320" style="zoom:50%;" /><h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1. 介绍"></a>1. 介绍</h2><p>老朋友应该知道，其实早在2020年9月18日，咕咕就分享过一个Flarum的搭建教程——<a href="https://blog.laoda.de/archives/flarum-install">宝塔 Linux 面板安装一个高大上的论坛程序—— Flarum</a></p><p>如名字所见，当时还是用宝塔搭建的，所以点开文章看，非常的繁琐。</p><p>最近疫情肆虐，咕咕也是在家办公，所以Docker系列出的比较频繁，今天就分享一个用Docker来部署Flarum的教程，非常的简单，而且搬迁也非常方便！</p><h3 id="1-1-特点"><a href="#1-1-特点" class="headerlink" title="1.1 特点"></a>1.1 特点</h3><p>Flarum 是一款非常简洁的开源论坛软件。 它响应快速、简便易用，拥有打造一片成功的社区所需的所有功能。 It’s also extremely extensible, allowing for ultimate customizability.</p><p><img src="https://img.laoda.de/i/2022/04/04/k6o8qr_7.webp" alt="Flarum Home Screenshot"></p><p>Flarum 的前身是 <a href="https://github.com/esotalk/esoTalk">esoTalk</a> 和 <a href="https://fluxbb.org/">FluxBB</a>，她生来就被设计如此： 她生来就被设计如此：</p><ul><li><strong>快速、简单。</strong> 不杂乱不臃肿，没有复杂的依赖关系。 Flarum 使用 PHP 构建，因此很容易被部署。 界面采用高性能且小巧的 JavaScript 框架 <a href="https://mithril.js.org/">Mithril</a>。</li><li><strong>漂亮、响应式。</strong> 以人为本的论坛软件。 Flarum 被精心设计以在不同平台间保持一致性和直观性，开箱即用。</li><li><strong>强大、可扩展。</strong> 您可以客制化、扩展或集成 Flarum 以满足您的社区需求。 Flarum 基于 <a href="https://github.com/flarum/flarum/blob/master/LICENSE">MIT 协议</a> 发布。</li><li><strong>免费、开源。</strong> Flarum 以 <a href="https://github.com/flarum/flarum/blob/master/LICENSE">MIT 许可证</a> 发布。</li></ul><p>今天用到的镜像来自GitHub：<a href="https://github.com/mondediefr/docker-flarum">https://github.com/mondediefr/docker-flarum</a></p><p>有以下特性：</p><ul><li>多平台：linux&#x2F;386、linux&#x2F;amd64、linux&#x2F;arm&#x2F;v6、linux&#x2F;arm&#x2F;v7、linux&#x2F;arm64（树莓派也可以搭建！）</li><li>轻量级和安全的镜像</li><li>基于Alpine Linux 3.15</li><li>nginx和PHP 8.0</li><li>采用最新的Flarum Core（v1.2.0）</li><li>MySQL&#x2F;Mariadb驱动</li><li>配置了OPCache扩展</li></ul><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p>GitHub原项目地址：<a href="https://github.com/flarum">https://github.com/flarum</a></p><p>官网地址：<a href="https://flarum.org/">https://flarum.org/</a></p><p>官方文档地址：<a href="https://docs.flarum.org/">https://docs.flarum.org/</a></p><p>Demo:<a href="https://flarum.org/">https://flarum.org/</a></p><p>镜像来源：<a href="https://hub.docker.com/r/mondedie/flarum/tags">https://hub.docker.com/r/mondedie/flarum/tags</a></p><p>直接丢几个本博客<a href="https://bbs.halo.run/">官方论坛——Halo</a>的图片：</p><p><img src="https://img.laoda.de/i/2022/04/04/kc2dep_7.webp" alt="image-20220404122943484"></p><p><img src="https://img.laoda.de/i/2022/04/04/kcfmcu_7.webp" alt="image-20220404123011738"></p><h2 id="3-搭建环境"><a href="#3-搭建环境" class="headerlink" title="3. 搭建环境"></a>3. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器24元&#x2F;月VPS一台</del>展示用的服务器是<a href="https://netcup-sonderangebote.de/">Netcup</a>特价款，本期搭建用的是<a href="https://loll.cc/vultr">Vultr</a>的服务器，按小时计费，可随时销毁（最好是选非大陆的服务器）（<a href="https://loll.cc/tx">腾讯轻量购买链接</a>）<a href="https://loll.cc/hz">Hetzner注册免费得25欧试用金有效期一个月</a></li><li>系统：Debian 10（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本</a> 非必需DD用原来的系统也OK）</li><li>域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>安装好Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需】提前安装好宝塔面板海外版本aapanel，并安装好Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需不过<strong>本教程使用</strong>】安装好Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><h2 id="4-搭建视频（还没拍-待上传-）"><a href="#4-搭建视频（还没拍-待上传-）" class="headerlink" title="4. 搭建视频（还没拍 待上传 &#x3D; &#x3D;）"></a>4. 搭建视频（<del>还没拍</del> 待上传 &#x3D; &#x3D;）</h2><p>YouTube：<a href="https://youtu.be/Bj159MDbgok">https://youtu.be/Bj159MDbgok</a></p><p>哔哩哔哩【高清版本可以点击去吐槽到B站观看】：<joe-bilibili bvid="BV1Ma411i7LH"></joe-bilibili></p><h2 id="5-搭建方式"><a href="#5-搭建方式" class="headerlink" title="5. 搭建方式"></a>5. 搭建方式</h2><h3 id="5-1-搭建"><a href="#5-1-搭建" class="headerlink" title="5.1 搭建"></a>5.1 搭建</h3><p>服务器初始设置，参考</p><p><a href="https://blog.laoda.de/archives/vps-script"><strong>新买了一台服务器“必须”要做的6件小事</strong></a></p><p><a href="https://blog.laoda.de/archives/hello-docker">【Docker系列】不用宝塔面板，小白一样可以玩转VPS服务器！</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i <span class="comment"># 切换到root用户</span></span><br><span class="line"></span><br><span class="line">apt update -y  <span class="comment"># 升级packages</span></span><br><span class="line"></span><br><span class="line">apt install wget curl sudo vim git  <span class="comment"># Debian系统比较干净，安装常用的软件</span></span><br></pre></td></tr></table></figure><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/flarum</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/flarum</span><br><span class="line"></span><br><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><p><code>docker-compose.yml</code>填入以下内容：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&quot;3&quot;</span></span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  flarum:</span><br><span class="line">    image: mondedie/flarum:stable</span><br><span class="line">    container_name: flarum</span><br><span class="line">    env_file:</span><br><span class="line">      - /root/data/docker_data/flarum/flarum/flarum.env   <span class="comment"># 创建一个flarum.env</span></span><br><span class="line">    volumes:   <span class="comment"># 数据映射到本地，数据不会因为Docker停止而丢失</span></span><br><span class="line">      - /root/data/docker_data/flarum/flarum/assets:/flarum/app/public/assets</span><br><span class="line">      - /root/data/docker_data/flarum/flarum/extensions:/flarum/app/extensions</span><br><span class="line">      - /root/data/docker_data/flarum/flarum/storage/logs:/flarum/app/storage/logs</span><br><span class="line">      - /root/data/docker_data/flarum/flarum/nginx:/etc/nginx/flarum</span><br><span class="line">    ports:</span><br><span class="line">      - 8080:8888   <span class="comment"># 左边的8080可以自己调整端口号，右边的8888不要改</span></span><br><span class="line">    restart: unless-stopped</span><br><span class="line">    depends_on:</span><br><span class="line">      - mariadb</span><br><span class="line"></span><br><span class="line">  mariadb:</span><br><span class="line">    image: mariadb:10.5</span><br><span class="line">    container_name: mariadb</span><br><span class="line">    environment:</span><br><span class="line">      - MYSQL_ROOT_PASSWORD=AhE6aMvzySjgYMTpkt5</span><br><span class="line">      - MYSQL_DATABASE=flarum</span><br><span class="line">      - MYSQL_USER=flarum</span><br><span class="line">      - MYSQL_PASSWORD=AhE6aMvzySjgYMTpkt5</span><br><span class="line">    volumes:</span><br><span class="line">      - /root/data/docker_data/flarum/docker/mysql/db:/var/lib/mysql  <span class="comment"># 数据映射到本地，数据不会因为Docker停止而丢失</span></span><br><span class="line">    restart: unless-stopped</span><br></pre></td></tr></table></figure><p>然后创建一个<code>flarum.env</code>文件</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/flarum/flarum</span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/flarum/flarum</span><br><span class="line">nano /root/data/docker_data/flarum/flarum/flarum.env</span><br></pre></td></tr></table></figure><p>输入下面的内容：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">DEBUG=<span class="literal">false</span></span><br><span class="line">FORUM_URL=https://bbs.laoda.de     <span class="comment"># 可以自行修改，这个是论坛的网站  注意域名地址没有的话 要填IP+port 要不然会报错</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Database configuration</span></span><br><span class="line">DB_HOST=mariadb</span><br><span class="line">DB_NAME=flarum</span><br><span class="line">DB_USER=flarum</span><br><span class="line">DB_PASS=AhE6aMvzySjgYMTpkt5    <span class="comment"># 可以自行修改，但是要与docker-compose上面的一致</span></span><br><span class="line">DB_PREF=flarum_</span><br><span class="line">DB_PORT=3306</span><br><span class="line"></span><br><span class="line"><span class="comment"># User admin flarum (environment variable for first installation)</span></span><br><span class="line"><span class="comment"># /!\ admin password must contain at least 8 characters /!\</span></span><br><span class="line">FLARUM_ADMIN_USER=admin          <span class="comment"># 可以自行修改，但是要与docker-compose上面的一致</span></span><br><span class="line">FLARUM_ADMIN_PASS=AhE6aMvzySjgYMTpkt5  <span class="comment"># 可以自行修改，但是要与docker-compose上面的一致</span></span><br><span class="line">FLARUM_ADMIN_MAIL=admin@guguge.com  <span class="comment"># 可以自行修改，修改成自己的邮箱</span></span><br><span class="line">FLARUM_TITLE=Test flarum  <span class="comment"># 可以自行修改，这个是论坛的标题</span></span><br></pre></td></tr></table></figure><p>没问题的话，<code>ctrl+x</code>退出，按<code>y</code>保存，<code>enter</code>确认。</p><p>然后进入到<code>docker-compose.yml</code>所在的文件夹下：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/flarum</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>访问：<code>http:服务ip:8080</code> 即可。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的IP。</p><p>2、遇到访问不了的情况，请在宝塔面板的防火墙和服务商的后台防火墙里打开对应端口。</p></blockquote><h3 id="5-2-更新"><a href="#5-2-更新" class="headerlink" title="5.2 更新"></a>5.2 更新</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/flarum /root/data/docker_data/flarum.archive  <span class="comment"># 万事先备份，以防万一</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/flarum  <span class="comment"># 进入docker-compose所在的文件夹</span></span><br><span class="line"></span><br><span class="line">docker-compose pull    <span class="comment"># 拉取最新的镜像</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d   <span class="comment"># 重新更新当前镜像</span></span><br></pre></td></tr></table></figure><p>利用Docker-compose搭建的应用，更新非常容易～</p><h3 id="5-3-卸载"><a href="#5-3-卸载" class="headerlink" title="5.3 卸载"></a>5.3 卸载</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/flarum  <span class="comment"># 进入docker-compose所在的文件夹</span></span><br><span class="line"></span><br><span class="line">docker-compose down    <span class="comment"># 停止容器，此时不会删除映射到本地的数据</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/flarum  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><h2 id="6-反向代理（二选一）"><a href="#6-反向代理（二选一）" class="headerlink" title="6. 反向代理（二选一）"></a>6. 反向代理（二选一）</h2><h3 id="6-1-利用Nginx-Proxy-Manager"><a href="#6-1-利用Nginx-Proxy-Manager" class="headerlink" title="6.1 利用Nginx Proxy Manager"></a>6.1 利用Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p>之后，登陆Nginx Proxy Manager（不会的看这个：<strong>安装Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称NPM）会用到<code>80</code>、<code>443</code>端口，所以本机不能占用（比如原来就有Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/03/20/wenk4d.webp" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/03/20/x2w60n.webp" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/04/03/h8h7ss_7.webp" alt="image-20220403104213716" style="zoom: 50%;" /><blockquote><p> 注意填写对应的<code>域名</code>和<code>端口</code>，按文章来的话，应该是<code>8080</code></p></blockquote><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom:50%;" /><p>然后就可以用域名来安装访问了。</p><h3 id="6-2-利用aapanel（宝塔面板通用）"><a href="#6-2-利用aapanel（宝塔面板通用）" class="headerlink" title="6.2 利用aapanel（宝塔面板通用）"></a>6.2 利用aapanel（宝塔面板通用）</h3><p>如果遇到NPM反代出现问题，可以尝试aapanel（宝塔面板通用）的反代。</p><p><img src="https://img.laoda.de/i/2022/04/04/nivw3j_7.webp" alt="image-20220404142238645"></p><p>打开网站的Nginx配置文件，在最后修改下面的内容：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment"># location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$</span></span><br><span class="line"><span class="comment"># &#123;</span></span><br><span class="line"><span class="comment">#     expires      30d;</span></span><br><span class="line"><span class="comment">#     error_log /dev/null;</span></span><br><span class="line"><span class="comment">#     access_log off;</span></span><br><span class="line"><span class="comment"># &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># location ~ .*\.(js|css)?$</span></span><br><span class="line"><span class="comment"># &#123;</span></span><br><span class="line"><span class="comment">#     expires      12h;</span></span><br><span class="line"><span class="comment">#     error_log /dev/null;</span></span><br><span class="line"><span class="comment">#     access_log off; </span></span><br><span class="line"><span class="comment"># &#125;</span></span><br><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:8080/;</span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意把上面原来有的一段注释掉，大家也可以直接删除，然后复制咕咕的这一段。</p><h2 id="7-使用教程"><a href="#7-使用教程" class="headerlink" title="7. 使用教程"></a>7. 使用教程</h2><h3 id="7-1-具体使用"><a href="#7-1-具体使用" class="headerlink" title="7.1 具体使用"></a>7.1 具体使用</h3><p>先自行研究，可以看之前的文章：<a href="https://blog.laoda.de/archives/flarum-install">https://blog.laoda.de/archives/flarum-install</a></p><p>或者可以查阅文档：<a href="https://docs.flarum.org/zh/">https://docs.flarum.org/zh/</a></p><p>也可以等咕咕的视频，到时候简单讲解一下（我接触的时间也不长其实 &#x3D; &#x3D; ）</p><h3 id="7-2-安装自定义扩展"><a href="#7-2-安装自定义扩展" class="headerlink" title="7.2 安装自定义扩展"></a>7.2 安装自定义扩展</h3><p>Flarum扩展列表：<a href="https://flagrow.io/extensions">https://flagrow.io/extensions</a></p><h4 id="7-2-1-下载一个扩展"><a href="#7-2-1-下载一个扩展" class="headerlink" title="7.2.1 下载一个扩展"></a>7.2.1 <strong>下载一个扩展</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -ti flarum extension require some/extension  <span class="comment"># some/extension 替换成相应的插件</span></span><br></pre></td></tr></table></figure><p>下面举个列子：</p><p>进入网站：<a href="https://flagrow.io/extensions">https://flagrow.io/extensions</a></p><p><img src="https://img.laoda.de/i/2022/04/04/n5pgt8_7.webp" alt="image-20220404140023901"></p><p><img src="https://img.laoda.de/i/2022/04/04/n64vwd_7.webp" alt="image-20220404140056641"></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -ti flarum extension require fof/links</span><br></pre></td></tr></table></figure><p>这样就下载好了一个插件了～</p><h4 id="7-2-2-移除一个扩展"><a href="#7-2-2-移除一个扩展" class="headerlink" title="7.2.2 移除一个扩展"></a>7.2.2 <strong>移除一个扩展</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -ti flarum extension remove some/extension  <span class="comment"># 同上，some/extension 替换成相应的插件</span></span><br></pre></td></tr></table></figure><h4 id="7-2-3-列出所有安装的扩展"><a href="#7-2-3-列出所有安装的扩展" class="headerlink" title="7.2.3 列出所有安装的扩展"></a>7.2.3 <strong>列出所有安装的扩展</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -ti flarum extension list</span><br></pre></td></tr></table></figure><h2 id="8-结尾"><a href="#8-结尾" class="headerlink" title="8. 结尾"></a>8. 结尾</h2><p>祝大家用得开心，有问题可以去GitHub提<a href="https://github.com/mondediefr/docker-flarum">Issues</a>，也可以在评论区互相交流探讨。</p><h2 id="9-参考资料"><a href="#9-参考资料" class="headerlink" title="9. 参考资料"></a>9. 参考资料</h2><p><a href="https://github.com/flarum">https://github.com/flarum</a></p><p><a href="https://flarum.org/">https://flarum.org/</a></p><p><a href="https://docs.flarum.org/">https://docs.flarum.org/</a></p><p><a href="https://flarum.org/">https://flarum.org/</a></p><p><a href="https://hub.docker.com/r/mondedie/flarum/tags">https://hub.docker.com/r/mondedie/flarum/tags</a></p><p><a href="https://github.com/mondediefr/docker-flarum">https://github.com/mondediefr/docker-flarum</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker部署 </tag>
            
            <tag> DockerCompose </tag>
            
            <tag> Flarum </tag>
            
            <tag> 论坛程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩的Docker项目】让编写文档成为一种乐趣！用Docker自建一个目前最强大、可扩展性最强的Wiki软件——Wiki.js</title>
      <link href="/archives/docker-compose-install-wikijs/"/>
      <url>/archives/docker-compose-install-wikijs/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.laoda.de/i/2022/04/03/gxvz98_7.webp" alt="image-20220403102435485"></p><p><img src="https://img.laoda.de/i/2022/04/03/gqqkcj_7.webp"></p><h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1. 介绍"></a>1. 介绍</h2><p>之前和大家介绍过简单的记事本项目——<a href="https://blog.laoda.de/archives/docker-install-minimalist">【好玩的Docker项目】搭建一个简洁的记事本——minimalist-web-notepad</a>;</p><p>介绍过一个笔记软件——<a href="https://blog.laoda.de/archives/docker-install-wiz">【好玩的Docker项目】10分钟搭建你专属的笔记本——功能更全的为知笔记</a>;</p><p>还介绍过一个类似可以搭建个人Wiki的项目——<a href="https://blog.laoda.de/archives/docker-compose-install-trillim">【好玩儿的Docker项目】Notion的替代品，自建一个超高自由度的个人知识库——Trillim</a>;</p><p>今天，咕咕给大家介绍一个更牛逼的Wiki文档项目——Wiki.js。它功能更加强大，扩展性更强，也更加美观，甚至可以当作一个开源项目的文档系统（比如之前<a href="https://docs.halo.run/">Halo博客的官方文档</a>），支持多人协作，用了Wiki.js，从此，编写文档成为一种乐趣！</p><p><img src="https://img.laoda.de/i/2022/04/03/ft8ti6_7.webp" alt="Wiki.js Screenshot"></p><h3 id="1-1-特点"><a href="#1-1-特点" class="headerlink" title="1.1 特点"></a>1.1 特点</h3><p><img src="https://img.laoda.de/i/2022/04/03/gpl55c_7.webp" alt="image-20220403101040432"></p><ul><li>可以自建的开源项目（GitHub <code>15.7k</code> star）</li><li>支持多平台部署（Docker、Heroku、Linux、macOS、Windows）</li><li>支持多用户</li><li>易部署，易管理（Docker一下即可）</li><li>权限管理功能丰富</li><li>支持外部存储</li><li>性能好（基于Node.js）</li><li>搜索功能强大，支持全局、按关键字搜索</li><li>支持标签功能，可按标签浏览</li><li>简洁的web页面</li><li>支持多语言，支持中文</li><li>拥有多种编辑器，目前有code（可编写html页面），markdown（在编辑页面可看到页面效果），visual editor（功能强大的文本编辑器，所见即所得）</li><li>团队维护更新积极</li></ul><p><img src="https://img.laoda.de/i/2022/04/03/gyif6x_7.webp" alt="image-20220403102540130"></p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p>GitHub原项目地址：<a href="https://github.com/Requarks/wiki">https://github.com/Requarks/wiki</a></p><p>官网地址：<a href="https://js.wiki/">https://js.wiki/</a></p><p>官方文档地址：<a href="https://docs.requarks.io/">https://docs.requarks.io/</a></p><p>本教程用的镜像：<a href="https://hub.docker.com/r/linuxserver/wikijs">https://hub.docker.com/r/linuxserver/wikijs</a></p><p>Demo:<a href="https://docs.requarks.io/">https://docs.requarks.io/</a></p><p>丢几个图：</p><p><img src="https://img.laoda.de/i/2022/04/03/h0a98g_7.webp" alt="image-20220403102838007"></p><p><img src="https://img.laoda.de/i/2022/04/03/h0d4vx_7.webp" alt="image-20220403102851386"></p><p><img src="https://img.laoda.de/i/2022/04/03/h0pzoq_7.webp" alt="image-20220403102910744"></p><p><img src="https://img.laoda.de/i/2022/04/03/h0stnn_7.webp" alt="image-20220403102924003"></p><p><img src="https://img.laoda.de/i/2022/04/03/h0wjxn_7.webp" alt="image-20220403102942329"></p><p><img src="https://img.laoda.de/i/2022/04/03/h19imk_7.webp" alt="image-20220403103002465"></p><p><img src="https://img.laoda.de/i/2022/04/03/h1dxo0_7.webp" alt="image-20220403103023127"></p><h2 id="3-搭建环境"><a href="#3-搭建环境" class="headerlink" title="3. 搭建环境"></a>3. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器24元&#x2F;月VPS一台</del>展示用的服务器是<a href="https://netcup-sonderangebote.de/">Netcup</a>特价款，本期搭建用的是<a href="https://loll.cc/vultr">Vultr</a>的服务器，按小时计费，可随时销毁（最好是选非大陆的服务器）（<a href="https://loll.cc/tx">腾讯轻量购买链接</a>）<a href="https://loll.cc/hz">Hetzner注册免费得25欧试用金有效期一个月</a></li><li>系统：Debian 10（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本</a> 非必需DD用原来的系统也OK）</li><li>域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>安装好Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需不过<strong>本教程使用</strong>】提前安装好宝塔面板海外版本aapanel，并安装好Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需】安装好Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><h2 id="4-搭建视频"><a href="#4-搭建视频" class="headerlink" title="4. 搭建视频"></a>4. 搭建视频</h2><p>YouTube：<a href="https://youtu.be/Pp1J32HGK-E">https://youtu.be/Pp1J32HGK-E</a></p><p>哔哩哔哩：<a href="https://www.bilibili.com/BV1wr4y1p7pW">https://www.bilibili.com/BV1wr4y1p7pW</a></p><h2 id="5-搭建方式"><a href="#5-搭建方式" class="headerlink" title="5. 搭建方式"></a>5. 搭建方式</h2><h3 id="5-1-搭建"><a href="#5-1-搭建" class="headerlink" title="5.1 搭建"></a>5.1 搭建</h3><p>服务器初始设置，参考</p><p><a href="https://blog.laoda.de/archives/vps-script"><strong>新买了一台服务器“必须”要做的6件小事</strong></a></p><p><a href="https://blog.laoda.de/archives/hello-docker">【Docker系列】不用宝塔面板，小白一样可以玩转VPS服务器！</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i <span class="comment"># 切换到root用户</span></span><br><span class="line"></span><br><span class="line">apt update -y  <span class="comment"># 升级packages</span></span><br><span class="line"></span><br><span class="line">apt install wget curl sudo vim git  <span class="comment"># Debian系统比较干净，安装常用的软件</span></span><br></pre></td></tr></table></figure><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/wikijs</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/wikijs</span><br><span class="line"></span><br><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><p><code>docker-compose.yml</code>填入以下内容：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">version: <span class="string">&quot;2.1&quot;</span></span><br><span class="line">services:</span><br><span class="line">  wikijs:</span><br><span class="line">    image: lscr.io/linuxserver/wikijs</span><br><span class="line">    container_name: wikijs</span><br><span class="line">    environment:</span><br><span class="line">      - PUID=1000        <span class="comment"># 如何查看当前用户的PUID和PGID，直接命令行输入id就行</span></span><br><span class="line">      - PGID=1000</span><br><span class="line">      - TZ=Asia/Shanghai</span><br><span class="line">    volumes:</span><br><span class="line">      - /root/data/docker_data/wikijs/config:/config  <span class="comment"># 配置文件映射到本地，数据不会因为Docker停止而丢失</span></span><br><span class="line">      - /root/data/docker_data/wikijs/data:/data  <span class="comment"># 数据映射到本地，数据不会因为Docker停止而丢失</span></span><br><span class="line">    ports:</span><br><span class="line">      - 8080:3000   <span class="comment"># 左边的8080可以自己调整端口号，右边的3000不要改</span></span><br><span class="line">    restart: unless-stopped</span><br></pre></td></tr></table></figure><p>没问题的话，<code>ctrl+x</code>退出，按<code>y</code>保存，<code>enter</code>确认。</p><p>然后运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>访问：<code>http:服务ip:8080</code> 即可。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的IP。</p><p>2、遇到访问不了的情况，请在宝塔面板的防火墙和服务商的后台防火墙里打开对应端口。</p></blockquote><h3 id="5-2-更新"><a href="#5-2-更新" class="headerlink" title="5.2 更新"></a>5.2 更新</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/wikijs /root/data/docker_data/wikijs.archive  <span class="comment"># 万事先备份，以防万一</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/wikijs  <span class="comment"># 进入docker-compose所在的文件夹</span></span><br><span class="line"></span><br><span class="line">docker-compose pull    <span class="comment"># 拉取最新的镜像</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d   <span class="comment"># 重新更新当前镜像</span></span><br></pre></td></tr></table></figure><p>利用Docker-compose搭建的应用，更新非常容易～</p><h3 id="5-3-卸载"><a href="#5-3-卸载" class="headerlink" title="5.3 卸载"></a>5.3 卸载</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/wikijs  <span class="comment"># 进入docker-compose所在的文件夹</span></span><br><span class="line"></span><br><span class="line">docker-compose down    <span class="comment"># 停止容器，此时不会删除映射到本地的数据</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/wikijs  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>此时，执行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> -al</span><br></pre></td></tr></table></figure><p>可以看到三个文件夹，<code>config</code>、 <code>data、</code> <code>docker-compose.yml</code></p><img src="https://img.laoda.de/i/2022/04/03/hehj2n_7.webp" alt="image-20220403105223455" style="zoom: 50%;" /><p>如果想要删除配置文件和数据，重新搭建的话，执行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">rm</span> -rf config/</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf data/</span><br></pre></td></tr></table></figure><p>如果想要全部删除的话，执行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ..  <span class="comment"># 退回到/root/data/docker_data目录</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/wikijs  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><h2 id="6-反向代理"><a href="#6-反向代理" class="headerlink" title="6. 反向代理"></a>6. 反向代理</h2><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p>之后，登陆Nginx Proxy Manager（不会的看这个：<strong>安装Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称NPM）会用到<code>80</code>、<code>443</code>端口，所以本机不能占用（比如原来就有Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/03/20/wenk4d.webp" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/03/20/x2w60n.webp" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/04/03/h8h7ss_7.webp" alt="image-20220403104213716" style="zoom: 50%;" /><blockquote><p> 注意填写对应的<code>域名</code>和<code>端口</code>，按文章来的话，应该是<code>8080</code></p></blockquote><img src="https://img.laoda.de/i/2022/04/03/h9azjx_7.webp" alt="image-20220403104353185" style="zoom:50%;" /><p>然后就可以用域名来安装访问了。</p><p>视频里遇到点小问题，下面补充一个aapanel（宝塔面板）的反代教程。</p><h3 id="补充一个宝塔面板的反代"><a href="#补充一个宝塔面板的反代" class="headerlink" title="补充一个宝塔面板的反代"></a>补充一个宝塔面板的反代</h3><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$</span></span><br><span class="line"><span class="comment"># &#123;</span></span><br><span class="line"><span class="comment">#     expires      30d;</span></span><br><span class="line"><span class="comment">#     error_log /dev/null;</span></span><br><span class="line"><span class="comment">#     access_log off;</span></span><br><span class="line"><span class="comment"># &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># location ~ .*\.(js|css)?$</span></span><br><span class="line"><span class="comment"># &#123;</span></span><br><span class="line"><span class="comment">#     expires      12h;</span></span><br><span class="line"><span class="comment">#     error_log /dev/null;</span></span><br><span class="line"><span class="comment">#     access_log off; </span></span><br><span class="line"><span class="comment"># &#125;</span></span><br><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:8080/;</span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意把上面原来有的一段注释掉，大家也可以直接删除，然后复制咕咕的这一段。</p><h2 id="7-使用教程"><a href="#7-使用教程" class="headerlink" title="7. 使用教程"></a>7. 使用教程</h2><p>先自行研究，或者可以查阅文档：<a href="https://docs.requarks.io/">https://docs.requarks.io/</a></p><p>也可以等咕咕的视频，到时候简单讲解一下（我接触的时间也不长其实 &#x3D; &#x3D; ）</p><h2 id="8-结尾"><a href="#8-结尾" class="headerlink" title="8. 结尾"></a>8. 结尾</h2><p>祝大家用得开心，有问题可以去GitHub提<a href="https://github.com/Requarks/wiki">Issues</a>，也可以在评论区互相交流探讨。</p><h2 id="9-参考资料"><a href="#9-参考资料" class="headerlink" title="9. 参考资料"></a>9. 参考资料</h2><p><a href="https://js.wiki/">https://js.wiki/</a></p><p><a href="https://docs.requarks.io/install">https://docs.requarks.io/install</a></p><p><a href="https://en.wikipedia.org/wiki/Wiki.js">https://en.wikipedia.org/wiki/Wiki.js</a></p><p><a href="https://blog.51cto.com/u_13009055/2491418">https://blog.51cto.com/u_13009055/2491418</a></p><p><a href="https://blog.csdn.net/weixin_46517999/article/details/114648769">https://blog.csdn.net/weixin_46517999/article/details/114648769</a></p><p><a href="http://imbajin.com/2019-11-26-%E7%94%A8Wiki.js%E6%9D%A5%E4%BC%98%E9%9B%85%E7%9A%84%E7%AE%A1%E7%90%86%E6%96%87%E6%A1%A3/">http://imbajin.com/2019-11-26-%E7%94%A8Wiki.js%E6%9D%A5%E4%BC%98%E9%9B%85%E7%9A%84%E7%AE%A1%E7%90%86%E6%96%87%E6%A1%A3/</a></p><p><a href="https://zhuanlan.zhihu.com/p/398006335">https://zhuanlan.zhihu.com/p/398006335</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记软件 </tag>
            
            <tag> Wiki </tag>
            
            <tag> 文档系统 </tag>
            
            <tag> 多人协作 </tag>
            
            <tag> Wiki.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩的Docker项目】谷歌统计替代品！Docker搭建又一个开源网站统计工具——Matomo</title>
      <link href="/archives/docker-compose-install-matomo/"/>
      <url>/archives/docker-compose-install-matomo/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.laoda.de/i/2022/04/02/xv3338_7.webp" alt="image-20220402204755638"></p><h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1. 介绍"></a>1. 介绍</h2><p>之前和大家介绍过一个网站流量的统计工具——<a href="https://blog.laoda.de/archives/umami/">【好玩的Docker项目】搭建一个小而美的网站流量监控——Umami</a> 比较轻量，其实我之前一直用的是今天要介绍的这个统计工具，但是由于之前是用宝塔来搭建的，升级的时候会比较麻烦，而且整个程序功能比较丰富（毕竟是想和谷歌统计相比较的工具），猜想能用上怎么复杂功能的小伙伴也不多，就没介绍，这俩天发现，其实它也可以用docker来完成简单的部署，所以就水一篇文章，分享给大家。</p><h3 id="1-1-特点"><a href="#1-1-特点" class="headerlink" title="1.1 特点"></a>1.1 特点</h3><ul><li>可以自建的开源项目（GitHub 16.1k star）</li><li>支持多用户</li><li>支持导入GA的数据</li><li>按需扩展统计的功能</li><li>简单易用</li><li>尊重隐私</li><li>没有网站数量限制</li><li>超过100万用户使用</li><li>支持Docker部署（简单）</li><li>支持中文界面</li><li>有技术支持（需付费）</li></ul><p><img src="https://img.laoda.de/i/2022/04/02/zhen91_7.webp" alt="image-20220402214552670"></p><h3 id="1-2-评价"><a href="#1-2-评价" class="headerlink" title="1.2 评价"></a>1.2 评价</h3><p><img src="https://img.laoda.de/i/2022/04/02/zfzz55_7.webp" alt="image-20220402214316403"></p><blockquote><p>翻译：”这个工具（Matomo）毫无疑问，是谷歌分析的一个强力竞争者，并对GA高级版构成严重威胁。” </p></blockquote><p>与<strong>谷歌分析</strong>的部分截图</p><img src="https://img.laoda.de/i/2022/04/02/10efdlm_7.webp" alt="image-20220402220058909" style="zoom:50%;" /><img src="https://img.laoda.de/i/2022/04/02/10ei1me_7.webp" alt="image-20220402220110771" style="zoom:50%;" /><p>详细对比，可以看这边：<a href="https://matomo.org/matomo-vs-google-analytics-comparison/">https://matomo.org/matomo-vs-google-analytics-comparison/</a></p><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p>GitHub原项目地址：<a href="https://github.com/matomo-org/matomo">https://github.com/matomo-org/matomo</a></p><p>官网地址：<a href="https://matomo.org/">https://matomo.org</a></p><p>官方文档地址：<a href="https://demo.matomo.cloud/?menu">https://demo.matomo.cloud/?menu</a></p><p>官方镜像：<a href="https://hub.docker.com/_/matomo">https://hub.docker.com/_/matomo</a></p><h3 id="2-1-报表面板"><a href="#2-1-报表面板" class="headerlink" title="2.1 报表面板"></a>2.1 报表面板</h3><p><img src="https://img.laoda.de/i/2022/04/02/xzpit9_7.webp" alt="image-20220402205533567"></p><h3 id="2-2-用户行为"><a href="#2-2-用户行为" class="headerlink" title="2.2 用户行为"></a>2.2 用户行为</h3><p><img src="https://img.laoda.de/i/2022/04/02/y0xewg_7.webp" alt="image-20220402205738341"></p><h3 id="2-3-趋势分析"><a href="#2-3-趋势分析" class="headerlink" title="2.3 趋势分析"></a>2.3 趋势分析</h3><p><img src="https://img.laoda.de/i/2022/04/02/y1gadv_7.webp" alt="image-20220402205826382"></p><h2 id="3-搭建环境"><a href="#3-搭建环境" class="headerlink" title="3. 搭建环境"></a>3. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器24元&#x2F;月VPS一台</del>展示用的服务器是<a href="https://netcup-sonderangebote.de/">Netcup</a>特价款，本期搭建用的是<a href="https://loll.cc/vultr">Vultr</a>的服务器，按小时计费，可随时销毁（最好是选非大陆的服务器）（<a href="https://loll.cc/tx">腾讯轻量购买链接</a>）</li><li>系统：Debian 10（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本</a> 非必需DD用原来的系统也OK）</li><li>域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>安装好Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需】安装好宝塔面板海外版本aapanel，并安装好Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需不过<strong>本教程使用</strong>】安装好Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><h2 id="4-搭建视频"><a href="#4-搭建视频" class="headerlink" title="4. 搭建视频"></a>4. 搭建视频</h2><p>YouTube：<a href="https://youtu.be/AmHAy_HRNyQ">https://youtu.be/AmHAy_HRNyQ</a></p><p>哔哩哔哩【高清版本可以点击去吐槽到B站观看】：<joe-bilibili bvid="BV1ci4y1X7uC"></joe-bilibili></p><h2 id="5-搭建方式"><a href="#5-搭建方式" class="headerlink" title="5. 搭建方式"></a>5. 搭建方式</h2><p>服务器初始设置，参考</p><p><a href="https://blog.laoda.de/archives/vps-script"><strong>新买了一台服务器“必须”要做的6件小事</strong></a></p><p><a href="https://blog.laoda.de/archives/hello-docker">【Docker系列】不用宝塔面板，小白一样可以玩转VPS服务器！</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i <span class="comment"># 切换到root用户</span></span><br><span class="line"></span><br><span class="line">apt update -y  <span class="comment"># 升级packages</span></span><br><span class="line"></span><br><span class="line">apt install wget curl sudo vim git  <span class="comment"># Debian系统比较干净，安装常用的软件</span></span><br></pre></td></tr></table></figure><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/matomo</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/matomo</span><br><span class="line"></span><br><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><p><code>docker-compose.yml</code>填入以下内容：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&quot;3&quot;</span></span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  db:</span><br><span class="line">    image: mariadb</span><br><span class="line">    <span class="built_in">command</span>: --max-allowed-packet=64MB</span><br><span class="line">    restart: always</span><br><span class="line">    volumes:</span><br><span class="line">      - db:/var/lib/mysql</span><br><span class="line">    environment:</span><br><span class="line">      - MYSQL_ROOT_PASSWORD=Pas3W0rd</span><br><span class="line">    env_file:</span><br><span class="line">      - ./db.env</span><br><span class="line"></span><br><span class="line">  app:</span><br><span class="line">    image: matomo</span><br><span class="line">    restart: always</span><br><span class="line">    volumes:</span><br><span class="line"><span class="comment">#     - ./config:/var/www/html/config</span></span><br><span class="line"><span class="comment">#     - ./logs:/var/www/html/logs</span></span><br><span class="line">      - /root/data/docker_data/matomo/matomo/html:/var/www/html</span><br><span class="line">    environment:</span><br><span class="line">      - MATOMO_DATABASE_HOST=db</span><br><span class="line">    env_file:</span><br><span class="line">      - ./db.env</span><br><span class="line">    ports:</span><br><span class="line">      - 8080:80  <span class="comment"># 8080可以更改为别的未使用的端口  lsof -i:8080 可以查看8080端口是否被使用</span></span><br><span class="line">      - 8443:443 <span class="comment"># 8443可以更改为别的未使用的端口  这边后续填到NPM的“Custom location”里</span></span><br><span class="line">volumes:</span><br><span class="line">  db:</span><br><span class="line">  matomo:</span><br></pre></td></tr></table></figure><p>没问题的话，<code>ctrl+x</code>退出，按<code>y</code>保存，<code>enter</code>确认。</p><p>然后运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano db.env</span><br></pre></td></tr></table></figure><p>输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">MYSQL_PASSWORD=Pas3W0rd</span><br><span class="line">MYSQL_DATABASE=matomo</span><br><span class="line">MYSQL_USER=matomo</span><br><span class="line">MATOMO_DATABASE_ADAPTER=mysql</span><br><span class="line">MATOMO_DATABASE_TABLES_PREFIX=matomo_</span><br><span class="line">MATOMO_DATABASE_USERNAME=matomo</span><br><span class="line">MATOMO_DATABASE_PASSWORD=Pas3W0rd</span><br><span class="line">MATOMO_DATABASE_DBNAME=matomo</span><br></pre></td></tr></table></figure><p>没问题的话，<code>ctrl+x</code>退出，按<code>y</code>保存，<code>enter</code>确认。</p><p>然后运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>访问：<code>http:服务ip:8080</code> 即可。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的IP。</p><p>2、遇到访问不了的情况，请在宝塔面板的防火墙和服务商的后台防火墙里打开对应端口。</p></blockquote><h2 id="6-反向代理"><a href="#6-反向代理" class="headerlink" title="6. 反向代理"></a>6. 反向代理</h2><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p>之后，登陆Nginx Proxy Manager（不会的看这个：<strong>安装Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称NPM）会用到<code>80</code>、<code>443</code>端口，所以本机不能占用（比如原来就有Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/03/20/wenk4d.webp" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/03/20/x2w60n.webp" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/04/02/yyxtae_7.webp" alt="image-20220402211451245" style="zoom: 50%;" /><blockquote><p> 注意填写对应的<code>域名</code>和<code>端口</code>，按文章来的话，应该是<code>8080</code></p></blockquote><img src="https://img.laoda.de/i/2022/04/02/yzy3lu_7.webp" alt="image-20220402211619671" style="zoom:50%;" /><blockquote><p><strong>Custom location</strong>这边填入<code>域名</code>、<code>IP地址</code>、和<code>8443</code>（就是443那边对应的端口）</p></blockquote><img src="https://img.laoda.de/i/2022/03/20/wdukw3.webp" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/04/02/z4uoa9_7.webp" alt="image-20220402212443539" style="zoom:33%;" /><p>然后就可以用域名来安装访问了。</p><h2 id="7-使用教程"><a href="#7-使用教程" class="headerlink" title="7. 使用教程"></a>7. 使用教程</h2><img src="https://img.laoda.de/i/2022/04/02/z71aqu_7.webp" alt="image-20220402212811694" style="zoom:50%;" /><p><img src="https://img.laoda.de/i/2022/04/02/z74xdk_7.webp" alt="image-20220402212828247"></p><p><img src="https://img.laoda.de/i/2022/04/02/z7ka38_7.webp" alt="image-20220402212858738"></p><p><img src="https://img.laoda.de/i/2022/04/02/z7ou8k_7.webp" alt="image-20220402212921692"></p><p><img src="https://img.laoda.de/i/2022/04/02/z86hkh_7.webp" alt="image-20220402213002716"></p><p><img src="https://img.laoda.de/i/2022/04/02/zbe54i_7.webp" alt="image-20220402213543527"></p><p><img src="https://img.laoda.de/i/2022/04/02/zajes7_7.webp" alt="image-20220402213358543"></p><h2 id="8-结尾"><a href="#8-结尾" class="headerlink" title="8. 结尾"></a>8. 结尾</h2><p>祝大家用得开心，有问题可以去GitHub提<a href="https://github.com/matomo-org/matomo">Issues</a>，也可以在评论区互相交流探讨。</p><h2 id="9-参考资料"><a href="#9-参考资料" class="headerlink" title="9. 参考资料"></a>9. 参考资料</h2><p>GitHub原项目地址：<a href="https://github.com/matomo-org/matomo">https://github.com/matomo-org/matomo</a></p><p>官网地址：<a href="https://matomo.org/">https://matomo.org</a></p><p>官方文档地址：<a href="https://demo.matomo.cloud/?menu">https://demo.matomo.cloud/?menu</a></p><p>官方镜像：<a href="https://hub.docker.com/_/matomo">https://hub.docker.com/_/matomo</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 谷歌统计 </tag>
            
            <tag> 网站统计 </tag>
            
            <tag> 流量统计 </tag>
            
            <tag> 谷歌分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩儿的Docker项目】保存网页、稍后阅读，自建 Wallabag 服务，搭配RSS使用更佳！</title>
      <link href="/archives/docker-compose-install-wallabag/"/>
      <url>/archives/docker-compose-install-wallabag/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.laoda.de/i/2022/03/31/fri2eh_7.webp" alt="image-20220331095313176"></p><h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1. 介绍"></a>1. 介绍</h2><p>前俩天在YouTube上，有小伙伴推荐让咕咕做一个Wallabag的教程，说是可以代替Instapaper，我没用过Wallabag，但是Instapaper还是听说过的，一个可以稍后阅读的工具（就是那种<strong>可以支持电脑上或者手机上看到好的内容，但是第一时间没发读完，先保存下来，等有空了再阅读的工具</strong>）。正好趁着闲暇之余，自己捣鼓了一下，发现确实还不错，故而推荐给大家。</p><blockquote><p><strong>剧透：</strong> 配合之前和大家介绍过的——<a href="https://blog.laoda.de/archives/tinytinyrss">【服务器能干什么】二十分钟搭建一个属于自己的RSS服务 </a>食用更佳！</p></blockquote><h3 id="1-1-特点"><a href="#1-1-特点" class="headerlink" title="1.1 特点"></a>1.1 特点</h3><ul><li>自建开源项目（GitHub 6.8k star）</li><li>跨平台客户端种类充足（包括了 Android、iOS、Chrome、Firefox、Opera 以及 Kindle（需要越狱） 等平台）</li><li>有浏览器扩展（方便保存网页）</li><li>支持多用户（搭建好可以和小伙伴一起分享）</li><li>支持Docker部署（简单）</li><li>支持中文界面</li><li>支持生成rss（可以部署到路由器上然后用<a href="https://blog.laoda.de/archives/tinytinyrss">ttrss订阅</a>，在RSS 阅读器中阅读自己保存的文章）</li><li>支持自动标签规则</li></ul><blockquote><p><strong>注意：</strong></p><p>官方没有提供arm镜像，如果你是树莓派或者其他arm机型想要安装，可以参考这个镜像：<a href="https://hub.docker.com/r/ugeek/wallabag">https://hub.docker.com/r/ugeek/wallabag</a></p></blockquote><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p>GitHub原项目地址：<a href="https://github.com/wallabag/wallabag">https://github.com/wallabag/wallabag</a></p><p>官网地址：<a href="https://wallabag.org/">https://wallabag.org/</a></p><p>官方文档地址：<a href="https://doc.wallabag.org/en/admin/installation/requirements.html">https://doc.wallabag.org/en/admin/installation/requirements.html</a></p><p>官方镜像：<a href="https://hub.docker.com/r/wallabag/wallabag">https://hub.docker.com/r/wallabag/wallabag</a></p><h3 id="2-1-登陆页面"><a href="#2-1-登陆页面" class="headerlink" title="2.1 登陆页面"></a>2.1 登陆页面</h3><img src="https://img.laoda.de/i/2022/03/31/gtr9k0_7.webp" alt="image-20220331101740852" style="zoom: 33%;" /><h3 id="2-2-中文首页"><a href="#2-2-中文首页" class="headerlink" title="2.2 中文首页"></a>2.2 中文首页</h3><img src="https://img.laoda.de/i/2022/03/30/qrhe2b_7.webp" alt="image-20220330161823511" style="zoom:50%;" /><h3 id="2-3-支持的功能一览"><a href="#2-3-支持的功能一览" class="headerlink" title="2.3 支持的功能一览"></a>2.3 支持的功能一览</h3><img src="https://img.laoda.de/i/2022/03/31/gv1hsb_7.webp" alt="image-20220331101955952" style="zoom:50%;" /><h3 id="2-4-阅读清单"><a href="#2-4-阅读清单" class="headerlink" title="2.4 阅读清单"></a>2.4 阅读清单</h3><img src="https://img.laoda.de/i/2022/03/31/gucrt8_7.webp" alt="image-20220331101841909" style="zoom:50%;" /><h3 id="2-5-API管理"><a href="#2-5-API管理" class="headerlink" title="2.5 API管理"></a>2.5 API管理</h3><img src="https://img.laoda.de/i/2022/03/31/gupoex_7.webp" alt="image-20220331101900598" style="zoom:50%;" /><h3 id="2-6-RSS订阅"><a href="#2-6-RSS订阅" class="headerlink" title="2.6 RSS订阅"></a>2.6 RSS订阅</h3><img src="https://img.laoda.de/i/2022/03/31/guu67a_7.webp" alt="image-20220331101922888" style="zoom:50%;" /><h3 id="2-7-多设备使用教程"><a href="#2-7-多设备使用教程" class="headerlink" title="2.7 多设备使用教程"></a>2.7 多设备使用教程</h3><img src="https://img.laoda.de/i/2022/03/31/gvglah_7.webp" alt="image-20220331102028549" style="zoom:50%;" /><h2 id="3-搭建环境"><a href="#3-搭建环境" class="headerlink" title="3. 搭建环境"></a>3. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器24元&#x2F;月VPS一台</del>展示用的服务器是<a href="https://netcup-sonderangebote.de/">Netcup</a>特价款，本期搭建用的是<a href="https://loll.cc/vultr">Vultr</a>的服务器，按小时计费，可随时销毁（最好是选非大陆的服务器）（<a href="https://loll.cc/tx">腾讯轻量购买链接</a>）</li><li>系统：Debian 10（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本</a> 非必需DD用原来的系统也OK）</li><li>域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>安装好Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需】安装好宝塔面板海外版本aapanel，并安装好Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需不过<strong>本教程使用</strong>】安装好Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><h2 id="4-搭建视频"><a href="#4-搭建视频" class="headerlink" title="4. 搭建视频"></a>4. 搭建视频</h2><p>YouTube：<a href="https://youtu.be/KURD8cY9fs0">https://youtu.be/KURD8cY9fs0</a></p><p>哔哩哔哩【高清版本可以点击去吐槽到B站观看】：<joe-bilibili bvid="BV1aP4y1K7cw"></joe-bilibili></p><h2 id="5-搭建方式"><a href="#5-搭建方式" class="headerlink" title="5. 搭建方式"></a>5. 搭建方式</h2><p>服务器初始设置，参考</p><p><a href="https://blog.laoda.de/archives/vps-script"><strong>新买了一台服务器“必须”要做的6件小事</strong></a></p><p><a href="https://blog.laoda.de/archives/hello-docker">【Docker系列】不用宝塔面板，小白一样可以玩转VPS服务器！</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i <span class="comment"># 切换到root用户</span></span><br><span class="line"></span><br><span class="line">apt update -y  <span class="comment"># 升级packages</span></span><br><span class="line"></span><br><span class="line">apt install wget curl sudo vim git  <span class="comment"># Debian系统比较干净，安装常用的软件</span></span><br></pre></td></tr></table></figure><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/wallabag</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/wallabag</span><br><span class="line"></span><br><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><p><code>docker-compose.yml</code>填入以下内容：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&#x27;3&#x27;</span></span><br><span class="line">services:</span><br><span class="line">  wallabag:</span><br><span class="line">    image: wallabag/wallabag</span><br><span class="line">    environment:</span><br><span class="line">      - MYSQL_ROOT_PASSWORD=wallaroot</span><br><span class="line">      - SYMFONY__ENV__DATABASE_DRIVER=pdo_mysql</span><br><span class="line">      - SYMFONY__ENV__DATABASE_HOST=db</span><br><span class="line">      - SYMFONY__ENV__DATABASE_PORT=3306</span><br><span class="line">      - SYMFONY__ENV__DATABASE_NAME=wallabag</span><br><span class="line">      - SYMFONY__ENV__DATABASE_USER=wallabag</span><br><span class="line">      - SYMFONY__ENV__DATABASE_PASSWORD=wallapass</span><br><span class="line">      - SYMFONY__ENV__DATABASE_CHARSET=utf8mb4</span><br><span class="line">      - SYMFONY__ENV__MAILER_HOST=127.0.0.1</span><br><span class="line">      - SYMFONY__ENV__MAILER_USER=~</span><br><span class="line">      - SYMFONY__ENV__MAILER_PASSWORD=~</span><br><span class="line">      - SYMFONY__ENV__FROM_EMAIL=email@lyr.im   <span class="comment"># 修改成你自己的邮箱</span></span><br><span class="line">      - SYMFONY__ENV__DOMAIN_NAME=https://wallabag.laoda.de  <span class="comment"># 修改成稍后要反向代理的域名</span></span><br><span class="line">      - SYMFONY__ENV__SERVER_NAME=<span class="string">&quot;Roy&#x27;s Wallabag&quot;</span></span><br><span class="line">    ports:</span><br><span class="line">      - 8080:80   <span class="comment"># 8080可以修改成其他的自己想用的端口</span></span><br><span class="line">    volumes:</span><br><span class="line">      - /root/data/docker_data/wallabag/images:/var/www/wallabag/web/assets/images  <span class="comment"># 将图片映射挂载到本地，这样docker停止了，数据不会丢失</span></span><br><span class="line">    healthcheck:</span><br><span class="line">      <span class="built_in">test</span>: [<span class="string">&quot;CMD&quot;</span>, <span class="string">&quot;wget&quot;</span> ,<span class="string">&quot;--no-verbose&quot;</span>, <span class="string">&quot;--tries=1&quot;</span>, <span class="string">&quot;--spider&quot;</span>, <span class="string">&quot;http://localhost&quot;</span>]</span><br><span class="line">      interval: 1m</span><br><span class="line">      <span class="built_in">timeout</span>: 3s</span><br><span class="line">    depends_on:</span><br><span class="line">      - db</span><br><span class="line">      - redis</span><br><span class="line">  db:</span><br><span class="line">    image: mariadb</span><br><span class="line">    environment:</span><br><span class="line">      - MYSQL_ROOT_PASSWORD=wallaroot</span><br><span class="line">    volumes:</span><br><span class="line">      - /root/data/docker_data/wallabag/data:/var/lib/mysql  <span class="comment"># 将数据映射挂载到本地，这样docker停止了，数据不会丢失</span></span><br><span class="line">    healthcheck:</span><br><span class="line">      <span class="built_in">test</span>: [<span class="string">&quot;CMD&quot;</span>, <span class="string">&quot;mysqladmin&quot;</span> ,<span class="string">&quot;ping&quot;</span>, <span class="string">&quot;-h&quot;</span>, <span class="string">&quot;localhost&quot;</span>]</span><br><span class="line">      interval: 20s</span><br><span class="line">      <span class="built_in">timeout</span>: 3s</span><br><span class="line">  redis:</span><br><span class="line">    image: redis:alpine</span><br><span class="line">    healthcheck:</span><br><span class="line">      <span class="built_in">test</span>: [<span class="string">&quot;CMD&quot;</span>, <span class="string">&quot;redis-cli&quot;</span>, <span class="string">&quot;ping&quot;</span>]</span><br><span class="line">      interval: 20s</span><br><span class="line">      <span class="built_in">timeout</span>: 3s</span><br></pre></td></tr></table></figure><p>没问题的话，<code>ctrl+x</code>退出，按<code>y</code>保存，<code>enter</code>确认。</p><p>然后运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>访问：<code>http:服务ip:8080</code> 即可。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的IP。</p><p>2、遇到访问不了的情况，请在宝塔面板的防火墙和服务商的后台防火墙里打开对应端口。</p></blockquote><h2 id="6-反向代理"><a href="#6-反向代理" class="headerlink" title="6. 反向代理"></a>6. 反向代理</h2><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p>之后，登陆Nginx Proxy Manager（不会的看这个：<strong>安装Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称NPM）会用到<code>80</code>、<code>443</code>端口，所以本机不能占用（比如原来就有Nginx）</p></blockquote><p>直接丢几张图：</p><img src="https://img.laoda.de/i/2022/03/20/wenk4d.webp" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/03/20/x2w60n.webp" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/03/21/shel01_5.webp" style="zoom:33%;" /><blockquote><p> 注意填写对应的<code>域名</code>和<code>端口</code>，按文章来的话，应该是<code>8080</code></p></blockquote><img src="https://img.laoda.de/i/2022/03/20/wdukw3.webp" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/03/21/shhsl4_5.webp" style="zoom:33%;" /><p>然后就可以用域名来访问了。</p><h2 id="7-使用教程"><a href="#7-使用教程" class="headerlink" title="7. 使用教程"></a>7. 使用教程</h2><h3 id="7-1-浏览器扩展配置"><a href="#7-1-浏览器扩展配置" class="headerlink" title="7.1 浏览器扩展配置"></a>7.1 浏览器扩展配置</h3><img src="https://img.laoda.de/i/2022/03/30/qw9pt8_7.webp" alt="image-20220330162628232" style="zoom:33%;" /><p><img src="https://img.laoda.de/i/2022/03/30/qw33wd_7.webp" alt="image-20220330162557854"></p><h3 id="7-2-浏览器使用"><a href="#7-2-浏览器使用" class="headerlink" title="7.2 浏览器使用"></a>7.2 浏览器使用</h3><p><img src="https://img.laoda.de/i/2022/03/31/h0yn9u_7.webp" alt="image-20220331102950868"></p><h4 id="7-2-1-后台自动同步"><a href="#7-2-1-后台自动同步" class="headerlink" title="7.2.1 后台自动同步"></a>7.2.1 后台自动同步</h4><p><img src="https://img.laoda.de/i/2022/03/31/h1ktht_7.webp" alt="image-20220331103054828"></p><h4 id="7-2-2-电脑端阅读"><a href="#7-2-2-电脑端阅读" class="headerlink" title="7.2.2 电脑端阅读"></a>7.2.2 电脑端阅读</h4><p><img src="https://img.laoda.de/i/2022/03/31/h2n9lu_7.webp" alt="image-20220331103233929"></p><h3 id="7-3-手机端配置"><a href="#7-3-手机端配置" class="headerlink" title="7.3 手机端配置"></a>7.3 手机端配置</h3><img src="https://img.laoda.de/i/2022/03/31/hf3ruf_7.webp" alt="IMG_C84F76E25E58-1" style="zoom: 25%;" /><img src="https://img.laoda.de/i/2022/03/31/hdsexu_7.webp" alt="IMG_BB4A8DF9A59F-1" style="zoom: 25%;" /><img src="https://img.laoda.de/i/2022/03/31/hdey0f_7.webp" alt="IMG_68CF59DC5D96-1" style="zoom: 25%;" /><img src="https://img.laoda.de/i/2022/03/31/hdat1i_7.webp" alt="image-20220331105024327" style="zoom: 25%;" /><h3 id="7-4-手机保存演示"><a href="#7-4-手机保存演示" class="headerlink" title="7.4 手机保存演示"></a>7.4 手机保存演示</h3><img src="https://img.laoda.de/i/2022/03/31/hgzap2_7.webp" alt="IMG_C5D4493D9693-1" style="zoom:25%;" /><img src="https://img.laoda.de/i/2022/03/31/hh1na3_7.webp" alt="IMG_CF33E9542510-1" style="zoom:25%;" /><img src="https://img.laoda.de/i/2022/03/31/hhia58_7.webp" alt="IMG_52AEC461FA28-1" style="zoom:25%;" /><img src="https://img.laoda.de/i/2022/03/31/hhydhg_7.webp" alt="IMG_948374261B71-1" style="zoom:25%;" /><h4 id="7-4-1-IOS上利用Reeder阅读"><a href="#7-4-1-IOS上利用Reeder阅读" class="headerlink" title="7.4.1 IOS上利用Reeder阅读"></a>7.4.1 IOS上利用Reeder阅读</h4><img src="https://img.laoda.de/i/2022/03/31/hi43i6_7.webp" alt="IMG_BD5FFB2AD8A1-1" style="zoom:25%;" /><img src="https://img.laoda.de/i/2022/03/31/hi25le_7.webp" alt="IMG_1DE2B6F26964-1" style="zoom:25%;" /><h2 id="8-结尾"><a href="#8-结尾" class="headerlink" title="8. 结尾"></a>8. 结尾</h2><p>祝大家用得开心，有问题可以去GitHub提<a href="https://github.com/wallabag/wallabag">Issues</a>，也可以在评论区互相交流探讨。</p><h2 id="9-参考资料"><a href="#9-参考资料" class="headerlink" title="9. 参考资料"></a>9. 参考资料</h2><p><a href="https://www.appinn.com/wallabag/">https://www.appinn.com/wallabag/</a></p><p><a href="https://github.com/wallabag/wallabag">https://github.com/wallabag/wallabag</a></p><p><a href="https://sspai.com/post/52979">https://sspai.com/post/52979</a></p><p><a href="https://www.youtube.com/watch?v=OoTMoKtSOaI&t=67s">https://www.youtube.com/watch?v=OoTMoKtSOaI&amp;t=67s</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker部署 </tag>
            
            <tag> DockerCompose </tag>
            
            <tag> TinyTinyRSS </tag>
            
            <tag> RSS </tag>
            
            <tag> 稍后阅读 </tag>
            
            <tag> Instapaper </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【VPS推荐】$74/年! 搬瓦工美国DC9 CN2 GIA 限量版 VPS补货! 1C/1G内存/20G SSD/1G带宽@500G月流量</title>
      <link href="/archives/bwh-restore-74-20220330/"/>
      <url>/archives/bwh-restore-74-20220330/</url>
      
        <content type="html"><![CDATA[<p>今天凌晨瓦工增加了一个新的VPS规格。命名为：SPECIAL 20G KVM PROMO V3 - LOS ANGELES - CN2 GIA LIMITED EDITION DC9 VPS，该套餐是商家的限量套餐，售罄之后会间隔一段时间进行补货！！！</p><p>该机型的配置是：单核CPU+1GB内存+20GB存储+1G带宽+500GB&#x2F;月流量，售价79.99美元&#x2F;年。可以使用循环优惠码：<a href="https://bwh89.net/aff.php?aff=67086">BWH3HYATVBJW</a>（6.58%），折后价格 $74.73 USD。</p><p>该规格是目前<a href="https://blog.laoda.de/tags/bwg/">搬瓦工</a>最廉价的在售 GIA 线路VPS，配置与此前的 89.99 美元限量版相仿，可使用 DC9 CN2 GIA、DC3 CN2 等机房（不能用 DC6、软银、EUNL_9）。</p><p><img src="https://img.laoda.de/i/2022/03/30/f18oax_7.webp" alt="搬瓦工美国DC9 CN2 GIA 限量版 VPS补货，$74/年，1C/1G内存/20G SSD/1G带宽@500G月流量"></p><h2 id="1-官网"><a href="#1-官网" class="headerlink" title="1. 官网"></a>1. 官网</h2><p><strong>网址</strong>：**<a href="https://bwh89.net/aff.php?aff=67086">https://bwh81.net</a>**</p><p>日常6.58%优惠码：<a href="https://bwh89.net/aff.php?aff=67086">BWH3HYATVBJW</a></p><h2 id="2-瓦工vps全览"><a href="#2-瓦工vps全览" class="headerlink" title="2. 瓦工vps全览"></a>2. 瓦工vps全览</h2><p>瓦工的实时库存监控：<a href="https://bwg.laoda.de/">https://bwg.laoda.de/</a></p><h2 id="2-DC9-CN2-GIA-限量版-VPS"><a href="#2-DC9-CN2-GIA-限量版-VPS" class="headerlink" title="2. DC9 CN2 GIA 限量版 VPS"></a>2. DC9 CN2 GIA 限量版 VPS</h2><p>SPECIAL 20G KVM PROMO V3 - LOS ANGELES - CN2 GIA LIMITED EDITION DC9 VPS</p><ul><li>内存：1G</li><li>CPU：1核</li><li>硬盘：20G SSD</li><li>流量：500G&#x2F;月</li><li>带宽：1Gbps</li><li>价格：$79.99&#x2F;年（可使用：<a href="https://bwh89.net/aff.php?aff=67086">BWH3HYATVBJW </a> 优惠6.58%，折后 $74.73&#x2F;年）</li><li><a href="https://bwh81.net/aff.php?aff=67086&pid=112"><strong>购买链接</strong></a></li></ul><hr><h2 id="4-89-99-美元限量版套餐"><a href="#4-89-99-美元限量版套餐" class="headerlink" title="4. 89.99 美元限量版套餐"></a>4. 89.99 美元限量版套餐</h2><ul><li><strong>Basic VPS - Self-managed - SPECIAL 20G KVM PROMO V5 - LIMITED EDITION</strong></li><li>内存：1G</li><li>CPU：1核</li><li>硬盘：20G SSD</li><li>流量：500G&#x2F;月</li><li>带宽：1Gbps</li><li>价格：$89.99&#x2F;年（可使用：<a href="https://bwh89.net/aff.php?aff=67086">BWH3HYATVBJW</a> 优惠6.58%<a href="https://bandwagonhost.com/aff.php?aff=67086"> </a>）</li><li><a href="https://bwh81.net/aff.php?aff=67086&pid=105"><strong>购买链接</strong></a></li></ul><hr><blockquote><p>以下为常规套餐</p></blockquote><h2 id="5-美国-cn2-gia-日本软银-荷兰AS9929，2-5-10Gbps带宽"><a href="#5-美国-cn2-gia-日本软银-荷兰AS9929，2-5-10Gbps带宽" class="headerlink" title="5. 美国 cn2 gia&#x2F;日本软银&#x2F;荷兰AS9929，2.5~10Gbps带宽"></a>5. 美国 cn2 gia&#x2F;日本软银&#x2F;荷兰AS9929，2.5~10Gbps带宽</h2><p>目前可以选择3个机房，分别是，洛杉矶，日本软银和荷兰的cu2vip也就是AS9929！带宽高达10Gbps</p><p>2022新年优惠码：<a href="https://bwh89.net/aff.php?aff=67086">BWHNY2022</a>（优惠12.22%，循环优惠）</p><p>日常6.58%优惠码：<a href="https://bwh89.net/aff.php?aff=67086">BWH3HYATVBJW</a></p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>带宽</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1G</td><td>2核</td><td>20G</td><td>1.0T&#x2F;月</td><td>2.5G</td><td>$50&#x2F;季</td><td><strong><a href="https://bwh89.net/aff.php?aff=67086&pid=87">链接</a></strong></td></tr><tr><td>2G</td><td>3核</td><td>40G</td><td>2.0T&#x2F;月</td><td>2.5G</td><td>$90&#x2F;季</td><td><strong><a href="https://bwh89.net/aff.php?aff=67086&pid=88">链接</a></strong></td></tr><tr><td>4G</td><td>4核</td><td>80G</td><td>3.0T&#x2F;月</td><td>2.5G</td><td>$57&#x2F;月</td><td><strong><a href="https://bwh89.net/aff.php?aff=67086&pid=89">链接</a></strong></td></tr><tr><td>8G</td><td>6核</td><td>160G</td><td>5.0T&#x2F;月</td><td>5.0G</td><td>$87&#x2F;月</td><td><strong><a href="https://bwh89.net/aff.php?aff=67086&pid=90">链接</a></strong></td></tr><tr><td>16G</td><td>8核</td><td>320G</td><td>8.0T&#x2F;月</td><td>10G</td><td>$160&#x2F;月</td><td><strong><a href="https://bwh89.net/aff.php?aff=67086&pid=91">链接</a></strong></td></tr><tr><td>32G</td><td>10核</td><td>640G</td><td>10.0T&#x2F;月</td><td>10G</td><td>$290&#x2F;月</td><td><strong><a href="https://bwh89.net/aff.php?aff=67086&pid=92">链接</a></strong></td></tr><tr><td>64G</td><td>12核</td><td>1280G</td><td>12.0T&#x2F;月</td><td>10G</td><td>$550&#x2F;月</td><td><strong><a href="https://bwh89.net/aff.php?aff=67086&pid=93">链接</a></strong></td></tr></tbody></table><h2 id="6-日本-CN2-GIA-VPS-1-2Gbps超大带宽"><a href="#6-日本-CN2-GIA-VPS-1-2Gbps超大带宽" class="headerlink" title="6. 日本 CN2 GIA VPS-1.2Gbps超大带宽"></a>6. 日本 CN2 GIA VPS-1.2Gbps超大带宽</h2><p>这是瓦工最新的日本1.2G带宽的cn2 gia vps</p><p><strong>注意，</strong>以下为原价，请使用优惠码，年付低至7.6折！测评机器为标注红色文字款。</p><p>2022新年优惠码：<a href="https://bwh89.net/aff.php?aff=67086">BWHNY2022</a>（优惠12.22%，循环优惠）</p><p>日常6.58%优惠码：<a href="https://bwh89.net/aff.php?aff=67086">BWH3HYATVBJW</a></p><p>cn2 gia测试IP：185.199.241.107</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>硬盘</strong></th><th><strong>月流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>2G</td><td>2核</td><td>40G</td><td>500G</td><td>$89&#x2F;月</td><td><a href="https://bwh81.net/aff.php?aff=67086&pid=108"><strong>链接</strong></a></td></tr><tr><td>4G</td><td>4核</td><td>80G</td><td>1.0T</td><td>$155&#x2F;月</td><td><strong><a href="https://bwh81.net/aff.php?aff=67086&pid=109">链接</a></strong></td></tr><tr><td>8G</td><td>6核</td><td>160G</td><td>2.0T</td><td>$299&#x2F;月</td><td><strong><a href="https://bwh81.net/aff.php?aff=67086&pid=110">链接</a></strong></td></tr><tr><td>16G</td><td>8核</td><td>320G</td><td>4.0T</td><td>$589&#x2F;月</td><td><strong><a href="https://bwh81.net/aff.php?aff=67086&pid=111">链接</a></strong></td></tr></tbody></table><h2 id="7-香港机房VPS，1Gbps-cn2-gia"><a href="#7-香港机房VPS，1Gbps-cn2-gia" class="headerlink" title="7. 香港机房VPS，1Gbps cn2 gia"></a>7. 香港机房VPS，1Gbps cn2 gia</h2><p>适合预算高，对速度特别看重的用户，<em>到目前为止，这是市面上唯一一家提供“香港”1Gbps cn2 gia带宽的VPS！</em></p><p>2022新年优惠码：<a href="https://bwh89.net/aff.php?aff=67086">BWHNY2022</a>（优惠12.22%，循环优惠）</p><p>日常6.58%优惠码：<a href="https://bwh89.net/aff.php?aff=67086">BWH3HYATVBJW</a></p><p>测试IP：93.179.124.169</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>硬盘</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>2G</td><td>2核</td><td>40G</td><td>500G&#x2F;月</td><td>$90&#x2F;月</td><td><a href="https://bwh89.net/aff.php?aff=67086&pid=95"><strong>链接</strong></a></td></tr><tr><td>4G</td><td>4核</td><td>80G</td><td>1.0T&#x2F;月</td><td>$156&#x2F;月</td><td><strong><a href="https://bwh89.net/aff.php?aff=67086&pid=96">链接</a></strong></td></tr><tr><td>8G</td><td>6核</td><td>160G</td><td>2.0T&#x2F;月</td><td>$300&#x2F;月</td><td><strong><a href="https://bwh89.net/aff.php?aff=67086&pid=97">链接</a></strong></td></tr><tr><td>16G</td><td>8核</td><td>320G</td><td>4.0T&#x2F;月</td><td>$590&#x2F;月</td><td><strong><a href="https://bwh89.net/aff.php?aff=67086&pid=98">链接</a></strong></td></tr></tbody></table><p> 东海岸的新泽西和欧洲的荷兰就不做介绍了，对于国内来说速度很不好友好。如果选择也尽量选择一下4个机房。</p><h2 id="8-最后"><a href="#8-最后" class="headerlink" title="8. 最后"></a>8. 最后</h2><p>详细带宽：美国cn2 gia、日本软银，都是2.5Gbps~10Gbps带宽，香港 cn2 gia为1Gbps带宽，日本cn2 gia为1.2Gbps。</p><p>1）三网效果最好的是香港CN2 GIA或日本CN2 GIA，当然价格也是最贵的。</p><p>2）其次，电信可选美国cn2 gia，联通选日本软银，移动也建议美国cn2 gia。</p><p>3）再次选CN2 GT（AS4809，也就是官方标注的CN2网络）。公平地说，在 2021 年， ChinaNet 和 CN2 GT 网络的都有着显著的改进。</p><h2 id="相关推荐"><a href="#相关推荐" class="headerlink" title="相关推荐"></a>相关推荐</h2><p><a href="https://blog.laoda.de/archives/vps-choose">《VPS服务器选购不完全指南》</a></p><p><a href="https://blog.laoda.de/archives/bandwagonhost">《【高端VPS推荐】BandwagonHost(搬瓦工) - 美国&#x2F;日本&#x2F;香港 CN2 GIA 高速 VPS 推荐与最新优惠码（循环优惠 12.22%）》</a></p>]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 美国VPS </tag>
            
            <tag> 欧洲VPS </tag>
            
            <tag> 亚太VPS </tag>
            
            <tag> 特价VPS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【VPS推荐】Olink Cloud：美国/德国 CUPM/AS9929/AS10099 免备案建站高速稳定 VPS 推荐</title>
      <link href="/archives/vps-olinkcloud/"/>
      <url>/archives/vps-olinkcloud/</url>
      
        <content type="html"><![CDATA[<h2 id="Olink-Cloud-简介"><a href="#Olink-Cloud-简介" class="headerlink" title="Olink Cloud 简介"></a><a href="https://loll.cc/olink">Olink Cloud 简介</a></h2><p><a href="https://loll.cc/olink">Olink Cloud</a> 是老牌主机商 Jaz­zVPS（原 Di­a­Host­ing，成立于 2008 年）旗下的 VPS 品牌，于 2020 年在美国成立，老板是国人，技术出身。目前主营美国圣何塞 (San Jose) 和德国法兰克福 (Frank­furt) 两个地区的 KVM VPS 和独立服务器，三网回程 CU Pre­mium 线路(AS9929&#x2F;AS10099)。CU Pre­mium (简称 CUPM) 是联通的高端精品线路，主要服务于政企大客户，用户少、负载小、速度快，晚高峰时段稳定性高。国内访问速度表现相当不错，适合魔法科学爱国上网和免备案建站。支持支付宝、Pay­Pal、银联等付款方式。</p><h2 id="Olink-Cloud-官网"><a href="#Olink-Cloud-官网" class="headerlink" title="Olink Cloud 官网"></a><a href="https://loll.cc/olink">Olink Cloud 官网</a></h2><p>官网地址：<a href="https://loll.cc/olink">https://www.olink.cloud</a></p><p>官方测速：<a href="http://speedtest.olink.cloud(测速前先关闭代理或魔法上网)/">http://speedtest.olink.cloud（测速前先关闭代理或魔法上网）</a></p><h2 id="Olink-Cloud-最新优惠码"><a href="#Olink-Cloud-最新优惠码" class="headerlink" title="Olink Cloud 最新优惠码"></a><a href="https://www.olink.cloud/clients/announcements/95/2022%E5%B9%B43%E6%9C%88%E4%BB%BD%E4%BC%98%E6%83%A0%E7%A0%81OLINKOLINKDEDI7.html">Olink Cloud 最新优惠码</a></h2><h3 id="VPS产品优惠"><a href="#VPS产品优惠" class="headerlink" title="VPS产品优惠"></a><strong>VPS产品优惠</strong></h3><h4 id="优惠一："><a href="#优惠一：" class="headerlink" title="优惠一："></a>优惠一：</h4><p><strong>终身9折优惠码：</strong><code>OLINK</code></p><h4 id="优惠二："><a href="#优惠二：" class="headerlink" title="优惠二："></a>优惠二：</h4><p><strong>预计周期优惠：</strong>（可与优惠一叠加）</p><p><strong>半年付：</strong> 仅需支付5个月<br><strong>年付：</strong> 仅需支付9个月</p><hr><h3 id="独立服务器优惠"><a href="#独立服务器优惠" class="headerlink" title="独立服务器优惠"></a><strong>独立服务器优惠</strong></h3><h4 id="优惠一：-1"><a href="#优惠一：-1" class="headerlink" title="优惠一："></a><strong>优惠一：</strong></h4><p>终身7折优惠码：<code>OLINKDEDI7</code></p><h4 id="优惠二：-1"><a href="#优惠二：-1" class="headerlink" title="优惠二："></a>优惠二：</h4><p><strong>预计周期优惠：</strong>（可与优惠一叠加）</p><p><strong>半年付：</strong> 仅需支付5个月<br><strong>年付：</strong> 仅需支付10个月</p><blockquote><p> <strong>以下表格中的价格为常规价格，不要忘记使用优惠码。</strong></p></blockquote><h2 id="Olink-Cloud-美国圣何塞-AS9929-VPS"><a href="#Olink-Cloud-美国圣何塞-AS9929-VPS" class="headerlink" title="Olink Cloud 美国圣何塞 AS9929 VPS"></a><a href="https://loll.cc/olink">Olink Cloud</a> 美国圣何塞 AS9929 VPS</h2><p>AMD Ryzen 3700x&#x2F;3900&#x2F;5950x 高性能处理器，NVMe 超高速固态硬盘，1Gbps 带宽，1 个 IPv4 和 &#x2F;112 IPv6。</p><table><thead><tr><th align="center">内存</th><th align="center">CPU</th><th align="center">硬盘</th><th align="center">流量</th><th align="center">带宽</th><th align="center">价格</th><th align="center">购买链接</th></tr></thead><tbody><tr><td align="center">1G</td><td align="center">1核</td><td align="center">10G NVMe</td><td align="center">500G&#x2F;月</td><td align="center">1Gbps</td><td align="center">$7&#x2F;月</td><td align="center"><a href="https://www.olink.cloud/clients/aff.php?aff=411&gid=5">点击购买</a></td></tr><tr><td align="center">2G</td><td align="center">1核</td><td align="center">20G NVMe</td><td align="center">1T&#x2F;月</td><td align="center">1Gbps</td><td align="center">$12&#x2F;月</td><td align="center"><a href="https://www.olink.cloud/clients/aff.php?aff=411&gid=10">点击购买</a></td></tr><tr><td align="center">4G</td><td align="center">2核</td><td align="center">40G NVMe</td><td align="center">2T&#x2F;月</td><td align="center">1Gbps</td><td align="center">$22&#x2F;月</td><td align="center"><a href="https://www.olink.cloud/clients/aff.php?aff=411&gid=11">点击购买</a></td></tr><tr><td align="center">8G</td><td align="center">4核</td><td align="center">80G NVMe</td><td align="center">4T&#x2F;月</td><td align="center">1Gbps</td><td align="center">$42&#x2F;月</td><td align="center"><a href="https://www.olink.cloud/clients/aff.php?aff=411&gid=12">点击购买</a></td></tr></tbody></table><h2 id="Olink-Cloud-德国法兰克福-AS9929-VPS"><a href="#Olink-Cloud-德国法兰克福-AS9929-VPS" class="headerlink" title="Olink Cloud 德国法兰克福 AS9929 VPS"></a><a href="https://loll.cc/olink">Olink Cloud</a> 德国法兰克福 AS9929 VPS</h2><p>AMD Ryzen 3700x&#x2F;3900&#x2F;5950x 高性能处理器，NVMe 超高速固态硬盘，500Mbps 带宽，1 个 IPv4。</p><table><thead><tr><th align="center">内存</th><th align="center">CPU</th><th align="center">硬盘</th><th align="center">流量</th><th align="center">带宽</th><th align="center">价格</th><th align="center">购买链接</th></tr></thead><tbody><tr><td align="center">1G</td><td align="center">1核</td><td align="center">10G NVMe</td><td align="center">500G&#x2F;月</td><td align="center">500Mbps</td><td align="center">$5&#x2F;月</td><td align="center"><a href="https://www.olink.cloud/clients/aff.php?aff=411&pid=1">点击购买</a></td></tr><tr><td align="center">2G</td><td align="center">1核</td><td align="center">20G NVMe</td><td align="center">1T&#x2F;月</td><td align="center">500Mbps</td><td align="center">$10&#x2F;月</td><td align="center"><a href="https://www.olink.cloud/clients/aff.php?aff=411&pid=2">点击购买</a></td></tr><tr><td align="center">4G</td><td align="center">2核</td><td align="center">40G NVMe</td><td align="center">2T&#x2F;月</td><td align="center">500Mbps</td><td align="center">$20&#x2F;月</td><td align="center"><a href="https://www.olink.cloud/clients/aff.php?aff=411&pid=3">点击购买</a></td></tr><tr><td align="center">8G</td><td align="center">4核</td><td align="center">80G NVMe</td><td align="center">4T&#x2F;月</td><td align="center">500Mbps</td><td align="center">$40&#x2F;月</td><td align="center"><a href="https://www.olink.cloud/clients/aff.php?aff=411&pid=4">点击购买</a></td></tr></tbody></table><h2 id="Olink-Cloud-三网回程-AS9929-GRE-隧道"><a href="#Olink-Cloud-三网回程-AS9929-GRE-隧道" class="headerlink" title="Olink Cloud 三网回程 AS9929 GRE 隧道"></a><a href="https://loll.cc/olink">Olink Cloud</a> 三网回程 AS9929 GRE 隧道</h2><p>在你已有服务器和 <a href="https://loll.cc/olink">Olink Cloud</a> 的 AS9929 服务器间建立一个 GRE 隧道，然后让目的地址为中国大陆的数据包全部经过隧道传输，实现去程走服务器自己原来的线路，而回程修改成联通的 CUPM 线路以达到优化回程线路的效果。此项服务只需单独购买即可，适用于优化其它商家的一般线路 VPS 或独服。</p><ul><li>【<a href="https://www.olink.cloud/clients/aff.php?aff=411&gid=6">点击购买 美国圣何塞 GRE 隧道</a>】</li><li>【<a href="https://www.olink.cloud/clients/aff.php?aff=411&gid=6">点击购买 德国法兰克福 GRE 隧道</a>】</li></ul><p>支付订单后会自动分配 GRE 中转 IP，通过执行开通邮件中的 “两句命令” 即可完成配置，具体可以<a href="https://www.olink.cloud/clients/knowledgebase/2/OLink-Frankfurt-GRE-Pop.html">参见这里</a>。</p><h2 id="Olink-Cloud-美国圣何塞-AS9929-独服"><a href="#Olink-Cloud-美国圣何塞-AS9929-独服" class="headerlink" title="Olink Cloud 美国圣何塞 AS9929 独服"></a><a href="https://loll.cc/olink">Olink Cloud</a> 美国圣何塞 AS9929 独服</h2><table><thead><tr><th align="center">内存</th><th align="center">CPU</th><th align="center">硬盘</th><th align="center">流量</th><th align="center">带宽</th><th align="center">价格</th><th align="center">购买链接</th></tr></thead><tbody><tr><td align="center">16G</td><td align="center">E3-1220v2(4C&#x2F;4T)</td><td align="center">480G SSD</td><td align="center">无限</td><td align="center">30Mbps</td><td align="center">$119&#x2F;月</td><td align="center"><a href="https://www.olink.cloud/clients/aff.php?aff=411&gid=4">点击购买</a></td></tr><tr><td align="center">32G</td><td align="center">E5-2630Lv2(6C&#x2F;12T)</td><td align="center">1T SSD</td><td align="center">无限</td><td align="center">30Mbps</td><td align="center">$179&#x2F;月</td><td align="center"><a href="https://www.olink.cloud/clients/aff.php?aff=411&gid=4">点击购买</a></td></tr><tr><td align="center">32G</td><td align="center">2xE5-2630Lv2(12C&#x2F;24T)</td><td align="center">1T SSD</td><td align="center">无限</td><td align="center">30Mbps</td><td align="center">$239&#x2F;月</td><td align="center"><a href="https://www.olink.cloud/clients/aff.php?aff=411&gid=4">点击购买</a></td></tr></tbody></table><h2 id="Olink-Cloud-德国法兰克福-AS9929-独服"><a href="#Olink-Cloud-德国法兰克福-AS9929-独服" class="headerlink" title="Olink Cloud 德国法兰克福 AS9929 独服"></a><a href="https://loll.cc/olink">Olink Cloud</a> 德国法兰克福 AS9929 独服</h2><table><thead><tr><th align="center">内存</th><th align="center">CPU</th><th align="center">硬盘</th><th align="center">流量</th><th align="center">带宽</th><th align="center">价格</th><th align="center">购买链接</th></tr></thead><tbody><tr><td align="center">32G</td><td align="center">E3-1240v3(4C&#x2F;8T)</td><td align="center">2 x 2T or 2 x 240G SSD</td><td align="center">无限</td><td align="center">30Mbps</td><td align="center">$159&#x2F;月</td><td align="center"><a href="https://www.olink.cloud/clients/aff.php?aff=411&gid=2">点击购买</a></td></tr><tr><td align="center">64G</td><td align="center">E3-1270v3(4C&#x2F;8T)</td><td align="center">2 x 4T or 2 x 480G SSD</td><td align="center">无限</td><td align="center">30Mbps</td><td align="center">$199&#x2F;月</td><td align="center"><a href="https://www.olink.cloud/clients/aff.php?aff=411&gid=2">点击购买</a></td></tr><tr><td align="center">128G</td><td align="center">2xE5-2650(16C&#x2F;32T)</td><td align="center">2 x 8T or 2 x 960G SSD</td><td align="center">无限</td><td align="center">30Mbps</td><td align="center">$299&#x2F;月</td><td align="center"><a href="https://www.olink.cloud/clients/aff.php?aff=411&gid=2">点击购买</a></td></tr></tbody></table><h2 id="相关推荐"><a href="#相关推荐" class="headerlink" title="相关推荐"></a>相关推荐</h2><p><a href="https://blog.laoda.de/archives/vps-choose">《VPS服务器选购不完全指南》</a></p><p><a href="https://blog.laoda.de/archives/olink">《【VPS测评】Olink 法兰克福三网9929测评》</a></p>]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 美国VPS </tag>
            
            <tag> 欧洲VPS </tag>
            
            <tag> 9929 </tag>
            
            <tag> 德国VPS </tag>
            
            <tag> 独立服务器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩儿的Docker项目】目前最好用的免费开源同步工具——Syncthing</title>
      <link href="/archives/docker-compose-install-syncthing/"/>
      <url>/archives/docker-compose-install-syncthing/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.laoda.de/i/2022/03/28/sawqdb_7.webp" alt="Syncthing"></p><h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1. 介绍"></a>1. 介绍</h2><p>之前和大家聊过——<a href="https://blog.laoda.de/archives/backup-server-series">【服务器备份系列】聊一聊服务器备份那些事儿｜VPS备份总览</a></p><p>这期和大家介绍一个GitHub上开源免费的多平台文件同步的项目——<a href="https://github.com/syncthing/syncthing">Syncthing</a></p><p><img src="https://img.laoda.de/i/2022/03/28/sqrwiz_7.webp" alt="image-20220328173801492"></p><p>目前已经有<code>43.7K</code>的星星。</p><p>支持Linux、Windows、macOS等平台的使用。</p><p><img src="https://img.laoda.de/i/2022/03/28/sgom88_7.webp" alt="image-20220328172105248"></p><h3 id="1-1-特点"><a href="#1-1-特点" class="headerlink" title="1.1 特点"></a>1.1 特点</h3><p>Syncthing是一个连续的文件同步程序。它可以在两台或更多的计算机之间同步文件。</p><p>咕咕用了几天，总结了下面几个特点：</p><ul><li>中文友好（支持中文界面）</li><li>设置简单，易上手</li><li>支持Linux、Windows、macOS（NAS也可以方便部署）</li><li>同步效率不错</li><li>支持版本控制（可以恢复到指定的版本）</li><li>Docker部署方便</li><li>支持同步加密，保护数据安全（不过咕咕还不知道如果解密，后续可以阅读一下文档，有知道的小伙伴也欢迎留言区留言和大家分享一下）</li><li>支持一对多、多对一、一对一</li><li>使用的人比较多，发现问题可以比较容易搜索到解决方案。（毕竟GitHub上都有4万多的star &#x3D; &#x3D;）</li></ul><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p>GitHub项目地址：<a href="https://github.com/syncthing/syncthing">https://github.com/syncthing/syncthing</a></p><p>文档地址：<a href="https://docs.syncthing.net/intro/getting-started.html">https://docs.syncthing.net/intro/getting-started.html</a></p><p>客户端下载：<a href="https://github.com/syncthing/syncthing/releases">https://github.com/syncthing/syncthing/releases</a></p><p>本文用的Docker镜像：<a href="https://hub.docker.com/r/linuxserver/syncthing">https://hub.docker.com/r/linuxserver/syncthing</a></p><h3 id="2-1-英文界面"><a href="#2-1-英文界面" class="headerlink" title="2.1 英文界面"></a>2.1 英文界面</h3><p><img src="https://img.laoda.de/i/2022/03/28/sg90g3_7.webp" alt="image-20220328172032433"></p><h3 id="2-2-中文界面"><a href="#2-2-中文界面" class="headerlink" title="2.2 中文界面"></a>2.2 中文界面</h3><p><img src="https://img.laoda.de/i/2022/03/28/sjd2ft_7.webp" alt="image-20220328172551025"></p><h3 id="2-3-设置好登陆密码"><a href="#2-3-设置好登陆密码" class="headerlink" title="2.3 设置好登陆密码"></a>2.3 设置好登陆密码</h3><p><img src="https://img.laoda.de/i/2022/03/28/sh9wb5_7.webp" alt="image-20220328172204147"></p><h3 id="2-4-设备唯一标识"><a href="#2-4-设备唯一标识" class="headerlink" title="2.4 设备唯一标识"></a>2.4 设备唯一标识</h3><p><img src="https://img.laoda.de/i/2022/03/28/shl9bd_7.webp" alt="image-20220328172258185"></p><h3 id="2-5-添加共享文件夹"><a href="#2-5-添加共享文件夹" class="headerlink" title="2.5 添加共享文件夹"></a>2.5 添加共享文件夹</h3><p><img src="https://img.laoda.de/i/2022/03/28/sirrqq_7.webp" alt="image-20220328172454651"></p><p><img src="https://img.laoda.de/i/2022/03/28/siih3y_7.webp" alt="image-20220328172412493"></p><h3 id="2-6-版本控制"><a href="#2-6-版本控制" class="headerlink" title="2.6 版本控制"></a>2.6 版本控制</h3><p><img src="https://img.laoda.de/i/2022/03/28/si4k3v_7.webp" alt="image-20220328172334356"></p><h2 id="3-搭建环境"><a href="#3-搭建环境" class="headerlink" title="3. 搭建环境"></a>3. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器24元&#x2F;月VPS一台</del>展示用的是MacBook Air M1，本期搭建用的是<a href="https://loll.cc/hz">Hetzner</a>的服务器（<a href="https://loll.cc/hz">Hetzner注册免费得25欧试用金有效期一个月</a>），按小时计费，可随时销毁（最好是选非大陆的服务器）（也可以选腾讯云香港轻量：<a href="https://loll.cc/tx">腾讯轻量购买链接</a>）</li><li>系统：Debian 10或者Ubuntu20.04都可以（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本</a> 非必需DD用原来的系统也OK）</li><li>域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>安装好Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需】提前安装好宝塔面板海外版本aapanel，并安装好Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需】安装好Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><h2 id="4-搭建视频"><a href="#4-搭建视频" class="headerlink" title="4. 搭建视频"></a>4. 搭建视频</h2><p>YouTube：<a href="https://youtu.be/DUC0wGQMnJs">https://youtu.be/DUC0wGQMnJs</a></p><p>哔哩哔哩【高清版本可以点击去吐槽到B站观看】：<joe-bilibili bvid="BV1Za411i7rk"></joe-bilibili></p><h2 id="5-搭建方式"><a href="#5-搭建方式" class="headerlink" title="5. 搭建方式"></a>5. 搭建方式</h2><p>服务器初始设置，参考</p><p><a href="https://blog.laoda.de/archives/vps-script"><strong>新买了一台服务器“必须”要做的6件小事</strong></a></p><p><a href="https://blog.laoda.de/archives/hello-docker">【Docker系列】不用宝塔面板，小白一样可以玩转VPS服务器！</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt update -y  <span class="comment"># 升级packages</span></span><br><span class="line"></span><br><span class="line">apt install wget curl sudo vim git  <span class="comment"># Debian系统比较干净，安装常用的软件</span></span><br></pre></td></tr></table></figure><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/syncthing</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/syncthing</span><br><span class="line"></span><br><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><p>本文用的Docker镜像：<a href="https://hub.docker.com/r/linuxserver/syncthing">https://hub.docker.com/r/linuxserver/syncthing</a></p><p>镜像支持多种架构，如x86-64、arm64和armhf。</p><table><thead><tr><th>架构（Architecture）</th><th>标签（Tag）</th></tr></thead><tbody><tr><td>x86-64</td><td>amd64-latest</td></tr><tr><td>arm64</td><td>arm64v8-latest</td></tr><tr><td>armhf</td><td>arm32v7-latest</td></tr></tbody></table><p><code>docker-compose.yml</code>填入以下内容：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">version: <span class="string">&quot;2.1&quot;</span></span><br><span class="line">services:</span><br><span class="line">  syncthing:</span><br><span class="line">    image: lscr.io/linuxserver/syncthing</span><br><span class="line">    container_name: syncthing</span><br><span class="line">    hostname: syncthing <span class="comment">#optional</span></span><br><span class="line">    environment:</span><br><span class="line">      - PUID=1000</span><br><span class="line">      - PGID=1000</span><br><span class="line">      - TZ=Asia/Shanghai</span><br><span class="line">    volumes:</span><br><span class="line">      - /root/data/docker_data/syncthing/config:/config</span><br><span class="line">      - /root/data/docker_data/syncthing/Documents:/Documents</span><br><span class="line">      - /root/data/docker_data/syncthing/Media:/Media</span><br><span class="line">    ports:</span><br><span class="line">      - 8384:8384</span><br><span class="line">      - 22000:22000/tcp</span><br><span class="line">      - 22000:22000/udp</span><br><span class="line">      - 21027:21027/udp</span><br><span class="line">    restart: unless-stopped</span><br></pre></td></tr></table></figure><p>PUID和PGID可以通过命令行输入<code>id user</code>来查看。</p><p>如：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">id</span> root</span><br><span class="line"><span class="built_in">id</span> www</span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2022/03/28/sv1koh_7.webp" alt="image-20220328174517556"></p><p>一般的话，默认就可以。</p><p>没问题的话，<code>ctrl+x</code>退出，按<code>y</code>保存，<code>enter</code>确认。</p><p>然后运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>访问：<code>http:服务ip:8384</code> 即可。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的IP。</p><p>2、遇到访问不了的情况，<strong>请在宝塔面板的防火墙和服务商的后台防火墙里打开对应端口</strong>。</p></blockquote><h2 id="6-反向代理"><a href="#6-反向代理" class="headerlink" title="6. 反向代理"></a>6. 反向代理</h2><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p>之后，登陆Nginx Proxy Manager（不会的看这个：<strong>安装Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称NPM）会用到<code>80</code>、<code>443</code>端口，所以本机不能占用（比如原来就有Nginx）</p></blockquote><p>直接丢几张图：</p><p><img src="https://img.laoda.de/i/2022/03/20/wenk4d.webp"></p><p><img src="https://img.laoda.de/i/2022/03/20/x2w60n.webp"></p><img src="https://img.laoda.de/i/2022/04/10/tuxmuz_7.webp" alt="image-20220410180545430" style="zoom:50%;" /><blockquote><p> 1、注意<code>https</code>;</p><p> 2、填写对应的<code>域名</code>和<code>端口</code>，按文章来的话，应该是<code>8384</code></p></blockquote><p><img src="https://img.laoda.de/i/2022/03/20/wdukw3.webp"></p><img src="https://img.laoda.de/i/2022/04/10/tvh3mt_7.webp" alt="image-20220410180636659" style="zoom:50%;" /><p>然后就可以用域名来访问了。</p><blockquote><p><strong>注意：</strong> <del>咕咕自己测试的时候，貌似反代之后，偶尔会显示链接超时，大家也可以直接用<code>IP</code>+<code>端口</code>的方式来访问，设置好登陆的用户名和密码。</del></p></blockquote><h2 id="7-使用教程"><a href="#7-使用教程" class="headerlink" title="7. 使用教程"></a>7. 使用教程</h2><p>文档地址：<a href="https://docs.syncthing.net/intro/getting-started.html">https://docs.syncthing.net/intro/getting-started.html</a></p><h2 id="8-结尾"><a href="#8-结尾" class="headerlink" title="8. 结尾"></a>8. 结尾</h2><p>祝大家用得开心，有问题可以去GitHub提<a href="https://github.com/syncthing/syncthing">Issues</a>，也可以在评论区互相交流探讨。</p><h2 id="9-参考资料"><a href="#9-参考资料" class="headerlink" title="9. 参考资料"></a>9. 参考资料</h2><p>GitHub项目地址：<a href="https://github.com/syncthing/syncthing">https://github.com/syncthing/syncthing</a></p><p>文档地址：<a href="https://docs.syncthing.net/intro/getting-started.html">https://docs.syncthing.net/intro/getting-started.html</a></p><p>本文用的Docker镜像：<a href="https://hub.docker.com/r/linuxserver/syncthing">https://hub.docker.com/r/linuxserver/syncthing</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker部署 </tag>
            
            <tag> DockerCompose </tag>
            
            <tag> 服务器备份 </tag>
            
            <tag> 同步工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩儿的Docker项目】Notion的替代品，自建一个超高自由度的个人知识库——Trilium</title>
      <link href="/archives/docker-compose-install-trilium/"/>
      <url>/archives/docker-compose-install-trilium/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.laoda.de/i/2022/03/26/p7hon4_7.webp" alt="img"></p><h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1. 介绍"></a>1. 介绍</h2><p>之前和大家介绍过笔记软件——<a href="https://blog.laoda.de/archives/docker-install-wiz.html">【好玩的Docker项目】10分钟搭建你专属的笔记本——功能更全的为知笔记</a>，不少小伙伴都搭建了，我自己也短暂使用过一段时间，后来就没怎么用了。</p><p>搭建过的小伙伴也反馈，为知笔记笔记吃内存，而且单个笔记的镜像也比较大。</p><img src="https://img.laoda.de/i/2022/03/26/ngwpkk_7.webp" alt="image-20220326141908513" style="zoom:50%;" /><p>对于机器配置不高的小伙伴可能比较吃力。</p><p>其实我自己不太记笔记，平时也就是用用Notion简单记录一点东西，正好前段时间看到一个和Notion类似的一个软件，叫做<strong>Trilium</strong>。</p><p>看到推荐使用的人也挺多的，而且也可以用Docker轻松部署，自己弄了一个，官方是英文版本的，国内有小伙伴贴心地做了汉化版本，我自己部署了一个，用了几天，感觉还不错，今天就分享给大家。</p><p><img src="https://img.laoda.de/i/2022/03/26/p7o07d_7.webp" alt="img"></p><h3 id="1-1-用户评价"><a href="#1-1-用户评价" class="headerlink" title="1.1 用户评价"></a>1.1 用户评价</h3><blockquote><p>作为一名程序员，笔者先后使用过不同的笔记软件，而且经常是几个月就更换一款。更换的原因一般都是在使用过后，逐渐觉得有些功能无法满足我的需求。遂重新寻找更好的替代方案。</p><p>在经历过Evernote、Simplenote、Leanote、有道云笔记、Joplin、Standard Notes、Notion等笔记软件之后，我对笔记软件的需求逐渐清晰。我希望笔记软件对开发者友好，必须有Markdown编辑器和富文本编辑器，界面简洁美观，跨平台，版本回滚及备份，高效可靠云同步，传输和存储的加密功能。而Trilium Notes完全满足笔者上述的需求。</p><p>来自：<a href="https://hankmew.com/posts/trilium-notes/">https://hankmew.com/posts/trilium-notes/</a></p></blockquote><h3 id="1-2-特点"><a href="#1-2-特点" class="headerlink" title="1.2 特点"></a>1.2 特点</h3><ul><li>笔记可以排列成任意深的树。单个笔记可以放在树中的多个位置（请参阅<a href="https://github.com/zadam/trilium/wiki/Cloning-notes">克隆</a>）</li><li>丰富的所见即所得笔记编辑功能，包括带有markdown<a href="https://github.com/zadam/trilium/wiki/Text-notes#autoformat">自动格式化功能的</a>表格，图像和<a href="https://github.com/zadam/trilium/wiki/Text-notes#math-support">数学</a></li><li>支持编辑<a href="https://github.com/zadam/trilium/wiki/Code-notes">使用源代码的笔记</a>，包括语法高亮显示</li><li>笔记之间快速<a href="https://github.com/zadam/trilium/wiki/Note-navigation">导航</a>，全文搜索和<a href="https://github.com/zadam/trilium/wiki/Note-hoisting">笔记挂起</a></li><li>无缝<a href="https://github.com/zadam/trilium/wiki/Note-revisions">笔记版本控制</a></li><li>笔记<a href="https://github.com/zadam/trilium/wiki/Attributes">属性</a>可用于笔记组织，查询和高级<a href="https://github.com/zadam/trilium/wiki/Scripts">脚本编写</a></li><li><a href="https://github.com/zadam/trilium/wiki/Synchronization">同步</a>与自托管同步服务器</li><li>具有按笔记粒度的强大的<a href="https://github.com/zadam/trilium/wiki/Protected-notes">笔记加密</a></li><li><a href="https://github.com/zadam/trilium/wiki/Relation-map">关系图</a>和<a href="https://github.com/zadam/trilium/wiki/Link-map">链接图</a>，用于可视化笔记及其关系</li><li><a href="https://github.com/zadam/trilium/wiki/Scripts">脚本</a>-请参阅<a href="https://github.com/zadam/trilium/wiki/Advanced-showcases">高级展示</a></li><li>可用性和性能均能很好地扩展至超过10万个笔记</li><li>针对智能手机和平板电脑进行触摸优化的<a href="https://github.com/zadam/trilium/wiki/Mobile-frontend">移动前端</a></li><li><a href="https://github.com/zadam/trilium/wiki/Themes">夜间主题</a></li><li><a href="https://github.com/zadam/trilium/wiki/Evernote-import">Evernote</a>和<a href="https://github.com/zadam/trilium/wiki/Markdown">Markdown导入导出</a></li><li><a href="https://github.com/zadam/trilium/wiki/Web-clipper">Web Clipper</a>可轻松保存Web内容</li></ul><h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p>GitHub原项目地址：<a href="https://github.com/zadam/trilium">https://github.com/zadam/trilium</a></p><p>英文版本客户端下载地址：<a href="https://github.com/zadam/trilium/releases">https://github.com/zadam/trilium/releases</a></p><p>GitHub项目中文版本地址：<a href="https://github.com/Nriver/trilium-translation">https://github.com/Nriver/trilium-translation</a></p><p>中文版本客户端下载地址：<a href="https://github.com/Nriver/trilium-translation/releases">https://github.com/Nriver/trilium-translation/releases</a></p><p>项目截图地址：<a href="https://github.com/zadam/trilium/wiki/Screenshot-tour">https://github.com/zadam/trilium/wiki/Screenshot-tour</a></p><p>中文文档地址：<a href="https://github.com/zadam/trilium/blob/master/README-ZH_CN.md">https://github.com/zadam/trilium/blob/master/README-ZH_CN.md</a></p><h2 id="3-搭建环境"><a href="#3-搭建环境" class="headerlink" title="3. 搭建环境"></a>3. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器24元&#x2F;月VPS一台</del>展示用的服务器是<a href="https://netcup-sonderangebote.de/">Netcup</a>特价款，本期搭建用的是<a href="https://loll.cc/vultr">Vultr</a>的服务器，按小时计费，可随时销毁（最好是选非大陆的服务器）（<a href="https://loll.cc/tx">腾讯轻量购买链接</a>）</li><li>系统：Debian 10（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本</a> 非必需DD用原来的系统也OK）</li><li>域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>安装好Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需】安装好宝塔面板海外版本aapanel，并安装好Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需不过<strong>本教程使用</strong>】安装好Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><h2 id="4-搭建视频"><a href="#4-搭建视频" class="headerlink" title="4. 搭建视频"></a>4. 搭建视频</h2><p>YouTube：待补充</p><p>哔哩哔哩：待补充</p><h2 id="5-搭建方式"><a href="#5-搭建方式" class="headerlink" title="5. 搭建方式"></a>5. 搭建方式</h2><p>服务器初始设置，参考</p><p><a href="https://blog.laoda.de/archives/vps-script"><strong>新买了一台服务器“必须”要做的6件小事</strong></a></p><p><a href="https://blog.laoda.de/archives/hello-docker">【Docker系列】不用宝塔面板，小白一样可以玩转VPS服务器！</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt update -y  <span class="comment"># 升级packages</span></span><br><span class="line"></span><br><span class="line">apt install wget curl sudo vim git  <span class="comment"># Debian系统比较干净，安装常用的软件</span></span><br></pre></td></tr></table></figure><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/trilium</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/trilium</span><br><span class="line"></span><br><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><p><code>docker-compose.yml</code>填入以下内容：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&#x27;3&#x27;</span></span><br><span class="line">services:</span><br><span class="line">  trilium-cn:</span><br><span class="line">    image: nriver/trilium-cn</span><br><span class="line">    restart: always</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">&quot;8080:8080&quot;</span></span><br><span class="line">    volumes:</span><br><span class="line">      <span class="comment"># 把同文件夹下的 trilium-data 目录映射到容器内</span></span><br><span class="line">      - ./trilium-data:/root/trilium-data</span><br><span class="line">    environment:</span><br><span class="line">      <span class="comment"># 环境变量表示容器内笔记数据的存储路径</span></span><br><span class="line">      - TRILIUM_DATA_DIR=/root/trilium-data</span><br></pre></td></tr></table></figure><p>没问题的话，<code>ctrl+x</code>退出，按<code>y</code>保存，<code>enter</code>确认。</p><p>然后运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p><strong>附英文原版安装（与上方二选一即可）：</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -itd --restart=always -p 8080:8080 -v ~/trilium-data:/home/node/trilium-data zadam/trilium:[VERSION]</span><br></pre></td></tr></table></figure><p>访问：<code>http:服务ip:8080</code> 即可。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的IP。</p><p>2、遇到访问不了的情况，请在宝塔面板的防火墙和服务商的后台防火墙里打开对应端口。</p></blockquote><h2 id="6-反向代理"><a href="#6-反向代理" class="headerlink" title="6. 反向代理"></a>6. 反向代理</h2><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p>之后，登陆Nginx Proxy Manager（不会的看这个：<strong>安装Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称NPM）会用到<code>80</code>、<code>443</code>端口，所以本机不能占用（比如原来就有Nginx）</p></blockquote><p>直接丢几张图：</p><p><img src="https://img.laoda.de/i/2022/03/20/wenk4d.webp"></p><p><img src="https://img.laoda.de/i/2022/03/20/x2w60n.webp"></p><p><img src="https://img.laoda.de/i/2022/03/21/shel01_5.webp"></p><blockquote><p> 注意填写对应的<code>域名</code>和<code>端口</code>，按文章来的话，应该是<code>8080</code></p></blockquote><p><img src="https://img.laoda.de/i/2022/03/20/wdukw3.webp"></p><p><img src="https://img.laoda.de/i/2022/03/21/shhsl4_5.webp"></p><p>然后就可以用域名来访问了。</p><h2 id="7-使用教程"><a href="#7-使用教程" class="headerlink" title="7. 使用教程"></a>7. 使用教程</h2><h3 id="7-1-Trilium的使用教程"><a href="#7-1-Trilium的使用教程" class="headerlink" title="7.1 Trilium的使用教程"></a>7.1 Trilium的使用教程</h3><p>来自少数派，感谢作者<a href="https://sspai.com/u/idelem/updates">@idelem</a>的分享：</p><p><a href="https://sspai.com/post/59739">Trilium：超高自由度的个人知识库（基础篇）</a></p><p><a href="https://sspai.com/post/59792">Trilium：超高自由度的个人知识库（进阶篇）</a></p><p><a href="https://sspai.com/post/61662">Trilium：超高自由度的个人知识库（高级篇）</a></p><h3 id="7-2-界面自定义修改"><a href="#7-2-界面自定义修改" class="headerlink" title="7.2 界面自定义修改"></a>7.2 界面自定义修改</h3><p><a href="https://github.com/zadam/trilium/wiki/Themes">https://github.com/zadam/trilium/wiki/Themes</a></p><h3 id="7-3-桌面端下载"><a href="#7-3-桌面端下载" class="headerlink" title="7.3 桌面端下载"></a>7.3 桌面端下载</h3><p>英文版本客户端下载地址：<a href="https://github.com/zadam/trilium/releases">https://github.com/zadam/trilium/releases</a></p><p>中文版本客户端下载地址：<a href="https://github.com/Nriver/trilium-translation/releases">https://github.com/Nriver/trilium-translation/releases</a></p><h3 id="7-4-常见问题汇总"><a href="#7-4-常见问题汇总" class="headerlink" title="7.4 常见问题汇总"></a>7.4 常见问题汇总</h3><p><a href="https://github.com/Nriver/trilium-translation/blob/main/README_CN.md#%E7%AC%94%E8%AE%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9C%A8%E5%93%AA">https://github.com/Nriver/trilium-translation/blob/main/README_CN.md#%E7%AC%94%E8%AE%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9C%A8%E5%93%AA</a></p><h2 id="8-结尾"><a href="#8-结尾" class="headerlink" title="8. 结尾"></a>8. 结尾</h2><p>祝大家用得开心，有问题可以去GitHub提<a href="https://github.com/Nriver/trilium-translation">Issues</a>，也可以在评论区互相交流探讨。</p><h2 id="9-参考资料"><a href="#9-参考资料" class="headerlink" title="9. 参考资料"></a>9. 参考资料</h2><p><a href="https://www.v2ex.com/t/788222">https://www.v2ex.com/t/788222</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记软件 </tag>
            
            <tag> 个人知识库 </tag>
            
            <tag> Trilium </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【服务器备份系列】聊一聊服务器备份那些事儿｜VPS备份总览</title>
      <link href="/archives/backup-server-series/"/>
      <url>/archives/backup-server-series/</url>
      
        <content type="html"><![CDATA[<h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><p>YouTube：<a href="https://youtu.be/Y6Gx9jTvo9A">https://youtu.be/Y6Gx9jTvo9A</a></p><p>哔哩哔哩【完整版本可以点击“去吐槽”到B站观看】：<a href="https://www.bilibili.com/BV14T4y1i7RG">https://www.bilibili.com/BV14T4y1i7RG</a></p><h2 id="PDF预览"><a href="#PDF预览" class="headerlink" title="PDF预览"></a>PDF预览</h2><p><joe-pdf src="https://blog.laoda.de/upload/2022/03/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%A4%87%E4%BB%BD%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF-1648180184162.pdf" width="100%" height="500px"></joe-pdf></p><h2 id="上面提到的服务器"><a href="#上面提到的服务器" class="headerlink" title="上面提到的服务器"></a>上面提到的服务器</h2><h3 id="快速跳转链接"><a href="#快速跳转链接" class="headerlink" title="快速跳转链接"></a>快速跳转链接</h3><ul><li><p><a href="https://bwg.laoda.de/"><strong>点击跳转 搬瓦工</strong></a>（“贵族”VPS，优势是线路和自动备份、自动快照）</p></li><li><p><a href="https://loll.cc/tx"><strong>点击跳转腾讯云</strong></a>（国内大厂,优势是有免费快照功能，客服响应及时）</p></li><li><p><a href="https://loll.cc/ali"><strong>点击跳转阿里云</strong></a>（国内大厂,优势是有免费快照功能）</p></li><li><p><a href="https://loll.cc/netcup"><strong>点击跳转Netcup</strong></a>（德国商家，特色是会发律师函，活动期间的机器性价比极高）</p></li><li><p><a href="https://loll.cc/cc"><strong>点击跳转Cloudcone</strong></a>（老板是阿三，机器特色是便宜，网站做的不错）</p></li><li><p><a href="https://loll.cc/vultr"><strong>点击跳转Vultr</strong></a>（大厂，特色是机房遍布全球，机器性能好，非大陆用户非常好用）</p></li><li><p><a href="https://loll.cc/hz"><strong>点击跳转 Hetzner</strong></a> (欧洲阿里云，注册会收到20欧元的试用金，有效期一个月)</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPS </tag>
            
            <tag> 自动备份 </tag>
            
            <tag> 云服务器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩的Docker项目】淘汰Nextcloud，一行命令搭建功能强大的个人网盘——FileRun</title>
      <link href="/archives/docker-compose-install-filerun/"/>
      <url>/archives/docker-compose-install-filerun/</url>
      
        <content type="html"><![CDATA[<h2 id="5月22日更新"><a href="#5月22日更新" class="headerlink" title="5月22日更新"></a>5月22日更新</h2><p>知名php闭源网盘程序 filerun 宣布取消免费版本。</p><p>新搭建的小伙伴可以尝试用<a href="https://blog.laoda.de/archives/docker-compose-install-nextcloud">Nextcloud</a>做平替。</p><p>旧版装了的，不改域名可以继续用。</p><hr><p><img src="https://img.laoda.de/i/2022/03/21/oynzpu_5.webp" alt="image-20220321150939510"></p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>前段时间因为把原来Contabo的服务器换成了Netcup，进行了一次服务器搬家的工作。</p><p>其他网站搬迁都比较顺利，Nextcloud当时考虑到用Docker搭建出现有些问题不好解决，用的传统方式搭建的，搬起来非常费劲（需要各种配置Nginx和PHP，还要解决很多后台报错的问题）。</p><p>然后我总结好排坑指南之后，原本打算出一期视频来讲一讲这个目前可能是全球用的人数最多的自建网盘（<a href="https://blog.laoda.de/archives/nextcloud-aapanel-install">【好玩的项目】可能是史上最全的基于宝塔面板（海外版aapanel）的Nextcloud网盘搭建教程！</a>），自己测试时又遇到了“服务器内部错误”的问题，故而搁置。（后来有小伙伴在文章留言区告知我方法，还没来得及尝试）</p><p><strong>所以，这期来教大家搭建一个功能同样强大，但是只要用Docker，一行命令就能搭建的网盘——FileRun。</strong></p><p>以后就算要搬家也能够非常轻松完成站点迁移！</p><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><ul><li>功能多：支持在线查看图片（支持3D模型，查看图片的速度比较快）播放视频，文档在线编辑，多任务多分工</li><li>不会改变图片的文件名和目录结构（你再也不用担心原来精心分类好的相片被打乱了）</li><li>支持WebDAV</li><li>支持ZIP、TAR、GZ等压缩文件在线解压</li><li>多平台支持：支持PC（借助Nextcloud）、安卓端（借助Nextcloud）、IOS端（借助第三方WebDAV客户端）</li><li>界面简洁</li><li>内存占用不算高</li><li>部署时兼容性好，支持Docker部署</li></ul><blockquote><p>它不像Nextcloud那样所有图片都产生各种尺寸的略缩图。默认情况下，只有当图片大于8MB的时候，FileRun才会生成略缩图，否则就直接调用原文件。这大大加快了查看图片的速度，也减少了略缩图占用磁盘空间。</p></blockquote><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><ul><li>中文语言包貌似下架了</li><li>适合个人使用，免费版功能有所阉割（不过基本功能都有，个人足够用了），有用户数量限制（5个）</li><li>网盘程序不支持匿名访问（不能当作下载站给人下载，只能通过分享链接）</li><li>更新没有Nextcloud频繁</li></ul><h2 id="1-项目展示"><a href="#1-项目展示" class="headerlink" title="1. 项目展示"></a>1. 项目展示</h2><p>官网地址：<a href="https://filerun.com/">https://filerun.com/</a></p><p>官方文档地址：<a href="https://docs.filerun.com/filerun_install_guide">https://docs.filerun.com/filerun_install_guide</a></p><p>GitHub项目地址：<a href="https://github.com/filerun/docker">https://github.com/filerun/docker</a></p><p>DockerHub地址：<a href="https://hub.docker.com/r/filerun/filerun">https://hub.docker.com/r/filerun/filerun</a></p><p>官方演示：<a href="https://demo.filerun.com/">https://demo.filerun.com/</a></p><p>用户名&#x2F;密码： admin&#x2F;admin（download&#x2F;download）（upload&#x2F;upload）</p><h3 id="1-1-图片展示"><a href="#1-1-图片展示" class="headerlink" title="1.1 图片展示"></a>1.1 图片展示</h3><h4 id="1-1-1-一般图片展示"><a href="#1-1-1-一般图片展示" class="headerlink" title="1.1.1 一般图片展示"></a>1.1.1 一般图片展示</h4><p><img src="https://img.laoda.de/i/2022/03/21/nwju3q_5.webp" alt="image-20220321144532470"></p><h4 id="1-1-2-3D模型展示"><a href="#1-1-2-3D模型展示" class="headerlink" title="1.1.2 3D模型展示"></a>1.1.2 3D模型展示</h4><p><img src="https://img.laoda.de/i/2022/03/21/nsvjf5_5.webp" alt="image-20220321143920503"></p><h4 id="1-1-3-DCM医学图像"><a href="#1-1-3-DCM医学图像" class="headerlink" title="1.1.3 DCM医学图像"></a>1.1.3 DCM医学图像</h4><p><img src="https://img.laoda.de/i/2022/03/21/nvr6q6_5.webp" alt="image-20220321144402928"></p><h3 id="1-2-音视频展示"><a href="#1-2-音视频展示" class="headerlink" title="1.2 音视频展示"></a>1.2 音视频展示</h3><h4 id="1-2-1-音频"><a href="#1-2-1-音频" class="headerlink" title="1.2.1 音频"></a>1.2.1 音频</h4><p><img src="https://img.laoda.de/i/2022/03/21/ntoi1o_5.webp" alt="image-20220321144055778"></p><h4 id="1-2-2-视频"><a href="#1-2-2-视频" class="headerlink" title="1.2.2 视频"></a>1.2.2 视频</h4><p><img src="https://img.laoda.de/i/2022/03/21/nu4hdn_5.webp" alt="image-20220321144129549"></p><h3 id="1-3-电子书"><a href="#1-3-电子书" class="headerlink" title="1.3 电子书"></a>1.3 电子书</h3><p><img src="https://img.laoda.de/i/2022/03/21/nw12pk_5.webp" alt="image-20220321144448908"></p><h3 id="1-4-GPS数据"><a href="#1-4-GPS数据" class="headerlink" title="1.4 GPS数据"></a>1.4 GPS数据</h3><p><img src="https://img.laoda.de/i/2022/03/21/nx0bcz_5.webp" alt="image-20220321144613432"></p><h3 id="1-5-办公软件（XLS-DOC-ODT-PDF）"><a href="#1-5-办公软件（XLS-DOC-ODT-PDF）" class="headerlink" title="1.5 办公软件（XLS&#x2F;DOC&#x2F;ODT&#x2F;PDF）"></a>1.5 办公软件（XLS&#x2F;DOC&#x2F;ODT&#x2F;PDF）</h3><p><img src="https://img.laoda.de/i/2022/03/21/ny6bys_5.webp" alt="image-20220321144810181"></p><p><img src="https://img.laoda.de/i/2022/03/21/nyxsxp_5.webp" alt="image-20220321144938725"></p><p><strong>更多见官方演示Demo</strong></p><blockquote><p><strong>官方演示：</strong><a href="https://demo.filerun.com/">https://demo.filerun.com/</a></p><p>用户名&#x2F;密码： admin&#x2F;admin（download&#x2F;download）（upload&#x2F;upload）</p></blockquote><h2 id="2-搭建环境"><a href="#2-搭建环境" class="headerlink" title="2. 搭建环境"></a>2. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器24元&#x2F;月VPS一台</del>展示用的服务器是<a href="https://netcup-sonderangebote.de/">Netcup</a>特价款，本期搭建用的是<a href="https://loll.cc/vultr">Vultr</a>的服务器，按小时计费，可随时销毁（最好是选非大陆的服务器）（<a href="https://loll.cc/tx">腾讯轻量购买链接</a>）</li><li>系统：Debian 10（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本</a> 非必需DD用原来的系统也OK）</li><li>域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>安装好Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需】安装好宝塔面板海外版本aapanel，并安装好Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需不过本教程使用】安装好Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><h2 id="3-搭建视频"><a href="#3-搭建视频" class="headerlink" title="3. 搭建视频"></a>3. 搭建视频</h2><p>YouTube：<a href="https://youtu.be/X4lT0Km_VdU">https://youtu.be/X4lT0Km_VdU</a></p><p>哔哩哔哩【完整版本可以点击去吐槽到B站观看】：<joe-bilibili bvid="BV1TZ4y1B7zL"></joe-bilibili></p><h2 id="4-搭建方式"><a href="#4-搭建方式" class="headerlink" title="4. 搭建方式"></a>4. 搭建方式</h2><p>服务器初始设置，参考——<a href="https://blog.laoda.de/archives/vps-script"><strong>新买了一台服务器“必须”要做的6件小事:</strong></a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt update -y  <span class="comment"># 升级packages</span></span><br><span class="line"></span><br><span class="line">apt install wget curl sudo vim git  <span class="comment"># Debian系统比较干净，安装常用的软件</span></span><br></pre></td></tr></table></figure><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/FileRun</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/FileRun</span><br><span class="line"></span><br><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><p><code>docker-compose.yml</code>填入以下内容：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&#x27;2&#x27;</span></span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  db:    <span class="comment"># 数据库服务</span></span><br><span class="line">    image: mariadb:10.1</span><br><span class="line">    environment:</span><br><span class="line">      MYSQL_ROOT_PASSWORD: your_mysql_root_password  <span class="comment"># 数据库root用户的密码，自行修改</span></span><br><span class="line">      MYSQL_USER: your_filerun_username   <span class="comment"># 数据库用户名，自行修改</span></span><br><span class="line">      MYSQL_PASSWORD: your_filerun_password <span class="comment"># 数据库密码，自行修改</span></span><br><span class="line">      MYSQL_DATABASE: your_filerun_database <span class="comment">#数据库名，自行修改</span></span><br><span class="line">    volumes:</span><br><span class="line">      - /root/data/docker_data/FileRun/filerun/db:/var/lib/mysql  <span class="comment"># 挂载路径，冒号左边可以自己修改成VPS本地的路径，冒号右边为Docker容器内部路径，不能修改</span></span><br><span class="line">    restart: always</span><br><span class="line"></span><br><span class="line">  web:  <span class="comment"># 网页服务</span></span><br><span class="line">    image: filerun/filerun</span><br><span class="line">    environment:</span><br><span class="line">      FR_DB_HOST: db</span><br><span class="line">      FR_DB_PORT: 3306</span><br><span class="line">      FR_DB_NAME: your_filerun_database</span><br><span class="line">      FR_DB_USER: your_filerun_username</span><br><span class="line">      FR_DB_PASS: your_filerun_password</span><br><span class="line">      APACHE_RUN_USER: www-data</span><br><span class="line">      APACHE_RUN_USER_ID: 33</span><br><span class="line">      APACHE_RUN_GROUP: www-data</span><br><span class="line">      APACHE_RUN_GROUP_ID: 33</span><br><span class="line">    depends_on:</span><br><span class="line">      - db</span><br><span class="line">    links:</span><br><span class="line">      - db:db  <span class="comment"># 两个容器互相连接</span></span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">&quot;8000:80&quot;</span>  <span class="comment"># Docker内部的80端口映射到VPS本地的8000端口，8000端口记得防火墙打开（宝塔、阿里云、腾讯云）</span></span><br><span class="line">    volumes:</span><br><span class="line">      - /root/data/docker_data/FileRun/filerun/html:/var/www/html  <span class="comment"># 挂载路径，冒号左边可以自己修改成VPS本地的路径，冒号右边为Docker容器内部路径，不能修改</span></span><br><span class="line">      - /root/data/docker_data/FileRun/filerun/user-files:/user-files  <span class="comment"># 挂载路径，冒号左边可以自己修改成VPS本地的路径，冒号右边为Docker容器内部路径，不能修改</span></span><br></pre></td></tr></table></figure><p>没问题的话，<code>ctrl+x</code>退出，按<code>y</code>保存，<code>enter</code>确认。</p><p>然后运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>访问：<code>http:服务ip:8000</code> 即可。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的IP。</p><p>2、遇到访问不了的情况，请在宝塔面板的防火墙和服务商的后台防火墙里打开对应端口。</p></blockquote><h2 id="5-反向代理"><a href="#5-反向代理" class="headerlink" title="5. 反向代理"></a>5. 反向代理</h2><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p>之后，登陆Nginx Proxy Manager（不会的看这个：<strong>安装Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称NPM）会用到<code>80</code>、<code>443</code>端口，所以本机不能占用（比如原来就有Nginx）</p></blockquote><p>直接丢几张图：</p><p><img src="https://img.laoda.de/i/2022/03/20/wenk4d.webp"></p><p><img src="https://img.laoda.de/i/2022/03/20/x2w60n.webp"></p><p><img src="https://img.laoda.de/i/2022/03/21/shel01_5.webp"></p><blockquote><p> 注意填写对应的端口，按文章来的话，应该是<code>8000</code></p></blockquote><p><img src="https://img.laoda.de/i/2022/03/20/wdukw3.webp"></p><p><img src="https://img.laoda.de/i/2022/03/21/shhsl4_5.webp"></p><p>然后就可以用域名来访问了。</p><h2 id="6-注意事项"><a href="#6-注意事项" class="headerlink" title="6. 注意事项"></a>6. 注意事项</h2><h4 id="6-1-API操作"><a href="#6-1-API操作" class="headerlink" title="6.1 API操作"></a>6.1 API操作</h4><p>FileRun可以使用Nextcloud的手机客户端，首先需要打开API。</p><p><img src="https://img.laoda.de/i/2022/03/21/o2ling_5.webp" alt="image-20220321145551828"></p><p>首先站点需要开启SSL，然后 访问 <code>Control Panel</code> -&gt;  <code>API</code>中<code> Enable API</code> 开启。</p><p>具体API说明，请参考：<a href="http://docs.filerun.com/api">http://docs.filerun.com/api</a></p><h2 id="7-结尾"><a href="#7-结尾" class="headerlink" title="7. 结尾"></a>7. 结尾</h2><p>祝大家用得开心，有问题可以去GitHub提<a href="https://github.com/filerun/docker">Issues</a>，也可以在评论区互相交流探讨。</p><p>开源项目，希望大家能多点点Star，鼓励原作者。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>官网地址：<a href="https://filerun.com/">https://filerun.com/</a></p><p>官方文档地址：<a href="https://docs.filerun.com/filerun_install_guide">https://docs.filerun.com/filerun_install_guide</a></p><p>GitHub项目地址：<a href="https://github.com/filerun/docker">https://github.com/filerun/docker</a></p><p>DockerHub地址：<a href="https://hub.docker.com/r/filerun/filerun">https://hub.docker.com/r/filerun/filerun</a></p><p><a href="https://twgreatdaily.com/zh-hans/XTcYe3EBfwtFQPkdlwHR.html">https://twgreatdaily.com/zh-hans/XTcYe3EBfwtFQPkdlwHR.html</a></p><p><a href="https://post.smzdm.com/p/ag82pn83/">https://post.smzdm.com/p/ag82pn83/</a></p><p><a href="https://lala.im/7695.html">https://lala.im/7695.html</a></p><p><a href="https://wzfou.com/directory-lister/">https://wzfou.com/directory-lister/</a></p><p><a href="https://vpsur.com/filerun%E7%9A%84%E6%90%AD%E5%BB%BA.html">https://vpsur.com/filerun%E7%9A%84%E6%90%AD%E5%BB%BA.html</a></p><h3 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h3><p>之前搭建的网盘：<a href="https://blog.laoda.de/archives/cloudreve-install">告别百度网盘，安装自己的专属网盘——Cloudreve，不限制下载速度！</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker部署 </tag>
            
            <tag> DockerCompose </tag>
            
            <tag> Nextcloud </tag>
            
            <tag> Docker </tag>
            
            <tag> 网盘 </tag>
            
            <tag> FileRun </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩的Docker项目】搭建一个Ubuntu的桌面系统（带VNC/noVNC）随时随地可以通过浏览器访问！</title>
      <link href="/archives/install-ubuntu-desktop/"/>
      <url>/archives/install-ubuntu-desktop/</url>
      
        <content type="html"><![CDATA[<img src="https://img.laoda.de/i/2022/03/20/spkvs7.webp" style="zoom:50%;" /><p>在Docker里面跑一个Ubuntu的桌面环境，可以实现一些日常使用的功能，需要持久保留的目录可以映射到本地，如果之后不想用了也可以直接删除，不会把系统“搞脏”。</p><p>系统镜像中带有：</p><ul><li><p>中文语言包</p></li><li><p>Xfce4桌面</p></li><li><p>TigerVNC服务</p></li><li><p>noVNC服务（HTML5WEBVNC）</p></li><li><p>Chromium浏览器</p></li><li><p>Deluge2.0.3</p></li><li><p>qBittorrent4.2.1</p></li><li><p>Transmission2.9.4</p></li><li><p>Telegram</p></li><li><p>ibus-pinyin输入法</p></li></ul><h2 id="1-项目展示"><a href="#1-项目展示" class="headerlink" title="1. 项目展示"></a>1. 项目展示</h2><p>GitHub项目地址：<a href="https://github.com/fcwu/docker-ubuntu-vnc-desktop">https://github.com/fcwu/docker-ubuntu-vnc-desktop</a></p><p>Docker Hub：<a href="https://hub.docker.com/r/imlala/ubuntu-xfce-vnc-novnc">https://hub.docker.com/r/imlala/ubuntu-xfce-vnc-novnc</a></p><h3 id="登陆界面展示"><a href="#登陆界面展示" class="headerlink" title="登陆界面展示"></a>登陆界面展示</h3><p><img src="https://img.laoda.de/i/2022/03/20/sqw8dh.webp"></p><h3 id="桌面展示"><a href="#桌面展示" class="headerlink" title="桌面展示"></a>桌面展示</h3><p><img src="https://img.laoda.de/i/2022/03/20/srdfo2.webp"></p><h3 id="文件夹目录展示"><a href="#文件夹目录展示" class="headerlink" title="文件夹目录展示"></a>文件夹目录展示</h3><p><img src="https://img.laoda.de/i/2022/03/20/srkfxy.webp"></p><h3 id="qBittorrent软件展示"><a href="#qBittorrent软件展示" class="headerlink" title="qBittorrent软件展示"></a><strong>qBittorrent</strong>软件展示</h3><p><img src="https://img.laoda.de/i/2022/03/20/ss4shd.webp"></p><h3 id="Chromium浏览器展示"><a href="#Chromium浏览器展示" class="headerlink" title="Chromium浏览器展示"></a>Chromium浏览器展示</h3><p><img src="https://img.laoda.de/i/2022/03/20/stz9ax_5.webp" alt="image-20220320174337054"></p><h3 id="系统信息展示"><a href="#系统信息展示" class="headerlink" title="系统信息展示"></a><strong>系统信息</strong>展示</h3><p><img src="https://img.laoda.de/i/2022/03/20/sumkyz_5.webp" alt="image-20220320174447706"></p><h2 id="2-搭建环境"><a href="#2-搭建环境" class="headerlink" title="2. 搭建环境"></a>2. 搭建环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器24元&#x2F;月VPS一台</del>展示用的服务器是<a href="https://netcup-sonderangebote.de/">Netcup</a>特价款，本期搭建用的是<a href="https://loll.cc/vultr">Vultr</a>的服务器，按小时计费，可随时销毁（最好是选非大陆的服务器）（<a href="https://loll.cc/tx">腾讯轻量购买链接</a>）</li><li>系统：Debian 10（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本</a> 非必需DD用原来的系统也OK）</li><li>域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>安装好Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需】安装好宝塔面板海外版本aapanel，并安装好Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需不过本教程使用】安装好Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><h2 id="3-搭建视频"><a href="#3-搭建视频" class="headerlink" title="3. 搭建视频"></a>3. 搭建视频</h2><p>YouTube：<a href="https://youtu.be/7Q0zK-ivlPM">https://youtu.be/7Q0zK-ivlPM</a></p><p>哔哩哔哩【完整版本可以点击去吐槽到B站观看】：<joe-bilibili bvid="BV1nZ4y167Tv"></joe-bilibili></p><h2 id="4-搭建方式"><a href="#4-搭建方式" class="headerlink" title="4. 搭建方式"></a>4. 搭建方式</h2><p>服务器初始设置，参考——<a href="https://blog.laoda.de/archives/vps-script"><strong>新买了一台服务器“必须”要做的6件小事:</strong></a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt update -y  <span class="comment"># 升级packages</span></span><br><span class="line"></span><br><span class="line">apt install wget  <span class="comment">#如果出现 wget:command not found,可以用这个命令安装</span></span><br></pre></td></tr></table></figure><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/Ubuntu_desktop</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/Ubuntu_desktop</span><br><span class="line"></span><br><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><p><code>docker-compose.yml</code>填入以下内容：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&#x27;3.5&#x27;</span></span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">    ubuntu-xfce-vnc:</span><br><span class="line">        container_name: xfce</span><br><span class="line">        image: imlala/ubuntu-xfce-vnc-novnc:latest</span><br><span class="line">        shm_size: <span class="string">&quot;1gb&quot;</span>  <span class="comment"># 防止高分辨率下Chromium崩溃,如果内存足够也可以加大一点点</span></span><br><span class="line">        ports:</span><br><span class="line">            - 5900:5900   <span class="comment"># TigerVNC的服务端口（保证端口是没被占用的，冒号右边的端口不能改，左边的可以改）</span></span><br><span class="line">            - 6080:6080   <span class="comment"># noVNC的服务端口，注意事项同上</span></span><br><span class="line">        environment: </span><br><span class="line">            - VNC_PASSWD=PAS3WorD    <span class="comment"># 改成你自己想要的密码</span></span><br><span class="line">            - GEOMETRY=1280x720      <span class="comment"># 屏幕分辨率，800×600/1024×768诸如此类的可自己调整</span></span><br><span class="line">            - DEPTH=24               <span class="comment"># 颜色位数16/24/32可用，越高画面越细腻，但网络不好的也会更卡</span></span><br><span class="line">        volumes: </span><br><span class="line">            - ./Downloads:/root/Downloads  <span class="comment"># Chromium/Deluge/qBittorrent/Transmission下载的文件默认保存位置都是root/Downloads下</span></span><br><span class="line">            - ./Documents:/root/Documents  <span class="comment"># 映射一些其他目录</span></span><br><span class="line">            - ./Pictures:/root/Pictures</span><br><span class="line">            - ./Videos:/root/Videos</span><br><span class="line">            - ./Music:/root/Music</span><br><span class="line">        restart: unless-stopped</span><br></pre></td></tr></table></figure><p>没问题的话，<code>ctrl+x</code>退出，按<code>y</code>保存，<code>enter</code>确认。</p><p>然后运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>访问：<code>http:服务ip:6080</code> 即可。</p><blockquote><p><strong>注意：</strong></p><p>1、不知道服务器IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的IP。</p><p>2、遇到访问不了的情况，请在宝塔面板的防火墙和服务商的后台防火墙里打开对应端口。</p></blockquote><h3 id="附录："><a href="#附录：" class="headerlink" title="附录："></a>附录：</h3><p>还有一个类似的项目：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -itd --restart=always -p 6080:80 -e HTTP_PASSWORD=mypassword -v /root/data/docker_data/Ubuntu_desktop/dev/shm:/dev/shm dorowu/ubuntu-desktop-lxde-vnc</span><br></pre></td></tr></table></figure><p>还可以添加声音，具体见GitHub：<a href="https://github.com/fcwu/docker-ubuntu-vnc-desktop">https://github.com/fcwu/docker-ubuntu-vnc-desktop</a></p><h2 id="5-反向代理"><a href="#5-反向代理" class="headerlink" title="5. 反向代理"></a>5. 反向代理</h2><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong>（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p><p>之后，登陆Nginx Proxy Manager（不会的看这个：<strong>安装Nginx Proxy Manager</strong>（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>））</p><blockquote><p><strong>注意：</strong></p><p>Nginx Proxy Manager（以下简称NPM）会用到<code>80</code>、<code>443</code>端口，所以本机不能占用（比如原来就有Nginx）</p></blockquote><p>直接丢几张图：</p><p><img src="https://img.laoda.de/i/2022/03/20/wenk4d.webp"></p><p><img src="https://img.laoda.de/i/2022/03/20/x2w60n.webp"></p><p><img src="https://img.laoda.de/i/2022/03/20/wd8i95.webp"></p><blockquote><p> 注意：<br>1、填写对应的端口<br>2、Websockets Support打开</p></blockquote><p><img src="https://img.laoda.de/i/2022/03/20/wdukw3.webp"></p><p><img src="https://img.laoda.de/i/2022/03/20/weeffe.webp"></p><p>然后就可以用域名来访问了。</p><h2 id="6-结尾"><a href="#6-结尾" class="headerlink" title="6. 结尾"></a>6. 结尾</h2><p>祝大家用得开心，有问题可以去GitHub提<a href="https://github.com/fcwu/docker-ubuntu-vnc-desktop">Issues</a>，也可以在评论区互相交流探讨。</p><p>开源项目，希望大家能多点点Star，鼓励原作者。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://lala.im/6714.html">https://lala.im/6714.html</a></p><p><a href="https://github.com/fcwu/docker-ubuntu-vnc-desktop">https://github.com/fcwu/docker-ubuntu-vnc-desktop</a></p><p><a href="http://blog.51sec.org/2021/01/install-ubuntu-1804-xfce4-desktop-in.html">http://blog.51sec.org/2021/01/install-ubuntu-1804-xfce4-desktop-in.html</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> VNC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何在Nginx Proxy Manager（NPM）上部署静态网站</title>
      <link href="/archives/host-static-sites-on-npm/"/>
      <url>/archives/host-static-sites-on-npm/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>众所周知，我们在之前介绍过<a href="https://blog.laoda.de/archives/nginxproxymanager">Nginx Proxy Manager（以下简称NPM)</a>这个反向代理的神器，对于一些Docker搭建的Web项目，NPM能够很轻松地给他们做反向代理。</p><p>然而对于一些静态网站，小伙伴们可能不知道怎么用NPM来展示，这篇文章就来简单和大家分享一下，如何用NPM来托管一些简单的HTML单页。</p><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><p>因为我们已经有NPM在运行，监听了<code>443</code>端口和<code>80</code>端口，避免为了一个静态网站而建立另一个Web服务器。</p><p>托管一些简单的HTML单页是一个简单的、低流量的需求，使用NPM已经运行的内置NGINX就可以了。</p><p>这个是我的NPM的<code>docker-compose</code>文件：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&quot;3&quot;</span></span><br><span class="line">services:</span><br><span class="line">  app:</span><br><span class="line">    image: <span class="string">&#x27;jc21/nginx-proxy-manager:latest&#x27;</span></span><br><span class="line">    restart: unless-stopped</span><br><span class="line">    ports:</span><br><span class="line">      <span class="comment"># These ports are in format &lt;host-port&gt;:&lt;container-port&gt;</span></span><br><span class="line">      - <span class="string">&#x27;80:80&#x27;</span> <span class="comment"># Public HTTP Port</span></span><br><span class="line">      - <span class="string">&#x27;443:443&#x27;</span> <span class="comment"># Public HTTPS Port</span></span><br><span class="line">      - <span class="string">&#x27;81:81&#x27;</span> <span class="comment"># Admin Web Port</span></span><br><span class="line">      <span class="comment"># Add any other Stream port you want to expose</span></span><br><span class="line">      <span class="comment"># - &#x27;21:21&#x27; # FTP</span></span><br><span class="line">    environment:</span><br><span class="line">      DB_MYSQL_HOST: <span class="string">&quot;db&quot;</span></span><br><span class="line">      DB_MYSQL_PORT: 3306</span><br><span class="line">      DB_MYSQL_USER: <span class="string">&quot;npm&quot;</span></span><br><span class="line">      DB_MYSQL_PASSWORD: <span class="string">&quot;npm&quot;</span></span><br><span class="line">      DB_MYSQL_NAME: <span class="string">&quot;npm&quot;</span></span><br><span class="line">      <span class="comment"># Uncomment this if IPv6 is not enabled on your host</span></span><br><span class="line">      <span class="comment"># DISABLE_IPV6: &#x27;true&#x27;</span></span><br><span class="line">    volumes:</span><br><span class="line">      - ./data:/data</span><br><span class="line">      - ./letsencrypt:/etc/letsencrypt</span><br><span class="line">    depends_on:</span><br><span class="line">      - db</span><br><span class="line"></span><br><span class="line">  db:</span><br><span class="line">    image: <span class="string">&#x27;jc21/mariadb-aria:latest&#x27;</span></span><br><span class="line">    restart: unless-stopped</span><br><span class="line">    environment:</span><br><span class="line">      MYSQL_ROOT_PASSWORD: <span class="string">&#x27;xxx&#x27;</span></span><br><span class="line">      MYSQL_DATABASE: <span class="string">&#x27;xxx&#x27;</span></span><br><span class="line">      MYSQL_USER: <span class="string">&#x27;xxx&#x27;</span></span><br><span class="line">      MYSQL_PASSWORD: <span class="string">&#x27;xxx&#x27;</span></span><br><span class="line">    volumes:</span><br><span class="line">      - ./data/mysql:/var/lib/mysql</span><br></pre></td></tr></table></figure><p>可以看到，在<code>docker-compose.yml</code>文件里面，我们挂载了一个<code>./data</code>的文件夹，这个就是指在<code>docker-compose.yml</code>所在的文件夹里面的<code>data</code>文件夹，</p><p><img src="https://img.laoda.de/i/2022/03/13/zlidbz_5.webp" alt="image-20220313215238703"></p><p>我们要做的，就是在这个<code>data</code>文件夹里面放我们的静态html文件。</p><p>具体操作如下：</p><p>1、在你挂载的<code>data</code>文件夹里面创建一个新的文件夹，比如<code>mkdir /root/data/docker-data/npm/data/demo10.gao.ee</code></p><img src="https://img.laoda.de/i/2022/03/13/10hodw0_5.webp" alt="image-20220313220644530" style="zoom:50%;" /><p>2、把带有html文件的内容放到这个文件夹里面</p><img src="https://img.laoda.de/i/2022/03/13/10icc5v_5.webp" alt="image-20220313220755911" style="zoom:50%;" /><p>3、登陆NPM，在网页里新建一个<code>Proxy Host</code></p><img src="https://img.laoda.de/i/2022/03/13/10ixiea_5.webp" alt="image-20220313220853599" style="zoom:50%;" /><p>4、配置参数</p><img src="https://img.laoda.de/i/2022/03/13/10jj50m_5.webp" alt="image-20220313220956132" style="zoom:50%;" /><img src="https://img.laoda.de/i/2022/03/13/10k28wd_5.webp" alt="image-20220313221045094" style="zoom:50%;" /><p>5、在<code>Advanced</code>这一栏填入下面的配置：</p><img src="https://img.laoda.de/i/2022/03/13/10l9rcw_5.webp" alt="image-20220313221248089" style="zoom:50%;" /><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">root</span> /data/demo10.gao.ee;  <span class="comment"># 修改成你自己刚刚创建的目录，只需要改demo10.gao.ee这部分就可以了</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意：</strong>第一次输入保存可能会失效，请再次点开编辑，然后点确定，确保这边内容输入进去了。</p></blockquote><p>6、确保你的域名已经解析到了这台装有NPM的服务上了</p><img src="https://img.laoda.de/i/2022/03/13/10is80a_5.webp" alt="image-20220313220830583" style="zoom:50%;" /><p>7、浏览网页（这里是<code>demo10.gao.ee</code>），确保配置成功了！</p><img src="https://img.laoda.de/i/2022/03/13/10n2tov_5.webp" alt="image-20220313221552303" style="zoom:50%;" /><p>这边乱码了，我修改一下内容：</p><img src="https://img.laoda.de/i/2022/03/13/10novwd_5.webp" alt="image-20220313221654247" style="zoom:50%;" /><img src="https://img.laoda.de/i/2022/03/13/10o2cni_5.webp" alt="image-20220313221718216" style="zoom:50%;" /><p>搞定！</p><p>8、接下来，如果要修改内容，就到之前的文件夹里面修改就行（我这里是<code>/root/data/docker-data/npm/data/demo10.gao.ee</code>）</p><h2 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h2><p><a href="https://blog.laoda.de/archives/nginxproxymanager">【Docker系列】一个反向代理神器——Nginx Proxy Manager</a></p><p><a href="https://blog.laoda.de/archives/nginxproxymanager-access-lists">【Docker系列】让网站更安全！开启NginxProxyManager网站访问登陆限制功能</a></p><p><a href="https://blog.laoda.de/archives/nginxproxymanager-ssl-wildcardcerts-for-your-entire-domain">【Docker系列】反向代理神器NginxProxyManager——通配符SSL证书申请</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NginxProxyManager </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩的项目】可能是史上最全的基于宝塔面板（海外版aapanel）的Nextcloud网盘搭建教程！</title>
      <link href="/archives/nextcloud-aapanel-install/"/>
      <url>/archives/nextcloud-aapanel-install/</url>
      
        <content type="html"><![CDATA[<p><img src="https://pic.loll.cc/images/2022/03/06/202203061124799.png" alt="image-20220306112428686"></p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>Nextcloud是一款开源免费的私有云存储网盘项目，可以让你快速便捷地搭建一套属于自己或团队的云同步网盘，从而实现跨平台跨设备文件同步、共享、版本控制、团队协作等功能。它的客户端覆盖了Windows、Mac、Android、iOS、Linux 等各种平台，也提供了网页端以及 WebDAV接口，所以你几乎可以在各种设备上方便地访问你的云盘。</p><p>今天我们从零开始来搭建一个Nextcloud网盘，搭建其实很简单，所以也会多介绍一些搭建完成之后，<strong>安全与设置警告</strong>报错信息的解决方法。</p><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><ul><li>功能丰富，社区生态丰富</li><li>遇到问题容易在网上找到解决方案</li><li>高速（直链下载速度起飞，与服务器带宽有关）</li><li>私密（自己全权管理所有文件）</li><li>稳定（不存在服务商关闭网盘服务的问题）</li><li>实现了PC、iPhone、iPad三端自动同步</li><li>可以直接编辑云端的文件（代码文件也直接查看编辑）</li></ul><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><ul><li>不够轻量，而且比较吃服务器资源（内存等），服务器的硬盘容量通常不大（多为几十G，不适合做仓库盘）</li><li>后续配置比较复杂私有云盘需要自己维护（出现各种问题就很糟心）</li></ul><p>之前搭建的网盘：<a href="https://blog.laoda.de/archives/cloudreve-install">告别百度网盘，安装自己的专属网盘——Cloudreve，不限制下载速度！</a></p><h2 id="1-项目展示"><a href="#1-项目展示" class="headerlink" title="1. 项目展示"></a>1. 项目展示</h2><p>GitHub项目地址：<a href="https://github.com/nextcloud">https://github.com/nextcloud</a></p><p>Demo：<a href="https://try.nextcloud.com/">https://try.nextcloud.com</a></p><h2 id="2-搭建环境"><a href="#2-搭建环境" class="headerlink" title="2. 搭建环境"></a>2. 搭建环境</h2><ul><li>服务器：腾讯香港轻量应用服务器24元&#x2F;月VPS一台（最好是选非大陆的服务器）（<a href="https://loll.cc/tx">购买链接</a>）</li><li>系统：Debian 10（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本</a> 非必需DD用原来的系统也OK）</li><li>域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>【非必需】安装好Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>安装好宝塔面板海外版本aapanel，并安装好Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需】安装好Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><h2 id="3-搭建视频"><a href="#3-搭建视频" class="headerlink" title="3. 搭建视频"></a>3. 搭建视频</h2><p>YouTube：待补充</p><p>哔哩哔哩：待补充(心态发生了问题，自己已经安装好了，演示视频的时候安装一直提示“内部服务器错误”，搜索了很多内容，依旧无法解决，玄学 &#x3D;，&#x3D;)</p><h2 id="4-搭建方式"><a href="#4-搭建方式" class="headerlink" title="4. 搭建方式"></a>4. 搭建方式</h2><p>参考——<a href="https://blog.laoda.de/archives/vps-script"><strong>新买了一台服务器“必须”要做的6件小事:</strong></a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt update -y  <span class="comment"># 升级packages</span></span><br><span class="line"></span><br><span class="line">apt install wget  <span class="comment">#如果出现 wget:command not found,可以用这个命令安装</span></span><br></pre></td></tr></table></figure><p>Debian宝塔海外版安装命令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O install.sh http://www.aapanel.com/script/install-ubuntu_6.0_en.sh &amp;&amp; bash install.sh forum</span><br></pre></td></tr></table></figure><blockquote><p> 遇到访问不了的情况，请在宝塔面板的防火墙和服务商的后台防火墙里打开对应端口。</p></blockquote><p>在选择安装LNMP过程中，可以先去把域名解析到服务器上先～</p><p>等待半小时左右，LNMP基本都能安装完成。</p><p>Nextcloud官方下载地址：<a href="https://nextcloud.com/install/#instructions-server">https://nextcloud.com/install/#instructions-server</a></p><img src="https://pic.loll.cc/images/2022/03/06/202203061243957.png" alt="image-20220306124301857" style="zoom:50%;" /><h2 id="5-开始搭建（以宝塔安装为例子）"><a href="#5-开始搭建（以宝塔安装为例子）" class="headerlink" title="5. 开始搭建（以宝塔安装为例子）"></a>5. 开始搭建（以宝塔安装为例子）</h2><p>Docker搭建参考：<a href="https://github.com/nextcloud/docker/blob/master/.examples/docker-compose/insecure/postgres/fpm/docker-compose.yml">https://github.com/nextcloud/docker/blob/master/.examples/docker-compose/insecure/postgres/fpm/docker-compose.yml</a></p><p>不是很推荐用Docker搭建，因为Nextcloud后续配置会</p><img src="https://pic.loll.cc/images/2022/03/06/202203061638134.png" alt="image-20220306163844059" style="zoom:50%;" /><p>远程下载：<a href="https://download.nextcloud.com/server/releases/nextcloud-23.0.2.zip">https://download.nextcloud.com/server/releases/nextcloud-23.0.2.zip</a></p><p><img src="https://pic.loll.cc/images/2022/03/06/202203061639443.png" alt="image-20220306163952402"></p><p>修改权限：宝塔面板——文件——找到<code>/www/wwwroot</code>路径，将Nextcloud整个网站目录的权限由755修改为775（不设置打开网址会报“内部服务器错误”的问题）</p><h2 id="6-安全与设置警告排错（重点，适用于宝塔面板）"><a href="#6-安全与设置警告排错（重点，适用于宝塔面板）" class="headerlink" title="6. 安全与设置警告排错（重点，适用于宝塔面板）"></a>6. 安全与设置警告排错（重点，适用于宝塔面板）</h2><h3 id="6-1-Nextcloud性能优化"><a href="#6-1-Nextcloud性能优化" class="headerlink" title="6.1 Nextcloud性能优化"></a>6.1 Nextcloud性能优化</h3><h4 id="6-1-1-使用APCu和Redis内存缓存"><a href="#6-1-1-使用APCu和Redis内存缓存" class="headerlink" title="6.1.1 使用APCu和Redis内存缓存"></a>6.1.1 使用APCu和Redis内存缓存</h4><p>通过使用内存作为数据缓存的话，可以提高Nextcloud的性能，以加快访问速度，并且Nextcloud支持多个内存缓存后端，如<code>APCu</code>、<code>Redis</code>，其他的缓存后端配置请参阅：<a href="https://docs.nextcloud.com/server/18/admin_manual/configuration_server/caching_configuration.html">Nextcloud内存缓存优化的官方文档</a></p><p><strong>[1] 安装PHP的APCu+Redis扩展</strong></p><p>在宝塔面板的首页处，找到PHP并点开，在安装扩展处安装<code>redis</code>和<code>apcu</code>。</p><p><strong>[2] 配置APCu和Redis</strong></p><p>安装完毕后，打开<code>/www/wwwroot/域名/config/config.php</code>，在其尾部添加以下代码：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;memcache.local&#x27;</span> =&gt; <span class="string">&#x27;\OC\Memcache\APCu&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;memcache.distributed&#x27;</span> =&gt; <span class="string">&#x27;\OC\Memcache\Redis&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;redis&#x27;</span> =&gt; [</span><br><span class="line"><span class="string">&#x27;host&#x27;</span> =&gt; <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;port&#x27;</span> =&gt; <span class="number">6379</span>,</span><br><span class="line">],</span><br><span class="line"><span class="string">&#x27;memcache.locking&#x27;</span> =&gt; <span class="string">&#x27;\OC\Memcache\Redis&#x27;</span>,</span><br></pre></td></tr></table></figure><h4 id="6-1-2-开启PHP-OPcache"><a href="#6-1-2-开启PHP-OPcache" class="headerlink" title="6.1.2 开启PHP OPcache"></a>6.1.2 开启PHP OPcache</h4><p>通过安装<code>OPcache</code>扩展，也可以在一定程度上提升PHP的性能。</p><p>在宝塔面板的首页处，找到PHP并点开，在安装扩展处安装<code>OPcache</code>。</p><h4 id="6-1-3-官方推荐的PHP扩展"><a href="#6-1-3-官方推荐的PHP扩展" class="headerlink" title="6.1.3 官方推荐的PHP扩展"></a>6.1.3 官方推荐的PHP扩展</h4><p>官方推荐的其他PHP扩展：<code>fileinfo</code>，<code>gmp</code>，<code>imagick</code>，安装完上述扩展及设置后，重载PHP配置并重启PHP服务。</p><p>咕咕在自己的Netcup上出现了gmp扩展模块安装不上的情况，参考了宝塔论坛的教程，</p><blockquote><p>该问题是因为操作系统未安装libgmp3-dev软件包导致，建议宝塔的自动安装脚本修复该问题，自动检测这个软件包的状态和自动安装该软件包。</p></blockquote><p>具体命令是：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install libgmp3-dev -y</span><br></pre></td></tr></table></figure><p>之后再到php这边点击gmp模块安装，就能安装成功了。</p><h4 id="6-1-4-文件扫描"><a href="#6-1-4-文件扫描" class="headerlink" title="6.1.4 文件扫描"></a>6.1.4 文件扫描</h4><p>有时候，我们直接使用Linux命令，如：<code>wget</code>、<code>curl</code>等命令直接下载文件到服务器内Nextcloud里的用户目录，但是用户登录Nextcloud却并没有显示，怎么办？<br>我们可以使用PHP配合Nextcloud命令，来自动扫描文件：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo -u www php occ files:scan --all</span><br><span class="line">Copy</span><br></pre></td></tr></table></figure><p>其中：</p><ul><li>命令使用需要在Nextcloud根目录下</li><li>需要使用<code>sudo -u</code>命令提权到www用户（即：Nginx用户）</li></ul><p><a href="https://imagehost.mintimate.cn/post_deployNextcloud/scanFile.png"><img src="https://imagehost.mintimate.cn/post_deployNextcloud/scanFile.png" alt="扫描文件夹"></a></p><p><a href="https://imagehost.mintimate.cn/post_deployNextcloud/scanFile.png">扫描文件夹</a></p><h4 id="6-1-5-后台任务优化"><a href="#6-1-5-后台任务优化" class="headerlink" title="6.1.5 后台任务优化"></a>6.1.5 后台任务优化</h4><p>Nextcloud的后台任务，默认是使用Ajax异步方法进行后台任务，即在每次访问Nextcloud任意页面都会通过<code>AJAX</code>的方式发起定时任务的执行请求，这种方式如果没有自己的独立服务器或者VPS的话还是比较方便省心的，但官方推荐使用<code>Cron</code>，<strong>和Nginx或Apache等WEB服务独立开来，互不影响</strong>：</p><p><a href="https://imagehost.mintimate.cn/post_deployNextcloud/q5qzv6zkk2.png"><img src="https://imagehost.mintimate.cn/post_deployNextcloud/q5qzv6zkk2.png" alt="后台任务"></a></p><p><a href="https://imagehost.mintimate.cn/post_deployNextcloud/q5qzv6zkk2.png">后台任务</a></p><p>为了使用Cron，我们需要用到Linux的定时任务。<br>SSH连接服务器后，输入：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">crontab -e</span><br></pre></td></tr></table></figure><p>创建一个Cron任务，并使用正则表达式：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*/5 * * * * sudo -u www php /PathToNextcloud/cron.php</span><br></pre></td></tr></table></figure><p>保存即可。</p><p>当然，如果你用宝塔面板，也可以直接使用宝塔自带的控制面板，设置定时任务：<br><a href="https://imagehost.mintimate.cn/post_deployNextcloud/25emmnrggo.png"><img src="https://imagehost.mintimate.cn/post_deployNextcloud/25emmnrggo.png" alt="宝塔设置定时任务"></a></p><p><a href="https://imagehost.mintimate.cn/post_deployNextcloud/25emmnrggo.png">宝塔设置定时任务</a></p><h3 id="6-2-安全及设置警告问题排查"><a href="#6-2-安全及设置警告问题排查" class="headerlink" title="6.2 安全及设置警告问题排查"></a>6.2 安全及设置警告问题排查</h3><p>打开Nextcloud的<code>设置</code>——<code>概览</code>——<code>安全及设置警告</code>，可以看到检测出的一些问题，下面我们将对其逐一排查解决。</p><blockquote><p><strong>[1] PHP 的安装似乎不正确，无法访问系统环境变量。getenv(“PATH”) 函数测试返回了一个空值。</strong></p></blockquote><p>宝塔面板——首页的PHP——FPM配置文件，在其尾部添加一行：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">env[PATH] = /usr/local/bin:/usr/bin:/bin:/usr/local/php/bin</span><br></pre></td></tr></table></figure><p>注：该配置文件的位置为<code>/www/server/php/php版本号/etc/php-fpm.conf</code></p><blockquote><p><strong>[2] 您的网页服务器未正确设置以解析“&#x2F;.well-known&#x2F;caldav”、“&#x2F;.well-known&#x2F;carddav、&#x2F;.well-known&#x2F;webfinger、&#x2F;.well-known&#x2F;nodeinfo”</strong></p></blockquote><p><code>宝塔面板</code>——<code>网站</code>——<code>设置</code>——<code>配置文件</code>，在server里添加如下两行：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">rewrite /.well-known/carddav /remote.php/dav permanent;</span><br><span class="line">rewrite /.well-known/caldav /remote.php/dav permanent;</span><br></pre></td></tr></table></figure><p>打开伪静态，加入这段：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> = /.well-known/webfinger &#123;</span><br><span class="line">     <span class="attribute">return</span> <span class="number">301</span> <span class="variable">$scheme</span>://<span class="variable">$host</span>:<span class="variable">$server_port</span>/index.php/.well-known/webfinger;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="section">location</span> = /.well-known/nodeinfo &#123;</span><br><span class="line">    <span class="attribute">return</span> <span class="number">301</span> <span class="variable">$scheme</span>://<span class="variable">$host</span>:<span class="variable">$server_port</span>/index.php/.well-known/nodeinfo;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>之后保存即可。</p><blockquote><p><strong>[3] 数据库中的一些列由于进行长整型转换而缺失。由于在较大的数据表重改变列类型会耗费一些时间，因此程序没有自动对其更改。</strong></p></blockquote><p>Step1：临时修改一下config.php的权限，然后切换到occ的目录下（即<code>cd /www/wwwroot/域名</code>)</p><p>Step2：执行以下命令即可：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -u www php occ db:convert-filecache-bigint</span><br></pre></td></tr></table></figure><blockquote><p><strong>[4] HTTP的请求头 “Strict-Transport-Security” 未设置为至少 “15552000” 秒. 为了提高安全性，建议启用HSTS</strong></p></blockquote><p><code>宝塔面板</code>—— <code>网站</code>——<code>文件</code>——找到<code>/www/server/panel/vhost/nginx/yourdomain.conf</code>文件——在末尾的<code>‘&#125;’</code>前加入如下代码：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">add_header Strict-Transport-Security <span class="string">&quot;max-age=15768000;preload;&quot;</span>;</span><br></pre></td></tr></table></figure><blockquote><p><strong>[5] PHP configuration option output_buffering must be disabled</strong></p></blockquote><p>宝塔面板——首页的PHP——配置文件——搜索“output_buffering”，在默认配置<code>output_buffering = 4096</code>前加个分号（php的注释）</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">;output_buffering = <span class="number">4096</span></span><br></pre></td></tr></table></figure><h3 id="6-3-Nextcloud常见问题"><a href="#6-3-Nextcloud常见问题" class="headerlink" title="6.3 Nextcloud常见问题"></a>6.3 Nextcloud常见问题</h3><h4 id="6-3-1-解决大文件上传问题"><a href="#6-3-1-解决大文件上传问题" class="headerlink" title="6.3.1 解决大文件上传问题"></a>6.3.1 解决大文件上传问题</h4><p><strong>Step1：修改php.ini上传文件大小限制</strong></p><p>宝塔面板——文件——打开<code>/www/server/php/PHP版本号/etc</code>路径——打开<code>php.ini</code>文件，搜索修改以下配置：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">max_execution_time = 0     <span class="comment">#默认是300秒，改为0，表示没有上传时间限制</span></span><br><span class="line">post_max_size = 10800M     <span class="comment">#设定POST数据所允许的最大大小</span></span><br><span class="line">upload_max_filesize = 10240M  <span class="comment">#表示所上传的文件的最大大小</span></span><br></pre></td></tr></table></figure><p><strong>Step2：修改nginx.conf的文件大小限制</strong></p><p>宝塔面板——文件——打开<code>/www/server/nginx/conf/</code>路径——打开<code>nginx.conf</code>，修改的内容如下：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">client_max_body_size 10240M;</span><br></pre></td></tr></table></figure><p><strong>Step3：修改连接超时时间限制（同步大文件时可能会超过默认的60s连接超时时间，导致连接关闭。报错为：Connection closed）</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">keepalive_timeout 3600;</span><br></pre></td></tr></table></figure><p><strong>Step4：重启php和nginx服务，然后进行测试，大文件可以成功上传了。</strong></p><h4 id="6-3-2-解决同步时423错误的问题"><a href="#6-3-2-解决同步时423错误的问题" class="headerlink" title="6.3.2 解决同步时423错误的问题"></a>6.3.2 解决同步时423错误的问题</h4><blockquote><p>问题描述：使用Nextcloud同步资料时，意外遇到了423错误，文件被锁定，怎么都传不上去。</p></blockquote><p>解决办法：宝塔面板——文件——打开<code>/www/wwwroot/域名/config</code>路径，找到<code>config.php</code>文件，添加一句<code>&#39;filelocking.enabled&#39; =&gt; false,</code>即可。</p><h4 id="6-3-3-Nextcloud退出维护模式"><a href="#6-3-3-Nextcloud退出维护模式" class="headerlink" title="6.3.3 Nextcloud退出维护模式"></a>6.3.3 Nextcloud退出维护模式</h4><blockquote><p>问题描述：升级NextCloud后一直处于维护状态，无法自动解除。</p></blockquote><p>解决办法：宝塔面板——文件——打开<code>/www/wwwroot/域名/config</code>路径，找到<code>config.php</code>文件，把<code>&#39;maintenance&#39; =&gt; true</code>改为 <code>false</code>，或者<strong>直接删掉</strong>这句即可。</p><h2 id="7-Nextcloud基本使用"><a href="#7-Nextcloud基本使用" class="headerlink" title="7. Nextcloud基本使用"></a>7. Nextcloud基本使用</h2><h3 id="7-1-Nextcloud基本设置"><a href="#7-1-Nextcloud基本设置" class="headerlink" title="7.1 Nextcloud基本设置"></a>7.1 Nextcloud基本设置</h3><p>Chrome打开<code>https://域名</code>地址，进去之后点击头像下的设置，根据自己的习惯进行配置即可。</p><p><img src="https://pic.loll.cc/images/2022/03/06/202203061132074.png" alt="Nextcloud用户界面"></p><p>同步冲突处理：使用Everything搜索conflicted copy文件并删除（Everything可以添加书签）</p><h3 id="7-2-Nextcloud客户端"><a href="#7-2-Nextcloud客户端" class="headerlink" title="7.2 Nextcloud客户端"></a>7.2 Nextcloud客户端</h3><p>全平台客户端下载：<a href="https://nextcloud.com/install/#install-clients">Nextcloud官网传送门</a>（如果服务器端太老，可能会用不了新版的客户端，下载适合的版本即可）</p><p>客户端的使用和配置</p><ul><li>Win端：网页端授权登录，安装exe后设置开机自启、文件夹同步。</li><li>iOS、iPadOS端：App Store直接搜索下载Nextcloud即可（点击下面的“改用旧的登录方式”，输入服务器地址、用户名、密码）</li></ul><h3 id="7-3-Nextcloud的WebDAV功能"><a href="#7-3-Nextcloud的WebDAV功能" class="headerlink" title="7.3 Nextcloud的WebDAV功能"></a>7.3 Nextcloud的WebDAV功能</h3><p>NextCloud 支持 WebDAV 协议，用户可以完全通过 WebDAV 来连接并同步文件。虽然官方还是推荐 使用客户端来同步文件，不过如果要临时访问 NextCloud 上的文件，使用 WebDAV 方式还是很便捷的。</p><p>打开Nextcloud网页登录后，单击设置，复制WebDAV下的URL地址：</p><p><img src="https://pic.loll.cc/images/2022/03/06/202203061132745.png" alt="Nextcloud的WebDAV"></p><p>使用WebDAV连接时的用户名和密码就是登录Nextcloud的用户名和密码。</p><blockquote><p>注：可以用WebDAV功能给一些第三方软件实现全平台同步的功能。</p></blockquote><h2 id="8-结尾"><a href="#8-结尾" class="headerlink" title="8. 结尾"></a>8. 结尾</h2><p>祝大家用得开心，有问题可以去GitHub提<a href="https://github.com/nextcloud">Issues</a>，也可以在评论区互相交流探讨。</p><p>咕咕上期还搭建了一个网盘直链程序，相比Nextcloud，它搭建更加容易（docker一条命令搞定），升级也非常简单，支持的网盘也更多，UI也非常漂亮。</p><p>相关代码都在博客里：<a href="https://blog.laoda.de/archives/docker-install-alist">https://blog.laoda.de/archives/docker-install-alist</a></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>好朋友的Mintimate的博客：<a href="https://mintimate.cn/2021/02/20/deployNextcloud/">https://mintimate.cn/2021/02/20/deployNextcloud/</a></p><p>Nextcloud 21 使用笔记 - 系统要求及警告排除：<a href="https://www.cnswiz.com/3376.html">https://www.cnswiz.com/3376.html</a></p><p>VPS搭建Nextcloud私有云盘 | Eulaの小破站：<a href="https://www.eula.club/VPS%E6%90%AD%E5%BB%BANextcloud%E7%A7%81%E6%9C%89%E4%BA%91%E7%9B%98.html">https://www.eula.club/VPS%E6%90%AD%E5%BB%BANextcloud%E7%A7%81%E6%9C%89%E4%BA%91%E7%9B%98.html</a></p><h3 id="附："><a href="#附：" class="headerlink" title="附："></a>附：</h3><h4 id="1、内部错误和警告的解决方法"><a href="#1、内部错误和警告的解决方法" class="headerlink" title="1、内部错误和警告的解决方法"></a>1、内部错误和警告的解决方法</h4><p>一些常见Nextcloud内部错误解决方法，<strong>建议使用浏览器搜索功能进行定位</strong></p><p><strong>1）您的安装没有设置默认的电话区域。这对验证配置设定中没有国家代码的电话号码而言是必需的。要允许没有国家代码的电话号码，请添加带区域相应的 ISO 3166-1 code ↗ 的“默认_电话_区域”到你的配置文件中。</strong></p><p>在网站配置文件（如：<code>/www/wwwroot/nextcloud.laoda.de/config/config.php</code>）中添加如下代码后保存即可：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;default_phone_region&#x27;</span> =&gt; <span class="string">&#x27;CN&#x27;</span>,</span><br></pre></td></tr></table></figure><p><img src="https://pic.loll.cc/images/2022/03/06/202203061110981.png" alt="image-20220306111019819"></p><p><strong>2）通过HTTP访问网站不安全。强烈建议您将服务器设置成要求使用HTTPS协议</strong></p><p>这个问题最好解决，同时也可能是无法解决问题：<br>服务器绑定域名，并配置SSL证书，<a href="https://cloud.tencent.com/product/cns?from=10680">域名解析</a>到服务器即可<br>但是：<br><code>国内服务器需要绑定备案的域名</code>，若无备案域名，则只能使用IP访问Nextcloud，那么该条警告无法去除。</p><p><strong>3）一些文件没有通过完整性检查. 了解如何解决该问题请查看我们的文档. (无效的文件列表… &#x2F; 重新扫描…)</strong></p><p><a href="https://imagehost.mintimate.cn/post_deployNextcloud/errorFile.png"><img src="https://imagehost.mintimate.cn/post_deployNextcloud/errorFile.png" alt="无效文件"></a></p><p><a href="https://imagehost.mintimate.cn/post_deployNextcloud/errorFile.png">无效文件</a></p><p>你的无效的文件列表和我的可能不一样，但是方法是一样的，打开<code>(无效的文件列表… / 重新扫描…)</code>这个链接：<br><a href="https://imagehost.mintimate.cn/post_deployNextcloud/errorFileDetail.png"><img src="https://imagehost.mintimate.cn/post_deployNextcloud/errorFileDetail.png" alt="无效文件详情">无效文件详情</a><br>上面提示的这些文件需要删除，所以打开nextcloud的安装地址，也就是Nginx所代理的网站更目录，删除“提示的无效文件“即可：<br><a href="https://imagehost.mintimate.cn/post_deployNextcloud/rmFile.png"><img src="https://imagehost.mintimate.cn/post_deployNextcloud/rmFile.png" alt="删除无效文件">删除无效文件</a><br>如果你使用宝塔面板，可以进入宝塔面板后台，然后使用宝塔的图形界面删除无效文件。如果你熟悉Linux命令，可以使用<code>rm</code>命令删除：<br><a href="https://imagehost.mintimate.cn/post_deployNextcloud/rmFile.png"><img src="https://imagehost.mintimate.cn/post_deployNextcloud/rmFile.png" alt="使用命令删除无效文件">使用命令删除无效文件</a></p><p><strong>4）PHP configuration option output_buffering must be disabled</strong></p><p>其实这个很好解决，PHP默认是有4096字节缓冲的。但是Nextcloud希望你关闭。如果你是自己安装的PHP，在你安装PHP的路径下，打开PHP配置文件（php.ini），将要</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">output_buffering = 4096</span><br><span class="line">Copy</span><br></pre></td></tr></table></figure><p>改为：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">; output_buffering = 4096</span><br><span class="line">Copy</span><br></pre></td></tr></table></figure><p><code>;</code>为PHP的注释符号<br>如果你是根据上文，使用宝塔安装配置的php，更简单了。在宝塔面板，依次打开：<code>软件商店</code>-<code>已安装</code>-<code>PHP7.3设置</code>-<code>配置文件</code><br>查找文本<code>output_buffering</code>，并在前面加上<code>;</code>注释:<br><a href="https://imagehost.mintimate.cn/post_deployNextcloud/addPhpConfig.png"><img src="https://imagehost.mintimate.cn/post_deployNextcloud/addPhpConfig.png" alt="加上注释"></a></p><p><a href="https://imagehost.mintimate.cn/post_deployNextcloud/addPhpConfig.png">加上注释</a></p><p>之后，可能需要重载PHP配置或者重启PHP服务才能生效。再次查看Nextcloud概述，就没有这条警告了。</p><p><strong>5）您的数据目录和文件可以从互联网直接访问。.htaccess文件不起作用。强烈建议您配置Web 服务器，以便数据目录不再可访问，或者您可以将数据目录移动到 Web服务器文档根目录。</strong></p><p>这个其实是Nginx的问题，为了进一步提升安全性，我们打开Nginx网站设置：<br><a href="https://imagehost.mintimate.cn/post_deployNextcloud/nginxConfigInBT.png"><img src="https://imagehost.mintimate.cn/post_deployNextcloud/nginxConfigInBT.png" alt="宝塔内网站Nginx设置"></a></p><p><a href="https://imagehost.mintimate.cn/post_deployNextcloud/nginxConfigInBT.png">宝塔内网站Nginx设置</a></p><p>在location内的禁止访问目录内，加入data目录。<br><a href="https://imagehost.mintimate.cn/post_deployNextcloud/addDataInNginx.png"><img src="https://imagehost.mintimate.cn/post_deployNextcloud/addDataInNginx.png" alt="加入data目录">加入data目录</a></p><p><strong>6）PHP 的安装似乎不正确，无法访问系统环境变量。getenv(“PATH”) 函数测试返回了一个空值</strong></p><p>这个处理方法很简单；如果你是自己安装配置的PHP，一般不会出现这个问题，当时如果是使用宝塔安装，一般都会有这个问题，解决方法很简单：<br>在宝塔面板，依次打开：<code>软件商店</code>-<code>已安装-PHP7.3设置</code>-<code>FPM配置文件</code><br>在文末添加：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">env[PATH] = /usr/local/bin:/usr/bin:/bin:/usr/local/php/bin</span><br><span class="line">Copy</span><br></pre></td></tr></table></figure><p><a href="https://imagehost.mintimate.cn/post_deployNextcloud/addPathToPHP.png"><img src="https://imagehost.mintimate.cn/post_deployNextcloud/addPathToPHP.png" alt="添加配置"></a></p><p><a href="https://imagehost.mintimate.cn/post_deployNextcloud/addPathToPHP.png">添加配置</a></p><p>之后，可能需要重载PHP配置或者重启PHP服务才能生效。</p><p><strong>7）您的网页服务器未正确设置以解析。更多信息请参见文档</strong></p><p>这个处理方法很简单，简单地说，设置Nginx即可。如果你的Nginx是宝塔安装的，那么打开网站的Nginx：<br><a href="https://imagehost.mintimate.cn/post_deployNextcloud/configNginxAgain.png"><img src="https://imagehost.mintimate.cn/post_deployNextcloud/configNginxAgain.png" alt="打开Nginx设置"></a></p><p><a href="https://imagehost.mintimate.cn/post_deployNextcloud/configNginxAgain.png">打开Nginx设置</a></p><p>之后追加以下内容：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rewrite /.well-known/carddav /remote.php/dav permanent;</span><br><span class="line">rewrite /.well-known/caldav /remote.php/dav permanent;</span><br><span class="line">Copy</span><br></pre></td></tr></table></figure><p><a href="https://imagehost.mintimate.cn/post_deployNextcloud/addAtTheEnd.png"><img src="https://imagehost.mintimate.cn/post_deployNextcloud/addAtTheEnd.png" alt="追加内容"></a></p><p><a href="https://imagehost.mintimate.cn/post_deployNextcloud/addAtTheEnd.png">追加内容</a></p><p>打开伪静态，加入这段：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> = /.well-known/webfinger &#123;</span><br><span class="line">     <span class="attribute">return</span> <span class="number">301</span> <span class="variable">$scheme</span>://<span class="variable">$host</span>:<span class="variable">$server_port</span>/index.php/.well-known/webfinger;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="section">location</span> = /.well-known/nodeinfo &#123;</span><br><span class="line">    <span class="attribute">return</span> <span class="number">301</span> <span class="variable">$scheme</span>://<span class="variable">$host</span>:<span class="variable">$server_port</span>/index.php/.well-known/nodeinfo;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>之后保存即可</p><h4 id="2、PHP模块问题"><a href="#2、PHP模块问题" class="headerlink" title="2、PHP模块问题"></a>2、PHP模块问题</h4><p>PHP模块问题包括：</p><ul><li>未找到PHP的”fileinfo”模块。强烈推荐启用该模块，从而获得更好的MIME类型探测结果。</li><li>内存缓存未配置，为了提升使用体验，请尽量配置内存缓存。更多信息请参见文档。</li><li>PHP的OPcache模块未载入。推荐开启获得更好的性能。</li></ul><p><a href="https://imagehost.mintimate.cn/post_deployNextcloud/PHP.png"><img src="https://imagehost.mintimate.cn/post_deployNextcloud/PHP.png" alt="PHP模块问题"></a></p><p><a href="https://imagehost.mintimate.cn/post_deployNextcloud/PHP.png">PHP模块问题</a></p><p>安装如下模块：<br><a href="https://imagehost.mintimate.cn/post_deployNextcloud/configPHP.png"><img src="https://imagehost.mintimate.cn/post_deployNextcloud/configPHP.png" alt="安装的模块-01">安装的模块-01</a><br><a href="https://imagehost.mintimate.cn/post_deployNextcloud/configPHP00.png"><img src="https://imagehost.mintimate.cn/post_deployNextcloud/configPHP00.png" alt="安装的模块-02">安装的模块-02</a></p><p>咕咕在自己的Netcup上出现了gmp扩展模块安装不上的情况，参考了宝塔论坛的教程，</p><blockquote><p>该问题是因为操作系统未安装libgmp3-dev软件包导致，建议宝塔的自动安装脚本修复该问题，自动检测这个软件包的状态和自动安装该软件包。</p></blockquote><p>具体命令是：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install libgmp3-dev -y</span><br></pre></td></tr></table></figure><p>之后再到php这边点击gmp模块安装，就能安装成功了。</p><p>同时，因为使用Redis作为缓冲，所以我们需要打开Nextcloud的配置文件，追加以下内容：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27;memcache.local&#x27; =&gt; &#x27;\OC\Memcache\Redis&#x27;,</span><br><span class="line">&#x27;redis&#x27; =&gt; array(</span><br><span class="line">  &#x27;host&#x27; =&gt; &#x27;localhost&#x27;,</span><br><span class="line">  &#x27;port&#x27; =&gt; 6379,</span><br><span class="line">  ),</span><br></pre></td></tr></table></figure><p><strong>1、数据库丢失了一些索引。由于给大的数据表添加索引会耗费一些时间，因此程序没有自动对其进行修复</strong></p><p>这个因为我之前修复了，所以我的警告和错误列表没有提示。如果你有报这条警告，直接运行：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php occ db:add-missing-indices</span><br><span class="line">Copy</span><br></pre></td></tr></table></figure><p>但是注意文件夹所属的用户组，比如：你Terminal上使用的是root或者Ubuntu用户，那么就需要用sudo提权</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo -u php occ db:add-missing-indices</span><br></pre></td></tr></table></figure><p><a href="https://imagehost.mintimate.cn/post_deployNextcloud/sudo-u.png"><img src="https://imagehost.mintimate.cn/post_deployNextcloud/sudo-u.png" alt="sudo提权运行"></a></p>]]></content>
      
      
      <categories>
          
          <category> 宝塔面板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> aapanel </tag>
            
            <tag> Nextcloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩的Docker项目】无需安装客户端！从任何地方远程访问一个或多个桌面！——部署Guacamole远程桌面网关服务</title>
      <link href="/archives/docker-install-guacamole/"/>
      <url>/archives/docker-install-guacamole/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><strong>什么是Guacamole？</strong></p><blockquote><p>Apache Guacamole 是无客户端远程桌面网关，是基于 HTML5 的远程桌面控制框架。它支持标准协议，例如 VNC，RDP和SSH。</p></blockquote><p>Guacamole是无客户端的远程桌面网关。它支持VNC，RDP和SSH等标准协议。 之所以称为无客户端，就是因为不需要插件或客户端软件。</p><p>感谢HTML5，一旦Guacamole安装在服务器上，你访问各种系统桌面就只需要一个Web浏览器。</p><img src="https://pic.loll.cc/images/2022/02/23/202202232224423.png" alt="title" style="zoom:50%;" /><p>关于 guacamole 更多的介绍，可以到这里看看：<a href="https://github.com/TelDragon/guacamole">https://github.com/TelDragon/guacamole</a></p><h2 id="一、效果展示"><a href="#一、效果展示" class="headerlink" title="一、效果展示"></a>一、效果展示</h2><p>GitHub项目地址：<a href="https://github.com/TelDragon/guacamole">https://github.com/TelDragon/guacamole</a></p><p>官网地址：<a href="https://guacamole.apache.org/">https://guacamole.apache.org/</a></p><p>Docker地址：<a href="https://hub.docker.com/r/jwetzell/guacamole">https://hub.docker.com/r/jwetzell/guacamole</a></p><h3 id="1、登录界面"><a href="#1、登录界面" class="headerlink" title="1、登录界面"></a>1、登录界面</h3><img src="https://pic.loll.cc/images/2022/02/23/202202232234699.png" alt="guacamole登录界面"  /><p>Guacamole登录后显示的页面：</p><img src="https://pic.loll.cc/images/2022/02/23/202202232234592.png" alt="guacamole登陆后的界面"  /><h3 id="2、VNC展示"><a href="#2、VNC展示" class="headerlink" title="2、VNC展示"></a>2、VNC展示</h3><p>“CentOS 7 TigerVNC”连接结果，主要测试TigerVNC,采用VNC协议</p><p><img src="https://pic.loll.cc/images/2022/02/23/202202232234617.png" alt="guacamole_VNC"></p><p>“Ubuntu x11vnc”，测试x11vnc</p><p><img src="https://pic.loll.cc/images/2022/02/23/202202232235331.png" alt="guacamloe_ubuntu"></p><h3 id="3、RDP展示"><a href="#3、RDP展示" class="headerlink" title="3、RDP展示"></a>3、RDP展示</h3><p>“Windows 10(Test)”连接的结果展示，测试RDP</p><p><img src="https://pic.loll.cc/images/2022/02/23/202202232234889.png" alt="guacamole_windows"></p><h3 id="4、SSH展示"><a href="#4、SSH展示" class="headerlink" title="4、SSH展示"></a>4、SSH展示</h3><p>“CentOS SSH”连接结果，测试SSH</p><p><img src="https://pic.loll.cc/images/2022/02/23/202202232235013.png" alt="guacamole_ssh"></p><h2 id="二、搭建环境"><a href="#二、搭建环境" class="headerlink" title="二、搭建环境"></a>二、搭建环境</h2><ul><li>服务器：腾讯香港轻量应用服务器24元&#x2F;月VPS一台（最好是选非大陆的服务器）（<a href="https://loll.cc/tx">购买链接</a>）</li><li>系统：Debian 10（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本</a> 非必需DD用原来的系统也OK）</li><li>域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>安装好Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需二选一】安装好宝塔面板，并安装好Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需二选一】安装好Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><h2 id="三、搭建视频"><a href="#三、搭建视频" class="headerlink" title="三、搭建视频"></a>三、搭建视频</h2><p>YouTube：<a href="https://youtu.be/ynhsGY8rX-c">https://youtu.be/ynhsGY8rX-c</a></p><p>哔哩哔哩【完整版本可以点击去吐槽到B站观看】：<joe-bilibili bvid="BV1ZL411K7qS"></joe-bilibili></p><h2 id="四、开始部署"><a href="#四、开始部署" class="headerlink" title="四、开始部署"></a>四、开始部署</h2><h3 id="1、搭建Docker环境"><a href="#1、搭建Docker环境" class="headerlink" title="1、搭建Docker环境"></a>1、搭建Docker环境</h3><p>参考这篇：<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">【Docker系列】不用宝塔面板，小白一样可以玩转VPS服务器！</a></p><h3 id="2、部署代码"><a href="#2、部署代码" class="headerlink" title="2、部署代码"></a>2、部署代码</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo su</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p data/docker_data/guacamole</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/guacamole</span><br><span class="line"></span><br><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><p>docker-compose.yml文件内容：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&quot;3&quot;</span></span><br><span class="line">services:</span><br><span class="line">  guacamole:</span><br><span class="line">    image: jwetzell/guacamole</span><br><span class="line">    container_name: guacamole</span><br><span class="line">    volumes:</span><br><span class="line">      - ./postgres:/config</span><br><span class="line">    ports:</span><br><span class="line">      - 8181:8080</span><br><span class="line">volumes:</span><br><span class="line">  postgres:</span><br><span class="line">    driver: <span class="built_in">local</span></span><br></pre></td></tr></table></figure><p>运行</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>在浏览器中打开Guacamole Web应用，访问</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://ip:8181</span><br></pre></td></tr></table></figure><p>默认账号：<code>guacadmin</code><br>默认密码：<code>guacadmin</code></p><p><strong>建议新建一个用户，然后删除默认的账户。</strong></p><h3 id="3、放行相关端口"><a href="#3、放行相关端口" class="headerlink" title="3、放行相关端口"></a>3、放行相关端口</h3><p>遇到访问不了，请在宝塔面板的防火墙和服务商的后台防火墙里打开对应端口。</p><h3 id="4、配置反向代理"><a href="#4、配置反向代理" class="headerlink" title="4、配置反向代理"></a>4、配置反向代理</h3><p>详情参考视频，注释掉Nginx配置文件中的这部分内容：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> <span class="regexp">~ .*\.(gif|jpg|jpeg|png|bmp|swf)$</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">expires</span>      <span class="number">30d</span>;</span><br><span class="line">    <span class="attribute">error_log</span> /dev/null;</span><br><span class="line">    <span class="attribute">access_log</span> <span class="literal">off</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">location</span> <span class="regexp">~ .*\.(js|css)?$</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">expires</span>      <span class="number">12h</span>;</span><br><span class="line">    <span class="attribute">error_log</span> /dev/null;</span><br><span class="line">    <span class="attribute">access_log</span> <span class="literal">off</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码如下：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">    <span class="attribute">proxy_pass</span> http://127.0.0.1:8181/;</span><br><span class="line">    <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">    <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5、测试连接"><a href="#5、测试连接" class="headerlink" title="5、测试连接"></a>5、测试连接</h3><h4 id="SSH"><a href="#SSH" class="headerlink" title="SSH"></a>SSH</h4><img src="https://pic.loll.cc/images/2022/02/23/202202232256956.png" alt="image-20220223225620723" style="zoom:50%;" /><img src="https://pic.loll.cc/images/2022/02/23/202202232256873.png" alt="image-20220223225642816" style="zoom:50%;" /><h4 id="RDP"><a href="#RDP" class="headerlink" title="RDP"></a>RDP</h4><img src="https://pic.loll.cc/images/2022/02/23/202202232257309.png" alt="image-20220223225726260" style="zoom:50%;" /><img src="https://pic.loll.cc/images/2022/02/23/202202232258713.png" alt="image-20220223225820640" style="zoom:50%;" /><p>返回首页，点击图标即可连接。</p><p><img src="https://pic.loll.cc/images/2022/02/23/202202232307217.png" alt="image-20220223230706078"></p><h3 id="6、高级设置——两步验证（可选）"><a href="#6、高级设置——两步验证（可选）" class="headerlink" title="6、高级设置——两步验证（可选）"></a>6、高级设置——两步验证（可选）</h3><p>docker-compose.yml文件内容：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&quot;3&quot;</span></span><br><span class="line">services:</span><br><span class="line">  guacamole:</span><br><span class="line">    image: jwetzell/guacamole</span><br><span class="line">    container_name: guacamole</span><br><span class="line">    volumes:</span><br><span class="line">      - ./postgres:/config</span><br><span class="line">    ports:</span><br><span class="line">      - 8181:8080</span><br><span class="line">    environment:</span><br><span class="line">      - EXTENSIONS=auth-totp</span><br><span class="line">volumes:</span><br><span class="line">  postgres:</span><br><span class="line">    driver: <span class="built_in">local</span></span><br></pre></td></tr></table></figure><p>建议使用的二步验证工具——Authy</p><p>不要用Google的那个Google Authenticator！</p><p>不要用Google的那个Google Authenticator！</p><p>不要用Google的那个Google Authenticator！</p><h2 id="五、更新Guacamole"><a href="#五、更新Guacamole" class="headerlink" title="五、更新Guacamole"></a>五、更新Guacamole</h2><p>参考：<a href="https://blog.laoda.de/archives/docker-images-upgrade#2%E6%9B%B4%E6%96%B0%E7%94%A8docker-compose%E9%83%A8%E7%BD%B2%E7%9A%84%E5%BA%94%E7%94%A8">【Docker系列】Docker更新容器镜像的三种方法</a></p><h3 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h3><p>进入到你docker-compose所在的文件夹下，执行</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose pull</span><br></pre></td></tr></table></figure><h3 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h3><p>重启你的容器</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d --remove-orphans</span><br></pre></td></tr></table></figure><h3 id="第三步（可选）"><a href="#第三步（可选）" class="headerlink" title="第三步（可选）"></a>第三步（可选）</h3><p>删除掉旧的镜像</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker image prune </span><br></pre></td></tr></table></figure><h2 id="六、最后"><a href="#六、最后" class="headerlink" title="六、最后"></a>六、最后</h2><p>祝大家用得开心，有问题可以去GitHub提<a href="https://github.com/TelDragon/guacamole/issues">Issues</a>，也可以在评论区互相交流探讨。</p><h2 id="七、参考资料"><a href="#七、参考资料" class="headerlink" title="七、参考资料"></a>七、参考资料</h2><p><a href="https://hub.docker.com/r/jwetzell/guacamole">https://hub.docker.com/r/jwetzell/guacamole</a></p><p><a href="https://www.youtube.com/watch?v=DGw6P5Lkj-U&t=44s">https://www.youtube.com/watch?v=DGw6P5Lkj-U&amp;t=44s</a></p><p><a href="https://www.youtube.com/watch?v=gsvS2M5knOw&t=964s">https://www.youtube.com/watch?v=gsvS2M5knOw&amp;t=964s</a></p><p><a href="https://laosu.ml/2020/10/16/%E9%83%A8%E7%BD%B2Guacamole%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E7%BD%91%E5%85%B3%E6%9C%8D%E5%8A%A1/">https://laosu.ml/2020/10/16/%E9%83%A8%E7%BD%B2Guacamole%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E7%BD%91%E5%85%B3%E6%9C%8D%E5%8A%A1/</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VNC </tag>
            
            <tag> SSH </tag>
            
            <tag> Guacamole </tag>
            
            <tag> RDP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩的Docker项目】目前最好用的网盘直链程序——AList，支持市面上几乎所有网盘！可以代替Olaindex！</title>
      <link href="/archives/docker-install-alist/"/>
      <url>/archives/docker-install-alist/</url>
      
        <content type="html"><![CDATA[<p>之前给大家介绍了Olaindex这个网盘直链程序，大家反馈还不错。</p><p><a href="https://blog.laoda.de/archives/olaindex-install">姨妈级安装教程！Olaindex——一款颜值贼高的OneDrive网盘直链项目</a></p><p>当时咕咕搭了一个，域名是：<a href="https://share.laoda.de/">https://share.laoda.de</a> 但是现在访问已经不是olaindex了，原因是这个网盘直链程序莫名其妙崩了……考虑到olaindex安装起来也比较麻烦，所以咕咕又重新搭建了一个类似的网盘直链程序，相比olaindex，它搭建更加容易（docker一条命令搞定），升级也非常简单，支持的网盘也更多，UI也非常漂亮。</p><p>废话不多说，我们就来介绍今天的主角——Alist</p><p><img src="https://pic.loll.cc/images/2022/02/21/202202211931756.png" alt="image-20220221193136576"></p><h2 id="一、项目展示"><a href="#一、项目展示" class="headerlink" title="一、项目展示"></a>一、项目展示</h2><p>GitHub项目地址：<a href="https://github.com/Xhofe/alist">https://github.com/Xhofe/alist</a></p><p>Demo：<a href="https://alist.nn.ci/">https://alist.nn.ci</a></p><p>Alist文档地址：<a href="https://alist-doc.nn.ci/en/">https://alist-doc.nn.ci/en/</a></p><h2 id="二、搭建环境"><a href="#二、搭建环境" class="headerlink" title="二、搭建环境"></a>二、搭建环境</h2><ul><li>服务器：腾讯香港轻量应用服务器24元&#x2F;月VPS一台（最好是选非大陆的服务器）（<a href="https://loll.cc/tx">购买链接</a>）</li><li>系统：Debian 10（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本</a> 非必需DD用原来的系统也OK）</li><li>域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>安装好Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>【非必需二选一】安装好宝塔面板，并安装好Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需二选一】安装好Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><h2 id="三、搭建视频"><a href="#三、搭建视频" class="headerlink" title="三、搭建视频"></a>三、搭建视频</h2><p>YouTube：<a href="https://youtu.be/6M8QoZoQ-28">https://youtu.be/6M8QoZoQ-28</a></p><p>哔哩哔哩【完整版本可以点击去吐槽到B站观看】：<joe-bilibili bvid="BV1cR4y1j7NK"></joe-bilibili></p><h2 id="四、搭建方式"><a href="#四、搭建方式" class="headerlink" title="四、搭建方式"></a>四、搭建方式</h2><p>选择适合自己的搭建方式。</p><h3 id="1、一键脚本安装"><a href="#1、一键脚本安装" class="headerlink" title="1、一键脚本安装"></a>1、一键脚本安装</h3><p>仅支持Linux-x86_64&#x2F;aarch64平台。</p><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -fsSL <span class="string">&quot;https://nn.ci/alist.sh&quot;</span> | bash -s install</span><br></pre></td></tr></table></figure><p><strong>注意：</strong></p><p>已经安装过再次执行安装会删除之前的数据，更新请使用更新命令。</p><h4 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -fsSL <span class="string">&quot;https://nn.ci/alist.sh&quot;</span> | bash -s update</span><br></pre></td></tr></table></figure><h4 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -fsSL <span class="string">&quot;https://nn.ci/alist.sh&quot;</span> | bash -s uninstall</span><br></pre></td></tr></table></figure><h4 id="自定义路径"><a href="#自定义路径" class="headerlink" title="自定义路径"></a>自定义路径</h4><p>默认安装在<code>/opt/alist</code>，要自定义安装路径，添加安装路径为第二个参数，必须是绝对路径（路径以alist结尾时直接安装到给定路径，否则会安装在给定路径alist目录下），如安装到<code>/root</code>：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line"></span><br><span class="line">curl -fsSL <span class="string">&quot;https://nn.ci/alist.sh&quot;</span> | bash -s install /root</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新</span></span><br><span class="line"></span><br><span class="line">curl -fsSL <span class="string">&quot;https://nn.ci/alist.sh&quot;</span> | bash -s update /root</span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载</span></span><br><span class="line"></span><br><span class="line">curl -fsSL <span class="string">&quot;https://nn.ci/alist.sh&quot;</span> | bash -s uninstall /root</span><br></pre></td></tr></table></figure><h3 id="2、手动搭建"><a href="#2、手动搭建" class="headerlink" title="2、手动搭建"></a>2、手动搭建</h3><p>参考文档：<a href="https://alist-doc.nn.ci/docs/install/manual">https://alist-doc.nn.ci/docs/install/manual</a></p><h3 id="3、Docker（本次使用）"><a href="#3、Docker（本次使用）" class="headerlink" title="3、Docker（本次使用）"></a>3、Docker（本次使用）</h3><p>初始密码请查看日志输出：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker logs alist</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">docker <span class="built_in">exec</span> -it alist ./alist -password</span><br></pre></td></tr></table></figure><h4 id="稳定版"><a href="#稳定版" class="headerlink" title="稳定版"></a>稳定版</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --restart=always -v /etc/alist:/opt/alist/data -p 5244:5244 --name=<span class="string">&quot;alist&quot;</span> xhofe/alist:latest</span><br></pre></td></tr></table></figure><p>对应的<code>docker-compose.yml</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">alist:</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">        <span class="attr">volumes:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;/etc/alist:/opt/alist/data&#x27;</span>    <span class="comment"># 冒号左边的地址可以自己修改</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;5244:5244&#x27;</span>      <span class="comment"># 冒号左边的端口可以自己修改</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">alist</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">&#x27;xhofe/alist:latest&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="开发版"><a href="#开发版" class="headerlink" title="开发版"></a>开发版</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --restart=always -v /etc/alist:/opt/alist/data -p 5244:5244 --name=<span class="string">&quot;alist&quot;</span> xhofe/alist:v2</span><br></pre></td></tr></table></figure><h4 id="指定版本"><a href="#指定版本" class="headerlink" title="指定版本"></a>指定版本</h4><p>具体见: <a href="https://hub.docker.com/r/xhofe/alist">https://hub.docker.com/r/xhofe/alist</a></p><p>我们此次使用<strong>稳定版</strong>安装。</p><h3 id="4、其他安装方式"><a href="#4、其他安装方式" class="headerlink" title="4、其他安装方式"></a>4、其他安装方式</h3><p>具体见:<a href="https://alist-doc.nn.ci/docs/intro">https://alist-doc.nn.ci/docs/intro</a></p><h2 id="五、开始搭建（以Docker安装为例子）"><a href="#五、开始搭建（以Docker安装为例子）" class="headerlink" title="五、开始搭建（以Docker安装为例子）"></a>五、开始搭建（以Docker安装为例子）</h2><h3 id="1、搭建Docker环境"><a href="#1、搭建Docker环境" class="headerlink" title="1、搭建Docker环境"></a>1、搭建Docker环境</h3><p>参考这篇：<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">【Docker系列】不用宝塔面板，小白一样可以玩转VPS服务器！</a></p><h3 id="2、运行安装代码"><a href="#2、运行安装代码" class="headerlink" title="2、运行安装代码"></a>2、运行安装代码</h3><p>视频安装代码：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --restart=always -v /root/data/docker_data/alist:/opt/alist/data -p 5244:5244 --name=<span class="string">&quot;alist&quot;</span> xhofe/alist:latest  <span class="comment">#可以自己保存下来，比如创建一个config.txt的文件，把这条代码复制进去保存，下次换服务器搬家之类的就很容易。</span></span><br></pre></td></tr></table></figure><p>查看密码：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker logs alist </span><br></pre></td></tr></table></figure><h3 id="3、放行相关端口"><a href="#3、放行相关端口" class="headerlink" title="3、放行相关端口"></a>3、放行相关端口</h3><p>遇到访问不了，请在宝塔面板的防火墙和服务商的后台防火墙里打开对应端口。</p><h3 id="4、配置反向代理"><a href="#4、配置反向代理" class="headerlink" title="4、配置反向代理"></a>4、配置反向代理</h3><p>详情参考视频，注释掉Nginx配置文件中的这部分内容：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$</span><br><span class="line">&#123;</span><br><span class="line">    expires      30d;</span><br><span class="line">    error_log /dev/null;</span><br><span class="line">    access_log off;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location ~ .*\.(js|css)?$</span><br><span class="line">&#123;</span><br><span class="line">    expires      12h;</span><br><span class="line">    error_log /dev/null;</span><br><span class="line">    access_log off; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码如下：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">    proxy_pass http://127.0.0.1:5244/;</span><br><span class="line">    rewrite ^/(.*)$ /<span class="variable">$1</span> <span class="built_in">break</span>;</span><br><span class="line">    proxy_redirect off;</span><br><span class="line">    proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">    proxy_set_header X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">    proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">    proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">    proxy_set_header Upgrade-Insecure-Requests 1;</span><br><span class="line">    proxy_set_header X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5、访问配置账号"><a href="#5、访问配置账号" class="headerlink" title="5、访问配置账号"></a>5、访问配置账号</h3><p>此时，输入反向代理的域名就能正常访问网站了，输入<code>docker logs alist </code>里面的密码就能正常登陆后台了。为了方便起见，建议更改一个自己能记住的密码。</p><p>6、添加本地存储</p><p>路径可以填写<code>/opt/alist/data/</code>，这样的话，就对应VPS上的<code>/root/data/docker_data/alist</code>这个安装目录了。</p><p>如果你想深一级，可以填写<code>/opt/alist/data/local</code>，这样的话，你在原来挂载的目录<code>/root/data/docker_data/alist</code>下，新建一个<code>local</code>的文件夹就可以了，然后你把自己想要展示的文件放在<code>/root/data/docker_data/alist/local</code>里即可。</p><p>其他网盘的添加方式，请参考作者的文档：<a href="https://alist-doc.nn.ci/en/">https://alist-doc.nn.ci/en/</a></p><h2 id="六、更新Alist（适用于Docker）"><a href="#六、更新Alist（适用于Docker）" class="headerlink" title="六、更新Alist（适用于Docker）"></a>六、更新Alist（适用于Docker）</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker stop alist  <span class="comment">#停止alist容器</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker <span class="built_in">rm</span> -f alist  <span class="comment">#删除alist容器，因为之前映射到了本地，所以数据不会被删除</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/alist /root/data/docker_data/alist.bak  <span class="comment">#可选，如果不放心，可以备份一下数据</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker pull xhofe/alist:latest  <span class="comment">#拉取最新的alist镜像</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker run -d --restart=always -v /root/data/docker_data/alist:/opt/alist/data -p 5244:5244 --name=<span class="string">&quot;alist&quot;</span> xhofe/alist:latest    <span class="comment">#运行安装命令，注意-v挂载的路径与原来相同</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="七、结尾"><a href="#七、结尾" class="headerlink" title="七、结尾"></a>七、结尾</h2><p>祝大家用得开心，有问题可以去GitHub提<a href="https://github.com/Xhofe/alist/issues">Issues</a>，也可以在评论区互相交流探讨。</p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GoogleDrive </tag>
            
            <tag> OneDrive </tag>
            
            <tag> 百度网盘 </tag>
            
            <tag> Alist </tag>
            
            <tag> 阿里网盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【汇总】咕咕鸽的博客文章汇总整理</title>
      <link href="/archives/posts/"/>
      <url>/archives/posts/</url>
      
        <content type="html"><![CDATA[<h2 id="博客时间线归档"><a href="#博客时间线归档" class="headerlink" title="博客时间线归档"></a>博客时间线归档</h2><p>更新不及时，建议小伙伴们可以直接看博客的归档页面。</p><p><strong>博客时间线归档：</strong> <a href="https://blog.laoda.de/archives">https://blog.laoda.de/archives</a></p><h3 id="知识科普"><a href="#知识科普" class="headerlink" title="知识科普"></a>知识科普</h3><p><a href="https://blog.laoda.de/archives/blog-choosing" title="Hexo还是Hugo？Typecho还是Wordpress？读完这篇或许你就有答案了！">Hexo还是Hugo？Typecho还是Wordpress？读完这篇或许你就有答案了！</a></p><p><a href="https://blog.laoda.de/archives/cn2" title="【VPS各种线路】如何分辨CN2 GIA与CN2 GT？">【VPS各种线路】如何分辨CN2 GIA与CN2 GT？</a></p><p><a href="https://blog.laoda.de/archives/pandownload" title="聊一聊网盘那些事儿">聊一聊网盘那些事儿</a></p><p><a href="https://blog.laoda.de/archives/cdn-ip" title="CDN加速-隐藏真实IP-复活IP">CDN加速-隐藏真实IP-复活IP</a></p><p><a href="https://blog.laoda.de/archives/bgp-iplc" title="浅谈BGP与IPLC">浅谈BGP与IPLC</a></p><p><a href="https://blog.laoda.de/archives/telegram" title="Telegram：新手指南、使用教程及频道推荐（持续更新中）">Telegram：新手指南、使用教程及频道推荐（持续更新中）</a></p><p><a href="https://blog.laoda.de/archives/dingtou" title="基金定投的魅力">基金定投的魅力</a></p><h3 id="经验分享"><a href="#经验分享" class="headerlink" title="经验分享"></a>经验分享</h3><p><a href="https://blog.laoda.de/archives/oracle-always-free-vps" title="千字长文！甲骨文永久免费小鸡折腾记录📝">千字长文！甲骨文永久免费小鸡折腾记录📝</a></p><h3 id="黑科技"><a href="#黑科技" class="headerlink" title="黑科技"></a>黑科技</h3><p><a href="https://blog.laoda.de/archives/vps-script" title="新买了一台服务器“必须”要做的6件小事">新买了一台服务器“必须”要做的6件小事</a></p><p><a href="https://blog.laoda.de/archives/666clouds" title="新拿到手一台服务器，怎么样给它做个全方位的“体检”？">新拿到手一台服务器，怎么样给它做个全方位的“体检”？</a></p><p><a href="https://blog.laoda.de/archives/vps-swap" title="小内存服务器生存指南——SWAP虚拟内存">小内存服务器生存指南——SWAP虚拟内存</a></p><p><a href="https://blog.laoda.de/archives/xui" title="可以与宝塔共存的一个“魔法”服务器状态监控应用——xui ">可以与宝塔共存的一个“魔法”服务器状态监控应用——xui</a></p><p><a href="https://blog.laoda.de/archives/trojan" title="Trojan，从未如此简单！">Trojan，从未如此简单！</a></p><p><a href="https://blog.laoda.de/archives/bt-to-aapanel" title="【转载】宝塔面板7.8无缝转为宝塔国际版aapanel，附宝塔7.8降级为宝塔7.7">【转载】宝塔面板7.8无缝转为宝塔国际版aapanel，附宝塔7.8降级为宝塔7.7</a></p><p><a href="https://blog.laoda.de/archives/how-to-secure-a-linux-server" title="保护好你的小鸡！保姆级服务器安全教程！">保护好你的小鸡！保姆级服务器安全教程！</a></p><p><a href="https://blog.laoda.de/archives/dd-windows-server" title="Linux玩腻了？来DD一个Windows系统玩玩！">Linux玩腻了？来DD一个Windows系统玩玩！</a></p><p><a href="https://blog.laoda.de/archives/dd" title="服务器自带的系统不喜欢？那就自己DD一个船新的系统吧！">服务器自带的系统不喜欢？那就自己DD一个船新的系统吧！</a></p><p><a href="https://blog.laoda.de/archives/aapanel-onedrive-api-e5-renew" title="修改宝塔OneDrive插件API为自己的E5续命">修改宝塔OneDrive插件API为自己的E5续命</a></p><p> <a href="https://blog.laoda.de/archives/debian10-to-debian11" title="如何从 Debian 10 升级到 Debian 11">如何从 Debian 10 升级到 Debian 11</a></p><p><a href="https://blog.laoda.de/archives/make-vps-bigger" title="【保姆级教程】小鸡变身大盘鸡！VPS使用Rclone挂载OneDrive、Google Drive网盘！">【保姆级教程】小鸡变身大盘鸡！VPS使用Rclone挂载OneDrive、Google Drive网盘！</a></p><p><a href="https://blog.laoda.de/archives/buyvm-mount" title="如何给BuyVM添加存储块？">如何给BuyVM添加存储块？</a></p><p><a href="https://blog.laoda.de/archives/buyvm-ipv6" title="如何给BuyVM添加IPv6？">如何给BuyVM添加IPv6？</a></p><p><a href="https://blog.laoda.de/archives/autopost-to-twitter" title="利用 IFTTT 实现 Blog 更新时自动发推">利用 IFTTT 实现 Blog 更新时自动发推</a></p><p><a href="https://blog.laoda.de/archives/m1homebrew" title="M1 芯片 Mac 上 Homebrew 安装">M1 芯片 Mac 上 Homebrew 安装</a></p><p><a href="https://blog.laoda.de/archives/raspberrypi-frp" title="【保姆级】树莓派FRP教程">【保姆级】树莓派FRP教程</a></p><p><a href="https://blog.laoda.de/archives/raspberrypi-starting" title="【保姆级教程】树莓派入门,没有网线？没有显示器？一样可以玩转树莓派！">【保姆级教程】树莓派入门,没有网线？没有显示器？一样可以玩转树莓派！</a></p><h3 id="基于Docker的项目汇总"><a href="#基于Docker的项目汇总" class="headerlink" title="基于Docker的项目汇总"></a>基于Docker的项目汇总</h3><p><a href="https://blog.laoda.de/archives/docker-install-alist">【好玩的Docker项目】目前最好用的网盘直链程序——AList，支持市面上几乎所有网盘！可以代替Olaindex！</a></p><p><a href="https://blog.laoda.de/archives/hello-docker" title="【Docker系列】不用宝塔面板，小白一样可以玩转VPS服务器！">【Docker系列】不用宝塔面板，小白一样可以玩转VPS服务器！</a></p><p><a href="https://blog.laoda.de/archives/nginxproxymanager-access-lists" title="【Docker系列】让网站更安全！开启NginxProxyManager网站访问登陆限制功能">【Docker系列】让网站更安全！开启NginxProxyManager网站访问登陆限制功能</a></p><p><a href="https://blog.laoda.de/archives/nginxproxymanager-ssl-wildcardcerts-for-your-entire-domain" title="【Docker系列】反向代理神器NginxProxyManager——通配符SSL证书申请">【Docker系列】反向代理神器NginxProxyManager——通配符SSL证书申请</a></p><p><a href="https://blog.laoda.de/archives/nginxproxymanager" title="【Docker系列】一个反向代理神器——Nginx Proxy Manager">【Docker系列】一个反向代理神器——Nginx Proxy Manager</a></p><p><a href="https://blog.laoda.de/archives/umami" title="【好玩的Docker项目】搭建一个小而美的网站流量监控——Umami">【好玩的Docker项目】搭建一个小而美的网站流量监控——Umami</a></p><p><a href="https://blog.laoda.de/archives/ward-serverstatus-install" title="【好玩的Docker项目】搭建两个专属自己的服务器监控——Ward &amp;&amp; ServerStatus">【好玩的Docker项目】搭建两个专属自己的服务器监控——Ward &amp;&amp; ServerStatus</a></p><p><a href="https://blog.laoda.de/archives/uptimekuma-install" title="【好玩的Docker项目】搭建一个专属自己的网站监控——Uptime Kuma">【好玩的Docker项目】搭建一个专属自己的网站监控——Uptime Kuma</a></p><p><a href="https://blog.laoda.de/archives/navidrome" title="【好玩的Docker项目】搭建一个完全自由的音乐播放软件————Navidrome 随时随地！想听就听！">【好玩的Docker项目】搭建一个完全自由的音乐播放软件————Navidrome 随时随地！想听就听！</a></p><p><a href="https://blog.laoda.de/archives/portainer" title="【Docker系列】Docker可视化面板——Portainer">【Docker系列】Docker可视化面板——Portainer</a></p><p><a href="https://blog.laoda.de/archives/docker-install-qbittorrent" title="【好玩的Docker项目】10分钟搭建你专属的下载神器——qbittorrent">【好玩的Docker项目】10分钟搭建你专属的下载神器——qbittorrent</a></p><p><a href="https://blog.laoda.de/archives/docker-install-wiz" title="【好玩的Docker项目】10分钟搭建你专属的笔记本——功能更全的为知笔记">【好玩的Docker项目】10分钟搭建你专属的笔记本——功能更全的为知笔记</a></p><p><a href="https://blog.laoda.de/archives/docker-install-minimalist" title="【好玩的Docker项目】搭建一个简洁的记事本——minimalist-web-notepad">【好玩的Docker项目】搭建一个简洁的记事本——minimalist-web-notepad</a></p><p><a href="https://blog.laoda.de/archives/bitwarden-docker-install" title="【保姆级教程】利用宝塔面板+Docker搭建一个优秀的密码管理器——Bitwarden">【保姆级教程】利用宝塔面板+Docker搭建一个优秀的密码管理器——Bitwarden</a></p><p><a href="https://blog.laoda.de/archives/docker-install-koel" title="利用Docker自建个人音乐流服务器面板——koel">利用Docker自建个人音乐流服务器面板——koel</a></p><p><a href="https://blog.laoda.de/archives/tinytinyrss" title="【服务器能干什么】二十分钟搭建一个属于自己的RSS服务">【服务器能干什么】二十分钟搭建一个属于自己的RSS服务</a></p><h3 id="Docker小知识"><a href="#Docker小知识" class="headerlink" title="Docker小知识"></a>Docker小知识</h3><p><a href="https://blog.laoda.de/archives/docker-images-upgrade" title="【Docker系列】Docker更新容器镜像的三种方法">【Docker系列】Docker更新容器镜像的三种方法</a></p><p><a href="https://blog.laoda.de/archives/backup-docker" title="如何备份Docker数据？（以Bitwarden为例）">如何备份Docker数据？（以Bitwarden为例）</a></p><h3 id="基于宝塔面板的项目汇总"><a href="#基于宝塔面板的项目汇总" class="headerlink" title="基于宝塔面板的项目汇总"></a>基于宝塔面板的项目汇总</h3><p><a href="https://blog.laoda.de/archives/h5ai-yes" title="【如何优雅地写博客】利用h5ai自建一个视频床！">【如何优雅地写博客】利用h5ai自建一个视频床！</a></p><p><a href="https://blog.laoda.de/archives/chevereto-picgo-typora" title="【如何优雅地写博客】自建一个永不裂开的图床！">【如何优雅地写博客】自建一个永不裂开的图床！</a></p><p><a href="https://blog.laoda.de/archives/markdown-yes" title="【如何优雅地写博客】用好Markdown语法！">【如何优雅地写博客】用好Markdown语法！</a></p><p><a href="https://blog.laoda.de/archives/aria2-rclone-filebrowser" title="手把手教你搭建私人离线下载神器Aria2，搭配Rclone+Filebrowser自动上传至网盘">手把手教你搭建私人离线下载神器Aria2，搭配Rclone+Filebrowser自动上传至网盘</a></p><p><a href="https://blog.laoda.de/archives/flarum-install" title="宝塔 Linux 面板安装一个高大上的论坛程序—— Flarum">宝塔 Linux 面板安装一个高大上的论坛程序—— Flarum</a></p><p><a href="https://blog.laoda.de/archives/cloudreve-install" title="告别百度网盘，安装自己的专属网盘——Cloudreve，不限制下载速度！">告别百度网盘，安装自己的专属网盘——Cloudreve，不限制下载速度！</a></p><p><a href="https://blog.laoda.de/archives/veno-file-manager" title="一个极简且美观的多用户网盘程序：Veno-File-Manager-V3-4-8">一个极简且美观的多用户网盘程序：Veno-File-Manager-V3-4-8</a></p><p><a href="https://blog.laoda.de/archives/typecho-building" title="【从0开始搭建个人博客】自建服务器，搭建一个typecho博客">【从0开始搭建个人博客】自建服务器，搭建一个typecho博客</a></p><p><a href="https://blog.laoda.de/archives/rclone-onedrive" title="利用rclone自动上传aria2下载的文件到onedrive或者googledrive">利用rclone自动上传aria2下载的文件到onedrive或者googledrive</a></p><p><a href="https://blog.laoda.de/archives/hexo-building" title="将Hexo部署到阿里云轻量服务器（保姆级教程）">将Hexo部署到阿里云轻量服务器（保姆级教程）</a></p><p><a href="https://blog.laoda.de/archives/yourls-building" title="【服务器能干什么】搭建一个短网址平台，可以查看数据详情！">【服务器能干什么】搭建一个短网址平台，可以查看数据详情！</a></p><p><a href="https://blog.laoda.de/archives/olaindex-install" title="姨妈级安装教程！Olaindex——一款颜值贼高的OneDrive网盘直链项目">姨妈级安装教程！Olaindex——一款颜值贼高的OneDrive网盘直链项目</a></p><h3 id="VPS测评"><a href="#VPS测评" class="headerlink" title="VPS测评"></a>VPS测评</h3><p><a href="https://blog.laoda.de/archives/spartanhost" title="【VPS测评】斯巴达 AMD 黑五31刀测评">【VPS测评】斯巴达 AMD 黑五31刀测评</a></p><p><a href="https://blog.laoda.de/archives/olink" title="【VPS测评】Olink 法兰克福三网9929测评">【VPS测评】Olink 法兰克福三网9929测评</a></p><h3 id="好物推荐"><a href="#好物推荐" class="headerlink" title="好物推荐"></a>好物推荐</h3><p><a href="https://blog.laoda.de/archives/namesilo" title="【服务器、域名购买】Namesilo优惠码和域名解析教程（附带服务器购买推荐和注意事项）">【服务器、域名购买】Namesilo优惠码和域名解析教程（附带服务器购买推荐和注意事项）</a></p><p><a href="https://blog.laoda.de/archives/ss" title="安利一个我正在使用的呆梨">安利一个我正在使用的呆梨</a></p><p><a href="https://blog.laoda.de/archives/markdown01" title="比Word香十倍的文字编辑工具——MarkDown，学习一次，收益一生！">比Word香十倍的文字编辑工具——MarkDown，学习一次，收益一生！</a></p><p><a href="https://blog.laoda.de/archives/vps-recommad" title="【高性价比VPS推荐】——那些年，我用过的VPS们（持续更新中）">【高性价比VPS推荐】——那些年，我用过的VPS们（持续更新中）</a></p><p><a href="https://blog.laoda.de/archives/productivity" title="好用的网站推荐">好用的网站推荐</a></p><p><a href="https://blog.laoda.de/archives/websites" title="推荐几个比较给力的网站，看看有没有你喜欢的">推荐几个比较给力的网站，看看有没有你喜欢的</a></p><p><a href="https://blog.laoda.de/archives/vps-choose" title="VPS服务器选购不完全指南">VPS服务器选购不完全指南</a></p><p><a href="https://blog.laoda.de/archives/cheap-vps-racknerd" title="【国外便宜高性价比的VPS 推荐】——RackNerd">【国外便宜高性价比的VPS 推荐】——RackNerd</a></p><p><a href="https://blog.laoda.de/archives/cheap-vps-cloudcone" title="【国外便宜高性价比的VPS 推荐】——CloudCone">【国外便宜高性价比的VPS 推荐】——CloudCone</a></p><p><a href="https://blog.laoda.de/archives/mac-app-2021" title="【2021年终盘点】今年用的最多的10款Mac应用">【2021年终盘点】今年用的最多的10款Mac应用</a></p><p><a href="https://blog.laoda.de/archives/edge-chrome-browser-plug-in" title="【2021年终盘点】今年用的最多的10款浏览器插件">【2021年终盘点】今年用的最多的10款浏览器插件</a></p><p><a href="https://blog.laoda.de/archives/bandwagonhost" title="【高端VPS推荐】BandwagonHost(搬瓦工) - 美国/日本/香港 CN2 GIA 高速 VPS 推荐与最新优惠码（循环优惠 12.22%）">【高端VPS推荐】BandwagonHost(搬瓦工) - 美国&#x2F;日本&#x2F;香港 CN2 GIA 高速 VPS 推荐与最新优惠码（循环优惠 12.22%）</a></p><p><a href="https://blog.laoda.de/archives/racknerd-2021-christmas-sale">【双旦特价活动】Racknerd2022年促销 VPS最低$9.89 &#x2F;年 (续费同价)</a></p><p><a href="https://blog.laoda.de/archives/cloudcone-2021-christmas-sale" title="【圣诞特价活动】Cloudcone2021年的圣诞促销">【圣诞特价活动】Cloudcone2021年的圣诞促销</a></p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文章汇总 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【2021年终盘点】今年用的最多的10款Mac应用</title>
      <link href="/archives/mac-app-2021/"/>
      <url>/archives/mac-app-2021/</url>
      
        <content type="html"><![CDATA[<p>分享咕咕今年用的最多的10款Mac应用。</p><p>排名不分先后，涉及各个方面的应用。</p><p>大家有好用的软件也欢迎在评论区留言分享！</p><p>部分软件下载地址：<a href="https://share.laoda.de/2/main/software/Mac">https://share.laoda.de/2/main/software/Mac</a></p><h2 id="Mac篇"><a href="#Mac篇" class="headerlink" title="Mac篇"></a>Mac篇</h2><blockquote><p>以下10款应用大多数为免费应用，收费的会标明。<br>部分收费软件的破解版可以到这边下载 <a href="https://share.laoda.de,如果觉得好用,可以支持正版./">https://share.laoda.de，如果觉得好用，可以支持正版。</a></p></blockquote><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><p>YouTube：<a href="https://youtu.be/Wy18eCR-W24">https://youtu.be/Wy18eCR-W24</a></p><p>哔哩哔哩：</p><p><a href="https://www.bilibili.com/BV1LP4y1P7uR">https://www.bilibili.com/BV1LP4y1P7uR</a></p><h3 id="FDM"><a href="#FDM" class="headerlink" title="FDM"></a>FDM</h3><p>适用于全平台的下载神器。</p><img src="https://pic.laoda.de/2022/01/27/bced5856ec455.png" alt="image-20220127153853359" style="zoom:33%;" /><h3 id="Imovie"><a href="#Imovie" class="headerlink" title="Imovie"></a>Imovie</h3><p>Mac自带的轻量化剪辑软件</p><img src="https://pic.laoda.de/2022/01/27/fe98770c8e746.png" alt="image-20220127153948161" style="zoom:33%;" /><h3 id="Joplin"><a href="#Joplin" class="headerlink" title="Joplin"></a>Joplin</h3><p>本地使用非常方便的笔记记录软件</p><img src="https://pic.laoda.de/2022/01/27/857c1fa15b987.png" alt="image-20220127154008475" style="zoom:33%;" /><h3 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a>Typora</h3><p>所见即所得的Markdown编辑器。</p><p>注：新版本开始收费了，后续会把之前各个版本的下载地址帖过来，大家可以如果不想付费，可以使用旧版本。</p><img src="https://pic.laoda.de/2022/01/27/fe2a42c633e96.png" alt="image-20220127154030607" style="zoom:33%;" /><h3 id="PicGo"><a href="#PicGo" class="headerlink" title="PicGo"></a>PicGo</h3><p>图床管理小插件，可以支持多个云存储服务，支持接入常见的chereveto和lsky图床API，于Typora搭配使用可以大大提高生产力。</p><img src="https://pic.laoda.de/2022/01/27/6704dedd09279.png" alt="image-20220127154048864" style="zoom:33%;" /><h3 id="超级右键"><a href="#超级右键" class="headerlink" title="超级右键"></a>超级右键</h3><p>把Mac的右键变得和Windows类似。</p><img src="https://pic.laoda.de/2022/01/27/d3df9c9390810.png" alt="image-20220127154105336" style="zoom:33%;" /><h3 id="YesPlayMusic"><a href="#YesPlayMusic" class="headerlink" title="YesPlayMusic"></a>YesPlayMusic</h3><p>音乐播放器，支持自行搭建</p><img src="https://pic.laoda.de/2022/01/27/81b37bcdb8508.png" alt="image-20220127154125809" style="zoom:33%;" /><h3 id="Downie"><a href="#Downie" class="headerlink" title="Downie"></a>Downie</h3><p>好用的视频提取软件。不过是收费的，破解版本可以到这边下载试用，<a href="https://share.laoda.de/">https://share.laoda.de</a></p><img src="https://pic.laoda.de/2022/01/27/348c26a7e7172.png" alt="image-20220127154143153" style="zoom:33%;" /><h3 id="Dropover"><a href="#Dropover" class="headerlink" title="Dropover"></a>Dropover</h3><p>文件移动小帮手。</p><img src="https://pic.laoda.de/2022/01/27/a7bb92708f73c.png" alt="image-20220127154203372" style="zoom:33%;" /><h3 id="Spectacle"><a href="#Spectacle" class="headerlink" title="Spectacle"></a>Spectacle</h3><p>Mac应用分屏神器。</p><img src="https://pic.laoda.de/2022/01/27/e9607d7b7b4df.png" alt="image-20220127154230660" style="zoom:33%;" /><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>分了两篇来讲，上一篇的10款浏览器插件应用的视频和文章在这里。</p><p>提前祝大家新年快乐！虎虎生威！</p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac应用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【2021年终盘点】今年用的最多的10款浏览器插件</title>
      <link href="/archives/edge-chrome-browser-plug-in/"/>
      <url>/archives/edge-chrome-browser-plug-in/</url>
      
        <content type="html"><![CDATA[<p>分享咕咕今年用的最多的10款浏览器插件。</p><p>排名不分先后，涉及各个方面的应用。</p><p>大家有好用的插件也欢迎在评论区留言分享！</p><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><p>YouTube：<a href="https://youtu.be/ZpTydUSBwCA">https://youtu.be/ZpTydUSBwCA</a></p><p>哔哩哔哩：<a href="https://www.bilibili.com/BV1zF411J7fA">https://www.bilibili.com/BV1zF411J7fA</a></p><h2 id="浏览器扩展篇"><a href="#浏览器扩展篇" class="headerlink" title="浏览器扩展篇"></a>浏览器扩展篇</h2><blockquote><p>注意：</p><p>1、以下介绍的均为在Google Chrome浏览器适用的小插件，部分插件可能Microsoft Edge浏览器不适用。</p><p>2、无法访问Chrome扩展商店的童鞋可以在这边下载相应插件的离线安装包：<a href="https://crxdl.com/">https://crxdl.com/</a>  （亲测Microsoft Edge浏览器可以成功下载，Google Chrome浏览器下载安装会报错）</p></blockquote><h3 id="GitHub加速"><a href="#GitHub加速" class="headerlink" title="GitHub加速"></a>GitHub加速</h3><img src="https://pic.laoda.de/2022/01/27/0ff3d676d0d8c.png" alt="image-20220127153305870" style="zoom: 33%;" /><p>国内Github下载很慢，用上了这个插件后，下载速度嗖嗖嗖的<del>！’<br>国内下载很慢，用上了这个插件后，下载速度嗖嗖嗖的</del>！</p><p>地址：<a href="https://github.com/fhefh2015/Fast-GitHub">https://github.com/fhefh2015/Fast-GitHub</a></p><h3 id="全平台下载神器——Free-Download-Manager"><a href="#全平台下载神器——Free-Download-Manager" class="headerlink" title="全平台下载神器——Free Download Manager"></a>全平台下载神器——Free Download Manager</h3><img src="https://pic.laoda.de/2022/01/25/29b933eb61bf5.png" alt="image-20220125160138743" style="zoom:33%;" /><p>Free Download Manager integration with browser<br>It’s an official Google Chrome extension by Free Download Manager developers. The sole purpose of this extension is integration with Free Download Manager. FDM is a fast and reliable download manager and accelerator that improves your experience with downloads and helps you organize them in an easy manner.</p><p>If you want to help us make Free Download Manager (or this Chrome extension) better - you are always welcome on our forum where you can post bug reports, feature suggestions, and ideas, as well as get support for any issues you stumbled upon with FDM: <a href="https://www.freedownloadmanager.org/board/">https://www.freedownloadmanager.org/board/</a></p><p>Note: Windows, Mac and Linux! Requires FDM to be installed to work properly.</p><h3 id="密码管理器——Bitwarden"><a href="#密码管理器——Bitwarden" class="headerlink" title="密码管理器——Bitwarden"></a>密码管理器——Bitwarden</h3><img src="https://pic.laoda.de/2022/01/27/78b6b99f32a7f.png" alt="image-20220127153705120" style="zoom:33%;" /><p>Bitwarden 是一个安全且免费的跨平台密码管理器。<br>Bitwarden 简单易用，可以安全地存储您所有的登录用户名和密码，并能在多台设备之间同步。</p><h3 id="AdGuard-广告拦截器"><a href="#AdGuard-广告拦截器" class="headerlink" title="AdGuard 广告拦截器"></a>AdGuard 广告拦截器</h3><img src="https://pic.laoda.de/2022/01/27/aae24d1d596ed.png" alt="image-20220127153342337" style="zoom:33%;" /><p>一款无与伦比的广告拦截扩展，用以对抗各式广告与弹窗。可以拦截 Facebook、YouTube 和其它所有网站的广告。<br>AdGuard 广告拦截器可有效的拦截所有网页上的所有类型的广告，甚至是在 Facebook、Youtube 以及其他万千网站上的广告！</p><h3 id="久坐提醒——PostureMinder"><a href="#久坐提醒——PostureMinder" class="headerlink" title="久坐提醒——PostureMinder"></a>久坐提醒——PostureMinder</h3><img src="https://pic.laoda.de/2022/01/27/9d989414102d4.png" alt="image-20220127153421119" style="zoom:33%;" /><p>Reminds you to sit up straight with pop-up notifications at specified time intervals.<br>Sitting up straight while at your desk can make a big difference to your posture and overall health.</p><h3 id="图片搜索神器——Search-by-Image"><a href="#图片搜索神器——Search-by-Image" class="headerlink" title="图片搜索神器——Search by Image"></a>图片搜索神器——Search by Image</h3><img src="https://pic.laoda.de/2022/01/27/b816f9eb19517.png" alt="image-20220127153500048" style="zoom:33%;" /><p>A powerful reverse image search tool, with support for various search engines, such as Google, Bing, Yandex, Baidu and TinEye.<br>Search by Image is a browser extension that makes effortless reverse image searches possible, and comes with support for more than 30 search engines.</p><h3 id="音乐播放器——Listen-1"><a href="#音乐播放器——Listen-1" class="headerlink" title="音乐播放器——Listen 1"></a>音乐播放器——Listen 1</h3><img src="https://pic.laoda.de/2022/01/27/5ef96c35b671f.png" alt="image-20220127153539961" style="zoom:33%;" /><p>One for all free music in China<br>Listen1是一款支持多平台的音乐播放器。</p><p>只安装Listen1插件，就能收听多个音乐平台的免费音乐。同时，你还可以搜索多个平台的音乐和歌单，并且创造属于你自己的歌单内容。</p><p>搜歌，听歌，就用 Listen1。</p><h3 id="字幕翻译——YouTube™-双字幕"><a href="#字幕翻译——YouTube™-双字幕" class="headerlink" title="字幕翻译——YouTube™ 双字幕"></a>字幕翻译——YouTube™ 双字幕</h3><img src="https://pic.laoda.de/2022/01/25/77e1b9c6f53c8.png" alt="image-20220125155931337" style="zoom:33%;" /><p>自动切换到本地语言，双语字幕，字幕下载，字幕配音，自定义字幕样式。<br>使用介绍</p><p>默认字幕：<br>设置翻译语言。</p><p>单字幕：<br>在双语字幕和单字幕之间切换。</p><p>字幕下载：<br>下载视频字幕和翻译字幕，支持.txt，.srt。</p><p>自定义字幕样式：<br>字号，字体，颜色，背景，顺序，文字描边，间距。<br>单字幕和双字幕可以分别设置。<br>可关闭自定义样式。</p><h3 id="沙拉查词-聚合词典划词翻译"><a href="#沙拉查词-聚合词典划词翻译" class="headerlink" title="沙拉查词-聚合词典划词翻译"></a>沙拉查词-聚合词典划词翻译</h3><img src="https://pic.laoda.de/2022/01/27/8debf8a874b40.png" alt="image-20220127153735101" style="zoom:33%;" /><p>Saladict 沙拉查词是一款专业划词翻译扩展，为交叉阅读而生。大量权威词典涵盖中英日韩法德西语，支持复杂的划词操作、网页翻译、生词本与 PDF 浏览。<br>用爽了欢迎留个好评帮助更多人发现这个扩展！打赏咖啡的朋友们抱歉无法回复，在此感谢了！<br>Saladict 7 正式发布！Firefox 同步发布！</p><h3 id="Chrome插件管理器——SimpleExtManager"><a href="#Chrome插件管理器——SimpleExtManager" class="headerlink" title="Chrome插件管理器——SimpleExtManager"></a>Chrome插件管理器——SimpleExtManager</h3><img src="https://pic.laoda.de/2022/01/25/2608d985d05d8.png" alt="image-20220125155559949" style="zoom: 33%;" /><p>这简单的菜单可让您方便的管理瀏覽器的扩展程序。<br>Another addition to the ‘Simple’ series.<br>This time its an extension manager.</p><p>功能包括：</p><ul><li>通过弹出菜单来启用&#x2F;禁用，访问选项和卸载扩展</li><li>定制弹出菜单容貌</li><li>制作扩展群组</li><li>通过弹出菜单和右键菜单启用&#x2F;禁用扩展群组</li><li>启用活动页面</li></ul><h3 id="附：油猴脚本"><a href="#附：油猴脚本" class="headerlink" title="附：油猴脚本"></a>附：油猴脚本</h3><p>神器，结合视频，自行研究。</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>提前祝大家新年快乐！虎虎生风！</p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 谷歌浏览器 </tag>
            
            <tag> Chrome </tag>
            
            <tag> 浏览器插件 </tag>
            
            <tag> 谷歌浏览器插件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩的Docker项目】搭建一个完全自由的音乐播放软件————Navidrome 随时随地！想听就听！</title>
      <link href="/archives/navidrome/"/>
      <url>/archives/navidrome/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>随着国内版权意识的提高，现在想听一首歌曲，往往我们可能要切换3-4个APP——网易云音乐、QQ音乐、咪咕音乐……切换起来很麻烦，有的APP就算你买了VIP服务，下载的歌曲还是加密的，一旦VIP到期后某些歌你还听不了，非常蛋疼。</p><p>最近被朋友推荐入了苹果自己家的音乐APP，感觉还不错，但是搜索特定的几个歌手的歌曲时候，也发现搜索不到（没错，就是南京小李的）</p><p>正好自己目前在捣鼓PT，手握几个大型PT站，资源方面不成问题，于是乎就又想着自建一个类似云音乐的服务，这样随时随地在任何地方都能播放我想听的任何歌曲，再也不用担心歌曲被下架了。</p><p>为什么说“又”，因为之前就折腾过一个类似的服务——<a href="https://blog.laoda.de/archives/docker-install-koel">利用Docker自建个人音乐流服务器面板——koel</a> 因为有小伙伴反映这个汉化<del>做的不是很好</del>（没有汉化），所以我也一直在寻找别的代替品，正好前俩天发现一个非常好的项目——Navidrome，使用Go语言开发，内存占用很低，界面简单，而且还兼容Subsonic API，就搞了一个玩玩。</p><h2 id="Navidrome界面图片展示"><a href="#Navidrome界面图片展示" class="headerlink" title="Navidrome界面图片展示"></a>Navidrome界面图片展示</h2><img src="https://pic.loll.cc/images/2022/01/15/202201151140232.png" alt="image-20220115114001097" style="zoom:67%;" /><p><img src="https://pic.loll.cc/images/2022/01/15/202201151230016.png" alt="image-20220115123006851"></p><img src="https://pic.loll.cc/images/2022/01/15/202201151140697.png" alt="image-20220115114025610" style="zoom:67%;" /><p><img src="https://pic.loll.cc/images/2022/01/15/202201151143704.png" alt="image-20220115114325583"></p><p><img src="https://pic.loll.cc/images/2022/01/15/202201151140627.png" alt="image-20220115114059589"></p><img src="https://pic.loll.cc/images/2022/01/15/202201151113105.png" alt="fcdcd04f251544c0a7f9e87ba96fa3bf" style="zoom:33%;" /><img src="https://pic.loll.cc/images/2022/01/15/202201151114288.png" alt="e131bc6663d04f07945735e1d67a9c65" style="zoom:33%;" /><img src="https://pic.loll.cc/images/2022/01/15/202201151114175.png" alt="76d0466e07f141aeb43e3ef58a58f799" style="zoom:33%;" /><h2 id="Navidrome优缺点"><a href="#Navidrome优缺点" class="headerlink" title="Navidrome优缺点"></a>Navidrome优缺点</h2><p>先来说说优点：</p><ul><li>几乎可以播放任何音频格式</li><li>多用户，每个用户都有自己的播放次数、播放列表、收藏夹等。</li><li>资源使用率非常低。例如：300GB的资料库（约29000首歌曲），使用不到50MB的内存。（<a href="https://www.xiaoz.me/archives/16527">@小z</a>反馈待机状态40Mb左右）</li><li>界面简洁，支持中文</li><li>支持Subsonic API，也就是说Subsonic能用的客户端，Navidrome都能用</li></ul><blockquote><p>iOS: play:Sub, substreamer, Amperfy, iSub<br>Android: DSub, Subtracks, subreamer, Ultrasonic, Audinaut<br>网页端: Subplayer, Airsonic Refix, Aurial, Jamstash, Subfire<br>桌面端: Sublime Music（Linux）和Sonixd（Windows&#x2F;Linux&#x2F;MacOS）<br>命令行: Jellycli（Windows&#x2F;Linux）和STMP（Linux&#x2F;MacOS）</p></blockquote><p>【2022年5月15日更新】桌面版本强烈推荐：<strong>sonixd</strong></p><p>下载地址：<a href="https://github.com/jeffvli/sonixd/releases">https://github.com/jeffvli/sonixd/releases</a></p><img src="https://img.laoda.de/i/2022/05/15/r53kvl-0.webp" style="zoom:33%;" /><p>界面非常简洁大气！</p><p>再来说说缺点：</p><ul><li>暂时没找到自动获取歌词的方法</li><li>不支持通过界面上传&#x2F;删除歌曲（作者说的是为了安全考虑，不过我们会后面会介绍如何上传&#x2F;删除）</li></ul><p>官方示例网站：</p><p><a href="https://www.navidrome.org/demo/">https://www.navidrome.org/demo/</a></p><p><a href="https://demo.navidrome.org/app/">https://demo.navidrome.org/app/</a></p><h2 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h2><ul><li>服务器：腾讯云轻量应用服务器（<a href="https://loll.cc/tx">购买链接</a>）</li><li>系统：Debian 10（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本 </a> 非必需DD用原来的系统也OK）</li><li>域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a>  <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>安装好Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>安装好Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><h2 id="开始搭建"><a href="#开始搭建" class="headerlink" title="开始搭建"></a>开始搭建</h2><p>YouTube：<a href="https://youtu.be/7XtLD8y8EF0">https://youtu.be/7XtLD8y8EF0</a></p><p>哔哩哔哩：</p><p><joe-bilibili bvid="BV16T4y117Fq"></joe-bilibili></p><p>采用docker-compose来搭建。</p><p>官方的配置有一个小问题，不能通过Web页面上传音乐，上传这个问题后面会介绍一个临时解决办法（感谢<a href="https://lala.im/7660.html">@lala</a>）。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt update -y  <span class="comment">## 升级包</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p ~/data/docker_data/navidrome   <span class="comment">## 创建文件夹</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ~/data/docker_data/navidrome   <span class="comment">## 进入文件夹</span></span><br><span class="line"></span><br><span class="line">nano docker-compose.yml   <span class="comment">## 创建docker-compose</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>dockerhub的docker-compose配置样例（<strong>我们不用这个</strong>）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># This is just an example. Customize it to your needs.</span></span><br><span class="line"></span><br><span class="line">version: <span class="string">&quot;3&quot;</span></span><br><span class="line">services:</span><br><span class="line">  navidrome:</span><br><span class="line">    image: deluan/navidrome:latest</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">&quot;4533:4533&quot;</span></span><br><span class="line">    environment:</span><br><span class="line">      <span class="comment"># Optional: put your config options customization here. Examples:</span></span><br><span class="line">      ND_SCANSCHEDULE: 1h</span><br><span class="line">      ND_LOGLEVEL: info  </span><br><span class="line">      ND_BASEURL: <span class="string">&quot;&quot;</span></span><br><span class="line">    volumes:</span><br><span class="line">      - <span class="string">&quot;./data:/data&quot;</span></span><br><span class="line">      - <span class="string">&quot;/path/to/your/music/folder:/music:ro&quot;</span></span><br></pre></td></tr></table></figure><p>贴一个我自己实际环境里的配置给大家参考：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&quot;3&quot;</span></span><br><span class="line">services:</span><br><span class="line">  navidrome:</span><br><span class="line">    image: deluan/navidrome:latest</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">&quot;4533:4533&quot;</span>   <span class="comment"># 左边可以改成自己服务器未被占用的端口</span></span><br><span class="line">    environment:</span><br><span class="line">      <span class="comment"># Optional: put your config options customization here. Examples(这些都是可选的):</span></span><br><span class="line">      ND_SCANSCHEDULE: 1m</span><br><span class="line">      ND_LASTFM_ENABLED:</span><br><span class="line">      ND_LASTFM_APIKEY: eabdf1d50c0e912487521b154a8es1fda694 <span class="comment"># 修改成自己的APIKEY</span></span><br><span class="line">      ND_LASTFM_SECRET: a67666ca4as89d7231cf9fc990ef8a2ae6d  <span class="comment"># 修改成自己的SECRET</span></span><br><span class="line">      ND_SPOTIFY_ID: 4cd036bsqd1594bd0b41bc8f94c46846d  <span class="comment"># 修改成自己的ID</span></span><br><span class="line">      ND_SPOTIFY_SECRET: 249ca01a48be46fcb084523a6b267661bb1  <span class="comment"># 修改成自己的SECRET</span></span><br><span class="line">      ND_LASTFM_LANGUAGE: zh</span><br><span class="line">      ND_LOGLEVEL: info</span><br><span class="line">      ND_SESSIONTIMEOUT: 24h</span><br><span class="line">      ND_BASEURL: <span class="string">&quot;&quot;</span></span><br><span class="line">    volumes:</span><br><span class="line">      - <span class="string">&quot;./data:/data&quot;</span></span><br><span class="line">      - <span class="string">&quot;/root/data/docker_data/qbittorrent/music:/music:ro&quot;</span>  <span class="comment"># 冒号左边修改成自己本地的音乐文件夹路径</span></span><br><span class="line"></span><br><span class="line">  miniserve:</span><br><span class="line">    image: svenstaro/miniserve:latest</span><br><span class="line">    depends_on:</span><br><span class="line">      - navidrome</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">&quot;4534:8080&quot;</span></span><br><span class="line">    volumes:</span><br><span class="line">      - <span class="string">&quot;/root/data/docker_data/qbittorrent/music:/downloads&quot;</span>  <span class="comment"># 冒号左边修改成自己本地的音乐文件夹路径</span></span><br><span class="line">    <span class="built_in">command</span>: <span class="string">&quot;-r -z -u -q -p 8080 -a imgugugege:szwl2080! /downloads&quot;</span>  <span class="comment"># imgugugege:szwl2080! 修改成自己的账号:密码</span></span><br><span class="line">    restart: unless-stopped</span><br></pre></td></tr></table></figure><p>前面说了因为navidrome不支持上传功能，所以这里我们加一个miniserve，之后就可以通过miniserve来上传音乐了。</p><p>记得把password这个字段改为一个高强度的密码。当然如果你不需要的话可以把这个容器相关的配置删掉。</p><p>下面来一一解释一下里面的各项参数如何设置。</p><h3 id="外部集成"><a href="#外部集成" class="headerlink" title="外部集成"></a>外部集成</h3><p>配置 Navidrome 可以从 Last.fm 和 Spotify 获取专辑信息和图像</p><h4 id="Last-fm"><a href="#Last-fm" class="headerlink" title="Last.fm"></a>Last.fm</h4><p>首先需要一个<code> Last.fm</code> 免费帐户，其次你要能访问<code> Last.fm</code></p><p>转到 <a href="https://www.last.fm/api/account/create">https://www.last.fm/api/account/create</a> 并创建一个 API 帐户。只有 应用程序名称 字段是强制性的</p><p><img src="https://pic.loll.cc/images/2022/01/15/202201151214669.png" alt="image-20220115121441548"></p><p>提交表单后，可以从 <code>API account Created</code> 页面获取 <code>API Key</code> 和 <code>Shared Secret</code></p><img src="https://pic.loll.cc/images/2022/01/15/202201151125318.png" alt="847f4d5bd298477c906c48a93f27c861" style="zoom:50%;" /><p>将上面的值复制到 Docker 的环境变量</p><table><thead><tr><th>ND_LASTFM_ENABLED</th><th>设置 false 为完全禁用 Last.fm 集成</th></tr></thead><tbody><tr><td>ND_LASTFM_APIKEY</td><td>Last.fm 获取的 API Key</td></tr><tr><td>ND_LASTFM_SECRET</td><td>Last.fm 获取的 Shared Secret</td></tr><tr><td>ND_LASTFM_LANGUAGE</td><td>用于从 Last.fm 检索的语言的两个字母代码，简体中文为 zh</td></tr></tbody></table><h4 id="Spotify"><a href="#Spotify" class="headerlink" title="Spotify"></a>Spotify</h4><p>在 Spotify 中创建一个免费帐户，然后按照以下步骤操作：</p><p>单击 Spotify 的开发者仪表板中的<code> CREATE AN APP</code> 按钮：<a href="https://developer.spotify.com/dashboard/applications">https://developer.spotify.com/dashboard/applications</a></p><img src="https://pic.loll.cc/images/2022/01/15/202201151126094.png" alt="b50060ed5b054509b32749d3bbac61c5" style="zoom:50%;" /><p>填写所有字段并单击 <code>CREATE</code> 按钮：</p><img src="https://pic.loll.cc/images/2022/01/15/202201151127137.png" alt="2748d651ccc64aa48ce393dc1383acef" style="zoom:50%;" /><p>将值复制到 Docker 的环境变量</p><p><img src="https://pic.loll.cc/images/2022/01/15/202201151221721.png" alt="image-20220115122113585"></p><table><thead><tr><th>ND_SPOTIFY_ID</th><th>Spotify 客户端 ID</th></tr></thead><tbody><tr><td>ND_SPOTIFY_SECRET</td><td>Spotify 客户端 Secret</td></tr></tbody></table><p>转码设置<br>之所以要转码，是因为无损的文件比较大，一般都有几百M，所以需要进行转码成，便于客户端进行播放</p><p>但 Navidrome 出于安全原因，禁用了从 Web 界面更改参数，所以需要先修改 Docker 的环境变量</p><table><thead><tr><th>ND_ENABLETRANSCODINGCONFIG</th><th>设置为 true 才能支持转码功能</th></tr></thead><tbody><tr><td>ND_TRANSCODINGCACHESIZE</td><td>转码缓存的大小。设置 0 为禁用缓存，默认为 100MB</td></tr></tbody></table><h3 id="转码"><a href="#转码" class="headerlink" title="转码"></a>转码</h3><p>默认设置中有两个转码方案，一个是转 <code>MP3</code>，另一个是转 <code>OPUS</code></p><img src="https://pic.loll.cc/images/2022/01/15/202201151127487.png" alt="df3d3213df524522aca35993346bbc4a" style="zoom:75%;" /><p>可以根据需要修改 比特率</p><img src="https://pic.loll.cc/images/2022/01/15/202201151128938.png" alt="d5663aef380b4d9c8e4eea9943a87f82" style="zoom:75%;" /><p>然后选择需要转码的客户端</p><p>关于客户端，可以看看 Subsonic Apps 列表：<a href="http://www.subsonic.org/pages/apps.jsp">http://www.subsonic.org/pages/apps.jsp</a></p><blockquote><p>iOS: play:Sub, substreamer, Amperfy, iSub<br>Android: DSub, Subtracks, subreamer, Ultrasonic, Audinaut<br>网页端: Subplayer, Airsonic Refix, Aurial, Jamstash, Subfire<br>桌面端: Sublime Music（Linux）和Sonixd（Windows&#x2F;Linux&#x2F;MacOS）<br>命令行: Jellycli（Windows&#x2F;Linux）和STMP（Linux&#x2F;MacOS）</p></blockquote><img src="https://pic.loll.cc/images/2022/01/15/202201151128013.png" alt="edafa2f64056464bad2735257b2e8084" style="zoom:75%;" /><p>以 Android 客户端 Subsonic为例子，</p><p><img src="https://pic.loll.cc/images/2022/01/15/202201151129153.png" alt="671eafac94ff401485b9a93908743860"></p><p>修改完成</p><p><img src="https://pic.loll.cc/images/2022/01/15/202201151128175.png" alt="6be93fc605824f6e8665245098c9824e"></p><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><p>全部参数设置好之后，运行<code>docker-compose up -d </code></p><p>访问<code>IP:4533</code>端口就可以有界面出现了，反向代理用NginxProxyManager完成，不会的可以看视频教程。</p><p>访问<code>IP:4534</code>端口就可以上传下载歌曲了。</p><img src="https://pic.loll.cc/images/2022/01/15/202201151138229.png" alt="image-20220115113851049" style="zoom:67%;" /><h3 id="补充：filebrowser管理歌曲文件"><a href="#补充：filebrowser管理歌曲文件" class="headerlink" title="补充：filebrowser管理歌曲文件"></a>补充：filebrowser管理歌曲文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --restart=always \</span><br><span class="line">    -v /root/data/docker_data/qbittorrent/music:/srv \</span><br><span class="line">    -p 8003:80 \</span><br><span class="line">    --name filebrowser \</span><br><span class="line">    langren1353/filebrowser-ckplayer</span><br></pre></td></tr></table></figure><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>目前遇到的一个痛点是，歌曲都没有歌词，我也在网上搜索了一下，有找到一个叫做“音乐标签”的软件，可以获取歌曲的歌词信息，不过要Windows系统才能使用，我在另一台服务器上安装了这个软件，但是不知道为啥上传之后歌曲名字都变成乱码了，有需要的小伙伴可以到<a href="https://share.laoda.de/">网盘下载</a>这个软件试试。解压密码：<code>www.coolapk.com</code></p><p>燥起来吧！</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/wbsu2004/article/details/121027463">https://blog.csdn.net/wbsu2004/article/details/121027463</a></p><p><a href="https://github.com/navidrome/navidrome">https://github.com/navidrome/navidrome</a></p><p><a href="https://www.navidrome.org/">https://www.navidrome.org/</a></p><p><a href="https://hub.docker.com/r/deluan/navidrome">https://hub.docker.com/r/deluan/navidrome</a></p><p><a href="https://lala.im/7660.html">https://lala.im/7660.html</a></p><p><a href="https://youtu.be/47ZZpJebiG0">https://youtu.be/47ZZpJebiG0</a></p><p><a href="https://www.xiaoz.me/archives/16527">https://www.xiaoz.me/archives/16527</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 音乐播放 </tag>
            
            <tag> 咪咕音乐 </tag>
            
            <tag> QQ音乐 </tag>
            
            <tag> 网易云音乐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【转载】宝塔面板7.8无缝转为宝塔国际版aapanel，附宝塔7.8降级为宝塔7.7</title>
      <link href="/archives/bt-to-aapanel/"/>
      <url>/archives/bt-to-aapanel/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>宝塔最新版已经不能用之前的方法来<a href="https://blog.laoda.de/archives/useful-script#%E5%AE%9D%E5%A1%94%E7%9B%B8%E5%85%B3">跳过手机绑定</a>了，之前一直推荐大家用宝塔的海外版本——aapanel。其实aapanel和宝塔的国内版本就是一个东西，只是改了下语言而已，然后少了OD的插件而已。昨天发现大鸟有一篇文章写的是《如何把你的宝塔7.8无缝转为aapanel》，特此<del>抄</del>借鉴到本咕的博客里。</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>宝塔面板<code>7.8</code>现在改为验证<code>userInfo.json</code>了，<strong>没有啥好的方法来跳过手机绑定了</strong>，你可以选择用手机绑定来完美解决这个问题，或者降级来处理亦或者选用其他平台。</p><p>这篇文章来说说如何把你的宝塔7.8无缝转为aapanel，因为都是宝塔的产品，所以换起来也很简单。</p><h2 id="1、转换前的准备工作"><a href="#1、转换前的准备工作" class="headerlink" title="1、转换前的准备工作"></a>1、转换前的准备工作</h2><p>1）如果你在宝塔中安装过<code>堡塔面板静态文件加速</code> 这个插件的，需要先行卸载掉，否则换了平台容易样式错误。</p><p>2）备份好自己的网站数据，防止在转换过程中发生奇葩的事情。</p><p>3）aapanel的安装代码，目前最新版本是<code>6.8.9</code></p><p>官网：<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial</a></p><p>Centos 版本代码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install -y wget &amp;&amp; wget -O install.sh http://www.aapanel.com/script/install_6.0_en.sh &amp;&amp; bash install.sh forum</span><br></pre></td></tr></table></figure><p>The experimental Centos&#x2F;Ubuntu&#x2F;Debian&#x2F;Fedora installation command supports ipv6. Note that this command is executed with root privileges (Centos8 is supported) -实验版本</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -sSO http://www.aapanel.com/script/new_install_en.sh &amp;&amp; bash new_install_en.sh forum</span><br></pre></td></tr></table></figure><p>Ubuntu&#x2F;Deepin :</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -O install.sh http://www.aapanel.com/script/install-ubuntu_6.0_en.sh &amp;&amp; sudo bash install.sh forum</span><br></pre></td></tr></table></figure><p>Debian :</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -O install.sh http://www.aapanel.com/script/install-ubuntu_6.0_en.sh &amp;&amp; bash install.sh forum</span><br></pre></td></tr></table></figure><p>注意：根据自己的版本来选择安装代码。如果不知道，可以使用实验版本无差别安装。</p><h2 id="2、开始转换"><a href="#2、开始转换" class="headerlink" title="2、开始转换"></a>2、开始转换</h2><p>1）ssh工具连接到你的服务器，然后输入相应的aapanel安装命令即可。</p><p>2）输入一个<code>yes</code>来确定安装，这里需要注意下。具体如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Web service is alreday installed,installing aaPanel may affect existing sites.Enter [yes] to force installationEnter yes to force installation: yes</span><br></pre></td></tr></table></figure><p>3）安装完成后，除了密码变动之外，其他所有的环境，网站等都安然无恙。</p><h2 id="3、换回宝塔7-8"><a href="#3、换回宝塔7-8" class="headerlink" title="3、换回宝塔7.8"></a>3、换回宝塔7.8</h2><p>aapanel是全英文版本，但如果你熟悉宝塔，那么基本无门槛使用。即便如此，可能会有很多人不适应。如果你要换回宝塔，也是可以无缝切换回去的。</p><p>1）宝塔安装命令。</p><p>官网：<a href="https://www.bt.cn/bbs/thread-19376-1-1.html">https://www.bt.cn/bbs/thread-19376-1-1.html</a></p><p>请自行到这里找宝塔的安装命令，根据自己的系统版本来重新安装一次宝塔，不过安装后又要恢复绑定手机号了。</p><h2 id="4、宝塔7-8降级为宝塔7-7"><a href="#4、宝塔7-8降级为宝塔7-7" class="headerlink" title="4、宝塔7.8降级为宝塔7.7"></a>4、宝塔7.8降级为宝塔7.7</h2><p>1）如果你不喜欢aapanel，那么目前最好的解决方法就是降级到7.7版本，具体命令如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget http://download.bt.cn/install/update/LinuxPanel-7.7.0.zipunzip LinuxPanel-*cd panelbash update.shcd .. &amp;&amp; rm -f LinuxPanel-*.zip &amp;&amp; rm -rf panelecho &#x27;127.0.0.1 bt.cn&#x27; &gt;&gt;/etc/hosts</span><br></pre></td></tr></table></figure><p>2）如果提示绑定手机号，请输入如下命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rm -f /www/server/panel/data/bind.pl</span><br></pre></td></tr></table></figure><h2 id="5、最后"><a href="#5、最后" class="headerlink" title="5、最后"></a>5、最后</h2><p>请根据自己的需要来选择，此外需要注意，宝塔有很多所谓的破解版，开心版，请谨慎安装。安装代码请尽量到官网获取。</p><h2 id="鸣谢"><a href="#鸣谢" class="headerlink" title="鸣谢"></a>鸣谢</h2><p><a href="https://www.daniao.org/15986.html">@大鸟</a></p>]]></content>
      
      
      <categories>
          
          <category> 宝塔面板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 宝塔面板 </tag>
            
            <tag> 宝塔 </tag>
            
            <tag> aapanel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Docker系列】让网站更安全！开启NginxProxyManager网站访问登陆限制功能</title>
      <link href="/archives/nginxproxymanager-access-lists/"/>
      <url>/archives/nginxproxymanager-access-lists/</url>
      
        <content type="html"><![CDATA[<h2 id="本期视频"><a href="#本期视频" class="headerlink" title="本期视频"></a>本期视频</h2><p>这期来讲讲怎么开启任意用NginxProxyManager的网站的登录限制(access lists)，让我们的网站安全更一点点。</p><p>YouTube：<a href="https://youtu.be/3dK87Ov-URk">https://youtu.be/3dK87Ov-URk</a></p><p>哔哩哔哩：</p><p><joe-bilibili bvid="BV18Z4y1S7hr"></joe-bilibili></p><h2 id="前情回顾"><a href="#前情回顾" class="headerlink" title="前情回顾"></a>前情回顾</h2><h3 id="Nginx-Proxy-Manager搭建"><a href="#Nginx-Proxy-Manager搭建" class="headerlink" title="Nginx Proxy Manager搭建"></a>Nginx Proxy Manager搭建</h3><p><a href="https://blog.laoda.de/archives/nginxproxymanager">【Docker系列】一个反向代理神器——Nginx Proxy Manager</a></p><p><joe-bilibili bvid="BV1Gg411w7kQ"></joe-bilibili></p><h3 id="NginxProxyManager申请通配符SSL证书"><a href="#NginxProxyManager申请通配符SSL证书" class="headerlink" title="NginxProxyManager申请通配符SSL证书"></a>NginxProxyManager申请通配符SSL证书</h3><p>YouTube：<a href="https://youtu.be/Bde_Ssw_BH4">https://youtu.be/Bde_Ssw_BH4</a></p><p>哔哩哔哩：</p><p><joe-bilibili bvid="BV15F411v7Hj"></joe-bilibili></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NginxProxyManager </tag>
            
            <tag> Nginx </tag>
            
            <tag> 反向代理 </tag>
            
            <tag> Dock </tag>
            
            <tag> http </tag>
            
            <tag> 网站安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Docker系列】反向代理神器NginxProxyManager——通配符SSL证书申请</title>
      <link href="/archives/nginxproxymanager-ssl-wildcardcerts-for-your-entire-domain/"/>
      <url>/archives/nginxproxymanager-ssl-wildcardcerts-for-your-entire-domain/</url>
      
        <content type="html"><![CDATA[<h2 id="本期视频"><a href="#本期视频" class="headerlink" title="本期视频"></a>本期视频</h2><p>这期来讲讲怎么给NginxProxyManager申请通配符SSL证书，让批量添加网站更省力！</p><p>YouTube：<a href="https://youtu.be/3dK87Ov-URk">https://youtu.be/3dK87Ov-URk</a></p><p>哔哩哔哩：</p><p><a href="https://www.bilibili.com/BV15F411v7Hj">https://www.bilibili.com/BV15F411v7Hj</a></p><h2 id="前情回顾"><a href="#前情回顾" class="headerlink" title="前情回顾"></a>前情回顾</h2><p><a href="https://blog.laoda.de/archives/nginxproxymanager">【Docker系列】一个反向代理神器——Nginx Proxy Manager</a></p><p><joe-bilibili bvid="BV1Gg411w7kQ"></joe-bilibili></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NginxProxyManager </tag>
            
            <tag> SSL </tag>
            
            <tag> 反向代理 </tag>
            
            <tag> 通配符证书 </tag>
            
            <tag> https </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>可以与宝塔共存的一个“魔法”服务器状态监控应用——xui</title>
      <link href="/archives/xui/"/>
      <url>/archives/xui/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>之前有一期我们搭建了一个服务器监控，颜值非常不错，这期我们再来搭建一个“特殊”的服务器监控——XUI。</p><p>不仅可以监控服务器的数据，还可以干一些高级的，大家感兴趣的事情。</p><p>重要的是，它可以和宝塔面板共存！</p><h2 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h2><img src="https://pic.loll.cc/images/2022/01/09/202201091158810.png" alt="1.png" style="zoom: 50%;" /><img src="https://github.com/forevergooe/v2-ui/raw/master/2.png" alt="2.png" style="zoom:50%;" /><p>一个非常直观，简洁大气的监控面板。</p><h2 id="功能介绍"><a href="#功能介绍" class="headerlink" title="功能介绍"></a>功能介绍</h2><ul><li>系统状态监控</li><li>支持多用户多协议，网页可视化操作</li><li>支持的协议：vmess、vless、trojan、shadowsocks、dokodemo-door、socks、http</li><li>支持配置更多传输配置</li><li>流量统计，限制流量，限制到期时间</li><li>可自定义 xray 配置模板</li><li>支持 https 访问面板（自备域名 + ssl 证书）</li><li>更多高级配置项，详见面板</li></ul><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><ul><li>OS：Debian11（非大陆境内服务器）</li><li>搭建了宝塔面板（最好已经安装了网站）</li></ul><h3 id="建议系统"><a href="#建议系统" class="headerlink" title="建议系统"></a>建议系统</h3><ul><li>CentOS 7+</li><li>Ubuntu 16+</li><li>Debian 8+</li></ul><h2 id="搭建流程"><a href="#搭建流程" class="headerlink" title="搭建流程"></a>搭建流程</h2><p>视频搭建地址：<a href="https://youtu.be/MOsOoVGK9_w">https://youtu.be/MOsOoVGK9_w</a></p><h3 id="普通安装-升级（推荐）"><a href="#普通安装-升级（推荐）" class="headerlink" title="普通安装&amp;升级（推荐）"></a>普通安装&amp;升级（推荐）</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -Ls https://raw.githubusercontent.com/vaxilu/x-ui/master/install.sh)</span><br></pre></td></tr></table></figure><h3 id="面板其它操作"><a href="#面板其它操作" class="headerlink" title="面板其它操作"></a>面板其它操作</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">x-ui                  # 显示管理菜单 (功能更多)</span><br><span class="line">x-ui start            # 启动 x-ui 面板</span><br><span class="line">x-ui stop             # 停止 x-ui 面板</span><br><span class="line">x-ui restart          # 重启 x-ui 面板</span><br><span class="line">x-ui status           # 查看 x-ui 状态</span><br><span class="line">x-ui enable           # 设置 x-ui 开机自启</span><br><span class="line">x-ui disable          # 取消 x-ui 开机自启</span><br><span class="line">x-ui log              # 查看 x-ui 日志</span><br><span class="line">x-ui update           # 更新 x-ui 面板</span><br><span class="line">x-ui install          # 安装 x-ui 面板</span><br><span class="line">x-ui uninstall        # 卸载 x-ui 面板</span><br></pre></td></tr></table></figure><h3 id="数据备份与迁移"><a href="#数据备份与迁移" class="headerlink" title="数据备份与迁移"></a>数据备份与迁移</h3><p>面板所有数据包括账号信息等都存在 &#x2F;etc&#x2F;x-ui&#x2F;x-ui.db 中，只要备份此文件即可。在新服务器安装了面板之后，先关闭面板，再将备份的文件覆盖新安装的，最后启动面板即可。</p><p>注意，若配置了面板 ssl 证书，确保新服务器的同样的路径下有相同的证书文件，否则将无法在新服务器启动面板。同样的，若配置了 为途锐 的 tls，并且使用了证书文件配置，也要确保新服务器有证书文件，否则将无法启动 为途锐，若使用证书内容配置，则无需关心。</p><h3 id="卸载面板"><a href="#卸载面板" class="headerlink" title="卸载面板"></a>卸载面板</h3><p>执行以下命令即可完全卸载面板，如果还需要卸载 为途锐，请自行找相关教程。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl stop x-ui</span><br><span class="line">systemctl disable x-ui</span><br><span class="line">rm /usr/local/x-ui/ -rf</span><br><span class="line">rm /etc/x-ui/ -rf</span><br><span class="line">rm /etc/systemd/system/x-ui.service -f</span><br><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="安装完了打不开面板"><a href="#安装完了打不开面板" class="headerlink" title="安装完了打不开面板"></a>安装完了打不开面板</h3><p>检查面板状态，确认正在运行后再确保 54321 端口已经放行，再说三遍：<em><strong>端口放行、端口放行、端口放行</strong></em>。</p><h3 id="装了宝塔后打不开面板也无法使用-为途锐"><a href="#装了宝塔后打不开面板也无法使用-为途锐" class="headerlink" title="装了宝塔后打不开面板也无法使用 为途锐"></a>装了宝塔后打不开面板也无法使用 为途锐</h3><p>面板与宝塔本身并没有冲突，只不过是因为宝塔启用了防火墙，只开启了常用的端口，所以需要进入宝塔管理界面放行面板监听端口(54321)和你所使用的其它 为途锐账号端口。</p><h3 id="忘记用户名和密码"><a href="#忘记用户名和密码" class="headerlink" title="忘记用户名和密码"></a>忘记用户名和密码</h3><p>使用以下命令重置用户名和密码，默认都为 admin</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/usr/local/x-ui/x-ui resetuser</span><br></pre></td></tr></table></figure><h3 id="面板设置修改错误导致面板无法启动"><a href="#面板设置修改错误导致面板无法启动" class="headerlink" title="面板设置修改错误导致面板无法启动"></a>面板设置修改错误导致面板无法启动</h3><p>使用以下命令重置所有面板设置，默认面板端口修改为 54321，其它的也会重置为默认值，注意，这个命令不会重置用户名和密码。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/usr/local/x-ui/x-ui resetconfig</span><br></pre></td></tr></table></figure><h3 id="面板启动失败"><a href="#面板启动失败" class="headerlink" title="面板启动失败"></a>面板启动失败</h3><h3 id="出现：‘ascii’-codec-can’t-encode-characters-in-position-0-6-ordinal-not-in-range-128"><a href="#出现：‘ascii’-codec-can’t-encode-characters-in-position-0-6-ordinal-not-in-range-128" class="headerlink" title="出现：‘ascii’ codec can’t encode characters in position 0-6: ordinal not in range(128)"></a>出现：‘ascii’ codec can’t encode characters in position 0-6: ordinal not in range(128)</h3><p>这是因为系统编码不支持中文的缘故，将系统编码设置为 UTF-8 即可，具体请自行搜索方法。</p><h3 id="因时间误差导致-为麦斯-无法连接"><a href="#因时间误差导致-为麦斯-无法连接" class="headerlink" title="因时间误差导致 为麦斯 无法连接"></a>因时间误差导致 为麦斯 无法连接</h3><p>引用 为途锐 官方的一句话：为麦斯 依赖于系统时间，请确保使用 为途锐 的系统 UTC 时间误差在 90 秒之内，<em><strong>时区无关</strong></em>。在 Linux 系统中可以安装ntp服务来自动同步系统时间。</p><h3 id="进去面板之后语言是英文的"><a href="#进去面板之后语言是英文的" class="headerlink" title="进去面板之后语言是英文的"></a>进去面板之后语言是英文的</h3><p>确保你的浏览器设置浏览网页时优先使用中文，有些时候浏览器语言是中文的，但是浏览网页时优先显示英文，其次才是中文，这样就会造成面板语言是英文的，具体请根据浏览器设置，将中文排在第一位。</p><p>电脑版 Chrome 设置方法：设置 - 高级 - 语言 - 展开语言设置 - 根据您的偏好设置对语言进行排序 - 将中文排在第一位。</p><h3 id="怎么限制账号网速和连接数"><a href="#怎么限制账号网速和连接数" class="headerlink" title="怎么限制账号网速和连接数"></a>怎么限制账号网速和连接数</h3><p>面板只是个方便你配置 为途锐 的工具，首先需要 为途锐 自身支持这些底层功能，面板才能支持。</p><h3 id="怎么让面板的账号-IP-显示为我的域名"><a href="#怎么让面板的账号-IP-显示为我的域名" class="headerlink" title="怎么让面板的账号 IP 显示为我的域名"></a>怎么让面板的账号 IP 显示为我的域名</h3><ul><li>将域名解析到你的 VPS 的 IP</li><li>使用域名访问面板，如：<a href="http://aaaa.com:54321/">http://aaaa.com:54321</a> ，具体域名和端口号以你的实际域名和端口号为准</li><li>如果面板设置里正确配置了域名证书和密钥，那么就使用：<a href="https://aaaa.com:54321/">https://aaaa.com:54321</a> 访问面板</li></ul><blockquote><p>使用 CDN 的同志们注意了，CDN 通常只支持常见的 http 和 https 端口，所以使用 65432 是访问不了的，建议将面板端口设置为 CDN 商家支持的端口，肯定受支持的端口号是 80（http）和 443（https）</p></blockquote><h2 id="面板设置"><a href="#面板设置" class="headerlink" title="面板设置"></a>面板设置</h2><p>记得改默认的账号密码（默认都为 admin）</p><img src="https://pic.loll.cc/images/2022/01/09/202201091451470.png" alt="image-20220109145116322" style="zoom:50%;" /><img src="https://pic.loll.cc/images/2022/01/09/202201091219561.png" alt="49a7471e1bc540d294095053777cfe0b" style="zoom:50%;" /><h2 id="宝塔设置"><a href="#宝塔设置" class="headerlink" title="宝塔设置"></a>宝塔设置</h2><img src="https://pic.loll.cc/images/2022/01/09/202201091452220.png" alt="image-20220109145225167" style="zoom:50%;" /><p>找到网站的Nginx配置文件，在大概<code>#SSL-END</code>前面添加下面的代码</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> /plogger</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://127.0.0.1:35714;</span><br><span class="line">        <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">        <span class="attribute">proxy_http_version</span> <span class="number">1</span>.<span class="number">1</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Connection <span class="string">&quot;upgrade&quot;</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Host <span class="variable">$http_host</span>;</span><br><span class="line">        <span class="attribute">proxy_read_timeout</span> <span class="number">300s</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>CDN可以选择打开也可以不打开。</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><img src="https://pic.loll.cc/images/2022/01/09/202201091451765.png" alt="image-20220109145132715" style="zoom:50%;" /><p>小火煎（其他工具类似）扫描好二维码之后，把地址栏显示的<code>IP地址</code>改为绑定的域名，端口改为<code>443</code>，传输方式websocket，里面Host填写绑定的域名，<code>ws路径</code>改为你前面设置的路径，打开<code>tls</code>，点击完成即可。</p>]]></content>
      
      
      <categories>
          
          <category> 宝塔面板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 宝塔面板 </tag>
            
            <tag> 魔法上网 </tag>
            
            <tag> xui </tag>
            
            <tag> 服务器监控 </tag>
            
            <tag> v2ray </tag>
            
            <tag> vmess </tag>
            
            <tag> ws </tag>
            
            <tag> tls </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩的Docker项目】搭建一个小而美的网站流量监控——Umami</title>
      <link href="/archives/umami/"/>
      <url>/archives/umami/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前俩期，我们搭建了自己的网站监控——<a href="https://iwanlab.com/uptimekuma-install/">【好玩的Docker项目】搭建一个专属自己的网站监控——Uptime Kuma</a>，还有服务器的监控——<a href="https://iwanlab.com/ward-serverstatus-install/">【好玩的Docker项目】搭建两个专属自己的服务器监控——Ward &amp;&amp; ServerStatus</a>，这一期带大家来搭建一个网站流量的监控，看看自己的小破站到底有多少人看，是不是 1 ip呢？</p><h2 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h2><img src="https://pic.loll.cc/images/2022/01/08/202201081238242.png" alt="image-20220108123817121" style="zoom:50%;" /><img src="https://pic.loll.cc/images/2022/01/08/202201081239686.png" alt="image-20220108123933647" style="zoom:50%;" /><img src="https://pic.loll.cc/images/2022/01/08/202201081239507.png" alt="image-20220108123947463" style="zoom:50%;" /><img src="https://pic.loll.cc/images/2022/01/08/202201081241783.png" alt="image-20220108124137746" style="zoom:50%;" /><img src="https://pic.loll.cc/images/2022/01/08/202201081110489.png" alt="image-20220108111011441" style="zoom:50%;" /><img src="https://pic.loll.cc/images/2022/01/08/202201081110179.png" alt="image-20220108111033142" style="zoom:50%;" /><p>非常清爽，满足小博客使用已经足够了，</p><h2 id="搭建视频"><a href="#搭建视频" class="headerlink" title="搭建视频"></a>搭建视频</h2><p> YouTube：<a href="https://youtu.be/rRBMZwKiCRk">https://youtu.be/rRBMZwKiCRk</a></p><p>哔哩哔哩：<a href="https://www.bilibili.com/BV1eL4y1b7P6">https://www.bilibili.com/BV1eL4y1b7P6</a></p><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><ul><li>服务器：腾讯云轻量应用服务器（<a href="https://loll.cc/tx">购买链接</a>）</li><li>系统：Debian 10（<a href="https://iwanlab.com/useful-script/">DD脚本</a>）</li><li>域名一枚，并做好解析到服务器上（<a href="https://iwanlab.com/namesilo">域名购买、域名解析</a>  <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>安装好Docker、Docker-compose（<a href="https://iwanlab.com/hello-docker">相关脚本</a>）</li><li>安装好Nginx Proxy Manager（<a href="https://iwanlab.com/nginx-proxy-manager">相关教程</a>）</li><li>宝塔用户建议使用国际版aapanel（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">下载链接</a>）</li></ul><h3 id="开始搭建"><a href="#开始搭建" class="headerlink" title="开始搭建"></a>开始搭建</h3><h4 id="1、安装docker、curl、git、vim、wget等必备的工具"><a href="#1、安装docker、curl、git、vim、wget等必备的工具" class="headerlink" title="1、安装docker、curl、git、vim、wget等必备的工具"></a>1、安装docker、curl、git、vim、wget等必备的工具</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt update -y</span><br><span class="line"></span><br><span class="line">apt install -y wget vim sudo curl git</span><br><span class="line"></span><br><span class="line">wget -qO- get.docker.com | bash</span><br><span class="line"></span><br><span class="line">docker -v</span><br><span class="line"></span><br><span class="line">systemctl <span class="built_in">enable</span> docker</span><br><span class="line"></span><br><span class="line">sudo curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/1.29.2/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line">sudo <span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line">docker-compose --version</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2、然后到github上接取项目，进入目录"><a href="#2、然后到github上接取项目，进入目录" class="headerlink" title="2、然后到github上接取项目，进入目录"></a>2、然后到github上接取项目，进入目录</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p ~/data/docker_data/umami</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ~/data/docker_data/umami</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3、编辑配置文件"><a href="#3、编辑配置文件" class="headerlink" title="3、编辑配置文件"></a>3、编辑配置文件</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><h4 id="4、写入Docker-compose代码"><a href="#4、写入Docker-compose代码" class="headerlink" title="4、写入Docker-compose代码"></a>4、写入Docker-compose代码</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">version: <span class="string">&#x27;3&#x27;</span></span><br><span class="line">services:</span><br><span class="line">  umami:</span><br><span class="line">    image: docker.umami.dev/umami-software/umami:postgresql-latest</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">&quot;3000:3000&quot;</span></span><br><span class="line">    environment:</span><br><span class="line">      DATABASE_URL: postgresql://umami:umami@db:5432/umami</span><br><span class="line">      DATABASE_TYPE: postgresql</span><br><span class="line">      APP_SECRET: replace-me-with-a-random-string</span><br><span class="line">    depends_on:</span><br><span class="line">      - db</span><br><span class="line">    restart: always</span><br><span class="line">  db:</span><br><span class="line">    image: postgres:15-alpine</span><br><span class="line">    environment:</span><br><span class="line">      POSTGRES_DB: umami</span><br><span class="line">      POSTGRES_USER: umami</span><br><span class="line">      POSTGRES_PASSWORD: umami</span><br><span class="line">    volumes:</span><br><span class="line">      - ./sql/schema.postgresql.sql:/docker-entrypoint-initdb.d/schema.postgresql.sql:ro</span><br><span class="line">      - ./umami-db-data:/var/lib/postgresql/data</span><br><span class="line">    restart: always</span><br></pre></td></tr></table></figure><p>检查完毕之后，<code>ctrl+x</code>退出，按<code>y</code>确认修改内容，<code> enter</code>确认</p><h4 id="5、启动Umami"><a href="#5、启动Umami" class="headerlink" title="5、启动Umami"></a>5、启动Umami</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><h3 id="关于Internal-Server-Error-问题"><a href="#关于Internal-Server-Error-问题" class="headerlink" title="关于Internal Server Error 问题"></a>关于Internal Server Error 问题</h3><p>来自小伙伴<a href="https://blog.laoda.de/archives/umami">@colinsoo</a> 在评论区的反馈：</p><blockquote><p>主要是因为数据库链接和初始化。 在<code>docker-compose</code> 中有个映射是 →<code>./sql/schema.postgresql.sql:/docker-entrypoint-initdb.d/schema.postgresql.sql:ro</code> 这个<code>.sql</code> 文件可以去作者的仓库里面找到：<code>https://github.com/mikecao/umami/blob/master/sql/schema.mysql.sql</code> 需要提前映射到安装的地方，来初始化数据库（也就是要提前建表），整了一天才发现主要问题在这……可能主要是因为这个东西可以静态部署，所以没有整合到应用里，需要手动执行？</p></blockquote><p>大家可以自行测试一下！</p><p>此时，访问<code>http://ip:3000</code>就可以访问了，打开的是英文界面，右上方可以切换语言，默认用户名为<code>admin</code>，密码为<code>umami</code></p><p>宝塔用户需要打开防火墙，放行<code>3000</code>端口，腾讯云、阿里云等用户还需要在官网后台服务器页面放行官方防火墙的<code>3000</code>端口。</p><p>如果要反向代理，且反向代理的服务与umami在一台服务器上，可以不用放行<code>3000</code>端口。</p><h3 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h3><h4 id="1、宝塔用户"><a href="#1、宝塔用户" class="headerlink" title="1、宝塔用户"></a>1、宝塔用户</h4><img src="https://pic.loll.cc/images/2022/01/08/202201081131844.png" alt="image-20220108113106723" style="zoom:50%;" /><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:3000/;</span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2、NginxProxyManager用户"><a href="#2、NginxProxyManager用户" class="headerlink" title="2、NginxProxyManager用户"></a>2、NginxProxyManager用户</h4><h5 id="反向代理的服务与umami在一台服务器上"><a href="#反向代理的服务与umami在一台服务器上" class="headerlink" title="反向代理的服务与umami在一台服务器上"></a>反向代理的服务与umami在一台服务器上</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><img src="https://pic.loll.cc/images/2022/01/08/202201081138530.png" alt="image-20220108113833487" style="zoom:50%;" /><img src="https://pic.loll.cc/images/2022/01/08/202201081139507.png" alt="image-20220108113959441" style="zoom: 33%;" /><img src="https://pic.loll.cc/images/2022/01/08/202201081137364.png" alt="image-20220108113758311" style="zoom: 33%;" /><p>访问域名即可。</p><h5 id="反向代理的服务与umami不在一台服务器上"><a href="#反向代理的服务与umami不在一台服务器上" class="headerlink" title="反向代理的服务与umami不在一台服务器上"></a>反向代理的服务与umami不在一台服务器上</h5><p>打开防火墙，放行<code>3000</code>端口，腾讯云、阿里云等用户还需要在官网后台服务器页面放行官方防火墙的<code>3000</code>端口。</p><img src="https://pic.loll.cc/images/2022/01/08/202201081139198.png" alt="image-20220108113911143" style="zoom: 33%;" /><img src="https://pic.loll.cc/images/2022/01/08/202201081137364.png" alt="image-20220108113758311" style="zoom: 33%;" /><p>访问域名即可。</p><h2 id="添加到站点"><a href="#添加到站点" class="headerlink" title="添加到站点"></a>添加到站点</h2><img src="https://pic.loll.cc/images/2022/01/08/202201081221004.png" alt="image-20220108122110876" style="zoom:33%;" /><p>激活共享链接就是公开统计数据。</p><p>注意这边添加域名，不需要带<code>https://</code></p><img src="https://pic.loll.cc/images/2022/01/08/202201081221925.png" alt="image-20220108122132888" style="zoom:33%;" /><h3 id="Halo"><a href="#Halo" class="headerlink" title="Halo"></a>Halo</h3><p>视频教程：<a href="https://www.bilibili.com/video/BV1JN411Q7Na/">如何用服务器优雅地搭建一个博客—Hello,Halo!</a></p><img src="https://pic.loll.cc/images/2022/01/08/202201081222681.png" alt="image-20220108122227620" style="zoom:33%;" /><img src="https://pic.loll.cc/images/2022/01/08/202201081223590.png" alt="image-20220108122304559" style="zoom:33%;" /><h3 id="Wordpress"><a href="#Wordpress" class="headerlink" title="Wordpress"></a>Wordpress</h3><p>将代码加在主题文件的<code>footer.php</code>下,添加完成之后，刷新浏览器缓存，就能统计到了。</p><p>其他的博客也是大同小异，在统计代码的地方加入这段JS代码即可。</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>目前用了大半年了，感觉效果不错，有一个缺点是不能统计到搜索的关键词。</p><p>类似的统计服务还有百度统计、谷歌统计、Matoma等等，不过他们都没有这个这么轻量，如果需要更复杂的功能，可以试试<a href="https://github.com/matomo-org/matomo">Matomo</a>，也是一个开源的项目。</p><p>地址：<a href="https://github.com/matomo-org/matomo">https://github.com/matomo-org/matomo</a></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://www.zz1984.com/498.html">https://www.zz1984.com/498.html</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DockerCompose </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【高端VPS推荐】BandwagonHost(搬瓦工) - 美国/日本/香港 CN2 GIA 高速 VPS 推荐与最新优惠码（循环优惠 12.22%）</title>
      <link href="/archives/bandwagonhost/"/>
      <url>/archives/bandwagonhost/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>BandwagonHost，加拿大 IT7 Net­works Inc.(819826-8)(2004~) 旗下品牌。因为其拼写和汉语拼音的 “ban­wag­ong” 极为相似，所以大家都亲切地称其为 “搬瓦工”。其在美国洛杉矶 &#x2F; 费利蒙市 &#x2F; 新泽西 &#x2F; 纽约、荷兰阿姆斯特丹、中国香港以及日本大阪均有机房，其中洛杉矶有三网直连、CN2 GT、CN2 GIA 顶级线路接入，香港有 CN2 GIA 顶级线路接入，日本大阪有软银 (BBTEC, Soft­Bank) 线路接入，荷兰有联通 CU PM (AS9929&#x2F;​AS10099) 精品线路接入。顶级技术，自研 VPS 后台管理面板 Ki­wiVM Con­trol Panel ，已实现高度自动化并提供完善的 API 接口，支持一键迁移机房，并且提供免费自动备份、免费快照以及 99.9% SLA 保障。支持支付宝、Pay­Pal、信用卡等主流付款方式。</p><p>官网地址：<a href="https://bandwagonhost.com(已被墙)/">https://bandwagonhost.com（已被墙）</a></p><p>官网镜像：<a href="https://loll.cc/bwgia">点击进入</a></p><p><strong>注意事项和其它说明</strong></p><p>进入官网前请先关闭代理或魔法上网，填写注册信息时请尽量填写真实信息，以免被判定为欺诈导致被砍单。</p><h2 id="BandwagonHost-搬瓦工-最新优惠码"><a href="#BandwagonHost-搬瓦工-最新优惠码" class="headerlink" title="BandwagonHost(搬瓦工) 最新优惠码"></a>BandwagonHost(搬瓦工) 最新优惠码</h2><p><strong>2022最新优惠码</strong>：<code>BWHNY2022</code>（循环优惠 12.22%）<br><strong>终身优惠码</strong>：<code>BWH3HYATVBJW</code> (循环优惠 6.58%)</p><h2 id="BandwagonHost-搬瓦工-美国洛杉矶三网-CN2-GIA-线路-VPS"><a href="#BandwagonHost-搬瓦工-美国洛杉矶三网-CN2-GIA-线路-VPS" class="headerlink" title="BandwagonHost(搬瓦工) 美国洛杉矶三网 CN2 GIA 线路 VPS"></a><a href="https://loll.cc/bwg">BandwagonHost</a>(搬瓦工) 美国洛杉矶三网 CN2 GIA 线路 VPS</h2><p>SSD RAID-10，免费自动备份，免费快照；支持后台自助迁移机房。</p><p>电信、联通双程 CN2 GIA 线路；移动去程直连，回程 CN2 GIA 线路。测试 IPv4 地址：<code>173.242.115.254</code></p><h2 id="BandwagonHost-搬瓦工-日本大阪-软银线路-VPS"><a href="#BandwagonHost-搬瓦工-日本大阪-软银线路-VPS" class="headerlink" title="BandwagonHost(搬瓦工) 日本大阪 软银线路 VPS"></a><a href="https://loll.cc/bwg">BandwagonHost</a>(搬瓦工) 日本大阪 软银线路 VPS</h2><p>SSD RAID-10，免费自动备份，免费快照；支持后台自助迁移机房。</p><p>三网软银 (BBTEC, Soft­Bank) 线路。测试 IPv4 地址：<code>185.212.59.2</code></p><h2 id="BandwagonHost-搬瓦工-中国香港-CN2-GIA-线路-VPS"><a href="#BandwagonHost-搬瓦工-中国香港-CN2-GIA-线路-VPS" class="headerlink" title="BandwagonHost(搬瓦工) 中国香港 CN2 GIA 线路 VPS"></a><a href="https://loll.cc/bwg">BandwagonHost</a>(搬瓦工) 中国香港 CN2 GIA 线路 VPS</h2><p>SSD RAID-10，免费自动备份，免费快照。1Gbps 带宽，目前售卖香港 G 口带宽 CN2 GIA 的仅此一家。</p><p>电信走 CN2 GIA 线路；联通、移动常规线路直连。测试 IPv4 地址：<code>93.179.124.1</code></p><h2 id="BandwagonHost-搬瓦工-荷兰阿姆斯特丹-CU-PM-线路-VPS"><a href="#BandwagonHost-搬瓦工-荷兰阿姆斯特丹-CU-PM-线路-VPS" class="headerlink" title="BandwagonHost(搬瓦工) 荷兰阿姆斯特丹 CU PM 线路 VPS"></a><a href="https://loll.cc/bwg">BandwagonHost</a>(搬瓦工) 荷兰阿姆斯特丹 CU PM 线路 VPS</h2><p>SSD RAID-10，免费自动备份，免费快照；支持后台自助迁移机房。</p><p>三网联通 CU PM (AS9929&#x2F;AS10099) 线路。测试 IPv4 地址：<code>104.255.64.1</code></p><h2 id="BandwagonHost-搬瓦工-其它多机房-VPS"><a href="#BandwagonHost-搬瓦工-其它多机房-VPS" class="headerlink" title="BandwagonHost(搬瓦工) 其它多机房 VPS"></a><a href="https://loll.cc/bwg">BandwagonHost</a>(搬瓦工) 其它多机房 VPS</h2><p>可选洛杉矶 DC2&#x2F;DC4&#x2F;DC8、弗里蒙特、新泽西、纽约、荷兰阿姆斯特丹等机房；默认 1Gbps 带宽，在后台 Ki­wiVM 面板可免费一键切换机房；可切换到洛杉矶 DC3 机房 (CN2 GT 线路)，流量变为原来的 1&#x2F;3。</p><h2 id="BandwagonHost-搬瓦工-最新官网镜像地址"><a href="#BandwagonHost-搬瓦工-最新官网镜像地址" class="headerlink" title="BandwagonHost(搬瓦工) 最新官网镜像地址"></a><a href="https://loll.cc/bwg">BandwagonHost</a>(搬瓦工) 最新官网镜像地址</h2><p>由于你懂的原因搬瓦工官网经常会被迫失联，所以官方提供了一个主域名和几个镜像域名。最后一个是官方最新提供的，可流畅访问。</p><ul><li>bandwagonhost.com（已被墙）</li><li>bwh1.net（已被墙）</li><li>bwh8.net（已被墙）</li><li>bwh88.net（已被墙）</li><li>bwh89.net（移动用户无法访问）</li><li><strong><a href="https://loll.cc/bwg">最新镜像地址</a></strong></li></ul><p>具体套餐如下：</p><p><strong>2022最新优惠码</strong>：<code>BWHNY2022</code>（循环优惠 12.22%）<br><strong>终身优惠码</strong>：<code>BWH3HYATVBJW</code> (循环优惠 6.58%)</p><p>这俩优惠码是都可以用的，今天重点推荐的就是第一款——<a href="https://loll.cc/bwgia">CN2 GIA-E 新款限量版</a>. 因为经常缺货，而且越来越贵了，有需要的可以上车，如果觉得单纯用来那啥比较贵的话，可以选择俩到仨人分摊费用，或者早上10点左右到时候去蹲一蹲24块的<a href="https://loll.cc/tx">腾讯云香港轻量应用服务器</a></p><p>针对<a href="https://loll.cc/bwgia">CN2 GIA-E 新款限量版</a>瓦工和<a href="https://loll.cc/tx">腾讯云轻量香港</a>相比，</p><p><strong>优点</strong>：</p><ul><li>三个快照功能 + 自动备份，可以让小白很省心（腾讯的需要手动备份）</li><li>可以切换10个机房（<a href="https://blog.laoda.de/archives/cn2">三网CN2 GIA</a>，外加软银机房，电信联通都可以起飞，腾讯目前只有CN2 GIA，而且貌似还改了线路）</li><li>线路好</li></ul><p><strong>缺点</strong>：</p><ul><li>贵</li><li>流量少</li></ul><table><thead><tr><th>#</th><th>服务商</th><th>机房</th><th>CPU</th><th>内存</th><th>硬盘</th><th>带宽</th><th>流量</th><th>线路</th><th>IPV4</th><th>架构</th><th>价格</th><th>库存</th></tr></thead><tbody><tr><td>1#</td><td><strong>CN2 GIA-E 新款限量版（重点推荐）</strong></td><td>LA</td><td>1</td><td>1G</td><td>20G SSD</td><td>1Gbps</td><td>500GB&#x2F;月</td><td>CN2-GIA</td><td>1</td><td>KVM</td><td>$89.99&#x2F;年</td><td><a href="https://bwh81.net/aff.php?aff=67086&pid=105">购买</a></td></tr><tr><td>2#</td><td>TOKYO CN2 GIA</td><td>日本</td><td>2</td><td>2G</td><td>40G</td><td>1.2Gbps</td><td>500G</td><td>CN2-GIA</td><td>1</td><td>KVM</td><td>$90&#x2F;月</td><td><a href="https://bwh81.net/aff.php?aff=67086&pid=108">购买</a></td></tr><tr><td>3#</td><td>TOKYO CN2 GIA</td><td>日本</td><td>4</td><td>4G</td><td>80G</td><td>1.2Gbps</td><td>1.0T</td><td>CN2-GIA</td><td>1</td><td>KVM</td><td>$155&#x2F;月</td><td><a href="https://bwh81.net/aff.php?aff=67086&pid=109">购买</a></td></tr><tr><td>4#</td><td>TOKYO CN2 GIA</td><td>日本</td><td>6</td><td>8G</td><td>160G</td><td>1.2Gbps</td><td>2.0T</td><td>CN2-GIA</td><td>1</td><td>KVM</td><td>$299&#x2F;月</td><td><a href="https://bwh81.net/aff.php?aff=67086&pid=110">购买</a></td></tr><tr><td>5#</td><td>TOKYO CN2 GIA</td><td>日本</td><td>8</td><td>16G</td><td>320G</td><td>1.2Gbps</td><td>4.0T</td><td>CN2-GIA</td><td>1</td><td>KVM</td><td>$589&#x2F;月</td><td><a href="https://bwh81.net/aff.php?aff=67086&pid=111">购买</a></td></tr><tr><td>6#</td><td>搬瓦工-CN2 GIA-E</td><td>LA</td><td>2</td><td>1G</td><td>20GB</td><td>2.5G</td><td>1.0T&#x2F;月</td><td>CN2-GIA</td><td>1</td><td>KVM</td><td>$50&#x2F;季</td><td><a href="https://bwh81.net/aff.php?aff=67086&pid=87">购买</a></td></tr><tr><td>7#</td><td>搬瓦工-CN2 GIA-E</td><td>LA</td><td>3</td><td>2G</td><td>40G SSD</td><td>2.5G</td><td>2.0T&#x2F;月</td><td>CN2-GIA</td><td>1</td><td>KVM</td><td>$90&#x2F;季</td><td><a href="https://bwh81.net/aff.php?aff=67086&pid=88">购买</a></td></tr><tr><td>8#</td><td>搬瓦工-CN2 GIA-E</td><td>LA</td><td>4</td><td>4G</td><td>80G SSD</td><td>2.5G</td><td>3.0T&#x2F;月</td><td>CN2-GIA</td><td>1</td><td>KVM</td><td>$57&#x2F;月</td><td><a href="https://bwh81.net/aff.php?aff=67086&pid=89">购买</a></td></tr><tr><td>9#</td><td>搬瓦工-CN2 GIA-E</td><td>LA</td><td>6</td><td>8G</td><td>160G</td><td>5G</td><td>5.0T&#x2F;月</td><td>CN2-GIA</td><td>1</td><td>KVM</td><td>$87&#x2F;月</td><td><a href="https://bwh81.net/aff.php?aff=67086&pid=90">购买</a></td></tr><tr><td>10#</td><td>搬瓦工-CN2 GIA-E</td><td>LA</td><td>8</td><td>16G</td><td>320G</td><td>10G</td><td>8.0T&#x2F;月</td><td>CN2-GIA</td><td>1</td><td>KVM</td><td>$160&#x2F;月</td><td><a href="https://bwh81.net/aff.php?aff=67086&pid=91">购买</a></td></tr><tr><td>11#</td><td>搬瓦工-CN2 GIA-E</td><td>LA</td><td>10</td><td>32G</td><td>640G</td><td>10G</td><td>10.0T&#x2F;月</td><td>CN2-GIA</td><td>1</td><td>KVM</td><td>$290&#x2F;月</td><td><a href="https://bwh81.net/aff.php?aff=67086&pid=92">购买</a></td></tr><tr><td>12#</td><td>搬瓦工-CN2 GIA-E</td><td>LA</td><td>12</td><td>64G</td><td>1280G</td><td>10G</td><td>12.0T&#x2F;月</td><td>CN2-GIA</td><td>1</td><td>KVM</td><td>$550&#x2F;月</td><td><a href="https://bwh81.net/aff.php?aff=67086&pid=93">购买</a></td></tr><tr><td>13#</td><td>搬瓦工-香港</td><td>HK</td><td>2</td><td>2G</td><td>40G</td><td>1Gbps</td><td>500G&#x2F;月</td><td>CN2-GIA</td><td>1</td><td>KVM</td><td>$90&#x2F;月</td><td><a href="https://bwh81.net/aff.php?aff=67086&pid=95">购买</a></td></tr><tr><td>14#</td><td>搬瓦工-香港</td><td>HK</td><td>4</td><td>4G</td><td>80G</td><td>1Gbps</td><td>1.0T&#x2F;月</td><td>CN2-GIA</td><td>1</td><td>KVM</td><td>$156&#x2F;月</td><td><a href="https://bwh81.net/aff.php?aff=67086&pid=96">购买</a></td></tr><tr><td>15#</td><td>搬瓦工-香港</td><td>HK</td><td>6</td><td>8G</td><td>160G</td><td>1Gbps</td><td>2.0T&#x2F;月</td><td>CN2-GIA</td><td>1</td><td>KVM</td><td>$300&#x2F;月</td><td><a href="https://bwh81.net/aff.php?aff=67086&pid=97">购买</a></td></tr><tr><td>16#</td><td>搬瓦工-香港</td><td>HK</td><td>8</td><td>16G</td><td>320G</td><td>1Gbps</td><td>4.0T&#x2F;月</td><td>CN2-GIA</td><td>1</td><td>KVM</td><td>$590&#x2F;月</td><td><a href="https://bwh81.net/aff.php?aff=67086&pid=98">购买</a></td></tr><tr><td>17#</td><td>搬瓦工-cn2</td><td>LA</td><td>1</td><td>1G</td><td>20G</td><td>1Gbps</td><td>1.0T&#x2F;月</td><td>CN2-GT</td><td>1</td><td>KVM</td><td>$49.99&#x2F;年</td><td><a href="https://bwh81.net/aff.php?aff=67086&pid=57">购买</a></td></tr><tr><td>18#</td><td>搬瓦工-cn2</td><td>LA</td><td>1</td><td>2G</td><td>40G</td><td>1Gbps</td><td>2T&#x2F;月</td><td>CN2-GT</td><td>1</td><td>KVM</td><td>$99.99&#x2F;年</td><td><a href="https://bwh81.net/aff.php?aff=67086&pid=58">购买</a></td></tr><tr><td>19#</td><td>搬瓦工-cn2</td><td>LA</td><td>2</td><td>4G</td><td>80G</td><td>1Gbps</td><td>3T&#x2F;月</td><td>CN2-GT</td><td>1</td><td>KVM</td><td>$199.99&#x2F;年</td><td><a href="https://bwh81.net/aff.php?aff=67086&pid=59">购买</a></td></tr><tr><td>20#</td><td>搬瓦工-cn2</td><td>LA</td><td>2</td><td>8G</td><td>160G</td><td>1Gbps</td><td>5T&#x2F;月</td><td>CN2-GT</td><td>1</td><td>KVM</td><td>$399.99&#x2F;年</td><td><a href="https://bwh81.net/aff.php?aff=67086&pid=67">购买</a></td></tr><tr><td>21#</td><td>搬瓦工-cn2</td><td>LA</td><td>3</td><td>16G</td><td>320G</td><td>1Gbps</td><td>8T&#x2F;月</td><td>CN2-GT</td><td>1</td><td>KVM</td><td>$799.99&#x2F;年</td><td></td></tr></tbody></table><h2 id="相关推荐"><a href="#相关推荐" class="headerlink" title="相关推荐"></a>相关推荐</h2><p>《<a href="https://blog.laoda.de/archives/vps-choose">VPS服务器选购不完全指南</a>》</p><h2 id="特别感谢"><a href="#特别感谢" class="headerlink" title="特别感谢"></a>特别感谢</h2><p><a href="https://p3terx.com/archives/cheap-vps-bandwagonhost.html">@P3TERX ZONE</a><br><a href="https://daniao.org/">@大鸟博客</a></p><p>以上很多内容都是<del>复制</del>的。主要是懒，不过我的的确确买了一只，准备当作纪念顺便那啥，如果用于“特殊”用途，建议两到三人分摊，这样性价比更高一点！</p>]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 美国VPS </tag>
            
            <tag> 欧洲VPS </tag>
            
            <tag> CN2 GIA </tag>
            
            <tag> 搬瓦工 </tag>
            
            <tag> 亚太VPS </tag>
            
            <tag> 特价VPS </tag>
            
            <tag> 自动备份 </tag>
            
            <tag> 瓦工 </tag>
            
            <tag> 免费快照 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩的Docker项目】搭建两个专属自己的服务器监控——Ward &amp;&amp; ServerStatus</title>
      <link href="/archives/ward-serverstatus-install/"/>
      <url>/archives/ward-serverstatus-install/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>祝大家新年快乐！</p><p>上一期和大家介绍了<a href="https://blog.laoda.de/archives/uptimekuma-install">如何搞一个自己的网站监控</a>，这一期就给大家带来<del>一个</del>两个关于监控自己的服务器状态的项目。</p><p>如果你只有一个服务器，可以参考第一个项目，如果你有不止一台，可以搭建第二个项目。</p><p><strong>单台服务器的演示地址</strong>：<a href="https://ward.laoda.de/">https://ward.laoda.de/</a></p><p>效果如下：</p><img src="https://pic.loll.cc/images/2022/01/01/202201011224725.png" alt="image-20220101122452493" style="zoom:50%;" /><p><strong>多台服务器的演示地址</strong>：<a href="https://status.laoda.de/">https://status.laoda.de/</a></p><p>效果如下：</p><img src="https://pic.loll.cc/images/2022/01/01/202201011225019.png" alt="image-20220101122538855" style="zoom:50%;" /><p>YouTube：<a href="https://youtu.be/Eq1HM84AKUs">https://youtu.be/Eq1HM84AKUs</a></p><p><joe-bilibili bvid="BV17Y411a73v"></joe-bilibili></p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><ul><li>服务器：腾讯云轻量应用服务器（<a href="https://loll.cc/tx">购买链接</a>）</li><li>系统：Debian 10（<a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3">DD脚本 </a> 非必需DD用原来的系统也OK）</li><li>域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a>  <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>安装好Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker#5%E5%AE%89%E8%A3%85dockerdocker-compose">相关脚本</a>）</li><li>安装好Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</li></ul><h2 id="Ward（适合单台服务器）"><a href="#Ward（适合单台服务器）" class="headerlink" title="Ward（适合单台服务器）"></a>Ward（适合单台服务器）</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>Ward 是一个使用 Java 开发的简单而简约的服务器监控工具。Ward 支持自适应设计系统，它还支持深色主题，它只显示服务器的主要信息。Ward 在所有流行的操作系统上运行良好，因为它使用 <a href="https://github.com/oshi/oshi">OSHI</a>。</p><p>项目地址：<a href="https://github.com/B-Software/Ward">https://github.com/B-Software/Ward</a></p><p>效果如下：</p><img src="https://pic.loll.cc/images/2022/01/01/202201011224725.png" alt="image-20220101122452493" style="zoom:50%;" /><h3 id="Docker搭建"><a href="#Docker搭建" class="headerlink" title="Docker搭建"></a>Docker搭建</h3><p>我们机器上已经安装好了Docker以及Docker-compose，搭建就非常容易啦。</p><p>首先通过SSH登陆服务器，在docker_data文件夹下创建Ward文件夹</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt update -y <span class="comment">## 更新软件源</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p ~/data/docker_data/Ward  <span class="comment">## 在docker_data文件夹下创建Ward文件夹</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ~/data/docker_data/Ward  <span class="comment">## 进入文件夹</span></span><br><span class="line"></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/AntonyLeons/Ward.git   <span class="comment">## 在创建的文件夹下克隆项目并构建镜像</span></span><br><span class="line"><span class="built_in">cd</span> Ward </span><br><span class="line">docker build . --tag ward</span><br></pre></td></tr></table></figure><blockquote><p>评论区小伙伴反馈：ward官方的文件现在少了几个，不能构建了。报错的用这个地址 <a href="https://github.com/AntonyLeons/Ward%EF%BC%8C%E6%98%AF%E6%9C%89%E4%BA%BA%E5%85%8B%E9%9A%86%E4%B8%8B%E8%BD%BD%E7%9A%84%E3%80%82">https://github.com/AntonyLeons/Ward，是有人克隆下载的。</a></p></blockquote><p>等构建镜像完成之后，直接运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --name ward -p 4000:4000 \</span><br><span class="line">-p 自定义端口号:自定义端口号 \</span><br><span class="line">--privileged=<span class="literal">true</span> \</span><br><span class="line">--restart always \</span><br><span class="line">ward:latest</span><br></pre></td></tr></table></figure><p>注意：<code>-p 自定义端口号:自定义端口号</code>这边一定要填，下面会用到。</p><p>然后我们用Chrome打开<code>http://IP:4000/</code>地址，我们会看到如下图的界面，在此完成基本设置。</p><img src="https://pic.loll.cc/images/2022/01/01/202201011238620.png" alt="image-20210628155606181" style="zoom:50%;" /><p><code>Server Name</code>随便填，这个就是搭建完后的浏览器地址栏信息；然后可以选择命令主题或者黑暗主题；<code>Application Port</code>要填写成刚刚创建Docker容器时的<code>自定义端口号</code>。然后点击<code>LAUNCH</code>按钮即可完成基本设置。</p><p>暗色系效果如下：</p><img src="https://pic.loll.cc/images/2022/01/01/202201011331710.png" alt="image-20220101133133660" style="zoom:50%;" /><p>注：如果这里填错了的话，可以进入容器内部，修改<code>setup.ini</code>文件即可。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker <span class="built_in">exec</span> -it ward /bin/sh</span><br><span class="line">$ nano setup.ini</span><br></pre></td></tr></table></figure><p>或者直接停止容器，重建</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker stop ward</span><br><span class="line">docker <span class="built_in">rm</span> -f ward </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker run -d --name ward -p 4000:4000 \</span><br><span class="line">-p 自定义端口号:自定义端口号 \</span><br><span class="line">--privileged=<span class="literal">true</span> \</span><br><span class="line">--restart always \</span><br><span class="line">ward:latest</span><br></pre></td></tr></table></figure><p>这时候我们用Chrome打开<code>http://IP:自定义端口号/</code>即可访问我们的监控面板了。</p><h3 id="利用NPM配置反向代理"><a href="#利用NPM配置反向代理" class="headerlink" title="利用NPM配置反向代理"></a>利用NPM配置反向代理</h3><p>利用之前安装好NginxProxyManager，可以非常轻松完成反向代理的操作。（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</p><img src="https://pic.loll.cc/images/2022/01/01/202201011326631.png" alt="image-20220101132620575" style="zoom:50%;" /><img src="https://pic.loll.cc/images/2022/01/01/202201011324985.png" alt="image-20220101132435879" style="zoom:50%;" /><img src="https://pic.loll.cc/images/2022/01/01/202201011324122.png" alt="image-20220101132456073" style="zoom:50%;" /><p>配置好之后，访问域名就可以啦。</p><h2 id="ServerStatus（适合多台服务器）"><a href="#ServerStatus（适合多台服务器）" class="headerlink" title="ServerStatus（适合多台服务器）"></a>ServerStatus（适合多台服务器）</h2><h3 id="简介-1"><a href="#简介-1" class="headerlink" title="简介"></a>简介</h3><p>项目地址：<a href="https://github.com/lidalao/ServerStatus">https://github.com/lidalao/ServerStatus</a><br>项目基于cppla版本ServerStatus， 增加如下功能：</p><ul><li>更方便的节点管理, 支持增删改查</li><li>上下线通知（Telegram）</li><li>Agent机器安装脚本改为systemd， 支持开机自启</li></ul><h3 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h3><p>在<strong>服务端</strong>复制以下命令，一键到底。请记得替换成你自己的<code>YOUR_TG_CHAT_ID</code>和<code>YOUR_G_BOT_TOKEN</code>。</p><p>其中，<code>Bot token</code>可以通过<code>@BotFather</code>创建机器人获取， <code>Chat id</code>可以通过<code>@getuserID</code>获取。</p><img src="https://pic.loll.cc/images/2022/01/01/202201011341880.png" alt="image-20220101134112788" style="zoom:33%;" /><p><code>Bot token</code>就是<code>5077*****</code></p><p>配置完成，<code>后面的步骤都完成之后</code>，再点击：</p><img src="https://pic.loll.cc/images/2022/01/01/202201011344219.png" alt="image-20220101134440158" style="zoom:33%;" /><p>进入自己创建的机器人页面，再点击开始就能有监控了。</p><p>效果如下：</p><img src="https://pic.loll.cc/images/2022/01/01/202201011346851.png" alt="image-20220101134630788" style="zoom:33%;" /><img src="https://pic.loll.cc/images/2022/01/01/202201011341528.png" alt="image-20220101134155479" style="zoom:33%;" /><p> <code>Chat id</code>就是<code>98*****</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir -p ~/data/docker_data/sss</span><br><span class="line"></span><br><span class="line">cd ~/data/docker_data/sss</span><br><span class="line"></span><br><span class="line">wget --no-check-certificate https://raw.githubusercontent.com/lidalao/ServerStatus/master/sss.sh &amp;&amp; chmod +x ./sss.sh &amp;&amp; sudo ./sss.sh YOUR_TG_CHAT_ID YOUR_TG_BOT_TOKEN</span><br></pre></td></tr></table></figure><p>注意替换<code>YOUR_TG_CHAT_ID</code>和<code>YOUR_TG_BOT_TOKEN</code>  如果没有Telegram的话，不带这俩参数也可以。</p><p>安装成功后，web服务地址：<a href="http://ip:8081/">http://ip:8081</a></p><p>通过<code>sss.sh</code>脚本，可以很方便的进行节点的增删改查操作。特别的，添加新节点时，会有提示如何在新节点安装对应的agent服务。如果你想了解更多，可以看看进阶部分，不看也足够用。</p><h3 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h3><p>由于没改动ServerStatus代码，理论上，任何版本的ServerStatus都可以用<code>sss.py</code>来做管理， 都可以用bot.py来进行上下监控。</p><p>节点管理时，把<code>sss.py</code>放到和<code>config.json</code>同一目录，运行<code>python3 _sss.py</code>即可。唯一需要改动的就是restartSSS函数，此函数功能是重启ServerStatus服务，改成你对应的服务启动方式，例如用<code>systemd</code>,则把<code>[&quot;docker-compose&quot;, &quot;restart&quot;]</code>改成<code>[&quot;systemctl&quot;, &quot;restart&quot;, &quot;ServerStatus&quot;]</code>。</p><p>接下来是上下线监控服务，同样适用于任何版本的ServerStatus。 它只有一个文件<code>bot.py</code>, 可以跑在任何机器上，不是必须在服务端，丢在家里nas上也成。</p><p><code>bot.py</code>里面有三个配置信息，<code>bot_token</code>, <code>cat_id</code>和<code>NODE_STATUS_URL</code>, 改成你自己的对应信息，<code>NODE_STATUS_URL</code>需要改成你自己的探针web服务地址，例如，域名探针<code>https://tz.test.com</code>, 则改为<code>https://tz.test.com/json/stats.json</code>。配置修改完后，运行<code>python3 bot.py</code>即可开始监控</p><h3 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h3><p>利用之前安装好NginxProxyManager，可以非常轻松完成反向代理的操作。（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</p><img src="https://pic.loll.cc/images/2022/01/01/202201011326631.png" alt="image-20220101132620575" style="zoom:50%;" /><img src="https://pic.loll.cc/images/2022/01/01/202201011329810.png" alt="image-20220101132943763" style="zoom:50%;" /><img src="https://pic.loll.cc/images/2022/01/01/202201011328971.png" alt="image-20220101132842926" style="zoom:50%;" /><p>配置好之后，访问域名就可以啦。</p><h2 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h2><ul><li><p><a href="https://www.eula.club/%E6%90%AD%E5%BB%BAWard%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9B%91%E6%8E%A7%E9%9D%A2%E6%9D%BF.html">《搭建Ward服务器监控面板》</a> <a href="https://www.eula.club/">@Eulaの小破站</a></p></li><li><p><a href="https://lidalao.com/archives/87">《支持节点管理和监控的ServerStatus，它来了》</a> <a href="https://lidalao.com/">@李大佬</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> 服务器监控 </tag>
            
            <tag> Ward </tag>
            
            <tag> SeverStatus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩的Docker项目】搭建一个专属自己的网站监控——Uptime Kuma</title>
      <link href="/archives/docker-compose-install-uptimekuma/"/>
      <url>/archives/docker-compose-install-uptimekuma/</url>
      
        <content type="html"><![CDATA[<p>前阵子jsDelivr服务出现故障，导致很多把css、js文件通过jsDelivr引用的小伙伴们的博客无法正常显示。</p><p><img src="https://pic.loll.cc/images/2021/12/25/202112252153594.png"></p><p>jsDelivr的各个网站状态监控可以在这个网址看到：<a href="https://status.jsdelivr.com/">https://status.jsdelivr.com</a></p><p>今天我们也来搭建一个类似的网站——<a href="https://github.com/louislam/uptime-kuma">Uptime Kuma</a>，监控我们自己的网站的运行状态。</p><h2 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h2><p>YouTube：<a href="https://youtu.be/Rn7PS8HKZ4c">https://youtu.be/Rn7PS8HKZ4c</a></p><p>bilibili: <a href="https://www.bilibili.com/BV1ST4y1f7ed">https://www.bilibili.com/BV1ST4y1f7ed</a></p><p><img src="https://pic.loll.cc/images/2021/12/25/202112252155828.png"></p><p><img src="https://pic.loll.cc/images/2021/12/25/202112252156039.png" alt="image-20211225215626988"></p><h2 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h2><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><ul><li><p>服务器：腾讯云轻量应用服务器（<a href="https://loll.cc/tx">购买链接</a>）</p></li><li><p>系统：Debian 10（<a href="https://blog.laoda.de/archives/useful-script">DD脚本</a>）</p></li><li><p>域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo">域名购买、域名解析</a>  <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</p></li><li><p>安装好Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker">相关脚本</a>）</p></li><li><p>安装好Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager">相关教程</a>）</p></li></ul><p>Docker-compose代码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">version: &#x27;3.3&#x27;</span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  uptime-kuma:</span><br><span class="line">    image: louislam/uptime-kuma</span><br><span class="line">    container_name: uptime-kuma</span><br><span class="line">    volumes:</span><br><span class="line">      - ./uptime-kuma:/app/data</span><br><span class="line">    ports:</span><br><span class="line">      - 3001:3001</span><br></pre></td></tr></table></figure><p>宝塔用户的话，添加下面的配置到nginx配置文件里</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line"><span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line"><span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line"><span class="attribute">proxy_pass</span> http://127.0.0.1:3001/;</span><br><span class="line"><span class="attribute">proxy_http_version</span> <span class="number">1</span>.<span class="number">1</span>;</span><br><span class="line"><span class="attribute">proxy_set_header</span> Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line"><span class="attribute">proxy_set_header</span> Connection <span class="string">&quot;upgrade&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>如果大家输入 <a href="https://status.laoda.de/">https://status.laoda.de</a> 会看到这个页面：</p><p><img src="https://pic.loll.cc/images/2021/12/25/202112252209390.png" alt="image-20211225220936241"></p><p>这是我搭建的服务器监控页面，与监控网站不同，这边监控的是一台台服务器的运行状态。</p><p>现在大家可能手头只有一台服务器，搭这个没什么必要，如果后续大家手上有多台服务器，也可以搭建一个类似的页面来监控服务器的状态。</p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker部署 </tag>
            
            <tag> Docker </tag>
            
            <tag> 网站监控 </tag>
            
            <tag> Uptime Kuma </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【双旦特价活动】Racknerd2022年促销  VPS最低$9.89 /年 (续费同价)</title>
      <link href="/archives/racknerd-2021-christmas-sale/"/>
      <url>/archives/racknerd-2021-christmas-sale/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.daniao.org/tag/racknerd/">RackNerd</a>发布了2022年的元旦促销，最便宜款，$9.89 &#x2F;年 (续费同价)，1C&#x2F;512M&#x2F;10GSSD&#x2F;1T流量@1Gbps带宽，可选6个机房：洛杉矶, 圣何塞, 达拉斯, 芝加哥, 纽约, 西雅图，感兴趣的小伙伴可以围观。</p><h4 id="1、官网"><a href="#1、官网" class="headerlink" title="1、官网"></a>1、官网</h4><p><strong>网址：<a href="https://my.racknerd.com/aff.php?aff=1158">https://www.racknerd.com/</a></strong></p><h4 id="2、元旦促销-续费同价"><a href="#2、元旦促销-续费同价" class="headerlink" title="2、元旦促销-续费同价"></a>2、元旦促销-续费同价</h4><p>可选机房：洛杉矶, 圣何塞, 达拉斯, 芝加哥, 纽约, 西雅图。</p><p>基于KVM虚拟，纯SSD raid10整列，自带一个IPv4，1Gbps带宽，solusvm管理面板，支持rdns。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>SSD</strong></th><th><strong>月流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>512M</td><td>1核</td><td>10G</td><td>1T</td><td>$9.89&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=620">链接</a></strong></td></tr><tr><td>1G</td><td>1核</td><td>20G</td><td>2T</td><td>$13.98&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=621">链接</a></strong></td></tr><tr><td>2G</td><td>2核</td><td>35G</td><td>4T</td><td>$24.98&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=622">链接</a></strong></td></tr><tr><td>3G</td><td>2核</td><td>50G</td><td>6T</td><td>$31.98&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=623">链接</a></strong></td></tr></tbody></table><p><strong>以下是往期促销，还能买，感兴趣的可以看看。</strong></p><hr><h4 id="3、双12优惠套餐"><a href="#3、双12优惠套餐" class="headerlink" title="3、双12优惠套餐"></a>3、双12优惠套餐</h4><p>可选机房洛杉矶, 圣何塞, 达拉斯, 芝加哥, 纽约, 西雅图。</p><p>基于KVM虚拟，纯SSD raid10整列，自带一个IPv4，1Gbps带宽，solusvm管理面板，支持rdns。</p><p>注意，以下价格为循环优惠，续费同价。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>SSD</strong></th><th><strong>月流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1.5G</td><td>1核</td><td>25G</td><td>3T</td><td>$17.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=616">链接</a></strong></td></tr><tr><td>3G</td><td>2核</td><td>40G</td><td>5T</td><td>$29.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=617">链接</a></strong></td></tr><tr><td>4G</td><td>2核</td><td>60G</td><td>6T</td><td>$39.99&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=618">链接</a></strong></td></tr></tbody></table><h4 id="4、网络星期一促销"><a href="#4、网络星期一促销" class="headerlink" title="4、网络星期一促销"></a>4、网络星期一促销</h4><p>可选机房洛杉矶, 圣何塞, 达拉斯, 芝加哥, 纽约, 西雅图。</p><p>基于KVM虚拟，纯SSD raid10整列，自带一个IPv4，1Gbps带宽，solusvm管理面板，支持rdns。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>SSD</strong></th><th><strong>月流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>512M</td><td>1核</td><td>9G</td><td>500G</td><td>$8.49&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=611">链接</a></strong></td></tr><tr><td>1.2G</td><td>1核</td><td>15G</td><td>1T</td><td>$12.79&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=612">链接</a></strong></td></tr><tr><td>2G</td><td>2核</td><td>40G</td><td>3T</td><td>$22.69&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=613">链接</a></strong></td></tr><tr><td>3G</td><td>2核</td><td>50G</td><td>5T</td><td>$31.89&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=614">链接</a></strong></td></tr></tbody></table><h4 id="5、黑五促销套餐"><a href="#5、黑五促销套餐" class="headerlink" title="5、黑五促销套餐"></a>5、黑五促销套餐</h4><p>可选机房：洛杉矶、圣何塞、达拉斯、芝加哥、纽约和西雅图</p><p>基于KVM虚拟，纯SSD raid10整列，自带一个IPv4，1Gbps带宽，solusvm管理面板，支持rdns。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>SSD</strong></th><th><strong>月流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>768M</td><td>1核</td><td>12G</td><td>1T</td><td>$10.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=587">链接</a></strong></td></tr><tr><td>1G</td><td>1核</td><td>25G</td><td>4T</td><td>$14.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=588">链接</a></strong></td></tr><tr><td>2.5G</td><td>2核</td><td>50G</td><td>6T</td><td>$27.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=589">链接</a></strong></td></tr><tr><td>3G</td><td>2核</td><td>60G</td><td>8T</td><td>$34.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=590">链接</a></strong></td></tr><tr><td>4G</td><td>3核</td><td>75G</td><td>10T</td><td>$43.39&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=591">链接</a></strong></td></tr></tbody></table><hr><p><strong>其他常规款促销，目前还可以购买</strong></p><hr><h4 id="6、内存1-5-2G配置的VPS"><a href="#6、内存1-5-2G配置的VPS" class="headerlink" title="6、内存1.5-2G配置的VPS"></a>6、内存1.5-2G配置的VPS</h4><p>基于KVM虚拟，纯SSD raid10整列，自带一个IPv4，1Gbps带宽，solusvm管理面板，支持rdns。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>硬盘</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1.5G</td><td>2核</td><td>20G</td><td>5.5T&#x2F;月</td><td>$19.50&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=102">链接</a></strong></td></tr><tr><td>1.5G</td><td>1核</td><td>30G</td><td>3T&#x2F;月</td><td>$25.95&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=319">链接</a></strong></td></tr><tr><td>2G</td><td>2核</td><td>23G</td><td>3.5T&#x2F;月</td><td>$20.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=74">链接</a></strong></td></tr><tr><td>2G</td><td>2核</td><td>35G</td><td>5T&#x2F;月</td><td>$22.49&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=513">链接</a></strong></td></tr><tr><td>2G</td><td>3核</td><td>25G</td><td>3T&#x2F;月</td><td>$21.80&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=58">链接</a></strong></td></tr><tr><td>2G</td><td>2核</td><td>25G</td><td>4.5T&#x2F;月</td><td>$21.89&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=121">链接</a></strong></td></tr><tr><td>2G</td><td>2核</td><td>35G</td><td>4T&#x2F;月</td><td>$22.80&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=66">链接</a></strong></td></tr><tr><td>2G</td><td>2核</td><td>27G</td><td>5T&#x2F;月</td><td>$24.00&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=165">链接</a></strong></td></tr><tr><td>2G</td><td>2核</td><td>27G</td><td>5T&#x2F;月</td><td>$24.00&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=168">链接</a></strong></td></tr><tr><td>2G</td><td>2核</td><td>25G</td><td>4T&#x2F;月</td><td>$24.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=237">链接</a></strong></td></tr><tr><td>2G</td><td>2核</td><td>35G</td><td>4T&#x2F;月</td><td>$25.89&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=193">链</a><a href="https://my.racknerd.com/aff.php?aff=1158&pid=193">接</a></strong></td></tr></tbody></table><h4 id="7、内存2-5G-2-8G-VPS"><a href="#7、内存2-5G-2-8G-VPS" class="headerlink" title="7、内存2.5G-2.8G VPS"></a>7、内存2.5G-2.8G VPS</h4><p>基于KVM虚拟，纯SSD raid10整列，自带一个IPv4，1Gbps带宽，solusvm管理面板，支持rdns。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>硬盘</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>2.5G</td><td>1核</td><td>25G</td><td>3T&#x2F;月</td><td>$23.59&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=290">链接</a></strong></td></tr><tr><td>2.5G</td><td>2核</td><td>45G</td><td>5T&#x2F;月</td><td>$21.50&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=477">链接</a></strong></td></tr><tr><td>2.5G</td><td>3核</td><td>25G</td><td>5T&#x2F;月</td><td>$22.00&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=171">链接</a></strong></td></tr><tr><td>2.5G</td><td>2核</td><td>35G</td><td>4T&#x2F;月</td><td>$22.38&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=430">链接</a></strong></td></tr><tr><td>2.5G</td><td>2核</td><td>45G</td><td>5T&#x2F;月</td><td>$22.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=182">链接</a></strong></td></tr><tr><td>2.5G</td><td>3核</td><td>35G</td><td>6T&#x2F;月</td><td>$23.50&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=98">链接</a></strong></td></tr><tr><td>2.5G</td><td>2核</td><td>33G</td><td>4T&#x2F;月</td><td>$25.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=240">链接</a></strong></td></tr><tr><td>2.5G</td><td>2核</td><td>40G</td><td>5T&#x2F;月</td><td>$25.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=327">链接</a></strong></td></tr><tr><td>2.5G</td><td>3核</td><td>40G</td><td>6T&#x2F;月</td><td>$27.80&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=57">链接</a></strong></td></tr><tr><td>2.5G</td><td>3核</td><td>40G</td><td>5T&#x2F;月</td><td>$27.80&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=59">链接</a></strong></td></tr><tr><td>2.5G</td><td>2核</td><td>38G</td><td>6.5T&#x2F;月</td><td>$28.71&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=53">链接</a></strong></td></tr><tr><td>2.5G</td><td>2核</td><td>50G</td><td>5T&#x2F;月</td><td>$39.95&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=320">链接</a></strong></td></tr><tr><td>2.74G</td><td>2核</td><td>43G</td><td>6T&#x2F;月</td><td>$27.40&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=263">链接</a></strong></td></tr><tr><td>2.8G</td><td>3核</td><td>58G</td><td>5T&#x2F;月</td><td>$29.99&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=522">链接</a></strong></td></tr></tbody></table><h4 id="8、内存3-3-74G-VPS"><a href="#8、内存3-3-74G-VPS" class="headerlink" title="8、内存3-3.74G VPS"></a>8、内存3-3.74G VPS</h4><p>基于KVM虚拟，纯SSD raid10整列，自带一个IPv4，1Gbps带宽，solusvm管理面板，支持rdns。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>硬盘</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>3G</td><td>3核</td><td>45G</td><td>6.5T&#x2F;月</td><td>$24.28&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=199">链接</a></strong></td></tr><tr><td>3G</td><td>2核</td><td>32G</td><td>4T&#x2F;月</td><td>$24.60&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=75">链接</a></strong></td></tr><tr><td>3G</td><td>3核</td><td>40G</td><td>4T&#x2F;月</td><td>$27.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=147">链接</a></strong></td></tr><tr><td>3G</td><td>3核</td><td>42G</td><td>5T&#x2F;月</td><td>$28.20&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=234">链接</a></strong></td></tr><tr><td>3G</td><td>2核</td><td>40G</td><td>5T&#x2F;月</td><td>$28.99&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=291">链接</a></strong></td></tr><tr><td>3G</td><td>3核</td><td>33G</td><td>6T&#x2F;月</td><td>$29.89&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=122">链接</a></strong></td></tr><tr><td>3G</td><td>2核</td><td>35G</td><td>5T&#x2F;月</td><td>$29.99&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=473">链接</a></strong></td></tr><tr><td>3G</td><td>3核</td><td>48G</td><td>7T&#x2F;月</td><td>$31.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=253">链接</a></strong></td></tr><tr><td>3.5G</td><td>3核</td><td>45G</td><td>7T&#x2F;月</td><td>$28.99&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=136">链接</a></strong></td></tr><tr><td>3.5G</td><td>3核</td><td>45G</td><td>7T&#x2F;月</td><td>$28.99&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=130">链接</a></strong></td></tr><tr><td>3.5G</td><td>3核</td><td>36G</td><td>5T&#x2F;月</td><td>$30.19&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=125">链接</a></strong></td></tr><tr><td>3.5G</td><td>3核</td><td>55G</td><td>6T&#x2F;月</td><td>$32.38&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=431">链接</a></strong></td></tr><tr><td>3.5G</td><td>3核</td><td>40G</td><td>6.5T&#x2F;月</td><td>$34.00&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=169">链接</a></strong></td></tr><tr><td>3.5G</td><td>2核</td><td>50G</td><td>6.5T&#x2F;月</td><td>$34.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=285">链接</a></strong></td></tr><tr><td>3.74G</td><td>3核</td><td>57G</td><td>8T&#x2F;月</td><td>$37.40&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=264">链接</a></strong></td></tr></tbody></table><h4 id="9、内存4G以上VPS"><a href="#9、内存4G以上VPS" class="headerlink" title="9、内存4G以上VPS"></a>9、内存4G以上VPS</h4><p>基于KVM虚拟，纯SSD raid10整列，自带一个IPv4，1Gbps带宽，solusvm管理面板，支持rdns。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>硬盘</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>4G</td><td>3核</td><td>45G</td><td>6T&#x2F;月</td><td>$35.68&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=153">链接</a></strong></td></tr><tr><td>4G</td><td>3核</td><td>45G</td><td>6T&#x2F;月</td><td>$35.68&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=76">链接</a></strong></td></tr><tr><td>4G</td><td>3核</td><td>50G</td><td>5T&#x2F;月</td><td>$42.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=241">链接</a></strong></td></tr><tr><td>4G</td><td>3核</td><td>50G</td><td>10T&#x2F;月</td><td>$45.89&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=474">链接</a></strong></td></tr><tr><td>4G</td><td>4核</td><td>55G</td><td>8T&#x2F;月</td><td>$39.89&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=195">链接</a></strong></td></tr><tr><td>5.5G</td><td>4核</td><td>88G</td><td>10T&#x2F;月</td><td>$63.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=254">链接</a></strong></td></tr><tr><td>8G</td><td>4核</td><td>100G</td><td>5T&#x2F;月</td><td>$89.00&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=312">链接</a></strong></td></tr></tbody></table><h4 id="10、大硬盘VPS"><a href="#10、大硬盘VPS" class="headerlink" title="10、大硬盘VPS"></a>10、大硬盘VPS</h4><p><strong>特征</strong>：1Gbps带宽，自带一个IPv4，solusvm管理，硬盘SSD cached，洛杉矶MC机房！</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>硬盘</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>2G</td><td>2核</td><td>50G</td><td>4T&#x2F;月</td><td>$36&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=61">链接</a></strong></td></tr><tr><td>4G</td><td>3核</td><td>80G</td><td>5T&#x2F;月</td><td>$59&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=62">链接</a></strong></td></tr><tr><td>6G</td><td>4核</td><td>140G</td><td>6T&#x2F;月</td><td>$95&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=63">链接</a></strong></td></tr><tr><td>8G</td><td>4核</td><td>100G</td><td>5T&#x2F;月</td><td>$89&#x2F;年</td><td><a href="https://my.racknerd.com/aff.php?aff=1158&pid=312"><strong>链接</strong></a></td></tr><tr><td>8G</td><td>4核</td><td>200G</td><td>8T&#x2F;月</td><td>$135&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=64">链接</a></strong></td></tr></tbody></table><h4 id="11、网络测试"><a href="#11、网络测试" class="headerlink" title="11、网络测试"></a>11、网络测试</h4><p><strong>洛杉矶DC02：</strong> 204.13.154.3，<a href="http://lg-lax02.racknerd.com/1000MB.test">http://lg-lax02.racknerd.com/1000MB.test</a></p><p><strong>洛杉矶DC05：</strong> 5.181.135.8，<a href="http://lg-lax05.racknerd.com/1000MB.test">http://lg-lax05.racknerd.com/1000MB.test</a></p><p><strong>圣何塞：</strong> 192.210.207.88，<a href="http://lg-sj.racknerd.com/1000MB.test">http://lg-sj.racknerd.com/1000MB.test</a></p><p><strong>西雅图：</strong> 192.3.253.2，<a href="http://lg-sea.racknerd.com/1000MB.test">http://lg-sea.racknerd.com/1000MB.test</a></p><p><strong>新泽西：</strong> 192.3.165.30，<a href="http://lg-nj.racknerd.com/1000MB.test">http://lg-nj.racknerd.com/1000MB.test</a></p><p><strong>达拉斯</strong>：198.23.249.100，<a href="http://lg-dal.racknerd.com/1000MB.test">http://lg-dal.racknerd.com/1000MB.test</a></p><p><strong>芝加哥：</strong> 198.23.228.15，<a href="http://lg-chi.racknerd.com/1000MB.test">http://lg-chi.racknerd.com/1000MB.test</a></p><p><strong>阿什本</strong> ：107.173.166.10，<a href="http://lg-ash.racknerd.com/1000MB.test">http://lg-ash.racknerd.com/1000MB.test</a></p><p><strong>亚特兰大：</strong> 107.173.164.160，<a href="http://lg-atl.racknerd.com/1000MB.test">http://lg-atl.racknerd.com/1000MB.test</a></p><p><strong>荷兰.阿姆斯特丹：</strong> 23.94.101.88，<a href="http://lg-ams.racknerd.com/1000MB.test">http://lg-ams.racknerd.com/1000MB.test</a></p><p><strong>水牛城：</strong> 192.3.81.8，<a href="http://lg-ny.racknerd.com/1000MB.test">http://lg-ny.racknerd.com/1000MB.test</a></p>]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Racknerd </tag>
            
            <tag> 特价VPS </tag>
            
            <tag> 圣诞 </tag>
            
            <tag> 活动 </tag>
            
            <tag> 元旦 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【圣诞特价活动】Cloudcone2021年的圣诞促销</title>
      <link href="/archives/cloudcone-2021-christmas-sale/"/>
      <url>/archives/cloudcone-2021-christmas-sale/</url>
      
        <content type="html"><![CDATA[<p>Cloudcone发布了2021年的圣诞促销，最低配$12.73&#x2F;年，1C&#x2F;1G内存&#x2F;40G SSD&#x2F;2T流量&#x2F;1G带宽，VPS基于KVM虚拟，共享G口带宽，洛杉矶mc机房，纯SSD RAID10，自带一个ipv4。感兴趣的小伙伴可以围观。</p><p><strong>注意：</strong> 商家是预交费模式，需要先充值，系统自动扣费。支持：支付宝、信用卡、PayPal等！</p><p><img src="https://pic.loll.cc/images/2021/12/24/image.png"></p><h4 id="1、官网"><a href="#1、官网" class="headerlink" title="1、官网"></a>1、官网</h4><p><strong>网址：<a href="https://app.cloudcone.com/?ref=6630">https://cloudcone.com/vps/</a></strong></p><h4 id="2、圣诞促销VPS"><a href="#2、圣诞促销VPS" class="headerlink" title="2、圣诞促销VPS"></a>2、圣诞促销VPS</h4><p>特征：MC机房，KVM虚拟，1Gbps带宽，纯SSD RAID10，自带一个ipv4。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>SSD</strong></th><th><strong>月流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1G</td><td>1核</td><td>40G</td><td>2T</td><td>$12.73&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/74/create?token=christmasvps2021-1&ref=6630">链接</a></strong></td></tr><tr><td>1.5G</td><td>2核</td><td>32G</td><td>4T</td><td>$17.89&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/75/create?token=christmasvps2021-2&ref=6630">链接</a></strong></td></tr><tr><td>2G</td><td>2核</td><td>40G</td><td>4T</td><td>$22.56&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/76/create?token=christmasvps2021-3&ref=6630">链接</a></strong></td></tr><tr><td>3G</td><td>3核</td><td>48G</td><td>6T</td><td>$32&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/77/create?token=christmasvps2021-4&ref=6630">链接</a></strong></td></tr></tbody></table><h4 id="3、还有以前的促销"><a href="#3、还有以前的促销" class="headerlink" title="3、还有以前的促销"></a>3、还有以前的促销</h4><p>特征：MC机房，KVM虚拟，1Gbps带宽，纯SSD RAID10，自带一个ipv4。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>硬盘</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1G</td><td>1核</td><td>50G</td><td>1T&#x2F;月</td><td>$17.99&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/1/create?token=vps-1&ref=6630">链接</a></strong></td></tr><tr><td>2G</td><td>2核</td><td>95G</td><td>3T&#x2F;月</td><td>$28.99&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/2/create?token=vps-2&ref=6630">链接</a></strong></td></tr><tr><td>3.5G</td><td>3核</td><td>190G</td><td>6T&#x2F;月</td><td>$48.99&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/3/create?token=vps-3&ref=6630">链接</a></strong></td></tr></tbody></table><h4 id="4、最后"><a href="#4、最后" class="headerlink" title="4、最后"></a>4、最后</h4><p>测试IP，173.82.220.148，IPv6: 2607:f130:0:ef::2，<a href="http://la.lg.cloudc.one/1000MB.test">http://la.lg.cloudc.one/1000MB.test</a></p>]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cloudcone </tag>
            
            <tag> 特价VPS </tag>
            
            <tag> 圣诞 </tag>
            
            <tag> 活动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Docker系列】Docker更新容器镜像的三种方法</title>
      <link href="/archives/docker-images-upgrade/"/>
      <url>/archives/docker-images-upgrade/</url>
      
        <content type="html"><![CDATA[<p>利用Docker部署应用非常方便，随着镜像的更新，我们的应用也需要及时更新，这周就来简单给大家介绍三种更新Docker镜像的方法。</p><h3 id="1、更新用Docker命令部署的应用"><a href="#1、更新用Docker命令部署的应用" class="headerlink" title="1、更新用Docker命令部署的应用"></a>1、更新用Docker命令部署的应用</h3><p>以halo博客为例子（方法通用），</p><h4 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h4><p>利用<code>docker ps</code>命令确定容器的名字，</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker ps </span><br></pre></td></tr></table></figure><p><img src="https://blog.laoda.de/upload/2021/12/image-adc1e0ad7ac34841ac767f0a438f8dfe.png" alt="image.png"></p><p>这边圆圈圈起来的就是容器的名字啦。</p><p>Halo里面的容器名字就是<code>halo</code></p><h4 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h4><p>备份数据(重要)，并停止容器</p><p>利用<code>docker inspect 容器的名字</code>找出你容器的映射到本地的文件路径，</p><p><img src="https://blog.laoda.de/upload/2021/12/image-c13211b3421a486fb7b662483db15993.png" alt="image.png"></p><p>图片里就是：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/zfile/zfile/data /root/data/docker_data/zfile/zfile/data.backup</span><br></pre></td></tr></table></figure><p>Halo里面就是：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> -r ~/.halo ~/.halo.1.4.15  <span class="comment"># 备份并重命名为.halo.1.4.15</span></span><br></pre></td></tr></table></figure><h4 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h4><p>拉取最新的容器镜像</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull halohub/halo:1.4.16</span><br></pre></td></tr></table></figure><p><code>halohub/halo:1.4.16</code>这部分替换成你需要更新的镜像的名字和版本号</p><p>很多是类似这种<code>xxxxx/xxxxx:latest</code></p><h4 id="第四步"><a href="#第四步" class="headerlink" title="第四步"></a>第四步</h4><p>重新创建容器</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -it -d --name halo -p 8090:8090 -v ~/.halo:/root/.halo --restart=unless-stopped halohub/halo:1.4.16</span><br></pre></td></tr></table></figure><p>这部分的命令相信之前看过视频的小伙伴都保存在了自己对应文件夹下的<code>config.txt</code>文件里了，直接粘贴出来，修改最后面镜像的部分（这里是<code>halohub/halo:1.4.16</code>）重新部署就ok了。</p><p>参考来源：<a href="https://docs.halo.run/getting-started/upgrade">Halo官方文档</a></p><h3 id="2、更新用Docker-compose部署的应用"><a href="#2、更新用Docker-compose部署的应用" class="headerlink" title="2、更新用Docker-compose部署的应用"></a>2、更新用Docker-compose部署的应用</h3><p>很简单，只要三步。</p><h4 id="第一步-1"><a href="#第一步-1" class="headerlink" title="第一步"></a>第一步</h4><p>进入到你docker-compose所在的文件夹下，执行</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose pull</span><br></pre></td></tr></table></figure><h4 id="第二步-1"><a href="#第二步-1" class="headerlink" title="第二步"></a>第二步</h4><p>重启你的容器</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d --remove-orphans</span><br></pre></td></tr></table></figure><h4 id="第三步（可选）"><a href="#第三步（可选）" class="headerlink" title="第三步（可选）"></a>第三步（可选）</h4><p>删除掉旧的镜像</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker image prune </span><br></pre></td></tr></table></figure><h3 id="3、直接利用Portainer更新"><a href="#3、直接利用Portainer更新" class="headerlink" title="3、直接利用Portainer更新"></a>3、直接利用Portainer更新</h3><p>有安装Portainer的同学可以直接用Portainer来更新容器镜像。</p><p>Portainer的安装可以看这里：<a href="https://blog.laoda.de/archives/portainer">【Docker系列】Docker可视化面板——Portainer</a></p><h4 id="第一步-2"><a href="#第一步-2" class="headerlink" title="第一步"></a>第一步</h4><p>登陆Portainer面板，选择容器</p><p><img src="https://blog.laoda.de/upload/2021/12/image-b7ddf08a28cf41d5bf4aa07bdcbbe3c1.png" alt="image.png"></p><h4 id="第二步-2"><a href="#第二步-2" class="headerlink" title="第二步"></a>第二步</h4><p>选择需要更新的容器，点击<code>Recreate</code>，然后点击<code>Pull latest images</code>，最后点击<code>Recreate</code></p><p>等待完成就ok了。</p><p><img src="https://blog.laoda.de/upload/2021/12/image-3412b4509eb44fbfa1d02913536c9888.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker部署 </tag>
            
            <tag> DockerCompose </tag>
            
            <tag> Docker </tag>
            
            <tag> Portainer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Docker系列】Docker可视化面板——Portainer</title>
      <link href="/archives/portainer/"/>
      <url>/archives/portainer/</url>
      
        <content type="html"><![CDATA[<p>Portainer是一个非常好用的Docker可视化面板，可以让你轻松地管理你的Docker容器。</p><p>官网：<a href="https://www.portainer.io/">https://www.portainer.io/</a></p><p><a href="https://www.bilibili.com/BV1Q3411s7S5">https://www.bilibili.com/BV1Q3411s7S5</a></p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ul><li>Ubuntu 20.04(Debian 10一样操作)</li><li>甲骨文云 菲尼克斯凤凰城</li><li>Docker已经安装</li><li>NPM已经安装</li></ul><h3 id="安装可视化面板"><a href="#安装可视化面板" class="headerlink" title="安装可视化面板"></a>安装可视化面板</h3><p>2022年5月12日更新：</p><p>最新版本似乎镜像的内部端口更换了，建议用下面的代码（NPM反代那边选<code>https</code> ，端口填<code>9443</code>）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d -p 8000:8000 -p 9443:9443 --name portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v /root/data/docker_data/portainer/data:/data portainer/portainer-ce:latest</span><br></pre></td></tr></table></figure><p>NPM记得打开<code>https</code>这边：</p><img src="https://img.laoda.de/i/2022/05/12/qj7dwj-0.webp" alt="image-20220512160435890" style="zoom:33%;" /><p>旧版安装：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d -p 8000:8000 -p 9000:9000 --name portainer \</span><br><span class="line">    --restart=always \</span><br><span class="line">    -v /var/run/docker.sock:/var/run/docker.sock \</span><br><span class="line">    -v /root/data/docker_data/portainer/data:/data \</span><br><span class="line">    cr.portainer.io/portainer/portainer-ce:2.11.0   </span><br></pre></td></tr></table></figure><p>输入<code>http://服务器ip地址:9000</code>即可访问。</p><p>注意9000:9000，这边左边的9000可以修改成自己想要的端口号，只要没有被占用即可，右边的9000不要修改。</p><p>比如我想换成9001:9000</p><p>先检查端口是否被占用，输入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lsof -i:9001</span><br></pre></td></tr></table></figure><p>回车后，如果没有任何提示，则说明未被占用，可以使用。否则请换别的端口。</p><h3 id="qBittorrent"><a href="#qBittorrent" class="headerlink" title="qBittorrent"></a>qBittorrent</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&quot;2&quot;</span></span><br><span class="line">services:</span><br><span class="line">  qbittorrent:</span><br><span class="line">    image: linuxserver/qbittorrent</span><br><span class="line">    container_name: qbittorrent</span><br><span class="line">    environment:</span><br><span class="line">      - PUID=1000</span><br><span class="line">      - PGID=1000</span><br><span class="line">      - TZ=Asia/Shanghai <span class="comment"># 你的时区</span></span><br><span class="line">      - UMASK_SET=022</span><br><span class="line">      - WEBUI_PORT=8081 <span class="comment"># 将此处修改成你欲使用的 WEB 管理平台端口 </span></span><br><span class="line">    volumes:</span><br><span class="line">      - /root/data/docker_data/qbittorrent/qBittorrent/config:/config <span class="comment"># 绝对路径请修改为自己的config文件夹</span></span><br><span class="line">      - /root/data/docker_data/qbittorrent/qBittorrent/downloads:/downloads <span class="comment"># 绝对路径请修改为自己的downloads文件夹</span></span><br><span class="line">    ports:</span><br><span class="line">      <span class="comment"># 要使用的映射下载端口与内部下载端口，可保持默认，安装完成后在管理页面仍然可以改成其他端口。</span></span><br><span class="line">      - 6881:6881 </span><br><span class="line">      - 6881:6881/udp</span><br><span class="line">      <span class="comment"># 此处WEB UI 目标端口与内部端口务必保证相同，见问题1</span></span><br><span class="line">      - 8081:8081</span><br><span class="line">    restart: unless-stopped</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Filebrowser（ckplayer版本）"><a href="#Filebrowser（ckplayer版本）" class="headerlink" title="Filebrowser（ckplayer版本）"></a>Filebrowser（ckplayer版本）</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">    -v /root/data/docker_data/qbittorrent/qBittorrent/downloads:/srv \</span><br><span class="line">    -p 8082:80 \</span><br><span class="line">    --name filebrowser \</span><br><span class="line">    langren1353/filebrowser-ckplayer</span><br></pre></td></tr></table></figure><p>详情见视频，有问题欢迎留言～</p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NginxProxyManager </tag>
            
            <tag> Nginx </tag>
            
            <tag> Docker部署 </tag>
            
            <tag> Docker </tag>
            
            <tag> Portainer </tag>
            
            <tag> Container </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Docker系列】一个反向代理神器——Nginx Proxy Manager</title>
      <link href="/archives/nginxproxymanager/"/>
      <url>/archives/nginxproxymanager/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.laoda.de/i/2022/12/21/z30633-2.webp" alt="image-20211206175320893"></p><p>YouTube：<a href="https://youtu.be/Z2zl2TlDzd8">https://youtu.be/Z2zl2TlDzd8</a></p><p>哔哩哔哩： <a href="https://www.bilibili.com/BV1Gg411w7kQ">https://www.bilibili.com/BV1Gg411w7kQ</a></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>上一期留了一个问题，我们怎么样才能把IP+端口变成域名来访问？</p><p>答案是用反向代理。</p><p>看过之前几期视频的小伙伴应该知道，之前有宝塔的时候，碰到这个情况，我们会先新建一个站点，然后修改Nginx配置文件：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">proxy_pass</span> http://178.18.249.61:8123/;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>具体可以参考：<a href="https://iwanlab.com/docker-install-minimalist/">【好玩的Docker项目】搭建一个简洁的记事本——minimalist-web-notepad</a>   里面<strong>配置反向代理</strong>部分。</p></blockquote><p>就可以反向代理的操作（域名访问）了。</p><p>很多小伙伴跟着做可以成功，但是可能对反向代理并不是很了解，我们就趁着今天来简单介绍一下。</p><h2 id="操作环境"><a href="#操作环境" class="headerlink" title="操作环境"></a>操作环境</h2><ul><li>服务器：<del>腾讯香港轻量应用服务器 24 元 &#x2F; 月 VPS 一台</del> 咕咕自己搭建用的是<a href="https://loll.cc/tx">腾讯轻量应用服务器</a> （最好是选 <strong>非大陆（香港）的服务器</strong>）如果是小白刚开始玩的话，还可以购买 <a href="https://blog.laoda.de/vps">Racknerd</a> 的服务器（地区选美西），最低一年不到 100 块（Racknerd 服务器介绍：<a href="https://blog.laoda.de/vps/">点击查看</a>）</li><li>系统：Debian 10 或以上。 <a href="https://iwanlab.com/useful-script/">DD 脚本</a> 非必需 DD，用原来的系统也 OK，之后教程都是用 Debian 或者 Ubuntu 搭建～）</li><li>需要一个域名（域名购买参考：<a href="https://iwanlab.com/namesilo/">Namesilo域名购买</a>  视频参考：<a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">【VPS服务器到底能干啥】P4 给自己搞一个牛叉的专属域名！~</a>）</li><li>Docker环境（具体看这篇：<a href="https://blog.laoda.de/archives/hello-docker/">【Docker系列】不用宝塔面板，小白一样可以玩转VPS服务器！</a>）</li></ul><h2 id="什么是代理"><a href="#什么是代理" class="headerlink" title="什么是代理"></a>什么是代理</h2><p>首先代理大家都懂 :) </p><p>代理就是第三方。</p><h3 id="正向代理"><a href="#正向代理" class="headerlink" title="正向代理"></a>正向代理</h3><p><img src="https://img.laoda.de/i/2022/12/21/z32dy6-2.webp" alt="4e46c87b-633d-4836-83e1-49585e65f127"></p><p>你要买国外小G家的鞋子，你没有paypal和信用卡，买不了，于是你找到了叫小V的代购帮你到海外买，小V找到海外的卖家小G，帮你买了鞋子，然后寄回给了你。</p><p>这个小V就是正向代理。</p><p>正向代理的特点是，可以保护访问者的信息。因为小V是个职业代购，他在帮你代购鞋子的同时也帮别人代购鞋子，而且他不仅代购鞋子，还代购箱子、家具、电饭煲，卖家小G只知道有人买了我的鞋子，我交给了小V，但并不知道具体是谁买了他家的鞋子。</p><h3 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h3><p>反向代理，顾名思义，正好相反，可以保护卖家的信息。</p><p><img src="https://img.laoda.de/i/2022/12/21/z349qp-2.webp" alt="66bfd3ce-c815-4568-97c2-3d135e33c3c8"></p><p>具体可以看视频。</p><p>好了，回来。</p><p>没有了宝塔，我们今天用一个更简单的Docker项目来完成反向代理的操作。</p><h2 id="Nginx-Proxy-Manager"><a href="#Nginx-Proxy-Manager" class="headerlink" title="Nginx Proxy Manager"></a>Nginx Proxy Manager</h2><p>Nginx proxy manager是一个很简单的反向代理工具。</p><p>官网：<a href="https://nginxproxymanager.com/">https://nginxproxymanager.com/</a></p><p>门槛极低，操作简单，不需要你掌握很复杂的Nginx配置知识，只需要几步就能很轻松完成反向代理的设置和SSL证书的部署。</p><blockquote><p>it had to be so easy that a monkey could do it.</p></blockquote><h2 id="开始部署"><a href="#开始部署" class="headerlink" title="开始部署"></a>开始部署</h2><p>服务器环境：Debian 10（Ubuntu 20.04也可以）或以上版本</p><h3 id="登陆服务器"><a href="#登陆服务器" class="headerlink" title="登陆服务器"></a>登陆服务器</h3><blockquote><p>不建议用CentOS，具体原因请见：<a href="https://blog.laoda.de/archives/getting-started-with-linux#0-%E5%89%8D%E8%A8%80%E5%90%90%E6%A7%BDcentos">解释使用Debian而不是CentOS的原因</a></p></blockquote><p>选择一款连接SSH的软件。</p><blockquote><p>如果不会可以看这个文档：<a href="https://blog.laoda.de/archives/getting-started-with-linux#2.1-%E8%BF%9E%E6%8E%A5ssh%E7%9A%84%E8%BD%AF%E4%BB%B6%E5%92%8C%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C">连接SSH的软件和相关操作</a></p></blockquote><p>Mac 或者 Linux 用户可以直接用系统自带的<code>终端</code>（也叫<code>Terminal</code>）来登陆服务器。</p><p>输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh 你的用户名@你的服务器IP -P 22</span><br></pre></td></tr></table></figure><p>如果你没有更改 ssh 的端口，默认就是<code>22</code>，当然为了服务器安全，建议你可以换一个别的端口，具体请见：<a href="https://blog.laoda.de/archives/how-to-secure-a-linux-server#1%E6%9B%B4%E6%94%B9ssh%E7%AB%AF%E5%8F%A3">保护好你的小鸡！保姆级服务器安全教程！</a></p><h3 id="添加SWAP虚拟内存"><a href="#添加SWAP虚拟内存" class="headerlink" title="添加SWAP虚拟内存"></a>添加SWAP虚拟内存</h3><blockquote><p>注意：VPS 的内存如果过小，建议设置一下 SWAP，一般为内存的 1-1.5 倍即可，可以让系统运行更流畅！</p></blockquote><p>设置 SWAP 可以用脚本:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O box.sh https://raw.githubusercontent.com/BlueSkyXN/SKY-BOX/main/box.sh &amp;&amp; <span class="built_in">chmod</span> +x box.sh &amp;&amp; clear &amp;&amp; ./box.sh</span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2022/05/28/uoikkd-0.webp" alt="image-20220528185512488" style="zoom:50%;" /><p>选择 <code>18</code>，然后输入你想要扩容的数值即可。</p><img src="https://img.laoda.de/i/2022/05/28/up2dkf-0.webp" alt="image-20220528185604586" style="zoom:50%;" /><h3 id="升级-packages"><a href="#升级-packages" class="headerlink" title="升级 packages"></a>升级 packages</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i <span class="comment"># 切换到 root 用户</span></span><br><span class="line"></span><br><span class="line">apt update -y  <span class="comment"># 升级 packages</span></span><br><span class="line"></span><br><span class="line">apt install wget curl sudo vim git -y  <span class="comment"># Debian 系统比较干净，安装常用的软件</span></span><br></pre></td></tr></table></figure><h3 id="安装-Docker-环境"><a href="#安装-Docker-环境" class="headerlink" title="安装 Docker 环境"></a>安装 Docker 环境</h3><h4 id="安装-Docker（非大陆服务器）"><a href="#安装-Docker（非大陆服务器）" class="headerlink" title="安装 Docker（非大陆服务器）"></a>安装 Docker（非大陆服务器）</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -qO- get.docker.com | bash</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker -v  <span class="comment">#查看 docker 版本</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker  <span class="comment"># 设置开机自动启动</span></span><br></pre></td></tr></table></figure><h4 id="安装-Docker-compose（非大陆服务器）"><a href="#安装-Docker-compose（非大陆服务器）" class="headerlink" title="安装  Docker-compose（非大陆服务器）"></a>安装  Docker-compose（非大陆服务器）</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/1.29.2/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose --version  <span class="comment">#查看 docker-compose 版本</span></span><br></pre></td></tr></table></figure><h4 id="安装-Docker（国内服务器）"><a href="#安装-Docker（国内服务器）" class="headerlink" title="安装 Docker（国内服务器）"></a>安装 Docker（国内服务器）</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -sSL https://get.daocloud.io/docker | sh</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker -v  <span class="comment">#查看 docker 版本</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker  <span class="comment"># 设置开机自动启动</span></span><br></pre></td></tr></table></figure><h4 id="安装-Docker-compose（国内服务器）"><a href="#安装-Docker-compose（国内服务器）" class="headerlink" title="安装 Docker-compose（国内服务器）"></a>安装 Docker-compose（国内服务器）</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -L https://get.daocloud.io/docker/compose/releases/download/v2.1.1/docker-compose-`<span class="built_in">uname</span> -s`-`<span class="built_in">uname</span> -m` &gt; /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line">docker-compose --version  <span class="comment">#查看 docker-compose 版本</span></span><br></pre></td></tr></table></figure><h4 id="修改-Docker-配置（可选）"><a href="#修改-Docker-配置（可选）" class="headerlink" title="修改 Docker 配置（可选）"></a><strong>修改 Docker 配置（可选）</strong></h4><p>内容参考：<a href="https://u.sb/debian-install-docker/">烧饼博客</a></p><p>以下配置会增加一段自定义内网 IPv6 地址，开启容器的 IPv6 功能，以及限制日志文件大小，防止 Docker 日志塞满硬盘（泪的教训）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/docker/daemon.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    &quot;log-driver&quot;: &quot;json-file&quot;,</span></span><br><span class="line"><span class="string">    &quot;log-opts&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;max-size&quot;: &quot;20m&quot;,</span></span><br><span class="line"><span class="string">        &quot;max-file&quot;: &quot;3&quot;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    &quot;ipv6&quot;: true,</span></span><br><span class="line"><span class="string">    &quot;fixed-cidr-v6&quot;: &quot;fd00:dead:beef:c0::/80&quot;,</span></span><br><span class="line"><span class="string">    &quot;experimental&quot;:true,</span></span><br><span class="line"><span class="string">    &quot;ip6tables&quot;:true</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>然后重启 Docker 服务：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h3 id="安装-Nginx-Proxy-Manager"><a href="#安装-Nginx-Proxy-Manager" class="headerlink" title="安装 Nginx Proxy Manager"></a>安装 Nginx Proxy Manager</h3><h4 id="创建安装目录"><a href="#创建安装目录" class="headerlink" title="创建安装目录"></a>创建安装目录</h4><p>创建一下安装的目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/npm</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/npm</span><br></pre></td></tr></table></figure><p>这边我们直接用 docker 的方式安装。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure><p>英文输入法下，按 <code>i</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">app:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">&#x27;jc21/nginx-proxy-manager:latest&#x27;</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;80:80&#x27;</span>  <span class="comment"># 冒号左边可以改成自己服务器未被占用的端口</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;81:81&#x27;</span>  <span class="comment"># 冒号左边可以改成自己服务器未被占用的端口</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;443:443&#x27;</span> <span class="comment"># 冒号左边可以改成自己服务器未被占用的端口</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data:/data</span> <span class="comment"># 冒号左边可以改路径，现在是表示把数据存放在在当前文件夹下的 data 文件夹中</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./letsencrypt:/etc/letsencrypt</span>  <span class="comment"># 冒号左边可以改路径，现在是表示把数据存放在在当前文件夹下的 letsencrypt 文件夹中</span></span><br></pre></td></tr></table></figure><p>按一下 <code>esc</code>，然后 <code>:wq</code> 保存退出，之后，</p><h4 id="打开服务器防火墙并访问网页（非必需）"><a href="#打开服务器防火墙并访问网页（非必需）" class="headerlink" title="打开服务器防火墙并访问网页（非必需）"></a>打开服务器防火墙并访问网页（非必需）</h4><p>打开防火墙的端口 <code>81</code></p><p>举例，腾讯云打开方法如下：</p><img src="https://img.laoda.de/i/2022/06/30/zlio5h-2.webp" alt="image-20220630215240864" style="zoom:33%;" /><img src="https://img.laoda.de/i/2022/06/30/10h3dqt-2.webp" alt="image-20220630220546335" style="zoom:33%;" /><p>图中示例填的是 <code>5230</code>，备注填的是 <code>memos</code>，这边我们填 <code>81</code>，示例填 <code>nginxproxymanager</code> ，确定即可（如果你在 docker-compose 文件里换了 <code>82</code>，这边就需要填 <code>82</code>，以此类推）</p><img src="https://img.laoda.de/i/2022/08/19/o4byqz-2.webp" alt="image-20220819145844555" style="zoom:33%;" /><p>查看端口是否被占用（以 <code>81</code> 为例），输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:81  <span class="comment">#查看 81 端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果啥也没出现，表示端口未被占用，我们可以继续下面的操作了～</p><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装 lsof</span></span><br></pre></td></tr></table></figure><p>如果端口没有被占用（被占用了就修改一下端口，比如改成 <code>82</code>，注意 docker 命令行里和防火墙都要改）</p><h4 id="运行并访问-Nginx-Proxy-Manager"><a href="#运行并访问-Nginx-Proxy-Manager" class="headerlink" title="运行并访问 Nginx Proxy Manager"></a>运行并访问 Nginx Proxy Manager</h4><p>最后：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/npm   <span class="comment"># 来到 dockercompose 文件所在的文件夹下</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p>理论上我们就可以输入 <code>http://ip:81</code> 访问了。</p><p>默认登陆名和密码：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Email:    admin@example.com</span><br><span class="line">Password: changeme</span><br></pre></td></tr></table></figure><blockquote><p>注意：</p><p>1、不知道服务器 IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的 IP。</p><p>2、遇到访问不了的情况，请再次检查在宝塔面板的防火墙和服务商的后台防火墙是否打开对应了端口。</p></blockquote><h3 id="更新-Nginx-Proxy-Manager"><a href="#更新-Nginx-Proxy-Manager" class="headerlink" title="更新 Nginx Proxy Manager"></a>更新 Nginx Proxy Manager</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/npm</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/npm /root/data/docker_data/npm.archive  <span class="comment"># 万事先备份，以防万一</span></span><br><span class="line"></span><br><span class="line">docker-compose pull</span><br><span class="line"></span><br><span class="line">docker-compose up -d    <span class="comment"># 请不要使用 docker-compose stop 来停止容器，因为这么做需要额外的时间等待容器停止；docker-compose up -d 直接升级容器时会自动停止并立刻重建新的容器，完全没有必要浪费那些时间。</span></span><br><span class="line"></span><br><span class="line">docker image prune  <span class="comment"># prune 命令用来删除不再使用的 docker 对象。删除所有未被 tag 标记和未被容器使用的镜像</span></span><br></pre></td></tr></table></figure><p>提示：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WARNING! This will remove all dangling images.</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] </span><br></pre></td></tr></table></figure><p>输入 <code>y</code></p><p>利用 Docker 搭建的应用，更新非常容易～</p><h3 id="卸载-Nginx-Proxy-Manager"><a href="#卸载-Nginx-Proxy-Manager" class="headerlink" title="卸载  Nginx Proxy Manager"></a>卸载  Nginx Proxy Manager</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/npm</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/npm  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><p>可以卸载得很干净。</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>NPM的功能还有很多，预计还有两期，一期讲泛域名证书的配置，一期讲安全防护，这次只是简单介绍一下，大家可以发挥钻研精神，自己先研究研究。</p><p>有了NPM，可以统一管理，的确方便了很多，但总觉得还缺少点什么？有没有类似NPM这种有UI界面的工具，可以让我们直观地看到Docker的容器呢？Docker容器如果也可以统一管理，查看状态就很棒，别急，下期给大家带来！</p><h2 id="推荐阅读："><a href="#推荐阅读：" class="headerlink" title="推荐阅读："></a>推荐阅读：</h2><p><a href="https://iwanlab.com/nginxproxymanager-ssl-wildcardcerts-for-your-entire-domain/">【Docker系列】反向代理神器NginxProxyManager——通配符SSL证书申请</a></p><p><a href="https://iwanlab.com/nginx-proxy-manager-access-issues/">【Docker系列】让网站更安全！开启NginxProxyManager网站访问登陆限制功能</a></p><p><a href="https://iwanlab.com/host-static-sites-on-npm/">如何在Nginx Proxy Manager（NPM）上部署静态网站</a></p><p><a href="https://iwanlab.com/nginx-proxy-manager-issues/">Nginx Proxy Manager忘记登陆账号&#x2F;密码了怎么办？</a></p><p><a href="https://iwanlab.com/npm-xui/">【Docker魔法系列】NPM与XUI共存！Nginx Proxy Manager搭配X-UI实现Vless+WS+TLS 教程！</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NginxProxyManager </tag>
            
            <tag> Docker部署 </tag>
            
            <tag> DockerCompose </tag>
            
            <tag> 域名购买 </tag>
            
            <tag> 域名 </tag>
            
            <tag> SSL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Docker系列】不用宝塔面板，小白一样可以玩转VPS服务器！</title>
      <link href="/archives/hello-docker/"/>
      <url>/archives/hello-docker/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>众所周知，<a href="https://loll.cc/btpanel">宝塔面板</a>的出现，给了很多非计算机专业的小伙伴们一个可以相对轻松搭建自己网站的机会。</p><p>不过，由于宝塔最近加入了强制手机登陆验证（虽然可以用方法取消：<a href="https://blog.laoda.de/archives/useful-script#%E5%AE%9D%E5%A1%94%E7%9B%B8%E5%85%B3">宝塔去除登陆</a>，宝塔海外版本aapanel也不需要手机验证），还是让一些小伙伴觉得很不爽，装了宝塔之后，总是感觉有一双眼睛盯着自己，自己服务器上的数据随时在被宝塔监控着（宝塔是开源的，不过如果你做了一些奇怪的事情，宝塔不一定不会上报你的数据信息）</p><p>我们自建服务器图啥？图的不就是自由和隐私么？绝对不允许这样的情况出现！</p><p>不过，不用面板工具，我们难道要手动自己去下载配置LNMP环境么？好像有点复杂……</p><p>确实，我自己尝试手动，有点繁琐，市面上也有辅助配置的，比如<a href="https://lnmp.org/"><strong>LNMP一键安装包</strong></a>,不过后续的维护升级似乎也有些麻烦，对于计算机专业的同学来讲，可以试一试，对于我们这些非计算机专业的小伙伴，其实就不是非常必要了，我们可以尝试换一个选择——用Docker。</p><p>就我目前的体验来看，服务器上安装好Docker，利用Docker镜像已经可以部署我的90%小项目了。由于我的服务器比较多，所以我选择一台服务器安装aapanel（宝塔国际版）备用（针对个别docker无法实现的项目），另一台服务器纯原生环境+Docker来折腾。</p><p>所以接下来的一段时间，就让我们一起用Docker来玩一玩服务器吧，折腾起来！</p><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><p>Bilibili：<a href="https://www.bilibili.com/video/BV1kh411x7RL/">https://www.bilibili.com/video/BV1kh411x7RL/</a></p><h2 id="操作环境"><a href="#操作环境" class="headerlink" title="操作环境"></a>操作环境</h2><ul><li><p>服务器：<del>腾讯香港轻量应用服务器 24 元 &#x2F; 月 VPS 一台</del> 咕咕自己搭建用的是<a href="https://loll.cc/tx">腾讯轻量应用服务器</a> ，（最好是选 <strong>非大陆（香港）的服务器</strong>）如果是小白刚开始玩的话，还可以购买 <a href="https://blog.laoda.de/archives/cheap-vps-racknerd">Racknerd</a> 的服务器（地区选美西），最低一年不到 100 块（Racknerd 服务器介绍：<a href="https://blog.laoda.de/archives/cheap-vps-racknerd">点击查看</a>）</p></li><li><p>系统：Debian10或以上（Ubuntu 20.04以上）</p></li></ul><blockquote><p>不建议用CentOS，具体原因请见：<a href="https://blog.laoda.de/archives/getting-started-with-linux#0-%E5%89%8D%E8%A8%80%E5%90%90%E6%A7%BDcentos">解释使用Debian而不是CentOS的原因</a></p></blockquote><h2 id="DD一个纯净的系统（非必需）"><a href="#DD一个纯净的系统（非必需）" class="headerlink" title="DD一个纯净的系统（非必需）"></a>DD一个纯净的系统（非必需）</h2><p>腾讯云轻量服务器本身帮小白用户做了一些基础的防护工作（如默认禁止密码登陆、默认禁止root登陆等），其实没必要DD。 当然，也有不少有“洁癖”的小伙伴们，嫌弃系统上装有的监控软件，那么可以做以下的操作，给自己一个纯净的原生操作系统～</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i      <span class="comment">#切换到root用户</span></span><br><span class="line">sudo apt update -y  <span class="comment">#更新一下包</span></span><br></pre></td></tr></table></figure><h3 id="脚本一"><a href="#脚本一" class="headerlink" title="脚本一"></a>脚本一</h3><p><strong>腾讯云轻量非大陆机器建议用这个：</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget --no-check-certificate -O AutoReinstall.sh https://git.io/AutoReinstall.sh &amp;&amp; bash AutoReinstall.sh</span><br></pre></td></tr></table></figure><ul><li><p>CentOS默认密码Pwd@CentOS  其它系统Pwd@Linux</p></li><li><p>OpenVZ &#x2F; LXC 架构系统不适用</p></li></ul><p>来源：<a href="https://blog.hicasper.com/post/135.html">https://blog.hicasper.com/post/135.html</a> 参考：<a href="https://www.ydyno.com/archives/1245.html">https://www.ydyno.com/archives/1245.html</a>  感谢大佬的付出！</p><h3 id="脚本二"><a href="#脚本二" class="headerlink" title="脚本二"></a>脚本二</h3><p><strong>这个有时候会失效：</strong></p><p>以下命令默认是Debian10，<code>自定义root密码</code>和<code>自定义ssh端口</code>自己修改成你自己想要的。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(wget --no-check-certificate -qO- <span class="string">&#x27;https://raw.githubusercontent.com/MoeClub/Note/master/InstallNET.sh&#x27;</span>) -d 10 -v 64 -p <span class="string">&quot;自定义root密码&quot;</span> -port <span class="string">&quot;自定义ssh端口&quot;</span></span><br></pre></td></tr></table></figure><p>等待<code>15</code>到<code>30</code>分钟左右，连接即可，也可以自己ping一下域名，看看通不通，然后尝试连接。</p><p><strong>其他参数</strong></p><blockquote><p>-d 10 -v 64<br>-d 9 -v 64<br>-u 20.04 -v 64<br>-u 18.04 -v 64</p></blockquote><h3 id="具体参考"><a href="#具体参考" class="headerlink" title="具体参考"></a><strong>具体参考</strong></h3><p><a href="https://blog.laoda.de/archives/useful-script#dd%E7%9B%B8%E5%85%B3"># 整理一些常用的脚本（持续更新中）</a></p><h3 id="重要提醒！！！"><a href="#重要提醒！！！" class="headerlink" title="重要提醒！！！"></a>重要提醒！！！</h3><ul><li>请仔细阅读服务器商家的ToS条款，事先确认你的服务器提供商是否支持你DD系统（重装自己的系统）</li><li>由于授权问题，很多服务器提供商是禁止你把服务器DD成Windows系统的（比如Contabo），发现会暂停服务甚至删鸡！</li><li>OpenVZ &#x2F; LXC 架构系统不适用此脚本</li><li><strong>注意重装有风险，请妥善备份好自己的数据</strong>，（阿里腾讯搬瓦工等有快照的商家，你可以先在后台存一个快照）可能导致无法开机（部分商家可以用VNC救回来，但本文不涉及），<strong>谨慎操作</strong>！</li></ul><p>详情可见：<a href="https://blog.laoda.de/archives/dd"># 服务器自带的系统不喜欢？那就自己DD一个船新的系统吧！</a></p><h2 id="1、BBR"><a href="#1、BBR" class="headerlink" title="1、BBR"></a>1、BBR</h2><p>新的 TCP 拥塞控制算法 <code>BBR (Bottleneck Bandwidth and RTT)</code> 可以让服务器的带宽尽量跑满，并且尽量不要有排队的情况，让网络服务更佳稳定和高效。</p><p>Linux Kernel 内核升级到 <code>4.9</code> 及以上版本可以实现 BBR 加速（Ubuntu 18.04 默认的内核是 <code>4.15</code>版本的内核，Ubuntu 20.04 默认的内核是 <code>5.4</code> 版本的内核，并已经默认编译了 TCP BBR 模块，可以直接通过参数开启）。</p><p>目前 De­bian 10 自带的内核版本一般是<code>4.19</code>，我们可以查看一下内核版本（如果是 <code>5.6</code> 及以上内核则集成了 Wire­Guard ）</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hostnamectl   <span class="comment">#或者 uname -r</span></span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2023/09/04/nxnu4s-0.webp" alt="image-20211205141002084" style="zoom:50%;" /><p>我们选择更新到新的稳定版本的<code>5.1</code>内核（目前为止），再开启<code>BBR</code>。</p><ol><li>给 Debian 10 添加官方 <code>backports</code> 源，获取更新的软件库</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo nano /etc/apt/sources.list</span><br></pre></td></tr></table></figure><p><strong>说明</strong></p><blockquote><p>本文以 Debian 10 为例，所以使用 <code>/etc/apt/sources.list</code> 仍无问题，但如果你并不是根据本文从头开始，或者使用了其他 Linux 发行版，那么建议你建立 <code>/etc/apt/sources.list.d/</code> 文件夹，并在这个文件夹内建立自己的配置文件，形如 <code>/etc/apt/sources.list.d/vpsadmin.list</code> ，以此保证兼容性，也可避免默认文件在不可预见的情况下被覆盖而导致配置丢失。</p></blockquote><ol start="2"><li>然后把下面这一条加在最后，并保存退出。</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deb http://deb.debian.org/debian buster-backports main</span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2023/09/04/nxp918-0.webp" style="zoom:50%;" /><ol start="3"><li>刷新软件库并查询 Debian 官方的最新版内核并安装。请务必安装你的 VPS 对应的版本（本文以比较常见的【amd64】为例）。</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt update &amp;&amp; sudo apt -t buster-backports install linux-image-amd64</span><br></pre></td></tr></table></figure><p><strong>注意</strong></p><blockquote><p>如果你的 VPS 支持，可以尝试【云服务器专用内核】<code>linux-image-cloud-amd64</code>，优点就是精简、资源占用低，缺点嘛是有同学反馈不支持的系统强行安装会导致无法开机（Kernel 无法识别）。</p><p>为了避免无法识别的悲剧，请确保：</p><ul><li>尝试前做一个系统快照，或者</li><li>你有 <code>vnc</code> 可以救场（并且你知道怎么用）</li></ul></blockquote><ol start="4"><li>修改 <code>kernel</code> 参数配置文件 <code>sysctl.conf</code> 并指定开启 <code>BBR</code></li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo nano /etc/sysctl.conf</span><br></pre></td></tr></table></figure><p><strong>说明</strong></p><blockquote><p>本文以 Debian 10 为例，所以使用 <code>/etc/sysctl.conf</code> 仍无问题，但如果你并不是跟着本文从头开始，或者使用了其他 Linux 发行版，那么建议你建立 <code>/etc/sysctl.d/</code> 文件夹，并在这个文件夹内建立自己的配置文件，形如 <code>/etc/sysctl.d/vpsadmin.conf</code>，以此保证兼容性，因为部分发行版在 <code>systemd</code> 207 版本之后便不再从 <code>/etc/sysctl.conf</code> 读取参数。使用自定义配置文件也可避免默认文件在不可预见的情况下被覆盖而导致配置丢失。</p></blockquote><ol start="5"><li>把下面的内容添加进去</li></ol><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">net.core.default_qdisc=fq</span><br><span class="line">net.ipv4.tcp_congestion_control=bbr</span><br></pre></td></tr></table></figure><ol start="6"><li>重启 VPS、使内核更新和<code>BBR</code>设置都生效</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo reboot</span><br></pre></td></tr></table></figure><p><strong>啰嗦君</strong></p><blockquote><p>因为我做展示的 VPS 支持云服务器专用内核，所以动图中我用了 <code>linux-image-cloud-amd64</code> 。如果你不确定你的 VPS 是否支持，那请务必按照第 3 步的命令，使用常规内核 <code>linux-image-amd64</code>。</p></blockquote><img src="https://img.laoda.de/i/2023/09/04/nxqpkm-0.gif" alt="http自动跳转https" style="zoom:50%;" /><ol start="8"><li>确认<code>BBR</code>开启</li></ol><p>如果你想确认 <code>BBR</code> 是否正确开启，可以使用下面的命令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsmod | grep bbr</span><br></pre></td></tr></table></figure><p>此时应该返回这样的结果：</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">tcp_bbr</span><br></pre></td></tr></table></figure><p>如果你想确认 <code>fq</code> 算法是否正确开启，可以使用下面的命令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsmod | grep fq</span><br></pre></td></tr></table></figure><p>此时应该返回这样的结果：</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">sch_fq</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">uname</span> -r </span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2023/09/04/nxsig7-0.webp" alt="image-20211205143330029" style="zoom:50%;" /><p>内核版本已经变成了<code>5.10</code></p><h2 id="2、修改时间"><a href="#2、修改时间" class="headerlink" title="2、修改时间"></a>2、修改时间</h2><p>首先，我们需要修改服务器的时间与我们本地的时间一致。</p><p>香港的服务器的话时间是一样的，就无所谓了，如果是欧美的服务器，可以通过下面的方式修改～</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i      <span class="comment">#切换到root用户</span></span><br><span class="line">apt update -y &amp;&amp; apt upgrade -y  <span class="comment">#更新一下包</span></span><br></pre></td></tr></table></figure><p>先查看时间：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">timedatectl</span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2023/09/04/nxtrw9-0.webp" alt="image-20211205135246536" style="zoom:50%;" /><p>DD完之后，可以看到我们的时间变成了纽约时间，这边需要改一下。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">timedatectl list-timezones <span class="comment">#列出所有时区</span></span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2023/09/04/nxv1zy-0.webp" alt="image-20211205135432441" style="zoom:50%;" /><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo timedatectl set-timezone Asia/Shanghai <span class="comment">#改成上海</span></span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2023/09/04/ny4wlr-0.webp" alt="image-20211205135502989" style="zoom:50%;" /><p>发现没有sudo命令，这是因为我们的系统现在是纯净的，没有装其他的东西，</p><img src="https://img.laoda.de/i/2023/09/04/ny62cr-0.webp" alt="image-20211205135539839" style="zoom:50%;" /><p>这边我们手动安装几个常用的命令～</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install sudo curl wget </span><br></pre></td></tr></table></figure><p>然后重新运行</p><img src="https://img.laoda.de/i/2023/09/04/ny7hi4-0.webp" alt="image-20211205135742888" style="zoom:50%;" /><h2 id="3、添加SWAP"><a href="#3、添加SWAP" class="headerlink" title="3、添加SWAP"></a>3、添加SWAP</h2><p>swap是Linux中的虚拟内存，用于扩充物理内存不足而用来存储临时数据存在的。它类似于Windows中的虚拟内存。在Windows中，只可以使用文件来当作虚拟内存。而linux可以文件或者分区来当作虚拟内存。</p><p>这个虚拟内存对于内存小的VPS非常有必要，可以提高我们的运行效率。</p><p>这里我们用脚本来添加。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O box.sh https://raw.githubusercontent.com/BlueSkyXN/SKY-BOX/main/box.sh &amp;&amp; <span class="built_in">chmod</span> +x box.sh &amp;&amp; clear &amp;&amp; ./box.sh</span><br></pre></td></tr></table></figure><p>更多常用脚本，可以看这篇：<a href="https://blog.laoda.de/archives/useful-script">整理一些常用的脚本（持续更新中）</a></p><img src="https://img.laoda.de/i/2023/09/04/ny90dr-0.webp" alt="image-20211205140547106" style="zoom:50%;" /><p>这边建议是<code>2</code>倍，我添加了1倍，也就是1024MB</p><img src="https://img.laoda.de/i/2023/09/04/nya6pb-0.webp" alt="image-20211205140623294" style="zoom:50%;" /><h2 id="4、其他服务器安全相关的工作"><a href="#4、其他服务器安全相关的工作" class="headerlink" title="4、其他服务器安全相关的工作"></a>4、其他服务器安全相关的工作</h2><p>其他安全防护工作，可以看这篇：<a href="https://blog.laoda.de/archives/how-to-secure-a-linux-server">保护好你的小鸡！保姆级服务器安全教程！</a></p><p>安全无小事，建议大家保护好自己的小鸡！</p><h2 id="5、安装Docker、Docker-compose"><a href="#5、安装Docker、Docker-compose" class="headerlink" title="5、安装Docker、Docker-compose"></a>5、安装Docker、Docker-compose</h2><h3 id="更新、安装必备软件"><a href="#更新、安装必备软件" class="headerlink" title="更新、安装必备软件"></a>更新、安装必备软件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get update &amp;&amp; apt-get install -y wget vim</span><br></pre></td></tr></table></figure><h3 id="非大陆Docker安装"><a href="#非大陆Docker安装" class="headerlink" title="非大陆Docker安装"></a>非大陆Docker安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -qO- get.docker.com | bash</span><br></pre></td></tr></table></figure><p>注意：出现<code>sudo: unable to resolve host [hostname]</code>,可以编辑<code>nano /etc/hosts</code>然后在</p><img src="https://img.laoda.de/i/2023/09/04/nybzqc-0.webp" alt="image-20211205144134019" style="zoom:50%;" /><p>localhost后面空一格，再打上<code>[hostname]</code>你对应的hostname内容。</p><h3 id="查看Docker版本"><a href="#查看Docker版本" class="headerlink" title="查看Docker版本"></a>查看Docker版本</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker -v</span><br></pre></td></tr></table></figure><h3 id="开机自动启动"><a href="#开机自动启动" class="headerlink" title="开机自动启动"></a>开机自动启动</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure><h3 id="卸载Docker"><a href="#卸载Docker" class="headerlink" title="卸载Docker"></a>卸载Docker</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get purge docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">rm</span> -rf /var/lib/docker</span><br><span class="line">sudo <span class="built_in">rm</span> -rf /var/lib/containerd</span><br></pre></td></tr></table></figure><h3 id="非大陆Docker-compose安装"><a href="#非大陆Docker-compose安装" class="headerlink" title="非大陆Docker-compose安装"></a>非大陆Docker-compose安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/1.29.2/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose --version</span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2023/09/04/nyd2q1-0.webp" alt="image-20211205144336324" style="zoom:50%;" /><p>大陆内地的服务器安装请见这边：<a href="https://blog.laoda.de/archives/useful-script#docker%E7%9B%B8%E5%85%B3">国内机安装docker</a></p><h3 id="修改Docker配置（来自烧饼博客）"><a href="#修改Docker配置（来自烧饼博客）" class="headerlink" title="修改Docker配置（来自烧饼博客）"></a>修改Docker配置（来自<a href="https://u.sb/debian-install-docker/">烧饼博客</a>）</h3><p>以下配置会增加一段自定义内网 IPv6 地址，开启容器的 IPv6 功能，以及限制日志文件大小，防止 Docker 日志塞满硬盘（泪的教训）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/docker/daemon.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    &quot;log-driver&quot;: &quot;json-file&quot;,</span></span><br><span class="line"><span class="string">    &quot;log-opts&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;max-size&quot;: &quot;20m&quot;,</span></span><br><span class="line"><span class="string">        &quot;max-file&quot;: &quot;3&quot;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    &quot;ipv6&quot;: true,</span></span><br><span class="line"><span class="string">    &quot;fixed-cidr-v6&quot;: &quot;fd00:dead:beef:c0::/80&quot;,</span></span><br><span class="line"><span class="string">    &quot;experimental&quot;:true,</span></span><br><span class="line"><span class="string">    &quot;ip6tables&quot;:true</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>然后重启 Docker 服务：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h2 id="6、文件管理"><a href="#6、文件管理" class="headerlink" title="6、文件管理"></a>6、文件管理</h2><p>强烈建议大家专门给Docker的数据、配置文件新建一个文件夹，</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p data/docker_data</span><br></pre></td></tr></table></figure><p>这样如果换服务器或者想要备份，都会很方便。</p><img src="https://img.laoda.de/i/2023/09/04/nyeaqv-0.webp" alt="image-20211205144543041" style="zoom:50%;" /><img src="https://img.laoda.de/i/2023/09/04/nyfxrs-0.webp" alt="image-20211205144822664" style="zoom:50%;" /><img src="https://img.laoda.de/i/2023/09/04/nypd9d-0.webp" alt="image-20211205145020493" style="zoom:50%;" /><p>这边我们以之前搭建过的minimalist为例子<a href="https://blog.laoda.de/archives/docker-install-minimalist">【好玩的Docker项目】搭建一个简洁的记事本——minimalist-web-notepad</a></p><p>来简单讲讲。</p><p>首先进入我们创建好的文件夹下，</p><img src="https://img.laoda.de/i/2023/09/04/nyqznr-0.webp" alt="image-20211205145334845" style="zoom:50%;" /><p>运行，</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://github.com/pereorga/minimalist-web-notepad/archive/refs/heads/docker.zip</span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2023/09/04/nyryvc-0.webp" alt="image-20211205145659238" style="zoom:50%;" /><p>然后</p><img src="https://img.laoda.de/i/2023/09/04/nytgsk-0.webp" alt="image-20211205145715475" style="zoom:50%;" /><p>没有unzip，我们就安装一个</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install unzip</span><br></pre></td></tr></table></figure><p>再运行</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">unzip docker.zip</span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2023/09/04/nyv283-0.webp" alt="image-20211205145834093" style="zoom:50%;" /><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> minimalist-web-notepad-docker/</span><br></pre></td></tr></table></figure><p>建立镜像，</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker build -t minimalist-web-notepad .</span><br></pre></td></tr></table></figure><p>安装minimalist，</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d -it --restart=always --name minimalist-web-notepad -v /root/data/docker_data/minimalist/minimalist-data:/var/www/html/_tmp -p 8006:80 minimalist-web-notepad</span><br></pre></td></tr></table></figure><p>注意这里的映射路径，我们改成了刚前面创建的路径<code>/root/data/docker_data/minimalist</code></p><p>这样你的东西就都在这边啦。</p><p><img src="https://img.laoda.de/i/2023/09/04/nyw94k-0.webp" alt="image-20211205150144574"></p><p>一般来说，看到这一长串的东西，就说明创建成功啦。</p><p>由于Debian是本身开放所有端口的，所以直接访问即可，但是因为我们是腾讯云轻量服务器，后台默认还有一个防火墙，我们需要登陆把后台的防火墙里的<code>8006</code>端口打开（对应docker命令的<code>8006:80</code>），这样就能访问了。</p><img src="https://img.laoda.de/i/2023/09/04/nyz0n0-0.webp" alt="image-20211205150839451" style="zoom: 33%;" /><img src="https://img.laoda.de/i/2023/09/04/nz0q10-0.webp" alt="image-20211205150902745" style="zoom: 33%;" /><img src="https://img.laoda.de/i/2023/09/04/nzarwj-0.webp" alt="image-20211205150938302" style="zoom: 33%;" /><p>当然你要是觉得麻烦，也可以直接填<code>ALL</code>，这样就开放所有端口了，以后就不用每次来设置了，但是不推荐。</p><img src="https://img.laoda.de/i/2023/09/04/nzcmba-0.webp" alt="image-20211205151012846" style="zoom: 33%;" /><p>然后我还非常推荐你再建立一个<code>txt</code>文件，记录这条docker命令。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano config.txt</span><br></pre></td></tr></table></figure><p>然后输入前面的命令，</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d -it --restart=always --name minimalist-web-notepad -v /root/data/docker_data/minimalist/minimalist-data:/var/www/html/_tmp -p 8006:80 minimalist-web-notepad</span><br></pre></td></tr></table></figure><p><code>Ctrl+x</code>退出，按<code>y</code>确认，回车。</p><img src="https://img.laoda.de/i/2023/09/04/nzdtdm-0.webp" alt="image-20211205150658729" style="zoom:50%;" /><p>用IP+端口就可以访问了！</p><p>问题来了，之前我们都是通过宝塔面板上面建立一个空壳站点，然后修改配置文件来进行反向代理的，这下没有了宝塔面板，要怎么搞？</p><p>难道要手动去修改nginx的配置文件吗？</p><p>我还得安装一个nginx？感觉好麻烦啊！</p><img src="https://img.laoda.de/i/2023/09/04/nzg9i5-0.webp" alt="image-20211205151425693" style="zoom:33%;" /><p>不！下期将介绍一个非常牛逼的工具，可以让你只要点击几下鼠标就能非常轻松完成反向代理，当然它自身也是基于Docker搭建的 ^ ^ </p><p>所以暂时先憋着，丑就丑一点，我们下期视频来处理这个事情。</p><h2 id="7、备份数据"><a href="#7、备份数据" class="headerlink" title="7、备份数据"></a>7、备份数据</h2><p>参考这篇：</p><p><a href="https://blog.laoda.de/archives/backup-docker">如何备份Docker数据？（以Bitwarden为例）</a></p><p><a href="https://blog.laoda.de/archives/docker-issues">【有用的小知识】Docker容器如何更新？如何迁移应用？如何卸载？</a></p><h3 id="附"><a href="#附" class="headerlink" title="附"></a>附</h3><p>如果还是放不下宝塔面板（或者担心以后会用到宝塔）的话，可以在第一部分BBR开启完毕之后，到宝塔官网下载宝塔（宝塔安装需要服务器是干净的没有安装过别的软件），安装宝塔完成之后 <del>（取消登陆框可以看这个：<a href="https://blog.laoda.de/archives/useful-script#%E5%AE%9D%E5%A1%94%E7%9B%B8%E5%85%B3">宝塔去除登陆</a>）</del> （失效了，大家直接下载宝塔海外版<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">aapanel</a>即可），修改时间和添加SWAP可以在软件商店搜索Linux工具箱，利用工具箱来修改。之后安装Docker可以选择用宝塔来安装，也可以选择按上文的步骤来安装。</p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 宝塔面板 </tag>
            
            <tag> Docker部署 </tag>
            
            <tag> DockerCompose </tag>
            
            <tag> Docker </tag>
            
            <tag> 脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【VPS测评】斯巴达 AMD 黑五31刀测评</title>
      <link href="/archives/spartanhost/"/>
      <url>/archives/spartanhost/</url>
      
        <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p><img src="https://pic.loll.cc/images/2021/12/03/202112032229092.png" alt="image-20211203222943929"></p><p>黑五蹲了三天没蹲到，被脚本大佬抢了，非常难受，最后运气好溢价50块钱收了一个老哥的，主要看重的是斯巴达的自带防御功能，还有就是三网4837的回程线路。</p><h3 id="1、官网"><a href="#1、官网" class="headerlink" title="1、官网"></a>1、官网</h3><p>Spartanhost： <a href="https://loll.cc/spt">点击查看</a></p><h3 id="2、机器基本信息"><a href="#2、机器基本信息" class="headerlink" title="2、机器基本信息"></a>2、机器基本信息</h3><ul><li><p>核芯：1H</p></li><li><p>内存：1GB</p></li><li><p>框架：KVM</p></li><li><p>硬盘：25GB SSD</p></li><li><p>宽带：10 Gbps</p></li><li><p>流量：2T 每月</p></li><li><p>价格：$6&#x2F;每月经常断货</p></li><li><p>优惠：年付8折+黑五优惠45%  &#x3D;12<code>*</code> 6<code>*</code>0.8<code>*</code>0.55<code>=</code>12<code>*</code>2.64<code>=</code>31.68刀</p></li><li><p>CPU：AMD Ryzen9 5950X 3.4GHz频率的CPU，Geekbench 5单核跑分高达1400+可见性能确实相当强悍；</p></li><li><p>硬盘：机器采用SSD硬盘I&#x2F;O能达到1.2GB&#x2F;秒用来跑数据库也是毫无压力；</p></li><li><p>防御：机房默认提供了20Gbps的DDoS防御（最多可付费升级到<strong>200</strong>Gbps）；</p></li><li><p>线路：美西洛杉矶，三网（电信&#x2F;联通&#x2F;移动）都采用了联通4837回程，对国内三网用户应该都有不错的速度。</p></li></ul><h3 id="3、优惠"><a href="#3、优惠" class="headerlink" title="3、优惠"></a>3、优惠</h3><h4 id="优惠一"><a href="#优惠一" class="headerlink" title="优惠一"></a>优惠一</h4><p>优惠码：KVM20  永久优惠20%</p><h4 id="优惠二"><a href="#优惠二" class="headerlink" title="优惠二"></a>优惠二</h4><p>周期优惠：（可与优惠一叠加）<br>年付8折</p><h3 id="4、购买地址"><a href="#4、购买地址" class="headerlink" title="4、购买地址"></a>4、购买地址</h3><p>Spartanhost： <a href="https://loll.cc/spt">点击查看</a></p><p><strong>注意事项：</strong></p><blockquote><p>首先注意事项：从登录到下单的过程中千万不要挂任何梯子，中国国内访问斯巴达官网速度还是不错的，尽量用比较真实的信息注册(就是跟你本地IP接近的信息)，否则有可能会被判定欺诈。</p></blockquote><h2 id="二、套餐情况"><a href="#二、套餐情况" class="headerlink" title="二、套餐情况"></a>二、套餐情况</h2><p><img src="https://pic.loll.cc/images/2021/12/03/202112032245635.png" alt="来源：hostloc @louiejordan"></p><p>其中，这三个最低套餐价格相差不大，其中，E3最便宜，但是长期没货，AMD最贵，建站最合适，目前如果扶墙用建议买E5的5刀款，因为3.5刀的不能用优惠码，5刀用完券价格跟3.5刀的相差并不大，但是配置高的多。</p><p>所有套餐年付下单自动八折，下单后除了512M内存的以外再使用优惠码KVM20可以再打八折。</p><p>斯巴达常年缺货，有货的时候可以尽早买。</p><h2 id="三、系统信息"><a href="#三、系统信息" class="headerlink" title="三、系统信息"></a>三、系统信息</h2><img src="https://pic.loll.cc/images/2021/12/03/202112032251486.png" alt="image-20211203225120367" style="zoom:50%;" /><h2 id="四、常规测试"><a href="#四、常规测试" class="headerlink" title="四、常规测试"></a>四、常规测试</h2><h3 id="1、流媒体测试"><a href="#1、流媒体测试" class="headerlink" title="1、流媒体测试"></a>1、流媒体测试</h3><img src="https://pic.loll.cc/images/2021/12/03/202112032252092.png" alt="image-20211203225259029" style="zoom:50%;" /><h3 id="2、国内测试、IO情况"><a href="#2、国内测试、IO情况" class="headerlink" title="2、国内测试、IO情况"></a>2、国内测试、IO情况</h3><p><img src="https://pic.loll.cc/images/2021/12/03/202112032300530.png" alt="image-20211203230023396"></p><h3 id="3、国外测试"><a href="#3、国外测试" class="headerlink" title="3、国外测试"></a>3、国外测试</h3><img src="https://pic.loll.cc/images/2021/12/03/202112032257102.png" alt="image-20211203225704016" style="zoom:50%;" /><h3 id="4、磁盘FIO读写"><a href="#4、磁盘FIO读写" class="headerlink" title="4、磁盘FIO读写"></a>4、磁盘FIO读写</h3><img src="https://pic.loll.cc/images/2021/12/03/202112032257504.png" alt="image-20211203225719469" style="zoom:50%;" /><h2 id="五、路由测试"><a href="#五、路由测试" class="headerlink" title="五、路由测试"></a>五、路由测试</h2><h3 id="1、电信回程"><a href="#1、电信回程" class="headerlink" title="1、电信回程"></a>1、电信回程</h3><img src="https://pic.loll.cc/images/2021/12/03/202112032302757.png" alt="image-20211203230228650" style="zoom:50%;" /><img src="https://pic.loll.cc/images/2021/12/03/202112032302158.png" alt="image-20211203230245117" style="zoom:50%;" /><h3 id="2、联通回程"><a href="#2、联通回程" class="headerlink" title="2、联通回程"></a>2、联通回程</h3><img src="https://pic.loll.cc/images/2021/12/03/202112032303538.png" alt="image-20211203230301494" style="zoom:50%;" /><h3 id="3、移动回程"><a href="#3、移动回程" class="headerlink" title="3、移动回程"></a>3、移动回程</h3><img src="https://pic.loll.cc/images/2021/12/03/202112032303084.png" alt="image-20211203230351040" style="zoom:50%;" /><h3 id="4、教育网回程"><a href="#4、教育网回程" class="headerlink" title="4、教育网回程"></a>4、教育网回程</h3><img src="https://pic.loll.cc/images/2021/12/03/202112032304588.png" alt="image-20211203230420513" style="zoom:50%;" /><h2 id="六、路由掉包"><a href="#六、路由掉包" class="headerlink" title="六、路由掉包"></a>六、路由掉包</h2><p><a href="http://ping.pe/">http://ping.pe/</a>  </p><p>晚上11点钟</p><img src="https://pic.loll.cc/images/2021/12/03/202112032312996.png" alt="image-20211203231209874" style="zoom:50%;" /><h2 id="七、Ping"><a href="#七、Ping" class="headerlink" title="七、Ping"></a>七、Ping</h2><img src="https://pic.loll.cc/images/2021/12/03/202112032307576.png" alt="image-20211203230720523" style="zoom:50%;" /><img src="https://pic.loll.cc/images/2021/12/03/202112032307523.png" alt="image-20211203230704377" style="zoom:50%;" /><h2 id="八、Geekbench-5-Benchmark-Test"><a href="#八、Geekbench-5-Benchmark-Test" class="headerlink" title="八、Geekbench 5 Benchmark Test"></a>八、Geekbench 5 Benchmark Test</h2><p><code>wget -qO- yabs.sh | bash</code></p><img src="https://pic.loll.cc/images/2021/12/03/202112032210991.png" alt="9c4ba0064bd94546a2d0271b467bf52b" style="zoom:50%;" /><h2 id="九、最后"><a href="#九、最后" class="headerlink" title="九、最后"></a>九、最后</h2><p>机子性能没得说，非常适合建站，也可以顺带富强，理论上机子是无限流量的（超过2T之后会限速5Mb&#x2F;s，不会停机！）</p><p>斯巴达机子也经常缺货，可以先注册账号，再等有货的时候购买，还有，尽量用比较真实的信息注册(就是跟你本地IP接近的信息)，否则有可能会被判定欺诈，注意买的时候千万不要开代理！</p>]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 美国VPS </tag>
            
            <tag> 黑五 </tag>
            
            <tag> AMD </tag>
            
            <tag> Spartanhost </tag>
            
            <tag> 斯巴达 </tag>
            
            <tag> 4837 </tag>
            
            <tag> 自带防御 </tag>
            
            <tag> 耍猴 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【VPS测评】Olink 法兰克福三网9929测评</title>
      <link href="/archives/olink/"/>
      <url>/archives/olink/</url>
      
        <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><img src="https://pic.loll.cc/images/2021/12/03/202112032206357.png" alt="image-20211203220642228" style="zoom:50%;" /><p>咕咕的主站是在德国的Contabo服务器上，之后可能转到Netcup，两个都是德国的商家，用AMD的斯巴达反代似乎效果一般，最近得知有一款三网速度都不错的欧洲机器——OLink Cloud，三网联通9929回程，购买后测试发现确实非常不错，机器的性能也确实强悍，还提供了10Gbps的DDoS防御，实在是反代和魔法上网的利器～</p><h3 id="1、官网"><a href="#1、官网" class="headerlink" title="1、官网"></a>1、官网</h3><p>OLink Cloud： <a href="https://loll.cc/olink">点击查看</a></p><h3 id="2、机器基本信息"><a href="#2、机器基本信息" class="headerlink" title="2、机器基本信息"></a>2、机器基本信息</h3><ul><li><p>核芯：1H</p></li><li><p>内存：1GB</p></li><li><p>框架：KVM</p></li><li><p>硬盘：10GB SSD</p></li><li><p>宽带：500 Mbps</p></li><li><p>流量：500GB 每月</p></li><li><p>价格：$4.5&#x2F;每月 - $22.5&#x2F;半年 - $40.5&#x2F;每年</p></li><li><p>优惠：$4.5&#x2F;每月 - $22.5&#x2F;半年 - $40.5&#x2F;每年</p></li><li><p>CPU：AMD Ryzen9 5950X 3.4GHz频率的CPU，Geekbench 5单核跑分高达1400+可见性能确实相当强悍；</p></li><li><p>硬盘：机器采用SSD硬盘I&#x2F;O能达到1.2GB&#x2F;秒用来跑数据库也是毫无压力；</p></li><li><p>防御：机房默认提供了10Gbps的DDoS防御；</p></li><li><p>宽带：500Mbps的宽带，国内三网线路基本都能跑满；</p></li><li><p>线路：咕咕购买的法兰克福机房，三网（电信&#x2F;联通&#x2F;移动）都采用了联通CUVIP 9929回程，对国内三网用户应该都有不错的速度。</p></li></ul><h3 id="3、优惠"><a href="#3、优惠" class="headerlink" title="3、优惠"></a>3、优惠</h3><h4 id="优惠一"><a href="#优惠一" class="headerlink" title="优惠一"></a>优惠一</h4><p>终身9折优惠码：OLINK</p><h4 id="优惠二"><a href="#优惠二" class="headerlink" title="优惠二"></a>优惠二</h4><p>周期优惠：（可与优惠一叠加）<br>半年付：仅需支付5个月<br>一年付：仅需支付9个月</p><h3 id="4、购买地址"><a href="#4、购买地址" class="headerlink" title="4、购买地址"></a>4、购买地址</h3><p>OLink Cloud <a href="https://loll.cc/olink">点击查看</a></p><h2 id="二、套餐情况"><a href="#二、套餐情况" class="headerlink" title="二、套餐情况"></a>二、套餐情况</h2><h3 id="德国法兰克福"><a href="#德国法兰克福" class="headerlink" title="德国法兰克福"></a>德国法兰克福</h3><p><img src="https://pic.loll.cc/images/2021/12/03/202112032203715.png" alt="img"></p><p>我就是这个最低配的。硬盘容量有点小，适合做反向代理用，尤其是你的机子本身是德国的话，效果更好。</p><p>不过这个套餐经常缺货 :(</p><h3 id="美西圣何塞"><a href="#美西圣何塞" class="headerlink" title="美西圣何塞"></a>美西圣何塞</h3><p><img src="https://pic.loll.cc/images/2021/12/03/202112032203450.png" alt="img"></p><p>美西不太推荐，有点贵了。</p><h2 id="三、系统信息"><a href="#三、系统信息" class="headerlink" title="三、系统信息"></a>三、系统信息</h2><img src="https://pic.loll.cc/images/2021/12/03/202112032116432.png" alt="image-20211203211639272" style="zoom:50%;" /><h2 id="四、常规测试"><a href="#四、常规测试" class="headerlink" title="四、常规测试"></a>四、常规测试</h2><h3 id="1、流媒体测试"><a href="#1、流媒体测试" class="headerlink" title="1、流媒体测试"></a>1、流媒体测试</h3><img src="https://pic.loll.cc/images/2021/12/03/202112032120496.png" alt="image-20211203212025405" style="zoom:50%;" /><h3 id="2、国内测试、IO情况"><a href="#2、国内测试、IO情况" class="headerlink" title="2、国内测试、IO情况"></a>2、国内测试、IO情况</h3><p><code>wget -qO- bench.sh | bash</code></p><img src="https://pic.loll.cc/images/2021/12/03/202112032137534.png" alt="image-20211203213724411" style="zoom:50%;" /><p>忘记开BBR了 - -</p><h3 id="3、国外测试"><a href="#3、国外测试" class="headerlink" title="3、国外测试"></a>3、国外测试</h3><img src="https://pic.loll.cc/images/2021/12/03/202112032150193.png" alt="image-20211203215048130" style="zoom:50%;" /><h3 id="4、磁盘FIO读写"><a href="#4、磁盘FIO读写" class="headerlink" title="4、磁盘FIO读写"></a>4、磁盘FIO读写</h3><img src="https://pic.loll.cc/images/2021/12/03/202112032145762.png" alt="image-20211203214506650" style="zoom:50%;" /><h2 id="五、路由测试"><a href="#五、路由测试" class="headerlink" title="五、路由测试"></a>五、路由测试</h2><h3 id="1、电信回程"><a href="#1、电信回程" class="headerlink" title="1、电信回程"></a>1、电信回程</h3><img src="https://pic.loll.cc/images/2021/12/03/202112032155619.png" alt="image-20211203215553552" style="zoom:50%;" /><h3 id="2、联通回程"><a href="#2、联通回程" class="headerlink" title="2、联通回程"></a>2、联通回程</h3><img src="https://pic.loll.cc/images/2021/12/03/202112032156995.png" alt="image-20211203215612961" style="zoom:50%;" /><h3 id="3、移动回程"><a href="#3、移动回程" class="headerlink" title="3、移动回程"></a>3、移动回程</h3><img src="https://pic.loll.cc/images/2021/12/03/202112032156986.png" alt="image-20211203215626934" style="zoom:50%;" /><h3 id="4、教育网回程"><a href="#4、教育网回程" class="headerlink" title="4、教育网回程"></a>4、教育网回程</h3><img src="https://pic.loll.cc/images/2021/12/03/202112032156624.png" alt="image-20211203215658578" style="zoom:50%;" /><h2 id="六、路由掉包"><a href="#六、路由掉包" class="headerlink" title="六、路由掉包"></a>六、路由掉包</h2><p><a href="http://ping.pe/">http://ping.pe/</a>  </p><p>晚上10点钟</p><p><img src="https://pic.loll.cc/images/2021/12/03/202112032201665.png" alt="image-20211203220156528"></p><h2 id="七、Ping"><a href="#七、Ping" class="headerlink" title="七、Ping"></a>七、Ping</h2><img src="https://pic.loll.cc/images/2021/12/03/202112032149476.png" alt="image-20211203214951379" style="zoom:50%;" /><img src="https://pic.loll.cc/images/2021/12/03/202112032150791.png" alt="image-20211203215007742" style="zoom:50%;" /><h2 id="八、Geekbench-5-Benchmark-Test"><a href="#八、Geekbench-5-Benchmark-Test" class="headerlink" title="八、Geekbench 5 Benchmark Test"></a>八、Geekbench 5 Benchmark Test</h2><p><code>wget -qO- yabs.sh | bash</code></p><img src="https://pic.loll.cc/images/2021/12/03/202112032210991.png" alt="9c4ba0064bd94546a2d0271b467bf52b" style="zoom:50%;" /><h2 id="九、最后"><a href="#九、最后" class="headerlink" title="九、最后"></a>九、最后</h2><p>机子总体来说不错，不过个人建议还是用来反代用，真正建站的话这个硬盘容量有点小。</p>]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 美国VPS </tag>
            
            <tag> 欧洲VPS </tag>
            
            <tag> 9929 </tag>
            
            <tag> AMD </tag>
            
            <tag> Olink </tag>
            
            <tag> 法兰克福 </tag>
            
            <tag> 测试脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何备份Docker数据？（以Bitwarden为例）</title>
      <link href="/archives/backup-docker/"/>
      <url>/archives/backup-docker/</url>
      
        <content type="html"><![CDATA[<p>由于我们用Docker搭建的时候，把需要的目录都挂载到本地了，Docker的镜像是可以直接下载的，所以其实我们只要备份这些挂载到本地的数据就好。</p><div style="position: relative; padding: 30% 45%;"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"src="//player.bilibili.com/player.html?aid=336864840&bvid=BV11R4y1x7GJ&cid=445617112&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" ></iframe></div><h2 id="Bitwarden安装"><a href="#Bitwarden安装" class="headerlink" title="Bitwarden安装"></a>Bitwarden安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --name bitwarden -v /root/data/docker-data/bitwarden/bw-data/:/data/ -p 8000:80 bitwardenrs/server:latest</span><br></pre></td></tr></table></figure><h2 id="Docker挂载目录打包"><a href="#Docker挂载目录打包" class="headerlink" title="Docker挂载目录打包"></a>Docker挂载目录打包</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker inspect  容器名</span><br></pre></td></tr></table></figure><p>查看<code>Mounts</code>，就可以看到映射到本地的目录。</p><p>或者直接用下面这个命令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run --<span class="built_in">rm</span> --volumes-from CONTAINER -v $(<span class="built_in">pwd</span>):/backup busybox tar cvfz /backup/backup.tar CONTAINERPATH</span><br></pre></td></tr></table></figure><p>更改<code>CONTAINER</code>（容器名）和<code>CONTAINERPATH</code>（容器内部路径）</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run --<span class="built_in">rm</span> --volumes-from bitwarden -v $(<span class="built_in">pwd</span>):/backup busybox tar cvfz /backup/backup.tar /data</span><br></pre></td></tr></table></figure><h2 id="SCP传输文件到另一台服务器"><a href="#SCP传输文件到另一台服务器" class="headerlink" title="SCP传输文件到另一台服务器"></a>SCP传输文件到另一台服务器</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">scp /root/backup/backup.tar root@80.240.19.151:/root/data/docker-data/bitwarden</span><br></pre></td></tr></table></figure><h2 id="其他常用命令"><a href="#其他常用命令" class="headerlink" title="其他常用命令"></a>其他常用命令</h2><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -zxvf /root/data/docker-data/bitwarden/backup.tar</span><br></pre></td></tr></table></figure><h3 id="重命名"><a href="#重命名" class="headerlink" title="重命名"></a>重命名</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mv</span> data bw-data   <span class="comment">#把data重命名成bw-data</span></span><br></pre></td></tr></table></figure><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>有问题欢迎留言区留言交流～</p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker部署 </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>保护好你的小鸡！保姆级服务器安全教程！</title>
      <link href="/archives/how-to-secure-a-linux-server/"/>
      <url>/archives/how-to-secure-a-linux-server/</url>
      
        <content type="html"><![CDATA[<div style="position: relative; padding: 30% 45%;"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"src="//player.bilibili.com/player.html?aid=848229546&bvid=BV12L4y187Dy&cid=413140255&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" ></iframe></div><h2 id="为什么要做安全防护"><a href="#为什么要做安全防护" class="headerlink" title="为什么要做安全防护"></a>为什么要做安全防护</h2><p>Linux 服务器的安全防护是一个纷繁复杂的巨大课题。无数的网站、APP、服务、甚至线下基础设施都建立在 Linux 的基石之上，这背后牵涉到巨大的经济利益和商业价值，当然也就意味着黑灰产有巨大的攻击动力。但是这些服务是如此重要、根本不允许出现重大的安全漏洞。于是无数的运维专业人员都在安全攻防的战场上拼搏努力，这才让大家能享受到基本稳定的现代化数字生活。</p><p>现在，你拥有了一台 VPS（我们亲切地称它为小鸡），这与你自己的电脑不同，它24小时开机，而且具有一个公网IP，意味着人人都可能可以访问到你的服务器，那就相当于你已经置身于安全攻防战场的第一线、直面所有风险。但与此同时，萌新由于知识和信息的不足，看待安全问题是总是难免两极分化：要么觉得轻如鸿毛和自己没有半点关系，要么觉得重于泰山甚至惶惶不可终日。</p><ul><li>对于前者，我的建议是：安全无小事，尽量多查一些安全方面的信息，免得自己真的受了损失才后悔莫及；</li><li>对于后者，我的建议是：不用紧张，我们的服务器仍不具有太高的价值、一般不会吸引到高水平的攻击，需要面对的基本都是一些自动化脚本的恶意扫描和登录尝试，跟着本文做一些基础的防护即可。</li></ul><h2 id="具体的风险到底是什么"><a href="#具体的风险到底是什么" class="headerlink" title="具体的风险到底是什么"></a>具体的风险到底是什么</h2><p>正如我们所知，任何人只需要知道【IP 地址】+【端口】+【用户名】+【密码】这四个要素，就能登录你的 VPS 服务器。那很显然，这四要素的安全就是我们要防护的底线。我们来逐一分析：</p><ol><li><p><strong>【IP 地址】</strong>：恶意脚本会随机尝试和扫描 IP 段，可以简单认为是公开信息、无法隐藏</p></li><li><p><strong>【端口】</strong>：如果使用默认端口，那么【端口 &#x3D; 22】</p></li><li><p><strong>【用户名】</strong>：如果使用默认用户，那么【用户名 &#x3D; root】</p></li><li><p><strong>【密码】</strong>：密码不存在默认值，一定是由 VPS 后台随机生成或由你自行设置的。也就是说，如果你的服务器都是默认设置，则四要素中的三个已经是已知的，那么你整个服务器的安全，就全部寄托在一串小小的密码上了。这时有几种情况：</p><ul><li>如果你用了 VPS 管理后台随机生成密码，它一般包含随机的十几个大小写混杂的字母和符号，相对比较安全</li><li>如果你为了好记、把密码改成了类似123456这种超弱的密码，破解你的 VPS 服务器可谓不费吹灰之力</li><li>如果你为了好记、把密码改成了比较复杂、但在别的地方用过的密码，其实也并不安全。你要明白黑客手里有作弊器，比如说密码表，包含数万、数十万、数百万甚至更多曾经泄漏的真实密码）</li></ul></li><li><p>但你要明白，没有哪个黑客真的要坐在电脑前一次一次的尝试你的密码，全部的攻击尝试都是恶意脚本自动进行的，它会 24 小时不眠不休的工作。也许每天你酣睡之时，你的服务器都在经受着一轮又一轮的冲击。</p></li></ol><p>一旦密码被成功撞破，意味着你的四要素全部被攻击者掌握，恶意脚本就会快速登录服务器、获取服务器的最高 root 控制权、安装部署它的恶意服务，然后就可以用你的服务器来 24 小时做各种坏事（<strong>比如挖矿、传播病毒、发送垃圾邮件、欺诈邮件、做 BT 中继、甚至暗网公众节点</strong>等等等等）。如果恶意脚本比较克制，其实可以做到相当的隐蔽性。而新人一般也不会去观察留意 VPS 的登录记录、进程变化、CPU 占用变化、流量变化等指标，你其实就很难发现自己被黑了。直到你的 VPS 服务商封禁你的账号、或者收到律师函为止。</p><ol start="6"><li>别忘了，你获得 VPS 时大概率需要使用真实的支付信息，你登录各种网站、社交平台时也会留下你的 IP 地址，这些都与你的身份有直接或者间接的关系。于是，<strong>一旦这些坏事发生，它们就会不可避免地与你产生关联</strong>。</li></ol><p>所以，一起来跟着下面的教程，来给我们的小鸡做一些基础的安全防护吧。</p><h2 id="开始安全防护工作"><a href="#开始安全防护工作" class="headerlink" title="开始安全防护工作"></a>开始安全防护工作</h2><blockquote><p> 本文以Ubuntu20.04为例子，Debian的操作也是类似的，CentOS系统会不太一样，请自行搜索相关内容。（强烈安利大家使用Ubuntu或者Debian系统）</p></blockquote><p>任何涉及到安装的操作之前，先更新一下我们安装包的索引，可以的话，顺便更新一下软件。这本身也是安全的一部分，新的软件意味着更少的漏洞。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt update </span><br><span class="line"></span><br><span class="line">apt upgrade </span><br></pre></td></tr></table></figure><img src="https://pic.loll.cc/images/2021/09/21/202109211414265.png" alt="更新软件包" style="zoom: 50%;" /><p>保持即可，直接回车。</p><img src="https://pic.loll.cc/images/2021/09/21/202109211416715.png" alt="保持默认" style="zoom:50%;" /><p>更新完毕，我们进入正题。</p><p>本次教程讲分为<strong>SSH篇</strong>、<strong>宝塔篇</strong>和<strong>全局篇</strong>来讲解，后续如果有补充也会更新至相应位置。</p><h3 id="SSH篇"><a href="#SSH篇" class="headerlink" title="SSH篇"></a>SSH篇</h3><h4 id="1、更改SSH端口"><a href="#1、更改SSH端口" class="headerlink" title="1、更改SSH端口"></a>1、更改SSH端口</h4><p>第一步，我们先来解决【端口 &#x3D; <code>22</code>】的问题。（注意：有些 VPS 服务商，默认的端口已经是非 22 端口，那么你可以忽略这一步，当然也可以跟着本文改成别的端口）</p><ol><li><p>我们要做的第一件事，当然就是【用<code>nano</code>这个文本编辑器打开<code>SSH远程登录程序设置</code>】，在 Windows 下，你会【找到文件并双击】，在 Linux 下该怎么办呢？仔细看看上面的命令说明，是不是就很简单了？没错，就是：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nano /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure></li><li><p>文件打开后，你就进入了<code>nano</code>的界面，稍微观察一下，你会发现，它把重要的快捷键都显示在屏幕下方了（下图红框内），直接开卷考试、不用死记硬背，是不是很贴心呢？</p><img src="https://pic.loll.cc/images/2021/09/21/202109211256133.png" alt="nano的界面"  /></li><li><p>我们要做的第二件事，是【在打开的文件中找到<code>Port</code>这一项，并修改它的端口】。Port 后面的数字就是 SSH 的端口，一般建议把它改成一个大于<code>1024</code>小于<code>65535</code>的整数（本文以<code>9753</code>为例）。结合<code>nano</code>的快捷键，想一下该怎么操作呢？</p><ul><li>使用 <code>ctrl+w</code> 进入搜索模式，然后输入 <code>Port 22</code> 并回车</li><li>删除 <code>22</code> 并改成 <code>9753</code></li><li>说明：如果这一行开头有个<code>#</code>，证明这一行【不生效】（被注释掉了），你可像我一样在文件最后写一个不带<code>#</code>的，或者把<code>#</code>删掉就好。</li></ul><blockquote><p>本文以<code>9753</code>为例，就意味着随着本文的发布，这个端口会变成一个不大不小的特征，也许会被攻击者优先尝试，所以强烈建议你用一个自己想到的其他端口，毕竟，你有 6 万多个端口可以自由选择。</p></blockquote></li><li><p>我们要做的第三件事，是【保存文件并退出】</p><ul><li>如果第 3 步你有仔细观察，就会发现保存并不是常见的 <code>ctrl+s</code>。</li><li>正确的快捷键：保存是 <code>ctrl+o</code> + <code>回车</code>，退出是 <code>ctrl+x</code></li></ul></li><li><p>我们最后要做的事，是【重启 ssh 服务，使变更生效】</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo service sshd restart</span><br></pre></td></tr></table></figure><p><strong>注意：为了保证你不会失联，请不要关闭当前的ssh登录窗口！而是另外开一个窗口来测试！</strong></p><p><strong>注意：为了保证你不会失联，请不要关闭当前的ssh登录窗口！而是另外开一个窗口来测试！</strong></p><p><strong>注意：为了保证你不会失联，请不要关闭当前的ssh登录窗口！而是另外开一个窗口来测试！</strong></p><img src="https://pic.loll.cc/images/2021/09/21/202109211420757.png" alt="默认用22端口已经无法登录了" style="zoom:50%;" /></li><li><p>修改登陆配置</p></li></ol><p>现在新的端口已经生效，下次登录时就要用<code>9753</code>了。</p><p>登陆变成了：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh root@你的服务器IP -p 9753</span><br></pre></td></tr></table></figure><img src="https://pic.loll.cc/images/2021/09/21/202109211422979.png" alt="用新端口可以登录" style="zoom:50%;" /><p>如果是用其他客户端，记得修改端口。</p><h4 id="2、使用复杂的密码"><a href="#2、使用复杂的密码" class="headerlink" title="2、使用复杂的密码"></a>2、使用复杂的密码</h4><p>如果你想给当前的用户设置重新设置一个密码，那么可以到这个网站，生成一个复杂的密码，当作你服务器的密码。</p><p><a href="https://1password.com/zh-cn/password-generator/">https://1password.com/zh-cn/password-generator/</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">passwd</span><br></pre></td></tr></table></figure><img src="https://pic.loll.cc/images/2021/09/21/202109211423871.png" alt="修改了root密码" style="zoom:50%;" /><p>出现提示让你修改密码。然后粘贴进去就行了。（注意为了安全的考量，Linux下输入密码是没有显示的)</p><h4 id="3、新建普通用户"><a href="#3、新建普通用户" class="headerlink" title="3、新建普通用户"></a>3、新建普通用户</h4><p>接下来，我们来解决【用户名 &#x3D; <code>root</code>】的问题。</p><p>首先你要理解， Linux 系统中的<code>root</code>，不仅仅是一个管理员账号那么简单。它是整个系统的【根基】、是系统的主宰、至高无上的神。一旦<code>root</code>账号出现安全问题，整个系统都只能任人鱼肉、无处可逃。那么就跟随我进行操作吧：</p><ol><li><p>我们要做的第一件事，是【新增一个用户并设定登录密码】，名字你可以随便起，我这里以<code>vpsadmin</code>为例：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">adduser vpsadmin</span><br></pre></td></tr></table></figure><p>执行命令后，根据提示操作即可。请务必设置一个用户密码（别忘记设置密码时你时看不到 <code>******</code> 的）。之后系统会询问你一些用户的附加信息，这些就可以无视，一路回车即可。</p><p><img src="https://pic.loll.cc/images/2021/09/21/202109211310738.png" alt="建立新用户"></p><blockquote><p>本文以<code>vpsadmin</code>为例，就意味着随着本文的发布，这个用户名也会变成一个不大不小的特征，也许会被攻击者优先尝试。所以和端口一样，我强烈建议你用一个自己想到的其他用户名。</p></blockquote></li><li><p>我们要做的第二件事，是【安装<code>sudo</code>功能】（<code>sudo</code> 就是在关键时刻，让普通账户临时获得 <code>root</code> 的神力，战力全开拯救世界）</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">apt update &amp;&amp; apt install sudo  #Debain默认没有，Ubuntu自身应该是已经有安装的</span><br></pre></td></tr></table></figure><p>聪明的你大概已经发现，这一行命令其实是两个命令。前一半 <code>apt update</code> 你之前已经见过并且用过了，是去服务器刷新软件版本信息。后面的 <code>apt install</code>就是这一次要用到的【安装命令】。两条连接在一起，就是让系统去【刷新可用的最新软件，然后安装最新版的<code>sudo</code>程序】。 <code>&amp;&amp;</code> 则是把两个命令连起来执行的意思。</p></li><li><p>我们要做的第三件事，是【把<code>vpsadmin</code>用户加入<code>sudo</code>名单里，让他有资格借用<code>root</code>的神力】</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">visudo</span><br></pre></td></tr></table></figure><p>在 <code>User Privilege Specification</code> 下加入一行 <code>vpsadmin ALL=(ALL) NOPASSWD: ALL</code> 即可。</p><img src="https://pic.loll.cc/images/2021/09/21/202109211426432.png" alt="User Privilege Specification" style="zoom:50%;" /><blockquote><p>我要特别说明的是<code>NOPASSWD</code>这个设置，它的意思是<code>vpsadmin</code>用户临时使用<code>root</code>权限时，不用额外输入密码。<strong>这与一般的安全建议相反</strong>。我之所以如此推荐，是因为很多新人不顾危险坚持使用<code>root</code>账号就是因为用<code>root</code>时不用重复输入密码、觉得轻松。“两害相权取其轻”，我认为【直接用<code>root</code>用户的风险】大于【使用<code>sudo</code>时不用输密码的风险】，所以做了以上的建议。</p><p>如果你希望遵守传统习惯、每次使用<code>sudo</code>时需要输入密码，那么这一行改成 <code>vpsadmin ALL=(ALL:ALL) ALL</code> 即可。</p></blockquote></li></ol><h4 id="4、禁止root登陆"><a href="#4、禁止root登陆" class="headerlink" title="4、禁止root登陆"></a>4、禁止root登陆</h4><ol><li><p>现在你已经逐渐熟悉 Linux 了，所以这次换你思考，我们要做的第一件事是什么呢？没错，还是【用<code>nano</code>编辑器打开<code>SSH远程登录程序设置</code>】，什么，你想不起来怎么操作了？那去复习一下上面的内容再回来吧！………… 正确答案：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nano /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure></li><li><p>找到<code>PermitRootLogin Yes</code>这一项，然后把它后面的设定值改为<code>no</code>即可。还记得怎么操作吗？………… 正确答案：</p><ul><li>使用 <code>ctrl+w</code> 进入搜索模式，然后输入 <code>PermitRootLogin</code> 并回车</li></ul><img src="https://pic.loll.cc/images/2021/09/21/202109211428547.png" alt="PermitRootLogin" style="zoom:50%;" /><ul><li>删除 <code>yes</code> 并改成 <code>no</code></li></ul><img src="https://pic.loll.cc/images/2021/09/21/202109211520082.png" style="zoom:50%;" /></li><li><p>保存文件并退出。还记得怎么操作吗？………… 正确答案：</p><ul><li>保存是 <code>ctrl+o</code>，然后 <code>回车</code> 确认</li><li>退出是 <code>ctrl+x</code></li></ul></li><li><p>重启 ssh 服务，让变更生效。还记得………… 算了直接公布正确答案：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo service sshd restart</span><br></pre></td></tr></table></figure><p><strong>注意：为了保证你不会失联，请不要关闭当前的ssh登录窗口！而是另外开一个窗口来测试！</strong></p><p><strong>注意：为了保证你不会失联，请不要关闭当前的ssh登录窗口！而是另外开一个窗口来测试！</strong></p><p><strong>注意：为了保证你不会失联，请不要关闭当前的ssh登录窗口！而是另外开一个窗口来测试！</strong></p></li><li><p>下次通过远程登录，<code>root</code>用户已无法连接，</p><img src="https://pic.loll.cc/images/2021/09/21/202109211431659.png" alt="root用户已无法连接" style="zoom:50%;" /><p>用户名就要换成<code>vpsadmin</code>了！如果你用的是类似PuTTY、FinalShell的软件，为方便起见，我们可以把<code>vpsadmin</code>设置成默认登录用户名。（别忘了保存 Session）</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh vpsadmin@你的服务器IP -p 9753</span><br></pre></td></tr></table></figure></li></ol><img src="https://pic.loll.cc/images/2021/09/21/202109211432983.png" alt="vpsadmin成功连接" style="zoom:50%;" /><p><img src="https://pic.loll.cc/images/2021/09/21/202109211315233.png" alt="PuTTY设置默认用户名"></p><p><strong>接下来先跳到全局篇，一会儿再回来。</strong></p><h4 id="5、启用-RSA-密钥验证登录并禁止密码登陆（大招）"><a href="#5、启用-RSA-密钥验证登录并禁止密码登陆（大招）" class="headerlink" title="5、启用 RSA 密钥验证登录并禁止密码登陆（大招）"></a>5、启用 RSA 密钥验证登录并禁止密码登陆（大招）</h4><p>接下来，我们来解决【密码】可能被撞破的问题。</p><p>前面我说过，黑客并不是很蠢的用穷举法破解你的密码，而是会用一些比如“密码表”的作弊手段。除非你用的是随机生成的超长密码（比如借助 1Password，或者 macOS 的 keychain 等密码管理工具），否则很容易中招。</p><p>超长随机密码虽然安全性有所提高，但是基本上无法记忆，手动输入也十分麻烦易错。为了解决这个困境，我们可以直接弃用【密码验证】方式，改用更安全的【密钥验证】。</p><p>所谓的【密钥验证】，就是生成【一对】相关联的密钥文件（公钥和私钥），然后把【公钥】上传到 VPS 备用。每次登录时，SSH 会将【公钥】和【私钥】进行匹配，若验证是正确的【密钥对】，则验证通过。（换言之，你无需记忆和输入复杂的密码，只要保护好【私钥】这个文件不外泄即可）</p><blockquote><p>本文以 <code>RSA</code> 密钥举例，是因为 <code>RSA</code> 密钥在各种设备、各种 <code>SSH</code> 客户端中有广泛悠久的支持历史，且目前依然能提供够用的安全性。但它绝非唯一选择。</p><p>其他的常见密钥还有：</p><ul><li><code>DSA</code> - 已经从数学层面被证明不安全，所以永远不要用它</li><li><code>ECDSA</code> - 密钥小安全性高，但其算法被指留有 NSA 的后门，如果你的 VPS 上有值得 NSA 关注的东西就不要用它</li><li><code>Ed25519</code> - 这是一个与 <code>ECDSA</code> 十分类似的算法，故具有相似的性能优势。同时其文档全部公开，所以普遍认为无后门</li></ul><p>所以，如果你的设备和软件都支持的话，我建议优先选择 <code>Ed25519</code> 密钥。</p></blockquote><p>那我们现在就来配置【密钥验证】吧！</p><p>这里由于我本鸡已经使用过keygen生成了密钥对，所以以另一台VPS为例子，如果你本地使用的是Linux或者是macOS系统，也是一样的。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ssh-keygen -t rsa -b 4096 -C &quot;&lt;CLIENT-NAME&gt;&quot;</span></span><br><span class="line">ssh-keygen -t rsa -b 4096 -C <span class="string">&quot;myvps&quot;</span> </span><br></pre></td></tr></table></figure><img src="https://pic.loll.cc/images/2021/09/21/202109211512215.png" alt="image-20210921151238097" style="zoom:50%;" /><img src="https://pic.loll.cc/images/2021/09/21/202109211513525.png" alt="image-20210921151310454" style="zoom:50%;" /><p>我们服务器上先在家目录下，创建一个<code>.ssh</code>的文件夹</p><img src="https://pic.loll.cc/images/2021/09/21/202109211516128.png" alt="image-20210921151650049" style="zoom:50%;" /><p>本地鸡子执行下面命令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># scp -P ssh端口 ~/.ssh/id_rsa.pub &lt;YOURNAME&gt;@&lt;SERVER-IP&gt;:/home/&lt;YOURNAME&gt;/.ssh/authorized_keys</span></span><br><span class="line">scp -P 9753 ~/.ssh/id_rsa.pub vpsadmin@98.126.18.93:/home/vpsadmin/.ssh/authorized_keys</span><br></pre></td></tr></table></figure><p>输入服务器登录密码，</p><img src="https://pic.loll.cc/images/2021/09/21/202109211515374.png" alt="image-20210921151538291" style="zoom:50%;" /><p>成功把本地生成的公钥文件拷贝到了服务器上，</p><img src="https://pic.loll.cc/images/2021/09/21/202109211517405.png" alt="image-20210921151720357" style="zoom:50%;" /><p>检查一下服务器上的<code>.ssh</code>目录，已经有了。</p><img src="https://pic.loll.cc/images/2021/09/21/202109211517236.png" alt="image-20210921151740182" style="zoom:50%;" /><p>修改 <code>authorized_keys</code> 文件权限为 <code>600</code> （仅所有者可读可写）</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 600 ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure><p>编辑ssh配置文件</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo nano /etc/ssh/sshd_config <span class="comment">#搜索PasswordAuthentication，把yes改成no</span></span><br></pre></td></tr></table></figure><img src="https://pic.loll.cc/images/2021/09/21/202109211520969.png" alt="image-20210921152001914" style="zoom:50%;" /><p>由于本地（我的macOS）没有和服务器配置密钥对，现在已经无法连接了。</p><img src="https://pic.loll.cc/images/2021/09/21/202109211521471.png" alt="image-20210921152153410" style="zoom:50%;" /><p>这台机器上配置了密钥对，依然可以连接，现在全世界也只有这台机子能连上我的服务器。</p><img src="https://pic.loll.cc/images/2021/09/21/202109211522322.png" alt="image-20210921152236243" style="zoom:50%;" /><p>如果想要让我本地的（我的macOS）也能够连接上服务器，只需要把我本地的机子上生成的公钥另起一行复制到服务器上即可。</p><img src="https://pic.loll.cc/images/2021/09/21/202109211526914.png" alt="image-20210921152645811" style="zoom:50%;" /><p>测试一下，已经可以成功免密连接。</p><img src="https://pic.loll.cc/images/2021/09/21/202109211538332.png" alt="image-20210921153857203" style="zoom:50%;" /><p>到这里为止，配合上<strong>全局篇</strong>的内容你的 VPS 已经完成了基本安全保障，虽然称不上固若金汤，但一般的恶意脚本应该已经无法对你造成伤害了！</p><h3 id="宝塔篇"><a href="#宝塔篇" class="headerlink" title="宝塔篇"></a>宝塔篇</h3><h4 id="1、更改宝塔8888端口"><a href="#1、更改宝塔8888端口" class="headerlink" title="1、更改宝塔8888端口"></a>1、更改宝塔8888端口</h4><p>默认宝塔采用<code>8888</code>端口，强烈建议修改！</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bt</span><br></pre></td></tr></table></figure><img src="https://pic.loll.cc/images/2021/09/21/202109211544973.png" alt="更改宝塔的端口" style="zoom:50%;" /><h4 id="2、尽量用反向代理"><a href="#2、尽量用反向代理" class="headerlink" title="2、尽量用反向代理"></a>2、尽量用反向代理</h4><p>一般反向代理配置：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:8080/; <span class="comment">#改成你服务的端口号</span></span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样的话，就不需要开发相应的端口给外部访问了，一定程度可以保证安全性。</p><h3 id="全局篇"><a href="#全局篇" class="headerlink" title="全局篇"></a>全局篇</h3><h4 id="1、安装UFW防火墙"><a href="#1、安装UFW防火墙" class="headerlink" title="1、安装UFW防火墙"></a>1、安装UFW防火墙</h4><p>Ubuntu默认自己已经是自带ufw防火墙了，只是没有启动而已（如果是Debian的话，需要安装）</p><img src="https://pic.loll.cc/images/2021/09/21/202109211435842.png" alt="自带ufw防火墙" style="zoom:50%;" /><ol><li><strong>设置ufw使用默认值</strong></li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ufw default deny incoming</span><br><span class="line">sudo ufw default allow outgoing</span><br></pre></td></tr></table></figure><img src="https://pic.loll.cc/images/2021/09/21/202109211439476.png" alt="设置ufw使用默认值" style="zoom:50%;" /><ol start="2"><li><p><strong>允许SSH连接</strong></p><p>如果没有改端口：</p></li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ufw allow ssh</span><br></pre></td></tr></table></figure><p>​现在我们改了端口：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ufw allow 9753/tcp comment <span class="string">&#x27;SSH&#x27;</span></span><br></pre></td></tr></table></figure><ol start="3"><li><strong>允许http连接</strong></li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ufw allow http</span><br></pre></td></tr></table></figure><ol start="4"><li><strong>允许https连接</strong></li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ufw allow https</span><br></pre></td></tr></table></figure><ol start="5"><li><strong>启动ufw防火墙</strong></li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ufw <span class="built_in">enable</span></span><br></pre></td></tr></table></figure><img src="https://pic.loll.cc/images/2021/09/21/202109211444108.png" alt="启动ufw" style="zoom:50%;" /><ol start="6"><li><strong>查看ufw防火墙状态</strong></li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ufw status</span><br></pre></td></tr></table></figure><img src="https://pic.loll.cc/images/2021/09/21/202109211446260.png" alt="查看防火墙状态" style="zoom:50%;" /><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ufw status numbered</span><br></pre></td></tr></table></figure><img src="https://pic.loll.cc/images/2021/09/21/202109211447335.png" alt="带编号查看防火墙状态" style="zoom:50%;" /><ol start="7"><li><strong>删除一条规则</strong></li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ufw delete 5</span><br></pre></td></tr></table></figure><img src="https://pic.loll.cc/images/2021/09/21/202109211449814.png" alt="删除一个开放端口" style="zoom:50%;" /><ol start="8"><li><strong>重载配置</strong></li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ufw reload</span><br></pre></td></tr></table></figure><h4 id="2、禁止Ping"><a href="#2、禁止Ping" class="headerlink" title="2、禁止Ping"></a>2、禁止Ping</h4><ol><li><strong>宝塔用户</strong></li></ol><p>如果是宝塔用户，可以在这边禁止Ping</p><img src="https://pic.loll.cc/images/2021/09/21/202109211454543.png" alt="宝塔-禁止Ping" style="zoom:50%;" /><ol start="2"><li><strong>未安装宝塔的用户</strong></li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo nano /etc/ufw/before.rules</span><br></pre></td></tr></table></figure><p>搜索：<code>echo-request</code>，把<code>ACCEPT</code>改成<code>DROP</code></p><img src="https://pic.loll.cc/images/2021/09/21/202109211452101.png" alt="禁止Ping" style="zoom:50%;" /><h4 id="3、禁止暴力破解"><a href="#3、禁止暴力破解" class="headerlink" title="3、禁止暴力破解"></a>3、禁止暴力破解</h4><p>安装Fail2ban</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt update &amp;&amp; sudo apt install fail2ban</span><br></pre></td></tr></table></figure><img src="https://pic.loll.cc/images/2021/09/21/202109211459920.png" alt="image-20210921145944792" style="zoom:50%;" /><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/fail2ban <span class="comment"># 进入fail2ban目录</span></span><br><span class="line">sudo <span class="built_in">cp</span> fail2ban.conf fail2ban.local  <span class="comment"># 复制一份配置文件 </span></span><br></pre></td></tr></table></figure><img src="https://pic.loll.cc/images/2021/09/21/202109211500363.png" alt="image-20210921150042277" style="zoom:50%;" /><p>默认的是没有配置的，我们加入一个配置</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[sshd]</span><br><span class="line"><span class="built_in">enable</span> = ture</span><br><span class="line">port = 9753   <span class="comment"># 注意改成自己对应的端口</span></span><br><span class="line">filter =sshd</span><br><span class="line">logpath = /var/log/auth.log</span><br><span class="line">maxretry = 3</span><br><span class="line">bantime = -1</span><br></pre></td></tr></table></figure><img src="https://pic.loll.cc/images/2021/09/21/202109211503021.png" alt="image-20210921150345955" style="zoom:50%;" /><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo service fail2ban restart <span class="comment">#重启</span></span><br><span class="line">sudo fail2ban-client status <span class="comment">#查看状态</span></span><br><span class="line">sudo fail2ban-client status sshd <span class="comment">#查看sshd的详细状态</span></span><br></pre></td></tr></table></figure><img src="https://pic.loll.cc/images/2021/09/21/202109211504913.png" alt="image-20210921150422848" style="zoom:50%;" /><img src="https://pic.loll.cc/images/2021/09/21/202109211504990.png" alt="image-20210921150440925" style="zoom:50%;" /><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo fail2ban-client <span class="built_in">set</span> sshd unbanip 192.0.0.1 <span class="comment">#解禁指定IP</span></span><br></pre></td></tr></table></figure><p>好了，我们回到SSH篇的第5点。</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>其实，只要是在互联网上，只要是有价值的内容，但凡涉及到需要输入密码的，都强烈推荐使用强密码，而不要使用非常简单的密码，有些同学可能觉得麻烦，但等到数据丢了或者账户被盗了之后，你再后悔可能都来不及了。况且，现在已经有很多提供复杂密码的网站或者工具，网站比如：<a href="https://1password.com/zh-cn/password-generator/%EF%BC%8C">https://1password.com/zh-cn/password-generator/，</a></p><img src="https://pic.loll.cc/images/2021/09/21/202109211237644.png" alt="image-20210921123721465" style="zoom: 25%;" /><p>工具比如之前我们教大家安装过的Bitwarden，</p><img src="https://pic.loll.cc/images/2021/09/21/202109211238035.png" alt="image-20210921123819985" style="zoom: 25%;" /><p>而且现在的浏览器也可以贴心地帮我们记住这些乱七八糟的密码，</p><img src="https://pic.loll.cc/images/2021/09/21/202109211240968.png" alt="以Chrome浏览器为例子" style="zoom: 25%;" /><p>还是比较方便的。</p><p>还有一些重要的网站，会提供一个叫做“二步验证”的服务，他们会提供一个二维码，然后你下载相应的APP来扫码，会生成一串随时间变化的数字（有点像将军令），每次你登陆网站，除了输入常规的账号密码之外，还会需要额外输入这个二步验证器提供的数字才能登陆，这样可以进一步保证你的账户安全。</p><p>一般这个叫做二步验证器的APP有这些：</p><img src="https://pic.loll.cc/images/2021/09/21/202109211245308.png" alt="二步验证器的APP" style="zoom:33%;" /><p>基于本人的使用体验，这边推荐大家使用Authy，而不是Google Authenticator，因为后者实在是太安全了，万一你手机丢了，是没有办法恢复的（或是你换了个手机，导数据的时候没导过来，又恰巧格式化了手机……）</p><p>它们分别长这样：</p><img src="https://pic.loll.cc/images/2021/09/21/202109211250687.jpg" alt="Authy、Google Authenticator" style="zoom:33%;" /><p>好了，今天就说这么多了，互联网时代，请保护好自己的数据。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>感谢互联网，感谢以下分享的作者们。</p><p><a href="https://www.youtube.com/watch?v=sO-afVsDJOA">https://www.youtube.com/watch?v=sO-afVsDJOA</a></p><p><a href="https://techguides.yt/guides/secure-linux-server/">https://techguides.yt/guides/secure-linux-server/</a></p><p><a href="https://xtls.github.io/document/level-0/ch04-security.html#_4-7-%E4%BD%BF%E7%94%A8-rsa-%E5%AF%86%E9%92%A5%E7%99%BB%E5%BD%95%E5%B9%B6%E7%A6%81%E7%94%A8%E5%AF%86%E7%A0%81%E7%99%BB%E5%BD%95">https://xtls.github.io/document/level-0/ch04-security.html#_4-7-%E4%BD%BF%E7%94%A8-rsa-%E5%AF%86%E9%92%A5%E7%99%BB%E5%BD%95%E5%B9%B6%E7%A6%81%E7%94%A8%E5%AF%86%E7%A0%81%E7%99%BB%E5%BD%95</a></p><p><a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-a-firewall-with-ufw-on-ubuntu-20-04">https://www.digitalocean.com/community/tutorials/how-to-set-up-a-firewall-with-ufw-on-ubuntu-20-04</a></p><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><h3 id="安装PuTTY"><a href="#安装PuTTY" class="headerlink" title="安装PuTTY"></a>安装PuTTY</h3><p>虽然 Windows 10 之后的 PowerShell 和 WSL 也可以达到很好的 SSH 操作体验。但是因为并非所有版本的 Windows 都有最新的组件，故本文还是以老牌的 PuTTY 为例，进行 SSH 远程登录的操作详解。（使用其他工具的话、在 SSH 登陆之后的操作都是一样的）</p><p>下面就跟我一步步操作吧。</p><ol><li>进入 PuTTY 的官网，选择适合你操作系统的版本下载。（本文以 64 位版本为例）</li></ol><img src="https://pic.loll.cc/images/2021/09/21/202109211644848.png" alt="下载PuTTY" style="zoom:50%;" /><ol start="2"><li><p>安装运行后，将会看到 PuTTY 的主界面。现在请拿出你记东西的小本本，在下图的对应位置填入你 VPS 的**IP 地址(VPS IP)和端口(VPS PORT)**。为了方便以后使用时不用重复输入，我们可以保存会话 (Saved Sessions)，未来使用时只要按 Load 即可一键载入设置。</p><p><img src="https://pic.loll.cc/images/2021/09/21/202109211647615.png" alt="设置PuTTY"></p></li><li><p>我建议将 <code>Connection</code> 中的 <code>keepalive</code> 设置为 60 秒，防止你一段时间没有操作之后 SSH 自动断线。另外务必再次保存设置。</p><p><img src="https://pic.loll.cc/images/2021/09/21/202109211647797.png" alt="防止频繁断线"></p></li></ol><blockquote><p>注意</p><p>对 PuTTY 的任何设置更新都要再次手动保存 Session，不然关闭后就会丢失</p></blockquote><ol start="4"><li><p>点击 Open 就会进入 SSH 连接窗口，对应下图输入用户名与密码，与你的 VPS 远程主机建立连接。（本文假设默认用户名是 <code>root</code>，另外，在 Linux 系统输入密码的时候，是不会出现 <code>****** </code>这种提示符的，这样可以避免密码长度泄漏，不是你的键盘坏掉了哦！）</p><img src="https://pic.loll.cc/images/2021/09/21/202109211648604.png" alt="SSH远程登录" style="zoom: 67%;" /></li></ol><h3 id="PuTTYgen生成密钥对（适合Windows用户使用）"><a href="#PuTTYgen生成密钥对（适合Windows用户使用）" class="headerlink" title="PuTTYgen生成密钥对（适合Windows用户使用）"></a>PuTTYgen生成密钥对（适合Windows用户使用）</h3><h4 id="1、运行PuTTYgen-PuTTY-密钥生成器"><a href="#1、运行PuTTYgen-PuTTY-密钥生成器" class="headerlink" title="1、运行PuTTYgen (PuTTY 密钥生成器)"></a>1、运行<code>PuTTYgen</code> (PuTTY 密钥生成器)</h4><p>位置是 <code>开始菜单</code> –&gt; <code>所有程序</code> –&gt; <code>PuTTY (64-bit)</code> –&gt; <code>PuTTYgen</code></p><ol><li><p>点击<code>Generate</code>开始生成（在界面空白处乱晃鼠标增加随机数）</p><p><img src="https://pic.loll.cc/images/2021/09/21/202109211636251.png" alt="生成密钥"></p></li></ol><blockquote><p>注意：</p><p>本图中是以 <code>2048</code> 位的 <code>RSA</code> 密钥为例的。但实际上，如果要获得与 <code>EDCSA/Ed25519</code> 的 <code>256</code> 位密钥相同的安全性，你需要使用 <code>3072</code> 位的 <code>RSA</code> 密钥。（即右下角的数字改成 <code>3072</code>）</p></blockquote><ol start="2"><li><p>你可以给私钥设置密码，增加一层安全性</p></li><li><p>点击 <code>Save public key</code> 保存公钥，文件名为 <code>id_rsa.pub</code></p></li><li><p>点击 <code>Save private key</code> 保存私钥，文件名为 <code>id_rsa</code> (PuTTY 私钥自带<code>.ppk</code>后缀)</p></li><li><p>最重要的，将上方红框内的内容，向下滚动全部复制出来并保存，文件名为 <code>authorized_keys</code>。（用 vscode 保存，默认会变成带<code>txt</code>后缀的文本文件，这没关系，之后上传 VPS 时我们会把后缀名去掉）</p><p><img src="https://pic.loll.cc/images/2021/09/21/202109211659148.png" alt="保存密钥"></p></li></ol><h4 id="2、将公钥上传至-VPS-的vpsadmin用户下"><a href="#2、将公钥上传至-VPS-的vpsadmin用户下" class="headerlink" title="2、将公钥上传至 VPS 的vpsadmin用户下"></a>2、将公钥上传至 VPS 的<code>vpsadmin</code>用户下</h4><ol><li><p>这一步如果是机子上装过<code>FinalShell</code>的同学，可以直接用自带的上传文件功能来上传，如果没有<code>FinalShell</code>，可以去<a href="http://www.hostbuf.com/t/988.html">官网</a>下载，或者就需要用到<code>WinSCP</code>了。</p></li><li><p>去<a href="https://winscp.net/eng/index.php">官网</a>下载并安装，会提示你导入 PuTTY 的设置，当然一键导入啦！</p><p><img src="https://pic.loll.cc/images/2021/09/21/202109211659270.png" alt="一键导入Session"></p></li><li><p>如果没有提示导入或者你已经提前安装好了，那按照下图进行配置即可</p><p><img src="https://pic.loll.cc/images/2021/09/21/202109211659303.png" alt="WinSCP登录设置"></p></li><li><p>WinSCP 左边的目录就是本地电脑上的文件夹和文件，请定位到密钥所在的文件夹</p></li><li><p>WinSCP 右边的目录则是 VPS 服务器上的文件夹和文件，默认就在 <code>/home/vpsadmin/</code> 文件夹，此时在请点击右下角 <code>X hidden</code> 来显示隐藏文件</p><p><img src="https://pic.loll.cc/images/2021/09/21/202109211659285.png" alt="本地和远程文件夹"></p></li><li><p>在右边（VPS 中）点击右键并新建文件夹，起名<code>.ssh</code> （注意有一个<code>.</code>）</p><p><img src="https://pic.loll.cc/images/2021/09/21/202109211659110.png" alt="在VPS中建立放置公钥的文件夹"></p></li><li><p>将【公钥】<code>authorized_keys</code>上传到<code>.ssh</code>文件夹内</p><p><img src="https://pic.loll.cc/images/2021/09/21/202109211659483.png" alt="上传authorized_keys"></p></li><li><p>在上传时，将【公钥】从 <code>authorized_keys.txt</code> 改名为 <code>authorized_keys</code>（去掉<code>.txt</code>这个后缀名）</p><p><img src="https://pic.loll.cc/images/2021/09/21/202109211658369.png" alt="确保没有任何后缀"></p></li><li><p>完整流程演示如下：</p><p><img src="https://pic.loll.cc/images/2021/09/21/202109211658460.gif" alt="WinSCP操作完整演示"></p></li></ol><h4 id="3、在-VPS-端设置-SSH-启用-RSA-密钥验证登录、同时禁用密码验证登录"><a href="#3、在-VPS-端设置-SSH-启用-RSA-密钥验证登录、同时禁用密码验证登录" class="headerlink" title="3、在 VPS 端设置 SSH 启用 RSA 密钥验证登录、同时禁用密码验证登录"></a>3、在 VPS 端设置 SSH 启用 RSA 密钥验证登录、同时禁用密码验证登录</h4><ol><li><p>SSH 远程连接到 VPS 上（PuTTY）</p></li><li><p>修改 <code>authorized_keys</code> 文件权限为 <code>600</code> （仅所有者可读可写）</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">chmod 600 ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure></li><li><p>修改 SSH 配置。这个我们已经用了很多次，但现在我们已经从无所不能的<code>root</code>变成了普通用户<code>vpsadmin</code>，此时的我们是没有权限直接编辑 SSH 配置的。这时候就需要使用<code>sudo</code>命令了：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo nano /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure></li><li><p>找到(<code>ctrl+w</code>) <code>PasswordAuthentication</code> 改成 <code>no</code></p></li><li><p>找到(<code>ctrl+w</code>) <code>PubkeyAuthentication</code> 改成 <code>yes</code>，然后保存(<code>ctrl+o</code>)退出(<code>ctrl+x</code>)</p></li><li><p>重启 SSH 服务。（啰嗦君：别忘了现在需要使用<code>sudo</code>来获得权限）</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo systemctl restart ssh</span><br></pre></td></tr></table></figure></li><li><p>完整流程如下:</p><p><img src="https://pic.loll.cc/images/2021/09/21/202109211658280.gif" alt="SSH开启密钥验证并禁用密码验证"></p></li><li><p>VPS 端已经设置好了公钥，现在要给 PuTTY 指定私钥位置供登录时使用（啰嗦君：别忘了保存 Session）</p><p><img src="https://pic.loll.cc/images/2021/09/21/202109211658131.png" alt="PuTTY指定私钥位置"></p></li><li><p>至此，【密钥登录】已成功开启、【密码验证】已成功关闭、并且还给 PuTTY 保存了默认的登录用户名和私钥。未来使用 PuTTY 登录时，载入<code>VPS-SERVER</code>配置后，点击<code>Open</code>就可以一键登录了。</p><p>如果你给私钥设置了密码保护，登录时当然还需要输入这个密码才能使用密钥，如下图：</p><img src="https://pic.loll.cc/images/2021/09/21/202109211658730.png" alt="输入私钥密码" style="zoom:67%;" /></li><li><p>别忘了给<code>WinSCP</code>也做对应的密钥设置，否则之后想要传输文件时就无法登录了：</p><img src="https://pic.loll.cc/images/2021/09/21/202109211657519.png" alt="WinSCP指定私钥位置"  /></li></ol><blockquote><p>注意</p><p>任何需要借助 SSH 进行登录的软件都需要密钥验证了，软件过多，无法逐一展示，请根据你的需要自行设置好哦</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPS </tag>
            
            <tag> 宝塔 </tag>
            
            <tag> Ping </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> 服务器安全 </tag>
            
            <tag> fail2ban </tag>
            
            <tag> ufw </tag>
            
            <tag> 防火墙 </tag>
            
            <tag> 灰黑产 </tag>
            
            <tag> 挖矿 </tag>
            
            <tag> 暴力破解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【如何优雅地写博客】利用h5ai自建一个视频床！</title>
      <link href="/archives/h5ai-yes/"/>
      <url>/archives/h5ai-yes/</url>
      
        <content type="html"><![CDATA[<p><strong>结合视频食用更佳</strong></p><div style="position: relative; padding: 30% 45%;"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"src="//player.bilibili.com/player.html?aid=250543239&bvid=BV1Xv411w7zq&cid=411436024&page=6" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" ></iframe></div><p><strong>Halo完整搭建视频：</strong></p><div style="position: relative; padding: 30% 45%;"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"src="//player.bilibili.com/player.html?aid=502013398&bvid=BV1JN411Q7Na&cid=306862255&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" ></iframe></div><h2 id="视频测试环境"><a href="#视频测试环境" class="headerlink" title="视频测试环境"></a>视频测试环境</h2><ul><li>Ubuntu20.04</li><li>宝塔面板7.7.0</li><li>Nginx1.18.0</li><li>MySQL5.6.50</li><li>PHP7.4</li><li>Docker20.10.8</li><li>Docker Compose1.29.2</li></ul><h2 id="Markdown用法"><a href="#Markdown用法" class="headerlink" title="Markdown用法"></a>Markdown用法</h2><p>具体请见：<a href="https://halo.run/archives/use-markdown">https://halo.run/archives/use-markdown</a></p><h3 id="自适应代码"><a href="#自适应代码" class="headerlink" title="自适应代码"></a>自适应代码</h3><h4 id="b站通用代码"><a href="#b站通用代码" class="headerlink" title="b站通用代码"></a>b站通用代码</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;position: relative; padding: 30% 45%;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">style</span>=<span class="string">&quot;position: absolute; width: 100%; height: 100%; left: 0; top: 0;&quot;</span><span class="attr">src</span>=<span class="string">&quot;//player.bilibili.com/player.html?aid=632650247&amp;bvid=BV1bb4y1m73h&amp;cid=398488643&amp;page=1&quot;</span> <span class="attr">scrolling</span>=<span class="string">&quot;no&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;no&quot;</span> <span class="attr">framespacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">allowfullscreen</span>=<span class="string">&quot;true&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="自定义视频代码"><a href="#自定义视频代码" class="headerlink" title="自定义视频代码"></a>自定义视频代码</h4><p>不自动播放：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;position: relative; padding: 30% 45%;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">style</span>=<span class="string">&quot;position: absolute; width: 100%; height: 100%; left: 0; top: 0;&quot;</span> <span class="attr">controls</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;https://files.guguge.ga/video/Water%20Rocket%20-%20Data%20Visualizer%20Demo%20%281%29.mp4&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/mp4&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>自动播放：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;position: relative; padding: 30% 45%;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">style</span>=<span class="string">&quot;position: absolute; width: 100%; height: 100%; left: 0; top: 0;&quot;</span> <span class="attr">controls</span> <span class="attr">autoplay</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;https://files.guguge.ga/video/Water%20Rocket%20-%20Data%20Visualizer%20Demo%20%281%29.mp4&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/mp4&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>参考：<a href="https://www.coder.work/article/302311">html - 如何在iframe中禁用本地视频的自动播放</a></p><h3 id="网易云音乐"><a href="#网易云音乐" class="headerlink" title="网易云音乐"></a>网易云音乐</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">frameborder</span>=<span class="string">&quot;no&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">marginwidth</span>=<span class="string">&quot;0&quot;</span> <span class="attr">marginheight</span>=<span class="string">&quot;0&quot;</span> <span class="attr">width</span>=<span class="string">330</span> <span class="attr">height</span>=<span class="string">86</span> <span class="attr">src</span>=<span class="string">&quot;//music.163.com/outchain/player?type=2&amp;id=32507038&amp;auto=0&amp;height=66&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>如果设置<code>auto=1</code>，则会自动播放</p></blockquote><h3 id="源码下载："><a href="#源码下载：" class="headerlink" title="源码下载："></a>源码下载：</h3><p><a href="https://release.larsjung.de/h5ai/h5ai-0.30.0.zip">https://release.larsjung.de/h5ai/h5ai-0.30.0.zip</a></p><h3 id="伪静态"><a href="#伪静态" class="headerlink" title="伪静态"></a>伪静态</h3><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">index</span> index.html index.php /_h5ai/public/index.php;</span><br></pre></td></tr></table></figure><h3 id="配置优化"><a href="#配置优化" class="headerlink" title="配置优化"></a>配置优化</h3><p>参考链接：<a href="https://waterbear.pw/1973.html">https://waterbear.pw/1973.html</a></p><p>h5ai 的配置文件为<code>_h5ai/private/conf/options.json</code>，修改它对 h5ai 的功能进行增减。</p><h4 id="语言设置"><a href="#语言设置" class="headerlink" title="语言设置"></a>语言设置</h4><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;l10n&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;enabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;lang&quot;</span><span class="punctuation">:</span> <span class="string">&quot;en&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;useBrowserLang&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure><p>enabled：是否允许更改界面语言</p><p>lang：默认界面语言，en 为英文，zh-cn 为中文简体，zh-tw 为中文繁体。</p><p>useBrowserLang：是否根据浏览器的语言来自动调整界面语言。</p><h4 id="显示设置"><a href="#显示设置" class="headerlink" title="显示设置"></a>显示设置</h4><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;info&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">     <span class="attr">&quot;enabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">     <span class="attr">&quot;show&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">     <span class="attr">&quot;qrcode&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">     <span class="attr">&quot;qrFill&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#999&quot;</span><span class="punctuation">,</span></span><br><span class="line">     <span class="attr">&quot;qrBack&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#fff&quot;</span></span><br><span class="line"> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure><p>enabled：是否显示右侧边栏（详情栏）。</p><p>show：是否一直显示右侧边栏。</p><p>qrcode：是否在右侧边栏生成下载链接的二维码以方便移动端下载。</p><h4 id="字体设置-Google字体换镜像源"><a href="#字体设置-Google字体换镜像源" class="headerlink" title="字体设置(Google字体换镜像源)"></a>字体设置(Google字体换镜像源)</h4><p>将 fonts.googleapis.com 更换为国内的镜像网站。如中科大。</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;resources&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">     <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">     <span class="attr">&quot;styles&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">         <span class="string">&quot;//fonts.lug.ustc.edu.cn/css?family=Ubuntu:300,400,700%7CUbuntu+Mono:400,700&quot;</span></span><br><span class="line">     <span class="punctuation">]</span></span><br><span class="line"> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure><h4 id="下载设置"><a href="#下载设置" class="headerlink" title="下载设置"></a>下载设置</h4><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;download&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;enabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;php-tar&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;packageName&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;alwaysVisible&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;select&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;enabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;clickndrag&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;checkboxes&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure><p><strong>选择的设置</strong></p><p>enabled：是否允许文件选择，如果禁止文件选择，那么文件就无法下载。</p><p>clickndrag：是否允许左键拖动来进行文件多选。</p><p>checkboxes：当鼠标悬浮在文件名上时是否显示选择框。</p><p><strong>下载的设置</strong></p><p>enabled：是否允许下载文件。</p><p>type：选择压缩方式。</p><p>php-tar：使用 php 内置功能来下载文件，多线程，可以同时下载多个文件。</p><p>shell-tar：使用外部 tar 程序来下载文件，单线程，同一时间只能下载一个文件。</p><p>shell-zip：使用外部 zip 程序来下载文件，单线程，同一时间只能下载一个文件。</p><p>packageName：默认压缩包名称，为 null 时压缩包名称当前文件夹的名称,</p><p>alwaysVisible：下载按钮是否动态显示（只能选中文件后显示）。</p><h3 id="页眉页脚设置"><a href="#页眉页脚设置" class="headerlink" title="页眉页脚设置"></a>页眉页脚设置</h3><p>当分享的文件夹太多时，为了方便区分，可以在文件夹下创建指定名称的文件来提供简介。</p><p>这些信息显示在页面文件夹列表的上面或下面。</p><p><strong>页眉</strong></p><p>在文件夹下新建 _h5ai.header.html 或 _h5ai.header.md，以提供此文件夹简介。</p><p>在浏览器中刷新此文件夹的页面即可。</p><blockquote><p>_h5ai.header 的内容被添加在 <div></div> 里。所以页面里不能包含 <html><head><body> 等标签。</p></blockquote><p>_h5ai.header.html：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center&quot;</span>&gt;</span>This is a header message<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center&quot;</span>&gt;</span></span><br><span class="line">The header is read from file <span class="tag">&lt;<span class="name">code</span>&gt;</span>_h5ai.header.html<span class="tag">&lt;/<span class="name">code</span>&gt;</span>. The content of this file will be enclosed by div tags.</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>页脚</strong></p><p>在文件夹下新建 _h5ai.footer.html 或 _h5ai.footer.md，以提供此文件夹简介。</p><p>在浏览器中刷新此文件夹的页面即可。</p><blockquote><p>_h5ai.footer 的内容被添加在 <div></div> 里。所以页面里不能包含 <html><head><body> 等标签。</p></blockquote><p>_h5ai.footer.html：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center&quot;</span>&gt;</span></span><br><span class="line">The footer is read from file _h5ai.footer.html.The content of this file will be enclosed by div tags.</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>Note<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>: all files and directories of name _h5ai* are hidden from the index by default.</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>更多功能，可以访问<a href="https://waterbear.pw/1973.html">https://waterbear.pw/1973.html</a> 参考</p><h3 id="filebrowser安装"><a href="#filebrowser安装" class="headerlink" title="filebrowser安装"></a>filebrowser安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d -v /www/wwwroot/files.guguge.ga:/srv -v /root/filebrowser/filebrowserconfig.json:/etc/config.json -v /root/filebrowser/database.db:/etc/database.db --name myfile -p 8002:80 filebrowser/filebrowser</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网站搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Halo </tag>
            
            <tag> 宝塔面板 </tag>
            
            <tag> Docker </tag>
            
            <tag> h5ai </tag>
            
            <tag> MarkDown </tag>
            
            <tag> filebrowser </tag>
            
            <tag> bilibili </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【如何优雅地写博客】自建一个永不裂开的图床！</title>
      <link href="/archives/chevereto-picgo-typora/"/>
      <url>/archives/chevereto-picgo-typora/</url>
      
        <content type="html"><![CDATA[<p>结合视频食用更佳</p><p>【如何优雅地写博客】自建一个永不裂开的图床！</p><div style="position: relative; padding: 30% 45%;"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"src="//player.bilibili.com/player.html?aid=975529119&bvid=BV1K44y1b74r&cid=411117125&page=4" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" ></iframe></div><p>Halo完整搭建视频：</p><div style="position: relative; padding: 30% 45%;"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"src="//player.bilibili.com/player.html?aid=502013398&bvid=BV1JN411Q7Na&cid=306862255&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" ></iframe></div><h2 id="视频测试环境"><a href="#视频测试环境" class="headerlink" title="视频测试环境"></a>视频测试环境</h2><ul><li>Ubuntu20.04</li><li>宝塔面板7.7.0</li><li>Nginx1.18.0</li><li>MySQL5.6.50</li><li>PHP7.4</li><li>Docker20.10.8</li><li>Docker Compose1.29.2</li></ul><h2 id="Markdown用法"><a href="#Markdown用法" class="headerlink" title="Markdown用法"></a>Markdown用法</h2><p>具体请见：<a href="https://halo.run/archives/use-markdown">https://halo.run/archives/use-markdown</a></p><h2 id="图床"><a href="#图床" class="headerlink" title="图床"></a>图床</h2><p>Typora官网： <a href="https://typora.io/">https://typora.io/</a></p><h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><p>下载地址：<a href="https://github.com/chevereto/Chevereto-Free/releases">https://github.com/chevereto/Chevereto-Free/releases</a></p><p>源码地址：<a href="https://github.com/chevereto/Chevereto-Free/archive/refs/tags/1.4.1.tar.gz">https://github.com/chevereto/Chevereto-Free/archive/refs/tags/1.4.1.tar.gz</a></p><h3 id="伪静态"><a href="#伪静态" class="headerlink" title="伪静态"></a>伪静态</h3>  <figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">  <span class="section">location</span> / &#123;</span><br><span class="line"><span class="attribute">index</span> index.php;</span><br><span class="line"><span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.php?<span class="variable">$query_string</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="PicGo配置"><a href="#PicGo配置" class="headerlink" title="PicGo配置"></a>PicGo配置</h3><p>地址：<code>https://你的域名/api/1/upload</code></p><p>server端口：<code>36677</code></p><h3 id="图片压缩工具"><a href="#图片压缩工具" class="headerlink" title="图片压缩工具"></a>图片压缩工具</h3><p><a href="https://u.tools/">https://u.tools/</a></p>]]></content>
      
      
      <categories>
          
          <category> 网站搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Halo </tag>
            
            <tag> MarkDown </tag>
            
            <tag> Typora </tag>
            
            <tag> Chevereto </tag>
            
            <tag> PicGo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【如何优雅地写博客】用好Markdown语法！</title>
      <link href="/archives/markdown-yes/"/>
      <url>/archives/markdown-yes/</url>
      
        <content type="html"><![CDATA[<p>结合视频观看</p><p>【如何优雅地写博客】用好Markdown语法！</p><div style="position: relative; padding: 30% 45%;"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"src="//player.bilibili.com/player.html?aid=848049300&bvid=BV1wL4y187FU&cid=410984661&page=9" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" ></iframe></div><p>Halo完整搭建视频：</p><div style="position: relative; padding: 30% 45%;"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"src="//player.bilibili.com/player.html?aid=502013398&bvid=BV1JN411Q7Na&cid=306862255&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" ></iframe></div><h2 id="视频测试环境"><a href="#视频测试环境" class="headerlink" title="视频测试环境"></a>视频测试环境</h2><ul><li>Ubuntu20.04</li><li>宝塔面板7.7.0</li><li>Nginx1.18.0</li><li>MySQL5.6.50</li><li>PHP7.4</li><li>Docker20.10.8</li><li>Docker Compose1.29.2</li></ul><h2 id="Markdown用法"><a href="#Markdown用法" class="headerlink" title="Markdown用法"></a>Markdown用法</h2><p>具体请见：<a href="https://editor.mdnice.com/">https://editor.mdnice.com/</a></p><h2 id="宝塔安装及去除登陆框"><a href="#宝塔安装及去除登陆框" class="headerlink" title="宝塔安装及去除登陆框"></a>宝塔安装及去除登陆框</h2><h3 id="安装宝塔："><a href="#安装宝塔：" class="headerlink" title="安装宝塔："></a>安装宝塔：</h3><p>官网：bt.cn</p><h3 id="去除登陆框"><a href="#去除登陆框" class="headerlink" title="去除登陆框"></a>去除登陆框</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">&quot;s|if (bind_user == &#x27;True&#x27;) &#123;|if (bind_user == &#x27;REMOVED&#x27;) &#123;|g&quot;</span> /www/server/panel/BTPanel/static/js/index.js</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /www/server/panel/data/bind.pl</span><br></pre></td></tr></table></figure><p>更多有用的脚本可以看这里：<a href="https://breakthewa11.com/archives/useful-script.html">https://breakthewa11.com/archives/useful-script.html</a></p><h2 id="Ubuntu开启BBR加速"><a href="#Ubuntu开启BBR加速" class="headerlink" title="Ubuntu开启BBR加速"></a>Ubuntu开启BBR加速</h2><p>修改系统变量：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> net.core.default_qdisc=fq &gt;&gt; /etc/sysctl.conf</span><br><span class="line"><span class="built_in">echo</span> net.ipv4.tcp_congestion_control=bbr &gt;&gt; /etc/sysctl.conf</span><br></pre></td></tr></table></figure><p>保存生效：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sysctl -p</span><br></pre></td></tr></table></figure><p>执行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sysctl net.ipv4.tcp_available_congestion_control</span><br></pre></td></tr></table></figure><p>如果结果是这样：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sysctl net.ipv4.tcp_available_congestion_control</span><br><span class="line">net.ipv4.tcp_available_congestion_control = bbr cubic reno</span><br></pre></td></tr></table></figure><p>就开启了。 执行<code>lsmod | grep bbr</code>，以检测 BBR 是否开启。</p><p>来源：<a href="https://www.mf8.biz/ubuntu-20-04-bbr/">https://www.mf8.biz/ubuntu-20-04-bbr/</a></p><h2 id="Docker相关"><a href="#Docker相关" class="headerlink" title="Docker相关"></a>Docker相关</h2><h2 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h2><p>详细的可以看这里：<a href="https://breakthewa11.com/archives/docker-install-minimalist.html">https://breakthewa11.com/archives/docker-install-minimalist.html</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 不要无脑全部复制噢，一条条理解了意思，再一条一条输入</span></span><br><span class="line"></span><br><span class="line">apt-get update &amp;&amp; apt-get install -y wget vim</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">wget -qO- get.docker.com | bash</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker version</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">systemctl start docker</span><br><span class="line"></span><br><span class="line">systemctl status docker</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">systemctl <span class="built_in">enable</span> docker</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Docker-Compose相关"><a href="#Docker-Compose相关" class="headerlink" title="Docker Compose相关"></a>Docker Compose相关</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/1.29.2/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sudo <span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker-compose --version</span><br></pre></td></tr></table></figure><h2 id="宝塔反向代理"><a href="#宝塔反向代理" class="headerlink" title="宝塔反向代理"></a>宝塔反向代理</h2>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">    proxy_pass http://127.0.0.1:8090/;</span><br><span class="line">    rewrite ^/(.*)$ /$1 break;</span><br><span class="line">    proxy_redirect off;</span><br><span class="line">    proxy_set_header Host $host;</span><br><span class="line">    proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">    proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">    proxy_set_header Upgrade-Insecure-Requests 1;</span><br><span class="line">    proxy_set_header X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网站搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Halo </tag>
            
            <tag> 宝塔面板 </tag>
            
            <tag> DockerCompose </tag>
            
            <tag> Docker </tag>
            
            <tag> 腾讯云香港轻量服务器 </tag>
            
            <tag> MarkDown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩的Docker项目】10分钟搭建你专属的下载神器——qbittorrent</title>
      <link href="/archives/docker-install-qbittorrent/"/>
      <url>/archives/docker-install-qbittorrent/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>前阵子，入手了一号双鸡两台3o，无限流量，1T的硬盘空间，所以想着折腾一下一直听说，但是又似乎很神奇的PT下载（正好租户给了我几个邀请码）。</p><p>PT 即 Private Tracker ，一种小范围、附带流量统计的下载。根据上传流量不同，用户拥有不同身份，对应不同权限甚至不同下载速度。为了提高上传流量，一般会需要一台能够持续不断下载上传的机子（一般会用NAS），VPS24小时开机，加上3o又是不限流量，还有1T的硬盘空间，是非常理想的PT鸡鸡。</p><p>今天就来安装一个大名鼎鼎的开源下载神器——qBittorrent， 照例还是采用Docker安装的方式， 实现 24 小时下载与上传。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li>服务器：VPS（Debian操作系统）或者NAS一台（威联通、群晖都可以，能装Docker就行），咕咕这边以<a href="https://loll.cc/tx">腾讯云轻量</a>为例子，如果你下载很频繁，而且是大文件，最好是用无限流量的机子，而且最好选大盘鸡。这边推荐<a href="https://blog.laoda.de/archives/vps-buyvm/">BuyVM</a></li><li>系统：Debian 11 （<a href="https://blog.laoda.de/archives/useful-script/">DD 脚本</a> 非必需 DD，用原来的系统也 OK，之后教程都是用 Debian 或者 Ubuntu 搭建～）</li><li>安装好 Docker、Docker-compose（<a href="https://blog.laoda.de/archives/hello-docker/">相关脚本</a>）</li><li>【非必需但建议】域名一枚，并做好解析到服务器上（<a href="https://blog.laoda.de/archives/namesilo/">域名购买、域名解析</a> <a href="https://www.bilibili.com/video/BV1Sy4y1k7kZ/">视频教程</a>）</li><li>【非必需】提前安装好宝塔面板海外版本 aapanel，并安装好 Nginx（<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">安装地址</a>）</li><li>【非必需本教程选用】安装好 Nginx Proxy Manager（<a href="https://blog.laoda.de/archives/nginxproxymanager/">相关教程</a>）</li></ul><blockquote><p>服务器要求：硬盘越大越好，流量越多越好。</p></blockquote><h2 id="视频教程"><a href="#视频教程" class="headerlink" title="视频教程"></a>视频教程</h2><p> YouTube：<a href="https://youtu.be/CUvJeWVNI7s">https://youtu.be/CUvJeWVNI7s</a></p><p> B站：<a href="https://www.bilibili.com/video/BV19p4y1g7hF/">https://www.bilibili.com/video/BV19p4y1g7hF/</a></p><h2 id="开始部署"><a href="#开始部署" class="headerlink" title="开始部署"></a>开始部署</h2><h3 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h3><img src="https://pic.loll.cc/images/2021/09/08/20210908161006.png" alt="b2ee2d5db779494d8fc64df7cb2b3a2a" style="zoom:50%;" /><h4 id="更新、安装必备软件"><a href="#更新、安装必备软件" class="headerlink" title="更新、安装必备软件"></a>更新、安装必备软件</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get update &amp;&amp; apt-get install -y wget vim</span><br></pre></td></tr></table></figure><h4 id="安装脚本"><a href="#安装脚本" class="headerlink" title="安装脚本"></a>安装脚本</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -qO- get.docker.com | bash</span><br></pre></td></tr></table></figure><h4 id="查看-Docker-安装版本等信息"><a href="#查看-Docker-安装版本等信息" class="headerlink" title="查看 Docker 安装版本等信息"></a>查看 Docker 安装版本等信息</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker version</span><br></pre></td></tr></table></figure><h4 id="启动-Docker-服务"><a href="#启动-Docker-服务" class="headerlink" title="启动 Docker 服务"></a>启动 Docker 服务</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure><h4 id="查看-Docker-运行状态"><a href="#查看-Docker-运行状态" class="headerlink" title="查看 Docker 运行状态"></a>查看 Docker 运行状态</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl status docker</span><br></pre></td></tr></table></figure><h4 id="将-Docker-服务加入开机自启动"><a href="#将-Docker-服务加入开机自启动" class="headerlink" title="将 Docker 服务加入开机自启动"></a>将 Docker 服务加入开机自启动</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure><h3 id="安装Docker-compose"><a href="#安装Docker-compose" class="headerlink" title="安装Docker compose"></a>安装Docker compose</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/1.29.2/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><p>赋予执行权限，</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><p>查看docker-compose 版本，</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose --version</span><br></pre></td></tr></table></figure><h3 id="安装qBittorrent"><a href="#安装qBittorrent" class="headerlink" title="安装qBittorrent"></a>安装qBittorrent</h3><p>本文安装基于Debian11，对于其他环境，Docker的命令也应该是通用的。</p><p>DockerHub 上附带 qBittorrent Web UI的 qBittorent 客户端镜像为：</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">linuxserver/qbittorrent</span><br></pre></td></tr></table></figure><p>1、拉取镜像</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull linuxserver/qbittorrent</span><br></pre></td></tr></table></figure><p>2、创建对应目录并编写 Docker-Compose 文件</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"><span class="built_in">mkdir</span> /root/data/docker_data/qBittorrent <span class="comment">#创建qbitorrent数据文件夹</span></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/qBittorrent</span><br><span class="line"><span class="built_in">mkdir</span> config downloads <span class="comment">#创建配置文件目录与下载目录</span></span><br><span class="line">nano docker-compose.yml <span class="comment">#创建并编辑文件</span></span><br></pre></td></tr></table></figure><p>3、复制如下内容并按需修改：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&quot;2&quot;</span></span><br><span class="line">services:</span><br><span class="line">  qbittorrent:</span><br><span class="line">    image: linuxserver/qbittorrent</span><br><span class="line">    container_name: qbittorrent</span><br><span class="line">    environment:</span><br><span class="line">      - PUID=1000</span><br><span class="line">      - PGID=1000</span><br><span class="line">      - TZ=Asia/Shanghai <span class="comment"># 你的时区</span></span><br><span class="line">      - UMASK_SET=022</span><br><span class="line">      - WEBUI_PORT=8081 <span class="comment"># 将此处修改成你欲使用的 WEB 管理平台端口 </span></span><br><span class="line">    volumes:</span><br><span class="line">      - ./config:/config <span class="comment"># 绝对路径请修改为自己的config文件夹</span></span><br><span class="line">      - ./downloads:/downloads <span class="comment"># 绝对路径请修改为自己的downloads文件夹</span></span><br><span class="line">    ports:</span><br><span class="line">      <span class="comment"># 要使用的映射下载端口与内部下载端口，可保持默认，安装完成后在管理页面仍然可以改成其他端口。</span></span><br><span class="line">      - 6881:6881 </span><br><span class="line">      - 6881:6881/udp</span><br><span class="line">      <span class="comment"># 此处WEB UI 目标端口与内部端口务必保证相同，见问题1</span></span><br><span class="line">      - 8081:8081</span><br><span class="line">    restart: unless-stopped</span><br></pre></td></tr></table></figure><p>4、执行docker-compose</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d <span class="comment"># docker-compose</span></span><br><span class="line"><span class="comment"># 执行后，如果得法，访问 ip:web-ui-port 即可进入管理页面。</span></span><br><span class="line"><span class="comment"># 默认用户名密码admin/adminadmin</span></span><br></pre></td></tr></table></figure><p><strong>注意</strong>：腾讯云、阿里云等用户记得在后台防火墙打开<code>8081</code>端口</p><h2 id="使用qBittorrent"><a href="#使用qBittorrent" class="headerlink" title="使用qBittorrent"></a>使用qBittorrent</h2><p>访问<code>ip:port</code>，进入 WebUI 管理界面。</p><p>默认账号<code>admin</code>,默认密码<code>adminadmin</code></p><img src="https://pic.loll.cc/images/2021/09/08/20210908160941.png" alt="811fc81e015e418db64d8b9388775f69" style="zoom:33%;" /><img src="https://pic.loll.cc/images/2021/09/08/20210908160926.png" alt="228a3069cca9407aa59d98e3ab3cb80a" style="zoom:33%;" /><h3 id="修改页面为中文界面"><a href="#修改页面为中文界面" class="headerlink" title="修改页面为中文界面"></a>修改页面为中文界面</h3><p>打开如下面板：</p><img src="https://pic.loll.cc/images/2021/09/08/20210908155049.png" alt="520c10346dcc41b396e0ed92b133a46a" style="zoom:50%;" /><p><code>Tool-&gt;Options-&gt;WebUI</code> 将<code>Language</code>修改为简体中文，并点击最下方的<code>Save</code>即可。</p><h3 id="修改下载与上传使用的端口"><a href="#修改下载与上传使用的端口" class="headerlink" title="修改下载与上传使用的端口"></a>修改下载与上传使用的端口</h3><p>运营商可能会对常用的 BT&#x2F;PT 端口(6881,688x)进行限速，大多数 PT 站会拒绝这些端口的请求。</p><p>修改端口方法如下：</p><img src="https://pic.loll.cc/images/2021/09/08/20210908155144.png" alt="2dd4602b5f054302bdf4119479eed65d" style="zoom:50%;" /><p><code>工具</code>-&gt;<code>选项</code>-&gt;<code>连接</code>将监听端口修改为 PT 站接受的端口。</p><h3 id="可能遇到的问题"><a href="#可能遇到的问题" class="headerlink" title="可能遇到的问题"></a>可能遇到的问题</h3><h4 id="网页管理平台白屏无内容"><a href="#网页管理平台白屏无内容" class="headerlink" title="网页管理平台白屏无内容"></a>网页管理平台白屏无内容</h4><p>检查 <code>docekr-compose.yml</code> 文件中的 <code>WEBUI_PORT</code> 与 端口映射是否都为一个端口。如果端口映射中内部端口与外部端口不同，可能会导致白屏。</p><h4 id="如何访问下载的文件"><a href="#如何访问下载的文件" class="headerlink" title="如何访问下载的文件"></a>如何访问下载的文件</h4><p>可以通过FTP、Samba或者基于 Web 的目录程序访问对应目录。我推荐使用同样基于 Docker 的FileBrowser进行在线文件管理。</p><img src="https://pic.loll.cc/images/2021/09/08/20210908160847.png" alt="3378a0fbd23a496abc1b0b6024dec139" style="zoom:33%;" /><img src="https://pic.loll.cc/images/2021/09/08/20210908160902.png" alt="f1d7df9554e84b3ea7d9ce69a5f31b75" style="zoom:33%;" /><p>具体的安装方法可以看这篇：<a href="https://blog.laoda.de/archives/aria2-rclone-filebrowser">手把手教你搭建私人离线下载神器Aria2，搭配Rclone+Filebrowser自动上传至网盘</a></p><h2 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h2><h3 id="RSS自动下载设置（PT推荐）"><a href="#RSS自动下载设置（PT推荐）" class="headerlink" title="RSS自动下载设置（PT推荐）"></a>RSS自动下载设置（PT推荐）</h3><p>打开<code>获取RSS订阅</code>与<code>启用RSS Torrent自动下载</code></p><img src="https://pic.loll.cc/images/2021/09/08/20210908155611.png" alt="f93ce303dbe3451081e435c82182ab1b" style="zoom:50%;" /><p>添加两条下载规则，分别是<code>no</code>和<code>auto</code>，其中<code>no</code>的规则<code>添加后不开始下载</code>选择<code>总是</code></p><img src="https://pic.loll.cc/images/2021/09/08/20210908155624.png" alt="18d69c9a943d41be9dc08e9a73f8b798" style="zoom:50%;" /><p>其中<code>auto</code>的规则<code>添加后不开始下载</code>选择<code>实用全局设定</code></p><img src="https://pic.loll.cc/images/2021/09/08/20210908155633.png" alt="4c89d853c98a4b30813984e4fcf149b3" style="zoom:50%;" /><p>然后你就可以去PT站，把RSS地址复制过来，先勾选no不勾选auto，此时你会看到自动下载了10个种子任务，然后你把这10个种子任务删除掉，再次打开这边的规则，勾选auto，把no的勾勾去掉，点击保存，之后，只要PT站有新的种子上传，你这边机器就能自动下载了（一般新种都是免费的，可以刷上传量）</p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><img src="https://pic.loll.cc/images/2021/09/08/20210908160616.png" alt="d1046fadbee6408d8cbd5d8ec269c76f" style="zoom: 33%;" /><p>勾选上面三项可以优化磁盘读写性能。缓存到期时间为磁盘缓存除以最大下载速度，到时间后数据就从内存写入磁盘。</p><img src="https://pic.loll.cc/images/2021/09/08/20210908160705.png" alt="image-20210908160705523" style="zoom:33%;" /><p>现在操作系统的块大小都是4KB，这是最小的储存单位。举个最简单的例子，你新建一个文件什么都不写都会占用4KB空间。原来默认是上限是500KB，下限是10KB，强迫症让我把发送缓存都设置为4的整数，或许对磁盘性能有优化，设置太高会浪费内存。官方文档说加大增长系数可以加快上传速度，BT用户默认50%够用，而PT用户为了抢上传，可以设置成100甚至更高。</p><p>由于本咕也刚刚使用，很多设置也在摸索中，如果大家有使用心得，欢迎在评论区一起交流！</p><p>关于更详细的设置可以参考：<a href="http://www.ptyqm.com/26966.html">http://www.ptyqm.com/26966.html</a></p><p>PT更详细的教程可以参考：<a href="https://www.shifeiti.com/blog/2022-12-22/">https://www.shifeiti.com/blog/2022-12-22/</a>  （不要再薅<a href="https://blog.laoda.de/archives/vps-hetzner/">Hetzner</a>啦）</p><h3 id="开启IPv6支持"><a href="#开启IPv6支持" class="headerlink" title="开启IPv6支持"></a>开启IPv6支持</h3><p>有些VPS是支持IPv6的，比如<a href="https://blog.laoda.de/archives/vps-buyvm/">BuyVM</a></p><p>然后有时候你下载速度太快，被站点标记了盒子，可以试着用IPv6来刷流，具体开启方法见这篇内容：</p><p><a href="https://blog.laoda.de/archives/docker-qbittorrent-ipv6/">【有用的小知识】Docker-qBittorrent 开启 IPv6 笔记</a></p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="https://blog.csdn.net/maxuearn/article/details/104562021">https://blog.csdn.net/maxuearn/article/details/104562021</a><br><a href="https://www.colorcc.net/qbittorrent%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BC%98%E5%8C%96%EF%BC%88%E8%B4%9F%E4%BC%98%E5%8C%96%EF%BC%89/">https://www.colorcc.net/qbittorrent%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BC%98%E5%8C%96%EF%BC%88%E8%B4%9F%E4%BC%98%E5%8C%96%EF%BC%89/</a><br><a href="https://blog.laoda.de/archives/vps-recommad">https://blog.laoda.de/archives/vps-recommad</a></p><h3 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h3><p><a href="https://blog.laoda.de/archives/aria2-rclone-filebrowser/">手把手教你搭建私人离线下载神器 Aria2，搭配 Rclone+Filebrowser 自动上传至网盘</a></p><p><a href="https://blog.laoda.de/archives/rclone-onedrive/">利用 rclone 自动上传 aria2 下载的文件到 onedrive 或者 googledrive</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker部署 </tag>
            
            <tag> PT </tag>
            
            <tag> qbittorrent </tag>
            
            <tag> BT </tag>
            
            <tag> 种子下载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩的Docker项目】10分钟搭建你专属的笔记本——功能更全的为知笔记</title>
      <link href="/archives/docker-install-wiz/"/>
      <url>/archives/docker-install-wiz/</url>
      
        <content type="html"><![CDATA[<p><img src="https://pic.loll.cc/images/2021/09/05/20210905091639.png" alt="为知笔记"></p><p>我们平时可能都或多或少会记一些东西，我尝试过很多软件，印象笔记广告越来越多，obsidian还在研究中，notion目前看来是最棒的，不过登陆需要科学的手段，本着折腾的心态，找到了一款为知笔记，可以部署在自己的服务器上，而且功能也很齐全，更为贴心的是，官网还给我们准备了Docker的镜像，可以让我们很简单的搭建包含有完整的为知笔记服务端以及所需的各种环境，所以我们今天就来玩玩～</p><h2 id="视频教程"><a href="#视频教程" class="headerlink" title="视频教程"></a>视频教程</h2><div style="position: relative; padding: 30% 45%;"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="//player.bilibili.com/player.html?aid=847836172&bvid=BV14L4y1h7DH&cid=403017850&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe></div><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li>腾讯香港轻量云服务器一台（最好是2G内存的）</li><li>宝塔面板</li><li>Docker</li><li>域名一个并做好解析</li></ul><h2 id="宝塔安装"><a href="#宝塔安装" class="headerlink" title="宝塔安装"></a>宝塔安装</h2><p>国内版本：<a href="https://www.bt.cn/bbs/thread-19376-1-1.html">https://www.bt.cn/bbs/thread-19376-1-1.html</a></p><p>消除注册登陆限制：<a href="https://breakthewa11.com/archives/useful-script.html">https://breakthewa11.com/archives/useful-script.html</a></p><p>国际版本（aapanel）：<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial</a></p><h2 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h2><p>参考这个：<a href="https://breakthewa11.com/archives/docker-install-minimalist.html">https://breakthewa11.com/archives/docker-install-minimalist.html</a></p><h2 id="正式部署"><a href="#正式部署" class="headerlink" title="正式部署"></a>正式部署</h2><figure class="highlight docker"><table><tr><td class="code"><pre><span class="line">docker <span class="keyword">run</span><span class="language-bash"> --name wiz --restart=always -it -d -v  ~/wizdata:/wiz/storage -v  /etc/localtime:/etc/localtime -p 8123:80 -p 9269:9269/udp  wiznote/wizserver</span></span><br></pre></td></tr></table></figure><h2 id="更新升级"><a href="#更新升级" class="headerlink" title="更新升级"></a>更新升级</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker stop wiz</span><br><span class="line">docker <span class="built_in">rm</span> wiz</span><br><span class="line">docker pull wiznote/wizserver:latest</span><br><span class="line">docker run --name wiz --restart=always -it -d -v  ~/wizdata:/wiz/storage -v  /etc/localtime:/etc/localtime -p 8123:80 -p 9269:9269/udp  wiznote/wizserver</span><br></pre></td></tr></table></figure><h2 id="卸载删除"><a href="#卸载删除" class="headerlink" title="卸载删除"></a>卸载删除</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker stop wiz</span><br><span class="line"></span><br><span class="line">docker <span class="built_in">rm</span> -f wiz</span><br></pre></td></tr></table></figure><p>注意上述删除本地的数据还是存在在<code>~/wizdata</code>的文件夹中，如果需要删除本地的数据，运行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">rm</span> -rf ~/wizdata</span><br></pre></td></tr></table></figure><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="https://www.wiz.cn/zh-cn/enterprise-private-cloud.html">https://www.wiz.cn/zh-cn/enterprise-private-cloud.html</a><br><a href="https://www.wiz.cn/zh-cn/docker">https://www.wiz.cn/zh-cn/docker</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker部署 </tag>
            
            <tag> 为知笔记 </tag>
            
            <tag> 笔记推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【好玩的Docker项目】搭建一个简洁的记事本——minimalist-web-notepad</title>
      <link href="/archives/docker-install-minimalist/"/>
      <url>/archives/docker-install-minimalist/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>搭建一个类似于notepad的纯文本笔记本，可以用来做记事本，也可以用来做临时记录的工具。</p><p>演示地址：<a href="https://notes.guguge.ga/">https://notes.guguge.ga</a></p><h2 id="视频教程"><a href="#视频教程" class="headerlink" title="视频教程"></a>视频教程</h2><div style="position: relative; padding: 30% 45%;"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="//player.bilibili.com/player.html?aid=632650247&bvid=BV1bb4y1m73h&cid=398488643&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe></div><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><ul><li><a href="https://loll.cc/tx">腾讯香港轻量云应用服务器1核1G（24元&#x2F;月款）</a></li><li>域名一枚并做好解析</li><li>Docker</li><li><a href="https://www.bt.cn/bbs/thread-19376-1-1.html">宝塔面板</a></li></ul><h2 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h2><h3 id="更新、安装必备软件"><a href="#更新、安装必备软件" class="headerlink" title="更新、安装必备软件"></a>更新、安装必备软件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get update &amp;&amp; apt-get install -y wget vim</span><br></pre></td></tr></table></figure><h3 id="安装脚本"><a href="#安装脚本" class="headerlink" title="安装脚本"></a>安装脚本</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -qO- get.docker.com | bash</span><br></pre></td></tr></table></figure><h4 id="查看-Docker-安装版本等信息"><a href="#查看-Docker-安装版本等信息" class="headerlink" title="查看 Docker 安装版本等信息"></a>查看 Docker 安装版本等信息</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker version</span><br></pre></td></tr></table></figure><h4 id="启动-Docker-服务"><a href="#启动-Docker-服务" class="headerlink" title="启动 Docker 服务"></a>启动 Docker 服务</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure><h4 id="查看-Docker-运行状态"><a href="#查看-Docker-运行状态" class="headerlink" title="查看 Docker 运行状态"></a>查看 Docker 运行状态</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl status docker</span><br></pre></td></tr></table></figure><h4 id="将-Docker-服务加入开机自启动"><a href="#将-Docker-服务加入开机自启动" class="headerlink" title="将 Docker 服务加入开机自启动"></a>将 Docker 服务加入开机自启动</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure><h2 id="安装宝塔"><a href="#安装宝塔" class="headerlink" title="安装宝塔"></a>安装宝塔</h2><p>访问官网：<a href="https://www.bt.cn/bbs/thread-19376-1-1.html">https://www.bt.cn/bbs/thread-19376-1-1.html</a></p><p>免登陆脚本，更多脚本可以看这里：<a href="https://breakthewa11.com/archives/useful-script.html">整理了一些常用的VPS服务器脚本，让你更好地玩鸡鸡！</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">&quot;s|if (bind_user == &#x27;True&#x27;) &#123;|if (bind_user == &#x27;REMOVED&#x27;) &#123;|g&quot;</span> /www/server/panel/BTPanel/static/js/index.js</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /www/server/panel/data/bind.pl</span><br></pre></td></tr></table></figure><h2 id="安装minimalist"><a href="#安装minimalist" class="headerlink" title="安装minimalist"></a>安装minimalist</h2><h3 id="安装程序"><a href="#安装程序" class="headerlink" title="安装程序"></a>安装程序</h3><p>项目地址：<a href="https://github.com/pereorga/minimalist-web-notepad/tree/docker">https://github.com/pereorga/minimalist-web-notepad/tree/docker</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/minimalist</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/minimalist</span><br></pre></td></tr></table></figure><p>进入文件夹(<code>/root/data/docker_data/minimalist</code> )，运行，</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://github.com/pereorga/minimalist-web-notepad/archive/refs/heads/docker.zip</span><br></pre></td></tr></table></figure><p>进入宝塔解压，</p><img src="https://pic.loll.cc/images/2021/08/28/20210828115733.png" alt="image-20210828115733467" style="zoom: 33%;" /><p>进入文件夹，</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> minimalist-web-notepad-docker/</span><br></pre></td></tr></table></figure><p>建立镜像，</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker build -t minimalist-web-notepad .</span><br></pre></td></tr></table></figure><img src="https://pic.loll.cc/images/2021/08/28/20210828120159.png" alt="image-20210828120159587" style="zoom:33%;" /><p>安装minimalist</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d -it --restart=always --name minimalist-web-notepad -v /root/data/docker_data/minimalist/minimalist-data:/var/www/html/_tmp -p 8006:80 minimalist-web-notepad</span><br></pre></td></tr></table></figure><img src="https://pic.loll.cc/images/2021/08/28/20210828120336.png" alt="image-20210828120336707" style="zoom:33%;" /><h3 id="配置SSL"><a href="#配置SSL" class="headerlink" title="配置SSL"></a>配置SSL</h3><img src="https://pic.loll.cc/images/2021/08/28/20210828120602.png" alt="image-20210828120601933" style="zoom:33%;" /><h3 id="配置反向代理"><a href="#配置反向代理" class="headerlink" title="配置反向代理"></a>配置反向代理</h3><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"> <span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:8006/;</span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://pic.loll.cc/images/2021/08/28/20210828120651.png" alt="image-20210828120651675" style="zoom:33%;" /><h3 id="成功访问"><a href="#成功访问" class="headerlink" title="成功访问"></a>成功访问</h3><img src="https://pic.loll.cc/images/2021/08/28/20210828120738.png" alt="image-20210828120738179" style="zoom: 25%;" /><p>好了，开始玩耍吧！</p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> minimalist </tag>
            
            <tag> notepad </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux玩腻了？来DD一个Windows系统玩玩！</title>
      <link href="/archives/dd-windows-server/"/>
      <url>/archives/dd-windows-server/</url>
      
        <content type="html"><![CDATA[<h2 id="2022年12月17日更新"><a href="#2022年12月17日更新" class="headerlink" title="2022年12月17日更新"></a><strong>2022年12月17日更新</strong></h2><p>腾讯云上海轻量应用服务器Debian 11 DD成windows，亲测成功！(全程花费50分钟左右)</p><p><img src="https://img.laoda.de/i/2022/12/17/ib58ft-2.webp" alt="image-20221217110709661"></p><p>1、控制面板安装 Debian 11</p><p>2、下载、安装、启动 mfslinux</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt update &amp;&amp; apt install grub2 grub-imageboot &amp;&amp; \</span><br><span class="line"><span class="built_in">mkdir</span> -p /boot/images/ &amp;&amp; \</span><br><span class="line">wget --no-check-certificate -O /boot/images/mfslinux.iso https://mfsbsd.vx.sk/files/iso/mfslinux/mfslinux-0.1.10-f9c75a4.iso &amp;&amp; \</span><br><span class="line">sed -i <span class="string">&#x27;s/GRUB_DEFAULT=0/GRUB_DEFAULT=2/g&#x27;</span> /etc/default/grub &amp;&amp; \</span><br><span class="line">update-grub2</span><br><span class="line"></span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><p>3、 SSH 连接</p><p>username: <code>root</code><br>password: <code>mfsroot</code></p><p>DD Windows</p><p>安装进度条 – 可选</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">opkg update &amp;&amp; opkg install pv</span><br></pre></td></tr></table></figure><p>DD 无进度</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O- <span class="string">&quot;https://dl.lamp.sh/vhd/zh-cn_win2022.xz&quot;</span> | xzcat | <span class="built_in">dd</span> of=/dev/vda</span><br></pre></td></tr></table></figure><p>DD 带进度</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O- <span class="string">&quot;https://dl.lamp.sh/vhd/zh-cn_win2022.xz&quot;</span> | xzcat | pv | <span class="built_in">dd</span> of=/dev/vda</span><br></pre></td></tr></table></figure><p>重启</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><p>RDP 连接<br>username: <code>Administrator</code><br>password: <code>Teddysun.com</code></p><p>记得及时修改密码和端口，教程参考下方之前写的内容</p><h2 id="2022年9月29日更新"><a href="#2022年9月29日更新" class="headerlink" title="2022年9月29日更新"></a><strong>2022年9月29日更新</strong></h2><p>貌似windows的DD命令已经失效 &#x3D; &#x3D;</p><p>昨天腾讯云上海轻量 DD失败，之后补充有效的方法。</p><h2 id="1207更新"><a href="#1207更新" class="headerlink" title="1207更新"></a>1207更新</h2><p>国内机器DD win7命令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#确保安装了所需软件:</span></span><br><span class="line"><span class="comment">#Debian/Ubuntu:</span></span><br><span class="line">apt update -y </span><br><span class="line">apt-get install -y xz-utils openssl gawk file</span><br><span class="line"></span><br><span class="line"><span class="comment">#RedHat/CentOS:</span></span><br><span class="line">yum update -y</span><br><span class="line">yum install -y xz openssl gawk file</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(wget --no-check-certificate -qO- <span class="string">&#x27;https://moeclub.org/attachment/LinuxShell/InstallNET.sh&#x27;</span>) -<span class="built_in">dd</span> <span class="string">&quot;http://d.nat.ee/win/lite/win7-ent-sp1-x64-cn/win7-ent-sp1-x64-cn.vhd.gz&quot;</span> --mirror <span class="string">&#x27;http://mirrors.ustc.edu.cn/debian/&#x27;</span></span><br></pre></td></tr></table></figure><p>实测腾讯云轻量应用服务器上海地区完美DD成功！</p><p>Linux DD 看这篇 ：<a href="https://blog.laoda.de/archives/dd">服务器自带的系统不喜欢？那就自己DD一个船新的系统吧！</a></p><h2 id="什么是DD？"><a href="#什么是DD？" class="headerlink" title="什么是DD？"></a>什么是DD？</h2><p>DD是Linux系统下的磁盘读写命令，可以将远端系统镜像，比如Windows系统镜像写入硬盘进行安装。一般来说，在国外服务器上安装Windows系统需要另付费而DD则可以免去环节。</p><h3 id="DD命令安装系统的优点"><a href="#DD命令安装系统的优点" class="headerlink" title="DD命令安装系统的优点"></a>DD命令安装系统的优点</h3><p><strong>1.可以绕开VPS服务器商家的系统安装渠道，自由为服务器切换其它系统。</strong></p><p><strong>2. 可以自己动手将原本的Linux系统，比如CentOS、Ubuntu、Debian，更换为Windows系统。</strong></p><p><strong>3. 如果对商家提供的Linux系统不满意， 同样可以自己动手更换为纯净的官方版本。</strong></p><p>Linux的DD方法之前已经写过了，可以参考这篇：<a href="https://breakthewa11.com/archives/dd.html">服务器自带的系统不喜欢？那就自己DD一个船新的系统吧！</a></p><h3 id="DD命令安装系统的缺点"><a href="#DD命令安装系统的缺点" class="headerlink" title="DD命令安装系统的缺点"></a>DD命令安装系统的缺点</h3><p>这种更换系统的操作，并不被商家认可，反而可能会违反ToS（服务条列），尤其是将Linux系统DD为Windows系统，如果被发现部分商家可能会采取停机等惩戒措施。（支持自定义挂载镜像的商家，一般都支持DD Linux系统，腾讯云我已经咨询过可以DD，不过由于Windows系统不像Linux是开源的，而是需要付授权费用的，所以正经使用，还是建议购买官方系统后台自带Windows系统的版本，我们这边只是测试使用）</p><h2 id="为什么需要DD"><a href="#为什么需要DD" class="headerlink" title="为什么需要DD"></a>为什么需要DD</h2><p>Linux玩腻了，想试试windows搭建服务器是什么样子的。</p><p>挂网课，挂QQ，各种挂机。</p><h2 id="如何DD"><a href="#如何DD" class="headerlink" title="如何DD"></a>如何DD</h2><div style="position: relative; padding: 30% 45%;"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="//player.bilibili.com/player.html?aid=250132594&bvid=BV1Bv411A7Uo&cid=398391723&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe></div><h3 id="一键DD-Windows脚本"><a href="#一键DD-Windows脚本" class="headerlink" title="一键DD  Windows脚本"></a>一键DD  Windows脚本</h3><p>目前网上流传最广的DD脚本，是Vicer（萌咖）的一键脚本，功能比较强大。</p><ul><li><p>Vicer 脚本优点：可以实现Windows系统全自动安装，无需VNC 模式或救援，安装完成后可以通过远程桌面直接登录系统。</p></li><li><p>适用架构：不能是Open VZ 架构，支持KVM&#x2F;XEN </p></li><li><p>适用系统：GRUB引导的CentOS&#x2F;Debian&#x2F;Ubuntu </p></li><li><p>硬盘空间：建议10G以上，最好15G以上</p></li></ul><h2 id="开始DD"><a href="#开始DD" class="headerlink" title="开始DD"></a>开始DD</h2><p>1、首先保证服务上安装了如下的软件包（<strong>建议用Debian10系统</strong>）</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#确保安装了所需软件:</span></span><br><span class="line"><span class="comment">#Debian/Ubuntu:</span></span><br><span class="line">apt update -y </span><br><span class="line">apt-get install -y xz-utils openssl gawk file</span><br><span class="line"></span><br><span class="line"><span class="comment">#RedHat/CentOS:</span></span><br><span class="line">yum update -y</span><br><span class="line">yum install -y xz openssl gawk file</span><br></pre></td></tr></table></figure><p>2、Putty或者Finalshell等远程连接工具（腾讯云可以直接用后台控制台登陆）连接VPS服务器，复制以下命令运行， 注意将命令中的汉字，替换为实际系统镜像链接地址，下文会提供相关链接。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#一键脚本，直链包链接自己找个替换下</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#国内:</span></span><br><span class="line">bash &lt;(wget --no-check-certificate -qO- <span class="string">&#x27;https://moeclub.org/attachment/LinuxShell/InstallNET.sh&#x27;</span>) -<span class="built_in">dd</span> <span class="string">&quot;引号里放dd包直链&quot;</span> --mirror <span class="string">&#x27;http://mirrors.ustc.edu.cn/debian/&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#国外:</span></span><br><span class="line">bash &lt;(wget --no-check-certificate -qO- <span class="string">&#x27;https://moeclub.org/attachment/LinuxShell/InstallNET.sh&#x27;</span>) -<span class="built_in">dd</span> <span class="string">&quot;引号里放dd包直链&quot;</span></span><br></pre></td></tr></table></figure><p>3、接下来就可以不用管了，安装所需时间与系统镜像载速度及你的VPS服务器性能有关。正常情况下，15-30分钟后应该可以安装成功。</p><p>对于VSP服务器后台自带VNC功能的，可以打开VNC观察安装进度。五分钟之后打开VNC，会看到下面的界面，提示Strating up the partitioner ，而且进度一直会卡在0%，不要担心，这是正常的（我第一次以为是出问题了，然后就重装了系统，导致一直没成功）</p><p><img src="https://pic.loll.cc/images/2021/08/28/20210828090140.png" alt="ad29c1ff2e3e43d2a418cc7d0bb99b45"></p><p>此时，我们要做的就是耐心等待，可以选择打开你的电脑硬盘，去看一部片子，看完片子回来，再次打开VNC，就能看到熟悉的Windows界面了。</p><p>4、等待在VNC看到了Windows的系统界面，我们会发现VNC里面鼠标操作非常不爽，这个时候我们就可以需要远程登陆工具来登陆了。（个人使用Microsoft Remote Desktop，MAC用户直接在APP STORE下载就行很方便）</p><p><img src="https://pic.loll.cc/images/2021/08/28/20210828090228.png" alt="053f180d38544738801083849faecdad"></p><h3 id="可用的DD-Windows系统镜象地址"><a href="#可用的DD-Windows系统镜象地址" class="headerlink" title="可用的DD  Windows系统镜象地址"></a>可用的DD  Windows系统镜象地址</h3><p>由于每个人需要安装的Windows系统版本并不相同，所以前文脚没有给出链接地址。可根据自身需求，选择下面的链接地址对脚本命令进行替换。</p><h4 id="Vicer镜像地址"><a href="#Vicer镜像地址" class="headerlink" title="Vicer镜像地址"></a>Vicer镜像地址</h4><p>以下各系统都有两个下载链接，其中第一个为Google  Drive地址，国内被墙建议外VPS服务器使用；</p><p>第二个为OneDrive地址，建议国内VPS服务器使用。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Windows 7 32位中文（Windows Thin PC）:</span></span><br><span class="line">https://image.moeclub.org/GoogleDrive/1srhylymTjYS-Ky8uLw4R6LCWfAo1F3s7</span><br><span class="line">https://moeclub.org/onedrive/IMAGE/Windows/win7emb_x86.tar.gz</span><br><span class="line"> </span><br><span class="line"><span class="comment"># Windows 8.1 SP1 64位中文（Embedded）:</span></span><br><span class="line">https://image.moeclub.org/GoogleDrive/1cqVl2wSGx92UTdhOxU9pW3wJgmvZMT_J</span><br><span class="line">https://moeclub.org/onedrive/IMAGE/Windows/win8.1emb_x64.tar.gz</span><br><span class="line"> </span><br><span class="line"><span class="comment"># Windows 10 ltsc 64位中文:</span></span><br><span class="line">https://image.moeclub.org/GoogleDrive/1OVA3t-ZI2arkM4E4gKvofcBN9aoVdneh</span><br><span class="line">https://moeclub.org/onedrive/IMAGE/Windows/win10ltsc_x64.tar.gz</span><br></pre></td></tr></table></figure><p><strong>注意事项：</strong></p><p>1、安装成功后，请尽快更改默认登录密码</p><ul><li><p>默认用户名：<code>Administrator</code></p></li><li><p>默认密码：<code>Vicer</code></p></li></ul><p>2、Win7版本默认已激活，Win8.1及Win10版本默认未激活，方法可参考文末相关内容。</p><h4 id="Teddysun镜像地址"><a href="#Teddysun镜像地址" class="headerlink" title="Teddysun镜像地址"></a>Teddysun镜像地址</h4><p>以下各系统版本都有两个下载链接，任选其一：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Windows Server 2012 R2中文版：</span></span><br><span class="line">https://file.yuntu.ca/iso/teddysun/cn_windows2012r2.gz</span><br><span class="line">https://mirrors.yuntu.ca/teddysun/cn_windows2012r2.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># Windows Server 2016中文版：</span></span><br><span class="line">https://file.yuntu.ca/iso/teddysun/cn_windows2016.gz</span><br><span class="line">https://mirrors.yuntu.ca/teddysun/cn_windows2016.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># Windows Server 2019中文版</span></span><br><span class="line">https://file.yuntu.ca/iso/teddysun/cn_windows2019.gz</span><br><span class="line">https://mirrors.yuntu.ca/teddysun/cn_windows2019.gz</span><br></pre></td></tr></table></figure><p><strong>注意事项：</strong></p><p>1、安装成功后，请尽快更改默认登录密码</p><ul><li>默认用户名：<code>administrator</code></li><li>默认密码：<code>Password147</code></li></ul><p>2、已测试可用的服务器商家包括腾讯云，Vultr 、DigitalOcean、Cloudcone、Kimsuf、Online 等，其它商家自测。</p><p>3、可用KMS方式激活系统，参考本文末相关内容。</p><h4 id="老司机镜像地址"><a href="#老司机镜像地址" class="headerlink" title="老司机镜像地址"></a>老司机镜像地址</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Windows Server 2008 SP1 R2 64位中文版：</span></span><br><span class="line">http://soft.815494.com/dd/WinSrv2008x64-Chinese.vhd.gz</span><br></pre></td></tr></table></figure><p><strong>注意事项：</strong></p><p>1、安装成功后，请尽快更改默认登录密码</p><ul><li>默认用户名：<code>Administrator</code></li><li>默认密码：<code>WinSrv2008x64-Chinese</code></li></ul><p>2、安装后会自动激活，无需另外激活。</p><h4 id="Linode专用镜像："><a href="#Linode专用镜像：" class="headerlink" title="Linode专用镜像："></a>Linode专用镜像：</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Windows Server 2003 中文版：</span></span><br><span class="line">http://down.80host.com/iso/dd/cn2003-virtio-pass-Linode.gz</span><br></pre></td></tr></table></figure><ul><li>默认用户名：<code>Administrator</code></li><li>默认密码：<code>Linode</code></li></ul><h4 id="OVH-VPS专用镜像"><a href="#OVH-VPS专用镜像" class="headerlink" title="OVH  VPS专用镜像"></a>OVH  VPS专用镜像</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Windows 7中文版： </span></span><br><span class="line">http://down.80host.com/iso/dd/win7_cn_5gb_virtio_scsi.gz</span><br><span class="line">http://down.80host.com/iso/dd/win7_cn_5gb_virtio_scsi_faster.gz</span><br></pre></td></tr></table></figure><ul><li>默认用户名：<code>administrator</code></li><li>默认密码：<code>www.80host.com</code></li></ul><h3 id="Windows激活"><a href="#Windows激活" class="headerlink" title="Windows激活"></a>Windows激活</h3><h4 id="方案1-KMS方式激活"><a href="#方案1-KMS方式激活" class="headerlink" title="方案1  KMS方式激活"></a>方案1  KMS方式激活</h4><p>Windows系统安装成功后，用远程桌面连接Win+R快捷键调出运行窗口，输入CMD回车，运行如下命令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">slmgr -skms kms.moeclub.org</span><br><span class="line">slmgr -ato</span><br></pre></td></tr></table></figure><p>可能需要用到的密钥（按对应版本选，良心云轻量一般不需要这个）：<code>https://docs.microsoft.com/zh-cn/windows-server/get-started/kmsclientkeys</code></p><p><img src="https://pic.loll.cc/images/2021/08/28/20210828103844.png" alt="070eae0ab21246209420d6d1c3145519"></p><h4 id="方案2-激活工具"><a href="#方案2-激活工具" class="headerlink" title="方案2  激活工具"></a>方案2  激活工具</h4><p>Windows激活工具下载： 点此进入下载页面：<code>https://www.jb51.net/softs/227076.html</code></p><p>页面名称虽然为Win8.1 激活，但实际上可激活多个版本的系统，界面如下图：</p><p><img src="https://pic.loll.cc/images/2021/08/28/20210828090509.png"></p><p><strong>建议用方案1激活，简单有效！</strong></p><h2 id="做一些简单的安全防护工作"><a href="#做一些简单的安全防护工作" class="headerlink" title="做一些简单的安全防护工作"></a>做一些简单的安全防护工作</h2><h3 id="修改登录的密码"><a href="#修改登录的密码" class="headerlink" title="修改登录的密码"></a>修改登录的密码</h3><ul><li>使用CMD更改登录密码</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">net user administrator 要修改的密码</span><br></pre></td></tr></table></figure><h3 id="修改远程桌面连接的3389端口"><a href="#修改远程桌面连接的3389端口" class="headerlink" title="修改远程桌面连接的3389端口"></a>修改远程桌面连接的3389端口</h3><p>在VPS服务器上安装Windows系统，不同于家用电脑。因为服务器直接就是公网I P ，理论上任何人都可以通过远程桌面连接尝试登录服务器。为了安全考虑，我们有必要修改远默认的3389端口。</p><h4 id="修改方法"><a href="#修改方法" class="headerlink" title="修改方法"></a>修改方法</h4><p>1、W i n + R快捷键调出运行窗口，输入<code>regedit</code>回车，打开注册表编辑器。</p><p>2、找到以下两个位置的<code>PortNumber</code> 值， 将默认的<code>3389</code>修改为其它较大端口号，比如<code>58888</code>：</p><p> <code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\Wds\rdpwd\Tds\tcp</code></p><p> <code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp</code></p><p>3、修改完成后，需要将刚才的端口号添加至系统防火墙放行：</p><ul><li><p>打开<code>开始菜单</code>——<code>控制面板</code>系统和<code>安全Windows防火墙</code>——<code>高级设置</code>——<code>入站规则</code>——<code>新建规则</code>。</p></li><li><p>在<code>新建入站</code>规则窗口中，依次选择类型为<code>端口</code>——<code>协议TCP</code> 、端口为刚才设置的<code>新的端口号</code>——操作设置为<code>允许连接</code>——最后的名称随便一个。</p></li><li><p>防火墙规则添加完成后，重启系统使设置生效。</p></li><li><p>远程桌面连接时，将原来的服务器IP修改为<code>IP:新端口</code>的形式，比如<code>127.0.0.1:58888</code></p></li></ul><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="关于安装成功后磁盘变小"><a href="#关于安装成功后磁盘变小" class="headerlink" title="关于安装成功后磁盘变小"></a>关于安装成功后磁盘变小</h3><ul><li>在控制面板中搜索 “磁盘管理”；</li><li>点击“创建并格式化磁盘分区”；</li><li>选中C盘，右键-&gt;扩展卷-&gt;扩展；</li><li>刷新后就可看到磁盘大小正常。</li></ul><h3 id="关于Ping"><a href="#关于Ping" class="headerlink" title="关于Ping"></a>关于Ping</h3><p><strong>安装Windows系统后，服务器IP Ping不通怎么办？</strong></p><p>在部分Windows系统版本中，防火墙规则默认是禁Ping的，这时Ping服务器是Ping不通的。如果你需要测试Ping值延迟，那么就需要在防火墙中允许<code>ICMP</code>协议入站。</p><h4 id="具体方法"><a href="#具体方法" class="headerlink" title="具体方法"></a>具体方法</h4><p>1、打开<code>控制面板</code>中的<code>Windows防火墙</code>——<code>高级设置</code>——<code>入站规则</code>——<code>新建规则</code></p><p>2、在弹出的<code>新建入站规则</code>窗口中，选择类型为<code>自定义</code>——程序默认<code>所有程序</code>——协议选择<code>ICMPv4</code>—— 一路<code>下一步</code>保存</p><p>3、规则添加成功后，就可以通过Ping命令测试服务器延迟了。</p><h2 id="最后的叮嘱"><a href="#最后的叮嘱" class="headerlink" title="最后的叮嘱"></a>最后的叮嘱</h2><p><strong>声明：</strong> 这个只是测试使用，如果想要长期稳定使用，还是建议购买自带Windows版本的服务器套餐～</p><p>好了，愉快地玩耍起来吧！</p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="https://hostloc.com/thread-715445-1-1.html">https://hostloc.com/thread-715445-1-1.html</a><br><a href="https://ssr.tools/680">https://ssr.tools/680</a></p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Centos </tag>
            
            <tag> 系统重装 </tag>
            
            <tag> DD系统 </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>服务器自带的系统不喜欢？那就自己DD一个船新的系统吧！</title>
      <link href="/archives/dd/"/>
      <url>/archives/dd/</url>
      
        <content type="html"><![CDATA[<p><img src="https://blog.hicasper.com/usr/uploads/2020/06/2336802514.jpg" alt="img"></p><p>基本所有的VPS商家，都会提供免费的Linux系统供安装，如CentOS、Debian、Ubuntu等。那为什么还要使用一键DD脚本重装&#x2F;更换系统呢？</p><p>原因大概有这么几点：</p><ol><li>商家提供的系统版本有限，可能没有自己需要的版本（如HostHatch只有CentOS只有7，Debian只有9、10）；</li><li>商家提供的系统大多都是改装过的，不纯净（如良心云、套路云服务器自带云镜、云盾等监控），可能存在软件兼容行问题；</li><li>商家提供的系统大多带有监控，虽说可以卸载，但是心里总是有疙瘩（指良心云、套路云）；</li></ol><p>针对以上几种情况，一键DD脚本就可以为服务器更换一个纯净的系统，帮你解决问题。</p><h2 id="重要提醒"><a href="#重要提醒" class="headerlink" title="重要提醒"></a>重要提醒</h2><ul><li>请仔细阅读服务器商家的ToS条款，事先确认你的服务器提供商是否支持你DD系统（重装自己的系统）</li><li>由于授权问题，很多服务器提供商是禁止你把服务器DD成Windows系统的（比如Contabo），发现会暂停服务甚至删鸡！</li><li>OpenVZ &#x2F; LXC 架构系统不适用此脚本</li><li><strong>注意重装有风险，请妥善备份好自己的数据，</strong>（阿里腾讯搬瓦工等有快照的商家，你可以先在后台存一个快照）可能导致无法开机（部分商家可以用VNC救回来，但本文不涉及），<strong>谨慎操作</strong>！</li></ul><h2 id="一键安装Linux系统"><a href="#一键安装Linux系统" class="headerlink" title="一键安装Linux系统"></a>一键安装Linux系统</h2><p>下列脚本支持系统重置为 CentOS 7、CentOS 6、Debian 9、Debian 10、Debian 11、Ubuntu 18.10。（注意有些脚本需要获取 IP、网关、子网掩码等信息，需要填写正确才行安装成功。）</p><p><strong>注意重装有风险，可能导致无法开机，谨慎操作！</strong></p><p><strong>注意重装有风险，可能导致无法开机，谨慎操作！</strong></p><p><strong>注意重装有风险，可能导致无法开机，谨慎操作！</strong></p><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>使用脚本前最好先安装如下软件：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># CentOS 与 RedHat</span></span><br><span class="line">yum install -y xz openssl gawk file wget</span><br><span class="line"></span><br><span class="line"><span class="comment"># Debian 与 Ubuntu</span></span><br><span class="line">apt-get install -y xz-utils openssl gawk file</span><br></pre></td></tr></table></figure><h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget --no-check-certificate -O AutoReinstall.sh https://git.io/AutoReinstall.sh &amp;&amp; bash AutoReinstall.sh</span><br></pre></td></tr></table></figure><h3 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h3><p>下面是我以iON家2H2G预装Debian10的服务器作为演示的例子，来实际操作一下。</p><p>完成准备工作之后，输入上方的脚本：</p><img src="https://pic.loll.cc/images/2021/08/23/20210823162134.png" alt="image-20210823162134121" style="zoom:50%;" /><p>输入<code>y</code></p><img src="https://pic.loll.cc/images/2021/08/23/20210823162223.png" alt="image-20210823162222967" style="zoom:50%;" /><p>这边我打算安装在Debian11，就选择<code>6</code> 然后回车。</p><p>回车之后会显示密码（Centos默认密码<code>Pwd@CentOS</code>，其它系统<code>Pwd@Linux</code>），再按一次回车就开始安装了，懒人式，全程无需操作，非常方便。</p><img src="https://pic.loll.cc/images/2021/08/23/20210823162348.png" alt="image-20210823162348361" style="zoom:50%;" /><p>大概过了一分钟不到，我就ping通了域名，有这么快就安装好了？</p><img src="https://pic.loll.cc/images/2021/08/23/20210823162450.png" alt="image-20210823162450107" style="zoom:50%;" /><p>看这个延迟很奇怪，我尝试连接服务器，果然是连接不上的，需要再等一会儿。（后台还在配置中）</p><img src="https://pic.loll.cc/images/2021/08/23/20210823162617.png" alt="image-20210823162617503" style="zoom:50%;" /><p>大概等了5分钟左右（其他的服务器可能需要更长的时间，一般是15分钟左右，如果过了15分钟还是连接不上，有VNC的用户可以登陆VNC看看是不是卡住了），再次连接，提示：</p><img src="https://pic.loll.cc/images/2021/08/23/20210823162701.png" alt="image-20210823162701797" style="zoom:50%;" /><p>现在说明已经后台已经安装好了，</p><p>输入<code>vim /Users/roy/.ssh/known_hosts</code></p><p>然后删除这个一行记录，（小技巧：切换成英文的输入法，然后连按两下D键就行。）</p><img src="https://pic.loll.cc/images/2021/08/23/20210823162840.png" alt="image-20210823162840739" style="zoom:50%;" /><p>接着输入<code>:wq</code> ,按回车键，保存退出。</p><img src="https://pic.loll.cc/images/2021/08/23/20210823163016.png" alt="image-20210823163016345" style="zoom:50%;" /><p>再次连接，出现提示，输入<code>yes</code> 回车，</p><img src="https://pic.loll.cc/images/2021/08/23/20210823163117.png" alt="image-20210823163117815" style="zoom:50%;" /><p>输入密码<code>Pwd@Linux</code>，回车就行。</p><img src="https://pic.loll.cc/images/2021/08/23/20210823163149.png" alt="image-20210823163149935" style="zoom:50%;" /><p>登陆成功！</p><img src="https://pic.loll.cc/images/2021/08/23/20210823163233.png" alt="image-20210823163233232" style="zoom:50%;" /><p>输入<code>uname -a</code></p><img src="https://pic.loll.cc/images/2021/08/23/20210823163325.png" alt="image-20210823163324924" style="zoom:50%;" /> <p>输入<code>cat /etc/os-release </code>查看版本</p><img src="https://pic.loll.cc/images/2021/08/23/20210823163457.png" alt="image-20210823163457101" style="zoom:50%;" /><p>好啦，可以愉快地玩耍啦。</p><p>脚本来源：<a href="https://blog.hicasper.com/post/135.html">https://blog.hicasper.com/post/135.html</a> 感谢大佬的付出！</p><p>Windows的DD脚本之后补充，原因是目前我找了很多脚本，全部DD失败了！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://www.ydyno.com/archives/1245.html">https://www.ydyno.com/archives/1245.html</a></p><p><a href="https://blog.hicasper.com/post/135.html">https://blog.hicasper.com/post/135.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>修改宝塔OneDrive插件API为自己的E5续命</title>
      <link href="/archives/aapanel-onedrive-api-e5-renew/"/>
      <url>/archives/aapanel-onedrive-api-e5-renew/</url>
      
        <content type="html"><![CDATA[<h2 id="2023-06-16-更新"><a href="#2023-06-16-更新" class="headerlink" title="2023-06-16 更新"></a>2023-06-16 更新</h2><p>没什么用，咕咕的E5已经翻车，不建议看下去了。</p><hr><p>登陆地址：<a href="https://portal.azure.com/#home">https://portal.azure.com/#home</a></p><p>1：使用@xxx.onmicrosoft.com账号登陆。</p><p><img src="https://breakthewa11.com/wp-content/uploads/2021/08/01-300x194.png"></p><p>2：点击左边的应用注册</p><p><img src="https://breakthewa11.com/wp-content/uploads/2021/08/02-187x300.png"></p><p>3：新注册。名称：随意，类型：任何组织目录（两个都可以），重定向 URI：<a href="http://localhost/login/authorized">http://localhost/login/authorized</a></p><p><img src="https://breakthewa11.com/wp-content/uploads/2021/08/03-300x101.png"></p><p><img src="https://breakthewa11.com/wp-content/uploads/2021/08/04-300x255.png"></p><p>4：返回主页，点击打开刚注册好的应用，复制：应用程序(客户端) ID</p><p><img src="https://breakthewa11.com/wp-content/uploads/2021/08/05-300x273.png"></p><p><img src="https://breakthewa11.com/wp-content/uploads/2021/08/06-300x178.png"></p><p>5：点击客户端凭据，+客户端密码，名称：随意，截至日期：24个月</p><p><img src="https://breakthewa11.com/wp-content/uploads/2021/08/07-300x143.png"></p><p><img src="https://breakthewa11.com/wp-content/uploads/2021/08/08-300x159.png"></p><p><img src="https://breakthewa11.com/wp-content/uploads/2021/08/09-300x108.png"></p><p>6：复制刚新建的客户端密码里面的值</p><p><img src="https://breakthewa11.com/wp-content/uploads/2021/08/10-300x73.png"></p><p>7：返回主页，打开第3步注册的应用，点击API 权限，点击代表XXX授权管理员同意</p><p><img src="https://breakthewa11.com/wp-content/uploads/2021/08/11-300x169.png"></p><p><img src="https://breakthewa11.com/wp-content/uploads/2021/08/12-300x131.png"></p><p>8：宝塔安装好OneDrive插件。已登录的退出登录。</p><p>9：编辑文件&#x2F;www&#x2F;server&#x2F;panel&#x2F;plugin&#x2F;msonedrive&#x2F;credentials.json</p><p><img src="https://breakthewa11.com/wp-content/uploads/2021/08/WX20210817-145649@2x-300x211.png"></p><p>10：修改onedrive-international下面的client_id为第4步复制的应用程序(客户端) ID，修改client_secret为第6步复制的值</p><p>11：保存文件后，正常登录即可。（点击授权之后会跳到一个无法显示的页面，把这个页面的URL复制到宝塔授权的空格内，点击确认就能完成授权了）</p><p><img src="https://breakthewa11.com/wp-content/uploads/2021/08/WX20210817-145741@2x-300x186.png"></p><p>方法来自Hostloc，单纯的备份操作小割几已经亲测有效，感谢@mujj</p><p><img src="https://breakthewa11.com/wp-content/uploads/2021/08/13-300x72.png"></p><p><img src="https://breakthewa11.com/wp-content/uploads/2021/08/14-300x122.png"></p><p><img src="https://breakthewa11.com/wp-content/uploads/2021/08/15-300x109.png"></p><p>至于是否能够成功续期，还的等到10月份我的E5满三个月之后才能看到效果。</p>]]></content>
      
      
      <categories>
          
          <category> 宝塔面板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OneDrive </tag>
            
            <tag> 网盘 </tag>
            
            <tag> E5 </tag>
            
            <tag> E5续期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo还是Hugo？Typecho还是Wordpress？读完这篇或许你就有答案了！</title>
      <link href="/archives/blog-choosing/"/>
      <url>/archives/blog-choosing/</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/mdnice4/2021-8-20/1629446767346-blog.jpg" alt="Blog封面"></p><p>关注咕咕鸽动态的小伙伴知道，上周本咕忙着搬博客，所以鸽了，没做视频。</p><p>从Wordpress到Hexo，再到Hugo，又到Typecho，再到Halo，兜兜转转，咕咕最后还是决定博客搬回到了Wordpress上。</p><p>既然体验了这么多的博客框架，这周就来和大家分享一下这几个博客的优缺点吧。</p><h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/mdnice4/2021-8-20/1629446785137-hexo.jpeg" alt="Hexo"></p><p>首先介绍的是Hexo，这也是咕咕没买服务器之前折腾的第一个博客。</p><p>演示站点：<a href="https://yirenliu.cn/">https://yirenliu.cn</a></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/mdnice4/2021-8-20/1629446790542-hexoex.png" alt="Hexo演示"></p><p>用的主题是butterfly，想当年刚用的时候，作者还没建群，现在qq群都有上千人了，GitHub上的星星数量也有2.7k了。</p><p><img src="https://pic.loll.cc/images/2021/08/20/20210820155353.png" alt="1d4fede190984884b9809f8de0367f43"></p><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><p>如果你不想买服务器，但也想折腾一个博客，那边我十分推荐你用Hexo+Butterfly主题，然后部署在GitHub上，基本上你就负责写博客就行了，完全不用去理会服务器会不会挂的问题，也不用担心有人攻击你的服务器，如果你不想买域名，你甚至可以不用花一分钱就拥有一个自己的博客。</p><p>而且Butterfly颜值没得说，功能也很齐全，基本上可以满足你对博客的所有需求。</p><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><p>当然，用Hexo搭建博客也是有缺点的。</p><p>最大的问题就是折腾。</p><h4 id="1、环境配置"><a href="#1、环境配置" class="headerlink" title="1、环境配置"></a>1、环境配置</h4><p>你需要现在本地配置Hexo的环境（NodeJS、Git、GitHub的一系列信息），由于防火墙的原因，有时候你连接GitHub可能会连接不上（虽然你可以部署到coding可以解决一些问题）</p><h4 id="2、没有后端"><a href="#2、没有后端" class="headerlink" title="2、没有后端"></a>2、没有后端</h4><p>没有后端（当然这也是一个优点，可以让你的博客加载更快），这意味着，你没有一个后台来写作，你基本上只能都是本地写，然后通过Git命令。来推送到你的GitHub仓库。一旦你换了一台电脑，你又得重新配置环境，而且你需要拷贝你的博客一份在云端，不然你在新的电脑配置好，推送过去，你之前写的博客就没了。（当然现在大家探索出了用语雀来实现云写作的功能，我没有去试过，貌似也比较复杂。）</p><h4 id="3、评论系统"><a href="#3、评论系统" class="headerlink" title="3、评论系统"></a>3、评论系统</h4><p>因为Hexo无后端，所以你的评论系统必须外接其他平台，可选的评论系统很多，你需要从他们当中挑选一个，然后配置，我总是担心评论的数据会丢失，之前还爆出大家用的很多的valine有安全问题，所以又换了waline，总之我觉得还是比较繁琐的。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>Hexo非常适合折腾的玩家，如果你有时间折腾，非常推荐你玩一玩Hexo，因为用的人多，主题也多，遇到问题网上基本都能找到答案。</p><p>我之前也写过部署教程，有兴趣的同学可以参考：<a href="https://mp.weixin.qq.com/s/jVEv9jHV3WS5nAkVOmAcng">https://mp.weixin.qq.com/s/jVEv9jHV3WS5nAkVOmAcng</a></p><p>Hexo不仅仅可以部署到GitHub，如果你有服务器，但还是想用Hexo，我也整理过一篇部署到服务器的教程，可以参考这篇：<br><a href="https://breakthewa11.com/archives/hexo-building.html">https://breakthewa11.com/archives/hexo-building.html</a></p><p>如果你只是单纯想写些东西，不推荐使用。</p><h2 id="Hugo"><a href="#Hugo" class="headerlink" title="Hugo"></a>Hugo</h2><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/mdnice4/2021-8-20/1629446798386-hugo.png" alt="Hugo"></p><h3 id="优点-1"><a href="#优点-1" class="headerlink" title="优点"></a>优点</h3><p>配置比Hexo更简单一些。</p><p>与Hexo相比，最大的特点就是它是用Go语言写的，如果你有几百篇Markdown的文章要渲染，它可以在几秒内完成，而Hexo则可能会话费比较长时间。</p><h3 id="缺点-1"><a href="#缺点-1" class="headerlink" title="缺点"></a>缺点</h3><p>但是用Hugo的人没有Hexo的多，意味着Hugo的主题也比较少，你遇到问题了，想要解决，可能会花更多的时间。</p><h3 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h3><p>同Hexo，如果你爱折腾，而且你的文章已经有几百篇了，那么十分推荐你使用它，它也有很多非常简约好看的主题。</p><p>如果你不是上面描述的这类人，不推荐使用。</p><h2 id="Typecho"><a href="#Typecho" class="headerlink" title="Typecho"></a>Typecho</h2><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/mdnice4/2021-8-20/1629446803525-typecho.png" alt="Typecho"></p><p>这是一个非常轻量级的博客框架，我曾经用过小半年，很不错。</p><h3 id="优点-2"><a href="#优点-2" class="headerlink" title="优点"></a>优点</h3><p>非常轻量，整个文件大小才385KB（Wordpress最新版本5.8是16.5MB）</p><p><img src="https://pic.loll.cc/images/2021/08/20/20210820150027.png" alt="image-20210820150027206"></p><p>而且用的人非常多，也有非常多好看的主题。</p><p>如果你的服务器配置不高（512M内存或是更低），那十分推荐这个博客框架，基本上可以满足你对博客的需求，而且不像Hexo和Hugo，Typecho是带后端的，意味着只要你能上网，你就可以自由地写你的文章，不会被设备所拘束。当然，你也不用去本地电脑上配置复杂的环境。</p><h3 id="缺点-2"><a href="#缺点-2" class="headerlink" title="缺点"></a>缺点</h3><p>1、更新问题</p><p>从上面的图可以看出来，Typecho已经快9年没有更新了，而且博客对应的一些插件也比较老了。</p><p>2、扩展性</p><p>对于单纯的博客来说，这个问题其实不是问题，但是如果和Wordpress相比，确实Typecho的扩展性有限。</p><h3 id="总结-2"><a href="#总结-2" class="headerlink" title="总结"></a>总结</h3><p>对于单纯想写博客，不像搞的花里胡哨的，服务器配置有限，同时也不想花费太多时间去折腾优化博客的同学，非常推荐你使用Typecho</p><p><img src="https://pic.loll.cc/images/2021/08/20/20210820151339.png" alt="image-20210820151339542"></p><p>GitHub上的8.1K星星已经说明了它的优秀！</p><p>我也写过一篇部署Typecho的文章，有兴趣的同学可以参考，相信会对你非常有帮助：<a href="https://breakthewa11.com/archives/typecho-building.html">https://breakthewa11.com/archives/typecho-building.html</a></p><h2 id="Halo"><a href="#Halo" class="headerlink" title="Halo"></a>Halo</h2><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/mdnice4/2021-8-20/1629446773318-halo.png" alt="Halo"></p><p>Halo是用java编写的一个博客框架，我之前专门有一期视频跟大家详细讲解了如果利用Docker来部署Halo博客，非常方便。</p><div style="position: relative; padding: 30% 45%;"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"src="//player.bilibili.com/player.html?aid=502013398&bvid=BV1JN411Q7Na&cid=306862255&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" ></iframe></div><p>演示站点：<a href="https://blog.laoda.de/">https://blog.laoda.de</a></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/mdnice4/2021-8-20/1629446779599-haloex.png" alt="Halo演示"></p><h3 id="优点-3"><a href="#优点-3" class="headerlink" title="优点"></a>优点</h3><p>1、部署方便（指用Docker）</p><p>2、主题也日渐丰富</p><p>3、开发者非常友好，有活跃的社区，基本上你碰到任何问题，都能在社区中找到答案（当然先要学习<a href="https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/main/README-zh_CN.md">提问的智慧</a>）</p><p>4、维护方便（尤其是用了Docker）</p><h3 id="缺点-3"><a href="#缺点-3" class="headerlink" title="缺点"></a>缺点</h3><p>因为是java写的，比较吃服务器的配置，推荐服务器内存至少1GB</p><h3 id="总结-3"><a href="#总结-3" class="headerlink" title="总结"></a>总结</h3><p>如果你有一台配置不错的服务器，那么快来试一试Halo吧，你会发现太省心了，与Hexo、Hugo比，它自带了后端，随时随地你都可以写作，与Typecho比，你不需要去下载邮件插件等一系列插件，Halo都贴心地给你集成好了，你只需要简单的几个设置就可以使用，如果想换主题，也可以轻松地利用远程下载，一键换成新主题，非常方便。你可以随时利用博客自带的备份功能来备份你博客的所有数据，并把他们下载到你的本地；Halo更新了，你也可以利用docker在10s钟内完成升级……</p><p>总之，随着现在又上线了几个主题，Halo是基本可以满足你所有的需求的，相信我。</p><h2 id="Wordpress"><a href="#Wordpress" class="headerlink" title="Wordpress"></a>Wordpress</h2><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/mdnice4/2021-8-20/1629446807440-Wordpress.png" alt="Wordpress"></p><p>不多说了，截至2019年10月的统计，全球所有网站中，有超过34.7%的网站采用WordPress方式搭建，也就是说每3个就有1个是用WordPress搭建的，小到一个个人博客，大到美国白宫官方网站。 如果按照活跃网站总数估算1.72亿个来算，这意味着目前约有6000万个网站正在使用WordPress。</p><p><img src="https://pic.loll.cc/images/2021/08/20/20210820153543.png" alt="image-20210820153543363"></p><h3 id="优点-4"><a href="#优点-4" class="headerlink" title="优点"></a>优点</h3><p>用的人多，你遇到的99.9%的问题，世界上其他人肯定都遇到过，所以你可以比较容易在网上找到解决方案。</p><p>Wordpress不仅仅可以搭博客，它还可以搭一个论坛，它甚至还可以搭一个商城。</p><p>生态丰富，插件多。你能想到的功能，99.9% Wordpress都有，利用庞大的插件库，你可以完成你对网站的一切幻想。</p><h3 id="缺点-4"><a href="#缺点-4" class="headerlink" title="缺点"></a>缺点</h3><p>臃肿，由于功能过于强大，Wordpress与上面几个博客框架相比，显得非常臃肿，尤其是当你的博客内容多了之后，需要你有一定的网站优化能力（当然这个可以慢慢学，也有很多插件可以帮上忙）</p><p>比较占用服务器资源，建议服务器内存有1GB左右。</p><h3 id="总结-4"><a href="#总结-4" class="headerlink" title="总结"></a>总结</h3><p>如果你希望博客的延展性更强，而且你也有折腾的心，那么不要犹豫了，和我一样，选择Wordpress吧。</p><blockquote><p>愿你出走半生，回来仍旧是Wordpress</p></blockquote><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>说了这么多，还是像我第一次写教程类文章说的那样。</p><p><strong>建博客容易，维护博客难。</strong></p><p>其实选择什么框架不重要，重要的是你能坚持一直更新，产出内容，不管是给自己看，还是给别人看。</p><p>最后，欢迎大家交流遇到的问题，</p><p>如果<strong>大家搭好</strong>了自己的<strong>博客</strong>，也欢迎在<strong>评论区秀出来</strong>！想要添加友情链接的，也可以在留言区告知～</p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客搭建 </tag>
            
            <tag> Typecho </tag>
            
            <tag> Wordpress </tag>
            
            <tag> Hugo </tag>
            
            <tag> Halo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何从 Debian 10 升级到 Debian 11</title>
      <link href="/archives/debian10-to-debian11/"/>
      <url>/archives/debian10-to-debian11/</url>
      
        <content type="html"><![CDATA[<p>可以尝鲜玩玩，生产环境不建议直接升级！</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt update &amp;&amp; sudo apt upgrade</span><br></pre></td></tr></table></figure><p>使用下面的命令安装 <code>gcc-8-base</code> 包。这是必须的，因为在历史上曾出现过升级失败的情况，这是因为下面的软件包中包含了某些依赖。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install gcc-8-base</span><br></pre></td></tr></table></figure><p>出现command not found的话说明没有sudo，可以安装先,顺便把wget和curl也装上：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install sudo wget curl </span><br></pre></td></tr></table></figure><p>直接切换root：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano /etc/apt/sources.list</span><br></pre></td></tr></table></figure><p>打开 <code>/etc/apt/sources.list</code>，通过注释 Debian 10 buster 包，而使用 bullseye 仓库进行更新。</p><p>注释所有的 buster 仓库，在行的开头加上 #。</p><p><img src="https://pic.loll.cc/images/2021/08/16/20210816175022.png" alt="86629d00fe654ac7b666d4af819fe175"></p><p><img src="https://pic.loll.cc/images/2021/08/16/20210816175035.png" alt="253f56f78f05482899ffae3ca307fc0a"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deb http://deb.debian.org/debian bullseye main contrib non-free</span><br><span class="line">deb http://deb.debian.org/debian bullseye-updates main contrib non-free</span><br><span class="line">deb http://security.debian.org/debian-security bullseye-security main</span><br><span class="line">deb http://ftp.debian.org/debian bullseye-backports main contrib non-free</span><br></pre></td></tr></table></figure><p>国内机子也可以用清华的源：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye main contrib non-free</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye main contrib non-free</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-updates main contrib non-free</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-updates main contrib non-free</span><br><span class="line"></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-backports main contrib non-free</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-backports main contrib non-free</span><br><span class="line"></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/debian-security bullseye-security main contrib non-free</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/debian-security bullseye-security main contrib non-free</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure><p><img src="https://pic.loll.cc/images/2021/08/16/20210816175051.png" alt="947589e407bd48719868987a59818136"></p><p>如果上面的命令没有出现任何错误，那么你已经成功地添加了 bullseye 仓库。</p><h2 id="开始升级"><a href="#开始升级" class="headerlink" title="开始升级"></a>开始升级</h2><p>现在，通过运行下面的命令开始升级过程。基本安装的下载大小约为 1.2GB。这可能会根据你的系统配置而有所不同。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt full-upgrade</span><br></pre></td></tr></table></figure><p><img src="https://pic.loll.cc/images/2021/08/16/20210816175108.png" alt="ca97e666576d423da6bfad26cbd15e09"></p><p>输入<code>q</code></p><p><img src="https://pic.loll.cc/images/2021/08/16/20210816175121.png" alt="d524cf27c6004be1a51581d876fb2c7c"></p><p>选择<code>y</code></p><p><img src="https://pic.loll.cc/images/2021/08/16/20210816175132.png" alt="30a67ac0e7044a74ad22a8d92eff0f38"></p><p>升级中</p><p><img src="https://pic.loll.cc/images/2021/08/16/20210816175203.png" alt="c73070610f6e44dcbbfbd2baa9fd9d17"></p><p>回车</p><p><img src="https://pic.loll.cc/images/2021/08/16/20210816175214.png" alt="8250d571d0b448918824a1dbda9a2af4"></p><p>完成后，你可以用以下命令重启系统。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl reboot</span><br></pre></td></tr></table></figure><h2 id="升级成功"><a href="#升级成功" class="headerlink" title="升级成功"></a>升级成功</h2><p>重启后，运行以下命令，以确保你的系统是最新的，并且清理了所有不再需要的不必要的软件包。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt --purge autoremove</span><br></pre></td></tr></table></figure><p><img src="https://pic.loll.cc/images/2021/08/16/20210816175226.png" alt="4056554cd7a4410992080524ff2bc245"></p><p>如果一切顺利，你应该看到了 Debian 11 bullseye。你可以用下面的命令来验证版本：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat /etc/os-release</span><br></pre></td></tr></table></figure><p><img src="https://pic.loll.cc/images/2021/08/16/20210816175238.png" alt="525d009b2b71474f9be9172f84bf9dc2"></p><p><img src="https://pic.loll.cc/images/2021/08/16/20210816175301.png" alt="427c10d31ebb49c2a4cf85d151e58be5"></p><h2 id="开启自带BBR加速"><a href="#开启自带BBR加速" class="headerlink" title="开启自带BBR加速"></a>开启自带BBR加速</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo nano /etc/sysctl.conf</span><br></pre></td></tr></table></figure><p>修改 kernel 参数配置文件 <code>sysctl.conf</code> 并指定开启 BBR</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo nano /etc/sysctl.conf</span><br></pre></td></tr></table></figure><p>把下面的内容添加进去</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">net.core.default_qdisc=fq</span><br><span class="line">net.ipv4.tcp_congestion_control=bbr</span><br></pre></td></tr></table></figure><p>重启VPS、使内核更新和BBR设置都生效</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo reboot</span><br></pre></td></tr></table></figure><p><img src="https://pic.loll.cc/images/2021/08/16/20210816175424.png" alt="87ef400d64cc488da37a764cd3de55e7"></p><p><code>ctrl+x</code> 接着 <code>y</code>，然后按下 <code>Enter</code></p><h3 id="确认BBR开启"><a href="#确认BBR开启" class="headerlink" title="确认BBR开启"></a>确认BBR开启</h3><p>如果你想确认 BBR 是否正确开启，可以使用下面的命令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsmod | grep bbr</span><br></pre></td></tr></table></figure><p>此时应该返回这样的结果：<code>tcp_bbr</code><br>如果你想确认 fq 算法是否正确开启，可以使用下面的命令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsmod | grep fq</span><br></pre></td></tr></table></figure><p>此时应该返回这样的结果：<code>sch_fq</code></p><p><img src="https://pic.loll.cc/images/2021/08/16/20210816175616.png" alt="d85a1df563b9461bab64a2f3832a5b58"></p><h2 id="完工"><a href="#完工" class="headerlink" title="完工"></a>完工</h2><p>如有问题欢迎评论区交流指正</p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> bullseye </tag>
            
            <tag> Debian </tag>
            
            <tag> Debian10 </tag>
            
            <tag> Debian11 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【保姆级教程】小鸡变身大盘鸡！VPS使用Rclone挂载OneDrive、Google Drive网盘！</title>
      <link href="/archives/make-vps-bigger/"/>
      <url>/archives/make-vps-bigger/</url>
      
        <content type="html"><![CDATA[<p><img src="https://pic.loll.cc/images/2021/07/26/20210726210903.png" alt="image-20210726210903267"></p><p>有时候我们买了一台VPS，线路配置都不错，但是硬盘空间比较小，像搬瓦工，79刀，才20G的硬盘，随便放点东西就快占满空间了，有没有办法解决呢？</p><p>有的，搭配之前的E5提供的5TOneDrive免费空间，加上谷歌的团队盘，我们可以分分钟扩容我们的小鸡，让他变成一只大盘鸡！</p><h2 id="Rclone配置"><a href="#Rclone配置" class="headerlink" title="Rclone配置"></a>Rclone配置</h2><p>Rclone的配置见：<a href="https://blog.laoda.de/archives/aria2-rclone-filebrowser#toc-head-16">https://blog.laoda.de/archives/aria2-rclone-filebrowser#toc-head-16</a></p><p><img src="https://pic.loll.cc/images/2021/07/26/20210726205134.png" alt="ba52417c158245d799efd027aa936166"></p><p>配置好了OD和GD，名字分别为<code>od_bwg</code>和<code>gd</code></p><h2 id="挂载GD"><a href="#挂载GD" class="headerlink" title="挂载GD"></a>挂载GD</h2><p>到这里结束配置 rclone，下面要把 Google Drive 网盘挂载到云主机&#x2F;Vps 上和设置开机自启，自动挂载 Google Drive 网盘</p><p>首先安装fuse:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get install fuse3  <span class="comment">#debian</span></span><br><span class="line"></span><br><span class="line">yum install fuse3   <span class="comment">#centos</span></span><br></pre></td></tr></table></figure><p>新建一个你要挂载的目录，例如我要挂载到<code>/home/gdrive</code></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /home/gdrive</span><br></pre></td></tr></table></figure><p>再执行挂载命令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rclone mount gd: /home/gdrive --allow-other --allow-non-empty --vfs-cache-mode writes</span><br></pre></td></tr></table></figure><p><code>gd</code> 为Rclone的配置名称，比如你在创建配置 rclone 的时候 <code>Name</code> 填的 <code>gd</code>，<code>/home/gdrive</code> 为本地路径（注意空格别漏了）；</p><blockquote><p>这里还可以自定义设置网盘里的文件夹路径，例如：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rclone mount gd:backup /home/gdrive --allow-other --allow-non-empty --vfs-cache-mode writes</span><br></pre></td></tr></table></figure><p><code>gd:backup</code>中<code>gd</code> 为Rclone的配置名称，<code>backup</code> 为网盘里的目录名（注意后面的空格别漏了）</p><h5 id="卸载-Google-Drive-磁盘"><a href="#卸载-Google-Drive-磁盘" class="headerlink" title="卸载 Google Drive 磁盘"></a>卸载 Google Drive 磁盘</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fusermount -qzu /home/gdrive</span><br></pre></td></tr></table></figure><p>挂载只要几秒钟，但终端不会返回成功信息，关闭 SSH 重连即可。</p></blockquote><p>重连后查看是否挂载成功：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">df</span> -h</span><br></pre></td></tr></table></figure><p>有看到 gd，使用量和本本地主机路径即成功挂载：</p><p><img src="https://pic.loll.cc/images/2021/07/26/20210726205521.png" alt="image-20210726205521727"></p><p>接下来设置开机自动挂载，先把 rclone 的可执行文件复制到&#x2F;usr&#x2F;bin：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cp /usr/local/rclone/rclone /usr/bin/rclone</span><br></pre></td></tr></table></figure><p>新建一个&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;rclone.service 文件</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi /usr/lib/systemd/system/rclone.service</span><br></pre></td></tr></table></figure><p>内容为：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=rclone</span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">User=root</span><br><span class="line">ExecStart=/usr/bin/rclone mount gd: /home/gdrive --allow-other --allow-non-empty --vfs-cache-mode writes</span><br><span class="line">Restart=on-abort</span><br><span class="line"> </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>注意修改挂载命令为你主机的路径。</p><p>如果需要挂载多个网盘（比如我还要挂在一个OD），按上面的教程新运行个 Rclone 配置，再新建一个<code>/etc/systemd/system/rclone2.service</code> 文件：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi /etc/systemd/system/rclone2.service</span><br></pre></td></tr></table></figure><p>内容如下：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description = rclone</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">User = root</span><br><span class="line">ExecStart = /usr/bin/rclone mount od_bwg: /home/odrive --copy-links --no-gzip-encoding --no-check-certificate --allow-other --allow-non-empty --<span class="built_in">umask</span> 000</span><br><span class="line">Restart = on-abort</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy = multi-user.target</span><br></pre></td></tr></table></figure><p>如果还有第三个，就以此类推，再新建一个<code>/etc/systemd/system/rclone3.service</code> 文件：</p><p>然后重载 daemon，让新的服务文件生效：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure><p>用 systemctl 来启动 rclone</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl start rclone</span><br><span class="line">systemctl start rclone2  #OD的</span><br></pre></td></tr></table></figure><p>设置开机启动：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl enable rclone</span><br><span class="line">systemctl enable rclone2  #OD的</span><br></pre></td></tr></table></figure><p>停止、查看状态可以用：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl stop rclone</span><br><span class="line">systemctl status rclone</span><br><span class="line"></span><br><span class="line">systemctl stop rclone2  #OD的</span><br><span class="line">systemctl status rclone2  #OD的</span><br></pre></td></tr></table></figure><p>重启你的云主机&#x2F;VPS:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><p>重启后查看一下 rclone 的服务是否启动，GoogleDrive 是否正常挂载</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl status rclone</span><br><span class="line">df -h</span><br></pre></td></tr></table></figure><p><img src="https://pic.loll.cc/images/2021/07/26/20210726210217.png" alt="image-20210726210217711"></p><p>OK ! 完成.</p><hr><h2 id="如何上传、同步"><a href="#如何上传、同步" class="headerlink" title="如何上传、同步"></a>如何上传、同步</h2><p>为什么不直接把文件目录设置成挂载目录？如果直接把文件目录指定到挂载目录，会出现各种莫名其妙的错误，比如：文件无法写入、读取、保存到 Googlr Drive 的文件不完整等等奇葩的问题。</p><p>这里可以用同步命令，本地目录<code>/home/backup</code> 同步到网盘的 <code>backup</code> 目录</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rclone sync /home/backup gd:backup</span><br></pre></td></tr></table></figure><p>相反，把目录调整下，就是把网盘 <code>backup</code> 目录同步到 VPS 目录<code>/home/backup</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rclone sync gd:backup /home/backup</span><br></pre></td></tr></table></figure><p>通过添加此参数<code> --ignore-existing</code> 可以忽略在网盘上已备份的文件，这相当于增量备份</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rclone copy --ignore-existing /home/backup gd:backup</span><br></pre></td></tr></table></figure><p>如果挂载 2 个网盘的话，可以同步配置名 <code>gd2</code> 的网盘里的 <code>backup</code> 目录，到配置名为 gd 的网盘的 <code>backup</code> 目录，反之亦然</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rclone sync gd2:backup gd:backup</span><br></pre></td></tr></table></figure><h2 id="最佳式例"><a href="#最佳式例" class="headerlink" title="最佳式例"></a>最佳式例</h2><h3 id="需求："><a href="#需求：" class="headerlink" title="需求："></a>需求：</h3><p>我想要用rclone命令把本地目录<code>/home/backup</code> 同步到网盘的 <code>rs2000_sync</code>目录，忽略在网盘上已备份的文件，且需要显示同步的进度。</p><h3 id="实现："><a href="#实现：" class="headerlink" title="实现："></a>实现：</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rclone <span class="built_in">sync</span> /home/backup remote:rs2000_sync --progress --ignore-existing</span><br></pre></td></tr></table></figure><p>在这个命令中：</p><ul><li><code>sync</code> 是同步操作。</li><li><code>/home/backup</code> 是要同步的本地目录。</li><li><code>remote:rs2000_sync</code> 是网盘上的目标目录，其中 <code>remote</code> 是您的网盘配置名称（请根据实际情况替换）。</li><li><code>--progress</code> 选项用于显示同步进度。</li><li><code>--ignore-existing</code> 选项用于忽略已经在目标目录中存在的文件。</li></ul><p>请注意，在执行此命令之前，请确保已正确配置rclone以连接到你的网盘服务。如果还没有配置rclone，参考上文配置。</p><p>注意：</p><p><strong>其实，如果没有加<code>--ignore-existing</code>，也不会默认再次上传之前已经存在的文件。</strong></p><p>如果没有加 <code>--ignore-existing</code>，<code>rclone sync</code> 命令会检查源目录和目标目录中的文件。如果目标目录中的文件与源目录中的文件有差异（例如文件内容或文件大小不同），rclone 将更新目标目录中的文件以与源目录保持一致。</p><p><code>rclone sync</code> 会尽力确保目标目录与源目录保持一致。它会复制新增的文件、更新已更改的文件，并删除目标目录中源目录不存在的文件。这意味着，在默认情况下，它不会再次上传已经存在且未更改的文件。</p><p><strong>所以这句命令存在的意义是什么呢，反正不加上也是增量同步？</strong></p><p>来自ChatGPT的回答：</p><p>您是对的，<code>rclone sync</code> 默认执行增量同步，即使不使用<code>--ignore-existing</code> 选项。这个选项在某些特定情况下可能会有用。例如，如果您希望在同步过程中完全跳过目标目录中已存在的文件，而不是检查它们的差异，那么 <code>--ignore-existing</code> 可以加快同步过程。</p><p>在大多数情况下，您不需要使用 <code>--ignore-existing</code> 选项，因为 <code>rclone sync</code> 默认已经非常高效地执行增量同步。使用此选项可能对那些希望避免不必要的文件检查以节省时间或资源的用户有所帮助。</p><p>总之，<code>--ignore-existing</code> 选项的意义在于为用户提供更多的同步选项，以便根据特定需求进行调整。然而，在大多数情况下，不使用这个选项，rclone sync 仍然可以有效地完成增量同步。</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>其他问题可以参考 Rclone 帮助文档 ：<code>https://rclone.org/googlecloudstorage/</code></p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搬瓦工 </tag>
            
            <tag> 大盘鸡 </tag>
            
            <tag> GoogleDrive </tag>
            
            <tag> OneDrive </tag>
            
            <tag> rclone </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【保姆级教程】利用宝塔面板+Docker搭建一个优秀的密码管理器——Bitwarden</title>
      <link href="/archives/bitwarden-docker-install/"/>
      <url>/archives/bitwarden-docker-install/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.laoda.de/i/2022/12/06/mdstrx-2.webp"></p><p>Bitwarden 是一款开源密码管理器，它会将所有密码加密存储在服务器上，它的工作方式与 LastPass、1Password 或 Dashlane 相同。</p><p><img src="https://img.laoda.de/i/2022/12/06/mdtveu-2.webp"></p><p>官方的版本搭建对服务器要求很高，搭建不容易，GitHub上有人用 Rust 实现了 Bitwarden 服务器，项目叫 vaultwarden，并且提供了 Docker 镜像，这个实现更进一步降低了对机器配置的要求，并且 Docker 镜像体积很小，部署非常方便。这个项目目前在GitHub也有9.8k的star，非常受欢迎。</p><p><img src="https://img.laoda.de/i/2022/12/06/mdvwpa-2.webp"></p><p>此外，官方服务器中需要付费订阅的一些功能，在这个实现中是免费的。</p><p><img src="https://img.laoda.de/i/2022/12/06/me5e9e-2.webp"></p><p>这篇文章就利用宝塔面板来docker搭建Bitwarden。</p><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><div style="position: relative; padding: 30% 45%;"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"src="//player.bilibili.com/player.html?aid=589101117&bvid=BV17B4y1N7RM&cid=368235987&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" ></iframe></div><h2 id="一：简介"><a href="#一：简介" class="headerlink" title="一：简介"></a>一：简介</h2><p>项目：<a href="https://github.com/dani-garcia/vaultwarden">https://github.com/dani-garcia/vaultwarden</a></p><h2 id="二：要求"><a href="#二：要求" class="headerlink" title="二：要求"></a>二：要求</h2><ul><li><p>aapanel 6.8.13 （宝塔海外版）</p></li><li><p>一个解析好的域名</p></li><li><p>腾讯轻量云香港服务器 （演示系统：Debian 10）</p></li></ul><h2 id="三：部署"><a href="#三：部署" class="headerlink" title="三：部署"></a>三：部署</h2><h3 id="aapanel安装"><a href="#aapanel安装" class="headerlink" title="aapanel安装"></a>aapanel安装</h3><p>官方地址：<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial</a></p><h4 id="Centos"><a href="#Centos" class="headerlink" title="Centos :"></a>Centos :</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y wget &amp;&amp; wget -O install.sh http://www.aapanel.com/script/install_6.0_en.sh &amp;&amp; bash install.sh</span><br></pre></td></tr></table></figure><h4 id="Ubuntu-Deepin"><a href="#Ubuntu-Deepin" class="headerlink" title="Ubuntu&#x2F;Deepin :"></a>Ubuntu&#x2F;Deepin :</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O install.sh http://www.aapanel.com/script/install-ubuntu_6.0_en.sh &amp;&amp; sudo bash install.sh</span><br></pre></td></tr></table></figure><h4 id="Debian"><a href="#Debian" class="headerlink" title="Debian :"></a>Debian :</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O install.sh http://www.aapanel.com/script/install-ubuntu_6.0_en.sh &amp;&amp; bash install.sh</span><br></pre></td></tr></table></figure><h3 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h3><p>官方地址：<a href="https://docs.docker.com/engine/install/debian/">https://docs.docker.com/engine/install/debian/</a></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/mdnice4/2021-7-11/1625995078163-e319cde0c8a9411da17e64f4d58b0a8d.png"></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sudo apt-get install \</span><br><span class="line">    apt-transport-https \</span><br><span class="line">    ca-certificates \</span><br><span class="line">    curl \</span><br><span class="line">    gnupg \</span><br><span class="line">    lsb-release</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/mdnice4/2021-7-11/1625995096069-dbbc8c0f0b684b69a18ef685cf6e3858.png"></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/mdnice4/2021-7-11/1625995113501-8e470dd3105447c99ea58d1ac8db8d08.png"></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> \</span><br><span class="line">  <span class="string">&quot;deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian \</span></span><br><span class="line"><span class="string">  <span class="subst">$(lsb_release -cs)</span> stable&quot;</span> | sudo <span class="built_in">tee</span> /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/mdnice4/2021-7-11/1625995125851-d575d4b8e85549c1a6671e754bba54d6.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/mdnice4/2021-7-11/1625995140375-76efca34e9344fc58417025502295bab.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo docker run hello-world</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl enable docker #设置docker开机自动启动</span><br><span class="line"></span><br><span class="line">systemctl status docker #查看docker状态</span><br></pre></td></tr></table></figure><h3 id="正式部署"><a href="#正式部署" class="headerlink" title="正式部署"></a>正式部署</h3><p>用Docker来部署，两行命令就够了，命令如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -d --name bitwardenrs \</span><br><span class="line">  --restart unless-stopped \</span><br><span class="line">  -e WEBSOCKET_ENABLED=true \</span><br><span class="line">  -v /www/wwwroot/demo/:/data/ \</span><br><span class="line">  -p 6666:80 \</span><br><span class="line">  -p 3012:3012 \</span><br><span class="line">  vaultwarden/server:latest</span><br></pre></td></tr></table></figure><p>注意：<code>/www/wwwroot/demo/</code> 请修为自己的路径</p><p>安装截图，如下：</p><p><img src="https://img.laoda.de/i/2022/12/06/me8dtg-2.webp"></p><h2 id="四：设置反向代理"><a href="#四：设置反向代理" class="headerlink" title="四：设置反向代理"></a>四：设置反向代理</h2><p>上面的设置好之后，我们还需要设置反向代理才可以打开网站，但是在设置之前，我们需要新建一个站点，并且设置好SSL证书。这些还是用宝塔面板来操作。我们需要把<code>http://127.0.0.1:6666</code>设置反向代理，如图：</p><p><img src="https://img.laoda.de/i/2022/12/06/mea7l0-2.webp"></p><p>代码如下：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">      <span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:6666/;</span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Nginx-Proxy-Manager反代（2023年02月09日添加）"><a href="#Nginx-Proxy-Manager反代（2023年02月09日添加）" class="headerlink" title="Nginx Proxy Manager反代（2023年02月09日添加）"></a>Nginx Proxy Manager反代（2023年02月09日添加）</h3><p>注意域名和IP还有端口改成自己实际使用的。</p><p><img src="http://img.laoda.de/i/2023/02/09/p4ecol-2.webp" alt="vaultwarden1"></p><p>这边可以全部打勾。</p><p><img src="http://img.laoda.de/i/2023/02/09/p4g729-2.webp" alt="vaultwarden2"></p><p>这边直接复制反代的部分到<code>Advanced</code> （这里包含了下面自动同步的部分）</p><p><img src="http://img.laoda.de/i/2023/02/09/p4hmug-2.webp" alt="vaultwarden3"></p><p>代码如下：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> /admin &#123;</span><br><span class="line">  <span class="attribute">return</span> <span class="number">404</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="section">location</span> /notifications/hub &#123;</span><br><span class="line">    <span class="attribute">proxy_pass</span> http://127.0.0.1:3012;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> Connection <span class="string">&quot;upgrade&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="section">location</span> /notifications/hub/negotiate &#123;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">    <span class="attribute">proxy_pass</span> http://127.0.0.1:6666;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>同样地，<code>http://127.0.0.1:3012</code>以及 <code>http://127.0.0.1:6666</code>注意改成你自己的IP和端口。</p><h2 id="五：登录Bitwarden"><a href="#五：登录Bitwarden" class="headerlink" title="五：登录Bitwarden"></a>五：登录Bitwarden</h2><p>设置好反向代理之后，我们就可以打开站点，如图：</p><p><img src="https://img.laoda.de/i/2022/12/06/meb7zj-2.webp"></p><p>注意：创建账号，需要在开启了ssl证书的情况下才会成功。</p><p>注册账号后，就可以用这个账号来登录Bitwarden了，如图：</p><p><img src="https://img.laoda.de/i/2022/12/06/mecrdh-2.webp"></p><h2 id="六：配置"><a href="#六：配置" class="headerlink" title="六：配置"></a>六：配置</h2><p>因为现在的状态是所有人都可以注册这个网站，这个东西只是自己使用，所以我们需要关闭掉注册，使用下面的命令。使用之前可以在宝塔面板中删除掉之前的容器，然后运行以下命令来重新创建容器并开启禁止用户注册的功能。</p><p>不必担心，因为指定了 volume 映射，删除容器后不会删除数据。<code>SIGNUPS_ALLOWED=false</code> 代表禁止注册！</p><h3 id="6-1、禁用新用户的注册"><a href="#6-1、禁用新用户的注册" class="headerlink" title="6.1、禁用新用户的注册"></a>6.1、禁用新用户的注册</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker stop bitwardenrs  #停止容器</span><br><span class="line">docker rm -f bitwardenrs  #删除容器</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -d --name bitwardenrs \</span><br><span class="line">  --restart unless-stopped \</span><br><span class="line">  -e SIGNUPS_ALLOWED=false \</span><br><span class="line">  -e WEBSOCKET_ENABLED=true \</span><br><span class="line">  -v /www/wwwroot/demo/:/data/ \</span><br><span class="line">  -p 6666:80 \</span><br><span class="line">  -p 3012:3012 \</span><br><span class="line">  vaultwarden/server:latest</span><br></pre></td></tr></table></figure><p> 运行完在容器列表里就又可以重新看到了，然后再去试下创建账号就会出现一个不能创建账号的错误提示：</p><p><img src="https://img.laoda.de/i/2022/12/06/meeyxu-2.webp"></p><h2 id="七：设置自动同步"><a href="#七：设置自动同步" class="headerlink" title="七：设置自动同步"></a>七：设置自动同步</h2><p>bitwarden 默认是不会自动同步的，不管你是添加或者删除又或是修改了一条记录，都只是先保存在本地，只有当你手动点一下同步时才会进行同步。此时我们可以打开 WebSockets notifications 功能，这样手机修改后会立刻自动同步到云端。所以，我们还需要上面的反向代理。</p><p>打开网站配置文件，直接复制过去就可以了。（可以把前面第四步的反向代理那段替换掉）</p><p><img src="https://img.laoda.de/i/2022/12/06/megvft-2.webp"></p><p>注意把<code>6666</code>改成你自己的端口：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://127.0.0.1:6666;</span><br><span class="line">        <span class="attribute">proxy_http_version</span>    <span class="number">1</span>.<span class="number">1</span>;</span><br><span class="line">        <span class="attribute">proxy_cache_bypass</span>    <span class="variable">$http_upgrade</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Upgrade            <span class="variable">$http_upgrade</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Connection         <span class="string">&quot;upgrade&quot;</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Host               <span class="variable">$host</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Real-IP          <span class="variable">$remote_addr</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-For    <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-Proto  <span class="variable">$scheme</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-Host   <span class="variable">$host</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-Port   <span class="variable">$server_port</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="section">location</span> /notifications/hub &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://127.0.0.1:3012;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Connection <span class="string">&quot;upgrade&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="section">location</span> /notifications/hub/negotiate &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://127.0.0.1:6666;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># # Optionally add extra authentication besides the AUTH_TOKEN （除了AUTH_TOKEN之外，可以选择添加额外的认证。）</span></span><br><span class="line">    <span class="comment"># # If you don&#x27;t want this, leave this part out 如果你想用的话，可以把这部分注释取消</span></span><br><span class="line">    <span class="comment"># location /admin &#123;</span></span><br><span class="line">    <span class="comment"># # See: https://docs.nginx.com/nginx/admin-guide/security-controls/configuring-http-basic-authentication/</span></span><br><span class="line">    <span class="comment"># auth_basic &quot;Private&quot;;</span></span><br><span class="line">    <span class="comment"># auth_basic_user_file /path/to/htpasswd_file;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># proxy_set_header Host $host;</span></span><br><span class="line">    <span class="comment"># proxy_set_header X-Real-IP $remote_addr;</span></span><br><span class="line">    <span class="comment"># proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span></span><br><span class="line">    <span class="comment"># proxy_set_header X-Forwarded-Proto $scheme;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># proxy_pass http://&lt;SERVER&gt;:6666;</span></span><br><span class="line">    <span class="comment"># &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 加入robots.txt 防止搜索引擎爬虫抓取（可选）</span></span><br><span class="line">    <span class="comment"># location = /robots.txt &#123;</span></span><br><span class="line">    <span class="comment">#     root /www/wwwroot/bitwarden;</span></span><br><span class="line">    <span class="comment"># &#125;</span></span><br></pre></td></tr></table></figure><p>如果你需要<code>robots.txt</code>，可以取消注释（把代码前面的<code>#</code>去掉即可）咕咕这边提供一下<code>robots.txt</code>的内容，<code>/www/wwwroot/bitwarden</code>这个地址取决于你的<code>robots.txt</code>的位置。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Disallow: /</span><br></pre></td></tr></table></figure><h2 id="八：下载客户端"><a href="#八：下载客户端" class="headerlink" title="八：下载客户端"></a>八：下载客户端</h2><p>登录Bitwarden，在右上角点击头像，然后点击【获取应用】，如图：</p><p><img src="https://img.laoda.de/i/2022/12/06/mer8ub-2.webp"></p><p>我们看到，基本所有都支持了，</p><p><img src="https://img.laoda.de/i/2022/12/06/met2vb-2.webp"></p><p>用chrome插件来演示一下。如图：</p><p><img src="https://img.laoda.de/i/2022/12/06/meurmt-2.webp"></p><p>点击小齿轮，输入我们搭建的网站地址：</p><p><img src="https://img.laoda.de/i/2022/12/06/mewhq4-2.webp"></p><p>保存登陆即可。</p><p><img src="https://img.laoda.de/i/2022/12/06/mexpqo-2.webp"></p><p><img src="https://img.laoda.de/i/2022/12/06/mez0se-2.webp"></p><p>自动生成密码展示：</p><p><img src="https://img.laoda.de/i/2022/12/06/mf0pd0-2.webp"></p><p>小纸条功能展示：</p><p><img src="https://img.laoda.de/i/2022/12/06/mf28p5-2.webp"></p><p><img src="https://img.laoda.de/i/2022/12/06/mfcuv0-2.webp"></p><p>同理，手机端也一样操作即可。</p><p>这样我们使用Chrome也可以方便的管理自己的密码了，最重要的是Bitwarden完全开源，完全免费。</p><h2 id="十：总结"><a href="#十：总结" class="headerlink" title="十：总结"></a>十：总结</h2><p>目前比较流行的密码管理软件有 1Password、LastPass 、KeePass、Enpass以及SafeInCloud等，但是完全免费开源的只有Bitwarden。我们只需要借助Docker就可以很容易搭建一个自己的密码管理平台。</p><p>bitwarden优点：全平台，免费、开源，在安卓上体验很好，有多种双重验证，自动填充功能正常，有密码泄露检测，适应大部分 APP，可以自定义字段，可以正则匹配网址，可以自定义图标，会根据网址或 APP 自动获取 ico，可以指纹解锁，中文翻译很好。</p><p>咕咕鸽也是才开始使用，对这个工具还不是非常熟悉，欢迎大家在评论区和本鸽分享一下它的其他好玩的功能！</p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul><li><p><a href="https://www.daniao.org/7213.html">https://www.daniao.org/7213.html</a></p></li><li><p><a href="https://github.com/dani-garcia/vaultwarden">https://github.com/dani-garcia/vaultwarden</a></p></li><li><p><a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial</a></p></li><li><p><a href="https://docs.docker.com/engine/install/debian/">https://docs.docker.com/engine/install/debian/</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 宝塔面板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 宝塔面板 </tag>
            
            <tag> 腾讯云香港轻量服务器 </tag>
            
            <tag> 密码管理 </tag>
            
            <tag> Bitwarden </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何给BuyVM添加存储块？</title>
      <link href="/archives/buyvm-mount/"/>
      <url>/archives/buyvm-mount/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>买了BuyVM，一般的用途都是做离线下载用的，往往也会购买一个储存块（当然也可以购买多个），不过，BuyVM的存储块是需要自己挂载的，下面和大家分享一下挂载的方法。</p><p>原作者@<a href="https://hostloc.com/space-uid-50129.html">冲浪麦浪花郎</a>，也感谢之前热心帮忙解决了kurun硬盘挂载的小问题。</p><h2 id="开始操作"><a href="#开始操作" class="headerlink" title="开始操作"></a>开始操作</h2><p><img src="https://pic.loll.cc/images/2021/07/09/20210709103114.png" alt="img"></p><p><img src="https://pic.loll.cc/images/2021/07/09/20210709103122.png" alt="img"></p><p>上图是展示下面操作出现的结果，请参照自己的存储块修改相应数值即可（storage也就是256g 作两遍忘了录屏看下文命令修改即可）</p><h3 id="1、罗列分区表检查是否存储卷在内"><a href="#1、罗列分区表检查是否存储卷在内" class="headerlink" title="1、罗列分区表检查是否存储卷在内"></a>1、罗列分区表检查是否存储卷在内</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fdisk -l</span><br></pre></td></tr></table></figure><h3 id="2、查看数据块编号（也可以在邮箱或者BVM客户面板找到）"><a href="#2、查看数据块编号（也可以在邮箱或者BVM客户面板找到）" class="headerlink" title="2、查看数据块编号（也可以在邮箱或者BVM客户面板找到）"></a>2、查看数据块编号（也可以在邮箱或者BVM客户面板找到）</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> /dev/disk/by-id/</span><br></pre></td></tr></table></figure><h3 id="3、被涂抹橘色就是你的分区卷编号（在下面的中文替换成你自己的数值）进行格式化"><a href="#3、被涂抹橘色就是你的分区卷编号（在下面的中文替换成你自己的数值）进行格式化" class="headerlink" title="3、被涂抹橘色就是你的分区卷编号（在下面的中文替换成你自己的数值）进行格式化"></a>3、被涂抹橘色就是你的分区卷编号（在下面的中文替换成你自己的数值）进行格式化</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkfs.ext4 -F /dev/disk/by-id/scsi-0BUYVM_SLAB_VOLUME-这串中文改对应存储卷数值</span><br></pre></td></tr></table></figure><h3 id="4、创建文件夹-可以是数字英文不要使用中文，推荐使用卷的尺寸命名如256g-512g-1024g方便后续文件存放记"><a href="#4、创建文件夹-可以是数字英文不要使用中文，推荐使用卷的尺寸命名如256g-512g-1024g方便后续文件存放记" class="headerlink" title="4、创建文件夹 可以是数字英文不要使用中文，推荐使用卷的尺寸命名如256g 512g 1024g方便后续文件存放记"></a>4、创建文件夹 可以是数字英文不要使用中文，推荐使用卷的尺寸命名如256g 512g 1024g方便后续文件存放记</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /这串中文改成你要命名盘符文件名    <span class="comment">#比如/storage256,/storage512,因为可能后续你会挂载很多块硬盘</span></span><br></pre></td></tr></table></figure><h3 id="5、挂载这个存储块到你这个vps小鸡上（好把给新硬盘装载成电脑盘符）"><a href="#5、挂载这个存储块到你这个vps小鸡上（好把给新硬盘装载成电脑盘符）" class="headerlink" title="5、挂载这个存储块到你这个vps小鸡上（好把给新硬盘装载成电脑盘符）"></a>5、挂载这个存储块到你这个vps小鸡上（好把给新硬盘装载成电脑盘符）</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mount -o discard,defaults /dev/disk/by-id/scsi-0BUYVM_SLAB_VOLUME-这串中文改对应存储卷数值 /这串中文改成你要命名盘符文件名</span><br></pre></td></tr></table></figure><h3 id="6、设置开机-重启自动挂载（避免关机后不挂载）"><a href="#6、设置开机-重启自动挂载（避免关机后不挂载）" class="headerlink" title="6、设置开机&#x2F;重启自动挂载（避免关机后不挂载）"></a>6、设置开机&#x2F;重启自动挂载（避免关机后不挂载）</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;/dev/disk/by-id/scsi-0BUYVM_SLAB_VOLUME-这串中文改对应存储卷数值 /这串中文改成你要命名盘符文件名 ext4 defaults,nofail,discard 0 0&#x27;</span> | sudo <span class="built_in">tee</span> -a /etc/fstab</span><br></pre></td></tr></table></figure><h3 id="7、列出所有可用块设备的信息"><a href="#7、列出所有可用块设备的信息" class="headerlink" title="7、列出所有可用块设备的信息"></a>7、列出所有可用块设备的信息</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsblk</span><br></pre></td></tr></table></figure><img src="https://pic.loll.cc/images/2021/07/09/20210709103906.png" alt="image-20210709103905880" style="zoom: 50%;" /><h3 id="8、显示磁盘占用情况和对应块根目录"><a href="#8、显示磁盘占用情况和对应块根目录" class="headerlink" title="8、显示磁盘占用情况和对应块根目录"></a>8、显示磁盘占用情况和对应块根目录</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">df</span> -h</span><br></pre></td></tr></table></figure><img src="https://pic.loll.cc/images/2021/07/09/20210709103925.png" alt="image-20210709103925334" style="zoom:50%;" /><h3 id="9、宝塔端查看效果"><a href="#9、宝塔端查看效果" class="headerlink" title="9、宝塔端查看效果"></a>9、宝塔端查看效果</h3><p>安装宝塔后，可以看到已经成功挂载上了。</p><img src="https://pic.loll.cc/images/2021/07/09/20210709104015.png" alt="image-20210709104014996" style="zoom:50%;" /><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>宝塔默认是安装到<code>www</code>目录下的。</p><ul><li><p>如果你先安装了宝塔，然后把存储块挂载到<code>/www</code>上，会导致宝塔无法启动；</p></li><li><p>如果先创建了<code>www</code>的文件夹，然后挂载，最后装宝塔，原先的挂载貌似会消失。</p></li></ul><p>所以，还是建议:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /这串中文改成你要命名盘符文件名    <span class="comment">#比如/storage256,/storage512,因为可能后续你会挂载很多块硬盘</span></span><br></pre></td></tr></table></figure><p>然后挂载到<code>/storage256</code> ,<code>/storage512</code>下面。</p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BuyVM </tag>
            
            <tag> 大盘鸡 </tag>
            
            <tag> frantech </tag>
            
            <tag> 硬盘挂载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何给BuyVM添加IPv6？</title>
      <link href="/archives/buyvm-ipv6/"/>
      <url>/archives/buyvm-ipv6/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>之前给大家推荐了BuyVM家的机子，支付宝付款只要月付大概16美元，就能得到一台不限流量，G口带宽，256G硬盘的大盘鸡了，非常适合喜欢离线下载的小伙伴。</p><p>因为BuyVM是送了IPv6的，不过需要自己手动添加，群里之前有小伙伴在添加过程中遇到了问题，所以这篇帖子就来简单教大家怎么操作。</p><h2 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h2><ul><li>Debian 10 （Ubuntu16也可以）</li></ul><h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><p>首先登陆后台，点击<code>Networking</code></p><img src="https://pic.loll.cc/images/2021/07/09/20210709094717.png" alt="image-20210709094717503" style="zoom:50%;" /><p>选择<code>IPv6</code>，添加IPv6，</p><img src="https://pic.loll.cc/images/2021/07/09/20210709094844.png" alt="image-20210709094844078" style="zoom:50%;" /><p>点击右边的这个小按钮，随机生成一个IPv6的地址，</p><img src="https://pic.loll.cc/images/2021/07/09/20210709094934.png" alt="image-20210709094934452" style="zoom:50%;" /><p>注意这边把IPv6的开关打开，然后点击右边的这个小齿轮，</p><img src="https://pic.loll.cc/images/2021/07/09/20210709095021.png" alt="image-20210709095021421" style="zoom:50%;" /><p>这边能看到我们刚才设置的IPv6地址，我们还需要复制下这边的<code>Netmask/Bitmask</code>和<code>Gateway</code>，</p><img src="https://pic.loll.cc/images/2021/07/09/20210709095054.png" alt="image-20210709095054173" style="zoom:50%;" /><p>接着，来到命令行，通过SSH连接上服务器，编辑<code>/etc/network/interfaces</code>，</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo nano /etc/network/interfaces </span><br></pre></td></tr></table></figure><p>在文件末尾手动写入地址配置：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">iface eth0 inet6 static</span><br><span class="line">        address 分配的IPv6地址（全）</span><br><span class="line">        netmask 查询到的位掩码（一般是48）</span><br><span class="line">        gateway 查询到的IPv6网关地址</span><br></pre></td></tr></table></figure><img src="https://pic.loll.cc/images/2021/07/09/20210709095826.png" alt="image-20210709095826649" style="zoom:50%;" /><p>然后重启一下，</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo reboot</span><br></pre></td></tr></table></figure><p>重新登陆后，检测IPv6是否生效，输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ping ipv6.google.com</span><br></pre></td></tr></table></figure><img src="https://pic.loll.cc/images/2021/07/09/20210709100156.png" alt="image-20210709100156353" style="zoom:50%;" /><p>同样，我们输入<code>ping ipv4.google.com</code>看看：</p><img src="https://pic.loll.cc/images/2021/07/09/20210709100243.png" alt="image-20210709100243109" style="zoom:50%;" /><p>至此，我们的BuyVM已经是IPv4+IPv6的了。</p><img src="https://pic.loll.cc/images/2021/07/09/20210709100422.png" alt="image-20210709100422289" style="zoom:50%;" />]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BuyVM </tag>
            
            <tag> IPv6 </tag>
            
            <tag> frantech </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用 IFTTT 实现 Blog 更新时自动发推</title>
      <link href="/archives/autopost-to-twitter/"/>
      <url>/archives/autopost-to-twitter/</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/mdnice4/2021-6-28/1624855444947-e9f64427359043149ad8213ae9f1b8bb.png"></p><p>Blog自动更新后，TG频道已经能实现自动推送文章了，听说社媒上也可以实现，这就来试试。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/mdnice4/2021-6-28/1624855273645-6ebf34a86b294346ad77c9787f2691ae.png"></p><p>原理上很简单。我们利用 IFTTT 监听 Blog 的 RSS，一旦有新内容就推送到 Twitter 上。下面是详细配置：</p><ul><li>打开<a href="https://ifttt.com/applets/"> IFTTT - My Applets</a>，登录账号，点击 <code>Create</code></li></ul><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/mdnice4/2021-6-28/1624855287216-b42cf40ca813446aa35be178608d69ba.png"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/mdnice4/2021-6-28/1624855300873-b31d23487d3f4b22ab93775394224c8f.png"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/mdnice4/2021-6-28/1624855316485-5fda96565ff7416682e2374107a8738a.png"></p><ul><li>“this” 中选择 <code>RSS Feed </code>&gt; <code>New feed item</code>，填入你 Blog 的 RSS 地址（比如本 Blog 的地址是 <a href="https://blog.laoda.de/feed%EF%BC%89">https://blog.laoda.de/feed）</a></li></ul><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/mdnice4/2021-6-28/1624855335739-852cec9007e04ecca38006ab7b30e042.png"></p><ul><li>“that” 中选择 <code>Twitter &gt; Post a tweet</code>，编辑一下 <code>Tweet text</code></li></ul><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/mdnice4/2021-6-28/1624855349990-c4fee05672e74190844f2648ee8aa7f3.png"></p><ul><li>点击 <code>Create action</code> &gt;<code> Finish</code>，完成</li></ul><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/mdnice4/2021-6-28/1624855362415-158815d2a1ca4c19b1ad4c5e364d4eea.png"></p><p>之后 Blog 的更新就会自动推送到 Twitter 上了~</p><p>这篇文章就是测试。</p><p>感谢@steven <a href="https://blog.hly0928.com/post/post-blog-updates-to-twitter-using-ifttt/">https://blog.hly0928.com/post/post-blog-updates-to-twitter-using-ifttt/</a></p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IFTTT </tag>
            
            <tag> 自动发布 </tag>
            
            <tag> 博客相关 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用Docker自建个人音乐流服务器面板——koel</title>
      <link href="/archives/docker-install-koel/"/>
      <url>/archives/docker-install-koel/</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/mdnice4/2021-6-28/1624851753729-79d8f06f122948e78d83c0e6a64883ba.png"></p><p>这个项目放在现在，可能有些太小众，毕竟现在哪里不能听歌呢？</p><p>不过，我个人认为，它还是有用的。</p><p>1、由于现在各大音乐平台的版权考虑，许多歌我在一个平台听不了，往往需要切换多个平台来听，比较麻烦，切APP的同时，还会有一段讨厌的5s广告，非常地影响心情。</p><p>2、我有一些私藏的歌，现在网上根本搜索不到（逼哥的歌，童话镇之类的），而且音质也很高，有了koel，那么到哪里都能听到这些自己喜欢的歌曲清单了，只要手机可以上网，那么随处可以连接自己的服务器来听歌，因为koel是个强大的音乐播放器。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/mdnice4/2021-6-28/1624851773248-8e3d3da6a55741d881b502f08953c4b3.png"></p><p>所以，如果你也有上面的需求，不妨可以搭一个这个项目来玩玩。</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>这个项目其实是3年前的了，不过现在还在更新中，为了方便起见，我这边利用docker来搭建，省时省力。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/mdnice4/2021-6-28/1624851785059-57c7a061ec814c4ca46c82e06eae5b53.png"></p><p><strong>项目官方文档：</strong> <a href="https://docs.koel.dev/">https://docs.koel.dev/</a></p><p>koel搭建完成之后，就是<code>ip+端口</code>访问的，由于我本人比较喜欢反向代理一些<code>ip+端口</code>的网站，但在koel上，如果用了官方的image却发现行不通，原因是：</p><blockquote><p>The existing setup led to mixed content errors&#x2F;requests which prevented any of the pages from loading as the connection from the reverse proxy to the Apache web server in the container was unencrypted.</p></blockquote><p>国外一个小哥也发现了这个问题，所以他自己在原来的image基础上修改了一下，增加了反代的支持，所以，我们今天就用这个image来部署。</p><p><strong>Docker 镜像地址：</strong> <a href="https://hub.docker.com/r/nairvish/docker-koel/">https://hub.docker.com/r/nairvish/docker-koel/</a></p><h2 id="环境介绍"><a href="#环境介绍" class="headerlink" title="环境介绍"></a>环境介绍</h2><ul><li>CentOS 7</li><li>宝塔面板安装好LNMP</li></ul><h2 id="开始部署"><a href="#开始部署" class="headerlink" title="开始部署"></a>开始部署</h2><h3 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h3><p><strong>方法一：</strong> 可以安装官方文档来安装</p><p><a href="https://docs.docker.com/engine/install/centos/">https://docs.docker.com/engine/install/centos/</a></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/mdnice4/2021-6-28/1624851807428-feef37122094481c8ece239f45a516b7.png"></p><p><strong>方法二：</strong> 一健安装脚本</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com/ | sh</span><br></pre></td></tr></table></figure><h3 id="安装Docker-Compose"><a href="#安装Docker-Compose" class="headerlink" title="安装Docker Compose"></a>安装Docker Compose</h3><p><strong>官方文档：</strong> <a href="https://docs.docker.com/compose/install/">https://docs.docker.com/compose/install/</a></p><p>CentOS 7 安装：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/1.29.2/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose --version</span><br></pre></td></tr></table></figure><p>如果显示版本号，则说明安装成功了。</p><p><code>docker-compose version 1.29.2, build 1110ad01</code></p><h3 id="配置Docker-compose"><a href="#配置Docker-compose" class="headerlink" title="配置Docker-compose"></a>配置Docker-compose</h3><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/mdnice4/2021-6-28/1624851827817-3a107e2382714b188b6e53397920832e.png"></p><p>首先到<code>/opt</code>目录下新建一个<code>docker-compose.yml</code>文件</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> docker-compose.yml</span><br></pre></td></tr></table></figure><p>编辑<code>docker-compose.yml</code>，</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi docker-compose.yml</span><br></pre></td></tr></table></figure><p>也可以在这边打开，</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/mdnice4/2021-6-28/1624851867801-6c2672e3a1a845948df96bea919d207d.png"></p><p>粘入下面的内容：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">version: &#x27;3.4&#x27;</span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  koel:</span><br><span class="line">    image: nairvish/docker-koel</span><br><span class="line">    container_name: &quot;koel_base&quot;</span><br><span class="line">    restart: always</span><br><span class="line">    depends_on:</span><br><span class="line">      - database</span><br><span class="line">    ports:</span><br><span class="line">      - 3006:80</span><br><span class="line">    environment:</span><br><span class="line">      DB_CONNECTION: mysql</span><br><span class="line">      DB_HOST: database</span><br><span class="line">      DB_USERNAME: koel</span><br><span class="line">      DB_PASSWORD: koel</span><br><span class="line">      DB_DATABASE: koel</span><br><span class="line">      IGNORE_DOT_FILES: &#x27;true&#x27;</span><br><span class="line">      APP_ENV: production</span><br><span class="line">      APP_DEBUG: &#x27;true&#x27;</span><br><span class="line">      APP_URL: https://koel.domain.tld</span><br><span class="line">      APP_MAX_SCAN_TIME: 600</span><br><span class="line">      MEMORY_LIMIT: 2048</span><br><span class="line">      STREAMING_METHOD: php</span><br><span class="line">      FFMPEG_PATH: /usr/local/bin/ffmpeg</span><br><span class="line">      OUTPUT_BIT_RATE: 256</span><br><span class="line">      ALLOW_DOWNLOAD: &#x27;true&#x27;</span><br><span class="line">      CACHE_MEDIA: &#x27;true&#x27;</span><br><span class="line">      APP_LOG_LEVEL: debug</span><br><span class="line">      BROADCAST_DRIVER: log</span><br><span class="line">      CACHE_DRIVER: file</span><br><span class="line">      SESSION_DRIVER: file</span><br><span class="line">      QUEUE_DRIVER: sync</span><br><span class="line">      MAIL_DRIVER: smtp</span><br><span class="line">      MAIL_HOST: smtp.mailserver.tld</span><br><span class="line">      MAIL_PORT: 465</span><br><span class="line">      MAIL_USERNAME: koel@mailserver.tld</span><br><span class="line">      MAIL_PASSWORD: password</span><br><span class="line">      MAIL_ENCRYPTION: tls</span><br><span class="line">      ## LAST.FM config ##</span><br><span class="line">      # LASTFM_API_KEY=</span><br><span class="line">      # LASTFM_API_SECRET=</span><br><span class="line">      ## YOUTUBE config ##</span><br><span class="line">      # YOUTUBE_API_KEY=</span><br><span class="line">      ## PUSHER config ##</span><br><span class="line">      # PUSHER_APP_ID=</span><br><span class="line">      # PUSHER_APP_KEY=</span><br><span class="line">      # PUSHER_APP_SECRET=</span><br><span class="line">      # PUSHER_APP_CLUSTER=</span><br><span class="line">    volumes:</span><br><span class="line">      - /opt/music:/music</span><br><span class="line">      - /opt/music/covers:/var/www/html/public/img/covers</span><br><span class="line"></span><br><span class="line">  database:</span><br><span class="line">    image: mysql/mysql-server:5.7</span><br><span class="line">    container_name: &quot;koel_mysql&quot;</span><br><span class="line">    restart: always</span><br><span class="line">    volumes:</span><br><span class="line">      - db:/var/lib/mysql</span><br><span class="line">    environment:</span><br><span class="line">      MYSQL_ROOT_PASSWORD: password</span><br><span class="line">      MYSQL_DATABASE: koel</span><br><span class="line">      MYSQL_USER: koel</span><br><span class="line">      MYSQL_PASSWORD: koel</span><br><span class="line"></span><br><span class="line">volumes:</span><br><span class="line">  db:</span><br><span class="line">    driver: local</span><br><span class="line"></span><br><span class="line">  music:</span><br><span class="line">    driver: local</span><br><span class="line"></span><br><span class="line">  covers:</span><br><span class="line">    driver: local</span><br></pre></td></tr></table></figure><p>我这边端口是<code>3006</code>，文件路径是<code>/opt/music</code>和<code>/opt/music/covers</code>，大家可以自行修改，为避免出错，也可以和我一样。</p><h3 id="修改Nginx设置"><a href="#修改Nginx设置" class="headerlink" title="修改Nginx设置"></a>修改Nginx设置</h3><p>宝塔上新建一个站点，不会的可以看这里：<br><a href="https://blog.laoda.de/archives/tinytinyrss#toc-head-8">配置nginx反向代理</a></p><p>注释掉53-65行的内容，</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/mdnice4/2021-6-28/1624851889563-a2d34aad674d4d35a216c29e0e574d21.png"></p><p>在之后添加下面的字段，</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/mdnice4/2021-6-28/1624851923435-5c0944c2842b427d8b61979bb6f02248.png"></p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">    <span class="section">location</span> / &#123;</span><br><span class="line">   <span class="attribute">proxy_pass</span> https://127.0.0.1:3006;</span><br><span class="line"> <span class="comment"># 如果是本机直接复制就行，如果是别的机器，记得换成你的ip地址</span></span><br><span class="line">   <span class="attribute">proxy_set_header</span> X-Forwarded-Host <span class="variable">$server_name</span>;</span><br><span class="line">   <span class="attribute">proxy_set_header</span> X-Forwarded-Server <span class="variable">$host</span>;</span><br><span class="line">   <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">   <span class="attribute">proxy_set_header</span>   Host <span class="variable">$host</span>;</span><br><span class="line">   <span class="attribute">proxy_set_header</span>   X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">   <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line"></span><br><span class="line">   <span class="comment"># Not sure if these next two lines are needed. I did not remove them as</span></span><br><span class="line">   <span class="comment"># I did not want risk breaking my working configuration. Just remember</span></span><br><span class="line">   <span class="comment"># to replace &quot;koel.domain.tld&quot; with your instance&#x27;s domain.</span></span><br><span class="line">   <span class="attribute">sub_filter</span> <span class="string">&quot;http://koel.domain.tld&quot;</span> <span class="string">&quot;https://koel.domain.tld&quot;</span>;</span><br><span class="line">   <span class="attribute">sub_filter_once</span> <span class="literal">off</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意<code>proxy_pass https://127.0.0.1:3006;</code> 这边换成你实际的配置。</p><p>如果是在本机配置的反向代理直接复制就行，如果是别的机器，记得把<code>127.0.0.1</code>换成你docker部署机子的ip地址。</p><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>（注意在docker-compose.yml的目录下运行）</p><p>接着就会拉去一系列的镜像，可能会多花一点时间，耐心等待，等到出现下面的<code>done</code>就表示成功了（注意在<code>docker-compose.yml</code>的目录下运行）</p><p><strong>注：</strong> 阿里、腾讯、华为等服务器，记得去后台安全组或者防火墙打开相应端口，我们这边是<code>3006</code></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/mdnice4/2021-6-28/1624851956272-d7c4ed3b62b4426e9ff1de69e394be68.png"></p><p>运行<code>docker ps</code>，已经看到成功启动的容器了。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/mdnice4/2021-6-28/1624851970427-2fdb7acc76a743b48f8335120972eb43.png"></p><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it koel_base php artisan koel:init</span><br></pre></td></tr></table></figure><p>（<code>koel_base</code>是容器的名字）</p><p>按提示输入信息就行，</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/mdnice4/2021-6-28/1624851985760-de17f4b8a8c547e29d37f9cc97043628.png"></p><h3 id="登陆"><a href="#登陆" class="headerlink" title="登陆"></a>登陆</h3><p>之后输入你前面的信息，就可以正常登陆了。</p><p>浏览器访问：<code>https://你的域名</code></p><h3 id="上传音乐"><a href="#上传音乐" class="headerlink" title="上传音乐"></a>上传音乐</h3><p>以文本为例子，上传音乐到<code>/opt/music</code>文件夹下</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/mdnice4/2021-6-28/1624852006888-c2d72363c2db42f2af2999d4765cbd66.png"></p><p>这边视服务器的性能，上传的速度可能快慢不一，我这边的服务器是iON的，68美元&#x2F;年的洛杉矶款，上传平均在4M&#x2F;s左右。</p><p><strong>购买地址：</strong> <a href="https://loll.cc/iON">https://loll.cc/iON</a></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/mdnice4/2021-6-28/1624852021961-9187a85861604dcbbf228b78cc6f5565.png"></p><p>当然也可以选择之前一直说过性价比比较高的腾讯云轻量应用服务器，不过貌似最近缺货比较严重。</p><p><strong>腾讯云轻量购买地址：</strong> <a href="https://loll.cc/tx">https://loll.cc/tx</a></p><p>登陆之后，填上<code>/music</code>，点击扫描，</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/mdnice4/2021-6-28/1624852041805-ed003dffeb9a4a96aa73d8dbc6f667bb.png"></p><p>过一会儿，就自动扫描出了歌曲，可以随时随地，愉快地听起来了。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/mdnice4/2021-6-28/1624852052660-6a97f66d3b6241018b2b695120b054e6.png"></p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>大家有问题可以在评论区提出来，同时大家有好听的音乐，也欢迎分享～</p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> 网站搭建 </tag>
            
            <tag> 音乐播放 </tag>
            
            <tag> 咪咕音乐 </tag>
            
            <tag> QQ音乐 </tag>
            
            <tag> Koel </tag>
            
            <tag> 网易云 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【高性价比VPS推荐】——那些年，我用过的VPS们（持续更新中）</title>
      <link href="/archives/vps-recommad/"/>
      <url>/archives/vps-recommad/</url>
      
        <content type="html"><![CDATA[<p>先简单列一个表哥，之后会继续补充细节 :)</p><h3 id="几个注意点："><a href="#几个注意点：" class="headerlink" title="几个注意点："></a>几个注意点：</h3><ul><li><p>有注册充值领取美金的（比如<a href="https://loll.cc/vultr"><strong>Vultr</strong></a> ），记得一定得点击下面的链接注册才能领取！</p></li><li><p>部分VPS比较火爆（比如<a href="https://loll.cc/buyvm"><strong>BuyVM</strong></a>），可能会处于缺货状态，墙裂建议大家先点击链接注册账号，之后有货了可以第一时间买到，免去填写用户信息的过程。</p></li></ul><table><thead><tr><th align="left">VPS 商家</th><th align="left">最低价格</th><th align="left">支付方式</th><th align="left">特点</th></tr></thead><tbody><tr><td align="left"><a href="https://loll.cc/bwg">搬瓦工</a></td><td align="left">$49.99&#x2F;季</td><td align="left"><strong>支付宝</strong>、<strong>微信</strong>、PayPal、信用卡</td><td align="left">极速 <strong>CN2 GIA</strong> 企业级高端线路</td></tr><tr><td align="left"><a href="https://loll.cc/vultr">Vultr</a></td><td align="left">$2.5&#x2F;月</td><td align="left"><strong>支付宝</strong>、<strong>微信</strong>、PayPal、Bitcoin</td><td align="left"><a href="https://loll.cc/vultr">注册送 100 美元</a>，有效期30天，按时计费，随用随删</td></tr><tr><td align="left"><a href="https://loll.cc/cc">Cloudcone</a></td><td align="left">$1.99&#x2F;月</td><td align="left"><strong>支付宝</strong>、PayPal、信用卡</td><td align="left">按时计费，随用随删</td></tr><tr><td align="left"><a href="https://loll.cc/buyvm">BuyVM</a></td><td align="left">$2&#x2F;月 （加拿大币）¥10&#x2F;月</td><td align="left"><strong>支付宝</strong>、PayPal、信用卡、Bitcoin</td><td align="left">低价、<strong>无限流量</strong>、大盘鸡</td></tr><tr><td align="left"><a href="https://blog.laoda.de/archives/cheap-vps-racknerd">Racknred</a></td><td align="left">$8.89&#x2F;年</td><td align="left"><strong>支付宝</strong>、PayPal、信用卡、Bitcoin</td><td align="left">三网直连，普通价格，高端配置</td></tr><tr><td align="left"><a href="https://loll.cc/tx">腾讯云</a></td><td align="left">24元&#x2F;月</td><td align="left">支付宝、微信</td><td align="left">CN2 GIA线路、大厂稳定，免费三个快照功能</td></tr><tr><td align="left"><a href="https://contabo.com/en/">Contabo</a></td><td align="left">4.99欧元&#x2F;月</td><td align="left">PayPal</td><td align="left">4H8G性能强劲、老牌大厂、德国品质</td></tr><tr><td align="left"><a href="https://loll.cc/spa">SpartanHost</a></td><td align="left">$2&#x2F;月</td><td align="left"><strong>支付宝</strong>、PayPal、信用卡、Bitcoin</td><td align="left"><strong>CU VIP</strong> 线路(AS4837)</td></tr></tbody></table><h2 id="永远滴神，搬瓦工（BandwagonHost）"><a href="#永远滴神，搬瓦工（BandwagonHost）" class="headerlink" title="永远滴神，搬瓦工（BandwagonHost）"></a>永远滴神，搬瓦工（BandwagonHost）</h2><h2 id="高端线路-VPS"><a href="#高端线路-VPS" class="headerlink" title="高端线路 VPS"></a>高端线路 VPS</h2><h3 id="1、BandwagonHost（俗称搬瓦工）"><a href="#1、BandwagonHost（俗称搬瓦工）" class="headerlink" title="1、BandwagonHost（俗称搬瓦工）"></a>1、BandwagonHost（俗称搬瓦工）</h3><p><strong>地址</strong>：<a href="https://loll.cc/bwg">https://loll.cc/bwg</a></p><p><strong>价格</strong>：推荐49.99 美元&#x2F;季的 SPECIAL 20G KVM PROMO V5 - LOS ANGELES - CN2 GIA ECOMMERCE</p><p>注意是每个季度49.99美元的，不要买成每年49.99&#x2F;年的了！！！</p><p>用下面的地址可以快速到达：<a href="https://loll.cc/bwg49">https://loll.cc/bwg49</a></p><p><a href="https://pic.loll.cc/images/2021/06/10/image.png">https://pic.loll.cc/images/2021/06/10/image.png</a></p><p>机房的选择这边DC6和日本软银都可以，不用太纠结，之后是可以随时切换的。</p><p><strong>特点</strong>：</p><ul><li>自带快照功能</li><li>自带备份功能</li><li>可以任意切换机房</li><li>速度杠杠的</li><li>贵（除了贵，基本上没有啥缺点）</li></ul><p><a href="(https://loll.cc/bwg)">BandwagonHost</a> 俗称搬瓦工，老牌 VPS 商家，提供最稳定的 CN2 GIA 线路的 VPS 。</p><p>早期的搬瓦工的套餐早已绝版，被 VPS 玩家们誉为传家宝，成了 VPS 界的理财产品，在二级市场疯狂溢价。(我手持一款74刀年付的，现在已经卖99.99刀&#x2F;年了，而且经常缺货)</p><p>现在唯一可以<strong>随时买到</strong>的性价比最高的搬瓦工 CN2 GIA 线路 VPS 套餐是洛杉矶 CN2 GIA 电商版，提供了别家所不具备的 2.5Gbps 大带宽。价格方面最低季付 49.99 美元，年付优惠价 169.99 美元，还可用终身优惠码(BWH3HYATVBJW)抵扣大概10美元左右。价格虽高，但毕竟线路质量和带宽容量摆在那里，用过就回不去了。</p><p><strong>注意事项</strong>：既然选择了搬瓦工，就不要买普通的CN2 GT了，直接上CN2 GIA。</p><p>不清楚CN2 GIA和CN2 GT的可以看这篇文章：<a href="https://blog.laoda.de/archives/cn2">【VPS各种线路】如何分辨CN2 GIA与CN2 GT？</a></p><h2 id="1、适合折腾玩玩的，按使用时间扣费，可以随时删除"><a href="#1、适合折腾玩玩的，按使用时间扣费，可以随时删除" class="headerlink" title="1、适合折腾玩玩的，按使用时间扣费，可以随时删除"></a>1、适合折腾玩玩的，按使用时间扣费，可以随时删除</h2><h3 id="Vultr"><a href="#Vultr" class="headerlink" title="Vultr"></a>Vultr</h3><p><strong>地址</strong>：<a href="https://loll.cc/vultr">https://loll.cc/vultr</a></p><p><strong>价格</strong>：首次充值需要10美元，服务器一般是5美元&#x2F;月（IPv6的2.5美元&#x2F;月）</p><p><strong>特点</strong>：按时间计费，随用随删，机器不满意直接删除（destroy）就行，非常适合刚入门的小伙伴。</p><p>用上面的地址，首次充值之后，会送100美元，可以在30天内使用，可以随便开机子测试玩耍。</p><p><strong>注意事项</strong>：日本和韩国的机子IP被墙的比较多，可以试试美国的机器；100美元不能提现，1个月之后就没有了，记得及时用～</p><h3 id="Cloudcone"><a href="#Cloudcone" class="headerlink" title="Cloudcone"></a>Cloudcone</h3><p><strong>地址</strong>：<a href="https://loll.cc/cc">https://loll.cc/cc</a></p><p><strong>价格</strong>：可以看这篇文章 <a href="https://blog.laoda.de/archives/cheap-vps-cloudcone">https://blog.laoda.de/archives/cheap-vps-cloudcone</a></p><p><strong>特点</strong>：按时间计费，随用随删</p><p><strong>注意事项</strong>：有些特价活动机子删除了不会退还费用，有问题可以发工单（ticket）给他们技术团队</p><h2 id="2、存储型"><a href="#2、存储型" class="headerlink" title="2、存储型"></a>2、存储型</h2><h3 id="BuyVM"><a href="#BuyVM" class="headerlink" title="BuyVM"></a>BuyVM</h3><p><strong>地址</strong>：<a href="https://loll.cc/buyvm">https://loll.cc/buyvm</a></p><p><strong>价格</strong>：裸机2美元&#x2F;月，存储块最低1.25美元&#x2F;月</p><p><strong>特点</strong>：不限流量；卢森堡地区可以无视版权；</p><p><strong>注意事项</strong>：如果付款用支付宝的话，默认是加拿大元，也就是3.25加拿大币&#x3D;17.28元人民币每个月；</p><p>经常断货，比较难买到，可以先注册账号，等有货了第一时间下单。</p><h2 id="3、性价比"><a href="#3、性价比" class="headerlink" title="3、性价比"></a>3、性价比</h2><h3 id="Racknred"><a href="#Racknred" class="headerlink" title="Racknred"></a>Racknred</h3><p><strong>地址</strong>：<a href="https://loll.cc/rn">https://loll.cc/rn</a></p><p><strong>价格</strong>：可以看这篇文章  <a href="https://blog.laoda.de/archives/cheap-vps-racknerd">https://blog.laoda.de/archives/cheap-vps-racknerd</a></p><p><strong>特点</strong>：香，163扩容后，我的8.89刀年付圣何塞，又兔比能跑10W+</p><p><strong>注意事项</strong>：千万不要直接去他们官网买，那上面的机子都贵的离谱，建议用上面的链接买，一般他们会做活动，机子的性价比很高。</p><h3 id="腾讯云（轻量应用服务器）"><a href="#腾讯云（轻量应用服务器）" class="headerlink" title="腾讯云（轻量应用服务器）"></a>腾讯云（轻量应用服务器）</h3><p><strong>地址</strong>：<a href="https://loll.cc/tx">https://loll.cc/tx</a></p><p><strong>价格</strong>：24元&#x2F;月</p><p><strong>特点</strong>：良心云，香港、硅谷地区轻量电信走CN2 GIA；有3个免费的快照功能，可以存档恢复数据</p><p><strong>注意事项</strong>：可以月付，因为年付价格也一样。</p><h2 id="4、建站（稳定大厂）"><a href="#4、建站（稳定大厂）" class="headerlink" title="4、建站（稳定大厂）"></a>4、建站（稳定大厂）</h2><h3 id="腾讯云"><a href="#腾讯云" class="headerlink" title="腾讯云"></a>腾讯云</h3><p><strong>地址</strong>：<a href="https://loll.cc/tx">https://loll.cc/tx</a></p><p><strong>价格</strong>：24元&#x2F;月</p><p><strong>特点</strong>：良心云，香港、硅谷地区轻量电信走CN2 GIA；有3个免费的快照功能，可以存档恢复数据</p><p><strong>注意事项</strong>：可以月付，因为年付价格也一样。</p><h3 id="Contabo"><a href="#Contabo" class="headerlink" title="Contabo"></a>Contabo</h3><p><strong>地址</strong>：<a href="https://contabo.com/en/">https://contabo.com/en/</a></p><p><strong>价格</strong>：4.99欧元&#x2F;月</p><p><strong>特点</strong>：性能强劲，博客的新家就在这上面，4核8G，而且这家是德国的商家，2003年成立的，据说机器稳如狗。</p><p><strong>注意事项</strong>：记得PayPal及时续费，不然逾期可能会要你扣服务费。</p><h2 id="附：还可以的域名购买商"><a href="#附：还可以的域名购买商" class="headerlink" title="附：还可以的域名购买商"></a>附：还可以的域名购买商</h2><h3 id="国内（均需要实名）"><a href="#国内（均需要实名）" class="headerlink" title="国内（均需要实名）"></a>国内（均需要实名）</h3><ul><li>阿里</li></ul><p><strong>地址</strong>：<a href="https://loll.cc/aliym">https://loll.cc/aliym</a></p><p><strong>价格</strong>：自己看</p><p><strong>特点</strong>：需要实名登记</p><p><strong>注意事项</strong>：注意续费的价格</p><h3 id="国外"><a href="#国外" class="headerlink" title="国外"></a>国外</h3><ul><li>Namesilo</li></ul><p><strong>地址</strong>：<a href="https://loll.cc/ns">https://loll.cc/ns</a></p><p><strong>价格</strong>：全网良心价</p><p><strong>特点</strong>：续费不涨价，无套路，第一年有的域名会有优惠；自带隐私保护；无须实名</p><p><strong>注意事项</strong>：点击上面的地址，第一次购买超过1美元的域名，输入优惠码<code>yiren</code>，可以立省1美元。</p><p>未完待续。</p><h3 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h3><p><a href="https://blog.laoda.de/archives/cheap-vps-cloudcone">【国外便宜高性价比的VPS 推荐】——CloudCone</a><br><a href="https://blog.laoda.de/archives/cheap-vps-racknerd">【国外便宜高性价比的VPS 推荐】——RackNerd</a></p>]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Racknerd </tag>
            
            <tag> Cloudcone </tag>
            
            <tag> VPS推荐 </tag>
            
            <tag> 腾讯云轻量应用 </tag>
            
            <tag> 搬瓦工 </tag>
            
            <tag> Vultr </tag>
            
            <tag> Contabo </tag>
            
            <tag> BuyVM </tag>
            
            <tag> 大盘鸡 </tag>
            
            <tag> 高性价比 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>手把手教你搭建私人离线下载神器Aria2，搭配Rclone+Filebrowser自动上传至网盘</title>
      <link href="/archives/aria2-rclone-filebrowser/"/>
      <url>/archives/aria2-rclone-filebrowser/</url>
      
        <content type="html"><![CDATA[<h2 id="示例服务器（腾讯云轻量香港服务器）"><a href="#示例服务器（腾讯云轻量香港服务器）" class="headerlink" title="示例服务器（腾讯云轻量香港服务器）"></a>示例服务器（腾讯云轻量香港服务器）</h2><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-5-10/1620659114578-image.png"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-5-10/1620659208717-image.png"></p><p><strong>购买地址：</strong><a href="https://loll.cc/tx">https://loll.cc/tx</a></p><p>24块&#x2F;月，CN2 GIA线路，不用备案就可以使用，非常得方便，而且有三个快照，可以随时备份数据。</p><p>支持良心云，拒绝套路云! [狗头]</p><p>买了记得装Debian系统。</p><p><strong>视频演示以Debian10 为例子。</strong></p><h2 id="视频教程"><a href="#视频教程" class="headerlink" title="视频教程"></a>视频教程</h2><div style="position: relative; padding: 30% 45%;"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"src="//player.bilibili.com/player.html?aid=973123074&bvid=BV1K44y1r78U&cid=338813882" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" ></iframe></div><h3 id="完整视频："><a href="#完整视频：" class="headerlink" title="完整视频："></a>完整视频：</h3><p><a href="https://www.bilibili.com/video/BV1K44y1r78U/">点击观看</a></p><h2 id="更新软件包"><a href="#更新软件包" class="headerlink" title="更新软件包"></a>更新软件包</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt update </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>centOS使用如下命令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum update -y</span><br></pre></td></tr></table></figure><p>安装基础组件</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install sudo wget curl</span><br></pre></td></tr></table></figure><p>centOS：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install sudo wget curl</span><br></pre></td></tr></table></figure><h2 id="下载宝塔面板（centOS请自行到网站上找相应脚本）"><a href="#下载宝塔面板（centOS请自行到网站上找相应脚本）" class="headerlink" title="下载宝塔面板（centOS请自行到网站上找相应脚本）"></a>下载宝塔面板（centOS请自行到网站上找相应脚本）</h2><ul><li>海外版本：</li></ul><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-5-10/1620657859718-image.png"></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O install.sh http://www.aapanel.com/script/install-ubuntu_6.0_en.sh &amp;&amp; bash install.sh</span><br></pre></td></tr></table></figure><p>地址：<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6810-installation-tutorial">https://forum.aapanel.com/d/9-aapanel-linux-panel-6810-installation-tutorial</a></p><ul><li>国内版本：</li></ul><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-5-10/1620657880164-image.png"></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh</span><br></pre></td></tr></table></figure><p>地址：<a href="https://www.bt.cn/bbs/thread-19376-1-1.html">https://www.bt.cn/bbs/thread-19376-1-1.html</a></p><h2 id="中文版本输入下面的代码解除登陆限制"><a href="#中文版本输入下面的代码解除登陆限制" class="headerlink" title="中文版本输入下面的代码解除登陆限制"></a>中文版本输入下面的代码解除登陆限制</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">&quot;s|if (bind_user == &#x27;True&#x27;) &#123;|if (bind_user == &#x27;REMOVED&#x27;) &#123;|g&quot;</span> /www/server/panel/BTPanel/static/js/index.js</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /www/server/panel/data/bind.pl</span><br></pre></td></tr></table></figure><h2 id="安装LNMP"><a href="#安装LNMP" class="headerlink" title="安装LNMP"></a>安装LNMP</h2><p>php可以选7.4</p><h2 id="修改系统时间、添加SWAP"><a href="#修改系统时间、添加SWAP" class="headerlink" title="修改系统时间、添加SWAP"></a>修改系统时间、添加SWAP</h2><p>时间改成上海，swap添加一倍内存就行。</p><h2 id="安装Aria2增强版"><a href="#安装Aria2增强版" class="headerlink" title="安装Aria2增强版"></a>安装Aria2增强版</h2><p>为了避免出错，安装下面的基础组件：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install sudo wget curl ca-certificates</span><br></pre></td></tr></table></figure><p>运行安装脚本</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -N git.io/aria2.sh &amp;&amp; <span class="built_in">chmod</span> +x aria2.sh</span><br></pre></td></tr></table></figure><p>启动Aria2</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./aria2.sh</span><br></pre></td></tr></table></figure><p>配置Aria2</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Aria2 一键安装管理脚本 增强版 [v2.7.4] by P3TERX.COM</span><br><span class="line"> </span><br><span class="line">  0. 升级脚本</span><br><span class="line"> ———————————————————————</span><br><span class="line">  1. 安装 Aria2</span><br><span class="line">  2. 更新 Aria2</span><br><span class="line">  3. 卸载 Aria2</span><br><span class="line"> ———————————————————————</span><br><span class="line">  4. 启动 Aria2</span><br><span class="line">  5. 停止 Aria2</span><br><span class="line">  6. 重启 Aria2</span><br><span class="line"> ———————————————————————</span><br><span class="line">  7. 修改 配置</span><br><span class="line">  8. 查看 配置</span><br><span class="line">  9. 查看 日志</span><br><span class="line"> 10. 清空 日志</span><br><span class="line"> ———————————————————————</span><br><span class="line"> 11. 手动更新 BT-Tracker</span><br><span class="line"> 12. 自动更新 BT-Tracker</span><br><span class="line"> ———————————————————————</span><br><span class="line"></span><br><span class="line"> Aria2 状态: 已安装 | 已启动</span><br><span class="line"></span><br><span class="line"> 自动更新 BT-Tracker: 已开启</span><br><span class="line"></span><br><span class="line"> 请输入数字 [0-12]:</span><br></pre></td></tr></table></figure><p>配置信息：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Aria2 简单配置信息：</span><br><span class="line"></span><br><span class="line"> IPv4 地址      : 119.28.139.167</span><br><span class="line"> IPv6 地址      : IPv6 地址检测失败</span><br><span class="line"> RPC 端口       : 6800</span><br><span class="line"> RPC 密钥       : 43aa91a8314b404d513d</span><br><span class="line"> 下载目录       : /root/downloads</span><br><span class="line"> AriaNg 链接    : http://ariang.js.org/<span class="comment">#!/settings/rpc/set/ws/119.28.139.167/6800/jsonrpc/NDNhYTkxYT</span></span><br><span class="line">gzMTRiNDA0ZDUxM2Q=</span><br><span class="line"></span><br><span class="line">[信息] Aria2 启动成功 !</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>项目仓库：<a href="https://github.com/P3TERX/aria2.sh">https://github.com/P3TERX/aria2.sh</a></p><h3 id="其他操作"><a href="#其他操作" class="headerlink" title="其他操作"></a>其他操作</h3><p>启动：<code>/etc/init.d/aria2 start</code></p><p>停止：<code>/etc/init.d/aria2 stop</code></p><p>重启：<code>/etc/init.d/aria2 restart</code></p><p>查看状态：<code>/etc/init.d/aria2 status</code></p><p>配置文件路径：<code>/root/.aria2c/aria2.conf</code> （配置文件有中文注释，若语言设置有问题会导致中文乱码）</p><p>默认下载目录：<code>/root/downloads</code></p><p>RPC 密钥：随机生成，可使用选项<code>7</code>. 修改 配置文件自定义</p><h2 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com/ | sh</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sudo systemctl start docker</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure><h2 id="安装filebrowser"><a href="#安装filebrowser" class="headerlink" title="安装filebrowser"></a>安装filebrowser</h2><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-5-10/1620657904411-image.png"></p><h4 id="下载filebrowser镜像"><a href="#下载filebrowser镜像" class="headerlink" title="下载filebrowser镜像"></a>下载filebrowser镜像</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull filebrowser/filebrowser</span><br></pre></td></tr></table></figure><h4 id="创建filebrowser挂载所需要的目录"><a href="#创建filebrowser挂载所需要的目录" class="headerlink" title="创建filebrowser挂载所需要的目录"></a>创建filebrowser挂载所需要的目录</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /root/filebrowser</span><br></pre></td></tr></table></figure><h4 id="启动filebrowser"><a href="#启动filebrowser" class="headerlink" title="启动filebrowser"></a>启动filebrowser</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d -v /root/downloads:/srv -v /root/filebrowser/filebrowserconfig.json:/etc/config.json -v /root/filebrowser/database.db:/etc/database.db --name myfile -p 8002:80 filebrowser/filebrowser</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>通过浏览器访问，默认账号密码：<code>admin</code></p><h2 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h2><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">   <span class="attribute">proxy_pass</span> http://127.0.0.1:8002/;</span><br><span class="line">   <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">   <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">   <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">   <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">   <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">   <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">   <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">   <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="配置Rclone（以下来自twovps的教程整理）"><a href="#配置Rclone（以下来自twovps的教程整理）" class="headerlink" title="配置Rclone（以下来自twovps的教程整理）"></a>配置Rclone（以下来自twovps的教程整理）</h2><p>以下分为三小步这里做个简介：第一步是PC端获取网盘授权的令牌；第二步是在VPS里绑定获得的授权；第三步才是自动上传配置。因为OneDrive的授权需要在浏览器打开，而VPS没有图形界面，只能先在PC端获取授权，所以第一步和第二步有点重复。</p><h3 id="1、窗口（PC）端安装Rclone"><a href="#1、窗口（PC）端安装Rclone" class="headerlink" title="1、窗口（PC）端安装Rclone"></a>1、窗口（PC）端安装Rclone</h3><p>登录<a href="https://rclone.org/downloads/">Rclone</a>网官下载Rclone的窗户端的客户。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-5-10/1620657940448-image.png"></p><p>下载解压将里面的<code>rclone.exe</code>移动到本地<code>C:\Windows\System32</code>下这个目录，其它的可以删掉没关系<br>按<code>win + R</code>快捷键打开运行，输入<code>cmd</code>确定来打开CMD窗口，输入下面命令开始配置 。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rclone config</span><br></pre></td></tr></table></figure><p>然后出现如下界面，提示按输入<code>n</code>回车创建个新的远程，然后提示输入name，名称随意但要记住，这里我填<code>remote</code>。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Current remotes:</span><br><span class="line"></span><br><span class="line">Name                 Type</span><br><span class="line">====                 ====</span><br><span class="line">onedrive             onedrive</span><br><span class="line"></span><br><span class="line">e) Edit existing remote</span><br><span class="line">n) New remote</span><br><span class="line">d) Delete remote</span><br><span class="line">r) Rename remote</span><br><span class="line">c) Copy remote</span><br><span class="line">s) Set configuration password</span><br><span class="line">q) Quit config</span><br><span class="line">e/n/d/r/c/s/q&gt; n   </span><br><span class="line">name&gt; remote</span><br></pre></td></tr></table></figure><p>回车后出现一长串网盘列表让你选，这里我们要绑定的是OneDrive， 其它网盘绑定教程我就不说了， 可以看到OneDrive是19，那就填入19回车，不同版本数字排序可能会变化，请自主确认（比如我们现在视频里的就是26，一定要看清楚！），你也可以绑定列表中其它网盘。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Current remotes:</span><br><span class="line"></span><br><span class="line">Name                 Type</span><br><span class="line">====                 ====</span><br><span class="line">onedrive             onedrive</span><br><span class="line"></span><br><span class="line">e) Edit existing remote</span><br><span class="line">n) New remote</span><br><span class="line">d) Delete remote</span><br><span class="line">r) Rename remote</span><br><span class="line">c) Copy remote</span><br><span class="line">s) Set configuration password</span><br><span class="line">q) Quit config</span><br><span class="line">e/n/d/r/c/s/q&gt; n</span><br><span class="line">name&gt; onedrive</span><br><span class="line">Type of storage to configure.</span><br><span class="line">Enter a string value. Press Enter <span class="keyword">for</span> the default (<span class="string">&quot;&quot;</span>).</span><br><span class="line">Choose a number from below, or <span class="built_in">type</span> <span class="keyword">in</span> your own value</span><br><span class="line"> 1 / A stackable unification remote, <span class="built_in">which</span> can appear to merge the contents of several remotes</span><br><span class="line">   \ <span class="string">&quot;union&quot;</span></span><br><span class="line"> 2 / Alias <span class="keyword">for</span> a existing remote</span><br><span class="line">   \ <span class="string">&quot;alias&quot;</span></span><br><span class="line"> 3 / Amazon Drive</span><br><span class="line">   \ <span class="string">&quot;amazon cloud drive&quot;</span></span><br><span class="line"> 4 / Amazon S3 Compliant Storage Provider (AWS, Alibaba, Ceph, Digital Ocean, Dreamhost, IBM COS, Minio, etc)</span><br><span class="line">   \ <span class="string">&quot;s3&quot;</span></span><br><span class="line"> 5 / Backblaze B2</span><br><span class="line">   \ <span class="string">&quot;b2&quot;</span></span><br><span class="line"> 6 / Box</span><br><span class="line">   \ <span class="string">&quot;box&quot;</span></span><br><span class="line"> 7 / Cache a remote</span><br><span class="line">   \ <span class="string">&quot;cache&quot;</span></span><br><span class="line"> 8 / Dropbox</span><br><span class="line">   \ <span class="string">&quot;dropbox&quot;</span></span><br><span class="line"> 9 / Encrypt/Decrypt a remote</span><br><span class="line">   \ <span class="string">&quot;crypt&quot;</span></span><br><span class="line">10 / FTP Connection</span><br><span class="line">   \ <span class="string">&quot;ftp&quot;</span></span><br><span class="line">11 / Google Cloud Storage (this is not Google Drive)</span><br><span class="line">   \ <span class="string">&quot;google cloud storage&quot;</span></span><br><span class="line">12 / Google Drive</span><br><span class="line">   \ <span class="string">&quot;drive&quot;</span></span><br><span class="line">13 / Hubic</span><br><span class="line">   \ <span class="string">&quot;hubic&quot;</span></span><br><span class="line">14 / JottaCloud</span><br><span class="line">   \ <span class="string">&quot;jottacloud&quot;</span></span><br><span class="line">15 / Koofr</span><br><span class="line">   \ <span class="string">&quot;koofr&quot;</span></span><br><span class="line">16 / Local Disk</span><br><span class="line">   \ <span class="string">&quot;local&quot;</span></span><br><span class="line">17 / Mega</span><br><span class="line">   \ <span class="string">&quot;mega&quot;</span></span><br><span class="line">18 / Microsoft Azure Blob Storage</span><br><span class="line">   \ <span class="string">&quot;azureblob&quot;</span></span><br><span class="line">19 / Microsoft OneDrive</span><br><span class="line">   \ <span class="string">&quot;onedrive&quot;</span></span><br><span class="line">20 / OpenDrive</span><br><span class="line">   \ <span class="string">&quot;opendrive&quot;</span></span><br><span class="line">21 / Openstack Swift (Rackspace Cloud Files, Memset Memstore, OVH)</span><br><span class="line">   \ <span class="string">&quot;swift&quot;</span></span><br><span class="line">22 / Pcloud</span><br><span class="line">   \ <span class="string">&quot;pcloud&quot;</span></span><br><span class="line">23 / QingCloud Object Storage</span><br><span class="line">   \ <span class="string">&quot;qingstor&quot;</span></span><br><span class="line">24 / SSH/SFTP Connection</span><br><span class="line">   \ <span class="string">&quot;sftp&quot;</span></span><br><span class="line">25 / Webdav</span><br><span class="line">   \ <span class="string">&quot;webdav&quot;</span></span><br><span class="line">26 / Yandex Disk</span><br><span class="line">   \ <span class="string">&quot;yandex&quot;</span></span><br><span class="line">27 / http Connection</span><br><span class="line">   \ <span class="string">&quot;http&quot;</span></span><br><span class="line">Storage&gt; 19</span><br></pre></td></tr></table></figure><p>接着<code>client_id</code>和<code>client_secret</code> 直接不填回车</p><p><code>Edit advanced config? </code>输入<code>n</code>回车</p><p><code>Already have a token - refresh?</code> 输入<code>y</code>回车，后面VPS里配置时是没有这个提示的，会出现下个自动配置选项，别手快直接y</p><p><code>Use auto config? </code>这里输入<code>y</code>回车，后面VPS配置时这步要选 n </p><p>具体操作如下：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Microsoft App Client Id</span><br><span class="line">Leave blank normally.</span><br><span class="line">Enter a string value. Press Enter <span class="keyword">for</span> the default (<span class="string">&quot;&quot;</span>).</span><br><span class="line">client_id&gt;</span><br><span class="line">Microsoft App Client Secret</span><br><span class="line">Leave blank normally.</span><br><span class="line">Enter a string value. Press Enter <span class="keyword">for</span> the default (<span class="string">&quot;&quot;</span>).</span><br><span class="line">client_secret&gt;</span><br><span class="line">Edit advanced config? (y/n) </span><br><span class="line">y) Yes</span><br><span class="line">n) No</span><br><span class="line">y/n&gt; n</span><br><span class="line">Remote config </span><br><span class="line">Already have a token - refresh?  </span><br><span class="line">y) Yes</span><br><span class="line">n) No</span><br><span class="line">y/n&gt; y</span><br><span class="line">Use auto config?  </span><br><span class="line"> * Say Y <span class="keyword">if</span> not sure</span><br><span class="line"> * Say N <span class="keyword">if</span> you are working on a remote or headless machine</span><br><span class="line">y) Yes</span><br><span class="line">n) No</span><br><span class="line">y/n&gt; y</span><br></pre></td></tr></table></figure><p>接着浏览器会自动弹出窗口，然后登录你要挂载的OneDrive账号，征求许可接受就行了，出现下图界面授权成功。</p><p><img src="https://img.laoda.de/i/2023/04/16/ewhq1t-0.webp" alt="image-20230416090107719"></p><p>授权成功后返回cmd窗口出现以下界面，这里选<code>1</code>回车。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Choose a number from below, or <span class="built_in">type</span> <span class="keyword">in</span> an existing value</span><br><span class="line"> 1 / OneDrive Personal or Business  <span class="comment">#个人和商用</span></span><br><span class="line">   \ <span class="string">&quot;onedrive&quot;</span></span><br><span class="line"> 2 / Root Sharepoint site</span><br><span class="line">   \ <span class="string">&quot;sharepoint&quot;</span></span><br><span class="line"> 3 / Type <span class="keyword">in</span> driveID</span><br><span class="line">   \ <span class="string">&quot;driveid&quot;</span></span><br><span class="line"> 4 / Type <span class="keyword">in</span> SiteID</span><br><span class="line">   \ <span class="string">&quot;siteid&quot;</span></span><br><span class="line"> 5 / Search a Sharepoint site</span><br><span class="line">   \ <span class="string">&quot;search&quot;</span></span><br><span class="line">Your choice&gt;1</span><br></pre></td></tr></table></figure><p>提示找到一个驱动器，让你选择，这里就一个选项 0，那就填入<code>0</code>回车，然后问你是否确定，选<code>y</code>回车。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Found 1 drives, please <span class="keyword">select</span> the one you want to use:</span><br><span class="line">0: OneDrive (business) <span class="built_in">id</span>=huioaeuiaeagioioieuiaaefe@<span class="comment">#%gaege94#</span></span><br><span class="line">Chose drive to use:&gt;0</span><br><span class="line">Found drive <span class="string">&#x27;root&#x27;</span> of <span class="built_in">type</span> <span class="string">&#x27;business&#x27;</span>, URL:https://jxjjxy-my.sharepoint.com/personal/meeaghvp_t_odmail_cn/Documents</span><br><span class="line">Is that okay?</span><br><span class="line">y) Yes</span><br><span class="line">n) No</span><br><span class="line">y/n&gt; y</span><br></pre></td></tr></table></figure><p>接着会出现一串长令牌，PC端的操作全是为了这个令牌，将下图红框内的整个复制，复制范围<code>&#123;&quot;access_token&quot;:…………………………2019-04-21T16:41:25.1595637+08:00&quot;&#125;</code>保存好，以后就可以省了这步PC端操作，下面就回到SSH操作。</p><p><img src="https://img.laoda.de/i/2023/04/16/ex4ab2-0.webp"></p><h3 id="2-、VPS安装Rclone"><a href="#2-、VPS安装Rclone" class="headerlink" title="2 、VPS安装Rclone"></a>2 、VPS安装Rclone</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl https://rclone.org/install.sh | sudo bash  <span class="comment">#安装Rclone</span></span><br><span class="line">rclone config  <span class="comment">#配置Rclone</span></span><br></pre></td></tr></table></figure><p>上面输入完<code>rclone config</code>回车后的过程跟前面在PC端的配置步骤基本一样，这里就不复述了，到了<code>Use auto config?</code>问你是否使用自动配置这步不同，这里选<code>n</code> 回车，然后在出现的<code>result&gt;</code>后面粘贴上前面获得的token然后回车，接着会有几个确认，按提示填<code>y</code>就行，直到又回到下图配置开头界面，输入<code>q</code>回车退出配置即可，到此我们完成了网盘的授权。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Name                 Type</span><br><span class="line">====                 ====</span><br><span class="line">onedrive             onedrive</span><br><span class="line"></span><br><span class="line">e) Edit existing remote</span><br><span class="line">n) New remote</span><br><span class="line">d) Delete remote</span><br><span class="line">r) Rename remote</span><br><span class="line">c) Copy remote</span><br><span class="line">s) Set configuration password</span><br><span class="line">q) Quit config</span><br><span class="line">e/n/d/r/c/s/q&gt; q</span><br></pre></td></tr></table></figure><blockquote><p><strong>提示:</strong><br>以上两步就是为了得到token，并在VPS里创建一个<code>rclone.conf</code>配置文件，该配置文件目录在<code>root/.config/rclone/rclone.conf</code>，可以将这个文件下载到本地，以后如果重装只要在VPS上安装好rclone，再将这个配置文件放进这个目录即可，省去繁琐配置过程。</p></blockquote><h3 id="3、自动上传设置"><a href="#3、自动上传设置" class="headerlink" title="3、自动上传设置"></a>3、自动上传设置</h3><p>因为挂载了其实最终的目的还是转移到自己的云盘空间中，vps 的硬盘能有多大，要折腾都是在云盘中。如果你是土豪当我没说。</p><p>这篇手记是解决后续利用 rclone 自动上传 aria2 下载的文件到 onedrive 或者 googledrive。到 aria2 的目录创建脚本：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi autoupload.sh</span><br></pre></td></tr></table></figure><p>脚本如下(作者：P3TERX，<a href="https://github.com/P3TERX/aria2_perfect_config">Github页面地址</a>)：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#=================================================</span></span><br><span class="line"><span class="comment"># Description: Aria2 download completes calling Rclone upload</span></span><br><span class="line"><span class="comment"># Lisence: MIT</span></span><br><span class="line"><span class="comment"># Version: 1.8</span></span><br><span class="line"><span class="comment"># Author: P3TERX</span></span><br><span class="line"><span class="comment"># Blog: https://p3terx.com</span></span><br><span class="line"><span class="comment">#=================================================</span></span><br><span class="line"> </span><br><span class="line">downloadpath=<span class="string">&#x27;/usr/local/caddy/www/file&#x27;</span> <span class="comment">#Aria2下载目录</span></span><br><span class="line">name=<span class="string">&#x27;remote&#x27;</span> <span class="comment">#配置Rclone时填写的name</span></span><br><span class="line">folder=<span class="string">&#x27;/backup&#x27;</span> <span class="comment">#网盘里的文件夹，留空为整个网盘。</span></span><br><span class="line">retry_num=3 <span class="comment">#上传失败重试次数</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#=================下面不需要修改===================</span></span><br><span class="line">filepath=<span class="variable">$3</span> <span class="comment">#Aria2传递给脚本的文件路径。BT下载有多个文件时该值为文件夹内第一个文件，如/root/Download/a/b/1.mp4</span></span><br><span class="line">rdp=<span class="variable">$&#123;filepath#<span class="variable">$&#123;downloadpath&#125;</span>/&#125;</span> <span class="comment">#路径转换，去掉开头的下载路径。</span></span><br><span class="line">path=<span class="variable">$&#123;downloadpath&#125;</span>/<span class="variable">$&#123;rdp%%/*&#125;</span> <span class="comment">#路径转换。下载文件夹时为顶层文件夹路径，普通单文件下载时与文件路径相同。</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="title">Task_INFO</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;[\033[1;32mUPLOAD\033[0m] Task information:&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;————————– [\033[1;33mINFO\033[0m] ————————–&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\033[1;35mDownload path：\033[0m<span class="variable">$&#123;downloadpath&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\033[1;35mFile path: \033[0m<span class="variable">$&#123;filepath&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\033[1;35mUpload path: \033[0m<span class="variable">$&#123;uploadpath&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\033[1;35mRemote path：\033[0m<span class="variable">$&#123;remotepath&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;————————– [\033[1;33mINFO\033[0m] ————————–&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="title">Upload</span></span>()&#123;</span><br><span class="line">retry=0</span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$retry</span> -le <span class="variable">$retry_num</span> -a -e <span class="string">&quot;<span class="variable">$&#123;uploadpath&#125;</span>&quot;</span> ]; <span class="keyword">do</span></span><br><span class="line">[ <span class="variable">$retry</span> != 0 ] &amp;&amp; <span class="built_in">echo</span> &amp;&amp; <span class="built_in">echo</span> -e <span class="string">&quot;Upload failed! Retry <span class="variable">$&#123;retry&#125;</span>/<span class="variable">$&#123;retry_num&#125;</span> …&quot;</span> &amp;&amp; <span class="built_in">echo</span></span><br><span class="line">rclone move -v <span class="string">&quot;<span class="variable">$&#123;uploadpath&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;remotepath&#125;</span>&quot;</span></span><br><span class="line">rclone rmdirs -v <span class="string">&quot;<span class="variable">$&#123;downloadpath&#125;</span>&quot;</span> –leave-root</span><br><span class="line">retry=$((<span class="variable">$retry</span>+<span class="number">1</span>))</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">[ -e <span class="string">&quot;<span class="variable">$&#123;uploadpath&#125;</span>&quot;</span> ] &amp;&amp; <span class="built_in">echo</span> &amp;&amp; <span class="built_in">echo</span> -e <span class="string">&quot;Upload failed: <span class="variable">$&#123;uploadpath&#125;</span>&quot;</span> &amp;&amp; <span class="built_in">echo</span></span><br><span class="line">[ -e <span class="string">&quot;<span class="variable">$&#123;path&#125;</span>&quot;</span>.aria2 ] &amp;&amp; <span class="built_in">rm</span> -vf <span class="string">&quot;<span class="variable">$&#123;path&#125;</span>&quot;</span>.aria2</span><br><span class="line">[ -e <span class="string">&quot;<span class="variable">$&#123;filepath&#125;</span>&quot;</span>.aria2 ] &amp;&amp; <span class="built_in">rm</span> -vf <span class="string">&quot;<span class="variable">$&#123;filepath&#125;</span>&quot;</span>.aria2</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$2</span> -eq 0 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">echo</span> &amp;&amp; <span class="built_in">echo</span> -e <span class="string">&quot; \033[1;33mU P L O A D ! ! !\033[0m&quot;</span> &amp;&amp; <span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> &amp;&amp; <span class="built_in">echo</span> -e <span class="string">&quot; \033[1;32mU P L O A D ! ! !\033[0m&quot;</span> &amp;&amp; <span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> &amp;&amp; <span class="built_in">echo</span> -e <span class="string">&quot; \033[1;35mU P L O A D ! ! !\033[0m&quot;</span> &amp;&amp; <span class="built_in">echo</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$path</span>&quot;</span> = <span class="string">&quot;<span class="variable">$filepath</span>&quot;</span> ] &amp;&amp; [ <span class="variable">$2</span> -eq 1 ] <span class="comment">#普通单文件下载，移动文件到设定的网盘文件夹。</span></span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">uploadpath=<span class="variable">$&#123;filepath&#125;</span></span><br><span class="line">remotepath=<span class="string">&quot;<span class="variable">$&#123;name&#125;</span>:<span class="variable">$&#123;folder&#125;</span>&quot;</span></span><br><span class="line">Task_INFO</span><br><span class="line">Upload</span><br><span class="line"><span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$path</span>&quot;</span> != <span class="string">&quot;<span class="variable">$filepath</span>&quot;</span> ] &amp;&amp; [ <span class="variable">$2</span> -gt 1 ] <span class="comment">#BT下载（文件夹内文件数大于1），移动整个文件夹到设定的网盘文件夹。</span></span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">uploadpath=<span class="variable">$&#123;path&#125;</span></span><br><span class="line">remotepath=<span class="string">&quot;<span class="variable">$&#123;name&#125;</span>:<span class="variable">$&#123;folder&#125;</span>/<span class="variable">$&#123;rdp%%/*&#125;</span>&quot;</span></span><br><span class="line">Task_INFO</span><br><span class="line">Upload</span><br><span class="line"><span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$path</span>&quot;</span> != <span class="string">&quot;<span class="variable">$filepath</span>&quot;</span> ] &amp;&amp; [ <span class="variable">$2</span> -eq 1 ] <span class="comment">#第三方度盘工具下载（子文件夹或多级目录等情况下的单文件下载）、BT下载（文件夹内文件数等于1），移动文件到设定的网盘文件夹下的相同路径文件夹。</span></span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">uploadpath=<span class="variable">$&#123;filepath&#125;</span></span><br><span class="line">remotepath=<span class="string">&quot;<span class="variable">$&#123;name&#125;</span>:<span class="variable">$&#123;folder&#125;</span>/<span class="variable">$&#123;rdp%/*&#125;</span>&quot;</span></span><br><span class="line">Task_INFO</span><br><span class="line">Upload</span><br><span class="line"><span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">Task_INFO</span><br></pre></td></tr></table></figure><p>需要修改的地方只有这三行：</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">downloadpath=&#x27;/usr/local/caddy/www/file&#x27; #Aria2下载目录</span><br><span class="line">name=&#x27;remote&#x27; #配置Rclone时填写的name</span><br><span class="line">folder=&#x27;/backup&#x27; #网盘里的文件夹，留空为整个网盘。</span><br></pre></td></tr></table></figure><p><code>/usr/local/caddy/www/file</code> 这个对应你aria2的<strong>下载目录</strong>（比如用我们的的增强脚本就是<code>/root/downloads</code>），<code>remote</code> 对应你配置rclone的时候设置的名称，<code>/backup</code> 对应你想同步上传到你网盘的哪个目录，如果留空就是根目录（如果没有这个目录，会自动创建）。</p><p>修改完毕后，给这个脚本执行权限：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x autoupload.sh</span><br></pre></td></tr></table></figure><p>然后编辑aria2的配置文件（位置在<code>/root/.aria2c</code>），</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-5-10/1620658420375-image.png"></p><p>找到<code>on-download-complete</code>，修改内容为这句：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 调用 rclone 上传(move)到网盘</span></span><br><span class="line">on-download-complete=/root/.aria2c/autoupload.sh</span><br></pre></td></tr></table></figure><p>网友反馈</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 调用 rclone 上传(move)到网盘</span></span><br><span class="line">on-download-complete=/root/autoupload.sh</span><br></pre></td></tr></table></figure><p>这就是利用rclone的on-download-complete自动上传aria2下载好的文件。</p><p>重新启动aria2：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/etc/init.d/aria2 restart</span><br></pre></td></tr></table></figure><p>重启Aria2使配置文件生效，这样就大功告成了。</p><p>最后推荐下我现在在用的大硬盘VPS，512M内存挂载250G硬盘，每月20RMB（支付宝支付3.25加拿大元&#x3D;17.24元）都不到，就是经常缺货不容易买到。</p><p>网址：<a href="https://loll.cc/buyvm">https://loll.cc/buyvm</a></p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>大家有什么问题，欢迎在留言区提出来。</p>]]></content>
      
      
      <categories>
          
          <category> 宝塔面板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPS线路 </tag>
            
            <tag> 腾讯云轻量应用 </tag>
            
            <tag> 大盘鸡 </tag>
            
            <tag> rclone </tag>
            
            <tag> filebrowser </tag>
            
            <tag> aria2 </tag>
            
            <tag> 离线下载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【VPS各种线路】如何分辨CN2 GIA与CN2 GT？</title>
      <link href="/archives/cn2/"/>
      <url>/archives/cn2/</url>
      
        <content type="html"><![CDATA[<p>自己花时间买了很多小鸡，却一直没有真正地去了解各种服务器的线路，只是简单知道有电信有CN2、移动有CMI、联通有4837和9929，这作为一个从三大运营商出来的人来说，太不应该了。</p><p>所以决定自己也稍微系统性地学习一下。这篇开始就先和小伙伴们分享一下捣鼓VPS最常听到的<strong>CN2</strong>。</p><p>由于这是我昨天结合了网上很多资料，总结对比出来的经验，我认为还是有一定的说服力的。如果文章中真的存在一些不严谨甚至是错误的地方，欢迎大家在评论区指正。</p><p>我的所有小鸡在这里：<a href="https://status.laoda.de/">咕咕鸡的探针</a></p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>中国电信目前拥有两条线路，一条是 <strong>163 骨干网（ChinaNet）</strong>，另一条就是 <strong>CN2 网络</strong>。</p><p><strong>所以，CN2是针对电信用户来讲的。</strong></p><h2 id="为什么会卡"><a href="#为什么会卡" class="headerlink" title="为什么会卡"></a>为什么会卡</h2><h3 id="丢包"><a href="#丢包" class="headerlink" title="丢包"></a>丢包</h3><p>上网不稳定，网络时通时断，这是丢包的典型表现。</p><p>原因是不管我们的网有多好，我们的数据都不会是以线性（就象打电话一样）传输的，中间总是有空洞。数据包的传输，不可能百分之百的能够完成，因为种种原因，总会有一定的损失。碰到这种情况，INTERNET会自动的让双方的电脑根据协议来补包。如果我们的线路好，速度快，包的损失会非常小，补包的工作也相对较易完成，因此可以近似的将我们的数据看做是无损传输。但是，如果我们的线路较差，数据的损失量就会非常大，补包工作也不可能百分之百完成。在这种情况下，数据的传输就会出现空洞，造成丢包。</p><p>以电信为例子，由于出口的带宽是有限的，电信 163 网连接国际网络，会在高峰时段，在路由出海前的最后一跳，根据优先级，策略性地人为丢包，以减轻对主网的负担(QOS)，这会让普通电信用户糟糕的外网访问质量雪上加霜。</p><h2 id="为什么网速很慢"><a href="#为什么网速很慢" class="headerlink" title="为什么网速很慢"></a>为什么网速很慢</h2><h3 id="绕路"><a href="#绕路" class="headerlink" title="绕路"></a>绕路</h3><p>同样是上海访问新加坡的服务器，一个是上海——香港——新加坡，一个是上海——日本——新加坡，还有一个是上海——洛杉矶——新加坡，很明显，这三段路程差距很大，数据传输到达目的地的时间，也就是访问的延时也变高了，你就会感觉网速很慢。</p><h2 id="什么是普通163线路"><a href="#什么是普通163线路" class="headerlink" title="什么是普通163线路"></a>什么是普通163线路</h2><p><strong>普通163:</strong> 这是最常见也是最普通的线路，也叫ChinaNet(AS4134)，也有人叫它CN1。 </p><p>163 网是中国电信建设的最早的一个网络，它为超过 1 亿的中国电信用户承载包括连往境外的，普通质量的互联网业务。身为电信用户，如果在晚上连接境外网络总是感觉卡顿，丢包高，99.99%的原因都是因为走的这张网，大家一起挤，线路就 boom 了。</p><h3 id="IP段表现为："><a href="#IP段表现为：" class="headerlink" title="IP段表现为："></a>IP段表现为：</h3><p>省级&#x2F;出国&#x2F;国际骨干节点都以<code>202.97</code>开头，全程没有<code>59.43</code>开头的CN2节点。</p><h2 id="什么是CN2"><a href="#什么是CN2" class="headerlink" title="什么是CN2"></a>什么是CN2</h2><p>CN2，即“ChinaNet Next Carrying Network（ChinaNet 的下一代承载网络）”，在 2005 年投入使用，最初架设的目标，是提供一个拓扑合理，架构先进，建设科学，用于满足未来 10-20 年替代 163 网成为未来新骨干网的网络（这个 flag 还未实现），CN2 网络能够同时承载语音、数据、视频、全球互联等业务，尤其是全球互联方面，相对于 163 网而言，CN2 网络的低丢包、低延时、轻负载，让众多用户趋之若鹜。</p><p>而CN2线路又分为CN2 GT线路（中端）与CN2 GIA线路（高端）两种。</p><h2 id="什么是CN2-GT线路"><a href="#什么是CN2-GT线路" class="headerlink" title="什么是CN2 GT线路"></a>什么是CN2 GT线路</h2><p><strong>CN2 GT:</strong> GT是Global Transit的缩写，CN2 GT是CN2线路的一种，但是CN2线路中的中端产品，在CN2里的等级比较低，去程和回程都会有<code>202.97</code>传统节点的出现，一般来说是<code>202.97</code>和<code>59.43</code>两种节点都会出现，并且只有在国际出口才会走<code>59.43</code> CN2节点。CN2 GT线路因为加入了<code>59.43</code>高速节点，CN2(AS4809)，线路质量会比传统163骨干网(中国电信骨干网)优秀。</p><h3 id="路由判断："><a href="#路由判断：" class="headerlink" title="路由判断："></a>路由判断：</h3><p>CN2 GT 产品在从<code>市级</code> →<code> 省级</code> → <code>国际出口</code>这一段走的是 <code>163</code> 网络，<code>国际出口</code> → <code>境外接入点</code>这一段汇入 <code>CN2 </code>网络，返程同理，偶尔可能会走联通的国际网络。</p><p>作为典型的半程 CN2 产品，CN2 GT 网络的数据包即使在国际间传送几乎不会出现丢包的情况，但依然非常容易在国内这一段拥堵时，出现被中国电信舍弃数据包的情况，CN2 GT 网络全天的丢包率在 4% ~ 6%左右，如果在夜晚间高峰期（UTC+8 18:00 至 23:00 时），丢包率可达到 8% 以上。</p><h2 id="什么是CN2-GIA线路"><a href="#什么是CN2-GIA线路" class="headerlink" title="什么是CN2 GIA线路"></a>什么是CN2 GIA线路</h2><p><strong>CN2 GIA:</strong> GIA是Global Internet Access的缩写，CN2 GIA自然也是CN2线路的一种，并且是CN2线路中的高端产品，在CN2里的等级最高，全程和回程全部走<code>59.43</code>高速节点，CN2(AS4809)。CN2 GIA线路一般比较稳定，速度较快，丢包率低。</p><h3 id="路由判断：-1"><a href="#路由判断：-1" class="headerlink" title="路由判断："></a>路由判断：</h3><p>CN2 GIA 产品在从<code>市级</code> → <code>省级</code> → <code>国际出口</code> → <code>境外接入点</code>的过程中，全程走 <code>AS 号为 4809 </code>的路由节点，这些路由节点的 IP 地址开头一律是 <code>59.43.*.*</code>，基本上全程不会经过 <code>163</code> 网络节点。（部分偏远地区的电信用户，比如在县级、村级、非重点市级，访问境外 CN2 GIA 线路的服务器时，会经过 IP 地址为 <code>202.97.*.*</code> 的 <code>AS4314 </code>路由一跳，并入到已布设 CN2 网络的重点市级节点，随后再全程走 CN2 网络）</p><p>CN2 GIA 产品还分为单网、双网、三网三种。</p><h3 id="单网-CN2-GIA："><a href="#单网-CN2-GIA：" class="headerlink" title="单网 CN2 GIA："></a>单网 CN2 GIA：</h3><p>一般指的是仅中国电信用户访问去回，走 CN2 GIA 网络，联通&#x2F;移动&#x2F;教育网等用户访问过去，均走各自运营商的国际出口（典型产品为阿里云国际香港节点）；</p><h3 id="双网-CN2-GIA："><a href="#双网-CN2-GIA：" class="headerlink" title="双网 CN2 GIA："></a>双网 CN2 GIA：</h3><p>一般指的是中国电信&#x2F;中国联通用户访问过去，走 CN2 GIA 网络（特别地，该产品允许中国联通线路在省级跨网并入到中国电信的 CN2 网络，典型产品为标准互联的圣何塞 CN2 GIA 产品）；</p><h3 id="三网-CN2-GIA："><a href="#三网-CN2-GIA：" class="headerlink" title="三网 CN2 GIA："></a>三网 CN2 GIA：</h3><p>一般指的是中国电信&#x2F;中国联通&#x2F;中国移动三网用户的去回访问，均会在省级并入到 CN2 网络，适用性最强（典型产品为搬瓦工的 DC9、DC6 机房）。</p><h2 id="怎么判断普通163线路"><a href="#怎么判断普通163线路" class="headerlink" title="怎么判断普通163线路"></a>怎么判断普通163线路</h2><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-5-8/1620483028504-image.png"></p><p>全程都没有<code>59.43</code>出现，晚高峰的时候速度会受到较大的影响。</p><h2 id="怎么判断CN2-GT线路"><a href="#怎么判断CN2-GT线路" class="headerlink" title="怎么判断CN2 GT线路"></a>怎么判断CN2 GT线路</h2><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-5-8/1620483382675-image.png"></p><p>服务器来自hostdare。这是一个非常典型的 CN2 GT 网络，注意在国内走的时候，一定是 <code>202.97</code> 路由，国际出口点和出海后才走的 <code>59.43</code> 路由。</p><p>就是因为国内段都是走的163骨干网，所以晚高峰还是会拥堵的！</p><h2 id="怎么判断CN2-GIA线路"><a href="#怎么判断CN2-GIA线路" class="headerlink" title="怎么判断CN2 GIA线路"></a>怎么判断CN2 GIA线路</h2><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-5-8/1620482895714-image.png"></p><p>服务器来自腾讯云香港轻量服务器。这是一个非常典型的 CN2 GIA 网络，全程 <code>59.43</code>。</p><p>因为全程都走了<code>59.43</code>，所以不会受到163骨干网晚高峰拥堵的影响，速度还是很快。</p><blockquote><p>注意：部分偏远地区的电信用户（比如在县级、村级、非重点市级）访问境外 CN2 GIA 线路的服务器时，会经过 IP 地址为 <code>202.97.*.*</code> 的 <code>AS4314</code> 路由一跳，并入到已布设 CN2 网络的重点市级节点，随后再全程走 CN2 网络。</p></blockquote><h2 id="CN2线路的缺点"><a href="#CN2线路的缺点" class="headerlink" title="CN2线路的缺点"></a>CN2线路的缺点</h2><ul><li>贵</li></ul><p>在没有购买昂贵的政企专线网络或氮气瓶加速服务的情况下，中国电信普通宽带用户连接海外节点具体走何种线路，取决于对方节点采用了何种路由自治协议，当然，决定它并不是靠心情，而是要和接入的电信运营商签署协议，一旦签署了走何种协议，如纯 CN2 网络，势必要向中国电信缴纳一笔高昂的 CN2 网络使用费用（最后这笔钱还得由用户承担），这就导致支持 CN2 GIA 网络的 VPS 产品价格最昂贵，CN2 GT 价格其次，163 网最为低廉（不用向中国电信缴纳一笔专门优化中国线路的银子）</p><ul><li>一打就瘫痪</li></ul><p>由于担负的网络流量并不高（163骨干网承担了约 <code>85%</code> 的网络流量，其余的 <code>15%</code> 流量，由 CN2 网络承担），冗余量不够，CN2 网络的防御力比较脆弱。</p><p>比如说，VPS 商之间同行攻击的情况屡见不鲜，所以很容易发现某家 CN2 GIA 网络的 VPS 一旦被打（DDoS攻击），毫无还手之力，整个网络会陷入瘫痪，只有等硬扛过去，该家的 CN2 GIA 网络才能重新恢复使用。</p><p>最明显的例子就是搬瓦工家的服务器，一被DDOS，马上进小黑屋。</p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CN2 </tag>
            
            <tag> CN2 GIA </tag>
            
            <tag> VPS线路 </tag>
            
            <tag> 163 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>姨妈级安装教程！Olaindex——一款颜值贼高的OneDrive网盘直链项目</title>
      <link href="/archives/olaindex-install/"/>
      <url>/archives/olaindex-install/</url>
      
        <content type="html"><![CDATA[<p>今天和大家分享一个颜值很不错的onedrive专属网盘直链项目。</p><p><strong>Demo</strong>: <a href="https://cloud.laoda.de/">https://cloud.laoda.de</a></p><div style="position: relative; padding: 30% 45%;"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"src="//player.bilibili.com/player.html?aid=545282497&bvid=BV11q4y1E7gd&cid=331773438" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" ></iframe></div><h2 id="完整视频："><a href="#完整视频：" class="headerlink" title="完整视频："></a>完整视频：</h2><p><a href="https://www.bilibili.com/video/BV11q4y1E7gd/">点击观看</a></p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-4-25/1619344519140-image.png"></p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-4-25/1619344534068-image.png"></p><p>可以在线看OD上的电影啦，</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-5-2/1619919430174-image.png"></p><p>还可以把OD当作图床来使用，</p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-4-25/1619344590908-image.png"></p><p>不想给别人看的内容，还可以设置密码访问，</p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-4-25/1619344602611-image.png"></p><p>废话不多说，让我们开始吧。</p><h2 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h2><ul><li>一台装好宝塔面板的内存最好1G以上的服务器（系统无限制，此教程以Debian10为例子）</li><li>PHP7.4</li><li>LNMP环境</li></ul><h2 id="安装php扩展"><a href="#安装php扩展" class="headerlink" title="安装php扩展"></a>安装php扩展</h2><h3 id="安装fileinfo"><a href="#安装fileinfo" class="headerlink" title="安装fileinfo"></a>安装fileinfo</h3><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-4-25/1619344617519-image.png"></p><p>这一步一开始弄的我头疼，我那台腾讯云香港2G内存的机子死活装不上。</p><blockquote><p>小技巧：安装<code>fileinfo</code>的时候可以去宝塔工具箱设置一下swap,然后把nginx和mysql暂时先关闭</p></blockquote><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-4-25/1619344628664-image.png"></p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-4-25/1619344640980-image.png"></p><p>附带安装 <code>opcache</code> 扩展 以加速php运行，也可以安装 <code>redis</code> 和<code>putenv</code> 扩展。</p><h2 id="禁用函数"><a href="#禁用函数" class="headerlink" title="禁用函数"></a>禁用函数</h2><p>修改 PHP 配置，需要关闭几个禁用的函数</p><p>分别是 <code>exec</code> 、<code> shell_exec</code> 、 <code>proc_open</code> 、<code>putenv</code>、<code>proc_get_status</code>(这个有可能没有) 这几个函数。</p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-4-25/1619344651607-image.png"></p><p>禁用完了之后，记得重启一下<code>php</code>服务，然后记得把刚才的<code>nginx</code>和<code>mysql</code>打开。</p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-4-25/1619344669445-image.png"></p><h2 id="安装Composer"><a href="#安装Composer" class="headerlink" title="安装Composer"></a>安装Composer</h2><p>宝塔面板已经默认自带了，但是为避免出错，我们进行饱和式设置。<br>接下来用ssh（不建议直接宝塔的ssh，这里用的是FinalShell）。 </p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-25/1619344703362-image.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -sS https://getcomposer.org/installer | php</span><br><span class="line">mv composer.phar /usr/local/bin/composer</span><br><span class="line">composer config -g repo.packagist composer https://mirrors.aliyun.com/composer/ # 更换源为国内源，国外服务器可忽略此步骤curl -sS https://getcomposer.org/installer | php</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-25/1619344733927-image.png"></p><p>注：在执行第三行代码时，如果出现让你不要用<code>root</code>来操作的问题，可以参考下面的步骤。</p><p>添加一个用户（Debian为例）:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adduser roy</span><br></pre></td></tr></table></figure><p>执行命令后，根据提示操作即可。请务必设置一个用户密码（别忘记设置密码时你时看不到 ****** 的）。之后系统会询问你一些用户的附加信息，这些就可以无视，一路回车即可。</p><p>安装sudo功能:</p><p>sudo 就是在关键时刻，让普通账户临时获得 root 的神力，战力全开拯救世界。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt update &amp;&amp; apt install sudo</span><br></pre></td></tr></table></figure><p>聪明的你大概已经发现，这一行命令其实是两个命令。前一半 <code>apt update</code> 你之前已经见过并且用过了，是去服务器刷新软件版本信息。后面的 <code>apt install</code> 就是这一次要用到的【安装命令】。两条连接在一起，就是让系统去【刷新可用的最新软件，然后安装最新版的sudo程序】。 <code>&amp;&amp;</code> 则是把两个命令连起来执行的意思。</p><p>把<code>roy</code>用户加入<code>sudo</code>名单里，让他有资格借用<code>root</code>的神力:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">visudo</span><br></pre></td></tr></table></figure><p>在 <code>User Privilege Specification</code> 下加入一行 <code>roy ALL=(ALL) NOPASSWD: ALL</code> 即可。</p><blockquote><p>注意：要特别说明的是<code>NOPASSWD</code>这个设置，它的意思是<code>roy</code>用户临时使用<code>root</code>权限时，不用额外输入密码。这与一般的安全建议相反。我之所以如此推荐，是因为很多新人不顾危险坚持使用<code>root</code>账号就是因为用<code>root</code>时不用重复输入密码、觉得轻松。“两害相权取其轻”，我认为【直接用<code>root</code>用户的风险】大于【使用<code>sudo</code>时不用输密码的风险】，所以做了以上的建议。</p><p>如果你希望遵守传统习惯、每次使用<code>sudo</code>时需要输入密码，那么这一行改成 <code>vpsadmin ALL=(ALL:ALL) ALL</code> 即可。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-25/1619344748923-image.png"></p><h2 id="新建一个站点"><a href="#新建一个站点" class="headerlink" title="新建一个站点"></a>新建一个站点</h2><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-25/1619344761392-image.png"></p><p>数据库不用创建，<code>php</code>选择刚才我们一顿操作过的<code>php-74</code>。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-25/1619344795287-image.png"></p><p>删除站点目录下的所有文件。</p><h2 id="配置OLAINDEX"><a href="#配置OLAINDEX" class="headerlink" title="配置OLAINDEX"></a>配置OLAINDEX</h2><p>注意：这些命令要一行一行执行！</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd web目录   #例如我是cd /www/wwwroot/od.laoda.de</span><br><span class="line">sudo git clone https://github.com/WangNingkai/OLAINDEX.git tmp #从github仓库拉取项目代码</span><br><span class="line">sudo mv tmp/.git .   #进行整理</span><br><span class="line">sudo rm -rf tmp     #删除缓存文件</span><br><span class="line">sudo git reset --hard </span><br><span class="line">sudo composer install -vvv # 这里确保已成功安装 composer ，如果报权限问题，建议给予用户完整权限。直接用root运行。</span><br><span class="line">sudo chmod -R 777 storage/* </span><br><span class="line">sudo chown -R www:www * # 此处 www 根据服务器具体用户组而定，如果是宝塔，直接运行就可以</span><br><span class="line">composer run install-app # (此为自动安装，默认sqlite存储数据)</span><br></pre></td></tr></table></figure><p>注意运行<code>composer install -vvv</code>的时候，用<code>root</code>或者<code>sudo</code>运行,否则会报错</p><p><code>vendor does not exist and could not be created</code></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-25/1619344818652-image.png"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-25/1619344834362-image.png"></p><p>没有遇到其他问题的话，最后结果是这样的，默认账户<code>admin</code>,默认密码<code>123456</code></p><h2 id="配置网站"><a href="#配置网站" class="headerlink" title="配置网站"></a>配置网站</h2><h3 id="配置SSL"><a href="#配置SSL" class="headerlink" title="配置SSL"></a>配置SSL</h3><p>选择 Let’s Encrypt 申请，按要求填写申请，</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-25/1619344849693-image.png"></p><p>开启 SSL 后，选择强制 HTTPS</p><h3 id="网址运行目录"><a href="#网址运行目录" class="headerlink" title="网址运行目录"></a>网址运行目录</h3><p>如图：勾选取消 防跨站攻击(open_basedir) 将站点的运行目录改为 public 别忘了保存</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-25/1619344863450-image.png"></p><h3 id="修改伪静态"><a href="#修改伪静态" class="headerlink" title="修改伪静态"></a>修改伪静态</h3><p>选择 <code>Laravel 5</code>，保存</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-25/1619344875529-image.png"></p><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>注释选定内容，防止图片出现404</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-25/1619344889461-image.png"></p><h3 id="登陆"><a href="#登陆" class="headerlink" title="登陆"></a>登陆</h3><p>输入网址&#x2F;admin，登陆就OK啦。</p><h4 id="后台设置"><a href="#后台设置" class="headerlink" title="后台设置"></a>后台设置</h4><p>记得在这边设置一下，否则可能会报错。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-30/1619795722055-image.png"></p><h4 id="具体如下"><a href="#具体如下" class="headerlink" title="具体如下"></a>具体如下</h4><p>图片</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bmp jpg jpeg png gif</span><br></pre></td></tr></table></figure><p>视频</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkv mp4 webm qlv TS</span><br></pre></td></tr></table></figure><p>Dash视频</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">avi mpg mpeg rm rmvb mov wmv asf ts flv TS</span><br></pre></td></tr></table></figure><p>音频</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mp3 ogg wav flac ape</span><br></pre></td></tr></table></figure><p>Office文档</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">text json md</span><br></pre></td></tr></table></figure><p>代码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">html htm css go java js ts sh php py</span><br></pre></td></tr></table></figure><p>文件流</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">txt log</span><br></pre></td></tr></table></figure><h4 id="关于密码文件夹的问题"><a href="#关于密码文件夹的问题" class="headerlink" title="关于密码文件夹的问题"></a>关于密码文件夹的问题</h4><p>根目录下的文件<strong>要</strong>加<code>/</code></p><p>视频中设置了密码但是输入仍然无效，猜测是hux主题的问题，我换了simplex主题后，bug消失，其他主题也可以试试。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-25/1619344900239-image.png"></p><h4 id="关于隐藏文件夹的问题"><a href="#关于隐藏文件夹的问题" class="headerlink" title="关于隐藏文件夹的问题"></a>关于隐藏文件夹的问题</h4><p>根目录下的文件<strong>不要</strong>加<code>/</code></p><p>绑定好OD账户，就可以愉快得玩耍起来了。</p><p>OD账户不会绑定？额，自己先折腾一下，下一篇再和大家细讲吧。</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://olaindex.js.org/#/install">官方文档</a></p><p><a href="https://lmqyu.cn/793.html">宝塔面板部署Olaindex搭建自有网盘</a></p><p><a href="https://imwnk.cn/archives/bt-olaindex">BT 面板安装 OLAINDEX 全方位指南</a></p><p><a href="https://xtls.github.io/documents/level-0/ch04-security/">Project X</a> （参考了添加用户的那部分内容）</p><p>因为实效性的缘故，上面三份文档在我实际操作的过程中都有不同程度的小插曲，我在此再度整理了这一版实操教程，在此仍要感谢各位大佬的付出。</p><p>大家在安装过程中遇到了问题，也欢迎留言区讨论！～</p>]]></content>
      
      
      <categories>
          
          <category> 宝塔面板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPS教程 </tag>
            
            <tag> OneDrive </tag>
            
            <tag> olaindex </tag>
            
            <tag> OD </tag>
            
            <tag> 网盘直链 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>千字长文！甲骨文永久免费小鸡折腾记录📝</title>
      <link href="/archives/oracle-always-free-vps/"/>
      <url>/archives/oracle-always-free-vps/</url>
      
        <content type="html"><![CDATA[<h3 id="2022年4月2日补充"><a href="#2022年4月2日补充" class="headerlink" title="2022年4月2日补充"></a>2022年4月2日补充</h3><p>甲骨文DD成<code>Debian 10</code>的代码</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(wget --no-check-certificate -qO- <span class="string">&#x27;https://raw.githubusercontent.com/MoeClub/Note/master/InstallNET.sh&#x27;</span>) -d 10 -v 64 -p <span class="string">&quot;自定义root密码&quot;</span> -port <span class="string">&quot;自定义ssh端口&quot;</span></span><br></pre></td></tr></table></figure><p>甲骨文DD成<code>Ubuntu 20.04</code>的代码</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(wget --no-check-certificate -qO- <span class="string">&#x27;https://raw.githubusercontent.com/MoeClub/Note/master/InstallNET.sh&#x27;</span>) -u 20.04 -v 64 -p <span class="string">&quot;自定义root密码&quot;</span> -port <span class="string">&quot;自定义ssh端口&quot;</span></span><br></pre></td></tr></table></figure><hr><p>昨天在tg群里和小伙伴讨论德国免费小鸡<a href="https://support.euserv.com/index.iphp">Euserv</a>开通的情况，我自己也申请了，但是一天过去了还是显示<code>Available after processing</code>,非常得伤心。群里大佬让我试试甲骨文云。之前也一直听说过这个永久免费的小鸡，但是国人薅得太厉害导致官方审核越来越严格，一直没有尝试。想想下午也没啥事，自己手上也有visa卡，不如折腾一把。</p><p>结果出乎意料得顺利，开通到了日本东京区域的账号。</p><p>不过甲骨文云默认是用密钥登陆的，关闭了SSH服务，期间小鸡也会莫名其妙失联，DD系统也遇到很多问题，还有远程的监控之类的，总之碰到了不少麻烦，一直折腾到了凌晨两点。</p><p>这篇帖子暂时不涉及如何注册甲骨文云，主要是记录一下开通了甲骨文云账号之后，一系列需要注意的过程，其中有不少内容也同样适用于别家的VPS。</p><p><img src="https://img.laoda.de/i/2023/04/07/12v9r50-0.webp" alt="1618729438508-image"></p><h2 id="登陆"><a href="#登陆" class="headerlink" title="登陆"></a>登陆</h2><p>开通成功后，最好是通过官方给你的邮件里面的链接来登陆，</p><p><img src="https://img.laoda.de/i/2023/04/07/12vexah-0.webp" alt="1618718426305-image"></p><p>我自己输入官网登陆一直提示账号密码错误，</p><p><img src="https://img.laoda.de/i/2023/04/07/12vuy8l-0.webp" alt="1618718622633-image"></p><p>其实登陆的界面应该是这个：</p><p><img src="https://img.laoda.de/i/2023/04/07/12vzhp7-0.webp" alt="1618718483050-image"></p><h2 id="创建实例"><a href="#创建实例" class="headerlink" title="创建实例"></a>创建实例</h2><p><img src="https://img.laoda.de/i/2023/04/07/12wetpz-0.webp" alt="点击右上角的地球可以切换语言"></p><p>点击创建<strong>VM实例</strong></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-18/1618729560879-image.png"></p><p><strong>名称</strong>可以随便填一个，<strong>位置</strong>这边目前是选好的，也换不了，<strong>映像和配置</strong>这边可以点击<code>编辑</code>，选一个我们要的系统。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-18/1618729623972-image.png"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-18/1618729645762-image.png"></p><p>系统有centOS和Ubuntu，没有Debian，版本也可以选择。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-18/1618729663539-image.png"></p><h2 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h2><p>甲骨文云安全性做的比较好，默认是不允许SSH登陆的，只能用密钥登陆，所以，在这边我们生成一个自己的密钥，然后把公钥粘贴在这边。</p><p>windows系统可以用puttygen来生成,搭配putty登陆VPS（后续会讲怎么开启SSH登陆）</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-18/1618729679950-image.png"></p><p>地址在这边：<a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html">https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html</a></p><p>下载完成，可以点击<code>puttygen.exe</code></p><p>点击<code>generate</code></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-18/1618729698564-image.png"></p><p>你会发现这个进度条賊慢，其实是要你的鼠标在这上边划两下的，英文提示也写了。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-18/1618729718102-image.png"></p><p>这个公钥就是上面需要复制过去的，</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-18/1618729731949-image.png"></p><p>点击保存私钥，这份等下我们登陆的时候会用到。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-18/1618729747535-image.png"></p><p>点击确定，</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-18/1618729769671-image.png"></p><p>然后随便起个名字，最好是英文的，注意文件的格式是<code>PPK</code></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-18/1618729786173-image.png"></p><p>这边就配置好啦。</p><p>Linux用户可以直接在终端输入命令生成，但是后续登陆我没有研究过，这里不展开讲了，大家可以自行百度一下。</p><h2 id="设置硬盘大小"><a href="#设置硬盘大小" class="headerlink" title="设置硬盘大小"></a>设置硬盘大小</h2><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-18/1618729802891-image.png"></p><p>这边现在默认大小是<code>46.6GB</code>，如果要自定义大小的话，最少是<code>50GB</code>，因为免费的额度是<code>100GB</code>，所以我们可以把这边改成<code>50GB</code>（我们创建两个实例），不过我没改，留点余量吧，少薅一点。</p><p>设置好或者选择默认，然后就可以创建了。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-18/1618729819373-image.png"></p><p>输入：<a href="https://cloud.oracle.com/compute/instances">https://cloud.oracle.com/compute/instances</a></p><p>可以看到实例的状态。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-18/1618729832766-image.png"></p><h2 id="开启防火墙"><a href="#开启防火墙" class="headerlink" title="开启防火墙"></a>开启防火墙</h2><p>新建的甲骨文云帐号是关闭了所有的入站连接的,需要在防火墙处添加规则允许入站</p><p>点击前面实例的名称来到这个界面，点击<strong>子网</strong></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-18/1618729859295-image.png"></p><p>点击默认的安全子网</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-18/1618729872413-image.png"></p><p>入站规则 – 源CIDR 0.0.0.0&#x2F;0 – 所有协议</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-18/1618729885169-image.png"></p><p>添加成功，开放入站之后，就能在实例上运行程序了</p><h2 id="用putty访问甲骨文云Linux实例"><a href="#用putty访问甲骨文云Linux实例" class="headerlink" title="用putty访问甲骨文云Linux实例"></a>用putty访问甲骨文云Linux实例</h2><p>创建甲骨文云的实例后，上图中Public IP Address就是该实例的IP地址.</p><p>打开putty.在Host Name中IP地址,如下图例</p><p>点击<strong>putty</strong></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-18/1618729898417-image.png"></p><p>输入甲骨文云的IP地址，别急着点确定，</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-18/1618729911494-image.png"></p><p>找到左边，<code>SSH</code>——<code>Auth</code>,点击浏览，找到我们刚保存下来的私钥，</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-18/1618729927497-image.png"></p><p>就是这个<code>PPK</code>格式的文件,</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-18/1618729941342-image.png"></p><p>这里我们不点<code>open</code>,</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-18/1618729957435-image.png"></p><p>回到左边最上面点击<code>Session</code>,</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-18/1618729972733-image.png"></p><p>空白处随便填一个名字，最好是英文的，</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-18/1618729986046-image.png"></p><p>点击一下<code>save</code>，再点击这个名字，点击<code>open</code>,没什么问题的话会弹出一个“Putty Security Alert”的窗口，点击<code>是</code>就可以啦。</p><p>甲骨文CentOS的用户名为 <code>opc</code> ,Ubuntu系统的用户名为<code>ubuntu</code></p><p>使用了SSH key不用输入密码可进入命令行。</p><p>至此，已经可以使用putty工具来访问甲骨文云的实例了，以后所有的命令都能在这个工具里面敲了，比网页方便多了。</p><p>这样对服务器来说固然是好的，更安全了，除了这台有私钥的电脑，其他人都不能登陆你的服务器了，不过这样对于我这种平时用Mac的用户来说不方便，所以后面会介绍怎么开启SSH，这部分的知识反过来用，大家也可以学会怎么取消VPS的SSH登陆，让自己的服务器更安全。</p><h2 id="登陆之后的操作"><a href="#登陆之后的操作" class="headerlink" title="登陆之后的操作"></a>登陆之后的操作</h2><p>切换到root角色</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br></pre></td></tr></table></figure><h3 id="1、安装相关依赖"><a href="#1、安装相关依赖" class="headerlink" title="1、安装相关依赖"></a>1、安装相关依赖</h3><p>CentOS：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum -y install wget</span><br><span class="line">yum update -y &amp;&amp; yum install curl -y</span><br></pre></td></tr></table></figure><p>Ubuntu：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt-get install wget</span><br><span class="line">apt-get update -y &amp;&amp; apt-get install curl -y</span><br></pre></td></tr></table></figure><h3 id="2、设置root密码"><a href="#2、设置root密码" class="headerlink" title="2、设置root密码"></a>2、设置root密码</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">passwd   # 修改密码</span><br></pre></td></tr></table></figure><h3 id="3、开启SSH登陆"><a href="#3、开启SSH登陆" class="headerlink" title="3、开启SSH登陆"></a>3、开启SSH登陆</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line">vi /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><h4 id="centOS"><a href="#centOS" class="headerlink" title="centOS"></a>centOS</h4><p>按<code>i</code>进如编辑:</p><p>1、<code>PermitRootLogin</code>改为<code>yes</code></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-18/1618730006294-image.png"></p><p>2、<code>PasswordAuthentication</code>改为<code>yes</code></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-18/1618730019426-image.png"></p><p><code>esc</code>,<code>:wq</code>,保存退出。</p><h4 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h4><p>ubuntu感觉是故意的，颜色搞成这样看也看不清楚……</p><p>可以最前面的<code>#</code>注释了，颜色会变亮一些，修改的部分如下：</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-18/1618730038369-image.png"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-18/1618730053470-image.png"></p><p>3、重启sshd服务</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart sshd.service</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo service sshd restart</span><br></pre></td></tr></table></figure><p>好了，至此，我们可以愉快地像登陆普通VPS一样登陆甲骨文啦，换个终端登陆试试吧。</p><p>甲骨文云之所以这么做，其实是为了安全考量，用密钥登陆，取消root登陆，取消SSH登陆，会在一定程度上让我们的机子更安全，大家如果对自己的服务器安全性能要求高，也可以反向操作！</p><h3 id="4、卸载相关程序"><a href="#4、卸载相关程序" class="headerlink" title="4、卸载相关程序"></a>4、卸载相关程序</h3><h4 id="pcbind"><a href="#pcbind" class="headerlink" title="pcbind"></a>pcbind</h4><p>使用<code>netstat -ntlp</code>命令发现<code>rpcbind</code>监听了<code>111</code>端口,如担心安全可执行以下命令卸载禁用:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl stop rpcbind</span><br><span class="line">systemctl stop rpcbind.socket</span><br><span class="line">systemctl disable rpcbind</span><br><span class="line">systemctl disable rpcbind.socket </span><br></pre></td></tr></table></figure><h4 id="oracle-cloud-agent"><a href="#oracle-cloud-agent" class="headerlink" title="oracle-cloud-agent"></a>oracle-cloud-agent</h4><p>卸载甲骨文云官方后台监控程序</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl stop oracle-cloud-agent</span><br><span class="line">systemctl disable oracle-cloud-agent</span><br><span class="line">systemctl stop oracle-cloud-agent-updater</span><br><span class="line">systemctl disable oracle-cloud-agent-updater</span><br></pre></td></tr></table></figure><h3 id="5、防火墙相关"><a href="#5、防火墙相关" class="headerlink" title="5、防火墙相关"></a>5、防火墙相关</h3><h4 id="停止firewall"><a href="#停止firewall" class="headerlink" title="停止firewall"></a>停止firewall</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld.service</span><br></pre></td></tr></table></figure><h4 id="禁止firewall开机启动"><a href="#禁止firewall开机启动" class="headerlink" title="禁止firewall开机启动"></a>禁止firewall开机启动</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl disable firewalld.service</span><br></pre></td></tr></table></figure><h3 id="6、Ubuntu系统"><a href="#6、Ubuntu系统" class="headerlink" title="6、Ubuntu系统"></a>6、Ubuntu系统</h3><h4 id="开放所有端口"><a href="#开放所有端口" class="headerlink" title="开放所有端口"></a>开放所有端口</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">iptables -P INPUT ACCEPT</span><br><span class="line">iptables -P FORWARD ACCEPT</span><br><span class="line">iptables -P OUTPUT ACCEPT</span><br><span class="line">iptables -F</span><br></pre></td></tr></table></figure><p>Ubuntu镜像默认设置了Iptable规则，关闭它，</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt-get purge netfilter-persistent</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><h2 id="禁用插件"><a href="#禁用插件" class="headerlink" title="禁用插件"></a>禁用插件</h2><p>可以把这几个都关闭了。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-18/1618730077145-image.png"></p><h2 id="DD系统（有风险）"><a href="#DD系统（有风险）" class="headerlink" title="DD系统（有风险）"></a>DD系统（有风险）</h2><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><ul><li>系统更纯净</li><li>可以安装Debian了（官方没有）</li><li>可以安装windows</li></ul><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><ul><li>有可能会失联（我碰到了）</li><li>有可能会被删机器</li><li>有可能会被删号</li></ul><p>网上主流的一般是萌咖大佬的脚本，</p><p>以Debian10为例子</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash &lt;(wget --no-check-certificate -qO- &#x27;https://moeclub.org/attachment/LinuxShell/InstallNET.sh&#x27;) -d 10 -v 64 -a -firmware</span><br></pre></td></tr></table></figure><p>不带参数的话，可以会弹出选择系统。</p><p>非常遗憾，我DD之后，机子全部连不上，有台等了一个小时也连不上，后来我放弃了，不过我搜集了一些DD之前需要做的工作，特此列出来，供大家参考，有兴趣的可以研究一下，不过要有小鸡失联的心里准备……</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">萌咖大佬提示的注意事项：</span><br><span class="line">全自动安装默认root密码:MoeClub.org</span><br><span class="line">安装完成后请立即更改密码.</span><br><span class="line">能够全自动重装Debian系统.</span><br><span class="line">确保安装了所需软件:</span><br><span class="line"></span><br><span class="line">#Debian/Ubuntu:</span><br><span class="line">apt-get install -y xz-utils openssl gawk file</span><br><span class="line"></span><br><span class="line">#RedHat/CentOS:</span><br><span class="line">yum install -y xz openssl gawk file</span><br><span class="line">如果出现了错误,请运行:</span><br><span class="line"></span><br><span class="line">#Debian/Ubuntu:</span><br><span class="line">apt-get update</span><br><span class="line"></span><br><span class="line">#RedHat/CentOS:</span><br><span class="line">yum update</span><br><span class="line"></span><br><span class="line">bash &lt;(wget --no-check-certificate -qO- &#x27;https://moeclub.org/attachment/LinuxShell/InstallNET.sh&#x27;) -d 9 -v 64 -a -firmware</span><br></pre></td></tr></table></figure><p>DD的教程我翻了很多，这俩篇感觉还不错，供大家参考：</p><p>@33小筑<a href="https://33xz.cm/index.php/archives/4/">甲骨文免费机 DD Debian9或10</a></p><p>@server<a href="https://reves.ltd/archives/378/">Oracle Cloud Free DD系统为Debian 9</a></p><h3 id="【更新】DD实测已经成功，感谢mjj大佬"><a href="#【更新】DD实测已经成功，感谢mjj大佬" class="headerlink" title="【更新】DD实测已经成功，感谢mjj大佬"></a>【更新】DD实测已经成功，感谢mjj大佬</h3><p>内容来源于mjj，@<a href="https://hostloc.com/thread-826866-1-1.html">冲浪麦浪花郎</a> </p><h4 id="要点"><a href="#要点" class="headerlink" title="要点"></a>要点</h4><p>1、系统一定要选择<code>Ubuntu 16.04</code></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-18/1618753039331-image.png" alt="Ubuntu 16.04"></p><p>2、进入后执行如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt-get update &amp;&amp; sudo apt-get install -y xz-utils openssl gawk file net-tools</span><br></pre></td></tr></table></figure><p>然后按需求选择</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#Debian 9</span><br><span class="line">bash &lt;(wget --no-check-certificate -qO- &#x27;https://moeclub.org/attachment/LinuxShell/InstallNET.sh&#x27;) -d 9 -v 64 -a -firmware</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#Debian 10</span><br><span class="line">bash &lt;(wget --no-check-certificate -qO- &#x27;https://moeclub.org/attachment/LinuxShell/InstallNET.sh&#x27;) -d 10.3 -v 64 -a -firmware</span><br></pre></td></tr></table></figure><p>等待30min后系统DD完毕就可以了（是的这里要这么久）<br>10.3不喜欢可以改成10，如果你抽中EPYC最新版本内核支持</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">IP：你自己的</span><br><span class="line"></span><br><span class="line">端口22</span><br><span class="line"></span><br><span class="line">密码MoeClub.org（进入后务必修改）</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>亲测已经成功。</p><h2 id="BBR加速"><a href="#BBR加速" class="headerlink" title="BBR加速"></a>BBR加速</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.切换成 root</span><br><span class="line">2. 重新生成 grub2.cfg， 命令如下：</span><br><span class="line">grub2-mkconfig -o /boot/grub2/grub.cfg</span><br><span class="line">3. 跑你要跑的 bbr.sh</span><br></pre></td></tr></table></figure><p>我用了centOS7的系统，BBR加速脚本如下：</p><p>Ubantun的可以参考这边：<a href="https://blog.laoda.de/archives/vps-script#toc-head-1">新买了一台服务器“必须”要做的6件小事</a></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -N --no-check-certificate &quot;https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh&quot;</span><br><span class="line">chmod +x tcp.sh</span><br><span class="line">./tcp.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>成功加速了1台，后来开的到重启那一步，直接失联，网上也翻了很多教程，有不少说开了BBR机子会间歇性关机之类的等等问题，也有很顺利的，总之看下来我觉得很玄学。</p><p>这边po一个我觉得写得蛮好的帖子，有兴趣的小伙伴可以自行研究下：@Stille <a href="https://www.ioiox.com/archives/63.html">Oracle Cloud VPS CentOS 7 升级内核并开启官方原版BBR加速</a></p><h2 id="更换IP（实测成功，解锁奶飞可以用）"><a href="#更换IP（实测成功，解锁奶飞可以用）" class="headerlink" title="更换IP（实测成功，解锁奶飞可以用）"></a>更换IP（实测成功，解锁奶飞可以用）</h2><p>目前甲骨文云Oracle Cloud支持手动免费更换IP地址</p><p>、在实例概览界面下拉，点击<strong>附加的VNIC</strong>-<strong>MAC地址处3点</strong>-<strong>查看详细信息</strong></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-18/1618730150288-image.png"></p><p><code>IP地址</code>-<code>已分配处点击3点</code>-<code>编辑</code></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-18/1618730170704-image.png"></p><p>选择<strong>没有公共IP</strong>-<strong>更新</strong>. 这样就可以释放之前的IP地址,</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-18/1618730186229-image.png"></p><p>重复第2步，然后选择<strong>临时公共IP</strong>-<strong>更新</strong></p><p>系统会再次分配一个不同的IP地址到这个实例了。</p><p>至此，IP地址更换成功了。</p><h2 id="最后说明"><a href="#最后说明" class="headerlink" title="最后说明"></a>最后说明</h2><h3 id="删除实例及注意事项"><a href="#删除实例及注意事项" class="headerlink" title="删除实例及注意事项"></a>删除实例及注意事项</h3><p>终止甲骨文云实例时，一定要勾选<strong>永久删除附加的引导卷</strong></p><p>否则引导卷<code>超出100GB</code>的空间会扣费的!!!</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-18/1618730207778-image.png"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-18/1618730220874-image.png"></p><h3 id="快速进入实例页面的地址"><a href="#快速进入实例页面的地址" class="headerlink" title="快速进入实例页面的地址"></a>快速进入实例页面的地址</h3><p><a href="https://cloud.oracle.com/compute/instances">https://cloud.oracle.com/compute/instances</a></p><h3 id="失联"><a href="#失联" class="headerlink" title="失联"></a>失联</h3><p>从昨天到现在，我经历了很多种失联的情形。</p><ul><li><p>centOS7安装BBRPlus，重启失联</p></li><li><p>安装nginx，reboot失联</p></li><li><p>DD系统，登陆显示permission deny，失联</p></li></ul><p>还有一次是reboot之后，一开始失联，由于我已经来回删了7、8台实例了，实在不想再折腾了，我点击了重新引导，过了一段时间，能登陆了，</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/Mdnice3/2021-4-18/1618730244280-image.png"></p><p>所以，毕竟这是免费的机子，大家有时间可以随意折腾，如果想用它来稳定做一些事情，比如建站或是魔法，还是不要太折磨它，让它稳稳在那边工作就好。</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p>@虚拟号<a href="https://xunihao.net/867.html#Oracle-Cloud-6">2021年注册永久免费甲骨文云Oracle Cloud并创建免费实例最全攻略</a></p><p>@Stille <a href="https://www.ioiox.com/archives/99.html">Oracle Cloud VPS CentOS 7 修改主机名,BBR 失联,root 登录等注意事项</a></p><p>@Stille <a href="https://www.ioiox.com/archives/63.html">Oracle Cloud VPS CentOS 7 升级内核并开启官方原版BBR加速</a></p><p>@33小筑<a href="https://33xz.cm/index.php/archives/4/">甲骨文免费机 DD Debian9或10</a></p><p>@server<a href="https://reves.ltd/archives/378/">Oracle Cloud Free DD系统为Debian 9</a></p><p>感谢上面的作者，让我能顺利折腾自己的甲骨文云，同时也希望越来越多的人能在互联网上分享真正有用的信息，帮助到需要的人，而不是像大多数CSDN上的作者那样，导出复制粘贴，制造信息垃圾场。</p><p>大家有问题，也欢迎在下方留言区留言交流。</p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> VPS </tag>
            
            <tag> 甲骨文 </tag>
            
            <tag> VPS教程 </tag>
            
            <tag> 甲骨文云 </tag>
            
            <tag> 永久免费 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>购买 VPS 服务器有哪些需要注意的事项？</title>
      <link href="/archives/vps-pay-attention-to/"/>
      <url>/archives/vps-pay-attention-to/</url>
      
        <content type="html"><![CDATA[<p>有关于服务器的视频介绍，可以看这边：</p><p><strong>B站</strong>：<a href="https://space.bilibili.com/19956596/channel/detail?cid=173078">服务器能做什么系列</a></p><h2 id="服务条款-TOS"><a href="#服务条款-TOS" class="headerlink" title="服务条款(TOS)"></a>服务条款(TOS)</h2><p>要购买 VPS 之前，先看好 <strong>服务条款 (TOS)</strong> 或 <strong>用户可接受政策 (AUP)</strong> ，看清楚 VPS 禁止什么、不允许做什么，免得被封。</p><p><strong>一般来说主要是指的</strong>：网络滥用、硬件滥用、下载盗版资源、下载 BT 行为 (P2P)、存放色情内容等。</p><h2 id="更换IP政策"><a href="#更换IP政策" class="headerlink" title="更换IP政策"></a>更换IP政策</h2><p>如果你要购买<strong>日本、美国等热门地区的 VPS</strong> ，这些热门地区<strong>同代理软件及配置被墙几率要高于其他地区</strong>，如果不支持更换 IP，被墙后你就只能重新购买 VPS 。</p><p>IDC 会把 <strong>更换 IP 政策</strong> 写在 <strong>服务条款 (TOS)</strong> 中，但是关于<strong>被墙 IP 更换政策</strong> IDC 往往不会写上。所以要么<strong>注册后联系客服询问</strong>。如果有<strong>官方交流群</strong>、<strong>公告频道</strong>的话，也可以看看有没有写。</p><h2 id="退款政策"><a href="#退款政策" class="headerlink" title="退款政策"></a>退款政策</h2><p><strong>IDC 的 服务条款 (TOS) 是必须注明退款政策的</strong>，如果你翻遍了 <strong>服务条款 (TOS)</strong> 也没找到写退款的地方，那么说明是不接受退款。当然即使是不接受退款，也应该注明的，如果不注明，那么<strong>不推荐你购买这家 IDC</strong> 。</p><p><strong>如果 IDC 不支持退款</strong>，那么你购买 VPS 前要谨慎一些，因为就算你不满意也无法退款。</p><p><strong>如果 IDC 支持退款</strong>，但是没多少家 IDC 接受无理由退款，往往会做一定的限制，例如：</p><ul><li><strong>超过一定时间内没有联系客服退款</strong>，则不接受退款。</li><li><strong>流量使用超过多少GB</strong>，不接受退款。</li><li><strong>IP被墙后</strong>，不接受退款。</li><li><strong>违反用户使用条例后</strong>，不接受退款（例如违规 VPS 被封，想要退款）。</li></ul><h2 id="VPS-虚拟化"><a href="#VPS-虚拟化" class="headerlink" title="VPS 虚拟化"></a>VPS 虚拟化</h2><p>目前中小型 IDC 的 VPS 虚拟化无非就是：<strong>OpenVZ</strong>、<strong>KVM</strong>、<strong>XEN</strong>、<strong>VM-Ware</strong>。</p><p>你要说 OpenVZ 是超售专用虚拟化，也太绝对，因为其他两个的虚拟化也能实现超售，不过 OpenVZ 的更容易超售，所以价格普遍更便宜。</p><p><strong>而 OpenVZ 无法安装 TCP 加速软件</strong>（至于 VPS 内安装虚拟机来实现安装使用 BBR 行为，首先安装虚拟机是违规行为，其次该方式会造成性能损失，且对新手不友好）。</p><p><strong>KVM、XEN、VM-Ware 都可以安装 锐速、LotServer 以及 更换内核开启 BBR。</strong></p><p><strong>BBR加速相关脚本可以参考这篇</strong>：<a href="https://blog.laoda.de/archives/vps-script#toc-head-1">新买了一台服务器“必须”要做的6件小事</a></p><p>所以除非你实在预算少，否则我更<strong>推荐你选择 KVM、XEN、VM-Ware 虚拟化</strong>的 VPS 。</p><p>另外，XEN 虚拟化分为 <strong>xen-hvm</strong>（全虚拟化）和 <strong>xen-pv</strong>（半虚拟化），只有前者支持更换内核。</p><p>区分方法：ROOT 用户运行 <code>virt-what</code> 命令，若只显示 <code>xen</code> 则为 xen-pv（半虚拟化），同时显示 <code>xen</code> 和 <code>xen-hvm</code> 则为 xen-hvm（全虚拟化）。</p><h2 id="流量的单向计算与双向计算的区别"><a href="#流量的单向计算与双向计算的区别" class="headerlink" title="流量的单向计算与双向计算的区别"></a>流量的单向计算与双向计算的区别</h2><p>IDC 的 VPS 流量分为 <code>单向计算</code> 与 <code>双向计算</code>。而<code>单向计算</code>又分为 <code>只算出站流量 (VPS 上传)</code> 和 <code>VPS 上传</code>、<code>下载哪个流量消耗多算哪个</code>。</p><p>如果你不明白是什么意思，下面举个例子：</p><p>假设 VPS 上面搭建了代理软件，然后你通过本地代理客户端下载了个 <code>100MB</code> 大小的文件。文件首先会下载到 VPS ，<code>消耗 100MB 流量</code>。接着 VPS 会把该文件上传给你，<code>消耗 100MB 流量</code>。</p><p>如果 VPS 的流量计算方式为：<code>单向计算</code>，那么后台计算的<code>流量消耗为 100MB</code>。<br>如果 VPS 的流量计算方式为：<code>双向计算</code>，那么后台计算的<code>流量消耗为 200MB</code>。</p><p>如果你买 VPS 是要<code>搭建代理（或者 VPN、端口转发、中转）</code>，那么<code>双向计算</code>方式会让你的<code>流量翻倍</code>。</p><h2 id="购买-VPS-时不要使用代理软件"><a href="#购买-VPS-时不要使用代理软件" class="headerlink" title="购买 VPS 时不要使用代理软件"></a>购买 VPS 时不要使用代理软件</h2><p>如果你注册账号的时候，国家和地区填写的都是中国，但是的代理软件是其他国家（代理全局或者该 IDC 网站走代理了），导致信息不一致，很容易就被当成欺诈的而不给开通 VPS 。结果钱没了， VPS 也没了。</p><p>如果你不小心购买 VPS 时走代理导致被判断为欺诈了，可以发工单联系客服解释，也许有机会给你解封或者退款。</p><p>不要闲麻烦，有问题就发工单给客服，国外的服务一般都还是比较不错的，一般都会帮你解决好问题。</p><p>如果你的英文不是很好的话，强烈推荐用这个翻译网站辅助——<a href="https://www.deepl.com/translator">Deepl</a>，这也是目前我用过的最牛的翻译网站，吊打百度、谷歌。</p><h3 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h3><p><a href="https://blog.laoda.de/archives/vps-script#toc-head-1">新买了一台服务器“必须”要做的6件小事</a></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p>@P3TERX ZONE：<a href="https://p3terx.com/archives/what-should-i-pay-attention-to-when-purchasing-a-vps-server.html">购买 VPS 服务器有哪些需要注意的事项？</a></p>]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPS </tag>
            
            <tag> 云服务器 </tag>
            
            <tag> 购买注意 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Telegram：新手指南、使用教程及频道推荐（持续更新中）</title>
      <link href="/archives/telegram/"/>
      <url>/archives/telegram/</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-4-1/1617279181822-image.png" alt="telegram"></p><p>电报是迄今为止最棒的即时聊天软件，在这个自由新世界，不必自我审查（Freedom of speech）。</p><span id="more"></span><p>🧱 TG 在中国大陆必须 <a href="https://blog.laoda.de/archives/ss">番茄</a> 后才能使用。不过，学会科学上网，难道不是当代数字公民的必备技能吗？</p><p>📁 文章出自tingtalk.me 网站已经于 2020-04-04 被墙了。</p><p>💡 全文有一万五千多字，善用右侧的目录栏和查找功能（<code>Ctrl</code> + <code>F</code>），助你定位想要看到的内容。</p><p>✍️ 如需下载可编辑的 Markdown 源文档，请访问 <a href="https://raw.githubusercontent.com/ting-talk/blog/master/source/_posts/digital-life/telegram.md">庭说的 GitHub 仓库</a>。</p><h2 id="✈️-电报介绍"><a href="#✈️-电报介绍" class="headerlink" title="✈️ 电报介绍"></a>✈️ 电报介绍</h2><h3 id="🚶‍♂️-遗世独立"><a href="#🚶‍♂️-遗世独立" class="headerlink" title="🚶‍♂️ 遗世独立"></a>🚶‍♂️ 遗世独立</h3><p>2013 年 5 月 20 日，斯诺登向《卫报》媒体透露棱镜计划（<a href="https://zh.wikipedia.org/zh-hans/%E7%A8%9C%E9%8F%A1%E8%A8%88%E7%95%AB">PRISM</a>）：</p><blockquote><p>我愿意牺牲掉这一切（工作、收入和女朋友）（把真相告诉世人），因为美国政府利用他们正在秘密建造的这一个庞大监视机器摧毁隐私、互联网自由和世界各地人们的基本自由的行为让他良心不安。by <a href="https://zh.wikipedia.org/zh-cn/%E7%88%B1%E5%BE%B7%E5%8D%8E%C2%B7%E6%96%AF%E8%AF%BA%E7%99%BB">Edward Snowden</a></p></blockquote><p>许多人第一次意识到 Ta 们的数字通信遭到了监视（The year Telegram was born was marked by the Snowden Revelations, when many people realized for the first time their digital communications were being watched.）。</p><p>2013 年 8 月 14 日，杜洛夫兄弟（<a href="https://zh.wikipedia.org/wiki/%E4%BF%9D%E7%BE%85%C2%B7%E6%9D%9C%E6%B4%9B%E5%A4%AB">Pavel Durov</a> 和 <a href="https://zh.wikipedia.org/zh-cn/%E5%B0%BC%E5%8F%A4%E6%8B%89%C2%B7%E6%9D%9C%E6%B4%9B%E5%A4%AB">Nikolai Durov</a>）正式发布了开源的（<a href="https://telegram.org/faq#q-why-not-open-source-everything">Open Source</a>）Telegram（特指客户端）。这个充满理想主义的软件不接受外部投资（不需要向任何股东负责），也不会通过广告盈利，且挣钱永远不会是 Telegram 的终极目标（<a href="https://telegram.org/faq#q-how-are-you-going-to-make-money-out-of-this">Making profits will never be an end-goal for Telegram</a>），所以 Telegram 至今没有向第三方披露过一个字节的用户私人数据。Telegram 只会默默地践行一个理念：这个星球上的每个人都享有自由的权利（Everyone on the planet has a right to be free.）。This is the Telegram way：</p><blockquote><p>We believe that humans are inherently intelligent and benevolent beings that deserve to be trusted; trusted with freedom to share their thoughts, freedom to communicate privately, freedom to create tools. This philosophy defines everything we do. 我们相信人类天生就是聪明和仁慈的，值得信任的；坚信人类可以自由地分享想法，自由地私下交流，自由地创造工具。 这种哲学定义了我们所做的一切。by <a href="https://telegram.org/blog/200-million">Pavel Durov</a></p></blockquote><p>截止 2020 年 12 月 23 日，<a href="https://t.me/durov/142">Telegram 已有 5 亿月活跃用户</a>。</p><h3 id="👍-近乎完美"><a href="#👍-近乎完美" class="headerlink" title="👍 近乎完美"></a>👍 近乎完美</h3><ul><li><p>**<a href="https://telegram.org/faq#q-what-are-your-thoughts-on-internet-privacy">高度加密</a>**：安全性极高的大众化即时沟通软件，使用独有的网络传输协议 <a href="https://core.telegram.org/mtproto">MTProto</a>。</p></li><li><p>**<a href="https://telegram.org/faq#q-wait-0-o-do-you-process-take-down-requests-from-third-parties">没有审查</a>**：不用担心被封号，<a href="https://telegram.org/faq#q-there-39s-illegal-content-on-telegram-how-do-i-take-it-down">除非执法调查单位能证明用户是恐怖分子</a>。</p></li><li><p><strong>云端同步</strong>：聊天历史无缝同步到所有的设备上（Cloud Storage）。纵使设备损坏，但数据固若金汤（Secret Chat 除外）。</p></li><li><p>**<a href="https://telegram.org/blog/cache-and-stickers">不占内存</a>**：不必在设备上存储所有的聊天记录，因为数据一直保存在云端，你随时可以取回来，你也可以完全删除。</p></li><li><p><strong>超大群聊</strong>：封顶 20 万人，配合各种管理工具（例如限制发言间隔），让大型申请群的交流井井有条。</p></li><li><p>**<a href="https://telegram.org/blog/animated-stickers">表情贴纸</a>**：采用 <a href="https://tingtalk.me/raster-to-vector/">矢量</a> 格式，高清而富有趣味；支持自制表情包（<a href="https://telegram.org/blog/stickers-revolution">Custom Sticker Sets</a>）并用 Emoji 调用。</p></li></ul><p><strong>反观微信</strong></p><ul><li>微信掌门人可能是一个无马（码）不欢的 <a href="https://jikipedia.com/definition/854299075">骑兵</a>：每次登录微信电脑版都要扫码时，我的心中都会万马奔腾。</li><li>只能发送小于 100 MB 的文件；一次只能发送 9 张图片，而且每次发送都要勾选原图（Telegram 会记住这个用户习惯）。</li><li>占用巨大的存储空间，备份与同步的体验特别差，也不能换成欧盟号码导出用户数据。</li></ul><blockquote><p>注册微信的时候，用户会默认同意 <a href="https://weixin.qq.com/agreement?lang=zh_CN">腾讯微信软件许可及服务协议</a> ，其中在 7.1.2 提到一个霸王条款：「微信帐号的所有权归腾讯公司所有，用户完成申请注册手续后，仅获得微信帐号的使用权，且该使用权仅属于初始申请注册人。……」。</p><p>用户免费使用微信（无所有权），微信收集用户的私人数据，贩卖给广告商，这无可厚非。但当用户想要取回 Ta 所创造的内容（数字资产）时，例如导出微信个人数据（朋友圈数据和收藏功能数据等），只好借助欧盟的 GDPR（通用数据保护条例）行使数据可携权。于是我花了 5.26 USD（含税）买了一个比利时的手机号码，微信却猖言道：「<a href="https://help.wechat.com/cgi-bin/micromsg-bin/oshelpcenter?opcode=2&id=1208117b2mai141125mnzm6j">由于当地法规限制，WeChat 暂不支援中国大陆用户将绑定的手机号码更换为欧盟手机号码。</a>」</p><p>请问是哪条「当地法规」？这不是「法制」，而是「Fuck 制」：强奸一个个没有反抗能力的用户！<code>2020-04-22</code></p></blockquote><p>原谅我「口吐芬芳」，不懂中国特色。</p><h3 id="👎-瑕不掩瑜"><a href="#👎-瑕不掩瑜" class="headerlink" title="👎 瑕不掩瑜"></a>👎 瑕不掩瑜</h3><p>欢迎访问 <a href="https://bugs.telegram.org/">Feature Suggestion Platform</a>，向 Telegram 提交缺陷报告和功能建议（Bugs and Suggestions），一起把 Telegram 做大做强。</p><h4 id="🐼-中文搜索体验差"><a href="#🐼-中文搜索体验差" class="headerlink" title="🐼 中文搜索体验差"></a>🐼 中文搜索体验差</h4><p>如何改善？有三个办法。</p><h5 id="手动分词"><a href="#手动分词" class="headerlink" title="手动分词"></a>手动分词</h5><p>Telegram 的中文搜索是以「词组」为单位的，以标点符号或空格作为词的间隔。</p><p>辜鸿铭说过：真正的自由，并不意味着可以随心所欲，而是可以自由地做正确的事情。</p><p>在搜索框输入：</p><ul><li><code>真正的自由</code></li><li><code>并不意味着可以随心所欲</code></li><li><code>而是可以自由地做正确的事情</code></li></ul><p>都可搜到这条历史信息，因为标点符号充当了分词符。但是这些词未免太长了吧？！不过别忘了 Telegram 分词规则，我们可以手动添加多余的标点符号（例如井号 <code>＃</code>）或空格来<strong>分词</strong>：</p><p><code>#辜鸿铭 说过：真正的 #自由，并不意味着可以随心所欲，而是可以自由地做正确的事情。</code></p><p>点击以下词组，或者在搜索框输入：</p><ul><li><code>#辜鸿铭</code></li><li><code>#自由</code></li></ul><p>都可以找到这句话。</p><h5 id="导出文件"><a href="#导出文件" class="headerlink" title="导出文件"></a>导出文件</h5><p>嫌手动分词太麻烦了？那就在电脑上导出 HTML 或 JSON 格式的聊天记录，想怎么搜就怎么搜。</p><p>已经有人向 Telegram 提交了 <a href="https://bugs.telegram.org/c/724">改善中文搜索的提案</a>，请为这个 Suggestion 投票和鼓气。拜托了。</p><p><strong>关联阅读</strong></p><blockquote><ul><li><a href="https://medium.com/@nevik.w39/%E7%82%BA%E4%BB%80%E9%BA%BC-telegram-%E4%B8%8D%E8%83%BD%E6%90%9C%E5%B0%8B%E4%B8%AD%E6%96%87%E8%A8%8A%E6%81%AF-6b7d07690e6f">为什么 Telegram 不能搜索中文讯息 - 翁君牧</a></li><li><a href="https://www.newlearner.site/2020/04/25/telegram-search.html">Telegram 中文搜索方案探索 - Newlearner</a></li></ul></blockquote><h4 id="🙃-硬币的另一面"><a href="#🙃-硬币的另一面" class="headerlink" title="🙃 硬币的另一面"></a>🙃 硬币的另一面</h4><p>在加密通信「庇护」下的土壤，滋生了臭名昭著的网络性犯罪案件：<a href="https://zh.wikipedia.org/zh-hans/N%E5%8F%B7%E6%88%BF%E4%BA%8B%E4%BB%B6">N 号房事件</a>。所幸的是，2020 年 11 月 26 日，主犯赵主彬一审判处监禁 40 年。</p><p>以及存在大量的 NSFW 内容、币圈广告和灰色产业链。科技能否向善，在于我们能否约束自己内心的 <a href="https://zh.wikiquote.org/zh-hans/%E7%BD%97%E7%BF%94">邪念</a>。</p><h4 id="📱-只能用手机号码注册"><a href="#📱-只能用手机号码注册" class="headerlink" title="📱 只能用手机号码注册"></a>📱 只能用手机号码注册</h4><ul><li>国外：手机号不用实名制，相对安全。</li><li>国内：通过 Google Voice 注册电报，并且可以绕开私聊限制。</li></ul><p>而且，添加陌生人到通讯录（Add to contacts），记得<strong>每次</strong>都要取消勾选 <code>Share my phone number with ***</code>。Telegram 在这个方面上没有记住用户习惯，不应该呀，我去反馈反馈。</p><p>另外，如果你的手机号码，被某人保存在 Ta 的手机通讯录，Ta 也开放了通讯录给 Telegram。当你用这个手机号码注册 Telegram 后，Ta 就会第一时间知道你也加入 Telegam 了。所以对隐私有要求，请使用无需实名的虚拟号码或者单独小号来注册。</p><h3 id="🗓️-逃离微信"><a href="#🗓️-逃离微信" class="headerlink" title="🗓️ 逃离微信"></a>🗓️ 逃离微信</h3><p>我与 Telegram 的结缘，始于 2016 年春。那时我刚学会了科学上网，并下载了 Telegram 这个 Instant Messaging app。虽然我在电报上找不到朋友和我聊天，但我并没有卸载 Telegram，因为相比输入法和微信，Telegram 提供了丰富的 <a href="https://emojipedia.org/">Emoji</a> 供我选择。如此一来，我在 Android 手机上也能使用最新的 Emoji 点缀朋友圈。</p><p>近年来，天下苦微信久矣。随着言论审查力度的加大，任何「风吹草动」都要「斩草除根」：</p><ul><li><a href="http://www.cac.gov.cn/">Cyberspace Administration of China</a> 会因为我转发一则关于 <a href="https://zh.wikipedia.org/zh-hans/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E5%AE%AA%E6%B3%95%E4%BF%AE%E6%AD%A3%E6%A1%88_(2018%E5%B9%B4)">中华人民共和国宪法修正案</a> 的 Twitter 评论到 24 人的微信群，几小时后，请我到最近的派出所「<a href="https://tingtalk.me/yum-cha/">喝茶</a>」，那是我第一次坐警车。</li><li>微信上无法发送某些链接（例如纽约时报的文章），但不显示发送失败，让你以为发出去了，其实只对你可见。</li><li>微信会秋后算账，删除我之前写的一篇介绍 <a href="https://tingtalk.me/search-tips/">搜索技巧</a> 的文章，接着 <a href="https://tingtalk.me/">博客</a> 在中国大陆地区被墙，<a href="https://tingtalk.me/mp-archives/">公众号</a> 永久封号。虽然公众号写了 4 年只有五百个关注者，但每一个订阅者都来之不易。</li></ul><p>经过一系列发生我身上的 <a href="https://zh.wikipedia.org/zh-hans/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E7%BD%91%E7%BB%9C%E5%AE%A1%E6%9F%A5">屏蔽事件</a> 后，让我意识到中文互联网已经完全沦陷了，于是逃难到 Telegram。经过一段时间的使用后，我彻底成为了 Telegram 的「<a href="https://jikipedia.com/definition/13187">自来水</a>」，见人就夸。然而身边的亲朋好友却不为所动，不愿跟我一起数字移民到一个可以安心说话的地方，甘愿做「温室里的花朵」和「笼的传人」，享受表面上的岁月静好。我不会责怪 Ta 们，如果你看过<a href="https://ddrk.me/the-shawshank-redemption/">《肖申克的救赎》</a>，就能理解这种「放弃抗争」的心态。</p><blockquote><p>刚入狱的时候，你痛恨周围的高墙，慢慢地，你习惯了生活在其中，最终你发现，自己不得不依靠它而生存。by <em>The Shawshank Redemption</em></p></blockquote><p>既然说不动认识我的人，但世界那么大，人口那么多，网络世界上一定有一群人，Ta 们和我一样，反感「温室园丁」不透明的做法，不愿做一只数字农场里的电子绵羊，相信「自由价更高」。</p><p>我要当一个 <a href="https://kenengba.com/post/3393.html">踹车轮</a> 的人，为我心中的理想世界投票。因此我熬了几个月，把 Telegram 官网的 <a href="https://telegram.org/faq">FAQ</a> 和 <a href="https://telegram.org/blog">Blog</a> 全部看完了（从 2013 年创立至今），结合 Google 搜索引擎旁征博引，整理出这篇<del>可能是</del>中文互联网内容最翔实，排版最精美的《电报指南》，目的就是尽可能地为读者呈现 Telegram 的强大、私密以及友好的用户体验，Make Telegram great again。</p><blockquote><p>2016 年国庆，我花了一周时间看完了「即刻 app」的所有主题（圈子），写了一篇三千多字文章：《即刻 App - 不再错过你感兴趣的资讯》(<a href="https://wemp.app/posts/6e4830bc-845d-4f2c-ad78-959c9a89e4eb">图文版</a> | <a href="https://tingtalk.me/mp-archives/">文字版</a>）。<del>即刻已经没有复活的可能了</del>（<a href="https://m.okjike.com/download">即刻 App</a> 居然在 2020 年 6 月 10 日回来了，但是缺失了话题追踪功能），Telegram 顺势成了新的资讯中心。</p></blockquote><p>欢迎各位读者逃离微信（<a href="https://theinitium.com/article/20200619-technology-escape-from-wechat/">Escape from the WeChat</a>），转移到没有监控和审查的地方 ，一起在这片乐土上过上<del>没羞没臊</del>体面的数字生活。</p><p><img src="/telegram/reply-by-durov.png" alt="reply-by-durov"></p><blockquote><p>在 <a href="https://t.me/durovschat">Durov’s Chat</a> 用中式英语给教程做推广，受到 <a href="https://t.me/durovschat/283">Pavel 的肯定</a>。</p></blockquote><h2 id="🌟-注册使用"><a href="#🌟-注册使用" class="headerlink" title="🌟 注册使用"></a>🌟 注册使用</h2><h3 id="👇-下载登录"><a href="#👇-下载登录" class="headerlink" title="👇 下载登录"></a>👇 下载登录</h3><p>请进入 <a href="https://telegram.org/apps">Telegram Apps 的官方下载页面</a>，选择对应的平台，下载，安装，注册。</p><p>自由开放的 Telegram 在各平台都有数十种客户端，各有哪些优缺点，又该如何选择呢？请查阅 <a href="https://tlgr.tw/">Telegram 客户端版本比较</a>，但我不推荐使用第三方电报客户端，安全没有保证。</p><p><strong>如果你有注册或登录问题</strong></p><p>先从 <a href="https://telegra.ph/Common-Login-Problems-03-12">常见登录问题</a> 中寻找方法，无果，联系 Telegram：</p><ul><li>途径一：请使用此 <a href="https://telegram.org/support">表格</a> 与 Telegram 联系。</li><li>途径二：在 Twitter 上联系 <a href="https://twitter.com/smstelegram">Telegram Login Help</a>（@smstelegram）</li></ul><p><strong>如何在电脑上使用 Telegram for Desktop</strong></p><ol><li>打开客户端</li><li>点击右上角的 <code>SETTINGS</code>（设置）&gt; <code>Connection type</code>（连接类型）&gt; <code>Use custom proxy</code>（使用自定义代理）&gt; <code>ADD PROXY</code>（添加代理），以 Shadowsocks(R) 为例：</li></ol><ul><li>SOCKS </li><li>Hostname: <code>127.0.0.1</code></li><li>Port: <code>1080</code>（不同的番茄客户端，端口略有不同）</li></ul><p>使用 Clash 番茄的用户，可跳过这一步，选择 <code>Use system proxy settings</code>（使用系统代理设置）。</p><h3 id="🐼-汉化界面"><a href="#🐼-汉化界面" class="headerlink" title="🐼 汉化界面"></a>🐼 汉化界面</h3><p>既然已经出来混了（突破网络墙），首选使用英文版的 Telegram（突破语言墙），好像加起来也没几个单词。要是一点英文底子都没有：</p><ol><li><a href="https://t.me/setlanguage/zh-hans-beta">点此安装官方简体中文语言包</a> </li><li>选择 <code>CHANGE</code>（更改）</li><li>即可把界面语言替换为简体中文</li></ol><p>截至 2020 年 11 月 01 日，Telegram for Android 翻译已完成 95% 了（其他平台也差不多），但不妨碍日常使用。</p><h2 id="🔒-账号设置"><a href="#🔒-账号设置" class="headerlink" title="🔒 账号设置"></a>🔒 账号设置</h2><p>2020 年 7 月 26 日新增视频头像（<a href="https://telegram.org/blog/profile-videos-people-nearby-and-more#profile-videos">Profile Videos</a>）功能。</p><p>支持登录多个账号。<a href="https://t.me/TelegramTips/178">Multiple accounts: preview chat list. You can press and hold on another connected account in Settings for a sneak peek of its chats list.</a></p><h3 id="👤-设置用户名"><a href="#👤-设置用户名" class="headerlink" title="👤 设置用户名"></a>👤 设置用户名</h3><p>你可以在 <code>Setting</code>（设置）里面填写一个 <code>Username</code>（用户名）。设置后，别人能够在不知道你的电话号码的情况下，通过用户名找到你。</p><ul><li>用户名可以随时更改或删除（用户名为空）。</li><li>用户名不区分大小写（TingTalk &#x3D; tingtalk），但 Telegram 会记住的大小写偏好。</li></ul><p><strong>侵权</strong></p><ul><li><a href="https://telegram.org/faq#q-what-if-someone-is-pretending-to-be-me">如果一个骗子假装是你</a>，联系 <a href="https://t.me/notoscam">@notoscam</a>。</li><li>如何举报假冒的频道或群组：点击右上角的 <code>...</code> &gt; <code>Report</code> &gt; <code>Fake Account</code> </li><li>针对品牌方，<a href="https://telegram.org/faq#q-what-do-i-do-if-my-username-is-taken">用户名被占用怎么办？</a>把你在 Facebook、Twitter 或 Instagram 的用户名（两个平台以上）发给 <a href="https://t.me/username_bot">@username_bot</a>。</li><li>如果你看到表情包（sticker sets）、频道（channels）或机器人（bots）侵犯了你的版权，请提交投诉到 <a href="mailto:&#x64;&#x6d;&#99;&#97;&#x40;&#116;&#101;&#108;&#101;&#x67;&#x72;&#x61;&#x6d;&#x2e;&#x6f;&#x72;&#x67;">&#x64;&#x6d;&#99;&#97;&#x40;&#116;&#101;&#108;&#101;&#x67;&#x72;&#x61;&#x6d;&#x2e;&#x6f;&#x72;&#x67;</a></li></ul><p><strong>联系人</strong></p><ul><li>添加和删除联系人（Contacts）都是单向操作，双方的通讯录都是独立的（你中有我，我中可能没有你），也没有通知。</li><li>（单向）添加联系人之后，加入共同小组后，通讯录好友会排在小组名单前面。如果你想加入一些不为人知的群组，还是用小号吧。</li><li>点击左侧菜单栏 &gt; <code>Contacts</code>（联系人）&gt; <code>Find People Nearby</code>（寻找附近的人）。</li><li><a href="https://telegram.org/blog#multi-sharing-from-other-apps">转发消息时，长按联系人 &#x2F; 群组 &#x2F; 频道可多选。</a></li></ul><h3 id="💢-解除私聊限制"><a href="#💢-解除私聊限制" class="headerlink" title="💢 解除私聊限制"></a>💢 解除私聊限制</h3><p>自由的土壤吸引了比特币、社工库、NSFW 等灰色产业到电报野蛮生长，因为这些国产老鼠屎对电报的滥用，导致使用中国大陆的手机号码（+86）注册 Telegram 后，私聊 Ta 人时，可能会提示 <code>Sorry, you can only send messages to mutual contacts at the momet.</code>（对不起，你现在只能发送私信给双向联系人。），这表明此账号被判定为 Spam（垃圾信息）账号了。</p><p>如何解除私聊限制：在 Telegram 搜索 <a href="https://t.me/SpamBot">@SpamBot</a>，点击 <code>START</code>，然后依次回复以下话术（仅供参考）：</p><ol><li>But I can’t message non-contacts.</li><li>No, I’ll never do any of this.</li><li>I can’t chat with non-contacts.</li><li>Accident.</li></ol><p>大概半小时之后（有些人要十几天），即可解除禁言。</p><p>另外，若用户在 24 小时内访问超过 200 个群组或频道的链接（点击打开就算访问，不需要加入），就会被打入冷宫 24 小时。禁闭期间，无法通过链接访问新的群组或频道（点击链接一直转圈而无法访问）。</p><h3 id="⛑️-隐私和安全"><a href="#⛑️-隐私和安全" class="headerlink" title="⛑️ 隐私和安全"></a>⛑️ 隐私和安全</h3><p>依次点击 <code>Setting</code>（设置）&gt; <code>Privacy and Security</code>（隐私和安全）</p><h4 id="🙈-隐藏手机号码"><a href="#🙈-隐藏手机号码" class="headerlink" title="🙈 隐藏手机号码"></a>🙈 隐藏手机号码</h4><p><code>Phone number</code>（手机号码）&gt; <code>Who can see my phone number</code>（谁可以看到我的手机号码：<code>Nobody</code> 不允许任何人）</p><p>对隐私有要求，或者彻底解除 +86 开头的手机号码的私聊限制，可以把手机号码换绑到非中国区的手机号码，例如 Google Voice：</p><ol><li><a href="https://tingtalk.me/google-account/">注册 Google 账号</a>。</li><li>在 Google 或淘宝上搜索关键词 <code>Google Voice</code> 或 <code>GV</code> ，购买别人注册下来的号码。</li><li>转移到自己的 Google 账号上。</li></ol><p><strong>以及</strong></p><ul><li>🧨 <strong>再次强调</strong>：添加陌生人到通讯录（Add to contacts），记得<strong>每次</strong>都要取消勾选 <code>Share my phone number with ***</code>。</li><li>开启 SIM（手机卡）密码（PIN 码），纵使别人捡到你的手机（卡），也不能启用 SIM，也就不能收到登录验证码。</li></ul><h4 id="🎭-匿名转发"><a href="#🎭-匿名转发" class="headerlink" title="🎭 匿名转发"></a>🎭 <a href="https://telegram.org/blog/unsend-privacy-emoji#anonymous-forwarding">匿名转发</a></h4><p><code>Forwarded messages: Nobody</code>（引用转发来源：不允许任何人）</p><p>启用此设置后，转发你的消息将无法指向（链接）回你的帐户，只会在 <code>From ***</code>（<code>来自***</code>）字段中显示一个无法点击的昵称（非用户名）。而昵称不是唯一的，所以通过这种方式，将没有证据证明某条消息是你发送的（无法溯源）。</p><h4 id="📍-隐藏通话-IP-地址"><a href="#📍-隐藏通话-IP-地址" class="headerlink" title="📍 隐藏通话 IP 地址"></a>📍 隐藏通话 IP 地址</h4><p><code>Calls</code> &gt; <code>Peer-to-Peer</code>：<code>Nobody</code></p><p>Telegram 为了提高语音通话的质量，默认采用端对端连接（Peer-to-Peer）。由于流量没有经过 Telegram 服务器中转，所以会暴露用户的 IP 地址。但是禁用端对端通话后，通话质量会略有下降。</p><p>另外，配合使用 <a href="https://www.torproject.org/">Tor</a>（The Onion Router、洋葱路由器）可以隐藏用户真实 IP 地址、避免网络监控及流量分析。</p><h4 id="🔐-本机锁定码"><a href="#🔐-本机锁定码" class="headerlink" title="🔐 本机锁定码"></a>🔐 <a href="https://telegram.org/blog/photo-editor-and-passcodes">本机锁定码</a></h4><p><code>Passcode Lock</code> 相当于给 Telegram 加上应用锁。这样一来，临时借用你设备的人也看不到你的小秘密。</p><p>设置完密码锁之后，可以在下方的自动锁（<code>Auto-lock</code>）设定时长，一旦超过时长未操作，那么 Telegram 将自动上锁。或者在聊天列表页面上主动点击锁头图标，Telegram 就会立即锁定应用，新消息通知将不包括文本或发件人姓名。再次进入应用时，要求输入锁定码。</p><p>在 Android 客户端上，还可以关闭「在任务切换页面显示内容」（<code>Show App Content in Task Switcher</code>），同时在 Telegram 内也无法截屏。</p><p>密码锁只在当前设备可用，不会同步到云端或其他设备，所以在不同的设备上可以设置不同的密码锁。如果忘记，只能重装 App，而且重新登录之后，需要重新设置新的密码锁，私密聊天（Secret Chat）也不会同步回来。</p><h4 id="✌️-两步验证"><a href="#✌️-两步验证" class="headerlink" title="✌️ 两步验证"></a>✌️ <a href="https://telegram.org/blog/sessions-and-2-step-verification#two-step-verification">两步验证</a></h4><p><code>Two-step verification</code>（两步验证：添加密码提示和 ❗️ 安全邮箱 ❗️）</p><p>以后登录时，输入验证码后，还要输入密码。</p><ul><li>安全密码：请勿使用纯数字密码，可使用开源的 <a href="https://keepass.info/">KeePass</a> 生成高强度密码。</li><li>电子邮箱：Gmail 或者 Outlook，尽量不用国内的邮箱。</li></ul><h4 id="💥-删除账户"><a href="#💥-删除账户" class="headerlink" title="💥 删除账户"></a>💥 删除账户</h4><p><code>Delete my account if away for 1 month/3 months/6 months/1 year </code>（删除我的帐户若离线时间达 1 个月 &#x2F; 3 个月 &#x2F; 6 个月 &#x2F; 1 年）</p><p><strong>自动删除</strong>：以上就是电报自带账户自毁机制（<a href="https://telegram.org/blog/android-2-0#account-self-destruction">Account Self-Destruction</a>）</p><p><strong>主动删除</strong>：<a href="https://telegram.org/faq#q-how-do-i-delete-my-account">不想使用此账号</a>，可 <a href="https://my.telegram.org/auth?to=delete">永久删除账户（Delete Account）</a></p><p><strong>为什么要给账户设置自毁机制</strong></p><ul><li>Telegram 作为一个免费的非商业软件，没有任何收入来源，为了节约服务器的存储空间，Telegram 会自动删除长时间不上线的用户。再说了，Telegram 也不需要你的私人数据。</li><li>如果不慎丢失了 SIM（手机卡），此前未开启 SIM 卡的 PIN 码（强烈建议开启）和 Telegram 账户的两步验证，新的「主人」就能把你的 Telegram 账号占为己有。但是假如你设置了 1 个月不上线就销户，坏人在第 32 天捡到你的手机，不过此时你的 Telegram 账号已经不存在了。</li></ul><h4 id="🛡️-其它隐私设置"><a href="#🛡️-其它隐私设置" class="headerlink" title="🛡️ 其它隐私设置"></a>🛡️ 其它隐私设置</h4><ul><li>使用没有个人特征的头像（记得在个人资料里删除历史头像）、昵称和用户名，确保硅基身份不会和碳基身份产生关联。</li><li>不使用 Touch ID 或 Face ID 解锁你的手机，只以密码锁屏（数字 + 字母），以免被「执法人员」控制身体后强行解锁。</li></ul><h2 id="💬-对话界面"><a href="#💬-对话界面" class="headerlink" title="💬 对话界面"></a>💬 对话界面</h2><p>Telegram 有一个非常人性化的特性：<strong>记忆浏览进度</strong>，打开对话界面会自动跳转到未读消息 <code>Unread Messages</code>（The app restores your previous scroll position when you switch back to a chat）或者上次的未读位置。纵使重新安装 Telegram，没看完的消息，状态依旧是未读的。</p><h3 id="✏️-消息发送前"><a href="#✏️-消息发送前" class="headerlink" title="✏️ 消息发送前"></a>✏️ 消息发送前</h3><p>打上句号之前，检查一遍内容是否有误，虽然 Telegram 支持无限期的（撤回）修改。</p><h4 id="↩️-引用消息"><a href="#↩️-引用消息" class="headerlink" title="↩️ 引用消息"></a>↩️ 引用消息</h4><p><strong>手机</strong></p><ul><li>左滑（Swipe left）<a href="https://telegram.org/tour/groups#replies">Reply</a> 消息。</li><li>长按，在弹出的界面中选择 Reply。</li></ul><p><strong>电脑</strong></p><ul><li>左键单击对话框的右上角的 Reply。</li><li>左键双击消息的空白处，例如在时间附近。</li><li>右击消息，在弹出的菜单中选择 Reply。</li></ul><p>点击引用的消息，就会向上滚动到原始消息（<a href="https://telegram.org/blog/replies-mentions-hashtags#replies">If you tap on the quote, the app scrolls up to the original message</a>）。</p><p>假设从 <code>Unread Messages</code> 开始浏览动态（已发布 120 条 Post），遇到新消息引用了旧消息，例如庭说频道的第 100 条消息 <a href="https://t.me/tingtalk/100">https://t.me/tingtalk/100</a> 引用第 56 条消息 <a href="https://t.me/tingtalk/56%EF%BC%8C%E7%82%B9%E5%87%BB%E5%BC%95%E7%94%A8%E7%9A%84%E6%B6%88%E6%81%AF%EF%BC%8C%E5%8D%B3%E5%8F%AF%E5%AE%9A%E4%BD%8D%E5%88%B0%E7%AC%AC">https://t.me/tingtalk/56，点击引用的消息，即可定位到第</a> 56 条消息。如何回到第 100 条消息，点击右下角的 🔽 就会回到第 100 条消息，而不是回到最新的消息（shows an arrow button to go back to the previous location. This makes navigating conversations in groups easy even if you’ve been away for a while）。这是一个非常动人的细节，深深地被 Telegram 折服。</p><h4 id="📝-文本格式化"><a href="#📝-文本格式化" class="headerlink" title="📝 文本格式化"></a>📝 <a href="https://t.me/TelegramTips/86">文本格式化</a></h4><p>学会插入超文本链接，避免冗长的 URL 霸屏（简短的网址例外），是一种网络美德。</p><h5 id="全平台适用"><a href="#全平台适用" class="headerlink" title="全平台适用"></a>全平台适用</h5><p>采用有限的几种 <a href="https://tingtalk.me/markdown">Markdown</a> 语法，例如：</p><ul><li><strong>加粗</strong>（前后加入两个星号）：<code>**</code>bold<code>**</code></li><li><del>删除线</del>（前后加入两个波浪号）：<code>~~</code>strikethrough<code>~~</code></li><li><code>等宽字体</code>（前后加入一个重音符）：<code>`</code>monospace<code>`</code></li><li><em>斜体</em>（前后加入两个下划线）：<code>__</code>italic<code>__</code>（原生 Markdown 语法是前后一个星号）</li></ul><h5 id="Desktop（桌面电脑端）"><a href="#Desktop（桌面电脑端）" class="headerlink" title="Desktop（桌面电脑端）"></a>Desktop（桌面电脑端）</h5><ol><li>在编辑区输入文本。</li><li>左键选择想要格式化的文本。</li><li>右击 &gt; <code>Formatting</code>（格式选项）。</li></ol><table><thead><tr><th>Formatting</th><th>Shortcut for Windows</th></tr></thead><tbody><tr><td><strong>Bold</strong>（加粗 ）</td><td><code>Ctrl</code> + <code>B</code></td></tr><tr><td><em>Italic</em>（斜体）</td><td><code>Ctrl</code> + <code>I</code></td></tr><tr><td><u>Underline</u>（下划线）</td><td><code>Ctrl</code> + <code>U</code></td></tr><tr><td><del>Strikethrough</del>（删除线）</td><td><code>Ctrl</code> + <code>Shift</code> + <code>X</code></td></tr><tr><td><code>Monospace</code>（等宽字体）</td><td><code>Ctrl</code> + <code>Shift</code> + <code>M</code></td></tr><tr><td><a href="https://tingtalk.me/">Create link</a>（超链接）</td><td><code>Ctrl</code> + <code>K</code></td></tr><tr><td>Plain text（纯文本）</td><td><code>Ctrl</code> + <code>Shift</code> + <code>N</code></td></tr></tbody></table><p>重磅推荐 <code>Ctrl</code> + <code>K</code>！简单几步，让排版清清爽爽。</p><h5 id="Android（安卓）"><a href="#Android（安卓）" class="headerlink" title="Android（安卓）"></a>Android（安卓）</h5><ol><li>在编辑区输入文本。</li><li>长按选择想要格式化的文本。</li><li>原生 Android 系统会直接弹出格式化选项；魔改安卓系统（例如 MIUI）需要轻触界面右上角的三个点（在顶栏右侧，大概在通知栏电量 🔋 的下方。非常刁钻的一个位置），才能看到文本格式化选项。</li></ol><h5 id="iOS（iPhone-iPad）"><a href="#iOS（iPhone-iPad）" class="headerlink" title="iOS（iPhone &amp; iPad）"></a>iOS（iPhone &amp; iPad）</h5><ol><li>在编辑区输入文本。</li><li>长按选择想要格式化的文本，会弹出一些文字操作的选项。</li><li>轻触 <code>BIU</code>（或许藏在 ▶️ 后面），即可看到文本格式化选项。</li></ol><p>如果觉得以上格式化文本的方法太麻烦，打乱了输入节奏，可在任意聊天框输入 <a href="https://telegram.me/bold">@bold</a>，接着使用 <a href="https://tingtalk.me/markdown/">Markdown</a> 编辑消息（最多输入 256 字符），最后选择 <code>Custom markdown</code>。</p><h4 id="️⃣-主题标签"><a href="#️⃣-主题标签" class="headerlink" title="#️⃣ 主题标签"></a>#️⃣ 主题标签</h4><p>任何以 <code>#</code> 开头的词组，以标点符号或空格结尾的词组（<a href="https://telegram.org/blog/replies-mentions-hashtags#hashtags">hashtags</a>）都可以被点击搜索，也相当于用标签给消息分组。</p><p>康德说过：<code>#自由 不是让你想做什么就做什么，自由是教你不想做什么，就可以不做什么。</code> </p><p>消息发出后，<code>#自由 </code> 就会变成一个可点击搜索的状态。</p><h4 id="🌅-发送原图"><a href="#🌅-发送原图" class="headerlink" title="🌅 发送原图"></a>🌅 发送原图</h4><p>先选择想要发送的图片（不止于 9 张）：</p><ul><li>Android：点击弹出窗口右上角的三个点，<code>Send without compression</code></li><li>iOS、macOS 和 Windows：<code>Send as a file</code></li></ul><p>请注意：</p><ul><li>原图不会压缩图片，但是会暴露文件名、隐藏的 GPS 信息和拍摄信息，慎重发送。</li><li>Telegram 会记住你的操作习惯，下次发送图片时不必再次勾选原图选项。</li></ul><h4 id="🎬-发送视频"><a href="#🎬-发送视频" class="headerlink" title="🎬 发送视频"></a>🎬 发送视频</h4><p><strong>支持时间戳（<a href="https://telegram.org/blog/silent-messages-slow-mode#timestamps-and-improved-scrubbing">Timestamp</a>）</strong>：发送本地视频或 YouTube 视频时，在 <code>Add a caption</code>（添加标题）里标记你最喜欢的时刻（mark your favorite moments），例如：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">建议直接跳到 05:06 开始欣赏，有惊喜。</span><br></pre></td></tr></table></figure><p><code>05:06</code> 会自动高亮显示，点击 <code>05:06</code>，视频就会从第 5 分 6 秒播放。其中 <code>05:06</code> 必填项，提示的话可以选填。</p><p>引用回复本地视频或 YouTube 视频也支持加入时间戳（<a href="https://t.me/TelegramTips/84">Timestamps in replies and captions open videos and YouTube links to that exact moment.</a>）。</p><p>你发现了吗？YouTube 和哔哩哔哩的评论区也是支持这种时间戳。</p><p><strong>不支持时间戳的软件和网页，怎么办</strong></p><ul><li>YouTube：<a href="https://www.youtube.com/watch?v=SyM3jMFjess&t=05m06s">https://www.youtube.com/watch?v=SyM3jMFjess&amp;t=05m06s</a><ul><li>右键点击进度条</li><li>在弹出的菜单中选择 <code>复制当前时间的视频网址</code></li></ul></li><li>哔哩哔哩：<a href="https://www.bilibili.com/video/av55857100?t=14m15s">https://www.bilibili.com/video/av55857100?t=14m15s</a><ul><li>不支持复制当前时间的视频网址，需要手动填写</li></ul></li></ul><p><strong>参数说明</strong></p><ul><li><code>?t=</code> &#x2F; <code>&amp;t=</code> 时间  time</li><li><code>h</code> 时 hour</li><li><code>m</code> 分 minute</li><li><code>s</code> 秒 second</li></ul><p>发送视频时，可选择压缩等级。<a href="https://t.me/TelegramTips/114">Change the resolution of a video from the editor’s quality slider.</a></p><p><strong>内置视频播放器</strong>（<a href="https://telegram.org/blog/share-preview#new-video-player">in-app media player</a>）：<br>直接在 app 内观看 YouTube 或 Vimeo 视频，不必跳转到浏览器或者相应的视频 app。操作逻辑与国外视频 App 保持一致：双击左侧快退，双击右侧快进。</p><p><strong>制作 GIF 动图</strong><br>在发送视频时，点击视频打开编辑窗口，使其静音（tap the mute audio button），新的 GIF 就诞生了，还会自动保存在最近使用的 GIF 里（recent GIFs tab）。</p><h3 id="📡-消息发送时"><a href="#📡-消息发送时" class="headerlink" title="📡 消息发送时"></a>📡 消息发送时</h3><p>手机上长按（电脑上右击）消息发送键：</p><ul><li><code>Send without sound</code>（静音发送消息）：纵使对方在睡觉，你的 urgent idea 也不会搅人春梦，简直就是为健忘的人而设计。</li><li><code>Scheduled Message</code>（<a href="https://telegram.org/blog/scheduled-reminders-themes">定时发送</a>）<ul><li>发送日程消息时，对方并不知道你使用了定时发送。</li><li>在 <a href="https://telegram.org/blog/albums-saved-messages#saved-messages">Saved Messages</a>（我的收藏）也可以发送定时消息作为提醒（Set a reminder）。</li><li><code>Send when * comes online</code>（<a href="https://telegram.org/blog#send-when-online">当对方上线时发送</a>）：这样就可以排在对方聊天列表的前面（Put you right at the top of their chat list.）。此功能需要对方在隐私设置里开启展示最后上线时间（This option only appears for users who share their Last Seen status with you, and vice versa.）</li></ul></li></ul><p>接收者可屏蔽联系人 &#x2F; 群组 &#x2F; 频道的消息通知（<a href="https://telegram.org/blog/shared-files#mute-notifications">Mute Notifications</a>）：</p><ul><li>1 个小时</li><li>4 个小时</li><li>18 个小时</li><li>3 天</li><li>永久静音</li></ul><h3 id="🔙-消息发送后"><a href="#🔙-消息发送后" class="headerlink" title="🔙 消息发送后"></a>🔙 消息发送后</h3><p>点击消息，选择 <code>Pin</code>，即可在频道、群组或私聊界面中置顶多个消息（<a href="https://telegram.org/blog/pinned-messages-locations-playlists#multiple-pinned-messages">Multiple Pinned Messages</a>）。在群组中置顶消息时，可强制通知全员（notify all members），即使成员的群组已经设置为静音。</p><h4 id="✔️-消息状态"><a href="#✔️-消息状态" class="headerlink" title="✔️ 消息状态"></a>✔️ 消息状态</h4><p>消息的读取状态（回执）分为两种</p><ul><li>One check（✔️）：发送成功。在微信，有些消息没发送出去，只对你可见，也不会有发送失败的感叹号 ❗。这是对用户赤裸裸的欺骗 。</li><li>Two checks（✔️✔️）：消息已阅。瞥见状态栏弹出来的消息，不会产生已读标记。因此，一直显示单勾，不代表对方没看到信息。</li></ul><p>一个偷看消息的小技巧：在对话列表，长按头像可预览消息，但消息状态不会变为已读。（<a href="https://t.me/TelegramTips/257">Pull up a preview of messages – without making messages as read.</a> ）</p><h4 id="✏️-消息更正"><a href="#✏️-消息更正" class="headerlink" title="✏️ 消息更正"></a>✏️ 消息更正</h4><p>在 Telegram，说出去的话不会像泼出去的水收不回来，在 48 小时内（频道例外），你都可以重新编辑（<a href="https://telegram.org/blog/edit">Edit your messages after posting</a>），包括文字、图片和视频（<a href="https://t.me/TelegramTips/81">Edit sent media to re-crop, re-decorate or completely replace photos and videos.</a>），所以：</p><ul><li>文字出现 typos，不用删除，多久之前发的消息都能随时更正（Edit）。</li><li>图片忘记打马赛克，但因为有图片说明（配文），懒得撤回重输，可以当场抹除敏感信息，当场换图片（<a href="https://telegram.org/blog/unread-replace-2x#replace-media-and-add-captions">Replace Media</a>）。</li><li>视频发错了，善后方式与图片同理。</li><li>图片换视频，视频换图片，Why not?</li></ul><p>如何替换图片或视频？长按或右击消息，选择 <code>Edit</code>：</p><ul><li>通用法：点击笔头图标 ✏️（或 Replace file&#x2F;photo），弹出资源窗口，选择正确的图片和视频即可替换。</li><li>桌面端：复制正确的图片和视频，回到 Telegram，粘贴即可替换。</li></ul><p>并且支持直接标记别人发来的图片，修改完再发出去，无需保存在本地图库。<a href="https://t.me/TelegramTips/118">Instantly edit and send back media you receive to add notations or decorations without saving it to your gallery.</a></p><h4 id="👇-长按消息"><a href="#👇-长按消息" class="headerlink" title="👇 长按消息"></a>👇 长按消息</h4><ul><li>消息可以无限期撤回（<a href="https://telegram.org/faq#q-can-i-delete-my-messages">Delete Messages</a>）：删除信息时，勾选 <code>Also delete for ***</code>，聊天记录就可以双向删除。通话记录也支持这个特性（<a href="https://telegram.org/blog/move-history#control-your-digital-footprint">Call history can also be deleted for all sides at any time.</a>）。电报服务器更不会存储被删除的聊天记录和通话记录，因此数据将彻底永远消失。</li><li>选择部分消息（<a href="https://telegram.org/blog/verifiable-apps-and-more#select-parts-of-messages">Select Parts of Messages</a>）：长按 2 次消息，可选择部分文字，而不是复制全文（Copy Selected Text）。</li></ul><h4 id="🗣-朗读消息"><a href="#🗣-朗读消息" class="headerlink" title="🗣 朗读消息"></a>🗣 朗读消息</h4><p><a href="https://telegram.org/blog/voice-chats#announce-messages-on-ios">Announce Messages</a> 目前由 iOS 用户独占。你可以让 Siri 在你的耳机里大声读出你收到的信息，即使是在洗碗的时候也可以保持聊天的最新状态。</p><p>开启路径：iOS Settings &gt; Notifications &gt; Announce Messages。</p><h4 id="⏳-自动删除"><a href="#⏳-自动删除" class="headerlink" title="⏳ 自动删除"></a>⏳ 自动删除</h4><ul><li>自动删除只适用于定时器设置后发送的消息，以前的消息将保留在聊天记录中。</li><li>倒计时在消息发送时开始计时；而秘密聊天是阅后即焚，是从已读后开始计时。</li></ul><h3 id="🗣️-语音消息"><a href="#🗣️-语音消息" class="headerlink" title="🗣️ 语音消息"></a>🗣️ 语音消息</h3><ul><li>支持 2 倍速播放（<a href="https://telegram.org/blog/unread-replace-2x#double-time-playback-for-voice-and-video-messages">2X playback</a>）。</li><li>支持滑动进度条。（<a href="https://t.me/TelegramTips/105">Slide forward and back on voice messages to skip ahead or repeat something you missed.</a>）</li><li><a href="https://telegram.org/blog/verifiable-apps-and-more#podcast-and-audiobook-support">记忆播放位置</a>：超过 20 分钟的音频文件（<a href="https://telegram.org/blog/voice-chats-on-steroids#and-more">2021 年 3 月 18 日取消此限制</a>），Telegram 会帮你记住最后的播放位置，以便中断后再次收听（Telegram apps will remember your last position when resuming playback of audio files longer than 20 minutes.）。</li></ul><p>此外，在 Telegram 上进行语音通话（打电话），需要在番茄服务端&#x2F;客户端开启 UDP 转发。</p><h3 id="📲-视频通话"><a href="#📲-视频通话" class="headerlink" title="📲 视频通话"></a>📲 视频通话</h3><p>发起视频通话和音频通话后，如果屏幕上的 4 个 Emoji 一致，表示此连接已采用端到端加密，100% 安全。</p><p><a href="https://t.me/TelegramTips/193">Video Calls</a>: All voice and video calls are protected with end-to-end encryption. To confirm your connection, compare the four emoji shown on screen. If they match with your partner’s, your call is 100% secure.</p><h3 id="🙈-生动表情"><a href="#🙈-生动表情" class="headerlink" title="🙈 生动表情"></a>🙈 生动表情</h3><p><strong>Emoji（绘文字）</strong></p><p>按关键字搜索表情（<a href="https://telegram.org/blog/unsend-privacy-emoji#emoji-search-and-gifs">Search emoji by keyword</a>）：在消息框输入关键词，就会弹出相关的 Emoji。</p><ul><li><a href="https://translations.telegram.org/en/emoji">能触发 Emoji 的英文关键词合集</a></li><li><a href="https://translations.telegram.org/zh-hans/emoji">能触发 Emoji 的简体中文关键词合集</a></li></ul><p>如何在句中（mid-message）快捷添加 Emoji？<br>语法是 <code>:（英文半角冒号）</code> + <code>关键词</code>。例如输入 I am <code>:happy</code>，就会弹出开心相关的 Emoji，这样就不用从 Emoji 面板挑选 Emoji 了。</p><p><strong>Stickers（表情包）</strong></p><p>截至 2021 年 1 月 13 日，Telegram 上已有 20,000+ 免费的高清表情包。</p><p>在聊天窗口输入 <a href="https://t.me/sticker">@sticker</a> + Emoji，可以检索<strong>所有</strong>与 Emoji 相关表情包，例如 <code>@sticker 👍</code>。</p><p>部分 Emoji 支持动态播放（Animated Emoji）：在任意聊天窗口发送 1 个 <a href="https://zh.wikipedia.org/zh/%E4%B8%89%E7%8C%BF">非礼勿视猿</a> 🙈（<a href="https://emojipedia.org/see-no-evil-monkey/">See-No-Evil Monkey</a>），再动 Ta 试试，可爱吧！查看更多被 Telegram 赋予「生命」的动态 Emoji，请参阅 <a href="https://tingtalk.me/telegram-animated-emoji/">Telegram Animated Emoji List</a>。</p><p>📤 <strong>如何导出电报上的表情包</strong></p><ol><li>选择一个 Sticker to GIF Converter，例如 <a href="https://t.me/tgstogifbot">@tgstogifbot</a> 或 <a href="https://t.me/Sticker2GIFBot">@Sticker2GIFBot</a>（后一个 Bot 可下载整套表情包）</li><li>发送 Stickers，Bots 就会把 Telegram 上 tgs 格式的表情包转换为 gif 格式</li></ol><p>🗜️ <strong>在限制多多的微信 App 上，小于 1 MB 的 GIF 图片才会自动播放。如何压缩：</strong></p><ol><li>打开 <a href="https://www.tutieshi.com/compress/">图贴式</a>（网站），选择 GIF 压缩</li><li>宽度设置为 <code>240</code>，压缩质量 70（默认）</li><li>选择或拖拽一个或多个 GIF 到压缩窗口，<code>开始压缩</code></li><li>压缩完成后，（推荐使用 <a href="https://www.freedownloadmanager.org/zh/">IDM</a>）<code>打包下载</code></li></ol><p>此时某些表情包可能大于 1 MB，需要再压一次：</p><ul><li>方法一：修改 <a href="https://www.tutieshi.com/compress/">图贴式</a> 的压缩质量等级（压得太狠会失真）</li><li>方法二：使用 <a href="https://docsmall.com/gif-compress">docsmall</a>（网站）或者 <a href="https://tuya.xinxiao.tech/">图压</a>（软件）二次压缩</li></ul><p>为什么不用 Photoshop 压缩 GIF？因为会产生毛糙的白边。</p><p>两外，推荐一个可以批量修改图片尺寸的网站：<a href="https://www.iloveimg.com/zh-cn/resize-image">iLoveIMG</a></p><h3 id="📊-投票功能"><a href="#📊-投票功能" class="headerlink" title="📊 投票功能"></a>📊 <a href="https://telegram.org/blog/polls-2-0-vmq">投票功能</a></h3><p>只支持在群组和频道中发起，因为 <a href="https://t.me/TelegramTips/175">they feel lonely in one-on-one chats.</a></p><p><strong>发起人</strong></p><ul><li>支持：匿名投票（Anonymous Voting）、多选（Multiple Answers）、答题模式（ <a href="https://telegram.org/blog#quiz-mode">Quiz Mode</a>）。</li><li>不支持：修改发出的 Poll。</li></ul><p><strong>投票者 &#x2F; 答题者</strong></p><ul><li>不满意长按或右击投票（Poll）可以撤回投票（Retract vote）。</li></ul><h3 id="🖥️-电脑版技巧"><a href="#🖥️-电脑版技巧" class="headerlink" title="🖥️ 电脑版技巧"></a>🖥️ 电脑版技巧</h3><p>Windows 的 <code>Ctrl</code> 等于 macOS 中 <code>Command</code> ⌘。</p><ul><li><strong>快速多选</strong>：在对话界面的空白位置，按着鼠标左键不放，即可多选信息，然后选择转发或者删除。</li><li><strong>链接直达</strong>：按住 <code>Ctrl</code> 再点击 URL，直接打开链接，不必弹窗确认（Open this link? CANCEL &#x2F; OPEN）。</li><li><strong>缩放图片</strong>：按住 <code>Ctrl</code> 再旋转鼠标的滚轮，即可放大或缩小图片。</li><li><strong>切换分组</strong>：<ul><li>Ctrl &#x2F; Command + 1（对应第一个分组）</li><li>Ctrl &#x2F; Command + 2（第二分组）</li><li>Ctrl &#x2F; Command + 3（第三分组）</li><li>……</li></ul></li></ul><h2 id="📖-通用技巧"><a href="#📖-通用技巧" class="headerlink" title="📖 通用技巧"></a>📖 通用技巧</h2><h3 id="🌐-互联开放"><a href="#🌐-互联开放" class="headerlink" title="🌐 互联开放"></a>🌐 互联开放</h3><p>公开（Public）的频道或群组，是可以被搜索引擎索引（The contents of public channels can be seen on the Web without a Telegram account and are indexed by search engines.），并且不注册 Telegram 账号也看到公开频道或群组中的内容，方法就是在 Permanent link（永久链接）中加一个 <code>s</code>，例如 <a href="https://t.me/s/tingtalk">t.me&#x2F;s&#x2F;tingtalk</a>，即可在浏览器中查阅庭说频道。</p><p>一个用户最多可创建 10 个公开用户名（public usernames），包括公开的频道和群组。</p><h3 id="📅-创建日期"><a href="#📅-创建日期" class="headerlink" title="📅 创建日期"></a>📅 创建日期</h3><p>在任意对话窗口（例如 Saved Messages）输入 <code>https://t.me</code> &#x2F; <code>ID</code> &#x2F; <code>1</code>，例如 <a href="https://t.me/tingtalk/1">https://t.me/tingtalk/1</a></p><p>或者在浏览器的地址栏输入 <code>https://t.me</code> &#x2F; <code>s</code> &#x2F; <code>ID</code> &#x2F; <code>1</code>，例如 <a href="https://t.me/s/tingtalk/1">https://t.me/s/tingtalk/1</a></p><p>就会跳转到该群组或频道（未删除的）第一条消息，在其上方，可以看到创建日期（Channel created）</p><h3 id="🔍-搜索资源"><a href="#🔍-搜索资源" class="headerlink" title="🔍 搜索资源"></a>🔍 搜索资源</h3><p>去哪里找钟意的频道（Channel），群组（Group）和机器人（Bot）呢？</p><p>☝️ 在 Telegram 内直接搜索关键词，但中文搜索识别较差。例如，「庭说」的频道是 <a href="https://t.me/tingtalk">https://t.me/tingtalk</a></p><ul><li>搜索英文 <code>@tingtalk</code>（<code>t.me/</code> 后面的字符就是 ID），可以准确识别</li><li>搜索中文 <code>庭说</code>，可能无法识别</li></ul><p>✌️ 配合一些 <a href="https://tingtalk.me/search-tips/">Google 搜索技巧</a>，在 <a href="https://www.google.com/search?q=site:tingtalk.me">Google</a> 上搜索：</p><ul><li>关键词 + site:t.me，例如：<code>海贼王 OR one piece site:t.me</code></li><li>关键词 + telegram 及其俗称，例如：<code>Rick and Morty telegram OR 电报 OR TG</code></li></ul><p>这也再次证明了 Telegram 的内容是可以被 Google 等搜索引擎抓取的。反观国内的互联网江湖，各自割据，搞得网民苦不堪言。就拿微信来说，你不能在 Google 或者百度搜到公众号文章，这也是庭说另开一个独立博客的原因。</p><p>👌 Telegram 搜索引擎（非官方）</p><ul><li>网页版<ul><li><a href="https://xtea.io/ts.html#gsc.tab=0">名刀电报搜索</a></li><li><a href="http://www.sssoou.com/">sssoou.com</a></li><li><a href="https://tgtw.cc/">Telegram 公眾索引系統</a></li></ul></li><li>机器人<ul><li><a href="http://t.me/hao1234bot">@hao1234bot</a></li><li><a href="http://t.me/hao6bot">@hao6bot</a></li></ul></li></ul><h3 id="🔍-全局搜索"><a href="#🔍-全局搜索" class="headerlink" title="🔍 全局搜索"></a>🔍 全局搜索</h3><p><a href="https://t.me/TelegramTips/189">Search Filters</a>: To quickly find a specific message or media item, search filters allow users to refine results by keyword, source, media type and time period – all at once.</p><p>隐藏技巧：如何按日期搜索？</p><ol><li>打开在 Telegram 移动端首页</li><li>点击搜索框</li><li>输入日期，即可按照日期筛选历史消息<ul><li><code>2021</code>：2021 年</li><li><code>01.2021</code> &#x2F; <code>Jan 2021</code>：2021 年 1 月</li><li><code>01.13.2021</code>：2021 年 1 月 13 日</li></ul></li></ol><h3 id="☁️-多端同步"><a href="#☁️-多端同步" class="headerlink" title="☁️ 多端同步"></a>☁️ 多端同步</h3><p> Telegram 可以在多个设备上<strong>同时</strong>使用。以下是我的设备列表：</p><ul><li>2 台 Windows 电脑（开机自启）</li><li>1 部 Android 手机</li><li>1 部 iPhone 手机</li><li>1 个 <a href="https://web.telegram.org/">网页端</a></li><li>……</li></ul><p>并且具备以下优势：</p><ul><li>登录过的设备，下次登录时，不必再次扫描二维码或者输入密码。</li><li>云草稿（<a href="https://telegram.org/blog/drafts">Cloud drafts</a>）：除了消息可在各个平台同步之外，连未完成编辑的消息（草稿）都可以跨设备同步。Now you can start typing on your phone, then continue on your computer – right where you left off. 但是长文本还是不要放在草稿箱了，就怕 Bug 爬上来。如果草稿丢失，在桌面端按 Ctrl + Z 试试。</li><li>与 WhatsApp 不同的是，手机下线 Telegram 后，其他设备的 Telegram 并不会退出。</li></ul><p>允许传送最大 2000 MiB 的文件，简直就是绝佳的「文件传输助手」：</p><ul><li>把 <a href="https://telegram.org/blog/albums-saved-messages#saved-messages">Saved Messages</a>（收藏夹）当作是 <a href="https://tingtalk.me/gtd">GTD</a> 中 Inbox。并且每条保存的消息都有一个 ▶️ 按钮，可以将你带到最初发布消息的位置。</li><li>建立多个私人频道（无数量限制），分类存放你的信息和资讯。你甚至可以在 Telegram 上传本地音乐或者录音到自己的频道，建立自己的云端音乐播放库和播客（Podcast）。<a href="https://t.me/TelegramTips/108">Create playlists by sending multiple songs at the same time.</a></li></ul><h3 id="📁-对话列表"><a href="#📁-对话列表" class="headerlink" title="📁 对话列表"></a>📁 对话列表</h3><p>在对话列表长按某个对话的左侧（头像）即可预览消息（Preview media）。</p><p>在对话列表长按某个对话的右侧：</p><ul><li><strong>删除对话（Delete chat）</strong>：勾选 <code>Also delete for ***</code>，即可同时删除双方所有的聊天记录。<ul><li>不用经过对方同意。如果你的朋友遭遇不测，你可以及时清除消息来保护自己和对方。</li><li>反之，需要保留证据时，请及时截图或（在桌面端）导出聊天记录。</li></ul></li><li><strong>归档对话（<a href="https://telegram.org/blog/folders#archived-chats">Archive chat</a>）</strong>：把不常用的群组和频道放到归档文件夹中，精简对话列表，<a href="https://telegram.org/blog/archive-and-new-design#everything-in-its-place">Everything in its place</a>。<ul><li>在移动端的对话列表里，从顶部往下拉，即可看到「已归档对话」，<a href="https://telegram.org/blog#mark-archive-as-read">长按可标记全部归档对话为已读状态</a>。</li><li>当未设置静音的存档对话收到通知时，它将从归档列表中返回到聊天列表中。</li></ul></li></ul><h3 id="📂对话分组"><a href="#📂对话分组" class="headerlink" title="📂对话分组"></a>📂<a href="https://telegram.org/blog/folders">对话分组</a></h3><p>从 <code>Settings</code> &gt; <code>Folders</code> 进入 <a href="tg://settings/folders">分组管理</a> 设置：</p><ul><li>最多创建 10 个分组。</li><li>每个分组都能置顶无数个对话（<a href="https://telegram.org/blog/folders#unlimited-pins">Unlimited Pins</a>）。</li></ul><p><strong>默认分组</strong></p><ul><li>Unread：未读消息组，快速消灭未读红点。</li><li>Personal：个人私聊组。</li></ul><p>Creat New Folder（新建分组）时有以下筛选条件可选：</p><ul><li>Contacts（联系人） </li><li>Non Contacts（非联系人）</li><li>Groups（群组）</li><li>Channels（频道）</li><li>Bots（机器人）</li><li>……</li></ul><p><strong>操作技巧</strong></p><ul><li>在对话列表界面，长按或者右击分组名可进行 Reorder（排序）、Edit（重命名）、Delete（删除）和 Mark ad read（标记为已读）等操作。</li><li>在 Telegram for Windows 中（macOS 电脑客户端同理），切换分组的键盘快捷键是：<ul><li>Ctrl + 0（收藏夹 Save Messages）</li><li>Ctrl + 1（第一个分组）</li><li>Ctrl + 2（第二个分组）</li><li>Ctrl + 3（第三个分组）</li><li>……</li><li>Ctrl + 9（已归档对话 Archived Chats）</li></ul></li><li>目前只支持在电脑客户端中设置分组图标（Folder Icons）。</li></ul><h3 id="🔴-关闭通知"><a href="#🔴-关闭通知" class="headerlink" title="🔴 关闭通知"></a>🔴 关闭通知</h3><ol><li><code>Settings</code>（设置）&gt; <code>Notifications and Sounds</code>（通知和声音）。</li><li><code>Badge Counter</code>（未读消息数量显示）：取消 <code>Include Muted Chats</code>（包含已关闭通知的对话）</li></ol><p>如此设置，只有未静音的对话（私聊 &#x2F; 群组 &#x2F; 频道）来消息了，才会收到「小红点」。</p><h3 id="🧹-清除缓存"><a href="#🧹-清除缓存" class="headerlink" title="🧹 清除缓存"></a>🧹 清除缓存</h3><p>此举只是暂时释放存储空间，因为媒体文件都会保留在 Telegram 云端，若需要可以再次下载，例如翻看历史消息的时候。</p><ol><li><code>Settings</code>（设置）</li><li><code>Data and Storage</code>（数据和存储）</li><li><code>Storage Usage</code>（存储使用情况）</li><li><code>Clear Telegram Cache</code>（清理缓存）</li></ol><h3 id="📲-导入数据"><a href="#📲-导入数据" class="headerlink" title="📲 导入数据"></a>📲 <a href="https://telegram.org/blog/move-history">导入数据</a></h3><p>每个人都可以通过 WhatsApp、 Line 和 KakaoTalk 等应用程序将聊天记录（包括视频和文档）迁移到 Telegram 上。以 WhatsApp 为例：</p><p><strong>iOS</strong></p><ol><li>打开 WhatsApp 的联系方式或群组信息页面（Contact Info or Group Info）</li><li>点击导出聊天（Export Chat）</li><li>然后在共享（Share）菜单中选择 Telegram</li></ol><p><strong>Android</strong></p><ol><li>打开 WhatsApp 聊天</li><li>点击更多（More） &gt; 导出聊天（Export Chat）</li><li>然后在分享菜单中选择 Telegram</li></ol><p>借助 Telegram 的云存档功能，再也不用担心聊天记录丢失的问题。</p><h3 id="🗃️-导出数据"><a href="#🗃️-导出数据" class="headerlink" title="🗃️ 导出数据"></a>🗃️ <a href="https://telegram.org/blog/export-and-more">导出数据</a></h3><p>⚠️此功能需在 <a href="https://desktop.telegram.org/">Telegram 电脑版</a> 上运行。</p><blockquote><p>The original meaning of the paper plane on the Telegram logo means “freedom”. For us, freedom of choice and data portability are paramount. People should be in complete control over their own data – and their own lives. Telegram 标志上的纸飞机的原意是「自由」。对我们来说，选择自由和数据便携性是最重要的。人们应该完全控制自己的数据——以及自己的生活。by <a href="https://t.me/durov/150">Pavel Durov</a></p></blockquote><p>聊天历史会被存储在 Telegram 云端，但是也可以导出部分（或全部）聊天记录到电脑上离线回味，而且排版还是原来的样子。</p><ol><li>打开 Telegram Desktop</li><li>选择某个对话</li><li>点击对话界面右上角的设置（三个点 …）</li><li>导出聊天记录（Export chat history）</li></ol><p>你也可以导出 Telegram 的所有数据。对，是所有，不仅仅是聊天记录，还有账号信息：</p><ol><li>打开 Telegram Desktop</li><li>依次点击 <code>Settings</code> &gt; <code>Advanced</code> &gt; <code>Export Telegram data</code></li><li>选择要导出的数据类型</li></ol><h3 id="🔞-解锁敏感内容"><a href="#🔞-解锁敏感内容" class="headerlink" title="🔞 解锁敏感内容"></a>🔞 解锁敏感内容</h3><p>如何在 iOS 原生客户端查看敏感内容（例如 NSFW），即使频道或群组被封禁：</p><ol><li>登录 <a href="https://web.telegram.org/">Telegram Web</a>（网页版）或者下载并登录 <a href="https://desktop.telegram.org/">Telegram Desktop</a>（客户端）。</li><li><code>Settings</code>（设置）&gt; <code>Privacy and Security</code>（隐私和安全）。</li><li><code>Sensitive content</code>（敏感内容）<ul><li>客户端：打开 <code>Disable filtering</code>（关闭过滤）</li><li>网页版：打开 <code>Show Sensitive Content</code></li></ul></li></ol><p>操作完成后，重新启动 iOS 原生客户端，即可 <code>Display sensitive media in public channels on all your Telegram devices</code>（允许在您所有登录 Telegram 的设备上显示公共频道内的敏感内容）。</p><h2 id="📣-频道推荐"><a href="#📣-频道推荐" class="headerlink" title="📣 频道推荐"></a>📣 频道推荐</h2><p><a href="https://telegram.org/tour/channels">Channels</a> 是向大众传播信息的完美工具（<a href="https://telegram.org/blog/channels">The perfect tool for broadcasting messages to the masses</a>）。通过 <a href="https://core.telegram.org/widgets/posts">Post Widget</a>，你可以将频道或公共群组的任何消息嵌入到任何地方（You can embed messages from public groups and channels anywhere.）。</p><p><strong>对于频道主</strong></p><ul><li><a href="https://telegram.org/tour/channels#hashtags">Hashtags</a>：多用 <code>#</code> （标签）给消息分类，方便快速检索（instant search）。</li><li>频道分析（<a href="https://telegram.org/blog/folders#channel-stats">Channel Stats</a>）📈：订阅人数超过 50 人（之前是 1,000  人）的频道会有详细的统计数据分析报告（<a href="https://telegram.org/tour/channels#detailed-statistics">Statistics</a>）。</li><li>频道可以有无数个订阅者，但是创建者只能邀请前 200 个成员到你的频道。</li><li>重现编辑（Edit）消息，不管多久之前。</li></ul><p><strong>对于订阅者</strong></p><ul><li><a href="https://telegram.org/tour/channels#subscriber-privacy">Subscriber Privacy</a>：关注者无法得知频道创建者（creator）是谁，也无法得知谁关注了这个频道，但是频道主知道谁关注了频道。</li><li>频道&#x2F;超级群组的关注上限是 500 个（具体数字未得到官方的求证），但是限制是一定存在的，因为限制提示语出现在官方翻译页面：抱歉，您已加入太多频道&#x2F;超级群组。请先退出一些频道&#x2F;超级群组后再加入。（<a href="https://translations.telegram.org/zh-hans/tdesktop/groups_and_channels/lng_join_channel_error">Sorry, you have joined too many channels and supergroups. Please leave some before joining this one.</a>）</li></ul><p><strong>如何通过 RSS 订阅 Telegram 频道</strong></p><p>有些用户觉得 Telegram 用手机号码注册不安全，但是又想第一时间获得 Telegram 公开频道的更新，那么可以 <a href="https://docs.rsshub.app/social-media.html#telegram">借助 RSSHub 生成电报公开频道的 RSS 订阅链接</a>，例如：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://rsshub.app/telegram/channel/tingtalk</span><br></pre></td></tr></table></figure><p>只要把 <code>tingtalk</code> 替换成其他公共频道的 Permanent link（永久链接）后缀即可。</p><p><strong>2020 年 9 月 30 开始，电报频道原生支持评论功能（<a href="https://telegram.org/blog/filters-anonymous-admins-comments#channel-comments">Channel Comments</a>）</strong></p><p>首先要 <a href="https://telegram.org/blog/privacy-discussions-web-bots#broadcasts-meet-group-chats">在频道的设置里绑定一个群聊（Group）</a>，频道中的每条新帖子（new post）都会自动转发到该群组并被置顶（Pin）。</p><p>频道发送消息后，有两个评论入口：</p><ul><li>频道：点击 <code>Leave a comment</code> 即可进入留言板（无需加入讨论组）。</li><li>群组：<ul><li>第一层评论：引用（Reply）回复对应的频道消息。</li><li>第二层评论：接龙引用第一层评论。</li><li>第 N 层评论：以此类推。</li></ul></li></ul><p>须知参差多态，乃是电报之福。术业有专攻，<strong>欢迎向我推荐其它领域的优质频道</strong>：</p><ol><li>在 Telegram 搜索 <a href="https://t.me/tingbot">@tingbot</a></li><li>简单说明推荐理由</li><li>优质频道将会更新在这篇《电报教程》里，让好内容得到更多的展现</li></ol><p>以下是我收集的频道，不代表同意其观点，也许为了丰富文章内容。如果你发现某些频道开始「作恶」了或者失效了，请联系我从这个列表中删除。</p><p>2020 年，你需要多运动，多吃蔬果，偶尔听 <a href="https://podcasts.cosmosrepair.com/">播客</a>，放下手机早点睡觉，少看鸡零狗碎的消息。</p><h3 id="✈️-电报"><a href="#✈️-电报" class="headerlink" title="✈️ 电报"></a>✈️ 电报</h3><table><thead><tr><th>频道</th><th>详情</th></tr></thead><tbody><tr><td><a href="https://t.me/telegram">Telegram News</a></td><td>👍 电报官方新闻频道。</td></tr><tr><td><a href="https://t.me/durov">Durov’s Channel</a></td><td>👍 杜罗夫（Telegram 创始人和 CEO）的频道。</td></tr><tr><td><a href="https://t.me/TelegramTips">Telegram Tips</a></td><td>👍电报小贴士（Tips）官方频道。</td></tr><tr><td><a href="https://t.me/TAndroidAPK">Telegram APKs for Android</a></td><td>Official channel for Telegram Android APKs. You can also download them <a href="https://telegram.org/dl/android/apk">here</a>.</td></tr><tr><td><a href="https://t.me/designers">Telegram Designers</a></td><td>向电报提你想要的功能 <a href="https://t.me/design_bot">@design_bot</a></td></tr><tr><td><a href="https://t.me/themes">Desktop Themes Channel</a></td><td><a href="https://telegra.ph/Create-Theme-Desktop-FAQ">电脑客户端主题创建指引</a> | <a href="https://telegram.org/blog/android-themes">Custom Themes 的简单介绍</a></td></tr><tr><td><a href="https://t.me/AndroidThemes">Android Themes Channel</a></td><td><a href="https://telegra.ph/Create-Theme-Android-FAQ">安卓客户端主题创建指引</a> | 更多技术细节参阅 <a href="https://core.telegram.org/themes">Custom Cloud Themes</a></td></tr><tr><td><a href="https://t.me/TelegramAuditions">Telegram Auditions</a></td><td>加入 Telegram Support Force，帮扶 Telegram 做大做强，详情参阅这份 <a href="https://tsf.telegram.org/">Initiative</a>。</td></tr><tr><td><a href="https://t.me/contest">Telegram Contests</a></td><td>Here we announce Telegram coding contests in Android Java, iOS Swift, JS, C&#x2F;C++.</td></tr><tr><td><a href="https://t.me/ISISwatch">ISIS Watch</a></td><td>电报官方反恐频道：<a href="https://t.me/isiswatch/2">每日汇报有多少恐怖组织相关的频道被封了</a>。</td></tr><tr><td><a href="https://t.me/TrendingStickers">Trending Stickers</a></td><td>Telegram 又新增了哪些表情包。</td></tr><tr><td><a href="https://t.me/tgflight">紙飛機</a></td><td>欢迎搭乘纸飞机，Porsche 和你聊聊 Telegram 的大小事。<a href="https://feeds.buzzsprout.com/837646.rss">播客 RSS 订阅链接</a>。</td></tr><tr><td><a href="https://t.me/TGgeek">TGgeek</a></td><td>TG 极客：分享 Telegram 使用技巧、重要资讯、常见问答、中文汉化、版本更新等信息。</td></tr><tr><td><a href="https://t.me/AntiRevoke">Anti Revoke Plugin</a></td><td>Telegram 本地消息防撤回插件，安全性未知。<a href="https://github.com/SpriteOvO/Telegram-Anti-Revoke/blob/master/README-CN.md">GitHub 项目地址</a>。</td></tr><tr><td><a href="https://t.me/SCP_079_INFO">SCP-079-INFO</a></td><td>免费并开源的群组管理机器人，需 <a href="https://scp-079.org/ApplyForUse/">申请</a> 通过后才能使用。<a href="https://scp-079.org/readme/">查看项目介绍</a>。</td></tr><tr><td><a href="https://t.me/TgTrillion">电报指南 &amp; 精品排行榜</a></td><td>👍 电报中文群组和频道收录。</td></tr><tr><td><a href="https://t.me/CN_DH">CN 导航</a></td><td>中文导航频道。</td></tr></tbody></table><h3 id="🦠-疫情"><a href="#🦠-疫情" class="headerlink" title="🦠 疫情"></a>🦠 疫情</h3><table><thead><tr><th>频道</th><th>详情</th></tr></thead><tbody><tr><td><a href="https://t.me/nCoV2019">2019-nCoV 疫情实时播报</a></td><td>👍 COVID-19 中文消息 by NFNF。</td></tr><tr><td><a href="https://t.me/corona">Coronavirus Info</a></td><td>各国官方疫情通报频道列表（A list of official channels with information on COVID-19）。</td></tr><tr><td><a href="https://t.me/FinancialTimes">Financial Times: Coronavirus news</a></td><td>COVID-19 英文消息 by 金融时报。</td></tr></tbody></table><h3 id="📰-新闻"><a href="#📰-新闻" class="headerlink" title="📰 新闻"></a>📰 新闻</h3><p>在一个后真相时代，要分清事实和观点:</p><ul><li>对于事实，要有多个独立信源交叉验证。</li><li>对于观点，要注意论述逻辑和因果关系。</li></ul><table><thead><tr><th>频道</th><th>详情</th></tr></thead><tbody><tr><td><a href="https://t.me/OutsightChina">看鉴中国 OutsightChina</a></td><td>👍 一个健康的社会，不该只有一种声音。看鉴中国，每天聚焦一则关于中国的新闻事件，带你对比来自中外不同媒体多元的、不一样的观点。</td></tr><tr><td><a href="https://t.me/bigcrowdev">乌鸦观察</a></td><td>👍 不定期推送新闻和杂谈。</td></tr><tr><td><a href="https://t.me/newslab2020">新闻实验室</a></td><td>推荐订阅方可成老师的 <a href="https://sibforms.com/serve/MUIEABj_H1nZN9Jj5HLcOE61NoO8So-r5phaSIn4ZUqqLv_WdJP-bpiAazMxwp2uOWb-aeF-hiOScIzPxwovvRjNYF6METjZVOafOAQANa9tnIeocTm6fv6RurLCTUVGzKrjBrhtIj9q2wVOmIYoltrV310MEOEi-vg3E0uPES0voX-FjBRHd4mPx0woiIsLiZ6-YXnI80PyhpUH">Newsletter</a>。<a href="https://github.com/Newslab2020/Contents/blob/master/wechataccount.md">微信公众号文章备份</a>。</td></tr><tr><td><a href="https://t.me/infzm">南方周末</a></td><td>在这里，读懂中国。非官方。</td></tr><tr><td><a href="https://t.me/neweekly">新周刊</a></td><td>一本杂志和一个时代的体温。</td></tr><tr><td><a href="https://t.me/cdtchinesefeed">中国数字时代消息推送</a></td><td>致力于聚合「中国的社会与政治新闻，和它在世界上的新兴的角色」有关的报道和评论。</td></tr><tr><td><a href="https://t.me/masses2020">多数派Masses</a></td><td>我们是一群反对资本主义、反对帝国主义、反对父权制、反对一切压迫和宰制的青年。<a href="https://matters.news/@masses2020">Matters 的创作空间站</a>。</td></tr><tr><td><a href="https://t.me/SharedResources">60 秒读懂世界</a></td><td>来自 60 秒读懂世界公众号。</td></tr><tr><td><a href="https://t.me/breakingnews_t">突发新闻</a></td><td>突发新闻推送服务（简体中文）。</td></tr><tr><td><a href="https://t.me/NewsFW">NFW</a></td><td>News for Work, Not for Work.</td></tr><tr><td><a href="https://t.me/times001">电报时报</a></td><td>提供全天候热点中国及国际新闻，涵盖突发新闻、时事、财经、娱乐、体育，评论、杂志和博客等。</td></tr><tr><td><a href="https://t.me/appledailyhk">蘋果日報</a></td><td><a href="https://hk.appledaily.com/">Apple Daily</a> 为香港上市公司壹传媒旗下繁体中文报纸，由大股东黎智英所创立，被民主派支持者普遍认为是香港目前唯一未被「染红」的媒体。by <a href="https://zh.wikipedia.org/zh-cn/%E8%98%8B%E6%9E%9C%E6%97%A5%E5%A0%B1_(%E9%A6%99%E6%B8%AF)">维基百科</a></td></tr><tr><td><a href="https://t.me/tnews365">竹新社</a></td><td>7×24 不定时编译国内外媒体的即时新闻报道。</td></tr><tr><td><a href="https://t.me/ngocn01">NGOCN</a></td><td><a href="https://ngocn2.org/">NGOCN</a> 是一家中国独立媒体，非营利性质，致力向公众提供进步、负责任且多元的纪实性内容，目前由认同其理念志愿者运营。</td></tr><tr><td><a href="https://t.me/the_InitiumMedia">端傳媒 Initium Media</a></td><td>由程式自動獲取並推送端傳媒 RSS 所有文章。</td></tr><tr><td><a href="https://t.me/lnitiumMedia">端传媒</a></td><td>每日推送端传媒（付费）文章.pdf。手头宽裕，还是 <a href="https://theinitium.com/subscription/offers/">付费购买端会员</a> 或购买 <a href="https://i.init.shop/collections/newsletter/products/daily-newsletter-original">新闻通讯 Newsletter</a>。</td></tr></tbody></table><p>🌐 <strong>国外媒体（简体中文）</strong></p><table><thead><tr><th>频道</th><th>详情</th></tr></thead><tbody><tr><td><a href="https://t.me/niuyueshibao_rss">纽约时报中文网</a></td><td>👍 <a href="https://cn.nytimes.com/">The New York Times (NYT)</a> 创刊于 1851 年，世界上最著名的报纸之一。美国严肃报刊的代表，获得过 122 项普利策奖，是获奖最多的媒体。</td></tr><tr><td><a href="https://t.me/bbczhongwen_rss">BBC 中文网</a></td><td><a href="https://www.bbc.com/zhongwen/simp">BBC News</a> 是世界最大的公共广播公司，位于英国，资金主要来自英国国民缴纳的电视牌照费，是一家独立运作的公共媒体（非商业媒体，也不由英国政府控制）。</td></tr><tr><td><a href="https://t.me/zaobaosg">联合早报</a></td><td>zaobao.sg 早报 + 晚报 + 新明新闻。</td></tr><tr><td><a href="https://t.me/lutouzhongwen_rss">路透中文网</a></td><td><a href="https://cn.reuters.com/">Reuters</a> 世界三大通讯社之一，成立于 1851 年，总部位于英国伦敦。</td></tr><tr><td><a href="https://t.me/dw_rss">德国之声</a></td><td><a href="https://www.dw.com/zh/">Deutsche Welle (DW)</a> 按德国公法设立的国际化公共媒体，从联邦政府获得拨款，总部位于波恩和柏林。</td></tr><tr><td><a href="https://t.me/abc_rss">澳大利亚广播公司</a></td><td><a href="https://www.abc.net.au/news/chinese/">Australian Broadcasting Corporation (ABC)</a> 是澳大利亚的国家公共广播机构，它由政府出资，向澳大利亚和海外提供电台、电视、互联网服务。总部设在悉尼。</td></tr><tr><td><a href="https://t.me/rfi_rss">法国国际广播电台</a></td><td><a href="https://www.rfi.fr/cn/">Radio France Internationale (RFI)</a> 是法国专责世界大部分地区之国际广播的电台广播机构，现隶属法国国营国际广播公司法国世界媒体旗下。by <a href="https://zh.wikipedia.org/zh-cn/%E6%B3%95%E5%9B%BD%E5%9B%BD%E9%99%85%E5%B9%BF%E6%92%AD%E7%94%B5%E5%8F%B0">维基百科</a></td></tr><tr><td><a href="https://t.me/meiguozhiyin_rss">美国之音中文网</a></td><td><a href="https://www.voachinese.com/">Voice of America (VOA)</a> 成立于 1942 年 2 月，是美国政府对外设立和资助的国有非军事国际广播宣传喉舌，由美国国际媒体署管理，旗下拥有广播电台与电视台，总部座落在首都华盛顿。by <a href="https://zh.wikipedia.org/zh-cn/%E7%BE%8E%E5%9B%BD%E4%B9%8B%E9%9F%B3">维基百科</a></td></tr><tr><td><a href="https://t.me/ru_rss">俄罗斯卫星通讯社新闻</a></td><td><a href="http://sputniknews.cn/">Sputnik</a> 是俄罗斯政府控制的新闻机构今日俄罗斯媒体集团于 2014 年 10 月开通的新闻通讯社、新闻网站、广播电台与媒体新闻中心。by <a href="https://zh.wikipedia.org/zh-cn/%E5%8D%AB%E6%98%9F%E9%80%9A%E8%AE%AF%E7%A4%BE">维基百科</a></td></tr><tr><td><a href="https://t.me/korea_rss">韩国新闻</a></td><td><a href="https://cnnews.chosun.com/">朝鲜日报</a> + <a href="http://chinese.joins.com/">中央日报中文版</a></td></tr><tr><td><a href="https://t.me/jp_rss">日本新闻</a></td><td><a href="https://china.kyodonews.net/">共同网</a> + <a href="https://asahichinese-j.com/">朝日新闻中文网</a> + <a href="https://cn.nikkei.com/">日本经济新闻中文版</a></td></tr><tr><td><a href="https://t.me/shuangyunews_rss">双语新闻</a></td><td><a href="https://cn.nytimes.com/">纽约时报双语新闻</a> + <a href="http://language.chinadaily.com.cn/">中国日报网英语点津</a></td></tr><tr><td><a href="https://t.me/twitter_subscriptions">Twitter Subscription</a></td><td>搬运以下 Twitter 账号：BBC News 中文、DW 中文- 德国之声、国际特赦组织中文、纽约时报中文网。</td></tr><tr><td><a href="https://t.me/news_pdf">新闻播报 PDF</a></td><td>每天为大家送来 NYT 和 BBC 的新闻 PDF。</td></tr><tr><td><a href="https://t.me/whatsnws">What’s News</a></td><td>推送各种英文外刊和杂志的 PDF。</td></tr></tbody></table><p>以上部分介绍来自西方媒体查一查。查询可信度和倾向性，请安装 <a href="https://chrome.google.com/webstore/detail/%E8%A5%BF%E6%96%B9%E5%AA%92%E4%BD%93%E6%9F%A5%E4%B8%80%E6%9F%A5/bpejcaojjipcgcnjkfmnkhokdpimcmij">浏览器插件</a>，或者访问 <a href="https://minapp.com/miniapp/4395/">微信小程序</a>。</p><p>💸 <strong>财经新闻</strong></p><table><thead><tr><th>频道</th><th>详情</th></tr></thead><tbody><tr><td><a href="https://t.me/fnnew">财经快讯</a></td><td>全球财经资讯 24 小时不间断直播。</td></tr><tr><td><a href="https://t.me/ftzhongwen_rss">FT 中文网</a></td><td><a href="https://m.ftchinese.com/">Financial Times</a>（金融时报）创刊于 1888 年，编辑总部位于伦敦，2015 年被日本经济新闻收购。</td></tr></tbody></table><h3 id="💾-科技"><a href="#💾-科技" class="headerlink" title="💾 科技"></a>💾 科技</h3><table><thead><tr><th>频道</th><th>详情</th></tr></thead><tbody><tr><td><a href="https://t.me/sspai">少数派</a></td><td>👍 少数派致力于更好地运用数字产品或科学方法，帮助用户提升工作效率和生活品质。</td></tr><tr><td><a href="https://t.me/solidot">Solidot</a></td><td>👍 奇客的资讯，重要的东西。</td></tr><tr><td><a href="https://t.me/NewlearnerChannel">Newlearnerの自留地</a></td><td>👍 不定期推送 IT 相关资讯。</td></tr><tr><td><a href="https://t.me/appinnfeed">Appinn Feed</a></td><td>👍 分享免费、小巧、实用、有趣、绿色的软件。</td></tr><tr><td><a href="https://t.me/scitech_fans">科技爱好者周刊</a></td><td>👍 记录每周值得分享的科技内容，周五发布；非官方频道。<a href="https://www.yuque.com/ruanyf/weekly">科技爱好者周刊合集</a>。</td></tr><tr><td><a href="https://t.me/TestFlightCN">TestFlight 科技花</a></td><td>👍 发布科技新闻、App 测试版链接、软件使用相关话题。</td></tr><tr><td><a href="https://t.me/hacker_news_feed">Hacker News</a></td><td>Top stories from news.ycombinator.com (with 100+ score).</td></tr><tr><td><a href="https://t.me/misakatech">科技圈的日常</a></td><td>科技圈内的大事小事。</td></tr><tr><td><a href="https://t.me/YinxiangBiji_News">Telegram 中文 NEWS</a></td><td><a href="hhttps://congcong0806.github.io/2018/04/24/Telegram/">聪聪</a> 的频道：提供印象笔记、Telegram、科学上网等新闻。<a href="https://t.me/YinxiangBiji_News/954">Telegram 知识汇总</a>。</td></tr><tr><td><a href="https://t.me/CE_Observe">每日消费电子观察</a></td><td>不公正，不客观，不理性。</td></tr><tr><td><a href="https://t.me/cnbeta_com">cnBeta</a></td><td>cnBeta.COM 中文业界资讯站是一个提供 IT 相关新闻资讯、技术文章和评论的观点的中文网站。</td></tr><tr><td><a href="https://t.me/AppleNuts">果核 Apple Nuts</a></td><td>一个果粉（<a href="https://hackl0us.com/">Hackl0us</a>）的闲言碎语， 用来推送苹果（Apple） 相关的技术、新闻资讯、技巧、产品&#x2F;软件心得体会等。</td></tr><tr><td><a href="https://t.me/appdodo">APPDO 数字生活指南</a></td><td>优质数字生活指南，传递数码生活和设计理念。</td></tr><tr><td><a href="https://t.me/AppPie">AppPie</a></td><td>Apple 相关的数字生活指南。</td></tr><tr><td><a href="https://t.me/vps_xhq">VPS 信号旗播报</a></td><td>关注 VPS 和通信自由。</td></tr><tr><td><a href="https://t.me/yinghexiaozu">硬核小卒</a></td><td>分享优质的科技&#x2F;商业资讯。</td></tr><tr><td><a href="https://t.me/zhihuribao_rss">知乎日报</a></td><td>越来越难用的问答网站。</td></tr><tr><td><a href="https://t.me/DailyTechNewsCN">Daily Tech News</a></td><td>每日科技新闻。</td></tr><tr><td><a href="https://t.me/awesomeopensource">每日 AWESOME 观察</a></td><td>每日更新分享最炫酷的开源项目。</td></tr></tbody></table><h3 id="📚-博主"><a href="#📚-博主" class="headerlink" title="📚 博主"></a>📚 博主</h3><table><thead><tr><th>频道</th><th>详情</th></tr></thead><tbody><tr><td><a href="https://t.me/tingtalk">庭说</a></td><td>👍 第一时间获取博客的更新通知以及碎片化思考。</td></tr><tr><td><a href="https://t.me/forwardlikehell">小破不入渠</a></td><td>👍 科技评论人 Jesse Chan，博客是 <a href="https://jesor.me/">大破进击</a>。</td></tr><tr><td><a href="https://t.me/yitianshijie">一天世界</a></td><td>👍 <a href="https://yitianshijie.net/">一天世界</a>，昆乱不挡。不鸟万如一主理。IPN 出品。</td></tr><tr><td><a href="https://t.me/caozsay">caoz 的梦呓</a></td><td>👍 认识曹政之后，感觉互联网终于入门了。by Fenng</td></tr><tr><td><a href="https://t.me/zuoluotvofficial">ZUOLUOTV</a></td><td>👍 科技 &#x2F; 旅行 &#x2F; 摄影 &#x2F; 生活方式 &#x2F; <a href="https://luolei.org/">博客</a></td></tr><tr><td><a href="https://t.me/fakeye">不求甚解</a></td><td>👍 <a href="https://t.me/NewlearnerChannel">Newlearnerの自留地</a> 编辑；设计师 <a href="https://space.bilibili.com/38053181">oooooohmygosh</a> 的代言人。</td></tr><tr><td><a href="https://t.me/WebNotes2">小道消息</a></td><td>大道无形，小道消息；<a href="https://hutu.me/">公众号备份站点</a>。</td></tr><tr><td><a href="https://t.me/mactalk">卖桃者说</a></td><td>博客是 <a href="http://macshuo.com/">MacTalk</a>：池建强的随想录关注技术和人文。</td></tr><tr><td><a href="https://t.me/shuziyimin">数字移民</a></td><td>无法肉身移民的情况下，在数字生活上追求一定的自由；<a href="https://blog.shuziyimin.org/">博客</a>。</td></tr><tr><td><a href="https://t.me/realSpencerWoo">Real Spencer Woo</a></td><td>开发者 &#x2F; 设计师 &#x2F; 少数派 &#x2F; 学生 &#x2F; <a href="https://blog.spencerwoo.com/">博客</a>。</td></tr><tr><td><a href="https://t.me/SukkaChannel">Sukka’s Notebook</a></td><td>Belongs to <a href="https://github.com/hexojs">Hexo</a> dev team &#x2F; <a href="https://blog.skk.moe/">博客</a>。</td></tr><tr><td><a href="https://t.me/lover_links">扫地僧笔记</a></td><td>每天所见所闻所想，是个树洞。</td></tr><tr><td><a href="https://t.me/world2us">一方天地</a></td><td>心留一方天地，世界依旧美好。</td></tr><tr><td><a href="https://t.me/wanqu_official">湾区日报</a></td><td>关注创业与技术，不定期推送 5 篇优质英文文章。</td></tr><tr><td><a href="https://t.me/haotalk">海龙说</a></td><td>牢记梦想，自然生长。by <a href="https://haohailong.net/">郝海龙的博客</a></td></tr><tr><td><a href="https://t.me/lychee_wood">荔枝木</a></td><td>这个世界很复杂，我尝试着去理解它。</td></tr><tr><td><a href="https://t.me/kaix_in">KAIX.IN</a></td><td>思考碎片，<a href="https://kaix.in/">博客</a> 更新。</td></tr><tr><td><a href="https://t.me/tsbblog">TSBBLOG</a></td><td><a href="https://tsb2blog.com/">影子的博客</a>：独立观察及记录。</td></tr><tr><td><a href="https://t.me/joinchat/AAAAAEWbURDTisztrTcwqA">AK 讲废话</a></td><td>科普视频系列：<a href="https://www.youtube.com/watch?v=JVh6sUHRxjg&list=PLqybz7NWybwULxQ2xMyUND_x2ziMLbn7R">无线技术</a>、<a href="https://www.youtube.com/watch?v=MVVQl0gJH-U&list=PLqybz7NWybwWcl_s-VLB_tXqbbBww6nbK">显示技术</a>、<a href="https://www.youtube.com/watch?v=XKZM_AjCUr0&list=PLqybz7NWybwUgR-S6m78tfd-lV4sBvGFG">番茄技术</a>……</td></tr><tr><td><a href="https://t.me/P3TERX_ZONE">P3TERX ZONE</a></td><td><code>P3TERX</code> 读作 Peter X。</td></tr><tr><td><a href="https://t.me/zhiwuzhi">值物志</a></td><td>分享各种值得尝试的事物：值得读的书、值得用的软件、值得看的电视剧……</td></tr><tr><td><a href="https://t.me/xiaohudejia">小虎の自留地</a></td><td>讨论家装心得或者有趣实用的家具电器。</td></tr><tr><td><a href="https://t.me/liyuans">Leonn 的博客</a></td><td>低价主机（VPS）资源。</td></tr><tr><td><a href="https://t.me/yachme">Yachen’s Channel</a></td><td>刘亚晨是 Surge 的开发者| <a href="https://yach.me/">Yachen’s Blog</a></td></tr><tr><td><a href="https://t.me/molun">MolunSays</a></td><td>希冀笔尖之下，世界兴旺繁华 | <a href="https://molun.net/">博客</a></td></tr><tr><td><a href="https://t.me/hayami_kiraa">日常人间观察</a></td><td>关心科技 &#x2F; 人文 &#x2F; 艺术 &#x2F; 城市公共空间 &#x2F; 女性和性别议题 &#x2F; 劳工权益 &#x2F; 个体叙事 &#x2F; 电影 &#x2F; 音乐 &#x2F; 书 &#x2F; 星星……</td></tr></tbody></table><p><a href="https://github.com/timqian/chinese-independent-blogs">中文独立博客列表</a> by timqian</p><h3 id="🔔-RSS"><a href="#🔔-RSS" class="headerlink" title="🔔 RSS"></a>🔔 RSS</h3><table><thead><tr><th>频道</th><th>详情</th></tr></thead><tbody><tr><td><a href="https://t.me/awesomeRSSHub">RSSHub 布告栏</a></td><td>万物皆可 RSS。</td></tr><tr><td><a href="https://t.me/aboutrss">All About RSS</a></td><td>关于 RSS 技术的应用、周边、介绍、方法、教程、指南、讨论、观点。</td></tr></tbody></table><h3 id="🎞️-影视"><a href="#🎞️-影视" class="headerlink" title="🎞️ 影视"></a>🎞️ 影视</h3><table><thead><tr><th>频道</th><th>详情</th></tr></thead><tbody><tr><td><a href="https://t.me/dianying4K">4K 影视屋</a></td><td>蓝光无损电影。</td></tr><tr><td><a href="https://t.me/VisionarySub">远鉴字幕组发布频道</a></td><td>本字幕组致力于非院线海外电影及海外剧集的译制与分享。</td></tr><tr><td><a href="https://t.me/T_rex2333">霸王龙发布频道</a></td><td>做一个有温度，有思想，懂粉丝的压制组。<br/>每天定时更新，选取优质影片源。<br/>专注于韩美剧，经典的电影榜单。</td></tr><tr><td><a href="https://t.me/cangyanmovie">苍炎影院</a></td><td>分享最新最热门的优质电影。</td></tr></tbody></table><h3 id="🎙-播客"><a href="#🎙-播客" class="headerlink" title="🎙 播客"></a>🎙 播客</h3><table><thead><tr><th>频道</th><th>详情</th></tr></thead><tbody><tr><td><a href="https://t.me/liqixpodcast">「利器x播客」计划</a></td><td><a href="https://liqixpodcast.typlog.io/">官网</a></td></tr><tr><td><a href="https://t.me/indiepod">独立播客</a></td><td>分享关于播客的一切。by Zac</td></tr><tr><td><a href="https://t.me/greatpodcasts">中文播客精选</a></td><td>分享精选优质中文播客，目前推荐单期节目为主。by <a href="https://day.pcast.me/">白昼电台</a> 的主播 Stella</td></tr><tr><td><a href="https://t.me/daily_dose_podcast">Your Daily Dose of Podcast</a></td><td>每天推荐一集让人心潮澎湃、若有所思、打开新世界大门的播客节目。by 穿堂风<br />推荐的播客会同步更新在 <a href="https://medium.com/@chuantangfeng">Medium</a><br /><a href="https://www.douban.com/note/776029208/">我在豆瓣上分享了 400 集播客节目，有什么用？</a></td></tr><tr><td><a href="https://t.me/jiaochadian">交差点</a></td><td>Technology alone is not enough.</td></tr><tr><td><a href="https://t.me/notobjective">不客观 Not Objective</a></td><td>一档搭建在 Telegram 的简易播客，纯主观感受。by <a href="https://haohailong.net/">郝海龙</a></td></tr><tr><td><a href="https://t.me/baizhoutheday">白昼电台 The Day</a></td><td>黑夜已深，白昼将近，我们就当脱去暗昧的行为，带上光明的兵器。</td></tr><tr><td><a href="https://t.me/vitamineEpodcast">维生素 E</a></td><td>经济学与哲学知识分享。</td></tr><tr><td><a href="https://t.me/talkgofm_channel">Go 夜聊</a></td><td>一档由杨文和欧长坤主持的针对 Go 语言的播客节目</td></tr><tr><td><a href="https://t.me/hoiale">阿乐杂货铺</a></td><td>这里每日推送小人物播客及播客周边；职业发展、自我成长、读书电影、海外工作与生活碎片。</td></tr></tbody></table><h3 id="🎵-音乐"><a href="#🎵-音乐" class="headerlink" title="🎵 音乐"></a>🎵 音乐</h3><table><thead><tr><th>频道</th><th>详情</th></tr></thead><tbody><tr><td><a href="https://t.me/Musiccnchannel">知音</a></td><td>👍 发一些关于音乐的东西。</td></tr><tr><td><a href="https://t.me/Imusic_zz">Imusic</a></td><td>音乐，就是理想的挽歌，年代久远，依然飘扬。</td></tr><tr><td><a href="https://t.me/ZAYU_music">杂鱼Music Channel</a></td><td>我相信，爱音乐的人都有着一颗柔软的心。</td></tr><tr><td><a href="https://t.me/lumingguandj">音乐世界</a></td><td>温柔被我唱成了歌，伴你人山人海不停留。</td></tr><tr><td><a href="https://t.me/exploreclassical">Classical Music</a></td><td>一起来听古典音乐吧。</td></tr><tr><td><a href="https://t.me/wahyin">蛙音通讯</a></td><td>Feels wonderful again man.</td></tr><tr><td><a href="https://t.me/undamaged_music">无损音乐频道</a></td><td>分享无损音乐、高品质音乐、原碟整轨分轨音频。</td></tr></tbody></table><p>下载音乐，还可以查阅下文中提到的音乐机器人。</p><h3 id="🏫-读书"><a href="#🏫-读书" class="headerlink" title="🏫 读书"></a>🏫 读书</h3><p>人类的悲喜并不互通，但读书是走向共同理解的捷径。</p><table><thead><tr><th>频道</th><th>详情</th></tr></thead><tbody><tr><td><a href="https://t.me/pieroots">Word Power Made Easy</a></td><td>利用词根（原始印欧语、拉丁语、古希腊语）学习英语单词。</td></tr><tr><td><a href="https://t.me/englishlearn2020">英语精读学习</a></td><td>夜空中最亮的星，就是你自己！我们一起精读英语，一起进步，遇见更好的自己吧！资料不定时更新哟！</td></tr><tr><td><a href="https://t.me/chwebinars">中文社科讲座资讯</a></td><td>一个讲座信息聚合和 PPT 共享平台。</td></tr><tr><td><a href="https://t.me/zreadpush">什么书值得读</a></td><td>仅推送某亚原版资源，可同时下载 <code>.azw3</code> <code>.epub</code> <code>.mobi</code> 的电子书。</td></tr><tr><td><a href="https://t.me/haoshufenxiang">好书分享频道</a></td><td>学习，是一辈子的大事。</td></tr><tr><td><a href="https://t.me/weekly_books">小声读书</a></td><td>一个探索数字阅读可能性和未来的开放项目，致力于打破信息茧房，挖掘价值信息。</td></tr><tr><td><a href="https://t.me/readgoods">值得一看的文章</a></td><td>阅读更少，收获更多。</td></tr><tr><td><a href="https://t.me/magazinesclub">云上报刊亭</a></td><td>英文报刊杂志、电子书、报纸和外文杂志精选。</td></tr><tr><td><a href="https://t.me/GoReading">Λ-Reading</a></td><td>分享书和阅读、认知科学、科技哲学、新科技以及其它给生活带来一丝美好的事物 | <a href="https://rizime.substack.com/">Newsletter</a></td></tr><tr><td><a href="https://t.me/SniffAtWord">臭（xiù）文字</a></td><td>诗歌频道；我是一个嗅觉特别发达的人，你说，然而，没有一种艺术可供我的鼻子用武，只有生命可以。</td></tr></tbody></table><p>插播一个免费的广告：学英语，推荐购买郝海龙老师的<a href="https://sspai.com/series/77">《英语自学手册》</a>（￥119）。</p><h3 id="🚀-番茄"><a href="#🚀-番茄" class="headerlink" title="🚀 番茄"></a>🚀 番茄</h3><table><thead><tr><th>频道</th><th>详情</th></tr></thead><tbody><tr><td><a href="https://t.me/fndroid_news">Fndroid 的日常</a></td><td>👍 Clash for Windows</td></tr><tr><td><a href="https://t.me/DivineEngine">DivineEngine</a></td><td>神机规则</td></tr><tr><td><a href="https://t.me/qiushuiyibing">秋水逸冰</a></td><td><a href="https://teddysun.com/about">Teddysun</a> 会不定期在此发布一些本人的作品。</td></tr><tr><td><a href="https://t.me/ShadowrocketNews">Shadowrocket News</a></td><td>iOS 上小火箭</td></tr><tr><td><a href="https://t.me/quantumultappnews">Quantumult News</a></td><td>Quantumult 的非官方频道。</td></tr><tr><td><a href="https://t.me/QuanXNews">Quantumult X News</a></td><td>此频道用于发布 Quantumult 与 Quantumult X 的相关资讯。</td></tr><tr><td><a href="https://t.me/V2Fly">V2Fly</a></td><td>Shadowsocks 是一个纯粹的代理工具，而 V2Ray 定位为一个平台，任何开发者都可以利用 V2Ray 提供的模块开发出新的代理软件。by <a href="https://guide.v2fly.org/">新 V2Ray 白话文指南</a></td></tr><tr><td><a href="https://t.me/DuyaoSS">毒药机场评测</a></td><td>由于大陆地区网络环境十分复杂，测速不代表推荐。另外，有些机场会泄露个人信息，选购时多加搜索或者进入机场用户群打探打探。</td></tr><tr><td><a href="https://t.me/jichangtj">科学上网与机场观察</a></td><td>科学上网与机场相关观察、点评、随想和新闻资讯。</td></tr><tr><td><a href="https://t.me/ACL4SSR">ACL4SSR</a></td><td><a href="https://github.com/ACL4SSR/ACL4SSR">https://github.com/ACL4SSR/ACL4SSR</a> 官方频道。</td></tr><tr><td><a href="https://t.me/NobyDa">QuanX &amp; Surge &amp; Loon 脚本收集</a></td><td>各种脚本。</td></tr><tr><td><a href="https://t.me/cnhumanright99">人人番茄，则墙自倒</a></td><td>免费提供 Trojan、Vmess 节点。</td></tr></tbody></table><h3 id="🗄️-搬运"><a href="#🗄️-搬运" class="headerlink" title="🗄️ 搬运"></a>🗄️ 搬运</h3><table><thead><tr><th>频道</th><th>详情</th></tr></thead><tbody><tr><td><a href="https://t.me/jandan_pic">煎蛋无聊图</a></td><td>自动抓取煎蛋首页推荐无聊图及其评论。</td></tr><tr><td><a href="https://t.me/duanzitg">内涵段子：皮一下</a></td><td>如题。</td></tr><tr><td><a href="https://t.me/shadiaotu">美图与沙雕</a></td><td>如题。</td></tr><tr><td><a href="https://t.me/uknow2much">你知道的太多了</a></td><td>不定期发布和转载各类不一定靠谱的内幕、流言蜚语、小知识等。</td></tr><tr><td><a href="https://t.me/pincongessence">蛋挞报</a></td><td>分享阅读体验。</td></tr><tr><td><a href="https://t.me/WeChatEssence">微信搬运工</a></td><td>有些微信的内容分享了之后就和谐了，本频道可以做个备份，以及丰富电报上的中文内容（不可否认还是有很多非政治的优质内容在微信公众号里）。</td></tr><tr><td><a href="https://t.me/weibo_read">微博精选</a></td><td>来自微博的文章、资源和观点。</td></tr><tr><td><a href="https://t.me/douban_read">豆瓣精选</a></td><td>豆瓣书影音，以及相关讨论。</td></tr><tr><td><a href="https://t.me/jike_collection">即刻精选</a></td><td>精选即刻 app 热门话题更新。我的即刻 ID 是 <a href="https://m.okjike.com/users/Zhong_Waiting">Dr_Ting</a>。</td></tr><tr><td><a href="https://t.me/inside1024">你不知道的内幕消息</a></td><td>同时抓取来自即刻 app 的 #大公司的负面新闻。</td></tr><tr><td><a href="https://t.me/MattersHub">Matters 閲讀精選</a></td><td>matters.news 一個自主、永續、有價的創作與公共討論空間。</td></tr></tbody></table><h3 id="🆓-资源"><a href="#🆓-资源" class="headerlink" title="🆓 资源"></a>🆓 资源</h3><table><thead><tr><th>频道</th><th>详情</th></tr></thead><tbody><tr><td><a href="https://t.me/playsales">Google Play 限免信息</a></td><td>不定时推介 Play Store 上的限免游戏和 App。</td></tr><tr><td><a href="https://t.me/app_store">纯粹的 App Store 应用推荐</a></td><td>iOS 实用免费、精选限免、优质冰点应用推荐。</td></tr><tr><td><a href="https://t.me/apprcn">反斗限免</a></td><td>这里有反斗软件和反斗限免的文章更新。更新频繁高。</td></tr><tr><td><a href="https://t.me/ruyoblog">如有乐享</a></td><td>更新 <a href="https://51.ruyo.net/">如有乐享博客</a> 的内容：云服务器、优惠活动、羊毛信息以及各种 Bug。</td></tr><tr><td><a href="https://t.me/iShareNews">iShare News</a></td><td>一个没有简介的资源分享频道。</td></tr><tr><td><a href="https://t.me/zaproshare">Zapro Notice</a></td><td>软件分享。</td></tr><tr><td><a href="https://t.me/gdurl">Google Drive 资源</a></td><td>各种 Google Drive 资源，包括电影、电子书、无损音乐等，10 万+ 关注。</td></tr><tr><td><a href="https://t.me/voice_google">Google Voice 靓号</a></td><td>一个 GV 卖家。</td></tr><tr><td><a href="https://t.me/win10keymaxs">Windows 10 激活码分享</a></td><td>🤫</td></tr></tbody></table><h3 id="😺-其它"><a href="#😺-其它" class="headerlink" title="😺 其它"></a>😺 其它</h3><table><thead><tr><th>频道</th><th>详情</th></tr></thead><tbody><tr><td><a href="https://t.me/iyouport">iYouPort</a></td><td>IYP 不是过眼云烟的新闻网站，我们提供实战能力，这里是值得您反复回看的档案室。</td></tr><tr><td><a href="https://t.me/anquanshangwang">安全上网注意事项</a></td><td>转载一些关于安全上网的文章，这些文章都比较浅显。</td></tr><tr><td><a href="https://t.me/bohaishibei">博海拾贝</a></td><td><a href="https://bh.sb/">博海拾贝</a> 的网站：bh.sb</td></tr><tr><td><a href="https://t.me/Rick_Morty_and_Fans">Rick Morty and Fans</a></td><td>Wubba Lubba Dub Dub</td></tr><tr><td><a href="https://t.me/papercliphub">回形针PaperClip &amp; 灵光灯泡</a></td><td>回形针内容推送。</td></tr><tr><td><a href="https://t.me/hezu2">合租</a></td><td>Netflix、YouTube、Spotify、Office 365、HBO、Apple、Surge……</td></tr><tr><td><a href="https://t.me/History">History</a></td><td>Digging Past. Photos from Past who shaped today.</td></tr><tr><td><a href="https://t.me/miaowu">每日无数猫</a></td><td>让我们打造一个全是猫的世界！ฅ^•ﻌ•^ฅ</td></tr><tr><td><a href="https://t.me/SwitchNewCN">NS 新闻转报</a></td><td>任天堂（Nintendo）相关的新闻。</td></tr><tr><td><a href="https://t.me/TelBaptist">基督讲道</a></td><td>基督讲道资源频道。</td></tr><tr><td><a href="https://t.me/ZaoFaner">就要造反</a></td><td>此频道立足生活，以非常古怪的文字风格进行生存经验书写，绘制景观与消费社会中极具现实性的个案，以此为个体提供可操的、创造性的抵制策略与造反计谋。为一切造反者辩护，为所有无用与丰饶辩护。</td></tr></tbody></table><p>此外，Telegram 上也有 <a href="https://t.me/durov/148">国家或地区的领导人官方频道</a>。</p><h2 id="🤖-机器人推荐"><a href="#🤖-机器人推荐" class="headerlink" title="🤖 机器人推荐"></a>🤖 <a href="https://telegram.org/faq#bots">机器人推荐</a></h2><p>Bots 就像运行在 Telegram 内部的小程序。借助 <a href="https://core.telegram.org/api">Telegram 开放的 APIs</a>，可以实现很多让你意想不到的功能。</p><h3 id="💠-内联机器人"><a href="#💠-内联机器人" class="headerlink" title="💠 内联机器人"></a>💠 内联机器人</h3><p>在任意对话界面的消息编辑框，输入 <a href="https://core.telegram.org/bots/inline">Inline Bots</a> 的名字，即可将 Ta 们唤醒（Just type <code>@inlinebots keywords</code> in any chat.）。</p><table><thead><tr><th>Bot</th><th>Info</th></tr></thead><tbody><tr><td><a href="https://telegram.me/bing">@bing</a></td><td><a href="https://www.bing.com/images">图片搜索 by Bing</a>（支持中英文）。</td></tr><tr><td><a href="https://telegram.me/bold">@bold</a></td><td>👍 使用 <a href="https://tingtalk.me/markdown/">Markdown</a> 编辑消息（有字数限制）。</td></tr><tr><td><a href="https://telegram.me/coub">@coub</a></td><td><a href="https://coub.com/oftheday">Coub</a> 是一个视频共享网站（时长十秒的循环视频）。</td></tr><tr><td><a href="https://t.me/creationdatebot">@creationdatebot</a></td><td>获取注册 Telegram 的日期。</td></tr><tr><td><a href="https://t.me/fanyi_bot">@fanyi_bot</a></td><td>为全世界语言提供中文翻译。</td></tr><tr><td><a href="https://telegram.me/foursquare">@foursquare</a></td><td>帮你找到附近的餐馆或附近的地方，并将其地址发送给朋友。</td></tr><tr><td><a href="https://telegram.me/gamee">@gamee</a></td><td>在群组中输入 <code>@gamee</code>，选择一个游戏，立刻和你的朋友 <a href="https://telegram.org/blog/games#ready-to-play">在 Telegram 上玩小游戏</a>。</td></tr><tr><td><a href="https://t.me/gif">@gif</a></td><td>👍 GIF 动图搜索，支持中文。例如 <code>@gif 你好</code>。</td></tr><tr><td><a href="https://telegram.me/imdb">@imdb</a></td><td>查看影视作品在 <a href="https://www.imdb.com/">互联网电影资料库（IMDb）</a>的评分。</td></tr><tr><td><a href="https://telegram.me/GoogleDEBot">@GoogleDEBot</a></td><td>在任意聊天框使用 Google 搜索引擎。</td></tr><tr><td><a href="https://t.me/like">@like</a></td><td>👍 添加 emoji-based like buttons，例如 👍 &#x2F; 👎。在搜索框输入 <code>@like</code>，预设一些喜欢的投票符号（最多 6 个），然后就可以在聊天框输入 <code>@like</code> 调用这些预设。</td></tr><tr><td><a href="https://telegram.me/music">@music</a></td><td>帮你找到动听的古典音乐。</td></tr><tr><td><a href="https://telegram.me/pic">@pic</a></td><td><a href="https://yandex.com/images/">图片搜索 by Yandex</a>（支持中英文）。</td></tr><tr><td><a href="https://t.me/QuizBot">@QuizBot</a></td><td><a href="https://telegram.org/blog#bot-api-and-quiz-bot">答题机器人</a>：创建一份只有单选题的考卷。<a href="https://t.me/QuizBot?start=TelegramHistory">点此</a> 开始测试你对 Telegram 的了解程度。访问 <a href="https://quiz.directory/">quiz.directory</a> 查看更多问卷。</td></tr><tr><td><a href="https://t.me/sticker">@sticker</a></td><td>👍 检索所有与 Emoji 相关表情包。例如 <code>@sticker 😎 </code>。</td></tr><tr><td><a href="https://t.me/telegraph">@telegraph</a></td><td>👍 登录和编辑 <a href="https://telegra.ph/">Telegraph</a> 文章，并 <a href="https://telegram.org/blog/telegraph#telegraph-api">统计 telegra.ph 的浏览量</a>。</td></tr><tr><td><a href="https://telegram.me/vid">@vid</a></td><td>帮你查找 YouTube 视频（支持中文搜索）。</td></tr><tr><td><a href="https://telegram.me/wiki">@wiki</a></td><td><a href="https://www.wikipedia.org/">维基百科</a>。搜索中文条目 <code>@wiki zh 猫</code>；搜索英文条目 <code>@wiki en cat</code></td></tr><tr><td><a href="https://telegram.me/youtube">@youtube</a></td><td>帮你查找 YouTube 视频（不支持中文搜索）。</td></tr></tbody></table><h3 id="🧱-非内联机器人"><a href="#🧱-非内联机器人" class="headerlink" title="🧱 非内联机器人"></a>🧱 非内联机器人</h3><p>以下 Bots 不能在聊天窗口调取使用。</p><h4 id="🧡-RSS-机器人"><a href="#🧡-RSS-机器人" class="headerlink" title="🧡 RSS 机器人"></a>🧡 RSS 机器人</h4><blockquote><p>（如果）你不懂得 RSS，上网的效率和乐趣都要大打折扣。by <a href="http://www.ruanyifeng.com/blog/2006/01/rss.html">阮一峰</a></p></blockquote><p>相比于传统的 RSS 客户端，Telegram 上的 RSS 订阅器的优点是：</p><ul><li>自动记录上次浏览的位置</li><li>某些 RSS Bots 支持 <code>⚡ INSTANT VIEW</code></li></ul><p>在 <a href="https://github.com/AboutRSS/ALL-about-RSS#telegram-rss-bots">All About RSS</a> 里推荐了很多 RSS Bots：</p><ul><li><a href="https://t.me/FeedManBot">@FeedManBot</a></li><li><a href="https://t.me/TheFeedReaderBot">@TheFeedReaderBot</a>：不仅可以订阅 RSS 源，还可以在 Telegram 上浏览 Twitter。</li><li><a href="https://t.me/Feed2Telegram_bot">@Feed2Telegram_bot</a>：免费用户只有 5 条 Feeds；发送 Twitter（推特）链接，即可追踪。</li><li><a href="https://t.me/el_monitorro_bot">@el_monitorro_bot</a></li><li><a href="https://t.me/newlearner_rss_bot">@newlearner_rss_bot</a></li><li><a href="https://t.me/NodeRSS_bot">@NodeRSS_bot</a></li><li>……</li></ul><p>以上大部分 Bots 都能免费使用，但是保不齐哪天服务器撑不住，就停止运营了，所以记得定期导出 OPML 文件作为备份。</p><p>如果有 VPS，<a href="https://blog.laoda.de/archives/tinytinyrss">自己搭一个专用的 RSS Bot</a> 会是不错的选择。</p><h4 id="🎵-音乐机器人"><a href="#🎵-音乐机器人" class="headerlink" title="🎵 音乐机器人"></a>🎵 音乐机器人</h4><p>通过 <a href="https://t.me/ChinoNyanBot">@ChinoNyanBot</a> 可以在 Telegram 上在线点歌。</p><p><strong>点歌教程</strong></p><ul><li>网易音乐：<code>/netease</code> + <code>歌名 / 歌手名</code></li><li>腾讯音乐：<code>/tencent</code> + <code>歌名 / 歌手名</code></li><li>虾米音乐：<code>/xiami</code> + <code>歌名 / 歌手名 </code></li><li>酷狗音乐：<code>/kugou</code> + <code>歌名 / 歌手名 </code></li></ul><p><strong>其它点歌（下歌）机器人</strong></p><ul><li><a href="https://t.me/vkm_bot">@vkm_bot</a></li><li><a href="https://t.me/vkmusic_bot">@vkmusic_bot</a></li><li><a href="https://t.me/haoyybot">@haoyybot</a></li><li><a href="https://t.me/u2bu_mp3_bot">@u2bu_mp3_bot</a></li><li><a href="https://t.me/SongIDbot">@SongIDbot</a>：听歌识曲。</li><li><a href="https://t.me/getmediabot">@getmediabot</a>：下载音乐、歌词、视频等媒体。</li><li><a href="https://t.me/YTAudioBot">@YTAudioBot</a>：下载 YouTube 音频。</li></ul><p><strong>小技巧</strong>：在音频播放器中，长按住「下一首」 和「上一首」按钮可以快进和倒带。<a href="https://telegram.org/blog/move-history#improved-audio-player">Press and hold on the <em>Next</em> and <em>Previous</em> buttons to <strong>fast-forward</strong> and <strong>rewind</strong>.</a></p><h4 id="💽-DC-查询"><a href="#💽-DC-查询" class="headerlink" title="💽 DC 查询"></a>💽 DC 查询</h4><p>Telegram 的服务器分布在世界各地的数据中心（<a href="https://core.telegram.org/api/datacenter">Data Center</a>，简称 DC）。如何查询自己所在的数据中心（好像没啥用）：</p><p>第一步，在隐私和安全设置中，（临时）开启所有人都能查看你的头像（Profile Photos）。</p><p>第二步，选择一个查询 Bot：</p><table><thead><tr><th>Bot</th><th>Info</th></tr></thead><tbody><tr><td><a href="https://t.me/luxiaoxun_bot">@luxiaoxun_bot</a></td><td>鲁小迅</td></tr><tr><td><a href="https://t.me/WooMaiBot">@WooMaiBot</a></td><td>干物妹！小霾</td></tr></tbody></table><p>第三步，发送 <code>/dc</code>，即可获得你所在的数据中心。</p><h4 id="🎁-其它机器人"><a href="#🎁-其它机器人" class="headerlink" title="🎁 其它机器人"></a>🎁 其它机器人</h4><table><thead><tr><th>Bot</th><th>Info</th></tr></thead><tbody><tr><td><a href="https://t.me/bingdict_bot">@bingdict_bot</a></td><td>基于 Bing 开发的中英文翻译机器人。</td></tr><tr><td><a href="https://t.me/CorsaBot">@CorsaBot</a></td><td>Make Instant View from any article. 快速把文章把文章备份到 <a href="https://telegra.ph/">Telegraph</a>。</td></tr><tr><td><a href="https://t.me/cnLottery_bot">@cnLottery_bot</a></td><td>Telegram 群组抽奖工具。</td></tr><tr><td><a href="https://t.me/IFTTT">@IFTTT</a></td><td><a href="https://ifttt.com/telegram">With this bot you can use IFTTT to link your Telegram groups or channels to more than 360 other services like Twitter and Instagram, or connected devices like Hue lights and Nest.</a></td></tr><tr><td><a href="https://t.me/githubbot">@githubbot</a></td><td>推送 GitHub 仓库的动态。</td></tr><tr><td><a href="https://t.me/GmailBot">@GmailBot</a></td><td>👍 在 Telegram 上收发 📧 Gmail。&#96;&#96;</td></tr><tr><td><a href="https://t.me/LivegramBot">@LivegramBot</a></td><td>👍 <a href="https://telegra.ph/What-is-Livegram-Bot-03-17">不加好友也能私聊</a>，可用于收集反馈及绕开 <code>+86</code> 手机号码的限制。<br />因为经过一层转发，消息一旦发送，便无法删除，但有个短暂的修改期。</td></tr><tr><td><a href="https://t.me/MakeQrBot">@MakeQrBot</a></td><td>发送文字，生成对应的二维码。</td></tr><tr><td><a href="https://t.me/sssoou_bot">@sssoou_bot</a></td><td>Telegram 搜索，支持中文。</td></tr><tr><td><a href="https://t.me/Stickers">@Stickers</a></td><td>👍 创建属于自己的表情包。</td></tr><tr><td><a href="https://t.me/Sticker2GIFBot">@Sticker2GIFBot</a></td><td>下载单独的表情包或整套表情包。</td></tr><tr><td><a href="https://t.me/tweet_for_me_bot">@tweet_for_me_bot</a></td><td>在 Telegram 上发布 Twitter 动态。</td></tr><tr><td><a href="https://t.me/tgstogifbot">@tgstogifbot</a></td><td>把 Telegram 上 tgs 格式的表情包转换为 gif 格式。</td></tr><tr><td><a href="https://t.me/utubebot">@utubebot</a></td><td>同时下载 YouTube 的视频和音频，不过会推送一些广告。</td></tr><tr><td><a href="https://t.me/verifybot">@verifybot</a></td><td>加了官方认证后，名字后面有个 ✅（<a href="https://telegram.org/verify">verify a big andactive official channel, bot or public group</a>）。</td></tr></tbody></table><p>更多 Bots 推荐，请参阅 <a href="https://blog.rawstack.co/post/telegram-bots/">Raw 博客</a> 以及 <a href="https://www.heji.ltd/376.html">合集网</a>。</p><h2 id="👥-群组管理"><a href="#👥-群组管理" class="headerlink" title="👥 群组管理"></a>👥 <a href="https://telegram.org/tour/groups">群组管理</a></h2><p>庭说的群组是 <a href="https://t.me/tingtalk_group">@tingtalk_group</a></p><ul><li>群组人数最高 20 万。转换为广播组（<a href="https://telegram.org/blog/autodelete-inv2#groups-with-unlimited-members">Broadcast Group</a>）之后，人数将不受限制，但只有管理员可以说话，但是成员仍然可以加入语音聊天。注意，切换之后，将不能回退到普通群组。</li><li>静音群组只有在 <code>@</code> 提到你、 <code>Reply</code> 回复你和 <code>Pin</code> 管理员发布群通知时才会收到通知。</li><li>新加入的成员可以看到全部的群聊历史记录（<a href="https://telegram.org/blog/supergroups#supergroups">New members can see the entire message history when they join</a>）。</li><li>加入群组之前，可看到（单向）好友是否在列。如果不想让好友知道你加入了某个群组，注册一个小号吧。</li><li>支持在任何设备上发起语音聊天（<a href="https://telegram.org/blog/voice-chats">Voice Chats</a>）<ul><li>在 Telegram Desktop 和原生 macOS app 中，支持设置发言快捷键，例如大小写锁定键。（On <a href="https://desktop.telegram.org/">Telegram Desktop</a> and in the <a href="https://macos.telegram.org/">native macOS app</a>, you can choose a <strong><a href="https://t.me/TelegramTips/190">push-to-talk key</a></strong> for Voice Chats, to control your mic even when Telegram is not focused. At long last, we’ve found a use for your Caps Lock key.）</li><li>需要在番茄服务&#x2F;软件上开启 UDP 转发。</li><li>截至 2021 年 1 月 13 日，语音聊天支持 5000 人同时参与。<a href="https://t.me/TelegramTips/233">Voice Chats for up to 5,000 participants.</a></li><li>主持人可以控制发言者的音量（<a href="">Adjust the Volume</a>），这个设置是全局的，对所有听众有效。</li></ul></li></ul><p><strong>👮 管理之道</strong></p><ul><li>可删除成员的单条消息或全部消息。</li><li><a href="https://telegram.org/blog/silent-messages-slow-mode#slow-mode">慢速模式（Slow Mode）</a>：在 10 秒 &#x2F; 30 秒 &#x2F; 1 分钟 &#x2F; 5 分钟 &#x2F; 15 分钟 &#x2F; 1 个小时内，成员只能发送一条消息，这样可以使小组中的对话更加有序，也可以提高每条信息的价值。</li><li><a href="https://telegram.org/blog/permissions-groups-undo">群组权限</a>：管理员可以限制所有成员或单个成员只能发送特定类型的内容（<a href="https://telegram.org/tour/groups#partial-bans">Partial bans</a>），如此一来，你便可建立一个没有表情贴纸或者 gif 的高质量交流社区。或者甚至完全限制成员发送信息，让管理员彼此交谈，而群成员则默默地旁观。</li><li>可对群主（creator）及管理员（administrators）设置自定义头衔<a href="https://telegram.org/blog/silent-messages-slow-mode#admin-titles">（Custom title）</a>。</li><li>管理日志（<a href="https://telegram.org/blog/admin-revolution#recent-admin-actions">Recent Admin Actions</a>）：当多个管理员在一起工作时，很容易搞不清楚哪个管理员或管理机器人，在什么时候做了什么。所以 Telegram 的管理员页面增加了「最近动作」功能。用于存储过去 48 小时内在组中执行的所有服务操作的日志，仅对管理员可见。</li><li>2020 年 9 月 30 开始，管理员可以匿名发布消息了（<a href="https://telegram.org/blog/filters-anonymous-admins-comments#anonymous-group-admins">Anonymous Group Admins</a>）。</li><li>成员超过 500 人后，自动开通群组分析功能。<a href="https://t.me/TelegramTips/177">Owners of large groups with over 500 members can view beautiful, detailed graphs about its activity and growth.</a></li></ul><p><strong>🔐 管理机器人</strong></p><p>在群组设置里搜索 Bots 名字，即可添加。注意只给最低权限。</p><p><a href="https://t.me/policr_mini_bot">@policr_mini_bot</a></p><ul><li>开源验证机器人，详情参见 <a href="https://mini.telestd.me/">官网</a>。</li><li>赋予 <code>Delete messages</code> 和 <code>Ban users</code> 权限。</li></ul><p><a href="https://t.me/DeleteEventsBot">@DeleteEventsBot</a></p><ul><li>删除冗余的事件通知，例如谁加入了群组。强烈建议群组管理员装备上这个 Bot，减少信息噪音。</li><li>赋予 <code>Delete messages</code> 权限。</li></ul><p><a href="https://t.me/areply_bot">@areply_bot</a></p><ul><li>自动解除关联频道（Linked hannel）转发到群组的自动置顶消息，并恢复之前的置顶消息。</li><li>赋予 <code>Pin messages</code> 和 <code>Delete messages</code> 权限。</li></ul><h2 id="🤐-私密聊天"><a href="#🤐-私密聊天" class="headerlink" title="🤐 私密聊天"></a>🤐 <a href="https://telegram.org/faq#secret-chats">私密聊天</a></h2><p><strong>Cloud Chats</strong>（默认聊天模式）</p><p><code>客户端</code> -<code>服务器</code> &#x2F; <code>服务器</code> - <code>客户端</code> </p><p>信息存储在 Telegram Cloud 中进行加密，这使云消息既安全又可以立即从任何设备访问，即使丢失了设备。所以你不需要将所有的信息历史记录存储在手机上，当你需要的时候，你可以随时在 Telegram 下载（缓存）旧的信息和媒体，这为你节省了大量的磁盘空间和内存。</p><p><strong>Secret Chats</strong>（不支持在 Windows 和 Web 上发起）</p><p><code>客户端</code> - <code>客户端</code></p><p>聊天记录不能云备份，因为私人数据没有经过 Telegram 的同步服务器，所以没有任何人可以破解，包含 Telegram 团队本身。</p><blockquote><p>关联阅读：<a href="https://telegra.ph/Why-Isnt-Telegram-End-to-End-Encrypted-by-Default-08-14">为什么电报的端到端加密不是默认的？</a></p></blockquote><ul><li>只能通过原始设备访问历史消息，如果退出并再次登录，将失去所有的秘密聊天记录。</li><li>可设置阅后即焚（self-destruct）计时器，自动销毁消息或媒体文件（只适用于计时器设置后发送的消息，对早期的信息没有影响）。</li><li>不能转发消息。</li><li>不能编辑已发送的消息。</li><li>Android 设备不能截屏；iOS 设备可以截屏 ，但对方截屏时你会收到通知。不过，只建议与你信任的人分享敏感信息。 毕竟，对方可以用另外一台设备给屏幕拍照。</li><li>删除发送方的消息，接收方那边也会强制删除。</li></ul><h2 id="😎-Telegraph"><a href="#😎-Telegraph" class="headerlink" title="😎 Telegraph"></a>😎 Telegraph</h2><p><a href="https://telegra.ph/">Telegraph</a> 一个极简的匿名内容发布工具（<a href="https://telegram.org/blog/telegraph">Minimalist publishing tool</a>）。如果内容侵权了，例如使用有版权的图片，可能文章会被投诉下架。</p><h3 id="☝️-用法一"><a href="#☝️-用法一" class="headerlink" title="☝️ 用法一"></a>☝️ 用法一</h3><p>此法不需要注册账号与下载软件。</p><ol><li>在手机或电脑的浏览器的地址栏输入 <a href="https://telegra.ph/">telegra.ph</a></li><li>写文章</li><li>发布（PUBLISH）</li></ol><p>⚠️ 内容发布之后，只要清除浏览器缓存，便无法再编辑文章，也不能追溯到文章作者。</p><h3 id="✌️-用法二"><a href="#✌️-用法二" class="headerlink" title="✌️ 用法二"></a>✌️ 用法二</h3><p>通过 Telegraph 机器人 <a href="https://t.me/telegraph">@telegraph</a> 管理文章：</p><ul><li>能看到你发了多少篇文章，多少人看了（但是读者依旧看不到作者是谁）。</li><li>在任意聊天窗口输入 <a href="https://t.me/telegraph">@telegraph</a>，即可弹出你发布的所有文章。</li></ul><h4 id="📝-发布流程"><a href="#📝-发布流程" class="headerlink" title="📝 发布流程"></a>📝 发布流程</h4><ol><li>在 Telegram 打开 Telegraph 的小管家 <a href="https://t.me/telegraph">@telegraph</a></li><li>根据提示配置 Account</li><li>写文章</li><li>发布（PUBLISH）</li></ol><h4 id="✍️-修改流程"><a href="#✍️-修改流程" class="headerlink" title="✍️ 修改流程"></a>✍️ 修改流程</h4><p>在任何一个设备（across any number of devices）都可以再次编辑文章的标题、作者和正文（除了文章链接）：</p><ol><li><code>Log in as *** on this device</code></li><li>返回 @telegraph</li><li><code>My posts</code>，点击文章的标题</li></ol><ul><li>电脑：自动跳转到浏览器打开，然后在右上角找到 <code>EDIT</code></li><li>手机：点击界面的右上角 3 个点，选择 <code>Open in…</code> 用浏览器打开，滑倒文章底部即可看到 <code>EDIT</code></li></ul><h3 id="🔗-如何让文章链接更美观"><a href="#🔗-如何让文章链接更美观" class="headerlink" title="🔗 如何让文章链接更美观"></a>🔗 如何让文章链接更美观</h3><p>URL &#x3D; <code>https://telegra.ph</code>&#x2F;<code>首次输入的标题</code>-<code>首次发表时的月份</code> -<code>首次发表时的日期</code></p><p>如果你用中文撰写标题，例如《选择 Telegraph 的 10 个理由》，那么文章链接会变得又臭又长，且不能从链接或者文章主题：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://telegra.ph/%E9%80%89%E6%8B%A9-Telegraph-%E7%9A%84-10-%E4%B8%AA%E7%90%86%E7%94%B1-12-04</span><br></pre></td></tr></table></figure><ol><li>要想得到一个 friendlier-looking link，首次编辑请使用英文标题：<ul><li>英文单词全部小写：10 reasons to choose the telegraph</li><li>把 the、a、an 等去掉：10 reasons to choose telegraph</li><li>用连字符 <code>-</code> 代替标点和空格：10-reasons-to-choose-telegraph</li><li>是否可以精简或者采用另外一种翻译：why-telegraph</li></ul></li><li>再用 <code>Edit</code> 功能修改标题为中文：选择电报的 10 个理由。</li></ol><h3 id="📝-如何让文章排版更美观"><a href="#📝-如何让文章排版更美观" class="headerlink" title="📝 如何让文章排版更美观"></a>📝 如何让文章排版更美观</h3><ol><li>使用 <a href="https://tingtalk.me/markdown/">Markdown</a> 写文章（例如 <a href="https://typora.io/">Typora</a>）</li><li>复制 Markdown 预览（不是源代码）</li><li>粘贴到 <code>telegra.ph</code>，即可快速排出精美的文章（不支持某些格式，例如多级项目列表）</li></ol><h2 id="🔗-关联阅读"><a href="#🔗-关联阅读" class="headerlink" title="🔗 关联阅读"></a>🔗 关联阅读</h2><ul><li><a href="https://telegram.org/faq">Telegram FAQ</a>：电报常见问题（英文网页）。</li><li><a href="https://telegram.org/evolution">The Evolution of Telegram</a>：电报的演化（简史）。</li><li><a href="https://telegram.org/press">Articles about Telegram</a>：这些文章涵盖了 Telegram 及其赞助商、全球企业家帕维尔•杜罗夫（Pavel Durov）。</li><li><a href="https://twitter.com/telegram">Telegram Messenger - Twitter</a>：Keep evolving and stay in touch，官方推特会介绍各种 <code>#TelegramTips</code>。</li><li><a href="https://www.reddit.com/r/Telegram/">Telegram - reddit</a></li><li><a href="https://telegram.org/tour/screenshots">Telegram logos</a>：Please feel free to use these Telegram logos.  Just make sure people understand you’re not representing Telegram officially.</li><li><a href="https://mashable.com/2015/05/18/russias-mark-zuckerberg-pavel-durov/">A long way from Moscow</a>：’Russia’s Mark Zuckerberg’ took on the Kremlin - and lost his country by Christopher Miller</li><li><a href="https://telegram.org/blog/telegram-x">Telegram X 介绍视频</a>：超级炫酷，一定要看。</li><li><a href="https://telegram.org/blog/cryptocontest">给电报找 Bug</a>：欢迎安全研究人员将 Ta 们在 Telegram 应用程序或协议中发现 🧐 的任何问题提交到 <code>security@telegram.org</code>。 根据问题的严重程度，奖金从 500 美元到 10 万美元或更多。</li><li><a href="https://telegram.org/faq#q-who-are-the-people-behind-telegram">Telegram 背后的故事</a></li><li><a href="https://jhuo.ca/post/telegram_russian_hacker/">Telegram 传奇：一个关于俄罗斯富豪、黑客、极权和阴谋的创业故事 - 霍炬</a></li><li><a href="https://jsntn.com/software/2017/08/12/telegram.html">关于 Telegram 的一些事 - 守望的麦子</a>：我更加相信一定会有越来越多的理想主义者，他们相信 <a href="https://jsntn.com/equity.html">平等</a> 和自由，坚守信念和价值观，每天充实地生活着。</li><li><a href="https://luolei.org/why-i-choose-telegram/">我为什么选择 Telegram 来运营粉丝社群 | 规则、经验和思考 - 罗磊</a></li><li><a href="https://www.notion.so/Telegram-95a6c23f0bb1466892b55f9ec8c755fd">Telegram 教程全指南</a> by <a href="https://t.me/TGgeek">TG极客</a></li><li><a href="https://congcong0806.github.io/2018/04/24/Telegram/">Telegram 群组、频道、机器人 - 汇总分享 - 聪聪 Blog</a></li><li><a href="https://www.newlearner.site/2019/12/15/newlearnerchannel.html/#Telegram">Telegram 频道：Newlearnerの自留地 导航页</a></li><li><a href="https://tsb2blog.com/what-means-digital-immigrants-in-china.html">什么是数字移民及其基础教程 - TSBBLOG</a></li></ul><p>Stay home. Wash your hands. Be safe. And stay tuned for our next updates! It is already brewing in our dungeons! 呆在家，常洗手，敬请关注，更强大的 Telegram 已经在我们的地牢里酝酿中了！</p><h2 id="📞-与我联系"><a href="#📞-与我联系" class="headerlink" title="📞 与我联系"></a>📞 与我联系</h2><p>欢迎读者在 Telegram 搜索 <a href="https://t.me/tingbot">@tingbot</a> 与我取得联系：指出此文疏漏，推荐优质频道和机器人，一起跨越数字鸿沟，共享信息自由。</p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网上冲浪指南 </tag>
            
            <tag> telegram </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基金定投的魅力</title>
      <link href="/archives/dingtou/"/>
      <url>/archives/dingtou/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><h2 id="《凭运气赚来的钱，会凭实力亏光》"><a href="#《凭运气赚来的钱，会凭实力亏光》" class="headerlink" title="《凭运气赚来的钱，会凭实力亏光》"></a>《凭运气赚来的钱，会凭实力亏光》</h2><p>你永远赚不到<br>超出你认知范围外的钱<br>除非你靠运气<br>但是靠运气赚到的钱<br>最后往往又会靠实力亏掉<br>这是一种必然</p><p>你所赚的每一分钱<br>都是你对这个世界认知的变现<br>你所亏的每一分钱<br>都是因为对这个世界认知有缺陷</p></blockquote><p>这个世界最大的公平在于：<br>当一个人的财富大于自己的认知的时候<br>这个社会有100种方法收割你</p><p>直到你的认知和财富相匹配为止</p><blockquote><p>要在市场中准确地踩点入市，比在空中接住一把飞刀更难——华尔街</p></blockquote><blockquote><p>在极度悲观点投资，在别人沮丧的卖出时买进，在别人疯狂时趁机卖出——邓普顿</p></blockquote><h1 id="一、基金定投的原理"><a href="#一、基金定投的原理" class="headerlink" title="一、基金定投的原理"></a>一、基金定投的原理</h1><p>基金定投全称就是定期定额投资基金。</p><p>就是在固定的时间（比如说每个月的10号）以固定的金额（比如说1000块）投资到指定的基金里面。</p><p>相对于一次性买入，定投是分批买入的，克服了只选择一个时点进行买入的缺陷，可以均摊成本，降低风险。</p><ul><li>人的本性决定了我们总是想着在底点买入，高点卖出，可是，你真的知道什么时候是低点，什么时候是高点吗，更多的时候是最近股市好火，隔壁大妈都进去买了，我也去买，短期可能是赚了一点，但是没有及时退出来，最后还是亏了。而且每天盯着基金，</li><li>“哎，我昨天刚买的，怎么今天就跌了？”</li><li>“最近***说白酒新能源会涨，这俩天也确实涨了一点，我要不要也多买一点？”</li><li>白酒这俩天跌了好多，明天不知道会不会再跌，我要不要把持仓的全部卖掉啊？“</li></ul><p>赚不到认知之外的钱，即使短期内转到了，社会也会用其他方式收割你。</p><p>结合我国股市熊长牛短（下跌的时间比上涨的时间长）的特点，举个栗子🌰：</p><blockquote><p>小刘和小张两个人，他们都有3000块，哥俩都准备买基金，正好建设银行在推荐华安红利精选混合基金，小刘决定使用每个月10号花1000块的方法来买；而小张直接选择一次性全部买入3000块。</p></blockquote><p>① 由于基金1月19日刚刚发布，每份基金是1块钱</p><p>1月19日，小刘买了1000块，于是买到了1000份基金。</p><p>1月19日，小张买了3000块，一共是3000份基金。</p><p>②过了一个月，这个基金大跌，基金净值变成了0.5元</p><p>2月19日，小刘又买了1000块，这个时候，买到了1000&#x2F;0.5&#x3D;2000份基金</p><p>小张因为前一个月一次性买了，所以这个月没钱买了。</p><p>③又过了一个月，这个基金还是继续大跌，净值跌到了0.2元，此时基金经理已经被骂得狗血淋头了</p><p>3月19日，小刘还是买了1000元，这个时候，买到了1000&#x2F;0.2&#x3D;5000份基金</p><p>小张没钱，没买。他已经开骂了，“什么狗屁基金啊，亏死了，这个基金经理在干啥？”</p><p>④过了一段时间，这只基金终于回到了1块钱。</p><p>小张想，终于等到这一天了，我把他全部卖掉，小张3000元回本（这里先忽略手续费），1分没赚。</p><p>看看小刘。</p><p>小刘也总共花了3000元，但他买到了1000+2000+5000&#x3D;8000份基金，此时卖出，1元1份，赚了8000-3000&#x3D;5000块。</p><p><strong>这就是基金定投的魅力。</strong></p><p>这是个真实的故事，不过我不是里面的小刘，我是小张……</p>]]></content>
      
      
      
        <tags>
            
            <tag> 基金定投 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小内存服务器生存指南——SWAP虚拟内存</title>
      <link href="/archives/vps-swap/"/>
      <url>/archives/vps-swap/</url>
      
        <content type="html"><![CDATA[<p>人们常说，网络是服务器的生命线，没有了网络，服务器再怎么牛逼，都跑不起来。然而偏偏有这么一票的服务器，它的网络很好，CPU也很好，就是内存有点小。他们是主机界的独行侠——入门级VPS服务器。</p><p>前俩天买的一台<a href="https://billing.tmthosting.net/aff.php?aff=106&gid=24">TMT的服务器</a>就是这个类型：</p><ul><li>256M内存</li><li>CPU 1vCore (2.5 GHz+)</li><li>硬盘25G</li><li>流量1T&#x2F;月</li><li>带宽1Gbps</li><li>$3.95&#x2F;月，用了6折的优惠券，<strong>2.34刀</strong>每个月</li></ul><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-29/1617010322006-image.png"></p><p>西雅图机房的 VPS 三网回程走的是联通 169 (AS4837) 线路，由于目前联通的国际带宽充裕所以晚高峰的延迟和稳定性都很优秀，体验接近于 CN2 GIA 和 AS9929 线路。</p><p><strong>意外之喜还解锁了美区的奈飞!</strong></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-29/1617011069847-image.png"></p><p>不过现在只支持季付了，$13.85，应该也还能用优惠券，<code>VPS20OFF</code></p><p>购买地址：<a href="https://billing.tmthosting.net/aff.php?aff=106&gid=24">点我跳转</a></p><p>入门级服务器游走于各大主机商，以超低的价格，超值的性能，吸引不少想尝鲜，但是经济能力有限的用户。然而往往当用户购买后才发现，这些服务器在运行大型程序的时候，会频繁崩溃，甚至无法正常运行。这个时候就要请出我们今天的主角——虚拟内存。</p><p>在《计算机操作系统》一书中讲到：</p><blockquote><p>内存，是计算机系统中的主要部件，用于保存进程运行时的程序和数据，也称可执行存储器。<br>虚拟内存，是指具有请求调入功能和置换功能，能存逻辑上对内存容量加以扩充的一种存储系统。</p></blockquote><p>闲话不多说，开始今天的教程：</p><h2 id="前提条件："><a href="#前提条件：" class="headerlink" title="前提条件："></a>前提条件：</h2><p>1、服务器系统：CentOS6+&#x2F;Debian7+&#x2F;Ubuntu12+<br>2、虚拟化架构：KVM、Hyper-V、VMware</p><h3 id="1、以root账户登陆VPS服务器，创建交换文件目录："><a href="#1、以root账户登陆VPS服务器，创建交换文件目录：" class="headerlink" title="1、以root账户登陆VPS服务器，创建交换文件目录："></a>1、以root账户登陆VPS服务器，创建交换文件目录：</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /swap </span><br><span class="line"><span class="comment"># 在根目录创建 /swap 文件夹</span></span><br></pre></td></tr></table></figure><h3 id="2、切换到交换目录："><a href="#2、切换到交换目录：" class="headerlink" title="2、切换到交换目录："></a>2、切换到交换目录：</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /swap  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 改变目录到 /swap</span></span><br></pre></td></tr></table></figure><h3 id="3、创建一个交换文件，bs不能超过实际内存大小，可以用count来叠加"><a href="#3、创建一个交换文件，bs不能超过实际内存大小，可以用count来叠加" class="headerlink" title="3、创建一个交换文件，bs不能超过实际内存大小，可以用count来叠加"></a>3、创建一个交换文件，bs不能超过实际内存大小，可以用count来叠加</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/zero of=swapfile bs=1MB count=128</span><br><span class="line"><span class="comment"># 创建一个128MB虚拟内存</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/zero of=swapfile bs=1MB count=384</span><br><span class="line"><span class="comment"># 创建一个384MB虚拟内存</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/zero of=swapfile bs=1MB count=512</span><br><span class="line"><span class="comment"># 创建一个512MB虚拟内存</span></span><br></pre></td></tr></table></figure><h3 id="4、设置并建立交换区："><a href="#4、设置并建立交换区：" class="headerlink" title="4、设置并建立交换区："></a>4、设置并建立交换区：</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkswap ./swapfile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置并建立交换区</span></span><br></pre></td></tr></table></figure><h3 id="5、为了安全起见，赋予文件600权限"><a href="#5、为了安全起见，赋予文件600权限" class="headerlink" title="5、为了安全起见，赋予文件600权限"></a>5、为了安全起见，赋予文件600权限</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 600 ./swapfile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 赋予交换文件600权限</span></span><br></pre></td></tr></table></figure><h3 id="6、启用交换分区"><a href="#6、启用交换分区" class="headerlink" title="6、启用交换分区"></a>6、启用交换分区</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">swapon ./swapfile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启用交换分区</span></span><br></pre></td></tr></table></figure><h3 id="7、设置开机自动加载交换分区"><a href="#7、设置开机自动加载交换分区" class="headerlink" title="7、设置开机自动加载交换分区"></a>7、设置开机自动加载交换分区</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;/swap/swapfile swap swap defaults 0 0&quot;</span> &gt;&gt;/etc/fstab</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加/swap/swapfile 交换分区开机后自动挂载</span></span><br></pre></td></tr></table></figure><h3 id="8、重启，并且检查设置是否生效："><a href="#8、重启，并且检查设置是否生效：" class="headerlink" title="8、重启，并且检查设置是否生效："></a>8、重启，并且检查设置是否生效：</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">reboot</span><br><span class="line"><span class="comment"># 重启服务器</span></span><br><span class="line"></span><br><span class="line">free -h</span><br><span class="line"><span class="comment"># 查看服务器内存使用情况，SWAP一行就是新添加的虚拟内存</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-29/1617010079272-image.png"></p><h4 id="说明："><a href="#说明：" class="headerlink" title="说明："></a>说明：</h4><p>1、部分服务器自带一些SWAP交换分区，自行添加后，两个分区的容量将会叠加</p><p>2、OpenVZ虚拟化架构无法自主添加交换分区</p><p>参考链接：<a href="https://www.mengclaw.com/2018/05/31/144/">https://www.mengclaw.com/2018/05/31/144/</a></p><p>转载请注明出处，谢谢！</p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPS推荐 </tag>
            
            <tag> 虚拟内存 </tag>
            
            <tag> SWAP </tag>
            
            <tag> TMT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新买了一台服务器“必须”要做的6件小事</title>
      <link href="/archives/vps-script/"/>
      <url>/archives/vps-script/</url>
      
        <content type="html"><![CDATA[<div style="position: relative; padding: 30% 45%;"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"src="//player.bilibili.com/player.html?aid=802280617&bvid=BV1Py4y1t7oq&cid=316384812&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" ></iframe></div><h2 id="完整视频："><a href="#完整视频：" class="headerlink" title="完整视频："></a>完整视频：</h2><p><a href="https://www.bilibili.com/video/BV1Py4y1t7oq/">点击我观看</a></p><p>注意服务器的系统！</p><p>注意服务器的系统！</p><p>注意服务器的系统！</p><p>这里以Centos7.x为例子。</p><p>以下脚本也是收集的，一般GitHub上也有很多相关脚本，大家也可以自行搜索查看。</p><h2 id="1、BBR加速脚本（CentOS7-）"><a href="#1、BBR加速脚本（CentOS7-）" class="headerlink" title="1、BBR加速脚本（CentOS7*）"></a>1、BBR加速脚本（CentOS7*）</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -N --no-check-certificate <span class="string">&quot;https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh&quot;</span></span><br><span class="line"><span class="built_in">chmod</span> +x tcp.sh</span><br><span class="line">./tcp.sh</span><br></pre></td></tr></table></figure><p>注意Centos8.x不能安装BBR PLUS加速，会导致连不上服务器的情况。</p><p>GitHub原地址：<a href="https://github.com/chiakge/Linux-NetSpeed">https://github.com/chiakge/Linux-NetSpeed</a></p><h3 id="Ubuntu-20-04-Ubuntu18-04-快速开启-TCP-BBR-实现高效单边加速"><a href="#Ubuntu-20-04-Ubuntu18-04-快速开启-TCP-BBR-实现高效单边加速" class="headerlink" title="Ubuntu 20.04 &amp; Ubuntu18.04 快速开启 TCP BBR 实现高效单边加速"></a>Ubuntu 20.04 &amp; Ubuntu18.04 快速开启 TCP BBR 实现高效单边加速</h3><p>Linux Kernel 内核升级到 <code>4.9</code> 及以上版本可以实现 BBR 加速，由于Ubuntu 18.04 默认的内核就是 <code>4.15</code>版本的内核，由于Ubuntu 20.04 默认的内核就是 <code>5.4</code> 版本的内核，并已经默认编译了 TCP BBR 模块，所以可以直接通过参数开启。</p><p>新的 TCP 拥塞控制算法 BBR (Bottleneck Bandwidth and RTT) 可以让服务器的带宽尽量跑慢，并且尽量不要有排队的情况，让网络服务更佳稳定和高效。</p><p>修改系统变量：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> net.core.default_qdisc=fq &gt;&gt; /etc/sysctl.conf</span><br><span class="line"><span class="built_in">echo</span> net.ipv4.tcp_congestion_control=bbr &gt;&gt; /etc/sysctl.conf</span><br></pre></td></tr></table></figure><p>保存生效</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sysctl -p</span><br></pre></td></tr></table></figure><p>执行</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sysctl net.ipv4.tcp_available_congestion_control</span><br></pre></td></tr></table></figure><p>如果结果是这样</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sysctl net.ipv4.tcp_available_congestion_control</span><br><span class="line">net.ipv4.tcp_available_congestion_control = bbr cubic reno</span><br></pre></td></tr></table></figure><p>就开启了。 执行 <code>lsmod | grep bbr</code> ，以检测 BBR 是否开启。</p><p>感谢@<a href="https://www.mf8.biz/ubuntu-20-04-bbr/">妙正灰</a></p><h2 id="2、宝塔登陆消除脚本"><a href="#2、宝塔登陆消除脚本" class="headerlink" title="2、宝塔登陆消除脚本"></a>2、宝塔登陆消除脚本</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">&quot;s|bind_user == &#x27;True&#x27;|bind_user == &#x27;XXXX&#x27;|&quot;</span> /www/server/panel/BTPanel/static/js/index.js</span><br></pre></td></tr></table></figure><p>运行完之后，记得清除浏览器的缓存查看，也可以直接换一个浏览器登陆。</p><p>来源：波仔的分享</p><h3 id="0612更新"><a href="#0612更新" class="headerlink" title="0612更新"></a>0612更新</h3><h4 id="去除新版宝塔面板的方法"><a href="#去除新版宝塔面板的方法" class="headerlink" title="去除新版宝塔面板的方法"></a>去除新版宝塔面板的方法</h4><p><img src="https://pic.loll.cc/images/2021/06/12/image.png"></p><p>保存后，清除浏览器缓存即可。</p><h3 id="宝塔安装"><a href="#宝塔安装" class="headerlink" title="宝塔安装"></a>宝塔安装</h3><p>官网安装:<a href="https://www.bt.cn/">https://www.bt.cn/</a></p><h2 id="3、综合测速脚本"><a href="#3、综合测速脚本" class="headerlink" title="3、综合测速脚本"></a>3、综合测速脚本</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/V2RaySSR/vps/master/vpstest.sh &amp;&amp; bash vpstest.sh</span><br></pre></td></tr></table></figure><p>来源：波仔的分享</p><h3 id="去程："><a href="#去程：" class="headerlink" title="去程："></a>去程：</h3><p>去IPIP上查看：<a href="https://tools.ipip.net/traceroute.php">https://tools.ipip.net/traceroute.php</a></p><h2 id="4、奈飞检测脚本"><a href="#4、奈飞检测脚本" class="headerlink" title="4、奈飞检测脚本"></a>4、奈飞检测脚本</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O nf https://github.com/sjlleo/netflix-verify/releases/download/2.5/nf_2.5_linux_amd64 &amp;&amp; <span class="built_in">chmod</span> +x nf &amp;&amp; clear &amp;&amp; ./nf</span><br></pre></td></tr></table></figure><p>GitHub原地址：<a href="https://github.com/back8/github_sjlleo_netflix-verify">https://github.com/back8/github_sjlleo_netflix-verify</a></p><h3 id="相关推荐"><a href="#相关推荐" class="headerlink" title="相关推荐"></a>相关推荐</h3><p>1、<a href="https://blog.laoda.de/archives/666clouds">新拿到手一台服务器，怎么样给它做个全方位的“体检”？</a><br>2、<a href="https://blog.laoda.de/archives/cheap-vps-cloudcone">【国外便宜高性价比的VPS 推荐】——CloudCone</a><br>3、<a href="https://blog.laoda.de/archives/httpsyirenliucnarchivescheap-vps-racknerd">【国外便宜高性价比的VPS 推荐】——RackNerd</a></p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPS </tag>
            
            <tag> 脚本 </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 测速 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【国外便宜高性价比的VPS 推荐】——RackNerd</title>
      <link href="/archives/cheap-vps-racknerd/"/>
      <url>/archives/cheap-vps-racknerd/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.laoda.de/i/2022/04/10/xzrcc4_7.webp" alt="RackNerd"></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>RackNerd 是一家成立于 2019 年的国外 VPS 主机商，数据中心在美国洛杉矶、圣何塞、达拉斯、芝加哥和荷兰阿姆斯特丹等地。因其价格低、配置高、流量大、工单回复及时，已经获得了国内外众多 VPS 玩家的好评。由于他家经常搞促销优惠活动推出价格非常低且配置很高的 VPS 套餐，曾一度被怀疑是一个要跑路的商家。博主在观望了一年之久后才尝试购买它家的 VPS ，虽然只是常规的直连线路，但实际体验很不错。而且优惠套餐卖完后不会补货，使其有成为传家宝的潜质。</p><p>官网地址: <a href="https://loll.cc/rn">https://loll.cc/rn</a> （他们家常规款都很贵，建议直接看下面表格，看中配置直接点击购买）</p><p>支付方式：<strong>支付宝</strong>、Pay­Pal、信用卡、Bit­coin 等。</p><p>这个页面会不定期更新 RackNerd 最新促销优惠活动和优惠购买链接，欢迎小伙伴们持续关注。</p><h3 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h3><p>网址：<a href="https://my.racknerd.com/aff.php?aff=1158">https://www.racknerd.com</a></p><h3 id="RackNerd-在售机型推荐"><a href="#RackNerd-在售机型推荐" class="headerlink" title="RackNerd 在售机型推荐"></a>RackNerd 在售机型推荐</h3><p>所有在售便宜VPS清单：<a href="https://blog.laoda.de/vps.html">https://blog.laoda.de/vps.html</a></p><h3 id="RackNerd-隐藏了个超级套餐，性价比很高（貌似断货了已经）"><a href="#RackNerd-隐藏了个超级套餐，性价比很高（貌似断货了已经）" class="headerlink" title="RackNerd 隐藏了个超级套餐，性价比很高（貌似断货了已经）"></a><del>RackNerd 隐藏了个超级套餐，性价比很高</del>（貌似断货了已经）</h3><p>这个应该是以前做活动时候的套餐，还没下架，性价比很高：</p><ul><li>3x vCPU Core</li><li>45 GB SSD</li><li>3 GB RAM</li><li>6500GB Monthly Premium Bandwidth</li><li>1Gbps Public Network Port</li><li>1 Dedicated IPv4 Address</li><li>KVM &#x2F; SolusVM Control Panel</li><li>LOCATION: 洛杉矶，圣何塞</li><li>JUST $24.28&#x2F;年付 or $47.06&#x2F;两年付（支持支付宝）</li></ul><p><a href="https://my.racknerd.com/aff.php?aff=1158&pid=199">点击购买</a></p><h2 id="2022年9月更新】推荐这款："><a href="#2022年9月更新】推荐这款：" class="headerlink" title="[2022年9月更新】推荐这款："></a>[2022年9月更新】推荐这款：</h2><p>便宜稳定<br>RN   2G &#x2F; 2C &#x2F; 25G SSD &#x2F; 4T<br>$20.98&#x2F;年</p><p>2 GB KVM VPS Special</p><ul><li>2x vCPU Cores</li><li>25 GB PURE SSD RAID-10 Storage</li><li>2 GB RAM</li><li>4000GB Monthly Premium Bandwidth</li><li>1Gbps Public Network Port</li><li>Full Root Admin Access</li><li>1 Dedicated IPv4 Address</li><li>KVM &#x2F; SolusVM Control Panel - Reboot, Reinstall, Manage rDNS, &amp; much more</li><li>Available in Multiple Locations</li><li>JUST $20.98&#x2F;YEAR - WOW!!</li></ul><p><a href="https://my.racknerd.com/aff.php?aff=1158&pid=681">点击购买</a></p><p>可选地区：</p><p><img src="https://img.laoda.de/i/2022/09/09/itst3t-2.webp"></p><p>个人建议洛杉矶和西雅图（第一个Los Angeles和最后一个Seattle）</p><p>还是以前的活动有诚意！</p><blockquote><p>注意：洛杉矶dc2可以申请IPv6，其它不行</p></blockquote><h3 id="【2022年8月更新】22年7月份促销款"><a href="#【2022年8月更新】22年7月份促销款" class="headerlink" title="【2022年8月更新】22年7月份促销款"></a>【2022年8月更新】22年7月份促销款</h3><p><a href="https://blog.laoda.de/tags/racknerd/">RackNerd</a>发布了7月份的促销，这一波促销最低配年付$14.88，此外还有年付$25.88和年付$35.88款，续费同价，感兴趣的小伙伴可以围观。</p><p>KVM虚拟，纯SSD raid10，1Gbps带宽，solusvm面板管理，自带一个IPv4，支持rdns不过需要找客服开启。可选圣何塞&#x2F;纽约&#x2F;芝加哥&#x2F;亚特兰大&#x2F;阿什本</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1.G</td><td>1核</td><td>18G</td><td>2T&#x2F;月</td><td>$14.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=670">链接</a></strong></td></tr><tr><td>2.5G</td><td>2核</td><td>40G</td><td>3T&#x2F;月</td><td>$25.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=671">链接</a></strong></td></tr><tr><td>3.5G</td><td>2核</td><td>60G</td><td>6T&#x2F;月</td><td>$35.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=672">链接</a></strong></td></tr></tbody></table><p><strong>racknerd：美国洛杉矶AMDRyzen +NVMeSSD系列高性能Windows VPS促销，$60&#x2F;年，1核&#x2F;2G&#x2F;35GNVMe&#x2F;1G带宽@2T月流量</strong></p><h3 id="【2022年6月更新】"><a href="#【2022年6月更新】" class="headerlink" title="【2022年6月更新】"></a>【2022年6月更新】</h3><p><a href="https://blog.laoda.de/tags/racknerd">RackNerd</a> 发布了2022年的美国独立日的促销活动，这次优惠仅有<a href="https://blog.laoda.de/tags/us-vps">美国西雅图VPS</a>，服务器统一的1Gbps带宽，最低配年付$12.99起(1核&#x2F;1G内存&#x2F;15G SSD&#x2F;1Gbps@2000G流量)</p><h4 id="【2022年6月】西雅图促销VPS"><a href="#【2022年6月】西雅图促销VPS" class="headerlink" title="【2022年6月】西雅图促销VPS"></a>【2022年6月】西雅图促销VPS</h4><p>KVM虚拟，纯SSD raid10，1Gbps带宽，solusvm面板管理，自带一个IPv4，支持rdns不过需要找客服开启。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1G</td><td>1核</td><td>15G</td><td>2T&#x2F;月</td><td>$12.99&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=666">链接</a></strong></td></tr><tr><td>2G</td><td>1核</td><td>30G</td><td>4T&#x2F;月</td><td>$19.99&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=667">链接</a></strong></td></tr><tr><td>3G</td><td>2核</td><td>45G</td><td>5T&#x2F;月</td><td>$28.99&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=668">链接</a></strong></td></tr></tbody></table><h3 id="【2022-4-10更新】洛杉矶Windows-VPS-套餐促销"><a href="#【2022-4-10更新】洛杉矶Windows-VPS-套餐促销" class="headerlink" title="【2022-4-10更新】洛杉矶Windows VPS 套餐促销"></a>【2022-4-10更新】洛杉矶Windows VPS 套餐促销</h3><p>高性能 Windows VPS，采用ryzen 3900X（4.6G主频），DDR4内存，纯NVMe（阵列），洛杉矶DC-02机房（multacom），1G共享带宽,1个ipv4，支持rdns，需要联系客服开启。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>NVMe</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>2.0G</td><td>1核</td><td>35G</td><td>2.0T&#x2F;月</td><td>$60&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=340">链接</a></strong></td></tr><tr><td>2.5G</td><td>1核</td><td>40G</td><td>3.5T&#x2F;月</td><td>$69&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=435">链接</a></strong></td></tr><tr><td>3.0G</td><td>2核</td><td>35G</td><td>3.0T&#x2F;月</td><td>$79&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=346">链接</a></strong></td></tr><tr><td>4.0G</td><td>3核</td><td>60G</td><td>6.0T&#x2F;月</td><td>$115&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=436">链接</a></strong></td></tr><tr><td>12G</td><td>4核</td><td>160G</td><td>12T&#x2F;月</td><td>$289&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=437">链接</a></strong></td></tr></tbody></table><p>以下都是之前的促销，感兴趣的可以看看！！</p><hr><h3 id="2、4月圣何塞vps促销"><a href="#2、4月圣何塞vps促销" class="headerlink" title="2、4月圣何塞vps促销"></a>2、4月圣何塞vps促销</h3><p>KVM虚拟，纯SSD raid10，1Gbps带宽，solusvm面板管理，自带一个IPv4，支持rdns不过需要找客服开启。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>SSD</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1G</td><td>1核</td><td>12G</td><td>1T&#x2F;月</td><td>$11.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=648">链接</a></strong></td></tr><tr><td>2G</td><td>1核</td><td>25G</td><td>3T&#x2F;月</td><td>$17.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=649">链接</a></strong></td></tr><tr><td>3G</td><td>2核</td><td>55G</td><td>5T&#x2F;月</td><td>$29.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=650">链接</a></strong></td></tr></tbody></table><h3 id="3、3月份促销vps"><a href="#3、3月份促销vps" class="headerlink" title="3、3月份促销vps"></a>3、3月份促销vps</h3><p>特征：KVM虚拟，1Gbps带宽，纯SSD阵列，支持RDNS，可选圣何塞、芝加哥、达拉斯、亚特兰大、纽约、阿什本这6个数据中心！！</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>SSD</strong></th><th><strong>月流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1G</td><td>1核</td><td>22G</td><td>2.5T</td><td>$13.89&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=645">链接</a></strong></td></tr><tr><td>2G</td><td>2核</td><td>30G</td><td>4.0T</td><td>$23.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=646">链接</a></strong></td></tr><tr><td>3.5G</td><td>2核</td><td>55G</td><td>6.0T</td><td>$36.89&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=647">链接</a></strong></td></tr></tbody></table><h2 id="以下是rn更早的促销，还能买，感兴趣的可以看看"><a href="#以下是rn更早的促销，还能买，感兴趣的可以看看" class="headerlink" title="以下是rn更早的促销，还能买，感兴趣的可以看看"></a><strong>以下是rn更早的促销，还能买，感兴趣的可以看看</strong></h2><h3 id="4、2022虎年春节促销"><a href="#4、2022虎年春节促销" class="headerlink" title="4、2022虎年春节促销"></a>4、2022虎年春节促销</h3><p>可选机房： 圣何塞, 达拉斯, 芝加哥, 纽约, 西雅图。</p><p>基于KVM虚拟，纯SSD raid10整列，自带一个IPv4，1Gbps带宽，solusvm管理面板，支持rdns。</p><p>提示：圣何塞，西雅图位于位于西海岸，对于国内来说，速度会好一点。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>SSD</strong></th><th><strong>月流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>768M</td><td>1核</td><td>13G</td><td>1T</td><td>$10.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=632">链接</a></strong></td></tr><tr><td>1.5G</td><td>1核</td><td>23G</td><td>3T</td><td>$15.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=633">链接</a></strong></td></tr><tr><td>2.5G</td><td>2核</td><td>43G</td><td>6T</td><td>$26.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=634">链接</a></strong></td></tr></tbody></table><h3 id="5、2022年元旦促销-续费同价"><a href="#5、2022年元旦促销-续费同价" class="headerlink" title="5、2022年元旦促销-续费同价"></a>5、2022年元旦促销-续费同价</h3><p>可选机房：洛杉矶, 圣何塞, 达拉斯, 芝加哥, 纽约, 西雅图。</p><p>基于KVM虚拟，纯SSD raid10整列，自带一个IPv4，1Gbps带宽，solusvm管理面板，支持rdns。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>SSD</strong></th><th><strong>月流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>512M</td><td>1核</td><td>10G</td><td>1T</td><td>$9.89&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=620">链接</a></strong></td></tr><tr><td>1G</td><td>1核</td><td>20G</td><td>2T</td><td>$13.98&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=621">链接</a></strong></td></tr><tr><td>2G</td><td>2核</td><td>35G</td><td>4T</td><td>$24.98&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=622">链接</a></strong></td></tr><tr><td>3G</td><td>2核</td><td>50G</td><td>6T</td><td>$31.98&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=623">链接</a></strong></td></tr></tbody></table><h3 id="6、2021年的黑五促销"><a href="#6、2021年的黑五促销" class="headerlink" title="6、2021年的黑五促销"></a>6、2021年的黑五促销</h3><p>可选机房：洛杉矶、圣何塞、达拉斯、芝加哥、纽约和西雅图</p><p>基于KVM虚拟，纯SSD raid10整列，自带一个IPv4，1Gbps带宽，solusvm管理面板，支持rdns。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>SSD</strong></th><th><strong>月流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>768M</td><td>1核</td><td>12G</td><td>1T</td><td>$10.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=587">链接</a></strong></td></tr><tr><td>1G</td><td>1核</td><td>25G</td><td>4T</td><td>$14.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=588">链接</a></strong></td></tr><tr><td>2.5G</td><td>2核</td><td>50G</td><td>6T</td><td>$27.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=589">链接</a></strong></td></tr><tr><td>3G</td><td>2核</td><td>60G</td><td>8T</td><td>$34.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=590">链接</a></strong></td></tr><tr><td>4G</td><td>3核</td><td>75G</td><td>10T</td><td>$43.39&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=591">链接</a></strong></td></tr></tbody></table><h2 id="其他常规款促销，目前还可以购买"><a href="#其他常规款促销，目前还可以购买" class="headerlink" title="其他常规款促销，目前还可以购买"></a><strong>其他常规款促销，目前还可以购买</strong></h2><h3 id="7、内存1-5-2G配置的VPS"><a href="#7、内存1-5-2G配置的VPS" class="headerlink" title="7、内存1.5-2G配置的VPS"></a>7、内存1.5-2G配置的VPS</h3><p>基于KVM虚拟，纯SSD raid10整列，自带一个IPv4，1Gbps带宽，solusvm管理面板，支持rdns。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>硬盘</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1.5G</td><td>2核</td><td>20G</td><td>5.5T&#x2F;月</td><td>$19.50&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=102">链接</a></strong></td></tr><tr><td>1.5G</td><td>1核</td><td>30G</td><td>3T&#x2F;月</td><td>$25.95&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=319">链接</a></strong></td></tr><tr><td>2G</td><td>2核</td><td>23G</td><td>3.5T&#x2F;月</td><td>$20.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=74">链接</a></strong></td></tr><tr><td>2G</td><td>2核</td><td>35G</td><td>5T&#x2F;月</td><td>$22.49&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=513">链接</a></strong></td></tr><tr><td>2G</td><td>3核</td><td>25G</td><td>3T&#x2F;月</td><td>$21.80&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=58">链接</a></strong></td></tr><tr><td>2G</td><td>2核</td><td>25G</td><td>4.5T&#x2F;月</td><td>$21.89&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=121">链接</a></strong></td></tr><tr><td>2G</td><td>2核</td><td>35G</td><td>4T&#x2F;月</td><td>$22.80&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=66">链接</a></strong></td></tr><tr><td>2G</td><td>2核</td><td>27G</td><td>5T&#x2F;月</td><td>$24.00&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=165">链接</a></strong></td></tr><tr><td>2G</td><td>2核</td><td>27G</td><td>5T&#x2F;月</td><td>$24.00&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=168">链接</a></strong></td></tr><tr><td>2G</td><td>2核</td><td>25G</td><td>4T&#x2F;月</td><td>$24.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=237">链接</a></strong></td></tr><tr><td>2G</td><td>2核</td><td>35G</td><td>4T&#x2F;月</td><td>$25.89&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=193">链</a><a href="https://my.racknerd.com/aff.php?aff=1158&pid=193">接</a></strong></td></tr></tbody></table><h3 id="8、内存2-5G-2-8G-VPS"><a href="#8、内存2-5G-2-8G-VPS" class="headerlink" title="8、内存2.5G-2.8G VPS"></a>8、内存2.5G-2.8G VPS</h3><p>基于KVM虚拟，纯SSD raid10整列，自带一个IPv4，1Gbps带宽，solusvm管理面板，支持rdns。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>硬盘</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>2.5G</td><td>1核</td><td>25G</td><td>3T&#x2F;月</td><td>$23.59&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=290">链接</a></strong></td></tr><tr><td>2.5G</td><td>2核</td><td>45G</td><td>5T&#x2F;月</td><td>$21.50&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=477">链接</a></strong></td></tr><tr><td>2.5G</td><td>3核</td><td>25G</td><td>5T&#x2F;月</td><td>$22.00&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=171">链接</a></strong></td></tr><tr><td>2.5G</td><td>2核</td><td>35G</td><td>4T&#x2F;月</td><td>$22.38&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=430">链接</a></strong></td></tr><tr><td>2.5G</td><td>2核</td><td>45G</td><td>5T&#x2F;月</td><td>$22.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=182">链接</a></strong></td></tr><tr><td>2.5G</td><td>3核</td><td>35G</td><td>6T&#x2F;月</td><td>$23.50&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=98">链接</a></strong></td></tr><tr><td>2.5G</td><td>2核</td><td>33G</td><td>4T&#x2F;月</td><td>$25.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=240">链接</a></strong></td></tr><tr><td>2.5G</td><td>2核</td><td>40G</td><td>5T&#x2F;月</td><td>$25.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=327">链接</a></strong></td></tr><tr><td>2.5G</td><td>3核</td><td>40G</td><td>6T&#x2F;月</td><td>$27.80&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=57">链接</a></strong></td></tr><tr><td>2.5G</td><td>3核</td><td>40G</td><td>5T&#x2F;月</td><td>$27.80&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=59">链接</a></strong></td></tr><tr><td>2.5G</td><td>2核</td><td>38G</td><td>6.5T&#x2F;月</td><td>$28.71&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=53">链接</a></strong></td></tr><tr><td>2.5G</td><td>2核</td><td>50G</td><td>5T&#x2F;月</td><td>$39.95&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=320">链接</a></strong></td></tr><tr><td>2.74G</td><td>2核</td><td>43G</td><td>6T&#x2F;月</td><td>$27.40&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=263">链接</a></strong></td></tr><tr><td>2.8G</td><td>3核</td><td>58G</td><td>5T&#x2F;月</td><td>$29.99&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=522">链接</a></strong></td></tr></tbody></table><h3 id="9、内存3-3-74G-VPS"><a href="#9、内存3-3-74G-VPS" class="headerlink" title="9、内存3-3.74G VPS"></a>9、内存3-3.74G VPS</h3><p>基于KVM虚拟，纯SSD raid10整列，自带一个IPv4，1Gbps带宽，solusvm管理面板，支持rdns。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>硬盘</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>3G</td><td>3核</td><td>45G</td><td>6.5T&#x2F;月</td><td>$24.28&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=199">链接</a></strong></td></tr><tr><td>3G</td><td>2核</td><td>32G</td><td>4T&#x2F;月</td><td>$24.60&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=75">链接</a></strong></td></tr><tr><td>3G</td><td>3核</td><td>40G</td><td>4T&#x2F;月</td><td>$27.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=147">链接</a></strong></td></tr><tr><td>3G</td><td>3核</td><td>42G</td><td>5T&#x2F;月</td><td>$28.20&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=234">链接</a></strong></td></tr><tr><td>3G</td><td>2核</td><td>40G</td><td>5T&#x2F;月</td><td>$28.99&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=291">链接</a></strong></td></tr><tr><td>3G</td><td>3核</td><td>33G</td><td>6T&#x2F;月</td><td>$29.89&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=122">链接</a></strong></td></tr><tr><td>3G</td><td>2核</td><td>35G</td><td>5T&#x2F;月</td><td>$29.99&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=473">链接</a></strong></td></tr><tr><td>3G</td><td>3核</td><td>48G</td><td>7T&#x2F;月</td><td>$31.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=253">链接</a></strong></td></tr><tr><td>3.5G</td><td>3核</td><td>45G</td><td>7T&#x2F;月</td><td>$28.99&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=136">链接</a></strong></td></tr><tr><td>3.5G</td><td>3核</td><td>45G</td><td>7T&#x2F;月</td><td>$28.99&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=130">链接</a></strong></td></tr><tr><td>3.5G</td><td>3核</td><td>36G</td><td>5T&#x2F;月</td><td>$30.19&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=125">链接</a></strong></td></tr><tr><td>3.5G</td><td>3核</td><td>55G</td><td>6T&#x2F;月</td><td>$32.38&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=431">链接</a></strong></td></tr><tr><td>3.5G</td><td>3核</td><td>40G</td><td>6.5T&#x2F;月</td><td>$34.00&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=169">链接</a></strong></td></tr><tr><td>3.5G</td><td>2核</td><td>50G</td><td>6.5T&#x2F;月</td><td>$34.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=285">链接</a></strong></td></tr><tr><td>3.74G</td><td>3核</td><td>57G</td><td>8T&#x2F;月</td><td>$37.40&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=264">链接</a></strong></td></tr></tbody></table><h3 id="10、内存4G以上VPS"><a href="#10、内存4G以上VPS" class="headerlink" title="10、内存4G以上VPS"></a>10、内存4G以上VPS</h3><p>基于KVM虚拟，纯SSD raid10整列，自带一个IPv4，1Gbps带宽，solusvm管理面板，支持rdns。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>硬盘</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>4G</td><td>3核</td><td>45G</td><td>6T&#x2F;月</td><td>$35.68&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=153">链接</a></strong></td></tr><tr><td>4G</td><td>3核</td><td>45G</td><td>6T&#x2F;月</td><td>$35.68&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=76">链接</a></strong></td></tr><tr><td>4G</td><td>3核</td><td>50G</td><td>5T&#x2F;月</td><td>$42.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=241">链接</a></strong></td></tr><tr><td>4G</td><td>3核</td><td>50G</td><td>10T&#x2F;月</td><td>$45.89&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=474">链接</a></strong></td></tr><tr><td>4G</td><td>4核</td><td>55G</td><td>8T&#x2F;月</td><td>$39.89&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=195">链接</a></strong></td></tr><tr><td>5.5G</td><td>4核</td><td>88G</td><td>10T&#x2F;月</td><td>$63.88&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=254">链接</a></strong></td></tr><tr><td>8G</td><td>4核</td><td>100G</td><td>5T&#x2F;月</td><td>$89.00&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=312">链接</a></strong></td></tr></tbody></table><h3 id="11、大硬盘VPS"><a href="#11、大硬盘VPS" class="headerlink" title="11、大硬盘VPS"></a>11、大硬盘VPS</h3><p><strong>特征</strong>：1Gbps带宽，自带一个IPv4，solusvm管理，硬盘SSD cached，洛杉矶MC机房！</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>硬盘</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>2G</td><td>2核</td><td>50G</td><td>4T&#x2F;月</td><td>$36&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=61">链接</a></strong></td></tr><tr><td>4G</td><td>3核</td><td>80G</td><td>5T&#x2F;月</td><td>$59&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=62">链接</a></strong></td></tr><tr><td>6G</td><td>4核</td><td>140G</td><td>6T&#x2F;月</td><td>$95&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=63">链接</a></strong></td></tr><tr><td>8G</td><td>4核</td><td>100G</td><td>5T&#x2F;月</td><td>$89&#x2F;年</td><td><a href="https://my.racknerd.com/aff.php?aff=1158&pid=312"><strong>链接</strong></a></td></tr><tr><td>8G</td><td>4核</td><td>200G</td><td>8T&#x2F;月</td><td>$135&#x2F;年</td><td><strong><a href="https://my.racknerd.com/aff.php?aff=1158&pid=64">链接</a></strong></td></tr></tbody></table><h3 id="12、网络测试"><a href="#12、网络测试" class="headerlink" title="12、网络测试"></a>12、网络测试</h3><p><strong>洛杉矶DC02：</strong> 204.13.154.3，<a href="http://lg-lax02.racknerd.com/1000MB.test">http://lg-lax02.racknerd.com/1000MB.test</a></p><p><strong>洛杉矶DC05：</strong> 5.181.135.8，<a href="http://lg-lax05.racknerd.com/1000MB.test">http://lg-lax05.racknerd.com/1000MB.test</a></p><p><strong>圣何塞：</strong> 192.210.207.88，<a href="http://lg-sj.racknerd.com/1000MB.test">http://lg-sj.racknerd.com/1000MB.test</a></p><p><strong>西雅图：</strong> 192.3.253.2，<a href="http://lg-sea.racknerd.com/1000MB.test">http://lg-sea.racknerd.com/1000MB.test</a></p><p><strong>新泽西：</strong> 192.3.165.30，<a href="http://lg-nj.racknerd.com/1000MB.test">http://lg-nj.racknerd.com/1000MB.test</a></p><p><strong>达拉斯</strong>：198.23.249.100，<a href="http://lg-dal.racknerd.com/1000MB.test">http://lg-dal.racknerd.com/1000MB.test</a></p><p><strong>芝加哥：</strong> 198.23.228.15，<a href="http://lg-chi.racknerd.com/1000MB.test">http://lg-chi.racknerd.com/1000MB.test</a></p><p><strong>阿什本：</strong> 107.173.166.10，<a href="http://lg-ash.racknerd.com/1000MB.test">http://lg-ash.racknerd.com/1000MB.test</a></p><p><strong>亚特兰大：</strong> 107.173.164.160，<a href="http://lg-atl.racknerd.com/1000MB.test">http://lg-atl.racknerd.com/1000MB.test</a></p><p><strong>荷兰.阿姆斯特丹：</strong> 23.94.101.88，<a href="http://lg-ams.racknerd.com/1000MB.test">http://lg-ams.racknerd.com/1000MB.test</a></p><p><strong>水牛城：</strong> 192.3.81.8，<a href="http://lg-ny.racknerd.com/1000MB.test">http://lg-ny.racknerd.com/1000MB.test</a></p><h2 id="相关推荐"><a href="#相关推荐" class="headerlink" title="相关推荐"></a>相关推荐</h2><p>1、<a href="https://blog.laoda.de/archives/cheap-vps-cloudcone">【国外便宜高性价比的VPS 推荐】——CloudCone</a></p>]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Racknerd </tag>
            
            <tag> 美国VPS </tag>
            
            <tag> VPS推荐 </tag>
            
            <tag> 高性价比 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【国外便宜高性价比的VPS 推荐】——CloudCone</title>
      <link href="/archives/cheap-vps-cloudcone/"/>
      <url>/archives/cheap-vps-cloudcone/</url>
      
        <content type="html"><![CDATA[<h1 id="CloudCone-VPS-最新优惠限时最低价"><a href="#CloudCone-VPS-最新优惠限时最低价" class="headerlink" title="CloudCone VPS 最新优惠限时最低价"></a>CloudCone VPS 最新优惠限时最低价</h1><p>我自己买了两台，刚开始开的时候碰到了ip是ping不通的情况，大家如果也遇到了，可以选择直接销毁服务器，因为是按时间计费的，及时销毁重新开是不花钱的。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-23/1616504305596-image.png"></p><h2 id="CloudCone-简介"><a href="#CloudCone-简介" class="headerlink" title="CloudCone 简介"></a>CloudCone 简介</h2><p><a href="https://app.cloudcone.com.cn/?ref=6630">CloudCone</a> 目前主要提供美国洛杉矶 MC 机房的主机，对于电信用户很多地区会走 CN2 线路，因此延迟和稳定性都较为优秀。同时该主机商提供了按秒计费，随删随用，免费定期备份服务。支持<strong>支付宝</strong>、Paypal、信用卡等方式付款，增加 IP 只需每月 1 美元一个，更换 IP 每次仅需 2 美元，增加 DDoS 高防 IPv4 是 2.5 美元 &#x2F; 月 &#x2F; 个。</p><h2 id="CloudCone-VPS-限时优惠购买链接"><a href="#CloudCone-VPS-限时优惠购买链接" class="headerlink" title="CloudCone VPS 限时优惠购买链接"></a>CloudCone VPS 限时优惠购买链接</h2><p>以下是 CloudCone 近期最新的限时优惠价格，随时可能缺货，所以需要的小伙伴要抓紧时间购买。如果不着急购买，可以先<a href="https://app.cloudcone.com.cn/signup?ref=6630">注册账号</a>，下次促销活动时会有邮件通知。</p><h2 id="【2022-01-12更新】"><a href="#【2022-01-12更新】" class="headerlink" title="【2022-01-12更新】"></a>【2022-01-12更新】</h2><p>cloudcone的2022年促销正式开始了 ，最便宜款仅需年付$9.9，但是给的配置还算不错，1C&#x2F;512M内存&#x2F;20G HDD raid10&#x2F;G口带宽@2T月流量。机房还是大家熟知的洛杉矶multacom机房。支持PayPal和支付宝付款，预付费模式。</p><p>官网网址：<a href="https://app.cloudcone.com.cn/?ref=6630">https://cloudcone.com/</a></p><h3 id="年付便宜的美国vps"><a href="#年付便宜的美国vps" class="headerlink" title="年付便宜的美国vps"></a>年付便宜的美国vps</h3><p>特征：KVM虚拟，HDD raid10硬盘，G口带宽，默认一个IPv4，洛杉矶multacom机房。</p><p>注意：这促销的便宜VPS硬盘是HDD raid10，不是SSD。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>硬盘</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>512M</td><td>1核</td><td>20G</td><td>2T&#x2F;月</td><td>$9.99&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/79/create?token=hashtag%202022%20vps%20-%201&ref=6630">链接</a></strong></td></tr><tr><td>1G</td><td>2核</td><td>40G</td><td>3T&#x2F;月</td><td>$14.5&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/80/create?token=hashtag%202022%20vps%20-%202&ref=6630">链接</a></strong></td></tr><tr><td>2G</td><td>2核</td><td>80G</td><td>3T&#x2F;月</td><td>$26&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/81/create?token=hashtag%202022%20vps%20-%203&ref=6630">链接</a></strong></td></tr><tr><td>3G</td><td>2核</td><td>110G</td><td>4T&#x2F;月</td><td>$33&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/82/create?token=hashtag%202022%20vps%20-%204&ref=6630">链接</a></strong></td></tr><tr><td>4G</td><td>4核</td><td>180G</td><td>5T&#x2F;月</td><td>$47.8&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/83/create?token=hashtag%202022%20vps%20-%205&ref=6630">链接</a></strong></td></tr><tr><td>8G</td><td>4核</td><td>280G</td><td>7T&#x2F;月</td><td>$89.6&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/84/create?token=hashtag%202022%20vps%20-%206&ref=6630">链接</a></strong></td></tr><tr><td>16G</td><td>8核</td><td>570G</td><td>16T&#x2F;月</td><td>$171&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/85/create?token=hashtag%202022%20vps%20-%207&ref=6630">链接</a></strong></td></tr></tbody></table><p>测试IP，173.82.220.148，IPv6: 2607:f130:0:ef::2，<a href="http://la.lg.cloudc.one/1000MB.test">http://la.lg.cloudc.one/1000MB.test</a></p><p>建议：买Racknerd，Racknerd是SSD，这个是HHD，而且RN最便宜的也只要$9.89&#x2F;年。链接：<a href="https://blog.laoda.de/archives/cheap-vps-racknerd">https://blog.laoda.de/archives/cheap-vps-racknerd</a></p><h2 id="【2021-12-21更新】"><a href="#【2021-12-21更新】" class="headerlink" title="【2021-12-21更新】"></a>【2021-12-21更新】</h2><h3 id="1、双12促销VPS"><a href="#1、双12促销VPS" class="headerlink" title="1、双12促销VPS"></a>1、双12促销VPS</h3><p>特征：MC机房，KVM虚拟，1Gbps带宽，纯SSD RAID10，自带一个ipv4。</p><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>SSD</strong></th><th><strong>月流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>750M</td><td>1核</td><td>18G</td><td>2T</td><td>$8.1&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/70/create?token=12.12-vps-offer-1&ref=6630">链接</a></strong></td></tr><tr><td>1G</td><td>1核</td><td>32G</td><td>2T</td><td>$10.99&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/71/create?token=12.12-vps-offer-2&ref=6630">链接</a></strong></td></tr><tr><td>1G</td><td>2核</td><td>40G</td><td>4T</td><td>$12.12&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/72/create?token=12.12-vps-offer-3&ref=6630">链接</a></strong></td></tr><tr><td>2G</td><td>2核</td><td>48G</td><td>4T</td><td>$19&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/73/create?token=12.12-vps-offer-4&ref=6630">链接</a></strong></td></tr></tbody></table><h3 id="2、还有以前的促销"><a href="#2、还有以前的促销" class="headerlink" title="2、还有以前的促销"></a>2、还有以前的促销</h3><table><thead><tr><th><strong>内存</strong></th><th><strong>CPU</strong></th><th><strong>硬盘</strong></th><th><strong>流量</strong></th><th><strong>价格</strong></th><th><strong>购买</strong></th></tr></thead><tbody><tr><td>1G</td><td>1核</td><td>50G</td><td>1T&#x2F;月</td><td>$17.99&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/1/create?token=vps-1&ref=6630">链接</a></strong></td></tr><tr><td>2G</td><td>2核</td><td>95G</td><td>3T&#x2F;月</td><td>$28.99&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/2/create?token=vps-2&ref=6630">链接</a></strong></td></tr><tr><td>3.5G</td><td>3核</td><td>190G</td><td>6T&#x2F;月</td><td>$48.99&#x2F;年</td><td><strong><a href="https://app.cloudcone.com.cn/vps/3/create?token=vps-3&ref=6630">链接</a></strong></td></tr></tbody></table><h3 id="3、最后"><a href="#3、最后" class="headerlink" title="3、最后"></a>3、最后</h3><p>测试IP，173.82.220.148，IPv6: 2607:f130:0:ef::2，<a href="http://la.lg.cloudc.one/1000MB.test">http://la.lg.cloudc.one/1000MB.test</a></p><hr><h2 id="没货的话可以看看上面的。"><a href="#没货的话可以看看上面的。" class="headerlink" title="没货的话可以看看上面的。"></a>没货的话可以看看上面的。</h2><hr><hr><h2 id="大盘鸡（大硬盘-VPS）【8月4号更新】"><a href="#大盘鸡（大硬盘-VPS）【8月4号更新】" class="headerlink" title="大盘鸡（大硬盘 VPS）【8月4号更新】"></a>大盘鸡（大硬盘 VPS）【8月4号更新】</h2><table><thead><tr><th>内存</th><th>CPU</th><th>硬盘(HDD)</th><th>流量</th><th>带宽</th><th>价格</th><th>购买链接</th></tr></thead><tbody><tr><td>512M</td><td>1核</td><td>100G</td><td>3T&#x2F;月</td><td>1Gbps</td><td>$17.77&#x2F;年</td><td><a href="https://app.cloudcone.com.cn/compute/1291/create?token=storage21.0&ref=6630">点击购买</a></td></tr><tr><td>1G</td><td>1核</td><td>250G</td><td>5T&#x2F;月</td><td>1Gbps</td><td>$20.00&#x2F;年</td><td><a href="https://app.cloudcone.com.cn/compute/1280/create?token=storage21.1&ref=6630">点击购买</a></td></tr><tr><td>2G</td><td>2核</td><td>450G</td><td>8T&#x2F;月</td><td>1Gbps</td><td>$37.77&#x2F;年</td><td><a href="https://app.cloudcone.com.cn/compute/1292/create?token=storage21.4&ref=6630">点击购买</a></td></tr><tr><td>3G</td><td>2核</td><td>750G</td><td>10T&#x2F;月</td><td>1Gbps</td><td>$69.55&#x2F;年</td><td><a href="https://app.cloudcone.com.cn/compute/1293/create?token=storage21.5&ref=6630">点击购买</a></td></tr></tbody></table><h2 id="常规款-年付"><a href="#常规款-年付" class="headerlink" title="常规款 - 年付"></a>常规款 - 年付</h2><table><thead><tr><th>内存</th><th>CPU</th><th>硬盘(SSD)</th><th>流量</th><th>带宽</th><th>价格</th><th>购买链接</th></tr></thead><tbody><tr><td>512M</td><td>1核</td><td>15G</td><td>5T&#x2F;月</td><td>1Gbps</td><td>$12.95&#x2F;年</td><td><a href="https://app.cloudcone.com.cn/compute/1276/create?token=cexclusive-21.1&ref=6630">点击购买</a></td></tr><tr><td>768M</td><td>1核</td><td>20G</td><td>5T&#x2F;月</td><td>1Gbps</td><td>$14.02&#x2F;年</td><td><a href="https://app.cloudcone.com.cn/compute/1277/create?token=cexclusive-21.2&ref=6630">点击购买</a></td></tr><tr><td>1G</td><td>1核</td><td>30G</td><td>5T&#x2F;月</td><td>1Gbps</td><td>$15.00&#x2F;年</td><td><a href="https://app.cloudcone.com.cn/compute/1278/create?token=cexclusive-21.3&ref=6630">点击购买</a></td></tr><tr><td>2G</td><td>2核</td><td>30G</td><td>4T&#x2F;月</td><td>1Gbps</td><td>$19.55&#x2F;年</td><td><a href="https://app.cloudcone.com.cn/compute/1274/create?token=flash2021-c2&ref=6630">点击购买</a></td></tr><tr><td>3G</td><td>2核</td><td>40G</td><td>6T&#x2F;月</td><td>1Gbps</td><td>$27.77&#x2F;年</td><td><a href="https://app.cloudcone.com.cn/compute/1275/create?token=flash2021-c3&ref=6630">点击购买</a></td></tr></tbody></table><h2 id="常规款-月付"><a href="#常规款-月付" class="headerlink" title="常规款 - 月付"></a>常规款 - 月付</h2><table><thead><tr><th>内存</th><th>CPU</th><th>硬盘(SSD)</th><th>流量</th><th>带宽</th><th>价格</th><th>购买链接</th></tr></thead><tbody><tr><td>768M</td><td>1核</td><td>15G</td><td>3T&#x2F;月</td><td>1Gbps</td><td>$1.99&#x2F;月</td><td><a href="https://app.cloudcone.com.cn/compute/1266/create?token=flash2021-1&ref=6630">点击购买</a></td></tr><tr><td>1.5G</td><td>1核</td><td>25G</td><td>5T&#x2F;月</td><td>1Gbps</td><td>$2.89&#x2F;月</td><td><a href="https://app.cloudcone.com.cn/compute/1267/create?token=flash2021-2&ref=6630">点击购买</a></td></tr><tr><td>2.5G</td><td>2核</td><td>45G</td><td>5T&#x2F;月</td><td>1Gbps</td><td>$4.99&#x2F;月</td><td><a href="https://app.cloudcone.com.cn/compute/1268/create?token=flash2021-3&ref=6630">点击购买</a></td></tr></tbody></table><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul><li>购买需要预先充值，充值支持支付宝、Paypal、信用卡等支付方式。例如需要购买2美元月付主机的用户，可以预先充值2美刀。收到活动提示，既可快速抢购活动主机。</li><li>由于可能开到被墙 IP 地址，所以可以选择删掉主机重新购买，由于按秒计费实际并不会扣款，会全额返还金额。也可以选择工单支付2美元更换可用 IP 。</li><li>除了<code>IPV4</code>地址，部分套餐还附赠了3个<code>IPV6</code>地址，需要手动在控制菜单<code>Networking</code>菜单开启。</li><li>免费定期备份功能也需要在<code>Backup</code>菜单开启，之后每天会滚动备份，一直保持三个备份。</li></ul><h2 id="相关推荐"><a href="#相关推荐" class="headerlink" title="相关推荐"></a>相关推荐</h2><p>1、<a href="https://blog.laoda.de/archives/cheap-vps-racknerd">【国外便宜高性价比的VPS 推荐】——RackNerd</a></p>]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cloudcone </tag>
            
            <tag> 美国VPS </tag>
            
            <tag> VPS推荐 </tag>
            
            <tag> 高性价比 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新拿到手一台服务器，怎么样给它做个全方位的“体检”？</title>
      <link href="/archives/666clouds/"/>
      <url>/archives/666clouds/</url>
      
        <content type="html"><![CDATA[<p>不知道是不是B站视频的缘故，前俩天收到一个VPS商家的私信，想让我帮忙测评一下他们家的cuvip的线路VPS，本着好奇的心理，就接受了。今天就来看看这款机器吧。</p><p>正好也让大家简单了解一下，新拿到手一台服务器，怎么样给它做个“体检”。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616334416072-image.png"></p><h2 id="CU-VIP-线路介绍"><a href="#CU-VIP-线路介绍" class="headerlink" title="CU VIP 线路介绍"></a>CU VIP 线路介绍</h2><p>何为CU VIP？其中CU代表了中国联通，VIP代表大客户。三网都可以达到最高宽带，丢包极少，晚高峰3%以内（现阶段），这条线路出自CeraNetworks（下称cera）</p><p>虽然叫VIP但是没有使用联通的A网 AS9929。而是普通的AS4837 169网络。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616329271458-image.png"></p><p>该款线路目前为美国圣何塞专属。cera从上海联通拉了2条100G的AS4837,三网走自有线路去程,也就是</p><ul><li>电信 走AS4134去程,</li><li>联通走AS4837借网163去程</li><li>移动走AS9808去程。</li></ul><p>回程均走上海联通AS4837。</p><p>线路上与MC机房的去程联通，回程三网直连刚好相反。</p><p>另，CUVIP的名号市面上并没有普及(9929在联通里叫CU Premium，并非叫CU VIP,联通也确实有CU VIP路由产品的叫法，而且也是走的4837回程,这些都是在购买联通带宽下单的时候, 单子上写的产品名称, 是有根有据的。这些其实只是一个名称, 并不代表质量, 价格。)不像CN2 GT、CN2 GIA、CMI官方缩写。</p><blockquote><p>CU VIP线路优势很明显目前cera拥有3.5Tbps中国宽带,使用三网去程可以抗一部分DDOS攻击。且官方宣称只要预算足够高，可以抵挡中国发起流量攻击1Tbps+。这已经比OVH高太多。</p><p>OVH中国流量100G估计就得切线路，回程方面200G的总宽带可以保证回国速度优秀。目前最优秀的cera CN2 GIA总宽带其实“只有”25Gbps，该线路为普通线路，价格低廉，部分普通用户可以免费切换到该线路。</p></blockquote><p>总之，就是说线路很棒。</p><p>这边开到的机器是centos7的系统，正好也是我比较常用的系统。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616328320755-image.png"></p><h2 id="准备工作："><a href="#准备工作：" class="headerlink" title="准备工作："></a>准备工作：</h2><ul><li>绑定域名</li></ul><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616329893139-image.png"></p><h2 id="更新软件包"><a href="#更新软件包" class="headerlink" title="更新软件包"></a>更新软件包</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum update -y</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616329978231-image.png"></p><p>这边有时候会卡住，可能需要稍微等一下，也可以选择直接退出，然后重新连接。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616330080355-image.png"></p><h2 id="开启BBR加速"><a href="#开启BBR加速" class="headerlink" title="开启BBR加速"></a>开启BBR加速</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -N --no-check-certificate &quot;https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh&quot;</span><br><span class="line">chmod +x tcp.sh</span><br><span class="line">./tcp.sh</span><br></pre></td></tr></table></figure><p>提示没有wget的话，可以<code>yum install wget -y</code></p><p>选择<code>2</code>,<br><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616330134182-image.png"></p><p>然后重启一下机子。（centos8不要安装这个，会出现连接不上服务器的情况）</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616330193314-image.png"></p><p>大约等20s左右，重新连接一下。</p><p>再次输入<code>./tcp.sh</code>,(小技巧，直接按小键盘的向上键可以切换之前输入过的命令)</p><p>然后按<code>7</code>,</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616330405994-image.png"></p><p>加速成功。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616330439844-image.png"></p><h2 id="安装宝塔"><a href="#安装宝塔" class="headerlink" title="安装宝塔"></a>安装宝塔</h2><p>自己到官网看。</p><h3 id="消除宝塔登陆提示"><a href="#消除宝塔登陆提示" class="headerlink" title="消除宝塔登陆提示"></a>消除宝塔登陆提示</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sed -i &quot;s|bind_user == &#x27;True&#x27;|bind_user == &#x27;XXXX&#x27;|&quot; /www/server/panel/BTPanel/static/js/index.js</span><br></pre></td></tr></table></figure><h2 id="综合体检脚本"><a href="#综合体检脚本" class="headerlink" title="综合体检脚本"></a>综合体检脚本</h2><p>开始正式体检！</p><h3 id="回程："><a href="#回程：" class="headerlink" title="回程："></a>回程：</h3><p>输入下面的脚本，</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/V2RaySSR/vps/master/vpstest.sh &amp;&amp; bash vpstest.sh</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616330588706-image.png"></p><p>选择自己想要的测试方式，我这边选择<code>4</code>,</p><p>可能会比较费时间，一般需要4-5分钟左右，可以让它自己跑着，后续我们可以直接下载这个“体检报告”。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616330665607-image.png"></p><h4 id="系统相关信息："><a href="#系统相关信息：" class="headerlink" title="系统相关信息："></a>系统相关信息：</h4><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616330783575-image.png"></p><h4 id="CPU、内存、读写性能"><a href="#CPU、内存、读写性能" class="headerlink" title="CPU、内存、读写性能"></a>CPU、内存、读写性能</h4><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616330862594-image.png"></p><h4 id="SpeedTest测试情况"><a href="#SpeedTest测试情况" class="headerlink" title="SpeedTest测试情况"></a>SpeedTest测试情况</h4><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616330939521-image.png"></p><h4 id="北京联通回程"><a href="#北京联通回程" class="headerlink" title="北京联通回程"></a>北京联通回程</h4><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616330971065-image.png"></p><h4 id="北京电信"><a href="#北京电信" class="headerlink" title="北京电信"></a>北京电信</h4><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616331010106-image.png"></p><h4 id="北京联通"><a href="#北京联通" class="headerlink" title="北京联通"></a>北京联通</h4><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616331034124-image.png"></p><h4 id="上海联通"><a href="#上海联通" class="headerlink" title="上海联通"></a>上海联通</h4><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616331064426-image.png"></p><h4 id="上海电信"><a href="#上海电信" class="headerlink" title="上海电信"></a>上海电信</h4><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616331083812-image.png"></p><h4 id="上海移动"><a href="#上海移动" class="headerlink" title="上海移动"></a>上海移动</h4><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616331112621-image.png"></p><h4 id="广州联通"><a href="#广州联通" class="headerlink" title="广州联通"></a>广州联通</h4><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616331177037-image.png"></p><h4 id="广州电信"><a href="#广州电信" class="headerlink" title="广州电信"></a>广州电信</h4><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616331190268-image.png"></p><h4 id="广州移动"><a href="#广州移动" class="headerlink" title="广州移动"></a>广州移动</h4><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616331197100-image.png"></p><p>还有其他的，可以在这边生成的链接里面查看。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616331262510-image.png"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616331293184-image.png"></p><h3 id="去程："><a href="#去程：" class="headerlink" title="去程："></a>去程：</h3><p>去IPIP上查看：<a href="https://tools.ipip.net/traceroute.php">https://tools.ipip.net/traceroute.php</a></p><h4 id="镇江移动"><a href="#镇江移动" class="headerlink" title="镇江移动"></a>镇江移动</h4><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616331406599-image.png"></p><h4 id="镇江电信"><a href="#镇江电信" class="headerlink" title="镇江电信"></a>镇江电信</h4><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616331443455-image.png"></p><h4 id="镇江联通"><a href="#镇江联通" class="headerlink" title="镇江联通"></a>镇江联通</h4><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616331372998-image.png"></p><h2 id="奈飞检测脚本"><a href="#奈飞检测脚本" class="headerlink" title="奈飞检测脚本"></a>奈飞检测脚本</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -O nf https://github.com/sjlleo/netflix-verify/releases/download/2.5/nf_2.5_linux_amd64 &amp;&amp; chmod +x nf &amp;&amp; clear &amp;&amp; ./nf</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616331512186-image.png"></p><h2 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo yum remove docker \</span><br><span class="line">                  docker-client \</span><br><span class="line">                  docker-client-latest \</span><br><span class="line">                  docker-common \</span><br><span class="line">                  docker-latest \</span><br><span class="line">                  docker-latest-logrotate \</span><br><span class="line">                  docker-logrotate \</span><br><span class="line">                  docker-engine</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616331591011-image.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo yum install -y yum-utils</span><br><span class="line"></span><br><span class="line">sudo yum-config-manager \</span><br><span class="line">    --add-repo \</span><br><span class="line">    https://download.docker.com/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616331657451-image.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo yum install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616331760057-image.png"></p><p>输入<code>y</code>确定。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616331802429-image.png"></p><p>再次输入<code>y</code></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616331873510-image.png"></p><p>安装好了</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616331892896-image.png"></p><h4 id="启动docker"><a href="#启动docker" class="headerlink" title="启动docker"></a>启动docker</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo systemctl enable docker</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616331919436-image.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo docker run hello-world</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616331945221-image.png"></p><p>查看docker版本，<code>docker -v</code></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616331959939-image.png"></p><h2 id="安装trojan"><a href="#安装trojan" class="headerlink" title="安装trojan"></a>安装trojan</h2><h3 id="1、安装mysql"><a href="#1、安装mysql" class="headerlink" title="1、安装mysql"></a>1、安装mysql</h3><p>因为mariadb内存使用比mysql至少减少一半, 所以推荐使用mariadb数据库</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run --name trojan-mariadb --restart=always -p 3306:3306 -v /home/mariadb:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=trojan -e MYSQL_ROOT_HOST=% -e MYSQL_DATABASE=trojan -d mariadb:10.2</span><br></pre></td></tr></table></figure><p>端口和root密码以及持久化目录都可以改成其他的</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616332237339-image.png"></p><p>2、安装trojan</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -it -d --name trojan --net=host --restart=always --privileged jrohy/trojan init</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616332274973-image.png"></p><p>运行完后进入容器 <code>docker exec -it trojan bash</code>, 然后输入<code>trojan</code>即可进行初始化安装</p><p>启动web服务: <code>systemctl start trojan-web</code></p><p>设置自启动: <code>systemctl enable trojan-web</code></p><p>更新管理程序: <code>source &lt;(curl -sL https://git.io/trojan-install)</code></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616332542234-image.png"></p><h3 id="延迟测速"><a href="#延迟测速" class="headerlink" title="延迟测速"></a>延迟测速</h3><p>延迟还是有一点高的。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616333443031-image.png"></p><h3 id="CloudFlare测速"><a href="#CloudFlare测速" class="headerlink" title="CloudFlare测速"></a>CloudFlare测速</h3><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616333419101-image.png"></p><h3 id="SpeedTest测速"><a href="#SpeedTest测速" class="headerlink" title="SpeedTest测速"></a>SpeedTest测速</h3><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616333428190-image.png"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616333434014-image.png"></p><h2 id="油管测试"><a href="#油管测试" class="headerlink" title="油管测试"></a>油管测试</h2><p>晚高峰9点半左右，trojan测试，测试环境是上海电信的无线网络（据说是1000M）</p><p>刚打开的时候4k可以秒开，</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616333356714-image.png"></p><p>跑一会之后，最高飙到11w，速度很给力。8k也可以拿下。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616333270177-image.png"></p><p>对比一下我15美元买的PR……</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616333261807-image.png"></p><p>PS:PR在晚上1点钟的时候也能跑到11w，哈哈。</p><h2 id="商家信息"><a href="#商家信息" class="headerlink" title="商家信息"></a>商家信息</h2><p>今天测试的是这一款。</p><ul><li>4T（双向）流量</li><li>512MB内存</li><li>1Gbits带宽</li><li>15G SSD硬盘</li></ul><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-21/1616334057591-image.png"></p><p>cera机房的联通cuvip线路10G母鸡，vps给G口。</p><ul><li>1H-512M-1Gbits带宽-4T流量，月付32元</li><li>1H-512M-1Gbits带宽-4T流量，年付288元（每月24元）</li></ul><p>有想尝试的小伙伴可以月付试一试！</p><p>产品地址：<a href="https://loll.cc/666">六六云</a>  </p><p>测速面板：<a href="http://156.251.141.225:6688/">http://156.251.141.225:6688</a></p><p>店家承诺48h内可以无条件全额退款，而且官网提供免费DNS流媒体（Netflix等）解锁。</p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPS </tag>
            
            <tag> 番茄 </tag>
            
            <tag> YouTube </tag>
            
            <tag> 奈飞 </tag>
            
            <tag> 测速 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Trojan，从未如此简单！</title>
      <link href="/archives/trojan/"/>
      <url>/archives/trojan/</url>
      
        <content type="html"><![CDATA[<p>Trojan多用户管理部署程序, 支持web页面管理。</p><hr><h2 id="2022年3月10日更新"><a href="#2022年3月10日更新" class="headerlink" title="2022年3月10日更新"></a>2022年3月10日更新</h2><p>基于Debian 11搭建</p><p>项目地址：<a href="https://github.com/Jrohy/trojan">https://github.com/Jrohy/trojan</a></p><h2 id="视频教程"><a href="#视频教程" class="headerlink" title="视频教程"></a>视频教程</h2><p>YouTube：<a href="https://youtu.be/5eUjNr2YQyQ">https://youtu.be/5eUjNr2YQyQ</a></p><hr><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li>VPS一台，系统Centos 7</li></ul><p>我这边装了两台VPS，分别是之前的两家“跑路大王”（主要是因为便宜，现在的vps一般都是5美元&#x2F;月起步的，而且我没有放重要都东西在上面）<a href="https://loll.cc/rn">Racknerd</a>和昨天刚买的<del>Pacificrack</del>,俩家都买了一年，但是推荐大家还是月付比较稳妥。</p><p><a href="https://loll.cc/rn">Racknerd</a>：1核心1G 1T流量 20G硬盘 年付23美元(这款我找不到产品链接了，现在23美元只有512M了，我之前搭了wordpress博客，速度还可以，目前用了快一年了，还蛮稳定的)</p><p><del>Pacificrack：1核心2G 2T流量 30G硬盘 年付15美元（这个是真便宜，之前还有9.99美元的，没买上，后面的测速结果也让我大跌眼镜）</del> 口碑很烂，千万别买！</p><p>扣</p><p>VPS选购指南可以看这边：</p><div style="position: relative; padding: 30% 45%;"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"src="//player.bilibili.com/player.html?aid=669780295&bvid=BV1va4y157c4&cid=241703588&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" ></iframe></div><ul><li>一个域名并解析到VPS</li></ul><p>域名相关可以看这篇：<a href="https://blog.laoda.de/archives/namesilo">【服务器、域名购买】Namesilo优惠码和域名解析教程（附带服务器购买推荐和注意事项）</a></p><p>视频教程可以看这边：</p><div style="position: relative; padding: 30% 45%;"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"src="//player.bilibili.com/player.html?aid=797296993&bvid=BV1Sy4y1k7kZ&cid=241707570&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" ></iframe></div><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-3-18/1616072257192-image.png"></p><h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><ul><li>BBR加速脚本：</li></ul><p>@chiakge 仓库地址：<br><a href="https://github.com/chiakge/Linux-NetSpeed">https://github.com/chiakge/Linux-NetSpeed</a></p><ul><li>Trojan一键安装脚本：</li></ul><p>@Jrohy 仓库地址：<br><a href="https://github.com/Jrohy/trojan">https://github.com/Jrohy/trojan</a></p><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><h3 id="1、更新yum"><a href="#1、更新yum" class="headerlink" title="1、更新yum"></a>1、更新yum</h3><p>FinalShell连接服务器</p><p>第一步先更新</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum update -y </span><br></pre></td></tr></table></figure><p>这边可能在清理的最后会卡住</p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-3-18/1616070818217-image.png"></p><p>可以等，也可以直接推出，重新登陆一下。</p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-3-18/1616070881125-image.png"></p><p>再次运行，提示更新完成了。</p><p>racknerd提示<br><code>/var/run/yum.pid</code> 已被锁定，PID 为 868 的另一个程序正在运行</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rm -f /var/run/yum.pid</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum update -y</span><br></pre></td></tr></table></figure><h3 id="2、BBR加速（非必需，但建议）"><a href="#2、BBR加速（非必需，但建议）" class="headerlink" title="2、BBR加速（非必需，但建议）"></a>2、BBR加速（非必需，但建议）</h3><p>centos7支持bbrplus和锐速，我选择的是bbrplus。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -N --no-check-certificate <span class="string">&quot;https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh&quot;</span></span><br><span class="line"><span class="built_in">chmod</span> +x tcp.sh</span><br><span class="line">./tcp.sh</span><br></pre></td></tr></table></figure><p>选择<code>2</code></p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-3-18/1615998991467-image.png"></p><p>安装完BBRPlus内核之后，会提示重启机器。确认重启。（centos8安装BBRPlus内核会出现无法登陆的情况，所以我们这边用的是centos7系统）</p><p>输入<code>y</code></p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-3-18/1616071060887-image.png"></p><p>等待一分钟左右，重新登陆。</p><p>输入<code>./tcp.sh</code>（或者直接按小键盘的上键）</p><p>选择7 回车</p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-3-18/1616071199941-image.png"></p><p>提示加速成功。</p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-3-18/1615999267449-image.png"></p><p>再次输入<code>./tcp.sh</code>（或者直接按小键盘的上键），已经安装好加速了。</p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-3-18/1615999311082-image.png"></p><h3 id="3、安装宝塔（非必需，但建议）"><a href="#3、安装宝塔（非必需，但建议）" class="headerlink" title="3、安装宝塔（非必需，但建议）"></a>3、安装宝塔（非必需，但建议）</h3><p>Trojan脚本是搭建在Docker容器里的，考虑到vps可能不只是这一个用途，我们可以把宝塔先安装了。（宝塔安装需要纯净的环境）</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-3-18/1616071549716-image.png"><br>安装完成之后，先不管它，之后可以根据上面的提示来登陆面板。</p><p>我们先干正事。</p><h3 id="4、安装Docker"><a href="#4、安装Docker" class="headerlink" title="4、安装Docker"></a>4、安装Docker</h3><p>之前也有讲过，具体细节可以参考这篇——<a href="https://laoda.de/archives/64">Docker小白使用指南（安装docker）</a>，或者参考视频<a href="https://www.bilibili.com/video/BV1JN411Q7Na?p=6">如何用服务器优雅地搭建一个博客—Hello,Halo——安装Docker</a></p><p>依次输入下面的命令，回车。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum remove docker \</span><br><span class="line">                  docker-client \</span><br><span class="line">                  docker-client-latest \</span><br><span class="line">                  docker-common \</span><br><span class="line">                  docker-latest \</span><br><span class="line">                  docker-latest-logrotate \</span><br><span class="line">                  docker-logrotate \</span><br><span class="line">                  docker-engine</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-3-18/1616071668278-image.png"></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum install -y yum-utils</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-3-18/1616071689167-image.png"></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum-config-manager \</span><br><span class="line">    --add-repo \</span><br><span class="line">    https://download.docker.com/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-3-18/1616071730392-image.png"></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure><p>输入两次<code>y</code>,回车</p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-3-18/1616071805504-image.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo systemctl enable docker</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-3-18/1616071829050-image.png"></p><p>这一步没什么反应的。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo docker run hello-world</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-3-18/1616071870098-image.png"><br>看到这个说明已经安装成功了。</p><p>输入<code>docker -v</code>,如果能看到版本信息，说明没问题了。</p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-3-18/1616071897424-image.png"></p><h3 id="搭建Trojan"><a href="#搭建Trojan" class="headerlink" title="搭建Trojan"></a>搭建Trojan</h3><h4 id="1、安装mysql"><a href="#1、安装mysql" class="headerlink" title="1、安装mysql"></a>1、安装mysql</h4><p>因为mariadb内存使用比mysql至少减少一半, 所以推荐使用mariadb数据库</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run --name trojan-mariadb --restart=always -p 3306:3306 -v /home/mariadb:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=trojan -e MYSQL_ROOT_HOST=% -e MYSQL_DATABASE=trojan -d mariadb:10.2</span><br></pre></td></tr></table></figure><p>端口和root密码以及持久化目录都可以改成其他的</p><h4 id="2、安装trojan"><a href="#2、安装trojan" class="headerlink" title="2、安装trojan"></a>2、安装trojan</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -it -d --name trojan --net=host --restart=always --privileged jrohy/trojan init</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-3-18/1616071951421-image.png"></p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-3-18/1616072079634-image.png"></p><p>这边参数具体的意义是什么，可以参考视频<a href="https://www.bilibili.com/video/BV1JN411Q7Na?p=6">如何用服务器优雅地搭建一个博客—Hello,Halo——安装Docker</a></p><div style="position: relative; padding: 30% 45%;"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"src="//player.bilibili.com/player.html?aid=502013398&bvid=BV1JN411Q7Na&cid=306867740&page=6" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" ></iframe></div><p>运行完后进入容器 </p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it trojan bash</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-3-18/1616072105359-image.png"></p><p>然后输入’trojan’即可进行初始化安装。</p><p>选择<code>1</code>,</p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-3-18/1616072346084-image.png"></p><p>输入你绑定的域名,</p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-3-18/1616072376328-image.png"></p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-3-18/1616072420185-image.png"><br>回车</p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-3-18/1616072441475-image.png"></p><p>回车</p><p>mysql root用户的密码可以自己输入一个。</p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-3-18/1616072502813-image.png"></p><p>接着都直接按回车就可以了。</p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-3-18/1616072543844-image.png"></p><p>按5  可以看自己的配置信息了，我们一般用这个分享链接就可以了。</p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-3-18/1616072576095-image.png"></p><p><code>ctrl+c</code> 退出</p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-3-18/1616072637389-image.png"><br>现在我们还是在容器里面，相当于一个虚拟的环境，接下来，我们需要让docker启动的时候，trojan也自动启动。</p><p>安装完成后，输入</p><p>启动web服务: <code>systemctl start trojan-web</code></p><p>设置自启动: <code>systemctl enable trojan-web</code></p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-3-18/1616072729442-image.png"></p><p>更新管理程序: <code>source &lt;(curl -sL https://git.io/trojan-install)</code></p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-3-18/1616072775392-image.png"></p><p>查看web状态: <code>systemctl status trojan-web</code></p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-3-18/1616072820894-image.png"></p><p>没有问题。</p><p>再输入<code>exit</code>,退出了docker容器，现在我们在服务器里面了。注意到变成了<code>～</code>号。</p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-3-18/1616072860779-image.png"></p><p>接下来我们需要设置docker开机自动启动。</p><h4 id="设置docker开机自动启动"><a href="#设置docker开机自动启动" class="headerlink" title="设置docker开机自动启动"></a>设置docker开机自动启动</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl enable docker</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-3-18/1616072976745-image.png"></p><h4 id="查看docker的状态"><a href="#查看docker的状态" class="headerlink" title="查看docker的状态"></a>查看docker的状态</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl status docker</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-3-18/1616073022788-image.png"></p><p>ok，已经安装好了，可以使用了。</p><h3 id="8、web页面"><a href="#8、web页面" class="headerlink" title="8、web页面"></a>8、web页面</h3><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-3-18/1616073102427-image.png"></p><p>登陆会提示设置一个管理员密码。</p><p>然后输入<code>admin</code>，输入密码登陆。</p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-3-18/1616073178002-image.png"></p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-3-18/1616073223887-image.png"></p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-3-18/1616073329615-image.png"></p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-3-18/1616073381583-image.png"></p><p>可以设置多个用户，也可以限制每个用户的流量。</p><p>其他的自己摸索吧。</p><h3 id="9、客户端连接"><a href="#9、客户端连接" class="headerlink" title="9、客户端连接"></a>9、客户端连接</h3><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-18/1616073589622-image.png"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-18/1616073652176-image.png"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-18/1616073740566-image.png"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-18/1616073764446-image.png"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-18/1616073817397-image.png"></p><p>已经可以访问Google了。</p><p>输入<a href="http://ip111.cn/">http://ip111.cn/</a></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-18/1616074014932-image.png"></p><p>没有问题。</p><p>看看YouTube的速度如何。</p><h3 id="10、YouTube测速"><a href="#10、YouTube测速" class="headerlink" title="10、YouTube测速"></a>10、YouTube测速</h3><p>我写这个的时候是用的vultr的dallas的节点，明显感觉有点拉胯。（网页打开还可以，YouTube打开有点卡）</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-18/1616074551805-image.png"></p><p>速度堪忧，晚上9点30分。</p><p>下面看看Racknerd</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-18/1616075084258-image.png"></p><p>下面看看Pacificrack</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-18/1616075066609-image.png"></p><p>1080P没啥问题，晚高峰还是不是很快。</p><p>由于我是昨天凌晨搭建好的，下面放两张昨天凌晨的速度。</p><p><del>Pacificrack：这家是垃圾商家，经常以高配置低价格吸引客户，然后莫名其妙封号，不建议大家购买</del> </p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-18/1616075150268-image.png"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-18/1616075161236-image.png"><br>到了10W，还蛮吃惊的。要知道它一年15美元，一个月8块钱的，还有2T流量……</p><p>Racknerd：</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-18/1616075193706-image.png"></p><p>大概也有5w左右。</p><h5 id="我的测试环境"><a href="#我的测试环境" class="headerlink" title="我的测试环境"></a>我的测试环境</h5><p>我这边据说是上海电信千兆，我这边用的是无线网。不同的网络环境，速度也会有很大的不同，我快你不一定快，我慢你也不一定慢。</p><p>一般来说联通番茄会好一些。</p><p>这也是为什么让大家购买，建议月付的原因。</p><h3 id="11、各种客户端下载"><a href="#11、各种客户端下载" class="headerlink" title="11、各种客户端下载"></a>11、各种客户端下载</h3><h4 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h4><ul><li><p><a href="https://dl.trojan-cdn.com/trojan/windows/Clash.for.Windows.Setup.0.14.4.exe">Clash.for.Windows.Setup.0.14.4.exe</a></p></li><li><p><a href="https://dl.trojan-cdn.com/trojan/windows/Trojan-Qt5-Windows.1.1.6.7z">Trojan-Qt5-Windows.1.1.6.7z</a></p></li></ul><h4 id="Mac"><a href="#Mac" class="headerlink" title="Mac"></a>Mac</h4><ul><li><p><a href="https://dl.trojan-cdn.com/trojan/macos/ClashX-1.40.0.dmg">ClashX-1.40.0.dmg</a></p></li><li><p><a href="https://dl.trojan-cdn.com/trojan/macos/Trojan-Qt5-macOS.1.1.6.dmg">Trojan-Qt5-macOS.1.1.6.dmg</a></p></li></ul><h4 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h4><ul><li><p><a href="https://dl.trojan-cdn.com/trojan/android/clash-for-android-2.1.6.apk">clash-for-android-2.1.6.apk</a></p></li><li><p><a href="https://dl.trojan-cdn.com/trojan/android/igniter-0.10.2-beta.apk">igniter-0.10.2-beta.apk</a></p></li></ul><h4 id="iOS"><a href="#iOS" class="headerlink" title="iOS"></a>iOS</h4><ul><li>美区苹果商店 shadowrocket</li></ul><h3 id="12、碎碎念"><a href="#12、碎碎念" class="headerlink" title="12、碎碎念"></a>12、碎碎念</h3><p>自己搭成功了虽然成就感很高，但风险还是比较大，万一被封了又得重新买机器，重新搭建。所以，我们需要给自己留一个后手，建议买个机场做备份，节点多。</p><p>机场可以看这篇：<a href="https://blog.laoda.de/archives/shadowsocks">安利一个我正在使用的梯子</a></p><p>使用教程可以看这边：<a href="https://laoda.de/archives/62">上次推荐的梯子的使用教程</a></p><p>之后有自己用过好用的机场也会在这边推荐给大家。</p><p>教程中遇到问题，先尝试自己解决，不能解决的，可以在下面留言。</p><p>最后，番茄了之后，推荐可以去注册一个谷歌邮箱，注册一个虚拟的谷歌手机号（GV），注册一个Telegram账号（我的Telegram频道：<a href="https://t.me/breakthewa11">https://t.me/breakthewa11</a>  我的Telegram群组：<a href="https://t.me/laodade">https://t.me/laodade</a>  希望大家能翻过墙来找到它们）。</p><p>少谈论政治相关的内容，少看黄色，墙外有更多精彩的东西在等着大家。</p><p>希望大家都能信息自由。</p>]]></content>
      
      
      <categories>
          
          <category> Docker系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPS </tag>
            
            <tag> 番茄 </tag>
            
            <tag> Trojan </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>M1 芯片 Mac 上 Homebrew 安装</title>
      <link href="/archives/m1homebrew/"/>
      <url>/archives/m1homebrew/</url>
      
        <content type="html"><![CDATA[<h2 id="安装-ARM-版-Homebrew"><a href="#安装-ARM-版-Homebrew" class="headerlink" title="安装 ARM 版 Homebrew"></a>安装 ARM 版 Homebrew</h2><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic2/2021-3-12/1615561603390-image.png"></p><p>ARM版Homebrew需要安装在<code>/opt/homebrew</code>路径下，早期的时候需要手动创建目录执行命令，目前使用最新脚本不需要手动操作。</p><p>直接使用提供的脚本安装，好处是安装脚本可稳定访问，安装默认使用中科大镜像：</p><p><code>/bin/bash -c &quot;$(curl -fsSL https://cdn.jsdelivr.net/gh/ineo6/homebrew-install/install.sh)&quot;</code><br>然后还需设置环境变量，在<code>~/.zprofile</code>或者<code>~/.bash_profile</code>文件末尾追加下面代码:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=/opt/homebrew/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p>具体操作步骤如下，一定要仔细阅读。</p><p>PS: 终端类型根据执行命令<code>echo $SHELL</code>显示的结果：</p><p><code>/bin/bash =&gt; bash =&gt; .bash_profile</code></p><p><code>/bin/zsh =&gt; zsh =&gt; .zprofile</code></p><p>如果遇到环境变量无效问题，建议回过头来查看终端类型，再做正确的设置。</p><p>从<code>macOS Catalina(10.15.x) </code>版开始，Mac使用<code>zsh</code>作为默认Shell，使用<code>.zprofile</code>，所以对应命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo export PATH=/opt/homebrew/bin:$PATH &gt;&gt; ~/.zprofile</span><br><span class="line">source ~/.zprofile</span><br></pre></td></tr></table></figure><p>如果是<code>macOS Mojave </code>及更低版本，并且没有自己配置过<code>zsh</code>，使用<code>.bash_profile</code>：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="built_in">export</span> PATH=/opt/homebrew/bin:<span class="variable">$PATH</span> &gt;&gt; ~/.bash_profile</span><br><span class="line"><span class="built_in">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure><p>感谢<a href="https://github.com/ineo6/homebrew-install">@ineo6</a>的辛苦苦付出，大家可以去他的GitHub仓库给个小星星支持一下！</p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Homebrew </tag>
            
            <tag> ARM </tag>
            
            <tag> M1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>比Word香十倍的文字编辑工具——MarkDown，学习一次，收益一生！</title>
      <link href="/archives/markdown01/"/>
      <url>/archives/markdown01/</url>
      
        <content type="html"><![CDATA[<h3 id="适合人群："><a href="#适合人群：" class="headerlink" title="适合人群："></a><strong>适合人群：</strong></h3><ul><li><del>程序员-写文档</del>（不会用Markdown的程序员应该没有）</li><li>学生-记笔记，写论文</li><li>作家-写文章，写小说</li><li>博客博主-写博文</li><li>公众号、知乎文字编辑（我个人在用）</li></ul><p>只要你是文字工作者，它都适合你！</p><h3 id="优点："><a href="#优点：" class="headerlink" title="优点："></a><strong>优点：</strong></h3><ul><li>1、让你更纯粹地进行写作，不必被格式所困扰；</li><li>2、跨平台性好，谁都可以打开；</li><li>3、支持各种数学公式；</li><li>4、边写就能边把格式调好，与Word相比，你甚至不需要动鼠标来排版；</li><li>5、如果会一点点CSS的知识，可以进行批量排版的美化。</li><li>6、如果你需要输出的内容只是纯粹的文字+图片的组合，它就是无敌的，你的不二之选。</li></ul><h3 id="可能存在的缺点："><a href="#可能存在的缺点：" class="headerlink" title="可能存在的缺点："></a><strong>可能存在的缺点：</strong></h3><ul><li>1、图片上传麻烦（有非常简单的解决方法）</li><li>2、图片无法居中，改变大小（需要一点点的前端代码知识）</li><li>3、无法插入音视频（需要一点点的前端代码知识）</li><li>4、无法修改字体的颜色大小（需要一点点的前端代码知识）</li><li>5、没有了。</li></ul><p>记住几个简单的语法，就能让你写到根本停不下来。</p><h4 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h4><p>标题是每篇文章都需要也是最常用的格式，在 Markdown 中，如果一段文字被定义为标题，只要在这段文字前加 # 号即可。</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 一级标题</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 二级标题</span></span><br><span class="line"></span><br><span class="line"><span class="section">### 三级标题</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-2-19/1613726882650-image.png"></p><p>以此类推，总共六级标题，在<code>#</code>号后加一个空格，这是最标准的 Markdown 语法。</p><h4 id="加粗"><a href="#加粗" class="headerlink" title="加粗"></a>加粗</h4><p>左右各加两个<code>*</code>号（不用空格）</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="strong">**我要变粗！**</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-2-19/1613727673097-image.png"></p><h4 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h4><p>左右各加一个<code>*</code>号（不用空格）</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="emphasis">*我斜了！*</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-2-20/1613781804766-image.png"></p><h4 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h4><p>如果你需要引用一小段别处的句子，那么就要用引用的格式。</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="quote">&gt; 例如这样</span></span><br></pre></td></tr></table></figure><p>只需要在文本前加入 <code>&gt;</code> 这种尖括号（大于号）即可</p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-2-19/1613726949351-image.png"></p><h4 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">或者是</span><br><span class="line"><span class="strong">***</span></span><br><span class="line"><span class="strong">都可以</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-2-20/1613781969738-image.png"></p><p><code>---</code>（英文输入法下的减号）或者是<code>***</code></p><h4 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h4><p>在 Markdown 下，列表的显示只需要在文字前加上 <code>-</code> 或 <code>*</code> 即可变为无序列表，有序列表则直接在文字前加 <code>1.2.3.</code> 符号要和文字之间加上一个字符的空格。</p><h5 id="1、有序列表"><a href="#1、有序列表" class="headerlink" title="1、有序列表"></a>1、有序列表</h5><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-2-19/1613726621560-image.png"></p><p>注意是英文输入法之下的<code>.</code></p><h5 id="2、无序列表"><a href="#2、无序列表" class="headerlink" title="2、无序列表"></a>2、无序列表</h5><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-2-19/1613726681371-image.png"></p><h5 id="3、嵌套"><a href="#3、嵌套" class="headerlink" title="3、嵌套"></a>3、嵌套</h5><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-2-19/1613726736231-image.png"></p><p>当然，不管是有序还是无序列表，都可以无限套娃。</p><h4 id="图片与链接"><a href="#图片与链接" class="headerlink" title="图片与链接"></a>图片与链接</h4><p>插入链接与插入图片的语法很像，区别在一个<code>!</code>号</p><p>插入图片的地址需要图床,这里涉及到一个新的概念，之后和大家展开讲。</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">百度</span>](<span class="link">https://www.baidu.com/</span>)</span><br><span class="line"></span><br><span class="line">![](<span class="link">https://www.baidu.com/img/dong_8f1d47bcb77d74a1e029d8cbb3b33854.gif</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-2-19/1613727168645-image.png"></p><p>想要插入图片，在markdown里头，你只需要有这张图片的链接就可以了，怎么样才能有图片的链接呢？首先我们需要把图片传到一个服务器上，这台服务器在互联网里，只要能上网的人都能像访问百度一样访问到它，只要是在互联网中的任何一个东西，都有一个唯一的地址，就是URL（统一资源定位符），我们通过特定的URL就能访问到在互联网上任何一个东西（图片、视频、网页等等）</p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-2-19/1613727541623-image.png"></p><p>就是这个啦，<code>图片的地址</code>或者是<code>图片的链接</code></p><p>此时，这个存了图片的服务器，就可以被称为图床（图片睡觉的地方）。</p><h4 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">| 表头1    |  表头2   |</span><br><span class="line">| --- | --- |</span><br><span class="line">| 数据1    |  数据2   |</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-2-20/1613782479161-image.png"></p><p>以上几个基本的语法如果掌握了，就能应付90%的场景了。</p><p>当然还有数学公式等的高级语法，举个简单的例子：</p><p>质能守恒方程可以用一个很简洁的方程式 $E&#x3D;mc^2$ 来表达。</p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2021-2-20/1613783113662-image.png"></p><p><strong>行内公式使用方法</strong>，比如这个化学公式：</p><p><code>$\ce&#123;Hg^2+ -&gt;[I-] HgI2 -&gt;[I-] [Hg^&#123;II&#125;I4]^2-&#125;$</code></p><p>$\ce{Hg^2+ -&gt;[I-] HgI2 -&gt;[I-] [Hg^{II}I4]^2-}$</p><p><strong>块公式使用方法</strong>如下：</p><p><code>$$H(D_2) = -\left(\frac&#123;2&#125;&#123;4&#125;\log_2 \frac&#123;2&#125;&#123;4&#125; + \frac&#123;2&#125;&#123;4&#125;\log_2 \frac&#123;2&#125;&#123;4&#125;\right) = 1$$</code></p><p>$$H(D_2) &#x3D; -\left(\frac{2}{4}\log_2 \frac{2}{4} + \frac{2}{4}\log_2 \frac{2}{4}\right) &#x3D; 1$$</p><p><strong>矩阵</strong>：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">$$</span><br><span class="line">  \begin&#123;pmatrix&#125;</span><br><span class="line">  1 &amp; a<span class="emphasis">_1 &amp; a_</span>1^2 &amp; \cdots &amp; a<span class="emphasis">_1^n \\</span></span><br><span class="line"><span class="emphasis">  1 &amp; a_</span>2 &amp; a<span class="emphasis">_2^2 &amp; \cdots &amp; a_</span>2^n \\</span><br><span class="line">  \vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots \\</span><br><span class="line">  1 &amp; a<span class="emphasis">_m &amp; a_</span>m^2 &amp; \cdots &amp; a<span class="emphasis">_m^n \\</span></span><br><span class="line"><span class="emphasis">  \end&#123;pmatrix&#125;</span></span><br><span class="line"><span class="emphasis">$$</span></span><br></pre></td></tr></table></figure><p>$$<br>  \begin{pmatrix}<br>  1 &amp; a_1 &amp; a_1^2 &amp; \cdots &amp; a_1^n \<br>  1 &amp; a_2 &amp; a_2^2 &amp; \cdots &amp; a_2^n \<br>  \vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots \<br>  1 &amp; a_m &amp; a_m^2 &amp; \cdots &amp; a_m^n \<br>  \end{pmatrix}<br>$$</p><p>感兴趣的小伙伴可以自己搜索“MarkDown语法”查看。</p><h3 id="各个平台软件推荐："><a href="#各个平台软件推荐：" class="headerlink" title="各个平台软件推荐："></a>各个平台软件推荐：</h3><p>首推：<a href="https://loll.cc/mdtj">mdnice</a></p><p>然后：Typora</p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MarkDown </tag>
            
            <tag> Typora </tag>
            
            <tag> 写作工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx学习笔记</title>
      <link href="/archives/nginxcsdnlearning/"/>
      <url>/archives/nginxcsdnlearning/</url>
      
        <content type="html"><![CDATA[<p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2020-11-14/1605325775891-image.png"></p><h3 id="一、Nginx简介"><a href="#一、Nginx简介" class="headerlink" title="一、Nginx简介"></a>一、Nginx简介</h3><h4 id="1-Nginx是什么？"><a href="#1-Nginx是什么？" class="headerlink" title="1. Nginx是什么？"></a>1. Nginx是什么？</h4><p>Nginx (engine x) 是一个高性能的HTTP和反向代理服务器，也是一个IMAP&#x2F;POP3&#x2F;SMTP服务器    Nginx可以作为一个Web服务器进行网站的发布，也可以作为反向代理服务器进行负载均衡的实现常见的Web服务器：Tomcat、Apache、Nginx、Weblogic等</p><h4 id="2-特点"><a href="#2-特点" class="headerlink" title="2. 特点"></a>2. 特点</h4><p>占用内存少、并发能力强</p><h3 id="二、搭建Nginx环境"><a href="#二、搭建Nginx环境" class="headerlink" title="二、搭建Nginx环境"></a>二、搭建Nginx环境</h3><h4 id="1-安装nginx"><a href="#1-安装nginx" class="headerlink" title="1.安装nginx"></a>1.安装nginx</h4><p>两种方式：</p><ul><li>源代码安装：需要编译<code>./configure</code>——&gt;<code> make</code>——&gt;<code>make install</code></li><li>在线安装，参考：<code>http://nginx.org/en/linux_packages.html</code></li></ul><h5 id="在线安装-这里以Ubuntu为例子-："><a href="#在线安装-这里以Ubuntu为例子-：" class="headerlink" title="在线安装(这里以Ubuntu为例子)："></a>在线安装(这里以Ubuntu为例子)：</h5><p>Install the prerequisites:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install curl gnupg2 ca-certificates lsb-release</span><br></pre></td></tr></table></figure><p>To set up the apt repository for stable nginx packages, run the following command:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb http://nginx.org/packages/ubuntu `lsb_release -cs` nginx&quot;</span> \</span><br><span class="line">    | sudo <span class="built_in">tee</span> /etc/apt/sources.list.d/nginx.list</span><br></pre></td></tr></table></figure><p>If you would like to use mainline nginx packages, run the following command instead:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb http://nginx.org/packages/mainline/ubuntu `lsb_release -cs` nginx&quot;</span> \</span><br><span class="line">    | sudo <span class="built_in">tee</span> /etc/apt/sources.list.d/nginx.list</span><br></pre></td></tr></table></figure><p>Next, import an official nginx signing key so apt could verify the packages authenticity:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -fsSL https://nginx.org/keys/nginx_signing.key | sudo apt-key add -</span><br></pre></td></tr></table></figure><p>Verify that you now have the proper key:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-key fingerprint ABF5BD827BD9BF62</span><br></pre></td></tr></table></figure><p>The output should contain the full fingerprint 573B FD6B 3D8F BC64 1079 A6AB ABF5 BD82 7BD9 BF62 as follows:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pub   rsa2048 2011-08-19 [SC] [expires: 2024-06-14]</span><br><span class="line">      573B FD6B 3D8F BC64 1079  A6AB ABF5 BD82 7BD9 BF62</span><br><span class="line">uid   [ unknown] nginx signing key &lt;signing-key@nginx.com&gt;</span><br></pre></td></tr></table></figure><p>To install nginx, run the following commands:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install nginx</span><br></pre></td></tr></table></figure><h5 id="访问测试"><a href="#访问测试" class="headerlink" title="访问测试"></a>访问测试</h5><p><a href="http://ip地址/">http://ip地址</a></p><p>注：Nginx默认使用的是80端口</p><h4 id="2-目录结构"><a href="#2-目录结构" class="headerlink" title="2. 目录结构"></a>2. 目录结构</h4><p>执行<code>whereis nginx</code>查看命令程序：</p><ul><li>&#x2F;usr&#x2F;sbin&#x2F;nginx</li></ul><p>配置文件：</p><ul><li>&#x2F;etc&#x2F;nginx&#x2F;nginx.conf</li></ul><p>日志目录：</p><ul><li>&#x2F;var&#x2F;log&#x2F;nginx&#x2F;</li></ul><p>默认虚拟主机目录：</p><ul><li>&#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html</li></ul><h4 id="3-相关命令"><a href="#3-相关命令" class="headerlink" title="3. 相关命令"></a>3. 相关命令</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netstat -ntpl | grep80 <span class="comment">#查看进程信息</span></span><br><span class="line">ps aux | grep nginx</span><br><span class="line">sudo nginx  <span class="comment">#启动</span></span><br><span class="line">sudo nginx -s stop <span class="comment">#停止</span></span><br><span class="line">sudo nginx -s reload  <span class="comment">#重启</span></span><br><span class="line">sudo nginx -c /etc/nginx/nginx.conf  <span class="comment">#使用指定的配置文件启动</span></span><br><span class="line">sudo nginx -t <span class="comment"># 测试配置文件是否有错误</span></span><br><span class="line">sudo nginx -v <span class="comment">#查看版本信息</span></span><br></pre></td></tr></table></figure><h4 id="4-关于配置文件"><a href="#4-关于配置文件" class="headerlink" title="4. 关于配置文件"></a>4. 关于配置文件</h4><p>主配置文件nginx.conf，包含三部分内容：全局配置、工作模式配置、HTTP配置</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#运行nginx的用户</span></span><br><span class="line"><span class="attribute">user</span>  nginx;</span><br><span class="line"><span class="comment">#工作进程的数量，可以根据CPU的核心总数来设置</span></span><br><span class="line">worker_processes  <span class="number">4</span>;</span><br><span class="line"><span class="comment">#错误日志文件的位置及输出级别error_log  /var/log/nginx/error.log warn;</span></span><br><span class="line"><span class="comment">#PID文件的位置</span></span><br><span class="line">pid        /var/run/nginx.pid;</span><br><span class="line"><span class="comment">#工作模式配置</span></span><br><span class="line">events &#123;  </span><br><span class="line">  <span class="comment">#每个进程最大处理的连接数</span></span><br><span class="line">  <span class="attribute">worker_connections</span>  <span class="number">10000</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#HTTP配置</span></span><br><span class="line">http &#123;</span><br><span class="line">  <span class="comment">#支持的媒体类型</span></span><br><span class="line">  <span class="attribute">include</span>       /etc/nginx/mime.types;</span><br><span class="line">  <span class="comment">#默认的类型</span></span><br><span class="line">  default_type  application/octet-stream;</span><br><span class="line">  <span class="comment">#日志格式</span></span><br><span class="line">  log_formatmain <span class="string">&#x27;<span class="variable">$remote_addr</span> - <span class="variable">$remote_user</span> [<span class="variable">$time_local</span>] &quot;<span class="variable">$request</span>&quot; &#x27;</span></span><br><span class="line">  </span><br><span class="line">                <span class="string">&#x27;<span class="variable">$status</span> <span class="variable">$body_bytes_sent</span> &quot;<span class="variable">$http_referer</span>&quot; &#x27;</span></span><br><span class="line">                <span class="string">&#x27;&quot;<span class="variable">$http_user_agent</span>&quot; &quot;<span class="variable">$http_x_forwarded_for</span>&quot;&#x27;</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">#访问日志文件的位置</span></span><br><span class="line">  access_log  /var/log/nginx/access.log  main;</span><br><span class="line">  <span class="comment">#是否调用sendfile函数来输出文件</span></span><br><span class="line">  sendfile        <span class="literal">on</span>;</span><br><span class="line">  <span class="comment">#tcp_nopush     on;</span></span><br><span class="line">  <span class="comment">#连接超时时间</span></span><br><span class="line">  keepalive_timeout  <span class="number">65</span>;</span><br><span class="line">  <span class="comment">#开启gzip压缩#gzip  on;</span></span><br><span class="line">  <span class="comment">#引入外部配置文件，包含虚拟主机的配置</span></span><br><span class="line">  include /etc/nginx/conf.d/<span class="regexp">*.conf</span>;&#125;</span><br></pre></td></tr></table></figure><p>虚拟主机配置文件<code>/etc/nginx/conf.d/default.conf</code>，可以定义多个虚拟主机配置文件</p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2020-11-14/1605323791002-image.png"></p><p>将原配置文件备份，养成数据备份的习惯</p><h3 id="三、HTTP服务器"><a href="#三、HTTP服务器" class="headerlink" title="三、HTTP服务器"></a>三、HTTP服务器</h3><h4 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h4><p>虚拟主机：把一台物理服务器划分为多个虚拟的服务器，称为虚拟主机</p><p>每个虚拟主机对应一个Web站点，其实就是在一台服务器上搭建多个网站</p><h4 id="2-虚拟主机"><a href="#2-虚拟主机" class="headerlink" title="2. 虚拟主机"></a>2. 虚拟主机</h4><p>步骤：</p><ol><li>准备网站目录及测试页面</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"><span class="built_in">mkdir</span> www</span><br><span class="line"><span class="built_in">cd</span> www/</span><br><span class="line"><span class="built_in">mkdir</span> test1</span><br><span class="line"><span class="built_in">mkdir</span> test2</span><br><span class="line"><span class="built_in">cd</span> test1/</span><br><span class="line"><span class="built_in">echo</span> test11111 &gt; index.html</span><br><span class="line"><span class="built_in">echo</span> test22222 &gt; ../test2/index.html</span><br></pre></td></tr></table></figure><ol start="2"><li>创建虚拟主机配置文件并配置</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/nginx/conf.d/</span><br><span class="line">sudo <span class="built_in">cp</span> default.conf test1.conf</span><br><span class="line">sudo <span class="built_in">cp</span> default.conf test2.conf</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vim test1.conf</span><br></pre></td></tr></table></figure><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span>  test1.ml2u.ml;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#charset koi8-r;</span></span><br><span class="line">    <span class="comment">#access_log  /var/log/nginx/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">    <span class="section">location</span> / &#123;</span><br><span class="line">        <span class="attribute">root</span>   /home/roy/www/test1;</span><br><span class="line">        <span class="attribute">index</span>  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#error_page  404              /404.html;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># redirect server error pages to the static page /50x.html</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="attribute">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /50x.html;</span><br><span class="line">    <span class="section">location</span> = /50x.html &#123;</span><br><span class="line">        <span class="attribute">root</span>   /usr/share/nginx/html;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">    <span class="comment">#    proxy_pass   http://127.0.0.1;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">    <span class="comment">#    root           html;</span></span><br><span class="line">    <span class="comment">#    fastcgi_pass   127.0.0.1:9000;</span></span><br><span class="line">    <span class="comment">#    fastcgi_index  index.php;</span></span><br><span class="line">    <span class="comment">#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span></span><br><span class="line">    <span class="comment">#    include        fastcgi_params;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># deny access to .htaccess files, if Apache&#x27;s document root</span></span><br><span class="line">    <span class="comment"># concurs with nginx&#x27;s one</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#location ~ /\.ht &#123;</span></span><br><span class="line">    <span class="comment">#    deny  all;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实现虚拟主机的三种方式：</p><ul><li>基于不同的IP</li><li>基于不同的端口</li><li>基于不同的域名</li></ul><ol start="3"><li>配置域名解析(这里以修改本地host文件为例子，实际使用需要购买域名)</li></ol><p>在客户端主机中配置域名解析</p><blockquote><p>windows：C:\Windows\System32\drivers\etc\hosts</p></blockquote><blockquote><p>Linux&#x2F;Mac：&#x2F;etc&#x2F;hosts</p></blockquote><p>192.168.1.59 <a href="http://www.ums.com192.168.1.59">www.ums.com192.168.1.59</a> <a href="http://www.sms/">www.sms</a>.</p><p>域名解析的过程：查找hosts文件——&gt;DNS</p><p>注：该方式仅是本地测试时使用的，实际应用中要购买注册域名</p><h4 id="3-作为图片服务器"><a href="#3-作为图片服务器" class="headerlink" title="3.作为图片服务器"></a>3.作为图片服务器</h4><p>使用Nginx作为图片服务器：</p><ul><li>上传：使用ftp或sftp上传图片到服务器指定的ftp目录下</li><li>下载：通过访问Nginx服务器来访问ftp目录下的图片文件，即使用HTTP请求来访问资源文件，而不是通过FTP请求</li></ul><p>步骤：</p><ol><li>创建存放图片的文件夹，并上传图片到该目录中<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /home/soft01/www/imag</span><br></pre></td></tr></table></figure></li><li>配置Nginx</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vi /etc/nginx/conf.d/default.conf</span><br><span class="line">    location /images &#123;</span><br><span class="line">      root   /home/soft01/www;</span><br><span class="line">      autoindex on; <span class="comment">#打开目录浏览功能</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>访问url：<code>http://ip/images</code></p><p>实际物理路径：<code>/home/soft01/www/images</code></p><h3 id="四、反向代理"><a href="#四、反向代理" class="headerlink" title="四、反向代理"></a>四、反向代理</h3><h4 id="1-简介-1"><a href="#1-简介-1" class="headerlink" title="1. 简介"></a>1. 简介</h4><h5 id="1-正常请求"><a href="#1-正常请求" class="headerlink" title="1. 正常请求"></a>1. 正常请求</h5><p>客户端发送请求到服务器，服务器接收请求并响应数据</p><h5 id="2-正向代理"><a href="#2-正向代理" class="headerlink" title="2. 正向代理"></a>2. 正向代理</h5><p>概念：位于客户端和原始服务器之间的服务器，为了从原始服务器获取数据，客户端向代理服务器发送请求并指定请求目标(原始服务器)，然后代理服务器将请求转换给原始服务器，并将响应的数据返回给客户端</p><p>正向代理是客户端使用的，对客户端进行代理，客户端知道并主动使用代理</p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2020-11-14/1605324882221-image.png"></p><p>作用：</p><ul><li>访问原来无法访问的资源（google、fackbook等），翻墙</li><li>可以做缓存，加速资源的访问</li><li>对客户端上网进行认证授权</li><li>上网行为管理，记录用户访问记录，对外隐藏用户信息</li></ul><h5 id="3-反向代理"><a href="#3-反向代理" class="headerlink" title="3. 反向代理"></a>3. 反向代理</h5><p>概念：客户端发送请求到服务器（客户端认为是原始服务器，实际上是一台反向服务器），反向代理服务器接收请求并将请求转发给内部网络中的多台集群服务器，并将响应的数据返回给客户端反向代理一般用于服务器集群、分布式等，实现负载均衡</p><p>作用：</p><ul><li>负载均衡，提高处理和响应速度</li><li>保证内网的安全，隐藏服务器信息，防止Web攻击</li></ul><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2020-11-14/1605324964238-image.png"></p><h4 id="2-配置"><a href="#2-配置" class="headerlink" title="2. 配置"></a>2. 配置</h4><p>使用Nginx作为其他服务器</p><h5 id="步骤："><a href="#步骤：" class="headerlink" title="步骤："></a>步骤：</h5><ol><li>创建虚拟主机配置文件，并配置反向代理</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 设置tomcat代理</span></span><br><span class="line"> upstream tomcat &#123;</span><br><span class="line">       server 66.42.95.239:8080;</span><br><span class="line"> &#125;</span><br><span class="line"> server &#123;</span><br><span class="line">     listen 80;</span><br><span class="line">     server_name tomcat.ml2u.ml;</span><br><span class="line">     location / &#123;</span><br><span class="line">        <span class="comment"># proxy_set_header        Host $host;</span></span><br><span class="line">        <span class="comment"># proxy_set_header        X-Real-IP $remote_addr;</span></span><br><span class="line">         proxy_pass http://tomcat;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>配置域名解析</li></ol><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2020-11-14/1605325173795-image.png"></p><ol start="3"><li>访问</li></ol><p><a href="http://tomcat.ml2u.ml/">http://tomcat.ml2u.ml</a></p><h3 id="五、负载均衡"><a href="#五、负载均衡" class="headerlink" title="五、负载均衡"></a>五、负载均衡</h3><h4 id="1-简介-2"><a href="#1-简介-2" class="headerlink" title="1. 简介"></a>1. 简介</h4><p>概念：将接收到的请求按照一定的规则分发到不同的服务器进行处理，从而提高系统响应和处理速度，称为负载均衡</p><h4 id="2-配置-1"><a href="#2-配置-1" class="headerlink" title="2. 配置"></a>2. 配置</h4><p>步骤：</p><ol><li>准备网站（模拟淘宝，后面有多台服务器)</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#拷贝两个tomcat</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r apache-tomcat-8.5.30 taobao1</span><br><span class="line"><span class="built_in">cp</span> -r apache-tomcat-8.5.30 taobao2</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改tomcat端口</span></span><br><span class="line">vi taobao1/conf/server.xml</span><br><span class="line">vi taobao2/conf/server.xml</span><br><span class="line"><span class="comment">#修改页面</span></span><br><span class="line">vi taobao1/webapps/ROOT/index.jsp</span><br><span class="line">vi taobao2/webapps/ROOT/index.jsp</span><br><span class="line"><span class="comment">#启动tomcat</span></span><br><span class="line">./startup.s</span><br></pre></td></tr></table></figure><ol start="2"><li>创建虚拟主机配置文件，并配置负载均衡</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo cpproxy.conf taobao.conf</span><br><span class="line">sudo vi taobao.conf</span><br><span class="line"><span class="comment">#后台服务器列表</span></span><br><span class="line"></span><br><span class="line">  upstream taobao_server&#123;</span><br><span class="line">      server 192.168.1.66:8081 weight=3; <span class="comment">#weight表示权重，权重越高被分配到的几率越大</span></span><br><span class="line">      server 192.168.1.66:8082 weight=7;  </span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  server &#123;</span><br><span class="line">      listen       80;</span><br><span class="line">      server_name  www.taobao.com;</span><br><span class="line">      location / &#123;</span><br><span class="line">          proxy_passhttp://taobao_server;  <span class="comment">#指定代理的后台服务器      &#125;</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="六、动静分离"><a href="#六、动静分离" class="headerlink" title="六、动静分离"></a>六、动静分离</h3><h4 id="1-简介-3"><a href="#1-简介-3" class="headerlink" title="1. 简介"></a>1. 简介</h4><p>问题：tomcat在处理静态资源时效率不高，默认情况下所有资源都由tomcat处理，会导致Web应用响应慢，占用系统资源</p><p>解决：<br>将静态资源交由Nginx处理，动态资源仍由tomcat处理，实现动静分离</p><p>实际上就是把Nginx作为静态资源服务</p><h4 id="2、配置"><a href="#2、配置" class="headerlink" title="2、配置"></a>2、配置</h4><p>步骤：</p><ol><li>编辑taobao.conf，配置动态分离</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vi /etc/nginx/conf.d/taobao.conf  </span><br><span class="line">  <span class="comment">#处理静态资源</span></span><br><span class="line">  location~ .*\.(js|css|ico|png|jpg|eot|svg|ttf|woff) &#123;</span><br><span class="line">      root /home/soft01/www/static;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>创建存放静态资源的文件夹，并将资源资源放到该目录中</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/soft01/www</span><br><span class="line"><span class="built_in">mkdir</span> staticcd static</span><br><span class="line">chmod777 *</span><br><span class="line"><span class="built_in">cd</span> /home/soft01/software/taobao1/webapp/ROOT</span><br><span class="line"><span class="built_in">cp</span> tomcat.css tomcat.png  /home/soft01/www/static</span><br></pre></td></tr></table></figure><p>高并发的处理：</p><ul><li>负载均衡：集群</li><li>动静分离：使用Nginx、CDN</li><li>缓存：以空间换时间，提高系统效率</li><li>限流：流量控制</li><li>降级：服务降载</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Nginx </tag>
            
            <tag> Tomcat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu安装JDK以及Tomcat</title>
      <link href="/archives/nginxlearning01/"/>
      <url>/archives/nginxlearning01/</url>
      
        <content type="html"><![CDATA[<h2 id="Ubuntu安装JDK以及Tomcat"><a href="#Ubuntu安装JDK以及Tomcat" class="headerlink" title="Ubuntu安装JDK以及Tomcat"></a>Ubuntu安装JDK以及Tomcat</h2><p>ps -ef|grep tomcat</p><p>检查tomcat是否运行中</p><p>sudo netstat -tlpn  &#x2F;&#x2F;Ubuntu 下查看哪些端口是开放的，分别是什么进程在监听</p><p>sudo dpkg -i mysql-apt-config_0.8.16-1_all.deb </p><p>netstat -ntpl | grep 3306</p><p>mysql -u root -p</p><p>show databases;</p><p>apt-get install vsftpd</p><p>shift+g  $  最后一个光标</p><p>sudo adduser username</p><p>sudo deluser username</p><p> echo welcome to ftp &gt; a.txt</p><p>sudo usermod -aG sudo username</p><p>是不是你用service vsftpd start 启动， 尝试下&#x2F;etc&#x2F;init.d&#x2F;vsftpd start </p><p>whereis nginx</p><ul><li>&#x2F;usr&#x2F;sbin&#x2F;nginx   &#x2F;&#x2F;命令</li><li>&#x2F;etc&#x2F;nginx   &#x2F;&#x2F;配置文件</li><li>cd &#x2F;var&#x2F;log&#x2F;nginx&#x2F;     &#x2F;&#x2F;日志</li><li>&#x2F;usr&#x2F;share&#x2F;nginx    &#x2F;&#x2F;虚拟目录</li></ul><p>netstat -ntpl | grep 80 </p><p>ps aux | grep nginx   查看进程信息</p><p>sudo nginx<br>sudo nginx -s stop<br>sudo nginx -s reload</p><p>sudo nginx -c &#x2F;etc&#x2F;nginx&#x2F;nginx.conf</p><p>sudo nginx -t </p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-Butterfly主题解决B站视频自适应的方法</title>
      <link href="/archives/bilibili-video-adaptation-hexo-butterfly/"/>
      <url>/archives/bilibili-video-adaptation-hexo-butterfly/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本人专业不是编程，但也喜欢瞎捣鼓，最近发现想在文章中粘贴视频的时候（基本是B站的视频），粘贴进去的效果是这样的：</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic/2020-11-9/1604913139436-image.png"></p><iframe src="//player.bilibili.com/player.html?aid=18316187&bvid=BV1tW411q7KM&cid=40592634&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><p>比较小，而且不能自适应，不太美观。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic/2020-11-9/1604913347871-IMG_BB708B1043AE-1.jpeg"></p><p>google搜索了问题，是有解决方法的，这里自己简单总结一个自己认为还算简单的方法，分享给大家。</p><blockquote><p>我用的butterfly主题是目前最新的3.3.0</p></blockquote><p>其实修改一下css就可以是实现自适应。简单来说分成三步。</p><h2 id="1、新建一个CSS文件"><a href="#1、新建一个CSS文件" class="headerlink" title="1、新建一个CSS文件"></a>1、新建一个CSS文件</h2><p>首先在主题文件夹下<code>source/css</code>里面创建一个<code>bilibili.css</code>的文件，</p><p>里面的内容填这个：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*哔哩哔哩视频适配*/</span></span><br><span class="line"><span class="selector-class">.bilibili</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0</span>;              <span class="comment">/*高度设置这里无效，设置为0，用padding撑开div*/</span></span><br><span class="line">    <span class="attribute">padding-bottom</span>: <span class="number">75%</span>;    <span class="comment">/*68%到80%都可以*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.bilibili</span> <span class="selector-tag">iframe</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2、引入新建的CSS"><a href="#2、引入新建的CSS" class="headerlink" title="2、引入新建的CSS"></a>2、引入新建的CSS</h2><p>Butterfly主题可自定义程度很高，主题的配置文件里面也贴心地给我们预留了引入CSS的地方。</p><p>打开主题的配置文件，搜索<code>inject</code>,找到大概文末这个位置：</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic/2020-11-9/1604913616221-image.png"></p><p>默认都是注释的内容，我们在head一栏增加下面的内容：</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/bilibili.css&quot;&gt;</span>  </span><br></pre></td></tr></table></figure><h2 id="3、插入视频链接"><a href="#3、插入视频链接" class="headerlink" title="3、插入视频链接"></a>3、插入视频链接</h2><p>然后写文章的时候，代码参考这个：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bilibili&quot;</span>&gt;</span></span></span><br><span class="line"><span class="code">    &lt;iframe src=&quot;//player.bilibili.com/player.html?aid=18316187&amp;bvid=BV1tW411q7KM&amp;cid=40592634&amp;page=1&quot; scrolling=&quot;no&quot; border=&quot;0&quot; frameborder=&quot;no&quot; framespacing=&quot;0&quot; allowfullscreen=&quot;true&quot;&gt; &lt;/iframe&gt;</span></span><br><span class="line"><span class="code">&lt;/div&gt;</span></span><br></pre></td></tr></table></figure><p>用了这个class，就可以实现我们想要的自适应效果了。</p><p><code>src</code>部分，改成你对应B站视频的地址就行了。</p><div class="bilibili">    <iframe src="//player.bilibili.com/player.html?aid=18316187&bvid=BV1tW411q7KM&cid=40592634&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe></div><p>现在就能自适应了。</p><p>手机看效果也ok。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic/2020-11-9/1604913278994-IMG_0C494704AB20-1.jpeg"></p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="https://hongcyu.cn/posts/hexo-bilibili.html">hongCYu’s Blog</a></p><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>每次碰到问题，都很庆幸都能在百度或者google上找到解决的方法，这和大家不嫌麻烦的分享有很大的关系，我自己在捣腾服务器、建站、搭建博客的时候，也遇到了很多问题，反反复复找了好多网站、查了好多的资料，大部分解决了，但自己却嫌麻烦，没有记录。</p><p>现在希望把自己碰到的问题，自己是怎么解决的记录下来，可以给需要的小伙伴们一个参考，也符合互联网的分享定义。</p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客设置百度主动推送</title>
      <link href="/archives/hexo-baidu-url-submit/"/>
      <url>/archives/hexo-baidu-url-submit/</url>
      
        <content type="html"><![CDATA[<h2 id="百度主动推送的作用"><a href="#百度主动推送的作用" class="headerlink" title="百度主动推送的作用"></a>百度主动推送的作用</h2><blockquote><p>作用：某些主机，比如Github，禁止百度爬虫访问博客，导致博客无法被百度收录。多亏百度提供了主动提交的接口，这才有了个补救的方法。除此之外， 使用主动推送还会达到如下功效：</p><ul><li>及时发现：可以缩短百度爬虫发现您站点新链接的时间，使新发布的页面可以在第一时间被百度收录;</li><li>保护原创：对于网站的最新原创内容，使用主动推送功能可以快速通知到百度，使内容可以在转发之前被百度发现</li></ul></blockquote><h2 id="在hexo中添加百度主动推送功能"><a href="#在hexo中添加百度主动推送功能" class="headerlink" title="在hexo中添加百度主动推送功能"></a>在hexo中添加百度主动推送功能</h2><h3 id="安装hexo-baidu-url-submit插件"><a href="#安装hexo-baidu-url-submit插件" class="headerlink" title="安装hexo-baidu-url-submit插件"></a>安装hexo-baidu-url-submit插件</h3><p>首先，在Hexo站点<code>根目录</code>下，打开git-bash，输入下面命令安装插件：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-baidu-url-submit --save</span><br></pre></td></tr></table></figure><h3 id="在站点配置文件中添加baidu-url-submit的配置项"><a href="#在站点配置文件中添加baidu-url-submit的配置项" class="headerlink" title="在站点配置文件中添加baidu-url-submit的配置项"></a>在站点配置文件中添加baidu-url-submit的配置项</h3><p>把以下内容配置到<code>站点配置文件_config.yml</code>中。</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#设置百度主动推送</span></span><br><span class="line"><span class="attr">baidu_url_submit:</span></span><br><span class="line">  <span class="attr">count:</span> <span class="number">200</span>  <span class="comment">#比如200，代表提交最新的200个链接</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">www.lansheng.net.cn</span> <span class="comment"># 在百度站长平台中注册的域名，这个改为你自己的域名</span></span><br><span class="line">  <span class="attr">token:</span> <span class="string">your_token</span> <span class="comment"># 请注意这是您的秘钥， 所以请不要把博客源代码发布在公众仓库里!</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">baidu_urls.txt</span> <span class="comment"># 文本文档的地址， 新链接会保存在此文本文档里，这个默认</span></span><br></pre></td></tr></table></figure><p>这个秘钥可以从百度站长平台的自动推送接口那里获取到，如下图所示：</p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2020-11-7/1604735160079-image.png"></p><h3 id="在站点配置文件中加入新的deploy配置项"><a href="#在站点配置文件中加入新的deploy配置项" class="headerlink" title="在站点配置文件中加入新的deploy配置项"></a>在站点配置文件中加入新的deploy配置项</h3><p>同样在<code>站点配置文件</code>中找到deploy项，添加新的推送项，如下所示：</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span></span><br><span class="line">    <span class="attr">coding:</span> <span class="string">git@git.coding.net:你的coding用户名/你的coding用户名.coding.me.git</span> <span class="comment">#coding地址</span></span><br><span class="line">    <span class="attr">github:</span> <span class="string">git@github.com:你的github用户名/你的github用户名.github.io.git</span>  <span class="comment"># Github地址</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">baidu_url_submitter</span></span><br></pre></td></tr></table></figure><h3 id="验证配置是否成功"><a href="#验证配置是否成功" class="headerlink" title="验证配置是否成功"></a>验证配置是否成功</h3><p>最后输入命令hexo s看看能不能启动本地服务器，如果就没问题了。可以输入命令hexo d部署即可。</p><p>成功不是可以在git-bash中看到如下的信息：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">INFO  Deploying: baidu_url_submitter</span><br><span class="line">INFO  Submitting urls</span><br><span class="line">......</span><br><span class="line">&#123;<span class="string">&quot;remain&quot;</span>:4999900,<span class="string">&quot;success&quot;</span>:100&#125;</span><br><span class="line">INFO  Deploy <span class="keyword">done</span>: baidu_url_submitter</span><br></pre></td></tr></table></figure><p>就说明主动推送成功了。</p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2020-11-7/1604735241204-image.png"></p><h2 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h2><p>卸载：<code>npm uninstall hexo-baidu-url-submit</code></p><p>然后在站点配置文件中，删除上面的配置项，即可。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p>参考文章:<a href="https://www.jianshu.com/p/f37452d4978e">https://www.jianshu.com/p/f37452d4978e</a></p><p>插件GitHub地址:<a href="https://github.com/huiwang/hexo-baidu-url-submit">https://github.com/huiwang/hexo-baidu-url-submit</a></p><p>官方说明文档：<a href="https://hui-wang.info/2016/10/23/Hexo%E6%8F%92%E4%BB%B6%E4%B9%8B%E7%99%BE%E5%BA%A6%E4%B8%BB%E5%8A%A8%E6%8F%90%E4%BA%A4%E9%93%BE%E6%8E%A5/">https://hui-wang.info/2016/10/23/Hexo%E6%8F%92%E4%BB%B6%E4%B9%8B%E7%99%BE%E5%BA%A6%E4%B8%BB%E5%8A%A8%E6%8F%90%E4%BA%A4%E9%93%BE%E6%8E%A5/</a></p><h4 id="文章作者：蓝蓝"><a href="#文章作者：蓝蓝" class="headerlink" title="文章作者：蓝蓝"></a>文章作者：蓝蓝</h4><h4 id="文章原文链接：https-lanlan2017-github-io-blog-7ac3f85"><a href="#文章原文链接：https-lanlan2017-github-io-blog-7ac3f85" class="headerlink" title="文章原文链接：https://lanlan2017.github.io/blog/7ac3f85/"></a>文章原文链接：<a href="https://lanlan2017.github.io/blog/7ac3f85/">https://lanlan2017.github.io/blog/7ac3f85/</a></h4><h4 id="转载请注明出处！"><a href="#转载请注明出处！" class="headerlink" title="转载请注明出处！"></a>转载请注明出处！</h4>]]></content>
      
      
      <categories>
          
          <category> 网站搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 百度推送 </tag>
            
            <tag> SEO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>程序员必备工具篇/程序员必备基础：Git</title>
      <link href="/archives/git-learning/"/>
      <url>/archives/git-learning/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>掌握Git命令是每位程序员必备的基础，之前一直是用smartGit工具，直到看到大佬们都是在用Git命令操作的，回想一下，发现有些Git命令我都忘记了，于是写了这篇博文，复习一下~</p><blockquote><p><a href="https://github.com/whx123/JavaHome">https://github.com/whx123/JavaHome</a></p></blockquote><p><strong>公众号：捡田螺的小男孩</strong></p><p><strong>文章目录</strong></p><ul><li>Git是什么?</li><li>Git的相关理论基础</li><li>日常开发中，Git的基本常用命令</li><li>Git进阶之分支处理</li><li>Git进阶之处理冲突</li><li>Git进阶之撤销与回退</li><li>Git进阶之标签tag</li><li>Git其他一些经典命令</li></ul><h2 id="Git是什么"><a href="#Git是什么" class="headerlink" title="Git是什么"></a>Git是什么</h2><p>在回忆Git是什么的话，我们先来复习这几个概念哈~</p><h3 id="什么是版本控制？"><a href="#什么是版本控制？" class="headerlink" title="什么是版本控制？"></a>什么是版本控制？</h3><p>百度百科定义是酱紫的~</p><blockquote><p>版本控制是指对软件开发过程中各种程序代码、配置文件及说明文档等文件变更的管理，是软件配置管理的核心思想之一。</p></blockquote><p>那些年，我们的毕业论文,其实就是版本变更的真实写照…脑洞一下，版本控制就是这些论文变更的管理~<br><img src="https://user-gold-cdn.xitu.io/2020/6/20/172d07667ab32c55?w=783&h=222&f=png&s=42433"></p><h3 id="什么是集中化的版本控制系统？"><a href="#什么是集中化的版本控制系统？" class="headerlink" title="什么是集中化的版本控制系统？"></a>什么是集中化的版本控制系统？</h3><p>那么，集中化的版本控制系统又是什么呢，说白了，就是有一个集中管理的中央服务器，保存着所有文件的修改历史版本，而协同开发者通过客户端连接到这台服务器，从服务器上同步更新或上传自己的修改。</p><p><img src="https://user-gold-cdn.xitu.io/2020/6/20/172d0caa0af7ca9e?w=1247&h=825&f=png&s=77377"></p><h3 id="什么是分布式版本控制系统？"><a href="#什么是分布式版本控制系统？" class="headerlink" title="什么是分布式版本控制系统？"></a>什么是分布式版本控制系统？</h3><p>分布式版本控制系统，就是远程仓库同步所有版本信息到本地的每个用户。嘻嘻，这里分三点阐述吧：</p><ul><li>用户在本地就可以查看所有的历史版本信息，但是偶尔要从远程更新一下，因为可能别的用户有文件修改提交到远程哦。</li><li>用户即使离线也可以本地提交，push推送到远程服务器才需要联网。</li><li>每个用户都保存了历史版本，所以只要有一个用户设备没问题，就可以恢复数据啦~</li></ul><p><img src="https://user-gold-cdn.xitu.io/2020/6/21/172d47e8db158f67?w=1453&h=764&f=png&s=95399"></p><h3 id="什么是Git"><a href="#什么是Git" class="headerlink" title="什么是Git?"></a>什么是Git?</h3><p>Git是免费、开源的<strong>分布式版本控制</strong>系统，可以有效、高速地处理从很小到非常大的项目版本管理。</p><p><img src="https://user-gold-cdn.xitu.io/2020/6/26/172efd2d7e5a8b30?w=220&h=92&f=png&s=9300"></p><h2 id="Git的相关理论基础"><a href="#Git的相关理论基础" class="headerlink" title="Git的相关理论基础"></a>Git的相关理论基础</h2><ul><li>Git的四大工作区域</li><li>Git的工作流程</li><li>Git文件的四种状态</li><li>一张图解释Git的工作原理</li></ul><h3 id="Git的四大工作区域"><a href="#Git的四大工作区域" class="headerlink" title="Git的四大工作区域"></a>Git的四大工作区域</h3><p>先复习Git的几个工作区域哈：<br><img src="https://user-gold-cdn.xitu.io/2020/6/25/172ea283b8925e39?w=1314&h=1027&f=png&s=75979"></p><ul><li><strong>Workspace</strong>：你电脑本地看到的文件和目录，在Git的版本控制下，构成了工作区。</li><li><strong>Index&#x2F;Stage</strong>：暂存区，一般存放在 .git目录下，即.git&#x2F;index,它又叫待提交更新区，用于临时存放你未提交的改动。比如，你执行git add，这些改动就添加到这个区域啦。</li><li><strong>Repository</strong>：本地仓库，你执行git clone 地址，就是把远程仓库克隆到本地仓库。它是一个存放在本地的版本库，其中<strong>HEAD指向最新放入仓库的版本</strong>。当你执行git commit，文件改动就到本地仓库来了~</li><li><strong>Remote</strong>：远程仓库，就是类似github，码云等网站所提供的仓库，可以理解为远程数据交换的仓库~</li></ul><h3 id="Git的工作流程"><a href="#Git的工作流程" class="headerlink" title="Git的工作流程"></a>Git的工作流程</h3><p>上一小节介绍完Git的四大工作区域，这一小节呢，介绍Git的工作流程咯，把git的操作命令和几个工作区域结合起来，个人觉得更容易理解一些吧，哈哈，看图：</p><p><img src="https://user-gold-cdn.xitu.io/2020/6/26/172f02fc758ed96d?w=1254&h=1010&f=png&s=113385"><br> git 的正向工作流程一般就这样：</p><ul><li>从远程仓库拉取文件代码回来；</li><li>在工作目录，增删改查文件；</li><li>把改动的文件放入暂存区；</li><li>将暂存区的文件提交本地仓库；</li><li>将本地仓库的文件推送到远程仓库；</li></ul><h3 id="Git文件的四种状态"><a href="#Git文件的四种状态" class="headerlink" title="Git文件的四种状态"></a>Git文件的四种状态</h3><p>根据一个文件是否已加入版本控制，可以把文件状态分为：Tracked(已跟踪)和Untracked(未跟踪)，而tracked(已跟踪)又包括三种工作状态：Unmodified，Modified，Staged</p><p><img src="https://user-gold-cdn.xitu.io/2020/6/21/172d5ecd2d130275?w=1557&h=820&f=png&s=106243"></p><ul><li><strong>Untracked</strong>: 文件还没有加入到git库，还没参与版本控制，即未跟踪状态。这时候的文件，通过git add 状态，可以变为Staged状态</li><li><strong>Unmodified</strong>：文件已经加入git库, 但是呢，还没修改, 就是说版本库中的文件快照内容与文件夹中还完全一致。 Unmodified的文件如果被修改, 就会变为Modified. 如果使用git remove移出版本库, 则成为Untracked文件。</li><li><strong>Modified</strong>：文件被修改了，就进入modified状态啦，文件这个状态通过stage命令可以进入staged状态</li><li><strong>staged</strong>：暂存状态. 执行git commit则将修改同步到库中, 这时库中的文件和本地文件又变为一致, 文件为Unmodified状态.</li></ul><h3 id="一张图解释Git的工作原理"><a href="#一张图解释Git的工作原理" class="headerlink" title="一张图解释Git的工作原理"></a>一张图解释Git的工作原理</h3><p><img src="https://user-gold-cdn.xitu.io/2020/6/22/172dc85dbffd9ee9?w=1538&h=828&f=png&s=252469"></p><h2 id="日常开发中，Git的基本常用命令"><a href="#日常开发中，Git的基本常用命令" class="headerlink" title="日常开发中，Git的基本常用命令"></a>日常开发中，Git的基本常用命令</h2><ul><li>git clone</li><li>git checkout -b dev</li><li>git add </li><li>git commit</li><li>git log</li><li>git diff</li><li>git status</li><li>git pull&#x2F;git fetch</li><li>git push</li></ul><p>这个图只是模拟一下git基本命令使用的大概流程哈~<br><img src="https://user-gold-cdn.xitu.io/2020/6/25/172ec08ede51d056?w=1562&h=692&f=png&s=136113"></p><h3 id="git-clone"><a href="#git-clone" class="headerlink" title="git clone"></a>git clone</h3><p>当我们要进行开发，第一步就是克隆远程版本库到本地呢</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone url  克隆远程版本库</span><br></pre></td></tr></table></figure><p><img src="https://user-gold-cdn.xitu.io/2020/6/25/172eac70ddf0000f?w=606&h=119&f=png&s=16710"></p><h3 id="git-checkout-b-dev"><a href="#git-checkout-b-dev" class="headerlink" title="git checkout -b dev"></a>git checkout -b dev</h3><p>克隆完之后呢，开发新需求的话，我们需要新建一个开发分支，比如新建开发分支dev</p><p>创建分支：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git checkout -b dev   创建开发分支dev，并切换到该分支下</span><br></pre></td></tr></table></figure><p><img src="https://user-gold-cdn.xitu.io/2020/6/25/172eac94cbf03f92?w=585&h=118&f=png&s=14677"></p><h3 id="git-add"><a href="#git-add" class="headerlink" title="git add"></a>git add</h3><p>git add的使用格式：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git add .添加当前目录的所有文件到暂存区</span><br><span class="line">git add [dir]添加指定目录到暂存区，包括子目录</span><br><span class="line">git add [file1]添加指定文件到暂存区</span><br></pre></td></tr></table></figure><p>有了开发分支dev之后，我们就可以开始开发啦，假设我们开发完HelloWorld.java，可以把它加到暂存区，命令如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git add Hello.java  把HelloWorld.java文件添加到暂存区去</span><br></pre></td></tr></table></figure><p><img src="https://user-gold-cdn.xitu.io/2020/6/25/172ead69113ecab6?w=536&h=57&f=png&s=7135"></p><h3 id="git-commit"><a href="#git-commit" class="headerlink" title="git commit"></a>git commit</h3><p>git commit的使用格式：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git commit -m [message] 提交暂存区到仓库区,message为说明信息</span><br><span class="line">git commit [file1] -m [message] 提交暂存区的指定文件到本地仓库</span><br><span class="line">git commit --amend -m [message] 使用一次新的commit，替代上一次提交</span><br></pre></td></tr></table></figure><p>把HelloWorld.java文件加到暂存区后，我们接着可以提交到本地仓库啦~</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git commit -m &#x27;helloworld开发&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://user-gold-cdn.xitu.io/2020/6/25/172eae180b28d9e7?w=548&h=90&f=png&s=14447"></p><h3 id="git-status"><a href="#git-status" class="headerlink" title="git status"></a>git status</h3><p>git status,表示查看工作区状态，使用命令格式：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git status  查看当前工作区暂存区变动</span><br><span class="line">git status -s  查看当前工作区暂存区变动，概要信息</span><br><span class="line">git status  --show-stash 查询工作区中是否有stash（暂存的文件）</span><br></pre></td></tr></table></figure><p>当你忘记是否已把代码文件添加到暂存区或者是否提交到本地仓库，都可以用git status看看哦~<br><img src="https://user-gold-cdn.xitu.io/2020/6/25/172eb5ea0d5fde25?w=724&h=195&f=png&s=22238"></p><h3 id="git-log"><a href="#git-log" class="headerlink" title="git log"></a>git log</h3><p>git log，这个命令用得应该比较多，表示查看提交历史&#x2F;提交日志~</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git log  查看提交历史</span><br><span class="line">git log --oneline 以精简模式显示查看提交历史</span><br><span class="line">git log -p &lt;file&gt; 查看指定文件的提交历史</span><br><span class="line">git blame &lt;file&gt; 一列表方式查看指定文件的提交历史</span><br></pre></td></tr></table></figure><p>嘻嘻，看看dev分支上的提交历史吧<del>要回滚代码就经常用它喵喵提交历史</del><br><img src="https://user-gold-cdn.xitu.io/2020/6/25/172eb79224fae0eb?w=593&h=214&f=png&s=28063"></p><h3 id="git-diff"><a href="#git-diff" class="headerlink" title="git diff"></a>git diff</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git diff 显示暂存区和工作区的差异</span><br><span class="line">git diff filepath   filepath路径文件中，工作区与暂存区的比较差异</span><br><span class="line">git diff HEAD filepath 工作区与HEAD ( 当前工作分支)的比较差异</span><br><span class="line">git diff branchName filepath 当前分支的文件与branchName分支的文件的比较差异</span><br><span class="line">git diff commitId filepath 与某一次提交的比较差异</span><br></pre></td></tr></table></figure><p>如果你想对比一下你改了哪些内容，可以用git diff对比一下文件修改差异哦<br><img src="https://user-gold-cdn.xitu.io/2020/6/25/172eb8d4ff0cb241?w=747&h=247&f=png&s=29019"></p><h3 id="git-pull-git-fetch"><a href="#git-pull-git-fetch" class="headerlink" title="git pull&#x2F;git fetch"></a>git pull&#x2F;git fetch</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git pull  拉取远程仓库所有分支更新并合并到本地分支。</span><br><span class="line">git pull origin master 将远程master分支合并到当前本地master分支</span><br><span class="line">git pull origin master:master 将远程master分支合并到当前本地master分支，冒号后面表示本地分支</span><br><span class="line"></span><br><span class="line">git fetch --all  拉取所有远端的最新代码</span><br><span class="line">git fetch origin master 拉取远程最新master分支代码</span><br></pre></td></tr></table></figure><p>我们一般都会用git pull拉取最新代码看看的，解决一下冲突，再推送代码到远程仓库的。</p><p><img src="https://user-gold-cdn.xitu.io/2020/6/25/172ebdbf926f16b6?w=566&h=67&f=png&s=7840"></p><blockquote><p>有些伙伴可能对使用git pull还是git fetch有点疑惑，其实<br>git pull &#x3D; git fetch+ git merge。pull的话，拉取远程分支并与本地分支合并，fetch只是拉远程分支，怎么合并，可以自己再做选择。</p></blockquote><h3 id="git-push"><a href="#git-push" class="headerlink" title="git push"></a>git push</h3><p>git push 可以推送本地分支、标签到远程仓库，也可以删除远程分支哦。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git push origin master 将本地分支的更新全部推送到远程仓库master分支。</span><br><span class="line">git push origin -d &lt;branchname&gt;   删除远程branchname分支</span><br><span class="line">git push --tags 推送所有标签</span><br></pre></td></tr></table></figure><p>如果我们在dev开发完，或者就想把文件推送到远程仓库，给别的伙伴看看，就可以使用git push origin dev~<br><img src="https://user-gold-cdn.xitu.io/2020/6/25/172ebe5bab790e17?w=701&h=321&f=png&s=43043"></p><h2 id="Git进阶之分支处理"><a href="#Git进阶之分支处理" class="headerlink" title="Git进阶之分支处理"></a>Git进阶之分支处理</h2><p>Git一般都是存在多个分支的，开发分支，回归测试分支以及主干分支等，所以Git分支处理的命令也需要很熟悉的呀~</p><ul><li>git branch </li><li>git checkout</li><li>git merge</li></ul><h3 id="git-branch"><a href="#git-branch" class="headerlink" title="git branch"></a>git branch</h3><p>git branch用处多多呢，比如新建分支、查看分支、删除分支等等</p><p><strong>新建分支：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git checkout -b dev2  新建一个分支，并且切换到新的分支dev2</span><br><span class="line">git branch dev2 新建一个分支，但是仍停留在原来分支</span><br></pre></td></tr></table></figure><p><img src="https://user-gold-cdn.xitu.io/2020/6/25/172ec19a8c138ab3?w=530&h=64&f=png&s=8940"></p><p><strong>查看分支：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git branch    查看本地所有的分支</span><br><span class="line">git branch -r  查看所有远程的分支</span><br><span class="line">git branch -a  查看所有远程分支和本地分支</span><br></pre></td></tr></table></figure><p><img src="https://user-gold-cdn.xitu.io/2020/6/25/172ec1f4c26f2847?w=566&h=357&f=png&s=34314"></p><p><strong>删除分支：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git branch -D &lt;branchname&gt;  删除本地branchname分支</span><br></pre></td></tr></table></figure><p><img src="https://user-gold-cdn.xitu.io/2020/6/25/172ec2607fabe1c2?w=635&h=294&f=png&s=32151"></p><h3 id="git-checkout"><a href="#git-checkout" class="headerlink" title="git checkout"></a>git checkout</h3><p><strong>切换分支：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git checkout master 切换到master分支</span><br></pre></td></tr></table></figure><p><img src="https://user-gold-cdn.xitu.io/2020/6/25/172ec20cf6223d5c?w=540&h=83&f=png&s=10798"></p><h3 id="git-merge"><a href="#git-merge" class="headerlink" title="git merge"></a>git merge</h3><p>我们在开发分支dev开发、测试完成在发布之前，我们一般需要把开发分支dev代码合并到master，所以git merge也是程序员必备的一个命令。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git merge master  在当前分支上合并master分支过来</span><br><span class="line">git merge --no-ff origin/dev  在当前分支上合并远程分支dev</span><br><span class="line">git merge --abort 终止本次merge，并回到merge前的状态</span><br></pre></td></tr></table></figure><p>比如，你开发完需求后，发版全需要把代码合到主干master分支，如下：<br><img src="https://user-gold-cdn.xitu.io/2020/6/26/172ed9c119765d70?w=566&h=135&f=png&s=15550"></p><h2 id="Git进阶之处理冲突"><a href="#Git进阶之处理冲突" class="headerlink" title="Git进阶之处理冲突"></a>Git进阶之处理冲突</h2><p>Git版本控制，还是多个人一起搞的，多个分支并存的，这就难免会有冲突出现~</p><h3 id="Git合并分支，冲突出现"><a href="#Git合并分支，冲突出现" class="headerlink" title="Git合并分支，冲突出现"></a>Git合并分支，冲突出现</h3><p>同一个文件，在合并分支的时候，如果同一行被多个分支或者不同人都修改了，合并的时候就会出现冲突。</p><p>举个粟子吧，我们现在在dev分支，修改HelloWorld.java文件，假设修改了第三行，并且commit提交到本地仓库，修改内容如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public class HelloWorld &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        System.out.println(&quot;Hello，捡田螺的小男孩！&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们切回到master分支，也修改HelloWorld.java同一位置内容，如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public class HelloWorld &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        System.out.println(&quot;Hello，jay！！&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再然后呢，我们提交一下master分支的这个改动，并把dev分支合并过下，就出现冲突啦，如图所示：</p><p><img src="https://user-gold-cdn.xitu.io/2020/6/26/172f101fc6cf63c9?w=934&h=591&f=png&s=78508"></p><h3 id="Git解决冲突"><a href="#Git解决冲突" class="headerlink" title="Git解决冲突"></a>Git解决冲突</h3><p>Git 解决冲突步骤如下：</p><ul><li>查看冲突文件内容</li><li>确定冲突内容保留哪些部分，修改文件</li><li>重新提交，done</li></ul><h4 id="1-查看冲突文件内容"><a href="#1-查看冲突文件内容" class="headerlink" title="1.查看冲突文件内容"></a>1.查看冲突文件内容</h4><p>git merge提示冲突后，我们切换到对应文件，看看冲突内容哈，，如下：<br><img src="https://user-gold-cdn.xitu.io/2020/6/26/172f0fccbe271602?w=661&h=194&f=png&s=19547"></p><h4 id="2-确定冲突内容保留哪些部分，修改文件"><a href="#2-确定冲突内容保留哪些部分，修改文件" class="headerlink" title="2.确定冲突内容保留哪些部分，修改文件"></a>2.确定冲突内容保留哪些部分，修改文件</h4><ul><li>Git用&lt;&lt;&lt;&lt;&lt;&lt;&lt;，&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;，&gt;&gt;&gt;&gt;&gt;&gt;&gt;标记出不同分支的内容，</li><li>&lt;&lt;&lt;&lt;&lt;&lt;&lt;HEAD是指主分支修改的内容，&gt;&gt;&gt;&gt;&gt;&gt;&gt; dev是指dev分支上修改的内容</li></ul><p>所以呢，我们确定到底保留哪个分支内容，还是两个分支内容都保留呢，然后再去修改文件冲突内容~</p><h4 id="3-修改完冲突文件内容，我们重新提交，冲突done"><a href="#3-修改完冲突文件内容，我们重新提交，冲突done" class="headerlink" title="3.修改完冲突文件内容，我们重新提交，冲突done"></a>3.修改完冲突文件内容，我们重新提交，冲突done</h4><p><img src="https://user-gold-cdn.xitu.io/2020/6/26/172f159fc458e088?w=760&h=419&f=png&s=38630"></p><h2 id="Git进阶之撤销与回退"><a href="#Git进阶之撤销与回退" class="headerlink" title="Git进阶之撤销与回退"></a>Git进阶之撤销与回退</h2><p>Git的撤销与回退，在日常工作中使用的比较频繁。比如我们想将某个修改后的文件撤销到上一个版本，或者想撤销某次多余的提交，都要用到git的撤销和回退操作。</p><p>代码在Git的每个工作区域都是用哪些命令撤销或者回退的呢，如下图所示：<br><img src="https://user-gold-cdn.xitu.io/2020/6/27/172f33c532a96e98?w=1595&h=958&f=png&s=181268"></p><p>有关于Git的撤销与回退，一般就以下几个核心命令</p><ul><li>git checkout</li><li>git reset</li><li>git revert</li></ul><h3 id="git-checkout-1"><a href="#git-checkout-1" class="headerlink" title="git checkout"></a>git checkout</h3><p>如果文件还在<strong>工作区</strong>，还没添加到暂存区，可以使用git checkout撤销</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git checkout [file]  丢弃某个文件file</span><br><span class="line">git checkout .  丢弃所有文件</span><br></pre></td></tr></table></figure><p>以下demo，使用git checkout – test.txt 撤销了暂存区test.txt的修改<br><img src="https://user-gold-cdn.xitu.io/2020/6/26/172edffb19594acd?w=748&h=600&f=png&s=56693"></p><h3 id="git-reset"><a href="#git-reset" class="headerlink" title="git reset"></a>git reset</h3><h4 id="git-reset的理解"><a href="#git-reset的理解" class="headerlink" title="git reset的理解"></a>git reset的理解</h4><blockquote><p>git reset的作用是修改HEAD的位置，即将HEAD指向的位置改变为之前存在的某个版本.</p></blockquote><p>为了更好地理解git reset，我们来回顾一下,Git的版本管理及HEAD的理解</p><blockquote><p>Git的所有提交，会连成一条时间轴线，这就是分支。如果当前分支是master，HEAD指针一般指向当前分支，如下：</p></blockquote><p><img src="https://user-gold-cdn.xitu.io/2020/6/26/172eea4e91126bf2?w=1264&h=580&f=png&s=43485"></p><p>假设执行git reset，回退到版本二之后，版本三不见了哦,如下：</p><p><img src="https://user-gold-cdn.xitu.io/2020/6/26/172eeac7913d8e0e?w=798&h=441&f=png&s=26783"></p><h4 id="git-reset的使用"><a href="#git-reset的使用" class="headerlink" title="git reset的使用"></a>git reset的使用</h4><p>Git Reset的几种使用模式<br><img src="https://user-gold-cdn.xitu.io/2020/6/26/172ee65cd631720e?w=1185&h=536&f=png&s=53298"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git reset HEAD --file</span><br><span class="line">回退暂存区里的某个文件，回退到当前版本工作区状态</span><br><span class="line">git reset –-soft 目标版本号 可以把版本库上的提交回退到暂存区，修改记录保留</span><br><span class="line">git reset –-mixed 目标版本号 可以把版本库上的提交回退到工作区，修改记录保留</span><br><span class="line">git reset –-hard  可以把版本库上的提交彻底回退，修改的记录全部revert。</span><br></pre></td></tr></table></figure><p>先看一个粟子demo吧，代码<strong>git add到暂存区，并未commit提交</strong>,就以下酱紫回退，如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git reset HEAD file 取消暂存</span><br><span class="line">git checkout file 撤销修改</span><br></pre></td></tr></table></figure><p><img src="https://user-gold-cdn.xitu.io/2020/6/26/172ee361984a63b7?w=782&h=376&f=png&s=38651"></p><p>再看另外一个粟子吧，代码已经git commit了，但是还没有push：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git log  获取到想要回退的commit_id</span><br><span class="line">git reset --hard commit_id  想回到过去，回到过去的commit_id</span><br></pre></td></tr></table></figure><p><img src="https://user-gold-cdn.xitu.io/2020/6/27/172f354c0a89d53b?w=808&h=830&f=png&s=107514"></p><p>如果代码已经push到远程仓库了呢，也可以使用reset回滚哦(这里大家可以自己操作实践一下哦)~</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git log</span><br><span class="line">git reset --hard commit_id</span><br><span class="line">git push origin HEAD --force</span><br></pre></td></tr></table></figure><h3 id="git-revert"><a href="#git-revert" class="headerlink" title="git revert"></a>git revert</h3><blockquote><p>与git reset不同的是，revert复制了那个想要回退到的历史版本，将它加在当前分支的最前端。</p></blockquote><p><strong>revert之前：</strong><br><img src="https://user-gold-cdn.xitu.io/2020/6/27/172f3d1e923ec80f?w=1264&h=580&f=png&s=43485"><br><strong>revert 之后：</strong><br><img src="https://user-gold-cdn.xitu.io/2020/6/26/172eeaf41ad2494a?w=1557&h=547&f=png&s=49240"></p><p>当然，如果代码已经推送到远程的话，还可以考虑revert回滚呢</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git log  得到你需要回退一次提交的commit id</span><br><span class="line">git revert -n &lt;commit_id&gt;  撤销指定的版本，撤销也会作为一次提交进行保存</span><br></pre></td></tr></table></figure><p><img src="https://user-gold-cdn.xitu.io/2020/6/27/172f3d0024e37637?w=1099&h=850&f=png&s=157867"></p><h2 id="Git进阶之标签tag"><a href="#Git进阶之标签tag" class="headerlink" title="Git进阶之标签tag"></a>Git进阶之标签tag</h2><p>打tag就是对发布的版本标注一个版本号，如果版本发布有问题，就把该版本拉取出来，修复bug，再合回去。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git tag  列出所有tag</span><br><span class="line">git tag [tag] 新建一个tag在当前commit</span><br><span class="line">git tag [tag] [commit] 新建一个tag在指定commit</span><br><span class="line">git tag -d [tag] 删除本地tag</span><br><span class="line">git push origin [tag] 推送tag到远程</span><br><span class="line">git show [tag] 查看tag</span><br><span class="line">git checkout -b [branch] [tag] 新建一个分支，指向某个tag</span><br></pre></td></tr></table></figure><p><img src="https://user-gold-cdn.xitu.io/2020/6/27/172f41c4b0de5804?w=896&h=593&f=png&s=63528"></p><h2 id="Git其他一些经典命令"><a href="#Git其他一些经典命令" class="headerlink" title="Git其他一些经典命令"></a>Git其他一些经典命令</h2><h3 id="git-rebase"><a href="#git-rebase" class="headerlink" title="git rebase"></a>git rebase</h3><p>rebase又称为衍合，是合并的另外一种选择。</p><p>假设有两个分支master和test</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">     D---E test</span><br><span class="line">     /</span><br><span class="line">A---B---C---F--- master</span><br></pre></td></tr></table></figure><p>执行 git merge test得到的结果</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">      D--------E</span><br><span class="line">     /          \</span><br><span class="line">A---B---C---F----G---   test, master</span><br></pre></td></tr></table></figure><p>执行git rebase test，得到的结果</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A---B---D---E---C‘---F‘---   test, master</span><br></pre></td></tr></table></figure><p><strong>rebase好处是：</strong> 获得更优雅的提交树，可以线性的看到每一次提交，并且没有增加提交节点。所以很多时候，看到有些伙伴都是这个命令拉代码：git pull –rebase</p><h3 id="git-stash"><a href="#git-stash" class="headerlink" title="git stash"></a>git stash</h3><p>stash命令可用于临时保存和恢复修改</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git stash  把当前的工作隐藏起来 等以后恢复现场后继续工作</span><br><span class="line">git stash list 显示保存的工作进度列表</span><br><span class="line">git stash pop stash@&#123;num&#125; 恢复工作进度到工作区</span><br><span class="line">git stash show ：显示做了哪些改动</span><br><span class="line">git stash drop stash@&#123;num&#125; ：删除一条保存的工作进度</span><br><span class="line">git stash clear 删除所有缓存的stash。</span><br></pre></td></tr></table></figure><p><img src="https://user-gold-cdn.xitu.io/2020/6/27/172f438c7afbdb8e?w=658&h=616&f=png&s=70671"></p><h3 id="git-reflog"><a href="#git-reflog" class="headerlink" title="git reflog"></a>git reflog</h3><p>显示当前分支的最近几次提交</p><p><img src="https://user-gold-cdn.xitu.io/2020/6/27/172f4282186ed3fd?w=827&h=556&f=png&s=124384"></p><h3 id="git-blame-filepath"><a href="#git-blame-filepath" class="headerlink" title="git blame filepath"></a>git blame filepath</h3><p>git blame 记录了某个文件的更改历史和更改人，可以查看背锅人，哈哈<br><img src="https://user-gold-cdn.xitu.io/2020/6/27/172f429391270576?w=825&h=184&f=png&s=38888"></p><h3 id="git-remote"><a href="#git-remote" class="headerlink" title="git remote"></a>git remote</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git remote   查看关联的远程仓库的名称</span><br><span class="line">git remote add url   添加一个远程仓库</span><br><span class="line">git remote show [remote] 显示某个远程仓库的信息</span><br></pre></td></tr></table></figure><h2 id="参考与感谢"><a href="#参考与感谢" class="headerlink" title="参考与感谢"></a>参考与感谢</h2><p>感谢各位前辈的文章：</p><ul><li><a href="https://www.cnblogs.com/best/p/7474442.html#_label3_4_0_4">一个小时学会Git</a></li><li><a href="https://www.cnblogs.com/qdhxhz/p/9757390.html">【Git】(1)—工作区、暂存区、版本库、远程仓库</a></li><li><a href="https://www.jianshu.com/p/c2ec5f06cf1a">Git Reset 三种模式</a></li><li><a href="https://blog.csdn.net/yxlshk/article/details/79944535">Git恢复之前版本的两种方法reset、revert（图文详解）</a></li><li><a href="https://blog.csdn.net/asoar/article/details/84111841">Git撤销&amp;回滚操作(git reset 和 get revert)</a></li><li><a href="https://www.jianshu.com/p/dc367c8dca8e">为什么要使用git pull –rebase？</a></li></ul><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><img src="https://user-gold-cdn.xitu.io/2020/5/16/1721b50d00331393?w=900&h=500&f=png&s=389569"></p><ul><li>欢迎关注我个人公众号，交个朋友，一起学习哈~</li><li>如果文章有错误，欢迎指出哈，感激不尽~</li></ul>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【第一天】JavaScript学习笔记</title>
      <link href="/archives/javascript01/"/>
      <url>/archives/javascript01/</url>
      
        <content type="html"><![CDATA[<h1 id="第一天"><a href="#第一天" class="headerlink" title="第一天"></a>第一天</h1><p>1、JavaScript严格区分大小写！！！</p><p>2、JavaScript不区分整数和浮点数，统一用Number表示</p><p>3、要特别注意相等运算符<code>==</code>。JavaScript在设计时，有两种比较运算符：</p><blockquote><p>第一种是&#x3D;&#x3D;比较，它会自动转换数据类型再比较，很多时候，会得到非常诡异的结果；</p><p>第二种是&#x3D;&#x3D;&#x3D;比较，它不会自动转换数据类型，如果数据类型不一致，返回false，如果一致，再比较。</p><p>由于JavaScript这个设计缺陷，不要使用&#x3D;&#x3D;比较，始终坚持使用&#x3D;&#x3D;&#x3D;比较。</p></blockquote><p>4、浮点数的相等比较  <code>Math.abs(1 / 3 - (1 - 2 / 3)) &lt; 0.0000001; // true</code></p><p>5、<code>NaN</code>这个特殊的Number与所有其他值都不相等，包括它自己</p><p>6、<code>null</code>表示一个“空”的值，它和<code>0</code>以及空字符串<code>&#39;&#39;</code>不同，<code>0</code>是一个数值，<code>&#39;&#39;</code>表示长度为0的字符串，而<code>null</code>表示“空”。</p><p>7、创建数组，强烈建议直接使用<code>[]</code></p><p>8、Java是静态语言，JavaScript是动态语言，动态语言更灵活   </p><p>Java </p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> x=<span class="number">1</span>;</span><br><span class="line">x=<span class="string">&quot;hello&quot;</span>; <span class="comment">//报错</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> x=<span class="number">1</span>;</span><br><span class="line">x=<span class="string">&quot;hello&quot;</span></span><br></pre></td></tr></table></figure><p>9、打印输出的值有两种形式<br><code>console.log()</code>和<code>alert()</code>,后者会有弹框</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">100</span>;</span><br><span class="line"><span class="comment">//console.log(x);</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">alert</span>(x)</span><br></pre></td></tr></table></figure><p>10、多行字符串的表示方法</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="string">`这是一个</span></span><br><span class="line"><span class="string">多行</span></span><br><span class="line"><span class="string">字符串`</span>;</span><br></pre></td></tr></table></figure><p>11、模板字符串</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">&#x27;小明&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> age = <span class="number">20</span>;</span><br><span class="line"><span class="keyword">var</span> message = <span class="string">`你好, <span class="subst">$&#123;name&#125;</span>, 你今年<span class="subst">$&#123;age&#125;</span>岁了!`</span>;</span><br><span class="line"><span class="title function_">alert</span>(message);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>天翼云盘每日自动签到、抽奖，白嫖空间！</title>
      <link href="/archives/189checkin/"/>
      <url>/archives/189checkin/</url>
      
        <content type="html"><![CDATA[<h1 id="Cloud189Checkin"><a href="#Cloud189Checkin" class="headerlink" title="Cloud189Checkin"></a>Cloud189Checkin</h1><p>天翼云盘每日签到一次，抽奖2次  </p><h1 id="Github-Actions说明"><a href="#Github-Actions说明" class="headerlink" title="Github Actions说明"></a>Github Actions说明</h1><h2 id="一、Fork此仓库"><a href="#一、Fork此仓库" class="headerlink" title="一、Fork此仓库"></a>一、Fork此仓库</h2><p><a href="https://github.com/peng4740/Cloud189Checkin-Actions">仓库地址</a></p><p><img src="http://tu.yaohuo.me/imgs/2020/06/f059fe73afb4ef5f.png"></p><h2 id="二、设置账号密码"><a href="#二、设置账号密码" class="headerlink" title="二、设置账号密码"></a>二、设置账号密码</h2><p>添加名为<strong>USER</strong>、<strong>PWD</strong>的变量<br>值分别为<strong>账号</strong>、<strong>密码</strong><br>多账号时账号密码一行一个一一对应</p><h3 id="示例："><a href="#示例：" class="headerlink" title="示例："></a>示例：</h3><p><strong>USER</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">123456</span><br><span class="line">24678</span><br></pre></td></tr></table></figure><p><strong>PWD</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cxkjntm</span><br><span class="line">jntmcxk</span><br></pre></td></tr></table></figure><p><img src="http://tu.yaohuo.me/imgs/2020/06/748bf9c0ca6143cd.png"><br><img src="http://tu.yaohuo.me/imgs/2020/06/af2013b1ef5d8430.png"><br><img src="http://tu.yaohuo.me/imgs/2020/06/09c22adcec7b5d81.png"></p><h2 id="三、启用Action"><a href="#三、启用Action" class="headerlink" title="三、启用Action"></a>三、启用Action</h2><p>1 点击<strong>Action</strong>，再点击<strong>I understand my workflows, go ahead and enable them</strong><br>2 修改任意文件后提交一次<br><img src="http://tu.yaohuo.me/imgs/2020/06/34ca160c972b9927.png"></p><h2 id="四、查看运行结果"><a href="#四、查看运行结果" class="headerlink" title="四、查看运行结果"></a>四、查看运行结果</h2><p>Actions &gt; Cloud189Checkin &gt; build<br>能看到如下图所示，表示成功<br><img src="http://tu.yaohuo.me/imgs/2020/06/b9e596c99f3835e0.png"></p><p>此后，将会在每天10:00-10:45之间和22:00-22:45之间各签到一次<br>若有需求，可以在[.github&#x2F;workflows&#x2F;run.yml]中自行修改</p><h2 id="可能遇到的问题"><a href="#可能遇到的问题" class="headerlink" title="可能遇到的问题"></a>可能遇到的问题</h2><ul><li><ol><li>验证码错误<br>首先考虑是不是密码错误<br>其次查看是否已经关闭设备锁</li></ol></li><li><ol start="2"><li>暂无</li></ol></li></ul><p>Fork自peng4740的仓库！</p>]]></content>
      
      
      
        <tags>
            
            <tag> 网盘 </tag>
            
            <tag> 天翼云 </tag>
            
            <tag> 自动签到 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>好用的网站推荐</title>
      <link href="/archives/productivity/"/>
      <url>/archives/productivity/</url>
      
        <content type="html"><![CDATA[<p>这篇文章会定期介绍一些我平时在工作生活中用过的好用的<strong>免费的</strong>网站、软件，用于提高生产力。</p><h2 id="图片相关"><a href="#图片相关" class="headerlink" title="图片相关"></a>图片相关</h2><h3 id="无版权图片网站系列"><a href="#无版权图片网站系列" class="headerlink" title="无版权图片网站系列"></a>无版权图片网站系列</h3><h4 id="一般都是国外的"><a href="#一般都是国外的" class="headerlink" title="一般都是国外的"></a>一般都是国外的</h4><p>1、<a href="https://unsplash.com/">https://unsplash.com/</a><br>2、<a href="https://pixabay.com/">https://pixabay.com/</a><br>3、<a href="https://www.pexels.com/">https://www.pexels.com</a><br>4、<a href="https://www.photock.jp/">https://www.photock.jp</a><br>5、<a href="https://www.pakutaso.com/">https://www.pakutaso.com</a><br>6、<a href="https://foodshot.co/">https://foodshot.co</a><br>7、<a href="https://sozaing.com/">https://sozaing.com</a><br>8、<a href="https://www.polayoutu.com/collections">https://www.polayoutu.com/collections</a><br>9、<a href="https://isorepublic.com/">https://isorepublic.com</a><br>10、<a href="https://stokpic.com/">https://stokpic.com</a><br>11、<a href="https://kaboompics.com/">https://kaboompics.com</a><br>12、<a href="https://fancycrave.com/">https://fancycrave.com</a><br>13、<a href="https://realisticshots.com/">https://realisticshots.com</a><br>14、<a href="https://stocksnap.io/">https://stocksnap.io</a><br>15、<a href="https://www.sozai-page.com/">https://www.sozai-page.com</a><br>16、<a href="https://negativespace.co/">https://negativespace.co</a><br>17、<a href="https://www.stockio.com/">https://www.stockio.com</a><br>18、<a href="https://www.lifeofpix.com/">https://www.lifeofpix.com</a><br>19、<a href="https://libreshot.com/">https://libreshot.com</a><br>20、<a href="https://www.gratisography.com/">https://www.gratisography.com</a><br>21、<a href="https://skitterphoto.com/">https://skitterphoto.com</a><br>22、<a href="https://picjumbo.com/">https://picjumbo.com</a></p><h3 id="制作透明底的图片、一键抠图"><a href="#制作透明底的图片、一键抠图" class="headerlink" title="制作透明底的图片、一键抠图"></a>制作透明底的图片、一键抠图</h3><h4 id="1、去除背景色"><a href="#1、去除背景色" class="headerlink" title="1、去除背景色"></a>1、去除背景色</h4><p>网址：<a href="https://www.remove.bg/zh">https://www.remove.bg/zh</a></p><h3 id="桌面、墙纸系列"><a href="#桌面、墙纸系列" class="headerlink" title="桌面、墙纸系列"></a>桌面、墙纸系列</h3><h4 id="1、壁纸天堂"><a href="#1、壁纸天堂" class="headerlink" title="1、壁纸天堂"></a>1、壁纸天堂</h4><p>网址：<a href="http://wallhaven.cc/">http://wallhaven.cc/</a></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic/2020-12-10/1607595476024-image.png"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic/2020-12-10/1607595862011-image.png"></p><h2 id="视频相关"><a href="#视频相关" class="headerlink" title="视频相关"></a>视频相关</h2><h3 id="上字幕"><a href="#上字幕" class="headerlink" title="上字幕"></a>上字幕</h3><h4 id="1、网易见外"><a href="#1、网易见外" class="headerlink" title="1、网易见外"></a>1、网易见外</h4><p>网址：<a href="https://jianwai.youdao.com/">https://jianwai.youdao.com/</a></p><p>小技巧：一般用视频转字幕会比较慢，可以先把视频里的音频提取出来（Arctime），再导入到网易见外转换，速度会快很多。</p><h4 id="2、Arctime"><a href="#2、Arctime" class="headerlink" title="2、Arctime"></a>2、Arctime</h4><p>网址：<a href="https://arctime.org/">https://arctime.org/</a></p><h3 id="文字转语音"><a href="#文字转语音" class="headerlink" title="文字转语音"></a>文字转语音</h3><h4 id="1、淘金阁"><a href="#1、淘金阁" class="headerlink" title="1、淘金阁"></a>1、淘金阁</h4><p><a href="http://www.gnet.com.cn/include/voice/voice.php">http://www.gnet.com.cn/include/voice/voice.php</a></p><h3 id="公众号视频提取"><a href="#公众号视频提取" class="headerlink" title="公众号视频提取"></a>公众号视频提取</h3><h4 id="1、蚂蚁编辑器"><a href="#1、蚂蚁编辑器" class="headerlink" title="1、蚂蚁编辑器"></a>1、蚂蚁编辑器</h4><p>网址：<a href="https://www.xmyeditor.com/tools/video.html">https://www.xmyeditor.com/tools/video.html</a></p><h2 id="文字编辑相关"><a href="#文字编辑相关" class="headerlink" title="文字编辑相关"></a>文字编辑相关</h2><h3 id="Markdown与排版系列"><a href="#Markdown与排版系列" class="headerlink" title="Markdown与排版系列"></a>Markdown与排版系列</h3><h4 id="1、mdnice"><a href="#1、mdnice" class="headerlink" title="1、mdnice"></a>1、mdnice</h4><p>网址：<a href="https://mdnice.com/">https://mdnice.com/</a></p><p>绝佳的markdown编辑工具，适合微信公众号、知乎、掘金等排版，图片可以直接复制粘贴，方便快捷，搭配大鹏新配置的github和gitee图床功能，起飞！~</p><p>注意点：如果你是使用的默认的图床，图片只能保存一天，比较适合临时排版，然后转存的环境（比如说公众号或者CSDN，你上传后，它们会自动把图片存在自己的服务器里），如果是没有转存功能的，比如说自己的博客，请不要用默认的图床！！！自己申请一个gitee的账号，然后按照教程配置一下（注意上传图片1M以内），github配置的图床图片大小没有限制。</p><h2 id="资源搜索"><a href="#资源搜索" class="headerlink" title="资源搜索"></a>资源搜索</h2><h3 id="1、云盘精灵"><a href="#1、云盘精灵" class="headerlink" title="1、云盘精灵"></a>1、云盘精灵</h3><p><a href="https://www.yunpanjingling.com/">https://www.yunpanjingling.com/</a></p><h3 id="2、soso云盘"><a href="#2、soso云盘" class="headerlink" title="2、soso云盘"></a>2、soso云盘</h3><p><a href="https://www.sosoyunpan.com/">https://www.sosoyunpan.com/</a></p><h3 id="3、KOLSOU"><a href="#3、KOLSOU" class="headerlink" title="3、KOLSOU"></a>3、KOLSOU</h3><p><a href="https://www.kolsou.com/">https://www.kolsou.com/</a></p><h3 id="4、fastsoso"><a href="#4、fastsoso" class="headerlink" title="4、fastsoso"></a>4、fastsoso</h3><p><a href="https://www.fastsoso.cn/">https://www.fastsoso.cn/</a></p><h3 id="5、56网盘搜索"><a href="#5、56网盘搜索" class="headerlink" title="5、56网盘搜索"></a>5、56网盘搜索</h3><p><a href="https://www.56wangpan.com/">https://www.56wangpan.com/</a></p><h3 id="6、史莱姆搜索"><a href="#6、史莱姆搜索" class="headerlink" title="6、史莱姆搜索"></a>6、史莱姆搜索</h3><p><a href="http://www.slimego.cn/">http://www.slimego.cn/</a></p><h3 id="7、小可搜搜"><a href="#7、小可搜搜" class="headerlink" title="7、小可搜搜"></a>7、小可搜搜</h3><p><a href="https://www.xiaokesoso.com/">https://www.xiaokesoso.com/</a></p><h3 id="8、大圣盘"><a href="#8、大圣盘" class="headerlink" title="8、大圣盘"></a>8、大圣盘</h3><p><a href="https://www.dashengpan.com/">https://www.dashengpan.com/</a></p><h3 id="9、大力盘"><a href="#9、大力盘" class="headerlink" title="9、大力盘"></a>9、大力盘</h3><p><a href="https://www.dalipan.com/">https://www.dalipan.com/</a></p><h2 id="小工具"><a href="#小工具" class="headerlink" title="小工具"></a>小工具</h2><h3 id="好色之徒"><a href="#好色之徒" class="headerlink" title="好色之徒"></a>好色之徒</h3><h4 id="1、LOLCOLORS"><a href="#1、LOLCOLORS" class="headerlink" title="1、LOLCOLORS"></a>1、LOLCOLORS</h4><p>网址：<a href="https://www.webdesignrankings.com/resources/lolcolors">https://www.webdesignrankings.com/resources/lolcolors</a></p><h4 id="2、配色网址Color-Hunt"><a href="#2、配色网址Color-Hunt" class="headerlink" title="2、配色网址Color Hunt"></a>2、配色网址Color Hunt</h4><p>网址：<a href="http://colorhunt.co/">http://colorhunt.co/</a></p><h4 id="3、RGB和HEX转换"><a href="#3、RGB和HEX转换" class="headerlink" title="3、RGB和HEX转换"></a>3、RGB和HEX转换</h4><p>网址：<a href="http://www.bejson.com/convert/rgbhex/">http://www.bejson.com/convert/rgbhex/</a></p><h2 id="PS"><a href="#PS" class="headerlink" title="PS"></a>PS</h2><p>大家有好用的工具也欢迎在下面留言！</p><p>工具让生活更美好！</p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生产力工具 </tag>
            
            <tag> 网站推荐 </tag>
            
            <tag> 软件推荐 </tag>
            
            <tag> 好用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Life goes on</title>
      <link href="/archives/life-goes-on/"/>
      <url>/archives/life-goes-on/</url>
      
        <content type="html"><![CDATA[<p>需要做的事情</p><ul><li><p><input disabled="" type="checkbox"> 英语流利</p></li><li><p><input disabled="" type="checkbox"> 西语流利</p></li><li><p><input disabled="" type="checkbox"> 吉他</p></li><li><p><input disabled="" type="checkbox"> 代码</p></li><li><p><input disabled="" type="checkbox"> 写作</p></li><li><p><input disabled="" type="checkbox"> 沟通、新闻、实事</p></li><li><p><input disabled="" type="checkbox"> 营销</p></li><li><p><input disabled="" type="checkbox"> 健身</p></li><li><p><input disabled="" type="checkbox"> 精神、清爽</p></li></ul><p>评论js：</p><p><a href="https://cdn.jsdelivr.net/gh/LIlGG/halo-comment-sakura@v1.3.1/dist/halo-comment.min.js">https://cdn.jsdelivr.net/gh/LIlGG/halo-comment-sakura@v1.3.1/dist/halo-comment.min.js</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>宝塔面板绕过强制绑定官网账号的小方法【最新版本已经不适用】</title>
      <link href="/archives/bt-sign-in/"/>
      <url>/archives/bt-sign-in/</url>
      
        <content type="html"><![CDATA[<p>【最新版本已经不适用】</p><p>建议使用宝塔海外版本aapanel：<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial</a></p><h2 id="【2021-08-14更新】-最新方法"><a href="#【2021-08-14更新】-最新方法" class="headerlink" title="【2021-08-14更新】   最新方法"></a>【2021-08-14更新】   最新方法</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">&quot;s|if (bind_user == &#x27;True&#x27;) &#123;|if (bind_user == &#x27;REMOVED&#x27;) &#123;|g&quot;</span> /www/server/panel/BTPanel/static/js/index.js</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /www/server/panel/data/bind.pl</span><br></pre></td></tr></table></figure><p>昨日发现新的7.4.5版本的宝塔面板登录时被要求绑定宝塔官网账号，否则就无法继续使用面板。宝塔官方团队论坛回应称此举是为了“使用面板时方便很多，有什么安全提醒也可以第一时间发短信”。</p><p>但是宝塔面板的回应显得有些遮遮掩掩，不过这里面的具体原因就不去深究了，懂得都懂。</p><p>对于很多人不喜欢绑定官网账号，那么也是有解决办法的，毕竟宝塔是开源的面板，这里简单分享一个简单的方法。</p><p>登陆之后，出现要你绑定的页面：</p><p><img src="https://www.daniao.org/wp-content/uploads/2020/09/bt-bing-1.jpg"></p><p>发现关闭不了。</p><p><img src="https://www.daniao.org/wp-content/uploads/2020/09/bt-bind-1.png"></p><p>不过我们可以用一个小技巧。</p><p>链接后面加上<code>/site</code>、<code>/soft</code>、<code>/files</code>这样即可轻松越过强制绑定。</p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2020-10-4/1601813253945-image.png"></p><p>试一试吧～</p><h2 id="【0317更新】-另一种新的方法"><a href="#【0317更新】-另一种新的方法" class="headerlink" title="【0317更新】   另一种新的方法"></a>【0317更新】   另一种新的方法</h2><p>运行以下代码可以解除宝塔面板的强制绑定手机</p><p>（运行完毕以后，请清除浏览器缓存并刷新宝塔面板！）</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">&quot;s|bind_user == &#x27;True&#x27;|bind_user == &#x27;XXXX&#x27;|&quot;</span> /www/server/panel/BTPanel/static/js/index.js</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 宝塔面板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 宝塔面板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【服务器能干什么】二十分钟搭建一个属于自己的RSS服务</title>
      <link href="/archives/tinytinyrss/"/>
      <url>/archives/tinytinyrss/</url>
      
        <content type="html"><![CDATA[<h3 id="【0329更新】"><a href="#【0329更新】" class="headerlink" title="【0329更新】"></a>【0329更新】</h3><p>如果大家不想自己捣鼓，只是想尝尝鲜，可以在下面留言，我后台帮大家开几个账号玩一玩。</p><p>哔哩哔哩【高清版本可以点击去吐槽到B站观看】：<a href="https://www.bilibili.com/BV1VK4y1m7CH">https://www.bilibili.com/BV1VK4y1m7CH</a></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h3 id="RSS-服务"><a href="#RSS-服务" class="headerlink" title="RSS 服务"></a>RSS 服务</h3><p>市面上有非常多的 RSS 聚合服务，来帮助我们统一管理、订阅、更新、筛选 RSS 源推送给我们的更新信息，避免我们被海量的文章淹没，也能保证我们多个设备上 RSS 的阅读进度一致。</p><p>Feedly、Inoreader 等等都是非常不错的 RSS 服务，但是它们的免费版本都有着一定的限制，有时候无法满足我们的全部功能需求，而动辄一个月数十刀的订阅费用又让人望而却步。</p><p>不过，GitHub上有一个开源的 RSS 服务：Tiny Tiny RSS</p><p>可以满足我们 RSS 订阅的全部需求！</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li>一台VPS服务器（以 CentOS 7 为例）</li><li>安装好宝塔面板配置好LNMP <a href="https://laoda.de/archives/666clouds#toc-head-4">宝塔安装教程点我</a></li></ul><h2 id="1、安装docker"><a href="#1、安装docker" class="headerlink" title="1、安装docker"></a>1、安装docker</h2><p>Docker 是非常优秀的虚拟化容器，借助于 Docker 我们可以方便的部署 Tiny Tiny RSS，首先我们在服务器上安装 Docker 本体。在服务器上面执行下面命令来安装 Docker：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com/ | sh</span><br></pre></td></tr></table></figure><p>然后启动 Docker 服务：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure><p>然后，我们检查一下 Docker 是否启动成功。我们执行命令 <code>sudo systemctl status docker</code>:</p><p><img src="https://img.laoda.de/i/2023/03/30/111vh72-0.webp" alt="启动成功"></p><p>设置docker自动启动：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure><h2 id="2、安装docker-compose"><a href="#2、安装docker-compose" class="headerlink" title="2、安装docker-compose"></a>2、安装docker-compose</h2><p>接下来我们安装 docker-compose：一个管理和启动多个 Docker 容器的工具。</p><p>由于 Tiny Tiny RSS 依赖有 PostgreSQL 的数据库服务以及 mercury_fulltext 的全文抓取服务等等，这些服务我们都借助于 Docker 部署，因此利用 docker-compose 就会大大降低我们的部署难度。</p><p>我们继续，在服务器上面执行下面的命令来安装 docker-compose：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/1.28.6/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><p>之后给予安装好的 <code>docker-compose</code> 可执行权限：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><p>创建链接:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">ln</span> -s /usr/local/bin/docker-compose /usr/bin/docker-compose</span><br></pre></td></tr></table></figure><p>最后我们运行 <code>docker-compose --version</code> 来检查安装是否成功。如果有如下输出，说明我们的 <code>docker-compose</code> 安装成功：</p><p><img src="https://img.laoda.de/i/2023/03/30/111ypoc-0.webp" alt="安装成功"></p><h2 id="3、安装Tiny-Tiny-RSS"><a href="#3、安装Tiny-Tiny-RSS" class="headerlink" title="3、安装Tiny Tiny RSS"></a>3、安装Tiny Tiny RSS</h2><p>准备工作已经全部完成，接下来我们下载由 <a href="https://ttrss.henry.wang/zh/#%E5%85%B3%E4%BA%8E">Awesome-TTRSS</a> 配置的 Tiny Tiny RSS 服务的 <code>docker-compose</code> 配置文件：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建 ttrss 目录并进入</span></span><br><span class="line"><span class="built_in">mkdir</span> ttrss &amp;&amp; <span class="built_in">cd</span> ttrss</span><br><span class="line"></span><br><span class="line"><span class="comment"># 利用 curl 下载 ttrss 的 docker-compose 配置文件至服务器</span></span><br><span class="line">curl -fLo docker-compose.yml https://github.com/HenryQW/Awesome-TTRSS/raw/master/docker-compose.yml</span><br></pre></td></tr></table></figure><p><strong>注意</strong>利用 curl 下载 ttrss 的 docker-compose 配置文件至服务器可能会报错，大家可以直接在宝塔面板找到对应的文件夹下，然后新建<code>docker-compose.yml</code>文件，复制下面的内容进去：</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">service.rss:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">wangqiru/ttrss:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">ttrss</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">181</span><span class="string">:80</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SELF_URL_PATH=http://localhost:181/</span> <span class="comment"># please change to your own domain</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DB_PASS=ttrss</span> <span class="comment"># use the same password defined in `database.postgres`</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PUID=1000</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PGID=1000</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">feed-icons:/var/www/feed-icons/</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">public_access</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">service_only</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">database_only</span></span><br><span class="line">    <span class="attr">stdin_open:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">tty:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">service.mercury:</span> <span class="comment"># set Mercury Parser API endpoint to `service.mercury:3000` on TTRSS plugin setting page</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">wangqiru/mercury-parser-api:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">mercury</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">public_access</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">service_only</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">service.opencc:</span> <span class="comment"># set OpenCC API endpoint to `service.opencc:3000` on TTRSS plugin setting page</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">wangqiru/opencc-api-server:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">opencc</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">NODE_ENV=production</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">service_only</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">database.postgres:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">postgres:13-alpine</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">postgres</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">POSTGRES_PASSWORD=ttrss</span> <span class="comment"># feel free to change the password</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">~/postgres/data/:/var/lib/postgresql/data</span> <span class="comment"># persist postgres data to ~/postgres/data/ on the host</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">database_only</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># utility.watchtower:</span></span><br><span class="line">  <span class="comment">#   container_name: watchtower</span></span><br><span class="line">  <span class="comment">#   image: containrrr/watchtower:latest</span></span><br><span class="line">  <span class="comment">#   volumes:</span></span><br><span class="line">  <span class="comment">#     - /var/run/docker.sock:/var/run/docker.sock</span></span><br><span class="line">  <span class="comment">#   environment:</span></span><br><span class="line">  <span class="comment">#     - WATCHTOWER_CLEANUP=true</span></span><br><span class="line">  <span class="comment">#     - WATCHTOWER_POLL_INTERVAL=86400</span></span><br><span class="line">  <span class="comment">#   restart: always</span></span><br><span class="line"></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line">  <span class="attr">feed-icons:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">public_access:</span> <span class="comment"># Provide the access for ttrss UI</span></span><br><span class="line">  <span class="attr">service_only:</span> <span class="comment"># Provide the communication network between services only</span></span><br><span class="line">    <span class="attr">internal:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">database_only:</span> <span class="comment"># Provide the communication between ttrss and database only</span></span><br><span class="line">    <span class="attr">internal:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>修改 <code>docker-compose.yml</code>里面的内容：</p><ul><li><p>在配置文件中，将 PostgreSQL 数据库的默认密码进行修改。暴露在公网的数据库使用默认密码非常危险。</p></li><li><p>在配置文件中，将 Tiny Tiny RSS 服务的部署网址修改为我们实际的部署网址。比如我的部署网址是 :<code>https://rss.laoda.de</code></p></li><li><p>注意，如果你的部署 URL 包含端口（默认部署端口为 181 端口），那么这里的 URL 也需要加上端口号，格式为 {网址}:{端口}不过不必担心，如果你这里的 URL 配置不正确，那么访问 Tiny Tiny RSS 的时候，Tiny Tiny RSS 会提醒你修改这里的值为正确的 URL，按照提醒进行配置即可</p></li></ul><p>贴一个我的配置文件给大家参考：</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">service.rss:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">wangqiru/ttrss:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">ttrss</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8002</span><span class="string">:80</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SELF_URL_PATH=https://rss.laoda.de/</span> <span class="comment"># please change to your own domain</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DB_PASS=RSS2020</span> <span class="comment"># use the same password defined in `database.postgres`</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PUID=1000</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PGID=1000</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">feed-icons:/var/www/feed-icons/</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">public_access</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">service_only</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">database_only</span></span><br><span class="line">    <span class="attr">stdin_open:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">tty:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line"> </span><br><span class="line">  <span class="attr">service.mercury:</span> <span class="comment"># set Mercury Parser API endpoint to `service.mercury:3000` on TTRSS plugin setting page</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">wangqiru/mercury-parser-api:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">mercury</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">public_access</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">service_only</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line"> </span><br><span class="line">  <span class="attr">service.opencc:</span> <span class="comment"># set OpenCC API endpoint to `service.opencc:3000` on TTRSS plugin setting page</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">wangqiru/opencc-api-server:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">opencc</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">NODE_ENV=production</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">service_only</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line"> </span><br><span class="line">  <span class="attr">database.postgres:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">postgres:13-alpine</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">postgres</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">POSTGRES_PASSWORD=RSS2020</span> <span class="comment"># feel free to change the password</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">~/postgres/data/:/var/lib/postgresql/data</span> <span class="comment"># persist postgres data to ~/postgres/data/ on the host</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">database_only</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line"> </span><br><span class="line">  <span class="comment"># utility.watchtower</span></span><br><span class="line">  <span class="comment">#   container_name: watchtower</span></span><br><span class="line">  <span class="comment">#   image: containrrr/watchtower:latest</span></span><br><span class="line">  <span class="comment">#   volumes:</span></span><br><span class="line">  <span class="comment">#     - /var/run/docker.sock:/var/run/docker.sock</span></span><br><span class="line">  <span class="comment">#   environment:</span></span><br><span class="line">  <span class="comment">#     - WATCHTOWER_CLEANUP=true</span></span><br><span class="line">  <span class="comment">#     - WATCHTOWER_POLL_INTERVAL=86400</span></span><br><span class="line">  <span class="comment">#   restart: always</span></span><br><span class="line"> </span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line">  <span class="attr">feed-icons:</span></span><br><span class="line"> </span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">public_access:</span> <span class="comment"># Provide the access for ttrss UI</span></span><br><span class="line">  <span class="attr">service_only:</span> <span class="comment"># Provide the communication network between services only</span></span><br><span class="line">    <span class="attr">internal:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">database_only:</span> <span class="comment"># Provide the communication between ttrss and database only</span></span><br><span class="line">    <span class="attr">internal:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>上面是完整的配置结果，我把端口改成了8002，如果是用宝塔面板，记得打开<code>安全</code>里面的<code>端口设置</code>:</p><p><img src="https://img.laoda.de/i/2023/03/30/1128xlr-0.webp" alt="开启对应的端口"></p><p>我这边是腾讯云轻量应用服务器，还需要在在防火墙打开8002端口：</p><p><img src="https://img.laoda.de/i/2023/03/30/112a21b-0.webp" alt="打开相应的端口"></p><p>之后，我们保存配置文件，启动 Tiny Tiny RSS 服务。在刚刚的 ttrss 目录下执行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>等待脚本执行完成，如果一切没有问题，那么接下来输入 <code>docker ps</code>，我们应该看到类似下面的结果：</p><p><img src="https://img.laoda.de/i/2023/03/30/112b9kw-0.webp" alt="最后一个是我的博客 - -！"></p><p>上面内容表示我们开启了四个 Docker 容器，分别是：</p><ul><li>Tiny Tiny RSS 本身，监听端口为 0.0.0.0:8002 → 80，同时暴露给外网</li><li>PostgreSQL 数据库服务</li><li>Mercury 全文抓取服务</li><li>OpenCC 简体、繁体中文转换服务</li></ul><p>如果发现问题，修改 docker-compose 的配置文件后，需要执行下面的命令重启 Docker 容器们：</p><p><strong>注意</strong><code>docker-compose</code>命令要在<code>docker-compose.yml</code>文件下运行!</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 关闭 Docker 容器们</span></span><br><span class="line">docker-compose down</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除已停止的 Docker 容器</span></span><br><span class="line">docker-compose <span class="built_in">rm</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ……</span></span><br><span class="line"><span class="comment"># 修改 docker-compose 配置文件</span></span><br><span class="line"><span class="comment"># ……</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 再次开启 Docker 服务</span></span><br><span class="line">docker-compose up -d</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="4、配置nginx反向代理"><a href="#4、配置nginx反向代理" class="headerlink" title="4、配置nginx反向代理"></a>4、配置nginx反向代理</h2><p>事实上，到上一步，如果我访问 {服务器 IP}:8002，应该可以直接看到 Tiny Tiny RSS 的 Web 前端，但是 Tiny Tiny RSS 并不能直接配置 SSL 证书，也就没法添加 HTTPS 支持。</p><p>我们可以利用 Nginx 作为反向代理服务器，即可方便的给 Tiny Tiny RSS 单独绑定一个我们希望的域名，并利用<a href="https://letsencrypt.org/">Let’s Encrypt</a> 来部署 HTTPS。</p><p>还记得我在之前的<code>docker-compose.yml</code>里面，我填好的地址是<code>https://rss.laoda.de</code></p><p>这里，我在宝塔面板新建一个站点：</p><p><img src="https://img.laoda.de/i/2023/03/30/112dayy-0.webp" alt="不要数据库，不要php，纯静态即可"></p><p>配置好SSL证书：</p><p><img src="https://img.laoda.de/i/2023/03/30/112enm5-0.webp" alt="免费证书Let&#39;s Encrypt，宝塔会自动续期"></p><p>修改后部分的配置文件：</p><p><img src="https://img.laoda.de/i/2023/03/30/112g0kr-0.webp" alt="注意观察"></p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment"># location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$</span></span><br><span class="line">    <span class="comment"># &#123;</span></span><br><span class="line">    <span class="comment">#     expires      30d;</span></span><br><span class="line">    <span class="comment">#     error_log off;</span></span><br><span class="line">    <span class="comment">#     access_log /dev/null;</span></span><br><span class="line">    <span class="comment"># &#125;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># location ~ .*\.(js|css)?$</span></span><br><span class="line">    <span class="comment"># &#123;</span></span><br><span class="line">    <span class="comment">#     expires      12h;</span></span><br><span class="line">    <span class="comment">#     error_log off;</span></span><br><span class="line">    <span class="comment">#     access_log /dev/null; </span></span><br><span class="line">    <span class="comment"># &#125;</span></span><br><span class="line">                <span class="section">location</span> / &#123;</span><br><span class="line">    <span class="attribute">proxy_pass</span> http://127.0.0.1:8002/;</span><br><span class="line">    <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">    <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">  &#125;</span><br><span class="line">    <span class="attribute">access_log</span>  /www/wwwlogs/rss.laoda.de.log;</span><br><span class="line">    <span class="attribute">error_log</span>  /www/wwwlogs/rss.laoda.de.<span class="literal">error</span>.log;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主要是注释了52-64的内容：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$</span></span><br><span class="line"><span class="comment"># &#123;</span></span><br><span class="line"><span class="comment">#     expires      30d;</span></span><br><span class="line"><span class="comment">#     error_log off;</span></span><br><span class="line"><span class="comment">#     access_log /dev/null;</span></span><br><span class="line"><span class="comment"># &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># location ~ .*\.(js|css)?$</span></span><br><span class="line"><span class="comment"># &#123;</span></span><br><span class="line"><span class="comment">#     expires      12h;</span></span><br><span class="line"><span class="comment">#     error_log off;</span></span><br><span class="line"><span class="comment">#     access_log /dev/null; </span></span><br><span class="line"><span class="comment"># &#125;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>添加了65-75行的内容，</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">    proxy_pass http://127.0.0.1:8002/;</span><br><span class="line">    rewrite ^/(.*)$ /<span class="variable">$1</span> <span class="built_in">break</span>;</span><br><span class="line">    proxy_redirect off;</span><br><span class="line">    proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">    proxy_set_header X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">    proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">    proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">    proxy_set_header Upgrade-Insecure-Requests 1;</span><br><span class="line">    proxy_set_header X-Forwarded-Proto https;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>端口改成你自己在<code>docker-compose.yml</code>设置的端口即可。</p><p>注意：这个方法可以解决宝塔面板默认只能配置一个反向代理的情况！！！</p><p><img src="https://img.laoda.de/i/2023/03/30/112hmds-0.webp" alt="不要用宝塔自带的反向代理设置"></p><blockquote><p>用宝塔自带的反向代理设置，会出现只能设置一个网站反向代理的情况，就是说你设置了这个，如果你之后还想用反向代理，再在这边设置，会出错！！！亲测！！！</p></blockquote><h2 id="5、登陆配置全文阅读与繁简体转换"><a href="#5、登陆配置全文阅读与繁简体转换" class="headerlink" title="5、登陆配置全文阅读与繁简体转换"></a>5、登陆配置全文阅读与繁简体转换</h2><p>接下来就能通过域名正常访问了。</p><p><img src="https://img.laoda.de/i/2023/04/20/j3axxo-0.webp" alt="登陆界面"></p><p>默认账户：<code>admin</code></p><p>密码：<code>password</code></p><p>第一次登陆，务必修改一下默认的密码:</p><p><img src="https://img.laoda.de/i/2023/03/30/112kmh6-0.webp" alt="右上角进入偏好设置"></p><p>如果上面步骤没有问题的话，我们在服务器上面所部署的 Tiny Tiny RSS 本身就已经包含了：</p><ul><li>Mercury 全文提取服务（默认未开启）</li><li>OpenCC 繁简自动转换服务（默认未开启）</li><li>Fever 格式输出插件（默认已开启，用来和 Reeder 等客户端进行连接）</li><li>包括 Feedly、RSSHub 在内的多款主题</li><li>等等……</li></ul><p>我们不需要多余的配置，开箱即可使用上面的主题和插件，根本不需要操心其他服务的部署和安装。我们登录自己的 Tiny Tiny RSS，在右上角「设置→ 插件」中即可启用上述插件，在「设置 → 主题」处就可以更改我们部署的 Tiny Tiny RSS 所用的主题。</p><p>如果有同学对上面的配置还有问题，请直接参考 Awesome TTRSS 的官方文档：<a href="https://ttrss.henry.wang/zh/#%E6%8F%92%E4%BB%B6">🐋 Awesome TTRSS | 插件</a></p><h2 id="6、如何在多平台阅读"><a href="#6、如何在多平台阅读" class="headerlink" title="6、如何在多平台阅读"></a>6、如何在多平台阅读</h2><p><img src="https://img.laoda.de/i/2023/03/30/112udz3-0.webp" alt="启用API"></p><p>这个API务必开启，后续我们会在电脑和手机上安装软件来阅读内容，毕竟现在是手机的时代，只在浏览器上看没啥软用。</p><p>然后配置一下密码：</p><p><img src="https://img.laoda.de/i/2023/03/30/112w4o4-0.webp" alt="注意这个地址，后续我们会用到"><br>然后启用一下插件：</p><p><img src="https://img.laoda.de/i/2023/03/30/112xu3m-0.webp" alt="mercury_fulltext全文阅读插件开启"></p><p><img src="https://img.laoda.de/i/2023/03/30/1131248-0.webp" alt="繁简体转换插件开启"></p><p>配置全文阅读插件，输入<code>service.mercury:3000</code>：</p><p><img src="https://img.laoda.de/i/2023/03/30/1132ngp-0.webp" alt="在这里插入图片描述"><br>配置繁简转换插件，同样输入<code>service.mercury:3000</code>：</p><p><img src="https://img.laoda.de/i/2023/03/30/1134a0s-0.webp" alt="在这里插入图片描述"></p><h2 id="7、享受自己的信息流"><a href="#7、享受自己的信息流" class="headerlink" title="7、享受自己的信息流"></a>7、享受自己的信息流</h2><p><img src="https://img.laoda.de/i/2023/03/30/1135ygo-0.webp" alt="添加信息分类"><br>订阅信息源：</p><p><img src="https://img.laoda.de/i/2023/03/30/113glxk-0.webp" alt="订阅信息源"><br>这里推荐一个神级项目：<a href="https://docs.rsshub.app/usage.html#sheng-cheng-ding-yue-yuan">RSSHub</a></p><p>在这里你能找到一切rss源，具体可以自己看一下，这边就不展开了。</p><p><img src="https://img.laoda.de/i/2023/03/30/113ihdb-0.webp" alt="我们不需要自己编写订阅源，这边点进去自己找"></p><p><img src="https://img.laoda.de/i/2023/03/30/113jwvo-0.webp" alt="这个就是RSS的订阅地址"></p><p>一般的话，你在网站的域名最后加上<code>atom.xml</code>,有大概率就是对应的rss地址了，比如我的博客域名是<code>https://blog.laoda.de/</code>,我的rss地址就是<code>https://blog.laoda.de/atom.xml</code></p><p><img src="https://img.laoda.de/i/2023/04/20/j4j2iz-0.webp" alt="就是这样滴，密密麻麻"></p><p>我这边用的是MAC,在appstore上面下载这个：</p><p><img src="https://img.laoda.de/i/2023/03/30/113nd3p-0.webp" alt="reeder"></p><p><img src="https://img.laoda.de/i/2023/03/30/113olab-0.webp" alt="reader"></p><p><img src="https://img.laoda.de/i/2023/03/30/113q5ok-0.webp" alt="这个地方填三个东西"></p><p><code>server</code>的话填前面我们的那个地址,我的是：<code>https://rss.laoda.de/plugins/fever/</code>；</p><p><code>email</code> 这边是个坑，我搞了好久，最后其实是填的用户名，我们默认的填<code>admin</code>就好；</p><p><code>password</code>密码的话就填前面那个API设置过的密码就好。</p><p>然后就能成功登陆了。</p><p><img src="https://img.laoda.de/i/2023/03/30/113rewz-0.webp" alt="在这里插入图片描述"></p><p>IOS上也是这个软件，不过貌似要付钱，我花了好像30块钱买的。</p><p><img src="https://img.laoda.de/i/2023/03/30/1141a8j-0.webp" alt="就是这个"></p><p><img src="https://img.laoda.de/i/2023/03/30/11428rz-0.webp" alt="我的部分订阅内容"></p><p><img src="https://img.laoda.de/i/2023/03/30/1143rym-0.webp" alt="MAC上的效果"></p><p><img src="https://img.laoda.de/i/2023/03/30/11459zf-0.webp" alt="网页端效果"></p><p><img src="https://img.laoda.de/i/2023/03/30/1146val-0.webp" alt="早睡早起，已经快晚上十二点了......"></p><p>订阅自己感兴趣的内容，拒绝被所谓的智能算法强行推荐内容，有了这个RSS服务，我们可以把阅读信息的主动权掌握在自己的手中。</p><h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><p>1.<a href="https://space.bilibili.com/268630727?spm_id_from=333.788.b_765f7570696e666f.2">飞蚊话</a></p><p>捣鼓视频最初就是看的@<a href="https://www.bwsl.wang/">飞蚊话</a>的，当时昵称还是“等我稍后补充昵称”，算是我的小入门老师了，当时还在微博要了一个测试rss账号。</p><p>2.<a href="https://www.runoob.com/rss/rss-tutorial.html">RSS 教程</a><br>3.<a href="https://ttrss.henry.wang/">Awesome TTRSS</a><br>4.<a href="https://www.bilibili.com/video/BV17E411L78o?t=154">高效管理你的碎片化知识——RSS订阅大法</a><br>5.<a href="https://docs.docker.com/compose/install/">Install Docker Compose</a></p>]]></content>
      
      
      <categories>
          
          <category> 宝塔面板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> TinyTinyRSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>宝塔 Linux 面板安装一个高大上的论坛程序—— Flarum</title>
      <link href="/archives/flarum-install/"/>
      <url>/archives/flarum-install/</url>
      
        <content type="html"><![CDATA[<p>注意：</p><p>这个是很早搭建的版本，基于宝塔面板，比较复杂，如果想要简单的搭建方法，可以参看咕咕新写的这篇：</p><p><a href="https://blog.laoda.de/archives/docker-compose-install-flarum">【好玩的Docker项目】10分钟搭建一个高大上的论坛程序</a></p><h2 id="购买腾讯云轻量应用服务器"><a href="#购买腾讯云轻量应用服务器" class="headerlink" title="购买腾讯云轻量应用服务器"></a>购买腾讯云轻量应用服务器</h2><p>待补充</p><h2 id="登录服务器"><a href="#登录服务器" class="headerlink" title="登录服务器"></a>登录服务器</h2><p>待补充</p><h2 id="BBR加速脚本"><a href="#BBR加速脚本" class="headerlink" title="BBR加速脚本"></a>BBR加速脚本</h2><p>BBR加速脚本：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/src &amp;&amp; wget -N --no-check-certificate <span class="string">&quot;https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh&quot;</span> &amp;&amp; <span class="built_in">chmod</span> +x tcp.sh &amp;&amp; ./tcp.sh</span><br></pre></td></tr></table></figure><p>选择<code>2</code>，安装bbr plus 内核：</p><p><img src="https://img.laoda.de/i/2023/04/02/10ni26b-0.webp" alt=" "></p><p>稍微等一会儿，安装和卸载需要一小段时间，出现下面提示后选择重启。</p><p><img src="https://img.laoda.de/i/2023/04/02/10nkhl8-0.webp" alt=" "></p><p>重启后重新登录服务器：</p><p>先输入<code>cd /usr/src</code>进入目录：</p><p><img src="https://img.laoda.de/i/2023/04/02/10nmywn-0.webp" alt=" "></p><p>然后输入<code>./tcp.sh</code></p><p>输入<code>7</code></p><p><img src="https://img.laoda.de/i/2023/04/02/10nolme-0.webp" alt=" "></p><p>BBRplus启动成功！</p><h2 id="安装宝塔mainboard"><a href="#安装宝塔mainboard" class="headerlink" title="安装宝塔mainboard"></a>安装宝塔mainboard</h2><p>进入<a href="https://www.bt.cn/">https://www.bt.cn/</a></p><p><img src="https://img.laoda.de/i/2023/04/02/10nzg56-0.webp" alt=" "></p><p>选择自己系统对应的版本，点击立即安装</p><p><img src="https://img.laoda.de/i/2023/04/02/10o0zag-0.webp" alt=" "></p><p>输入centos的安装代码：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh</span><br></pre></td></tr></table></figure><p><img src="https://img.laoda.de/i/2023/04/02/10o2g5c-0.webp" alt=" "></p><p><img src="https://img.laoda.de/i/2023/04/02/10o3vk7-0.webp" alt=" "></p><p>输入<code>y</code>，确认安装。</p><p>大概等两分钟左右能安装完成。</p><p><img src="https://img.laoda.de/i/2023/04/02/10o6eh7-0.webp" alt=" "></p><p>安装完成后，我们需要到服务器面板后台打开<code>8888</code>端口（也可以修改成其他端口）</p><p>输入<code>bt</code>，再输入<code>8</code></p><p>我这里改成<code>8889</code></p><p><img src="https://img.laoda.de/i/2023/04/02/10o8fw9-0.webp" alt=" "></p><p><img src="https://img.laoda.de/i/2023/04/02/10o9cwk-0.webp" alt=" "></p><p>输入<code>bt default</code>，可以查看宝塔的登录网址和密码（密码忘记了可以用到）</p><p><img src="https://img.laoda.de/i/2023/04/02/10oan2g-0.webp" alt=" "></p><p>返回腾讯云服务器后台</p><p><img src="https://img.laoda.de/i/2023/04/02/10okwig-0.webp" alt=" "></p><p>进入防火墙—添加规则，加入<code>8889</code></p><p><img src="https://img.laoda.de/i/2023/04/02/10t13bn-0.webp" alt=" "></p><p><img src="https://img.laoda.de/i/2023/04/02/10tbr6y-0.webp" alt=" "></p><p>添加成功，输入外网面板地址，就可以访问了。</p><p><img src="https://img.laoda.de/i/2023/04/02/10teuju-0.webp" alt=" "></p><img src="https://img.laoda.de/i/2023/04/02/10tfovg-0.webp" alt=" " style="zoom:33%;" /><p>输入账号密码登录，点击同意协议就Ok了。</p><img src="https://img.laoda.de/i/2023/04/02/10tiy69-0.webp" alt=" " style="zoom:33%;" /><h2 id="安装LNMP环境"><a href="#安装LNMP环境" class="headerlink" title="安装LNMP环境"></a>安装LNMP环境</h2><img src="https://img.laoda.de/i/2023/04/02/10tl9zw-0.webp" alt=" " style="zoom:33%;" /><p>选择LNMP一键安装就行，我这边php改成7.4安装了。</p><img src="https://img.laoda.de/i/2023/04/02/10tnjik-0.webp" alt=" " style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/04/02/10ty7fz-0.webp" alt=" " style="zoom:33%;" /><p>这个界面可以关掉，后台还是会在运行的。</p><p>点击这里能看到运行的情况。</p><img src="https://img.laoda.de/i/2023/04/02/10u2e9q-0.webp" alt=" " style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/04/02/10u6e4c-0.webp" alt=" " style="zoom:33%;" /><p>我这边大概安装了5分钟就ok了。</p><p>这部分适用于所有网站建设前的基本工作！</p><h2 id="安装一个Flarum-bate13-论坛"><a href="#安装一个Flarum-bate13-论坛" class="headerlink" title="安装一个Flarum bate13 论坛"></a>安装一个Flarum bate13 论坛</h2><h3 id="一、安装php扩展、解除禁用函数"><a href="#一、安装php扩展、解除禁用函数" class="headerlink" title="一、安装php扩展、解除禁用函数"></a>一、安装php扩展、解除禁用函数</h3><p>安装一些 PHP 的扩展（exif &#x2F; fileinfo &#x2F; opcache），其中 fileinfo 是必须的，否则 Flarum 会安装失败。</p><blockquote><p>宝塔面板默认禁用一些安装 Composer 要用到的 3 个函数putenv() 、 pcntl_signal() 、 proc_open()，我们需要解除禁用，否则导致Composer 变更源地址时报错、Composer 安装 Flarum 时报错。</p></blockquote><img src="https://img.laoda.de/i/2023/04/02/10uhxuc-0.webp" alt=" " style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/04/02/10uk2vi-0.webp" alt=" " style="zoom:33%;" /><p>进入宝塔面板，打开 PHP 设置，在 <strong>【禁用函数】</strong> 中，删除 <code>putenv</code> 、 <code>pcntl_signal</code> 以及 <code>proc_open</code>。</p><img src="https://img.laoda.de/i/2023/04/02/10um6oj-0.webp" alt=" " style="zoom:33%;" /><h3 id="二、安装-Composer"><a href="#二、安装-Composer" class="headerlink" title="二、安装 Composer"></a>二、安装 Composer</h3><img src="https://img.laoda.de/i/2023/04/02/10uoo8a-0.webp" alt=" " style="zoom: 33%;" /><p>使用 SSH 依次执行以下命令：</p><p><strong>更新服务器软件包（非必需，视情况选择）</strong></p><p>1.<code>yum update -y</code></p><h1 id="CD-服务器根目录，全局安装-composer"><a href="#CD-服务器根目录，全局安装-composer" class="headerlink" title="CD 服务器根目录，全局安装 composer"></a>CD 服务器根目录，全局安装 composer</h1><p>2.<code>cd ~</code></p><h1 id="将安装程序下载到当前目录"><a href="#将安装程序下载到当前目录" class="headerlink" title="将安装程序下载到当前目录"></a>将安装程序下载到当前目录</h1><p>3.<code>php -r &quot;copy(&#39;https://install.phpcomposer.com/installer&#39;, &#39;composer-setup.php&#39;);&quot;</code></p><h1 id="运行安装程序"><a href="#运行安装程序" class="headerlink" title="运行安装程序"></a>运行安装程序</h1><p>4.<code>php composer-setup.php</code></p><img src="https://img.laoda.de/i/2023/04/02/10urzqt-0.webp" alt=" " style="zoom:33%;" /><h1 id="删除安装程序"><a href="#删除安装程序" class="headerlink" title="删除安装程序"></a>删除安装程序</h1><p>5.<code>php -r &quot;unlink(&#39;composer-setup.php&#39;);&quot;</code></p><h1 id="将-composer-phar-移至默认目录"><a href="#将-composer-phar-移至默认目录" class="headerlink" title="将 composer.phar 移至默认目录"></a>将 composer.phar 移至默认目录</h1><p>6.<code>mv composer.phar /usr/local/bin/composer</code></p><img src="https://img.laoda.de/i/2023/04/02/10uujjd-0.webp" alt=" " style="zoom:33%;" /><blockquote><p>由于 Composer 的服务器在国外，可能导致下载 Flarum 已经依赖包会很慢，所以我们需要更换一下源地址。至于 Composer<br>是啥，其实就是 PHP 的一个包管理，类似 Java 的 Maven 和 Gradle 工具。 ——引用自 ryanc.cc</p></blockquote><h1 id="变更全局范围内的-Composer-服务器地址：（如果您禁用了putenv-函数，会导致此命令执行失败）。将-composer-源改成阿里云的镜像"><a href="#变更全局范围内的-Composer-服务器地址：（如果您禁用了putenv-函数，会导致此命令执行失败）。将-composer-源改成阿里云的镜像" class="headerlink" title="变更全局范围内的 Composer 服务器地址：（如果您禁用了putenv() 函数，会导致此命令执行失败）。将 composer 源改成阿里云的镜像"></a>变更全局范围内的 Composer 服务器地址：（如果您禁用了putenv() 函数，会导致此命令执行失败）。将 composer 源改成阿里云的镜像</h1><p>7.<code>composer config -g repo.packagist composer https://mirrors.aliyun.com/composer/</code></p><p><strong>注意：</strong></p><p>有些特殊情况下插件安装失败，可以尝试将composer源改回默认</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">composer config -g --<span class="built_in">unset</span> repos.packagist</span><br></pre></td></tr></table></figure><h3 id="三、安装-Flarum"><a href="#三、安装-Flarum" class="headerlink" title="三、安装 Flarum"></a>三、安装 Flarum</h3><h4 id="3-1-新建存放-Flarum-的网站"><a href="#3-1-新建存放-Flarum-的网站" class="headerlink" title="3.1 新建存放 Flarum 的网站"></a>3.1 新建存放 Flarum 的网站</h4><p>前往宝塔面板 – 【网站】 – 【添加站点】，同时创建用于 Flarum 的数据库。最后提交。</p><blockquote><p>务必注意！数据库字符集一定要是 utf8mb4，至于为什么是<br>utf8mb4，参考：<a href="https://www.jianshu.com/p/6967ce16a202">https://www.jianshu.com/p/6967ce16a202</a></p></blockquote><img src="https://img.laoda.de/i/2023/04/02/10v5tkf-0.webp" alt=" " style="zoom:33%;" /><h4 id="3-2-清空网站目录"><a href="#3-2-清空网站目录" class="headerlink" title="3.2 清空网站目录"></a>3.2 清空网站目录</h4><p>删除网站根目录下的所有文件，网站设置—&gt;网站目录—&gt;去掉勾选防跨站攻击</p><img src="https://img.laoda.de/i/2023/04/02/10v8f1d-0.webp" alt=" " style="zoom:33%;" /><p>删除里面的所有文件，</p><img src="https://img.laoda.de/i/2023/04/02/10vaci4-0.webp" alt=" " style="zoom:33%;" /><img src="https://img.laoda.de/i/2023/04/02/10vb7k5-0.webp" alt=" " style="zoom:33%;" /><p>干净了。</p><img src="https://img.laoda.de/i/2023/04/02/10vdta3-0.webp" alt=" " style="zoom:33%;" /><h4 id="3-3-下载安装-Flarum"><a href="#3-3-下载安装-Flarum" class="headerlink" title="3.3 下载安装 Flarum"></a>3.3 下载安装 Flarum</h4><p>在网站根目录点击终端进入根目录命令行输入代码下载安装flarum</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">composer create-project flarum/flarum . --stability=beta</span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2023/04/02/10vp8xy-0.webp" alt=" " style="zoom:33%;" /><p>执行成功后会下载 Flarum 并更新依赖包。更新依赖包会用花费一小段时间，请耐心等待。</p><img src="https://img.laoda.de/i/2023/04/02/10vs660-0.webp" alt=" " style="zoom:33%;" /><p>换mac的终端来安装：</p><p>进入自己的网站根目录，我这里是：<code>/www/wwwroot/bbs.yirenliu.cn/</code></p><img src="https://img.laoda.de/i/2023/04/02/10vw4yi-0.webp" alt=" " style="zoom: 50%;" /><img src="https://img.laoda.de/i/2023/04/02/10vzici-0.webp" alt=" " style="zoom:50%;" /><p>报错了，到根目录删除掉所有文件，重新安装。</p><img src="https://img.laoda.de/i/2023/04/02/10wbcrn-0.webp" alt=" " style="zoom:50%;" /><p>安装中，时间会比较长，（我这边想着自己是香港的服务器就没有换源 - - ！）</p><img src="https://img.laoda.de/i/2023/04/02/10we0o6-0.webp" alt=" " style="zoom:50%;" /><p>终于安装完成，等了估计十分钟。。。。</p><img src="https://img.laoda.de/i/2023/04/02/10wgbef-0.webp" alt=" " style="zoom:50%;" /><h3 id="四、配置运行"><a href="#四、配置运行" class="headerlink" title="四、配置运行"></a>四、配置运行</h3><p>上面其实就已经安装好了 Flarum，但是还需要进一步配置才能正确运行。</p><h4 id="4-1配置ssl证书"><a href="#4-1配置ssl证书" class="headerlink" title="4.1配置ssl证书"></a>4.1配置ssl证书</h4><img src="https://img.laoda.de/i/2023/04/02/10wlxbk-0.webp" alt=" " style="zoom:50%;" /><img src="https://img.laoda.de/i/2023/04/02/10wx5l9-0.webp" alt=" " style="zoom:50%;" /><p>提示失败，因为我没有把域名解析到服务器上。</p><p>进入域名注册商（我这里是腾讯，DNS也没换是dnspod的）</p><img src="https://img.laoda.de/i/2023/04/02/10x1i3c-0.webp" alt=" " style="zoom:50%;" /><img src="https://img.laoda.de/i/2023/04/02/10xl2rh-0.webp" alt=" " style="zoom:50%;" /><p>如图填写，把域名绑定到服务器上就ok了。</p><img src="https://img.laoda.de/i/2023/04/02/10xnb8c-0.webp" alt=" " style="zoom:50%;" /><p>等一会儿，去ping一下，确定域名和服务器ip已经绑定上，再重新按上面的方法申请ssl证书。</p><img src="https://img.laoda.de/i/2023/04/02/10xqnq5-0.webp" alt=" " style="zoom:50%;" /><p>这边已经连上了，可以重新申请ssl了。</p><img src="https://img.laoda.de/i/2023/04/02/10y2otx-0.webp" alt=" " style="zoom:50%;" /><p>申请成功！！！</p><img src="https://img.laoda.de/i/2023/04/02/10y4jzi-0.webp" alt=" " style="zoom:50%;" /><p>刷新一下已经有证书了，90天的有效期，过期后宝塔会自动帮忙续约。</p><h4 id="4-2-修改-Nginx-配置"><a href="#4-2-修改-Nginx-配置" class="headerlink" title="4.2 修改 Nginx 配置"></a>4.2 修改 Nginx 配置</h4><p>进入宝塔面板，打开站点设置，修改网站配置文件：(可对照下图修改)</p><p>1.root：需要在路径后面加上 public，比如我的原本是 <code>root /www/wwwroot/bbs.yirenliu.cn;</code>，需要修改为</p><p><code>root /www/wwwroot/bbs.yirenliu.cn/public;</code></p><img src="https://img.laoda.de/i/2023/04/02/10y87oc-0.webp" alt=" " style="zoom:50%;" /><p>2.引入 Flarum 提供的配置，在 server name 下方加上<code>include /www/wwwroot/xxx/.nginx.conf;</code>，xxx为网站目录名。比如我的是 <code>include /www/wwwroot/yirenliu.cn/.nginx.conf;</code></p><img src="https://img.laoda.de/i/2023/04/02/10yb3qj-0.webp" alt=" " style="zoom:50%;" /><p>报错了！</p><img src="https://img.laoda.de/i/2023/04/02/10ydjl7-0.webp" alt=" " style="zoom:50%;" /><p>发现粗心漏了bbs。。</p><p><code>include /www/wwwroot/bbs.yirenliu.cn/.nginx.conf;</code></p><p>然后保存就ok了。</p><h4 id="4-3-软件商店重载nginx配置"><a href="#4-3-软件商店重载nginx配置" class="headerlink" title="4.3 软件商店重载nginx配置"></a>4.3 软件商店重载nginx配置</h4><p>假如重载失败，就去检查刚配置的这两行，尤其注意符号英文状态下输入，还有结尾的分号。</p><img src="https://img.laoda.de/i/2023/04/02/10yoihb-0.webp" alt=" " style="zoom:50%;" /><h3 id="五、网站目录写入权限"><a href="#五、网站目录写入权限" class="headerlink" title="五、网站目录写入权限"></a>五、网站目录写入权限</h3><p>进入网站根目录上级wwwroot目录，更改网站文件夹的目录权限为755，所有者www，应用到子文件夹</p><img src="https://img.laoda.de/i/2023/04/02/10yu3to-0.webp" alt=" " style="zoom:50%;" /><img src="https://img.laoda.de/i/2023/04/02/10yxnm2-0.webp" alt=" " style="zoom:50%;" /><h3 id="六、Flarum安装引导"><a href="#六、Flarum安装引导" class="headerlink" title="六、Flarum安装引导"></a>六、Flarum安装引导</h3><p>访问域名，开始安装配置，数据库信息从宝塔面板数据库处获取</p><img src="https://img.laoda.de/i/2023/04/02/10z0a66-0.webp" alt=" " style="zoom:50%;" /><p>先设置成777，再设置成755</p><p>刷新！</p><img src="https://img.laoda.de/i/2023/04/02/10zc4i5-0.webp" alt=" " style="zoom:50%;" /><p>出来了安装界面，按图填就行。</p><img src="https://img.laoda.de/i/2023/04/02/10zg1eq-0.webp" alt=" " style="zoom:33%;" /><p>数据库用户名密码在这里：</p><img src="https://img.laoda.de/i/2023/04/02/10zho3s-0.webp" alt=" " style="zoom:50%;" /><img src="https://img.laoda.de/i/2023/04/02/10zuusd-0.webp" alt=" " style="zoom:50%;" /><p>点击安装就ok了。</p><img src="https://img.laoda.de/i/2023/04/02/110m82l-0.webp" alt=" " style="zoom:50%;" /><img src="https://img.laoda.de/i/2023/04/02/110og60-0.webp" alt=" " style="zoom:50%;" /><p>完成！</p><h3 id="七、安装中文插件并开启"><a href="#七、安装中文插件并开启" class="headerlink" title="七、安装中文插件并开启"></a>七、安装中文插件并开启</h3><p>flarum的插件都是通过composer安装，具体步骤和3.3中的下载flarum基本一致，进入网站根目录，点击终端，进入后黏贴插件代码回车就行了。</p><h3 id="安装中文汉化插件"><a href="#安装中文汉化插件" class="headerlink" title="安装中文汉化插件"></a>安装中文汉化插件</h3><p><code>composer require littlegolden/flarum-lang-simplified-chinese</code></p><p>安装结束后，去后台插件处开启中文插件即可。</p><img src="https://img.laoda.de/i/2023/04/02/110rhy5-0.webp" alt=" " style="zoom:50%;" /><p>安装失败，原因是没有进到网站的根目录。</p><p><code>cd /www/wwwroot/bbs.yirenliu.cn/</code></p><p>推荐插件：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">composer require littlegolden/flarum-lang-simplified-chinese</span><br></pre></td></tr></table></figure><h1 id="繁体中文语言包"><a href="#繁体中文语言包" class="headerlink" title="繁体中文语言包"></a>繁体中文语言包</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">composer require csineneo/lang-traditional-chinese</span><br></pre></td></tr></table></figure><h1 id="编辑器-Emoji-表情选择框"><a href="#编辑器-Emoji-表情选择框" class="headerlink" title="编辑器 Emoji 表情选择框"></a>编辑器 Emoji 表情选择框</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">composer require clarkwinkelmann/flarum-ext-emojionearea</span><br></pre></td></tr></table></figure><h1 id="导航栏菜单插件"><a href="#导航栏菜单插件" class="headerlink" title="导航栏菜单插件"></a>导航栏菜单插件</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">composer require fof/links</span><br></pre></td></tr></table></figure><h1 id="最佳回答"><a href="#最佳回答" class="headerlink" title="最佳回答"></a><del>最佳回答</del></h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">composer require wiwatsrt/flarum-ext-best-answer</span><br></pre></td></tr></table></figure><p>更新：Package wiwatsrt&#x2F;flarum-ext-best-answer is abandoned, you should avoid using it. No replacement was suggested.</p><h1 id="显示帖子阅读次数"><a href="#显示帖子阅读次数" class="headerlink" title="显示帖子阅读次数"></a>显示帖子阅读次数</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">composer require michaelbelgium/flarum-discussion-views</span><br></pre></td></tr></table></figure><h1 id="论坛用户列表"><a href="#论坛用户列表" class="headerlink" title="论坛用户列表"></a>论坛用户列表</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">composer require avatar4eg/flarum-ext-users-list</span><br></pre></td></tr></table></figure><h1 id="生成静态页面"><a href="#生成静态页面" class="headerlink" title="生成静态页面"></a>生成静态页面</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">composer require fof/pages</span><br></pre></td></tr></table></figure><h1 id="在帖子中直接生成外链预览小图（此插件已标记为弃用，请勿再安装）"><a href="#在帖子中直接生成外链预览小图（此插件已标记为弃用，请勿再安装）" class="headerlink" title="在帖子中直接生成外链预览小图（此插件已标记为弃用，请勿再安装）"></a>在帖子中直接生成外链预览小图（此插件已标记为弃用，请勿再安装）</h1><p><del>composer require zerosonesfun&#x2F;flarum-ext-link-previews</del> </p><h1 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a>上传文件</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">composer require fof/upload</span><br></pre></td></tr></table></figure><h1 id="插件商店"><a href="#插件商店" class="headerlink" title="插件商店"></a>插件商店</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">composer require extiverse/bazaar</span><br></pre></td></tr></table></figure><h1 id="Sitemap-生成器"><a href="#Sitemap-生成器" class="headerlink" title="Sitemap 生成器"></a>Sitemap 生成器</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">composer require flagrow/sitemap</span><br></pre></td></tr></table></figure><p>更新：Package flagrow&#x2F;sitemap is abandoned, you should avoid using it. Use fof&#x2F;sitemap instead.</p><h1 id="Fancybox-插件"><a href="#Fancybox-插件" class="headerlink" title="Fancybox 插件"></a>Fancybox 插件</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">composer require squeevee/flarum-ext-fancybox</span><br></pre></td></tr></table></figure><p>安装完成后去后台启用即可（后台地址：网址&#x2F;admin）。</p><img src="https://img.laoda.de/i/2023/04/02/1115tf1-0.webp" alt=" " style="zoom:50%;" /><p>先选上：</p><img src="https://img.laoda.de/i/2023/04/02/1117pej-0.webp" alt=" " style="zoom:50%;" /><img src="https://img.laoda.de/i/2023/04/02/1119yf8-0.webp" alt=" " style="zoom:50%;" /><img src="https://img.laoda.de/i/2023/04/02/111bxce-0.webp" alt=" " style="zoom:50%;" /><p>点击了保存之后还是英文。</p><p>需要去前面把English取消掉。</p><img src="https://img.laoda.de/i/2023/04/02/111ndmn-0.webp" alt=" " style="zoom:50%;" /><p>已经变成中文了，其他插件类似操作。</p><p>完结。</p><h5 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h5><p>1、<a href="https://www.itnt.xyz/it/11/">https://www.itnt.xyz/it/11/</a></p><p>2、<a href="https://bbs.dhzy.fun/d/22-flarum-bate13">https://bbs.dhzy.fun/d/22-flarum-bate13</a></p>]]></content>
      
      
      <categories>
          
          <category> 宝塔面板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPS </tag>
            
            <tag> 宝塔面板 </tag>
            
            <tag> 腾讯云香港轻量服务器 </tag>
            
            <tag> 网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>八旋翼设计，垂直起降！号称世界上最小的飞行汽车来了</title>
      <link href="/archives/dfrobotcommunity-skydrive-sd-xx/"/>
      <url>/archives/dfrobotcommunity-skydrive-sd-xx/</url>
      
        <content type="html"><![CDATA[<p>相信大家都体会过堵车的感觉。</p><p>“前方三公里车速缓慢……”</p><p>车只能停下来慢慢向前蹭。</p><p>看着上班时间一点一点靠近，又要迟到了，偶尔还会遇到有人加塞，又气又急，真的分分钟都不想等了，恨不得车子原地起飞，长个翅膀飞过去。</p><p>然而，真就在上个月，日本SkyDrive公司的世界上第一台载人飞行汽车——SD-03，完成了电动垂直起降（eVTOL）的飞行测试。</p><h3 id="炫酷试飞"><a href="#炫酷试飞" class="headerlink" title="炫酷试飞"></a>炫酷试飞</h3><p>先带大家感受一下SD-03炫酷的气场。</p><p><img src="https://img-blog.csdnimg.cn/20200915101839465.gif#pic_center"></p><p>飞行汽车实际的表现如何呢，我们一起来看看。</p><p>从远处看，SD-03就像大疆的升级版，不过里面坐了个人，8个螺旋桨发动，成功垂直起飞！</p><p><img src="https://img-blog.csdnimg.cn/20200915100957776.gif#pic_center" alt="起飞"></p><p>变向很容易，直接来个侧后转身。</p><p><img src="https://img-blog.csdnimg.cn/20200915101103919.gif#pic_center" alt="侧转身"></p><p>“侧方停车”也是一步到位。</p><p><img src="https://img-blog.csdnimg.cn/20200915101142723.gif#pic_center" alt="横向移位"></p><p>无论是起飞，还是加速前进，SD-03的平衡掌握的都很好。</p><p><img src="https://img-blog.csdnimg.cn/20200915101303168.gif#pic_center" alt="平稳飞行"></p><p>游行一圈，顺利回到停机坪。</p><p><img src="https://img-blog.csdnimg.cn/20200915101316753.gif#pic_center" alt="安全着落"></p><p>从起飞到侧转身，从横向移动到平稳飞行，最后SD-03飞行汽车稳稳降落到地面，整个过程一气呵成。</p><p>此次演示持续了大概4分钟，出于安全考虑，SD-03的飞行速度控制的比较低，目前只能以每小时几公里的低速飞行5到10分钟。</p><p>SkyDrive下一步计划是将其速度提升至每小时60公里，飞行时间延长到30分钟。</p><h3 id="SD-03飞行汽车"><a href="#SD-03飞行汽车" class="headerlink" title="SD-03飞行汽车"></a>SD-03飞行汽车</h3><p>这是一辆单座的SD-03电动垂直升降（eVTOL）飞行汽车。</p><p>高2米，长4米，宽4米(6.56x13.1x13.1英尺)，相当于两辆汽车的占地面积。</p><p>飞机外观整体采用“珍珠白”的外观设计，充满了运动的气息，同时也是向白鸟和天空中的云朵致敬。</p><p><img src="https://img-blog.csdnimg.cn/20200914173929139.png" alt="“珍珠白”外观"></p><p>飞行汽车前面是时髦的 H 型白色大灯，尾灯是红色T型指示灯，科技感满满。</p><p><img src="https://img-blog.csdnimg.cn/20200914173953930.png"></p><p><img src="https://img-blog.csdnimg.cn/20200914174209832.png" alt="T型指示灯"></p><p>为了让乘客更舒适，设计团队设计了一个减震效果极好的安全座椅，这款座椅的灵感来自日本流行的跑鞋。</p><p>它可以将乘客腰椎上的负荷抑制到比普通飞机座椅低得多的水平，不仅可以调节材料的物理特性，而且可以调节座椅下方波片的形状，以使减震效果达到最好。</p><p>这种波片设计，可以完美平衡缓冲和稳定性，可以省去某些传统的减震组件，重量更轻。</p><p><img src="https://img-blog.csdnimg.cn/20200914173816221.png" alt="内饰"></p><p><img src="https://img-blog.csdnimg.cn/20200915111438762.png" alt="减震"></p><p>用电池供电的SD-03体积相对较小，重量轻且相对安静，也使得SD-03能够在方便的位置（例如混凝土建筑物的平顶）起飞和降落。</p><p><img src="https://img-blog.csdnimg.cn/20200915112448315.png" alt="占两个车位的大小"></p><h3 id="SkyDrive历史"><a href="#SkyDrive历史" class="headerlink" title="SkyDrive历史"></a>SkyDrive历史</h3><p>SkyDrive来源于Cartivator。</p><p>Cartivator成立于2012年9月，<strong>他们是一个由汽车和航空等行业的人组成的志愿者组织</strong>。</p><p>志愿者们从2014年1月开始研发“ Sky Drive”飞行汽车。</p><p>6个月之后，SkyDrive无人测试机SD-00试飞成功。</p><p><img src="https://img-blog.csdnimg.cn/20200915104018157.png" alt="SD-00试飞成功"></p><p>2017年9月，Cartivator的志愿者们着手开始设计SD-01。</p><p><img src="https://img-blog.csdnimg.cn/20200915104213577.png" alt="SD-01封闭学校户外飞行测试"></p><p>技术的发展总是离不开资本的支持。</p><p>2018年7月，SkyDrive公司成立。开始专注SD-XX系列飞行汽车的研发。</p><p>从SD-01驾驶测试&#x2F;室内飞行测试成功，到SD-01获得户外飞行测试的许可，期间SkyDrive公司累计筹集了20亿日元用于技术研发和推广。</p><p>2019年12月，SkyDrive又进行了SD-02的室内飞行测试。</p><p>然后就是我们现在看到的这款SD-03飞行汽车。</p><p><img src="https://img-blog.csdnimg.cn/20200915134220432.png"></p><p>下个阶段，SkyDrive团队的目标是设计一款<strong>两人座位</strong>的飞行汽车，飞行员带一位乘客，飞行汽车基本上将在自动驾驶仪上飞行，但还不是100％自主的，保证在紧急情况下，有飞行员对飞行汽车进行操纵。</p><p><img src="https://img-blog.csdnimg.cn/20200914174649978.png" alt="SD-XX概念车的比例模型"></p><p>这会是世界上最小的eVTOL，高度为1.5米，宽为4米x 3.5米。SkyDrive公司希望在2023年首次亮相，类似于汽车大小的无人机，它将能够以每小时100公里的速度飞行，飞行距离达到几十公里。</p><p>未来的生活，可能是这个样子。</p><div style="position: relative; padding: 30% 45%;"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="//player.bilibili.com/player.html?aid=797096374&bvid=BV1zy4y1y7qB&cid=235597688&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe></div><p>关于这款飞行汽车，相信大家肯定还有一堆问题想问，这里附上SkyDrive CEO接受日本时报记者的一些采访，给大家参考。</p><h5 id="您开发飞行汽车时遇到的最大困难是什么？"><a href="#您开发飞行汽车时遇到的最大困难是什么？" class="headerlink" title="您开发飞行汽车时遇到的最大困难是什么？"></a>您开发飞行汽车时遇到的最大困难是什么？</h5><p>最大的两个困难是要使它获得<strong>商业飞行的认证</strong>，并确保与现有飞机相同的<strong>安全性和可靠性</strong>，并通过让公众知道这种空中机动性，让他们想要乘坐飞行汽车来改变社会气候。</p><p>我们已经获得了政府在有限的情况和场所进行飞行的批准，但是获得商业飞行证书的障碍要高得多。</p><p>飞行汽车零件的数量大约是传统飞机数量的千分之一或千分之一，这取决于我们如何进行，但我们预计这一过程将花费大约两年的时间。</p><h5 id="全球有100多个类似的飞行汽车项目，那么SkyDrive-SD-XX有何独特之处？"><a href="#全球有100多个类似的飞行汽车项目，那么SkyDrive-SD-XX有何独特之处？" class="headerlink" title="全球有100多个类似的飞行汽车项目，那么SkyDrive SD-XX有何独特之处？"></a>全球有100多个类似的飞行汽车项目，那么SkyDrive SD-XX有何独特之处？</h5><p>设计明智，它非常安全。</p><p>例如，某些eVTOL在底部安装了螺旋桨，如果飞机稍微倾斜一些，它们可能会撞到地面，从而可能损坏螺旋桨。</p><p>为了防止发生此类事故，我们的eVTOL在其上半部安装了螺旋桨，以提高安全性。</p><h5 id="您将来会使用eVTOL来容纳更多乘客吗？"><a href="#您将来会使用eVTOL来容纳更多乘客吗？" class="headerlink" title="您将来会使用eVTOL来容纳更多乘客吗？"></a>您将来会使用eVTOL来容纳更多乘客吗？</h5><p>我们基本上希望专注于两人座。三人座也许是可能的，但是重量对于飞行汽车很重要。如果再安排一个儿童安全座椅，那是可能的。</p><h5 id="当您在2028年推出全自动飞行汽车时，销售前景和价格将是多少？"><a href="#当您在2028年推出全自动飞行汽车时，销售前景和价格将是多少？" class="headerlink" title="当您在2028年推出全自动飞行汽车时，销售前景和价格将是多少？"></a>当您在2028年推出全自动飞行汽车时，销售前景和价格将是多少？</h5><p>我们预计，到2028年，年销量将增长到至少100辆汽车，而且价格会与昂贵的汽车相近，即几百万日元，因为随着销量的增加价格会下降。</p><h5 id="您的长期目标是什么？"><a href="#您的长期目标是什么？" class="headerlink" title="您的长期目标是什么？"></a>您的长期目标是什么？</h5><p>我对未来的前景感到非常兴奋，因为我们将见证出行能力的巨大改善——从历史上讲，这是罕见的，从马车到汽车，再到飞机和轮船。</p><p>自福特T型车问世以来已有100多年的历史，我们将在2023年推出空中出租车服务，为无需道路或火车轨道即可在任何地方实现空中旅行来铺平道路。</p><p>欧美还有许多其他竞争对手，但我们想制造一种能够提供“日本制造”品质的舒适驾乘体验的车辆。</p><h3 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h3><p><strong>1886年</strong>，卡尔·本茨为自己在去年研制成功的三轮汽车申请专利获得批准，这一天被大家称为现代汽车诞生日。</p><p><strong>大约两年后</strong>，北卡罗莱纳州的莱特兄弟发明了第一架成功的飞机。</p><p><strong>一百年之后</strong>，拥有创客精神的工程师们把汽车和飞机结合了起来。</p><p><strong>我们可能见证另一场交通革命。</strong></p><p><img src="https://img-blog.csdnimg.cn/20200914174420262.png"></p><h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><p><a href="https://www.japantimes.co.jp/news/2020/08/11/business/corporate-business/skydrive-tomohiro-fukuzawa-flying-cars/" title="日本时报">日本时报</a></p><p><a href="https://www.nytimes.com/2020/08/29/world/asia/japan-flying-car.html" title="纽约时报">纽约时报</a></p><p><a href="https://www.businessinsider.com/japans-first-public-test-flight-flying-manned-car-sd-03-2020-9?r=DE&IR=T#looking-even-further-ahead-the-company-plans-to-introduce-self-driving-flying-cars-by-2030-16" title="商业洞悉">商业洞悉</a></p><p><a href="https://new.qq.com/rain/a/20200831A0ALW800" title="新智元报道">新智元报道</a></p><p>文章转载于<a href="https://loll.cc/y">DF创客社区</a>  BY-NC-SA  转载请注明出处</p>]]></content>
      
      
      
        <tags>
            
            <tag> DF创客社区 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用永久免费的空间来备份自己的相册！手机空间满了，再也不用删照片了！</title>
      <link href="/archives/googlephotos/"/>
      <url>/archives/googlephotos/</url>
      
        <content type="html"><![CDATA[<h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h2><p>主要用到了两款软件：</p><ul><li>Google相册（适合国外用户或者能出去的用户）</li><li>一刻相册（适合国内用户）</li></ul><h3 id="Google相册（推荐）"><a href="#Google相册（推荐）" class="headerlink" title="Google相册（推荐）"></a>Google相册（推荐）</h3><p>先来说说自己最推荐的，Google相册。</p><p>苹果用户直接在应用商店下载就好了，安卓用户在谷歌商店里下载。（需要扶墙）</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic/2020-9-12/1599876695100-image.png" alt="Google相册"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic/2020-9-12/1599876735174-image.png" alt="一刻相册"></p><p>打开相册设置：</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic/2020-9-12/1599876851727-image.png" alt="相册设置"></p><p>打开备份与同步：</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic/2020-9-12/1599876952639-image.png" alt="备份与同步"></p><p>选择高画质，这个是有免费存储空间的，如果想保存原画质的话，会占用网盘的空间。（日常照片的话高画质已经很清晰了，可以满足日常的需求，重要的照片可以自己再存一份原画质的，）</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic/2020-9-12/1599876981208-image.png"></p><p>然后我们就可以开始备份同步了，</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic/2020-9-12/1599876867118-image.png"></p><p>备份完成之后，可以选择释放手机空间，</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic/2020-9-12/1599877424389-image.png"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/MdnicePic/2020-9-12/1599877467632-image.png"></p><p>这样，手机空间就不会满了，也可以继续拍摄照片。</p><p>朋友自己用了大概10年了，现在还是能找到2010年上传的照片，谷歌毕竟大厂，还是很稳的。</p><h3 id="一刻相册（适合国内用户）"><a href="#一刻相册（适合国内用户）" class="headerlink" title="一刻相册（适合国内用户）"></a>一刻相册（适合国内用户）</h3><p>应该是百度旗下的产品，国内的产品么，促销广告有点多，操作步骤也都差不多，这边就不展开讲了，大家下载了自己用一下就知道了。</p><p>要注意的是注册了之后好像需要推荐给好友才有免费空间，这里大家可以自己去网上找激活码，也可以用我的这个：ZEWANN</p><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>数据永远是放在自己的手上最安全，不管什么网盘、云相册都是相对安全的，对于重要的文件，大家一定要在多处备份（电脑硬盘、网盘、U盘，有条件的也可以自己弄个NAS），这才是最稳妥的方式。</p><p>显然我们不可能把所有数据都这样备份，对于日常的相册、用的文件，也一定记得要选择大厂的服务，不管从数据安全还是数据稳定性来说，比较让人放心。</p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网盘 </tag>
            
            <tag> Google相册 </tag>
            
            <tag> 一刻相册 </tag>
            
            <tag> 相册备份 </tag>
            
            <tag> 手机内存 </tag>
            
            <tag> 云盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>聊一聊网盘那些事儿</title>
      <link href="/archives/pandownload/"/>
      <url>/archives/pandownload/</url>
      
        <content type="html"><![CDATA[<p>前段时间，Pandownload的作者被抓加上百度网盘后台偷用户网速的事情，又把百度网盘送上了热搜，大家都在骂百度网盘，纷纷表示要抵制百度网盘。</p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2020-9-7/1599468876125-image.png"></p><p>其实，网盘也不好做，带宽和存储，尤其是带宽，想想自己买的vps的时候就知道了，太贵了。</p><p>做网盘是个吃力不讨好的活儿，不开会员制度根本赚不了什么钱。</p><p>但是，除去限速（这个还好可以解决，等下说），屏蔽资源（主要是这个）就让我很难受，明明我放的是BBC的性教育片，为什么把我给屏蔽了？甚至是一些网课视频也给屏蔽了，害我丢失了很多资料。</p><p>所以我一直在找网盘的替代方案。</p><p>期间了解了到了几个口碑比较好的网盘，简单罗列一下：</p><p>文叔叔、奶牛快传、坚果云、MEGA、OneDrive、GoogleDrive、Nextcloud、可道云、蓝奏云、天翼云、和彩云等。</p><p>其实用网盘，在我看来最重要的是稳定（数据安全），其次就是下载速度了，所以千万不要选小厂家，数据丢失不说，说不定还能泄露你的数据，首先选择大厂。</p><p>然后我们可以选下载速度稍微可以一点的厂家。</p><p>比如说天翼云、和彩云，这俩运营商的网盘，应该是比较保险的。（不过都需要下载客户端才能下载）</p><p>再则如果你有一个服务器，你可以搭建自己的网盘，参考我之前提到的<a href="https://blog.laoda.de/archives/veno-file-manager">一个极简且美观的多用户网盘程序：Veno-File-Manager-V3-4-8</a>和<a href="https://blog.laoda.de/archives/cloudreve-install">告别百度网盘，安装自己的专属网盘——Cloudreve，不限制下载速度！</a>这俩。（我也搭建过NextCloud的，不过ios客户端不太好使）</p><p>自己搭的服务器下载速度和服务器带宽有关，我自己在腾讯买的88月一台的那个，下载速度也就1M&#x2F;s左右…</p><p>现在用的香港轻量，速度大概在3.5M&#x2F;s,还凑合。</p><p>如果你服务器备案过的，还可以嫖七牛云和又拍云的免费空间，还挺香的。</p><h2 id="我目前使用的网盘们"><a href="#我目前使用的网盘们" class="headerlink" title="我目前使用的网盘们"></a>我目前使用的网盘们</h2><p>说了一堆，帖一个目前自己的存储解决方案吧：</p><p><strong>小文件（100M之内）——蓝奏云</strong></p><p><strong>一般文件（临时性）——自建网盘</strong></p><p><strong>一般文件（长期）——天翼云、和彩云</strong></p><p><a href="https://blog.laoda.de/archives/189checkin">天翼云自动签到，免费扩容的方法</a></p><p><strong>电影、视频等大文件——谷歌团队盘</strong></p><p><strong>重要文件——私有NAS（威联通）</strong></p><p>资料无价，重要的文件一定要在多处多备份！</p><h2 id="福利"><a href="#福利" class="headerlink" title="福利"></a>福利</h2><h4 id="谷歌团队盘"><a href="#谷歌团队盘" class="headerlink" title="谷歌团队盘"></a>谷歌团队盘</h4><p>谷歌团队盘无线空间，但是不适合放一些隐私性的资料，放放电影还是不错的。</p><ul><li>谷歌团队盘注册地址：<a href="https://gd.zxd.workers.dev/">https://gd.zxd.workers.dev/</a></li></ul><h4 id="油猴脚本-IDM-百度网盘"><a href="#油猴脚本-IDM-百度网盘" class="headerlink" title="油猴脚本+IDM+百度网盘"></a>油猴脚本+IDM+百度网盘</h4><p><em>暂时还离不开百度网盘的，自己又是用Windows的用户可以尝试用这个方法突破下载速度。</em></p><p>Windows用户的话用<strong>油猴脚本</strong>+<strong>IDM</strong>可以突破百度网盘的龟速下载。</p><ul><li><p>IDM官方正版：<a href="https://www.internetdownloadmanager.com/">https://www.internetdownloadmanager.com/</a></p></li><li><p>IDM开心PJ版：<a href="https://www.lanzous.com/i91wjub">https://www.lanzous.com/i91wjub</a></p></li><li><p>IDM谷歌浏览器扩展程序：<a href="https://chrome.google.com/webstore/detail/idm-integration-module/ngpampappnmepgilojfohadhhmbhlaek">https://chrome.google.com/webstore/detail/idm-integration-module/ngpampappnmepgilojfohadhhmbhlaek</a></p></li><li><p>油猴脚本插件：<a href="https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo?utm_source=chrome-ntp-icon">https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo?utm_source&#x3D;chrome-ntp-icon</a></p></li></ul><p><strong>搭配油猴的两个脚本</strong></p><ul><li>网盘链接检查：<a href="https://greasyfork.org/zh-CN/scripts/394216-%E7%BD%91%E7%9B%98%E9%93%BE%E6%8E%A5%E6%A3%80%E6%9F%A5">https://greasyfork.org/zh-CN/scripts/394216-%E7%BD%91%E7%9B%98%E9%93%BE%E6%8E%A5%E6%A3%80%E6%9F%A5</a></li><li>网盘助手：<a href="https://greasyfork.org/zh-CN/scripts/378301-%E7%BD%91%E7%9B%98%E5%8A%A9%E6%89%8B">https://greasyfork.org/zh-CN/scripts/378301-%E7%BD%91%E7%9B%98%E5%8A%A9%E6%89%8B</a></li></ul><p>最近阿里云盘在申请内测中，迅雷网盘也出来了，有兴趣的同学们大家可以关注一下。</p><p>仔细想想，除了百度搜索、站长工具、百度统计，我好像也没用百度的其他产品了，百度确实没落了[狗头]。</p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPS </tag>
            
            <tag> Nextcloud </tag>
            
            <tag> GoogleDrive </tag>
            
            <tag> cloudreve </tag>
            
            <tag> 网盘 </tag>
            
            <tag> 天翼云 </tag>
            
            <tag> 油猴脚本 </tag>
            
            <tag> IDM </tag>
            
            <tag> 蓝奏云 </tag>
            
            <tag> 和彩云 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>告别百度网盘，安装自己的专属网盘——Cloudreve，不限制下载速度！</title>
      <link href="/archives/cloudreve-install/"/>
      <url>/archives/cloudreve-install/</url>
      
        <content type="html"><![CDATA[<blockquote><p>注意：</p><p>此版本为基于宝塔搭建版本，比较复杂，如果想要简单的搭建版本，可以参考：</p><p><a href="https://blog.laoda.de/archives/docker-compose-install-lighthouse-cloudreve">【好玩儿的Docker项目】10分钟搞定网盘搭建！腾讯云轻量应用服务器搭建Cloudreve网盘，离线下载So easy！还支持WebDAV！</a></p></blockquote><h2 id="视频教程"><a href="#视频教程" class="headerlink" title="视频教程"></a>视频教程</h2><p>哔哩哔哩【高清版本可以点击去吐槽到 B 站观看】：<joe-bilibili bvid="BV17z4y117x4"></joe-bilibili></p><p>Cloudreve 是一个用Go语言写的公有网盘程序，我们可以用它来快速搭建起自己的网盘服务，公有云&#x2F;私有云都可。</p><p>先来看看文档介绍吧。</p><img src="https://img.laoda.de/i/2023/04/02/115jyc6-0.webp" style="zoom: 50%;" /><h4 align="center">支持多家云存储驱动的公有云文件系统.</h4><p align="center">  <a href="https://travis-ci.com/github/cloudreve/Cloudreve/">    <img src="https://img.shields.io/travis/com/cloudreve/Cloudreve?style=flat-square"         alt="travis">  </a>  <a href="https://codecov.io/gh/cloudreve/Cloudreve"><img src="https://img.shields.io/codecov/c/github/cloudreve/Cloudreve?style=flat-square"></a>  <a href="https://goreportcard.com/report/github.com/cloudreve/Cloudreve">      <img src="https://goreportcard.com/badge/github.com/cloudreve/Cloudreve?style=flat-square">  </a>  <a href="https://github.com/cloudreve/Cloudreve/releases">    <img src="https://img.shields.io/github/v/release/cloudreve/Cloudreve?include_prereleases&style=flat-square">  </a></p><p align="center">  <a href="https://demo.cloudreve.org">演示站</a> •  <a href="https://forum.cloudreve.org/">讨论社区</a> •  <a href="https://docs.cloudreve.org/">文档</a> •  <a href="https://github.com/cloudreve/Cloudreve/releases">下载</a> •  <a href="https://t.me/cloudreve_official">Telegram 群组</a> •  <a href="#scroll-许可证">许可证</a></p><img src="https://img.laoda.de/i/2023/04/02/115zwlx-0.webp" alt="Screenshot" style="zoom:50%;" /><h2 id="sparkles-特性"><a href="#sparkles-特性" class="headerlink" title=":sparkles: 特性"></a>:sparkles: 特性</h2><ul><li>:cloud: 支持本机、从机、七牛、阿里云 OSS、腾讯云 COS、又拍云、OneDrive (包括世纪互联版) 作为存储端</li><li>:outbox_tray: 上传&#x2F;下载 支持客户端直传，支持下载限速</li><li>💾 可对接 Aria2 离线下载</li><li>📚 在线 压缩&#x2F;解压缩、多文件打包下载</li><li>💻 覆盖全部存储策略的 WebDAV 协议支持</li><li>:zap: 拖拽上传、目录上传、流式上传处理</li><li>:card_file_box: 文件拖拽管理</li><li>:family_woman_girl_boy:   多用户、用户组</li><li>:link: 创建文件、目录的分享链接，可设定自动过期</li><li>:eye_speech_bubble: 视频、图像、音频、文本、Office 文档在线预览</li><li>:art: 自定义配色、黑暗模式、PWA 应用、全站单页应用</li><li>:rocket: All-In-One 打包，开箱即用</li><li>🌈 … …</li></ul><h2 id="安装前的准备"><a href="#安装前的准备" class="headerlink" title="安装前的准备"></a>安装前的准备</h2><p>安装之前我们需要准备好环境：</p><ul><li>一台服务器（VPS）【<a href="https://curl.qcloud.com/MNpXZscS">推荐的服务器</a>】</li><li>安装宝塔面板</li><li>安装nginx</li><li>安装mysql</li><li>准备一个域名</li></ul><h2 id="hammer-and-wrench-部署"><a href="#hammer-and-wrench-部署" class="headerlink" title=":hammer_and_wrench: 部署"></a>:hammer_and_wrench: 部署</h2><h3 id="Go语言环境"><a href="#Go语言环境" class="headerlink" title="Go语言环境"></a>Go语言环境</h3><ul><li><p>安装环境：CentOS Linux release 7.8.2003 (Core)</p></li><li><p>宝塔面板7.4.5</p></li><li><p>golang：go1.15.1.linux-amd64.tar.gz</p></li></ul><p><strong>视频中用的环境</strong></p><ul><li>CentOS Linux release 7.9.2009 (Core)</li><li>宝塔面板7.5.1</li></ul><img src="https://img.laoda.de/i/2023/04/02/1163xbm-0.webp" style="zoom:50%;" /><ul><li>golang：go1.16.linux-amd64.tar.gz</li><li>cloudreve_3.2.1_linux_amd64.tar.gz</li></ul><h4 id="Linux-常用命令"><a href="#Linux-常用命令" class="headerlink" title="Linux 常用命令"></a>Linux 常用命令</h4><h5 id="查看系统版本"><a href="#查看系统版本" class="headerlink" title="查看系统版本"></a>查看系统版本</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ll /etc/*centos*</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/centos-release</span><br></pre></td></tr></table></figure><h5 id="常用的解压命令"><a href="#常用的解压命令" class="headerlink" title="常用的解压命令"></a>常用的解压命令</h5><p><code>tar –xvf file.tar</code> &#x2F;&#x2F;解压 tar包</p><p><code>tar -xzvf file.tar.gz</code> &#x2F;&#x2F;解压tar.gz</p><p><code>tar -xjvf file.tar.bz2</code>   &#x2F;&#x2F;解压 tar.bz2tar –xZvf file.tar.Z &#x2F;&#x2F;解压tar.Z</p><h3 id="Go简介"><a href="#Go简介" class="headerlink" title="Go简介"></a>Go简介</h3><p>下载之前先去官网溜达下，点击【download go】就可进入下载页面：</p><img src="https://img.laoda.de/i/2023/04/02/1165r0w-0.webp" style="zoom:50%;" /><img src="https://img.laoda.de/i/2023/04/02/116gek3-0.webp" style="zoom:50%;" /><p>官网：<a href="https://golang.google.cn/">https://golang.google.cn/</a></p><p>根据自己的系统环境下载相应的版本，这里选择的是go1.15.1.linux-amd64.tar.gz。（新版用的是go1.16.linux-amd64.tar.gz）</p><h3 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h3><p>宝塔面板可以直接在面板里面下载安装，这里为了方便，直接就在命令环境下面下载安装配置了。</p><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><p>SSH工具连接服务器开始操作：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /www/server &amp;&amp; wget -O golang.tar.gz https://dl.google.com/go/go1.15.1.linux-amd64.tar.gz  </span><br></pre></td></tr></table></figure><p>上面是之前的安装，如果想要安装视频里的版本，可以用下面这个。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /www/server &amp;&amp; wget -O golang.tar.gz https://golang.org/dl/go1.16.linux-amd64.tar.gz  </span><br></pre></td></tr></table></figure><p>这些可以直接在面板环境里操作，也很方便。</p><h4 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h4><p>下载好之后解压：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -xzvf golang.tar.gz</span><br></pre></td></tr></table></figure><h4 id="添加环境变量"><a href="#添加环境变量" class="headerlink" title="添加环境变量"></a>添加环境变量</h4><p>添加环境变量，使用vim 打开&#x2F;etc&#x2F;profile 文件。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure><p>在profile 最底部添加：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> GOROOT=/www/server/go</span><br><span class="line"><span class="built_in">export</span> GOBIN=<span class="variable">$GOROOT</span>/bin</span><br><span class="line"><span class="built_in">export</span> GOPKG=<span class="variable">$GOROOT</span>/pkg/tool/linux_amd64</span><br><span class="line"><span class="built_in">export</span> GOARCH=amd64</span><br><span class="line"><span class="built_in">export</span> GOOS=linux</span><br><span class="line"><span class="built_in">export</span> GOPATH=/www/wwwroot/Golang</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$GOBIN</span>:<span class="variable">$GOPKG</span>:<span class="variable">$GOPATH</span>/bin</span><br></pre></td></tr></table></figure><p>丢一张图：</p><img src="https://img.laoda.de/i/2023/04/02/116isse-0.webp" style="zoom:50%;" /><p>添加好之后，保存退出，然后执行如下命令使其生效：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><h4 id="测试是否生效"><a href="#测试是否生效" class="headerlink" title="测试是否生效"></a>测试是否生效</h4><p>使用如下命令来测试Go语言环境是否安装成功。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">go version</span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2023/04/02/116krix-0.webp" style="zoom:50%;" /><p>如果出现上图，表示我们已经安装成功了。</p><h3 id="创建GOROOT目录"><a href="#创建GOROOT目录" class="headerlink" title="创建GOROOT目录"></a>创建GOROOT目录</h3><p>使用命令来创建，不过也可以用面板环境来进行可视化操作：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir /www/wwwroot/Golang</span><br></pre></td></tr></table></figure><p>通过上面的步骤，我们就完全安装好Go了。</p><h3 id="Go-run"><a href="#Go-run" class="headerlink" title="Go run"></a>Go run</h3><p>我们可以用一段代码来验证一下go语言的运行。</p><p>我们到Golang里面新建一个文件命名为test.go</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">touch test.go</span><br></pre></td></tr></table></figure><p>之后用vim简单编辑下，也可以直接到宝塔面板里新建编辑：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim test.go</span><br></pre></td></tr></table></figure><p>比如复制这段代码进去：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package main </span><br><span class="line">import &quot;fmt&quot; </span><br><span class="line">func main() &#123;   </span><br><span class="line">    /* 这是我的第一个简单的程序 */   </span><br><span class="line">    fmt.Println(&quot;Hello, Roy&#x27;s Blog!&quot;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2023/04/02/116mn14-0.webp" style="zoom:50%;" /><p>代码保存好之后，我们要开始执行 Go 程序了。</p><p>如何执行呢？</p><p>打开命令行，并进入程序文件保存的目录中。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">go run test.go</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>出现下图：</p><p>成功执行了这一段代码，输出了“Hello, Roy’s Blog!”</p><img src="https://img.laoda.de/i/2023/04/02/116oc3u-0.webp" style="zoom:50%;" /><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>整个环境的安装和简单的测试运行代码就说完了，希望对想学习Go语言的同学能有一点帮助。</p><p>Go 是一个开源的编程语言，它能让构造简单、可靠且高效的软件变得容易。</p><p>Go是从2007年末由Robert Griesemer, Rob Pike, Ken Thompson主持开发，后来还加入了Ian Lance Taylor, Russ Cox等人，并最终于2009年11月开源，在2012年早些时候发布了Go 1稳定版本。现在Go的开发已经是完全开放的，并且拥有一个活跃的社区。</p><h4 id="Go-语言特色"><a href="#Go-语言特色" class="headerlink" title="Go 语言特色"></a>Go 语言特色</h4><ul><li>简洁、快速、安全</li><li>并行、有趣、开源</li><li>内存管理、数组安全、编译迅速</li></ul><h4 id="Go-语言用途"><a href="#Go-语言用途" class="headerlink" title="Go 语言用途"></a>Go 语言用途</h4><p>1.Go 语言被设计成一门应用于搭载 Web 服务器，存储集群或类似用途的巨型中央服务器的系统编程语言。</p><p>2.对于高性能分布式系统领域而言，Go 语言无疑比大多数其它语言有着更高的开发效率。它提供了海量并行的支持，这对于游戏服务端的开发而言是再好不过了。</p><h3 id="安装Cloudreve"><a href="#安装Cloudreve" class="headerlink" title="安装Cloudreve"></a>安装Cloudreve</h3><p>旧版：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt</span><br><span class="line">wget https://github.com/cloudreve/Cloudreve/releases/download/3.1.1/cloudreve_3.1.1_linux_amd64.tar.gz</span><br><span class="line">tar -zxvf cloudreve_3.1.1_linux_amd64.tar.gz   <span class="comment">#解压获取到的主程序</span></span><br><span class="line"><span class="built_in">chmod</span> +x ./cloudreve  <span class="comment">#赋予执行权限</span></span><br><span class="line">./cloudreve   <span class="comment">#启动 Cloudreve</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>视频版本：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt</span><br><span class="line">wget https://github.com/cloudreve/Cloudreve/releases/download/3.2.1/cloudreve_3.2.1_linux_amd64.tar.gz</span><br><span class="line">tar -zxvf cloudreve_3.2.1_linux_amd64.tar.gz   <span class="comment">#解压获取到的主程序</span></span><br><span class="line"><span class="built_in">chmod</span> +x ./cloudreve  <span class="comment">#赋予执行权限</span></span><br><span class="line">./cloudreve   <span class="comment">#启动 Cloudreve</span></span><br></pre></td></tr></table></figure><p>分别复制命令回车执行，安装成功截图如下：</p><img src="https://img.laoda.de/i/2023/04/02/116r9fq-0.webp" style="zoom:50%;" /><p>Cloudreve 在首次启动时，会创建初始管理员账号，请注意保管管理员密码，此密码只会在首次启动时出现。(比如我这里的‘<a href="mailto:&#x61;&#x64;&#x6d;&#x69;&#110;&#x40;&#99;&#108;&#x6f;&#117;&#100;&#x72;&#x65;&#x76;&#101;&#46;&#111;&#x72;&#103;">&#x61;&#x64;&#x6d;&#x69;&#110;&#x40;&#99;&#108;&#x6f;&#117;&#100;&#x72;&#x65;&#x76;&#101;&#46;&#111;&#x72;&#103;</a>‘,’rgFzEBLc’)</p><p>如果您忘记初始管理员密码，需要删除同级目录下的“cloudreve.db”，重新启动主程序以初始化新的管理员账户。</p><p>Cloudreve 默认会监听“5212”端口。你可以在浏览器中访问’http:&#x2F;&#x2F;服务器IP:5212’进入 Cloudreve。如果<strong>宝塔面板</strong>需要<strong>在安全中放行“5212”端口</strong>。注意用默认的管理账号和密码登录。</p><h3 id="放行端口"><a href="#放行端口" class="headerlink" title="放行端口"></a>放行端口</h3><h4 id="服务器端"><a href="#服务器端" class="headerlink" title="服务器端"></a>服务器端</h4><img src="https://img.laoda.de/i/2023/04/02/1172epe-0.webp" style="zoom:50%;" /><img src="https://img.laoda.de/i/2023/04/02/1174b8d-0.webp" style="zoom:50%;" /><h4 id="宝塔端"><a href="#宝塔端" class="headerlink" title="宝塔端"></a>宝塔端</h4><img src="https://img.laoda.de/i/2023/04/02/1176m67-0.webp" style="zoom:50%;" /><h3 id="进程守护"><a href="#进程守护" class="headerlink" title="进程守护"></a>进程守护</h3><p>以上步骤操作完后，最简单的部署就完成了。</p><p>我们需要一些更为具体的配置，才能让Cloudreve更好的工作，宝塔面板我们可以使用Supervisor管理器来设置进程守护，具体流程请参考下面的配置流程。</p><h4 id="安装Supervisor管理器-先把刚才的命令行停止，按crtl-c"><a href="#安装Supervisor管理器-先把刚才的命令行停止，按crtl-c" class="headerlink" title="安装Supervisor管理器(先把刚才的命令行停止，按crtl+c)"></a>安装Supervisor管理器(先把刚才的命令行停止，按crtl+c)</h4><p>在宝塔面板里头，软件商店→系统工具 ，找到Supervisor管理器安装即可。</p><img src="https://img.laoda.de/i/2023/04/02/11794tm-0.webp" style="zoom:50%;" /><h4 id="添加守护进程"><a href="#添加守护进程" class="headerlink" title="添加守护进程"></a>添加守护进程</h4><p>打开Supervisor管理器添加守护进程：</p><img src="https://img.laoda.de/i/2023/04/02/117b0ey-0.webp" style="zoom:50%;" /><img src="https://img.laoda.de/i/2023/04/02/117cc70-0.webp" style="zoom:50%;" /><p>注意：<em>路径修改为自己的。添加完成后，守护进程就会启动成功。</em></p><img src="https://img.laoda.de/i/2023/04/02/117mvnh-0.webp" style="zoom:50%;" /><img src="https://img.laoda.de/i/2023/04/02/117pq88-0.webp" style="zoom:50%;" /><h3 id="域名访问"><a href="#域名访问" class="headerlink" title="域名访问"></a>域名访问</h3><p>新建网站，之后在网站设置中，配置反向代理。</p><h4 id="添加域名解析"><a href="#添加域名解析" class="headerlink" title="添加域名解析"></a>添加域名解析</h4><p>先在域名注册商那边把域名解析到服务器的IP上，我这边是腾讯的：</p><img src="https://img.laoda.de/i/2023/04/02/117tidx-0.webp" style="zoom:50%;" /><p>关于域名解析方面的知识，可以看这篇文章<a href="https://blog.laoda.de/archives/namesilo">【服务器、域名购买】Namesilo优惠码和域名解析教程（附带服务器购买推荐和注意事项）</a></p><h4 id="添加网站"><a href="#添加网站" class="headerlink" title="添加网站"></a>添加网站</h4><img src="https://img.laoda.de/i/2023/04/02/117v5kw-0.webp" style="zoom:50%;" /><h4 id="设置HTTPS"><a href="#设置HTTPS" class="headerlink" title="设置HTTPS"></a>设置HTTPS</h4><p>给网站加上SSL，https访问（小绿锁）：</p><img src="https://img.laoda.de/i/2023/04/02/118aic3-0.webp" style="zoom:50%;" /><img src="https://img.laoda.de/i/2023/04/02/118ez98-0.webp" style="zoom:50%;" /><h4 id="配置Nginx反向代理"><a href="#配置Nginx反向代理" class="headerlink" title="配置Nginx反向代理"></a>配置Nginx反向代理</h4><p>宝塔自带可以反向代理，但是不好用，而且貌似只能设置一个：</p><img src="https://img.laoda.de/i/2023/04/02/118h6sg-0.webp" style="zoom:50%;" /><p>这里我建议直接在网站的Nginx配置文件里修改：</p><img src="https://img.laoda.de/i/2023/04/02/118jl21-0.webp" style="zoom:50%;" /><p>选中这部分，把他们变成注释（前面加#号）：</p><img src="https://img.laoda.de/i/2023/04/02/118udme-0.webp" style="zoom:50%;" /><p>然后在这之后加上下面的代码：</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">   <span class="attribute">proxy_pass</span> http://127.0.0.1:5212/;</span><br><span class="line">   <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">   <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">   <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">   <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">   <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">   <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">   <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">   <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2023/04/02/118xufd-0.webp" style="zoom:50%;" /><h3 id="大功告成！"><a href="#大功告成！" class="headerlink" title="大功告成！"></a>大功告成！</h3><p>现在就可以用域名打开Cloudreve 访问了，我这里是<a href="https://pan.laoda.de/">https://pan.laoda.de</a>：</p><img src="https://img.laoda.de/i/2023/04/02/1190nhl-0.webp" style="zoom:50%;" /><blockquote><p>管理面板：</p></blockquote><img src="https://img.laoda.de/i/2023/04/02/1193vll-0.webp" style="zoom:50%;" /><blockquote><p>支持的存储策略：</p></blockquote><img src="https://img.laoda.de/i/2023/04/02/119ee3b-0.webp" style="zoom:50%;" /><blockquote><p>添加oneindex存储策略时详细的引导：</p></blockquote><img src="https://img.laoda.de/i/2023/04/02/119hewv-0.webp" style="zoom:50%;" /><blockquote><p>离线下载：</p></blockquote><img src="https://img.laoda.de/i/2023/04/02/119l0ns-0.webp" style="zoom:50%;" /><p>还有其他很多功能，大家自行尝试摸索~</p><h3 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h3><p>首次启动时，Cloudreve 会在同级目录下创建名为“conf.ini”的配置文件，我们可以修改此文件进行一些参数的配置，保存后需要重新启动 Cloudreve 生效。</p><img src="https://img.laoda.de/i/2023/04/02/11a1qbr-0.webp" style="zoom:50%;" /><img src="https://img.laoda.de/i/2023/04/02/11a4kb7-0.webp" style="zoom:50%;" /><p>默认情况下，Cloudreve 会使用内置的 SQLite 数据库，并在同级目录创建数据库文件“cloudreve.db”，如果我们想要使用 MySQL，可以在配置文件中加入以下内容，并重启 Cloudreve。（非必须）</p><img src="https://img.laoda.de/i/2023/04/02/11a6v8k-0.webp" style="zoom:50%;" /><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Database]</span><br><span class="line">#数据库类型，目前支持 sqlite | mysql</span><br><span class="line">Type = mysql</span><br><span class="line">#用户名，以你数据库的为准</span><br><span class="line">User = cloudreve</span><br><span class="line">#密码，以你数据库的为准</span><br><span class="line">Password = root</span><br><span class="line">#数据库地址</span><br><span class="line">Host = 127.0.0.1</span><br><span class="line">#数据库名称，以你数据库的为准</span><br><span class="line">Name = v3</span><br><span class="line">#数据表前缀</span><br><span class="line">TablePrefix = cd</span><br></pre></td></tr></table></figure><img src="https://img.laoda.de/i/2023/04/02/11a8lxy-0.webp" style="zoom:50%;" /><p>注意：<em>更换数据库配置后，Cloudreve 会重新初始化数据库，原有的数据将会丢失。</em></p><img src="https://img.laoda.de/i/2023/04/02/11aajqf-0.webp" style="zoom:50%;" /><p>记下新的账户和密码。</p><p>注意这边因为我们已经启动了一次cloudreve，所以重启的时候会提示端口被占用。</p><img src="https://img.laoda.de/i/2023/04/02/11al1k6-0.webp" style="zoom:50%;" /><p>我们可以重启一下服务器，就能用新的账户密码登录了。</p><img src="https://img.laoda.de/i/2023/04/02/11amszd-0.webp" style="zoom:50%;" /><p>登录后，记得改一下默认的账户和密码：</p><img src="https://img.laoda.de/i/2023/04/02/11aonnl-0.webp" style="zoom:50%;" /><img src="https://img.laoda.de/i/2023/04/02/11aqbot-0.webp" style="zoom:50%;" /><img src="https://img.laoda.de/i/2023/04/02/11aryaa-0.webp" style="zoom:50%;" /><p>默认用户只有1GB的空间，我们可以根据自己的vps大小更改空间大小。</p><img src="https://img.laoda.de/i/2023/04/02/11aty7z-0.webp" style="zoom:50%;" /><p>其实小文件（100M以内）完全可以用<a href="http://www.lanzou.com/account.php?action=register&USBeNVZgBTQFNgBhDmdXNVM2ADtZOQ==">蓝奏云</a>来储存，速度快。</p><blockquote><p>点击注册：<a href="http://www.lanzou.com/account.php?action=register&USBeNVZgBTQFNgBhDmdXNVM2ADtZOQ==">蓝奏云</a></p></blockquote><h3 id="修改默认的上传文件大小"><a href="#修改默认的上传文件大小" class="headerlink" title="修改默认的上传文件大小"></a>修改默认的上传文件大小</h3><p>我们这边的网盘一般可能会放一些大一点的文件，现在如果传会发现传不上去，原因是Nginx默认最大上传文件是50M，我们需要修改一下Nginx默认的上传文件大小：</p><img src="https://img.laoda.de/i/2023/04/02/11aw110-0.webp" style="zoom:50%;" /><p>可以改成5120（5G）大小，然后<strong>记得重载一下配置</strong>。</p><p>如果是国内的服务器，备案完成之后，可以去白嫖七牛云和又拍云的每月10个G的空间，一般就挺够用了。我之前腾讯云新客户买的服务器88月一年，备案了之后白嫖了他们的空间，还是挺香的。</p><blockquote><p>现在腾讯云也有1核2G的服务器95元一年的活动，有兴趣的可以去撸一年：<a href="https://cloud.tencent.com/act/cps/redirect?redirect=1067&cps_key=923faf881f7f4f42d8bb30f7a5c32918&from=console">【腾讯云】十周年感恩回馈，1核2G云服务器首年95元，4核云服务器额外赠送150GB高性能云数据盘，十年筑梦，伴你同行！</a></p></blockquote><p>因为88块的服务器到期续费比较贵，我到今年11月到期就不打算续费了（当初一下买3年就划算了，可惜），我这边现在用的是24元&#x2F;月的腾讯香港轻量云服务器，刚出的，电信走的CN2 GIA线路，用了俩个月还不错，可惜现在还在内测阶段，和我另外一个<a href="https://www.aliyun.com/product/swas?source=5176.11533457&userCode=fxujv7w7&type=copy">阿里云香港轻量应用服务器</a>相比，少了快照功能，希望TX早点出这个功能，方便折腾。<br>我的服务器是<a href="https://cloud.tencent.com/act/cps/redirect?redirect=33408&cps_key=923faf881f7f4f42d8bb30f7a5c32918">腾讯云香港轻量服务器</a>，不用备案，所以也嫖不了。</p><img src="https://img.laoda.de/i/2023/04/02/11b6h7h-0.webp" style="zoom:50%;" /><p>现在可以正常上传了，我这边上传速度在3M左右。</p><img src="https://img.laoda.de/i/2023/04/02/11baq0q-0.webp" style="zoom:50%;" /><p>可以正常播放视频：</p><img src="https://img.laoda.de/i/2023/04/02/11bcy9f-0.webp" style="zoom:50%;" /><p>分享的链接可以带密码保护、设置过期时间、允许预览等等：</p><img src="https://img.laoda.de/i/2023/04/02/11bek31-0.webp" style="zoom:50%;" /><p>如果分享的密码忘了，或者想要修改分享的信息，在<strong>后台</strong>-<strong>我的分享</strong>里头也可以查看分享链接的信息:</p><img src="https://img.laoda.de/i/2023/04/02/11bgkmq-0.webp" style="zoom:50%;" /><p>被分享者打开链接看到的界面：</p><img src="https://img.laoda.de/i/2023/04/02/11bhyb3-0.webp" style="zoom:50%;" /><p>我这边是移动的网络，下载速度大概在3.5M&#x2F;s左右：</p><img src="https://img.laoda.de/i/2023/04/02/11bsjko-0.webp" style="zoom:50%;" /><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>从使用体验来看，cloudreve效果很不错，功能强大，支持存储种类也多，唯一不足的地方竟然不支持Google Drive 。作者更是说目前不支持，未来也不会支持。</p><p>场景使用：可以使用 Cloudreve 搭建个人用网盘、文件分享系统，亦或是针对大小团体的公有云系统。</p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="https://www.daniao.org/8544.html">https://www.daniao.org/8544.html</a><br><a href="https://www.daniao.org/5094.html">https://www.daniao.org/5094.html</a><br><a href="https://www.gitiu.com/reprinted_articles/cloudreve-v3-and-go-install/">https://www.gitiu.com/reprinted_articles/cloudreve-v3-and-go-install/</a></p>]]></content>
      
      
      <categories>
          
          <category> 宝塔面板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPS </tag>
            
            <tag> 腾讯云香港轻量服务器 </tag>
            
            <tag> cloudreve </tag>
            
            <tag> 网盘 </tag>
            
            <tag> 网站 </tag>
            
            <tag> go </tag>
            
            <tag> 阿里云香港轻量服务器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>请往前走，不要回头</title>
      <link href="/archives/fangdongdemao-chashanliu/"/>
      <url>/archives/fangdongdemao-chashanliu/</url>
      
        <content type="html"><![CDATA[<div style="position: relative; padding: 30% 45%;"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"src="//player.bilibili.com/player.html?aid=18316187&bvid=BV1tW411q7KM&cid=40592634&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"></iframe></div>]]></content>
      
      
      
        <tags>
            
            <tag> 房东的猫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给创客们的一封信</title>
      <link href="/archives/2020-makercarnival-call-for-makers1/"/>
      <url>/archives/2020-makercarnival-call-for-makers1/</url>
      
        <content type="html"><![CDATA[<p>致每一位创客：</p><p>2020年注定是一个会被记住的年份。</p><p>前期我们无法出门，许多户外的项目没法正常进行，参加了一个又一个“宅家一起造”的活动来打发“无聊”的时间。</p><p>5月23日，Maker Faire 历史第一次在线上举办。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200819164522.png" alt="Virtually Maker Faire"></p><p>我们看到世界各地的创客们展示他们为应对疫情，在家所做的发明创造。</p><p>原以为夏天病毒会自行消散，结果被专家告知，我们可能与新冠病毒长期共存。</p><p>然后就出现了即使是面对38度的高温，还是有朋友戴着厚厚的自制口罩赶地铁的场景……</p><h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><p>上个月，陈奕迅连开了两次线上演唱会，时间分别在早上6点和下午5点。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200819094015.png" alt="图源：科技头条"></p><p>这两个时间的设置别出心裁，正好是在日出和日落时段。</p><blockquote><p>“日出日落便是一天，无论今天怎样困难，明天太阳还会升起，希望大家有信心、有勇气，相互扶持共度难关。”</p></blockquote><p>音乐永远有抚慰人心的能力，特殊时期，“线上演唱会”被孵化了出来，时间重合空间错位，给歌迷带来了不一样的视听体验。</p><h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><p>今年的创客嘉年华，我们也决定搬到线上举行。</p><p>还记得去年的 “有胆就来造” 活动么？</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200827094537.png" alt="嘉年华特别小活动"></p><p>去年的嘉年华活动在上海江湾体育场举行，两天时间。</p><p>由于时间或是地域的限制，不少创客们无法亲临现场感受这一盛会，我们收到了不少创客的反馈，也或多或少体会到了他们对于缺席的遗憾，所以当时想了这个小活动——自己先做一个项目，然后通过邮寄的方式，我们把你的作品带去嘉年华的现场，完成你参加嘉年华的小心愿。</p><h2 id="3"><a href="#3" class="headerlink" title="3"></a>3</h2><p>2020年的创客嘉年华，我们不会有这样的遗憾了。</p><p>今年的线上嘉年华，10月14号到10月18号，5天时间，活动的时间变长了。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200827094732.png" alt="2020创客征集令"></p><blockquote><p>今年，我们希望打造一个免于外部影响的创客生态圈，一个虚拟创客空间。不管你是个人创客、硬件开发者，或者制造商、软件开发者、创客活动机构，我们都诚邀您加入这场云端聚会，在这里找到属于自己的角落，像往常一样彼此连接，自由制造，自在发声，探索未来。</p></blockquote><p>线上的魅力在于突破了时间、地域限制。</p><p>嘉年华期间，大家可以在我们紧锣密鼓开发中的嘉年华网站上浏览精彩的项目、有趣的分享。</p><p>我们专门设置了直播分享环节，你将有机会和你的项目一起出镜了！</p><p>这会是一个创意火花迸发和碰撞的思想交流和表达平台。</p><p>我们会邀请所有具有创造精神的朋友们，不论是来自科技、教育还是艺术行业，不管是创业者、专家、意见领袖或业余爱好者，通过演讲、对谈甚至是表演的形式传播具有创造力的观点、项目或者经历。</p><h2 id="4"><a href="#4" class="headerlink" title="4"></a>4</h2><p>创客的精神在于分享，分享激发创造。</p><p>特殊时期，“线上创客嘉年华”被孵化了出来，时间重合，空间错位，</p><p>我们希望带给每一位创客爱好者们一次全新的创客之旅，</p><p>更希望有更多的创客们能带着自己的故事，参与到这个特殊的嘉年华中，</p><p>分享自己的项目，分享自己的创客之路。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200827094837.png" alt="报名通道"></p><p>等你。</p><p>从不迟到的：创客嘉年华</p><p>2020年8月20日</p>]]></content>
      
      
      
        <tags>
            
            <tag> DF创客社区 </tag>
            
            <tag> 创客嘉年华 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你身边的这些中国品牌，其实全是美国的......</title>
      <link href="/archives/zhonguopinpai/"/>
      <url>/archives/zhonguopinpai/</url>
      
        <content type="html"><![CDATA[<p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2020-9-3/1599096219629-image.png"></p><p>这两年，中美关系降温，很多中国人喊着要抵制美国货。爱国之心是好的，抵制也不能说完全不对，但抵制的时候要找准目标，<strong>不要谈到美国货就想到苹果手机，而且也只能想到苹果手机。</strong> 实际上，苹果把绝大部分生产线都放在了中国，给中国带来了巨大的税收和就业，但生产出的手机70%都是销往国外的。严格来说，中国从苹果公司身上获得的好处还要大于苹果在中国获得的好处。这不止是互利互惠的关系，而是一棵摇钱树般的存在，可以说是在华美企的楷模。而那些真正在中国赚了大钱的美企，却无人抵制，很多人连抵制的念头都生不起来。因为你压根不知道这些东西是美国的，你甚至会以为这些是中国品牌。</p><h2 id="可口可乐和百事可乐"><a href="#可口可乐和百事可乐" class="headerlink" title="可口可乐和百事可乐"></a>可口可乐和百事可乐</h2><p>看到这个子标题，很多人笑了，刚才啰里啰唆说了一堆，我还以为你要爆什么猛料呢，结果就来了个可口可乐和百事可乐？这两家可乐公司是美国的谁不知道，还用你来教我？难道你说了这么多就是让我去抵制可乐？别急。<strong>可口可乐肯定是可口可乐的，但其他的也是可口可乐的。</strong> 当你喝腻了可口可乐，想换种饮料改改口味的时候。雪碧、芬达、美汁源、维他命水、冰露，这些全部都是可口可乐的。</p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2020-9-3/1599096243993-image.png"></p><p>换成饮料的外包装，看起来可能会更直观一点。</p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2020-9-3/1599096263564-image.png"></p><p>行，我不喝雪碧了，我喝七喜行不行。芬达我也不喝了，我喝美年达行不行。美汁源也不喝了，我喝果缤纷。幸好还有其他中国品牌可以替补，难道还怕没有饮料喝？当年为了对抗可口可乐，百事可乐公司搞出了很多品牌的饮料。刚才说到的美年达、七喜、激浪、果缤纷、佳得乐、纯果乐、乐事薯片等等，都是百事可乐的。除此之外还有一堆英文品牌，中国人都不太熟悉，我就不提了，但百事可乐旗下稀奇古怪的品牌有数百个之多。。。</p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2020-9-3/1599096284216-image.png"></p><p>另外，在很多人眼里，可口可乐才是正宗的可乐，而且百事可乐的销量也确实不如可口可乐高，看起来百事好像很弱。但实际上，百事可乐的体量并不比可口可乐小，因为百事还插手了餐饮业。你所熟知的两个品牌，肯德基和必胜客。他们不仅是美国的，而且还是美国百事可乐的。1997年，百事餐饮部分拆了出来，命名为百胜餐饮集团，中国子公司名为百胜中国，创立或收购了大量全球知名品牌。你在门口犹豫了半天，最终选择放弃了左边的肯德基，到右边的必胜客消费。</p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2020-9-3/1599096304198-image.png"></p><p>你以为你行使了消费者的选择权，有了一种上帝的错觉。但在百事公司眼里，无所谓，你选哪个都行。对了，再问你一个问题。你去小肥羊消费过么？还有黄记煌。你觉得小肥羊和黄记煌是中国品牌么？实际上，小肥羊和黄记煌都是百胜中国的品牌，也就是百事可乐的品牌，是典型的美国公司。</p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2020-9-3/1599096329544-image.png"></p><p>网上抵制美国公司声音最大的时候，我都没听说过有人要抵制美国公司黄记煌。更多的人，在黄记煌里边吃肉边抱着手机发帖，要把美国苹果赶出中国。无知真的挺可笑的。</p><h2 id="宝洁集团和美国强生"><a href="#宝洁集团和美国强生" class="headerlink" title="宝洁集团和美国强生"></a>宝洁集团和美国强生</h2><p>美国宝洁集团是一家年销售额达650亿美元的巨无霸超级国际巨头，世界第十大市值上市公司，总部位于美国俄亥俄州。宝洁公司是卖什么的？先问一个问题，你家里的洗发水是什么牌子的？海飞丝、潘婷、飘柔、沙宣、伊卡璐还是威娜？不好意思，这六款洗发水全部是宝洁公司的。你随便选，钱只要能逃出我手掌心就算你赢。一个女生，用舒肤佳香皂洗完澡后，拍了拍上周刚买的SK-II神仙水，然后涂了点玉兰油脸霜，又换上了护舒宝。</p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2020-9-3/1599096359174-image.png"></p><p>以上这些，全部都是宝洁公司的产品，标准美国货。汰渍洗衣粉是宝洁的，佳洁士牙膏是宝洁的，吉列剃须刀是宝洁的。在中国市场和宝洁公司打对台戏的竞争对手，也不是中国公司，而是美国强生和联合利华。美国强生这家公司看名字就是美国的，是美国十大最有价值品牌之一，它的产品覆盖的领域，就和宝洁存在一定的竞争关系。中国的国民护肤品，大宝天天见，其实你见的就是强生。除此之外，强生婴儿、露得清、可伶可俐、娇爽、邦迪，这些都是强生的。另外，在中国鼎鼎大名的达克宁，是强生的。而西安杨森不是西安的，其旗下所有产品，都是强生的。而另一个和宝洁竞争关系更激烈的，叫联合利华，不是美国的，是英国和荷兰的合资公司。其名下品牌有夏士莲、力士、清扬、多芬、凡士林、和路雪、立顿茶、金纺和奥妙等等。</p><p><img src="https://gitee.com/ralstonliu/mdnice/raw/master/2020-9-3/1599096383306-image.png"></p><p>比较好玩的是，中华牙膏也是联合利华的。记住了，中华牙膏不是中国的，几十年前就是联合利华的了，别记错了。下次如果抵制英国或者荷兰，就能利用到这个知识点，到时候可以选择抵制中华牙膏。</p><h2 id="亿滋国际和玛氏公司"><a href="#亿滋国际和玛氏公司" class="headerlink" title="亿滋国际和玛氏公司"></a>亿滋国际和玛氏公司</h2><p>亿滋国际是一家总部位于美国伊利诺伊州的超级跨国公司，美国人很得意的一个品牌。当然，很多中国人压根就没有听说过这个名字，极其陌生。但你肯定听说过奥利奥。没错，奥利奥、太平梳打、闲趣饼干、王子饼干、怡口莲，这些中国人家喻户晓的零食品牌，都是亿滋国际的。哪怕你是个对零食完全不感兴趣的直男，对这些品牌应该都有所耳闻。而趣多多、优冠、闲趣、太平、乐之、荷氏、炫迈、妙卡和果珍这些稍微弱一点的品牌，也是亿滋国际的。尤其是这个果珍，现在虽然不行了，但几十年前还是很厉害的，中国人基本都喝过。</p><p>而这一大堆品牌，都是亿滋国际的。玛氏公司，美国第二大糖果制造商，一家扩张到了全球的美国公司。这名字更冷门了，知道的中国人更少。但德芙巧克力你应该知道。没错，玛氏公司的。士力架、脆香米、瑞士糖、真知棒、彩虹糖和箭牌口香糖，这些都是玛氏的。而鼎鼎大名的益达口香糖。。。<strong>那不是你的益达，那是美国玛氏公司的益达。</strong></p><h2 id="中国当自强"><a href="#中国当自强" class="headerlink" title="中国当自强"></a>中国当自强</h2><p>以上几大段，仅仅是国际巨头的一小部分，连所有的美国品牌我都没统计完，只是选了几个生活中最常见的品牌。比如说美国的通用磨坊，旗下除了有哈根达斯冰淇淋，还有中国范十足的湾仔码头饺子。比如说美国通用汽车公司。不止通用汽车是通用的，别克、雪佛兰、凯迪拉克、宝骏、沃克斯这些都是通用的。中国的国民神车，异常廉价的五菱汽车，也是通用的。当然，因为中国曾经强制规定汽车业必须中外合资，所以这些品牌一半的股权都是中国的，也不算亏。其他的著名跨国巨头，还有瑞士的雀巢，大小品牌数百个。美宝莲、薇姿、科颜氏、植村秀、兰蔻、理肤泉、阿玛尼、脆脆鲨威化巧克力、太太乐、美极、豪吉。连徐福记和银鹭八宝粥也是雀巢的。今天和大家说这些，不是让你背诵品牌名来方便你下一次抵制，而是想告诉你国际资本如此强大的奥秘。可口可乐和百事可乐，最开始只是卖可乐的，最后啥都卖，旗下品牌无数。宝洁公司，最开始只是一家卖肥皂的。玛氏公司，最开始只是一家卖糖果的。任何一个巨头，最开始都是从一个小不点成长起来的。但当这些巨头赚到的钱越来越多的时候，他们的在本行业已经没有什么好投资的，再开几家工厂，再铺几家渠道已经毫无意义。此时，他们就开始大手笔的收购公司，把所有的潜在竞争对手全部买下来。买下的大部分品牌，都黄了，但少数成长为了大树。但整个市场，牢牢把控在巨头的手中，不管谁赢都是巨头赢。</p><p><strong>谁资本最大，谁获利最多，想挑战巨头资本难如登天。</strong> </p><p>中国其实也有类似的公司，比如说腾讯公司，最开始是靠聊天软件起家，比如说阿里巴巴公司，最开始是靠卖小商品起家。但今天的腾讯和阿里，触手跨越各行各业，什么公司都买。美团，腾讯的。饿了么，阿里巴巴的。现在中国的互联网公司创业，甭管你之前有几轮投资，最后一轮基本都是腾讯轮或者阿里巴巴轮。腾讯和阿里巴巴赚了很多钱，但他们现在要钱已经没用了，本行已经彻底到了极限，再多的钱也无法再扩大营收，只能出去买买买。但是腾讯和阿里仅仅发展了20年，而美国的那些国际巨头动辄都发展了一两百年。那些沉淀了一两百年的国际巨头会有怎样的资本能量，可想而知。</p><p>中国人身边的外国品牌太多太多，其中美国品牌得占了接近一半，涉及到生活的方方面面。从肥皂到洗发水，从饮料到零食，相当大一部分都是美国资本所控制的。没办法抵制。但同样的，特朗普叫嚣的所谓和中国脱钩，一刀两断，那也是<strong>做梦</strong>。</p><p>美国从中国身上的获益，远远不是进出口数据可以体现的，那只是一部分，相当大一部分美国品牌在中国的收益是隐形的，利润源源不断的输送回美国，并在美国股市中体现出来。<strong>特朗普如果真的让美国和中国彻底脱钩，美国的资本家就能第一个撕了他。</strong> 而如果中美不脱勾，继续贸易交流，以中国的实力，再默默发展个几十年，甚至十几年，完全有可能反超美国，成为世界第一经济大国。而美国资本之所以能收购如此之多的中国品牌，完全是因为中国以前的资本太少，美国的资本太多，双方的资本力量完全不成正比。在市场经济中，大鱼吃小鱼是永恒定律。但今天的中国，国力越来越雄厚，资本也越来越多，甚至很多行业已经出现资本过剩的情况。不需要像美国那样发展上百年，只需要给中国几十年的时间，中国也能成为资本。当然，资本再多，也需要国力和军队来保驾护航。美国资本可以借助美国军队的保护横行世界，而中国好不容易崛起了几个具备全球竞争力的品牌就被美国打压，无理由的打压。</p><p>中国不崛起，中国的品牌就永远不可能崛起。</p><p><strong>而中国的崛起，依赖于你我每一个人的努力。诸位，都需要加油。</strong></p><p>——by<a href="https://www.z-z-z.vip/post/author/yuanfangqingmu">远方青木</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 百事可乐 </tag>
            
            <tag> 可口可乐 </tag>
            
            <tag> 宝洁 </tag>
            
            <tag> 强生 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安利一个我正在使用的呆梨</title>
      <link href="/archives/ss/"/>
      <url>/archives/ss/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>兼听则明，偏听则暗，富强是为了让自己有一个自由透明的信息环境，一个世界不应该只有一种声音存在，而进入真正的互联网之后，也意味着更需要你自己要有一定的判断能力，而不是听风就是雨。</p><h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><p>主要用于魔法上网，像写代码经常需要Google的，百度简直有毒。</p><p>还有看下YouTube、谷歌相册同步备份，都挺快。</p><p>买Lite版本即可（<strong>Lite版20美元</strong>），转换为人民币140元一年，每月100G流量。</p><p><a href="https://portal.shadowsocks.nz/aff.php?aff=38563">梯子注册地址</a></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/ImageRepo/img/20200805110615.png"></p><p>虽然说仅支持 2 台设备同时连接，但是实际用起来并没有感觉到有这个限制。</p><p>我的iPhone、安卓、还有两台电脑都装上了也没啥，100G流量足够使用。</p><p>平时常开着的话，可以设置为仅对被墙的域名使用（PAC模式）。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/ImageRepo/img/20200805110709.png" alt="高级版延迟测试"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com9b397cb2-bb2e-45f2-abe3-01b06f54819b.png).png"></p><p>线路有这些，根据流量倍率使用，一般倍率越高速度越快。</p><p>比自己买海外服务器+搭建更加多选择，门槛也更低。</p><p>iPhone的ss客户端需要 <strong>美区账号（且付费）</strong> 才能下载，这里提供一个<a href="https://wohaobang.cn/">羊王の分享站</a>。</p><p>其他客户端参考他们网站的帮助文档，都会有详细介绍。</p><h3 id="2019年11月13日更新："><a href="#2019年11月13日更新：" class="headerlink" title="2019年11月13日更新："></a><strong>2019年11月13日更新：</strong></h3><p>官网地址每次被墙都会有邮件通知，习惯就好，服务还是很好用的。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200805133702.png" alt="20200805133702"></p><h3 id="2020年2月24日更新："><a href="#2020年2月24日更新：" class="headerlink" title="2020年2月24日更新："></a><strong>2020年2月24日更新：</strong></h3><p>旧用户如果遇到无法使用情况，是因为官方更换了协议。按说明转换协议后重新导入配置即可。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200805133718.png" alt="20200805133718"></p><p>总之，大家遵纪守法，大家合理利用。</p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 魔法上网 </tag>
            
            <tag> YouTube </tag>
            
            <tag> Google </tag>
            
            <tag> 学习必备 </tag>
            
            <tag> 信息自由 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【保姆级】树莓派FRP教程</title>
      <link href="/archives/raspberrypi-frp/"/>
      <url>/archives/raspberrypi-frp/</url>
      
        <content type="html"><![CDATA[<p>树莓派（Raspberry Pi）是为计算机编程教育设计的廉价电脑，只有信用卡大小。</p><p>久闻树莓派盛名，第一次动购买的念头是看了 Kitten Yang 基于 Home Assistant 搭建智能家居的博文后，但装修时最终采用了小米智能家居的整体方案（目前已经使用一年有余，今后会专门写一篇使用体验）。今年上半年做了一些贴近硬件的软件开发，萌生了探索硬件的念头，遂购入树莓派。</p><p>我选购的是彼时最新型号树莓派3B+，最新发布的树莓派4有着不俗的性能提升。回顾折腾树莓派的过程，有几点经验分享：</p><pre><code>1.网线和HDMI视频线不是必须的，将系统烧录到SD卡后，配置WIFI连接功能和SSH功能。然后使用同一局域网的电脑ping raspberrypi.local获得IP地址，使用ZSH（或手机使用Termius）连接到树莓派。2.风扇的噪音比较大，可以选择铝合金外壳来改善散热或通过三极管调节风扇风速减小噪音。3.默认的APT源下载速度比较慢，建议换成清华或中科大的源。4.APT源中的golang版本比较老，需要通过APT安装golang后再下载新版本源码自行编译。</code></pre><p>树莓派买来后我主要用在以下几方面：</p><pre><code>1.搭建SAMBA文件共享服务，当一个简易的NAS，备份了一些照片和文件。2.搭建Aria2+YAAW配合VLC的简易影视系统，用来看了几部电影，印象最深刻的当属《泰坦尼克号》。3.将一些格式转换的任务丢给FFmpeg慢慢执行。4.定时运行一些简易的定时脚本。</code></pre><p>当然，就像「盖Kindle 面更香」一样，树莓派最主要的用途还是吃灰。</p><p>贸易战的消息此起彼伏，对美国，大家的态度多是忌惮和愤恨兼而有之。最近更是曝出Github受到美国出口管理条例的管制，无故停用了几个伊朗开发者的账号。</p><p>就像华为有HarmonryOS作为Android备胎那样，我决定部署一个自己的Git服务，不使用GitHub也不依托云主机，树莓派刚好派上用场。</p><p>说干就干，摆在眼前的第一个问题是，我的宽带是移动冰淇淋套餐赠送的家庭宽带，没有公网IP。解决方案主要有三个：</p><ul><li>花生壳等DDNS解析</li><li>Ngrok</li><li>FRP<br>付费服务花生壳不考虑，Ngrok免费版不支持自定义域名，这次决定挑没玩过的FRP下手。</li></ul><p>FRP是Fast Reverse Proxy的缩写，一款支持TCP&#x2F;UDP快速反向代理的开源软件，可以很方便的内网穿透。和花生壳、Ngrok等不同，FRP客户端和服务端的控制权都在自己手中，这也意味着你需要准备一台有公网IP的VPS运行服务端程序。</p><h4 id="以上来自Chinsyo-Blog"><a href="#以上来自Chinsyo-Blog" class="headerlink" title="以上来自Chinsyo Blog"></a>以上来自<a href="https://chinsyo.com/2019/08/10/ssh-connect-raspberry-pi-anywhere/">Chinsyo Blog</a></h4><hr><p>由于扶墙，我手头有两三台服务器，正好可以试试可以给树莓派frp用,这里以阿里云香港为例子，记录自己的frp搭建教程。</p><p>1、查看服务器与树莓派的系统架构</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200806085011.png" alt="服务器"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200806085208.png" alt="树莓派"></p><p>到frp的<a href="https://github.com/fatedier/frp/releases">release</a>页面下载最新的frp安装包。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200806085538.png"></p><p>树莓派端下载：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ mkdir -p app/install &amp; cd app/install</span><br><span class="line">$ wget https://github.com/fatedier/frp/releases/download/v0.33.0/frp_0.33.0_linux_arm.tar.gz</span><br><span class="line">$ tar -zxvf frp_0.33.0_linux_arm.tar.gz </span><br><span class="line">$ sudo mv frp_0.33.0_linux_arm /usr/local/frp</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>服务器端把下载地址替换成：<a href="https://github.com/fatedier/frp/releases/download/v0.33.0/frp_0.33.0_linux_amd64.tar.gz">https://github.com/fatedier/frp/releases/download/v0.33.0/frp_0.33.0_linux_amd64.tar.gz</a></p><p>然后我们可以开始修改配置文件，树莓派配置文件为frpc.ini，服务器配置文件为frps.ini，对应C&#x2F;S架构中的服务端和客户端。服务器采用默认配置，树莓派将表示服务器地址的x.x.x.x替换为实际地址。</p><h3 id="服务器端配置情况："><a href="#服务器端配置情况：" class="headerlink" title="服务器端配置情况："></a>服务器端配置情况：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># frps.ini</span><br><span class="line">[common]</span><br><span class="line">bind_port = 7000</span><br><span class="line">vhost_http_port = 8080  # 我这里搭建了一个网页，如果只用ssh的话这行不要哈</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200806090336.png" alt="服务器端很简单"></p><h3 id="客户端配置情况："><a href="#客户端配置情况：" class="headerlink" title="客户端配置情况："></a>客户端配置情况：</h3><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images20200805215555.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr = x.x.x.x</span><br><span class="line">server_port = 7000</span><br><span class="line"></span><br><span class="line">[ssh]</span><br><span class="line">type = tcp</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">local_port = 22</span><br><span class="line">remote_port = 6000</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[web]                    # 我这里搭建了一个网页，如果只用ssh的话，web这部分不用写</span><br><span class="line">type = http</span><br><span class="line">local_port = 80</span><br><span class="line">custom_domains = frp.loll.cc</span><br></pre></td></tr></table></figure><p>接着切换到上面的工作路径<code>/usr/local/frp</code>（以自己的为准，就在frp这个文件夹里），服务端执行<code>./frps -c frps.ini</code>，树莓派执行<code>./frpc -c ./frpc.ini</code>。</p><p>电脑打开ssh连接工具，输入<code>ssh -oPort=6000 pi@x.x.x.x</code>测试我们的连接。注意这里<code>pi</code>代表在树莓派上的用户名，而<code>x.x.x.x</code>代表服务器的IP地址，正常情况下这个时候你会看到熟悉的Linux登录成功提示。</p><h3 id="加入开机自动启动"><a href="#加入开机自动启动" class="headerlink" title="加入开机自动启动"></a>加入开机自动启动</h3><h4 id="树莓派端"><a href="#树莓派端" class="headerlink" title="树莓派端"></a>树莓派端</h4><p>首先创建service：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo vi /etc/systemd/system/frpc.service</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># /etc/systemd/system/frpc.service</span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=frpc Service</span><br><span class="line">daemonAfter=network.target syslog.target</span><br><span class="line">Wants=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">User=root</span><br><span class="line">Type=simple</span><br><span class="line">ExecStartPre=/bin/sleep 20</span><br><span class="line">ExecStart=/var/frp/frp_0.33.0_linux_arm/frpc -c /var/frp/frp_0.33.0_linux_arm/frpc.ini</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images20200805215815.png" alt="frpc.service 配置情况"></p><h4 id="服务器端"><a href="#服务器端" class="headerlink" title="服务器端"></a>服务器端</h4><p>与树莓派端类似，这里贴一下我的配置：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=frps</span><br><span class="line">After=network.target</span><br><span class="line">[Service]</span><br><span class="line">TimeoutStartSec=30</span><br><span class="line">WorkingDirectory=/var/frp/frp_0.33.0_linux_amd64</span><br><span class="line">ExecStart=/var/frp/frp_0.33.0_linux_amd64/frps -c /var/frp/frp_0.33.0_linux_amd64/frps.ini</span><br><span class="line">Restart=on-failure</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h3 id="常用命令："><a href="#常用命令：" class="headerlink" title="常用命令："></a>常用命令：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 刷新服务</span><br><span class="line">sudo systemctl deamon-reload</span><br><span class="line"># 允许开机启动</span><br><span class="line">sudo systemctl enable frpc.service</span><br><span class="line"># 运行服务</span><br><span class="line">sudo systemctl start frpc.service</span><br><span class="line"># 查看状态</span><br><span class="line">sudo systemctl status frpc.service</span><br></pre></td></tr></table></figure><p>注意：服务器端把frpc改为frps。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200806092148.png" alt="服务器端成功启动frp"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200806092324.png" alt="树莓派端成功启动frp"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200806092526.png" alt="远程ssh成功"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images20200805220453.png" alt="成功！树莓派在家里，我在外面也能访问啦！"></p><h3 id="附：树莓派4Bfrp设置开机自动启动失败解决方案"><a href="#附：树莓派4Bfrp设置开机自动启动失败解决方案" class="headerlink" title="附：树莓派4Bfrp设置开机自动启动失败解决方案"></a>附：树莓派4Bfrp设置开机自动启动失败解决方案</h3><p>一般教程都是教大家使用Systemctl来设置开机自动启动的，但是用Systemctl来给树莓派设置开机自启的话，我出现unreachable错误，一直需要手动启动才能成功。<br>如果树莓派不在自己边上，这个frp功能不是相当于废掉了么，所以探寻一下解决方案。</p><p>谷歌了一圈，发现unreachable就是路由表里没这个项，路由表里没这个项是因为没联网，没联网是因为联网服务还没起它就起了。</p><p>解决方案是延迟启动20s-30s，下面是我的配置情况，供参考。</p><p>目前自己使用的方法：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=frpc Service</span><br><span class="line">daemonAfter=network.target syslog.target</span><br><span class="line">Wants=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">User=root</span><br><span class="line">Type=simple</span><br><span class="line">ExecStartPre=/bin/sleep 20.  # Debian下应该都有这个问题,目前我是延迟启动解决的就是sleep 20秒 然后启动frpc就没问题，至少10秒</span><br><span class="line">ExecStart=/var/frp/frp_0.33.0_linux_arm/frpc -c /var/frp/frp_0.33.0_linux_arm/frpc.ini</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 树莓派 </tag>
            
            <tag> Raspberrypi </tag>
            
            <tag> FRP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【保姆级教程】树莓派入门,没有网线？没有显示器？一样可以玩转树莓派！</title>
      <link href="/archives/raspberrypi-starting/"/>
      <url>/archives/raspberrypi-starting/</url>
      
        <content type="html"><![CDATA[<p>从入职到现在，也发过好几篇关于树莓派的项目了（基本都是翻译国外小哥的…）自己却从来没有真正用过树莓派，感觉有点说不过去，昨天发现kiki有一个闲置的树莓派，决定拿过来捣腾捣腾。</p><p>好歹自己之前折腾魔法上网，买过服务器，偷偷学了点Linux的基础命令，而树莓派系统基于Linux，想着应该不难。</p><p>不过我手头的装备有限，只有kiki提供的一块裸板和一根Android Tpye C口的数据线，外加一个读卡器，上面有一张32G的SD卡。没有网线、没有Micro HDMI线。</p><p>网上教程繁多，有的太复杂不适合小白，有的又太过简单跳过了好多步骤，对小白不友好。</p><p>下面是自己捣鼓了两个小时，终于成功用电脑连接上树莓派的记录！</p><p>保姆级教程！</p><h3 id="装备清单"><a href="#装备清单" class="headerlink" title="装备清单"></a>装备清单</h3><ul><li>树莓派4B </li><li>TYPE C 线</li><li>SD卡 32G</li><li>读卡器</li><li><del>显示器</del></li><li><del>Micro HDMI 线</del></li><li><del>网线</del></li></ul><blockquote><p><strong>PS：</strong></p><p>有HDMI线的话，配一个USB口的鼠标，直接连接上显示器，一步一步操作更简单！</p></blockquote><h3 id="下载系统"><a href="#下载系统" class="headerlink" title="下载系统"></a>下载系统</h3><h4 id="1、下载最新的树莓派镜像系统"><a href="#1、下载最新的树莓派镜像系统" class="headerlink" title="1、下载最新的树莓派镜像系统"></a>1、下载最新的树莓派镜像系统</h4><p>官方提供的操作系统是 <code>Raspbian</code>，这是 <code>Debian</code> 系统的定制版。</p><p><a href="https://www.raspberrypi.org/downloads/">官网下载地址</a></p><p><img src="https://imgkr.cn-bj.ufileos.com/9b8d1020-16c9-448d-a023-f8ff4d77111a.png"></p><p>官方还提供一个安装器 <code>NOOBS</code>，通过它来安装 <code>Raspbian</code>，相对简单一点。不过我没有显示器，用这个就搞不了了。</p><p><img src="https://imgkr.cn-bj.ufileos.com/0b5f34ae-a9c9-4acd-9779-db947c76c106.png"></p><p>Lite版本是最小化安装，没有桌面环境；</p><p>Desktop版本则带有桌面；</p><p>Desktop and recommended software版本还带有推荐软件，但比较大。</p><p>我图方便，选了最后一个版本，点<code>Download ZIP</code>按钮下载压缩包并解压，得到扩展名为<code>.img</code>的系统镜像文件。</p><p>下载解压之后，得到一个文件夹，里面有IMG文件类型的镜像。</p><h4 id="2、下载内存卡格式化工具（专门格式化内存卡的工具）"><a href="#2、下载内存卡格式化工具（专门格式化内存卡的工具）" class="headerlink" title="2、下载内存卡格式化工具（专门格式化内存卡的工具）"></a>2、下载内存卡格式化工具（专门格式化内存卡的工具）</h4><p><a href="https://link.zhihu.com/?target=http://pan.baidu.com/s/1pLi0hL5">内存卡格式化工具</a></p><p>先格式化内存卡。</p><p>直接操作格式化，不需要设置参数都是默认的。</p><p><strong>步骤</strong>：解压得到一个内存卡格式化工具名称为：<code>SDFormatter.exe</code></p><p>插上读卡器，选择格式化SD卡（格式化为FAT32），得到了一张完全空白的内存卡。</p><p><img src="https://imgkr.cn-bj.ufileos.com/62ec8028-bf4f-412c-a0d3-acb36dc0ac75.png"></p><h4 id="3、下载烧录工具-镜像烧录到系统的工具"><a href="#3、下载烧录工具-镜像烧录到系统的工具" class="headerlink" title="3、下载烧录工具(镜像烧录到系统的工具)"></a>3、下载烧录工具(镜像烧录到系统的工具)</h4><p> <a href="https://link.zhihu.com/?target=http://pan.baidu.com/s/1c113hbq">烧录工具</a></p><p> 解压后得到工具：<code>Win32DiskImager.exe</code></p><p> 打开文件，得到界面如下：</p><p><img src="https://imgkr.cn-bj.ufileos.com/2887bbc2-86a9-4444-af4f-e1265a2fec8c.png"></p><p>浏览选取解压好的文件镜像位置（为img类型文件）选取，检查内存卡盘是否正确，无误后选择写入，进入写入流程中等待，注意，这边我们不要关闭或取消！</p><p>写好成功后会提升已经写入OK！（写入后系统会自动在内存卡分区系统，剩余几十MB属正常情况，因写入镜像内存卡里的系统会自动分区，分成几个Linux区，windows 只识别五十M的FAT32分区，所以只有几十MB。）</p><p>OK后，将写好的SD卡插入树莓派主板 (注意：写好系统的内存卡是插在板子背面的插拔卡槽那里)</p><h3 id="配置WIFI"><a href="#配置WIFI" class="headerlink" title="配置WIFI"></a>配置WIFI</h3><p>由于我没有额外的显示器嘛，鼠标键盘也没有，甚至没有额外的网线…..</p><p><img src="https://imgkr.cn-bj.ufileos.com/fe81cbfc-a6c6-43ef-b7df-85bbc9a1251b.png"></p><p>考虑到树莓派4B是可以连WiFi的，所以想着是不是可以直接用WIFI的方式连接到树莓派上。</p><p>于是，求助百度。</p><p>得知需要先在SD卡上配置好WIFI。</p><p>首先在SD卡的根目录下添加一个名为 <code>wpa_supplicant.conf</code>的文件，然后在该文件内添加以下的内容：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev</span><br><span class="line">network=&#123;</span><br><span class="line">  ssid=&quot;WIFI名&quot;</span><br><span class="line">  psk=&quot;WIFI密码&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>插入SD卡启动树莓派就能直接连接到WIFI网络了（切记树莓派现时只支持802.11.n的WIFI标准所以只能连接<code>2.4G</code>网络，所以需要确保所连接的是<code>2.4</code>G的通道而不是<code>5G</code>的。</p><h4 id="修正："><a href="#修正：" class="headerlink" title="修正："></a>修正：</h4><p>由于5GWiFi所使用的频率比较特殊，各个国家对于允许使用的信道有较大的差异。</p><p>对于频段的限制是通过软件实现的，因此我们设置WiFi地区来修改可以连接的频段。</p><p>自己这边查询到我们国家允许连接的频段仅有149-165一共5个，为了能稳定连接到WIFI，我们可以先连接<code>2.4G</code>网络</p><p><img src="https://imgkr.cn-bj.ufileos.com/192f8c8a-76c0-46d2-b869-0e769ff65a9b.png"></p><h3 id="启用SSH"><a href="#启用SSH" class="headerlink" title="启用SSH"></a>启用SSH</h3><p><code>Raspbian</code>默认情况下是将SSH服务关闭的。开启SSH的方法很简单，在树莓派的官网上也有介绍，只要在新建一个名为<code>ssh</code>文件到SD的根目录就能完成。</p><h4 id="【Windows用户】"><a href="#【Windows用户】" class="headerlink" title="【Windows用户】"></a>【Windows用户】</h4><p>新建的是文件，并且确保去掉后缀名。而不是新建SSH的文件夹。</p><p><img src="https://imgkr.cn-bj.ufileos.com/c583d932-460c-47aa-857d-831a7f973353.png"></p><h4 id="【Mac用户】"><a href="#【Mac用户】" class="headerlink" title="【Mac用户】"></a>【Mac用户】</h4><p>有一点值得注意，有时文件删除了扩展名，但是不为人知的原因还是TXT，如下图所示：</p><p><img src="https://imgkr.cn-bj.ufileos.com/021aefa2-4b40-49ca-9731-c757214de0ba.png"></p><p>所以，推荐一个方法创建无扩展名的空文件。</p><p>打开<code>“文本编辑”</code>这个自带软件，左边选中你的<code>boot</code>文件夹，然后点击<code>新建文稿</code></p><p><img src="https://imgkr.cn-bj.ufileos.com/c902561a-2298-4468-929c-41f385844906.png"></p><p>直接按<code>Command＋S</code></p><p><img src="https://imgkr.cn-bj.ufileos.com/a3d9e40f-1bfb-4a26-8074-7d82f0cd238d.png"></p><p>把未命名改为<code>ssh</code>，直接点击储存，即可得到无扩展名的空文件并放入指定位置,</p><p>之后推出TF卡，放入树莓派，就可以上电啦。</p><p><strong>上面是网上推荐的方法。</strong></p><p>我自己直接使用终端，<code>cd</code>到<code>boot</code>文件夹下，</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">touch ssh</span><br></pre></td></tr></table></figure><p>也可以成功创建。</p><h3 id="查找IP"><a href="#查找IP" class="headerlink" title="查找IP"></a>查找IP</h3><p>配置好SD卡之后，把SD卡插入树莓派，接入电源就能正常启动了。</p><p>要想连接到树莓派首先要找它的IP地址。我使用的TP-LINK路由器，可以登陆到路由器上直接看到对应的IP。</p><p>也可以通过其他一些<a href="https://github.com/angryip/ipscan/releases">IP扫描工具</a>找到对应的IP。（我用的Mac上，还装了<a href="https://adoptopenjdk.net/">JDK</a>才能使用。）</p><p>当然也可以用系统自带的<code>arp -a</code>来查找。</p><p>一般会有<code>raspberry</code>字样。</p><h3 id="连接树莓派"><a href="#连接树莓派" class="headerlink" title="连接树莓派"></a>连接树莓派</h3><p>知道了树莓派的IP，接下来就好操作啦。</p><h4 id="【Windows用户】-1"><a href="#【Windows用户】-1" class="headerlink" title="【Windows用户】"></a>【Windows用户】</h4><p>在这里可以<a href="www.baidu.com">Download PuTTY</a>。</p><p>安装好之后打开PuTTY，输入上一步找到的IP地址就可以连进去。默认的用户名是<code>pi</code>，默认密码是<code>raspberry</code>,</p><p><img src="https://imgkr.cn-bj.ufileos.com/0a152e96-6270-417f-8289-411f175e5d50.png"></p><p><img src="https://imgkr.cn-bj.ufileos.com/094c0621-00c1-479e-9c30-0de9d1b1b501.png"></p><h4 id="【Mac用户】-1"><a href="#【Mac用户】-1" class="headerlink" title="【Mac用户】"></a>【Mac用户】</h4><p>Mac用户可以使用终端，终端自带SSH，非常方便</p><h3 id="让树莓派图形化显示"><a href="#让树莓派图形化显示" class="headerlink" title="让树莓派图形化显示"></a>让树莓派图形化显示</h3><p>使用PuTTY连接到树莓派上，就可以开始安装<code>VNCServer</code>, 从而使用界面了。可以直接使用命令来安装你的<code>VNCServer</code>。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install tightvncserver</span><br></pre></td></tr></table></figure><p>成功安装以后，就可以在终端中输入<code>vncserver</code>来启动你的远程界面服务器。</p><p>登陆时会提输入vncserver的密码，输入确认以后会看见类似下面的内容。这样vncserver就成功启动了。</p><p><img src="https://imgkr.cn-bj.ufileos.com/7320076d-9f04-4d1c-8b55-3041c03da0ba.png"></p><p>可以从这里下载<a href="https://www.realvnc.com/en/connect/download/viewer/">VNC Viewer</a></p><p>下载好以后，在VNC Viewer中输入树莓派的IP，以及刚才设置好的密码，登陆到树莓派上。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">192.168.1.10:1   #比如这样的</span><br></pre></td></tr></table></figure><p><img src="https://imgkr.cn-bj.ufileos.com/d7475530-cc8e-42b2-a6b0-8b6a727cc395.png"></p><p><img src="https://imgkr.cn-bj.ufileos.com/e9985efb-6b5c-4c50-a60e-9fb1ae0ea1f4.png"></p><p>熟悉的图形化界面出现了！！！</p><p>先开个百度试一试：</p><p><img src="https://imgkr.cn-bj.ufileos.com/ec045f44-0992-4152-a3d4-86e3c1e46d9a.png"></p><p>再开个社区：</p><p><img src="https://imgkr.cn-bj.ufileos.com/5a6be744-e306-45be-80cc-b701dc331ef6.png"></p><p>发现不能输入中文，百度一下怎么解决。</p><p><img src="https://imgkr.cn-bj.ufileos.com/c97a8323-64dd-48a1-855c-947b4f6396f8.png"></p><h4 id="中文输入法安装"><a href="#中文输入法安装" class="headerlink" title="中文输入法安装"></a>中文输入法安装</h4><p>1.进入桌面,点击左上角的终端。</p><p>2.输入命令:<code>sudo apt-get install scim-pinyin</code>,稍等一下,输入<code>y</code>。</p><p>3.等待它安装好了,无提示就是安装好了,点击左上的树莓。</p><p>4.选择关机,选择<code>reboot</code>。</p><p>5.重启之后,打开一个浏览器,按键盘【Ctrl+space】那么即可切换到中文输入法了的。</p><p>完工！，可以开始玩耍起来了！</p><p>刷网页的时候明显感觉有点卡顿，不过编程、写文档没啥问题，这也是VNC的不足的地方。不过总比没有强多了！（回到公司，拿上Mini HDMI线接到显示器上，发现流畅的一比！）</p><h3 id="如果有网线？"><a href="#如果有网线？" class="headerlink" title="如果有网线？"></a>如果有网线？</h3><h4 id="通过网线直连路由器来实现SSH"><a href="#通过网线直连路由器来实现SSH" class="headerlink" title="通过网线直连路由器来实现SSH"></a>通过网线直连路由器来实现SSH</h4><p>用网线把树莓派和路由器连接起来，然后上电，接着…</p><h5 id="【Mac用户】-2"><a href="#【Mac用户】-2" class="headerlink" title="【Mac用户】"></a>【Mac用户】</h5><p>可以使用终端，终端自带SSH，非常方便！</p><h5 id="【Windows用户】-2"><a href="#【Windows用户】-2" class="headerlink" title="【Windows用户】"></a>【Windows用户】</h5><p>推荐使用PuTTY，</p><p><a href="http://shumeipai.nxez.com/2013/09/07/using-putty-to-log-in-to-the-raspberry-pie.html">下载地址</a>及<a href="(http://shumeipai.nxez.com/2013/09/07/using-putty-to-log-in-to-the-raspberry-pie.html)">使用方法</a>：</p><p>如果不知道IP地址，可以使用下面的命令连接（推荐，简单方便）：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh pi@raspberrypi.local</span><br></pre></td></tr></table></figure><p>这个命令的含义是：使用SSH方式连接 用<code>pi</code>账户登录 设备<code>hostname</code>为<code>raspberrypi </code>在本局域网中。</p><p>也可以通过路由器（如果是智能路由器，例如小米路由器，用手机app就可以查看，也算是超级方便）查看树莓派的IP地址之后就可以用下面命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh pi@X.X.X.X</span><br></pre></td></tr></table></figure><p>这条命令的含义和上面一个差不多，只是略有变化：使用SSH方式连接，用<code>pi</code>账户登录目标设备IP地址。</p><p>第一次连接会出现验证，输入<code>yes</code>后按回车就好。</p><p>之后会提示输入密码。</p><p>咱们的默认账户是：<code>pi</code>，</p><p>pi账户的默认密码是：<code>raspberry</code>。</p><p>输入密码时没有任何反应，并不是电脑或者键盘坏了，只是Linux为了安全性，在输入密码时什么都不显示罢了（想当初，我不知道这件事的时候，差点把键盘摔了）</p><p>之后看见绿色的命令行就成功连接树莓派了！</p><p><img src="https://imgkr.cn-bj.ufileos.com/2b41b773-5757-4120-8a44-8689b9a876d4.png"></p><p>连接之后，就可以设置Wi-Fi啦，方法和最上面的一样。毕竟总是插着网线也不方便嘛。</p><h5 id="⚠️注意Nano编辑器使用："><a href="#⚠️注意Nano编辑器使用：" class="headerlink" title="⚠️注意Nano编辑器使用："></a>⚠️注意Nano编辑器使用：</h5><p>按<code>Ctrl＋O</code>之后<code>Enter</code>保存，按<code>Ctrl＋X</code>退出nano编辑器。</p><blockquote><p>P.S. 即使你是用的是Mac进行的SSH，这里依然是使用Ctrl而不是Command</p></blockquote><p>接着输入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo reboot</span><br></pre></td></tr></table></figure><p>重启树莓派，之后你就可以拔掉网线使用Wi-Fi连接了，SSH方式依旧同上面一致。</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p>1、<a href="http://sonicguo.com/2019/Initialize-RaspBerry-3-with-wifi/">如何启用WIFI进行树莓派的首次连接</a></p><p>2、<a href="https://www.jianshu.com/p/cf35fb2afabc">树莓派折腾记#1：安装Raspbian Buster系统及基础配置</a></p><p>3、<a href="https://www.pisugar.net/20190715/">树莓派更换pip为国内源</a></p><p>4、<a href="http://www.ruanyifeng.com/blog/2017/06/raspberry-pi-tutorial.html">树莓派新手入门教程</a></p><p>5、<a href="https://zhuanlan.zhihu.com/p/33228611">树莓派3代入门资料及安装教程</a></p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树莓派 </tag>
            
            <tag> Raspberrypi </tag>
            
            <tag> DF创客社区 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>推荐几个比较给力的网站，看看有没有你喜欢的</title>
      <link href="/archives/websites/"/>
      <url>/archives/websites/</url>
      
        <content type="html"><![CDATA[<h2 id="1、电子书大全"><a href="#1、电子书大全" class="headerlink" title="1、电子书大全"></a>1、电子书大全</h2><ul><li><a href="https://epubw.com/">https://epubw.com/</a></li><li>免翻墙</li></ul><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com758dfb16-70e1-4cc2-9482-60508223ad39.png).png"></p><h2 id="消除背景"><a href="#消除背景" class="headerlink" title="消除背景"></a>消除背景</h2><ul><li><a href="https://www.remove.bg/zh">https://www.remove.bg/zh</a></li></ul><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com7c7cf8f4-e1a9-4190-98cb-567d55c8747b.png).png"></p><h2 id="临时邮箱"><a href="#临时邮箱" class="headerlink" title="临时邮箱"></a>临时邮箱</h2><ul><li><a href="http://linshiyouxiang.net/">http://linshiyouxiang.net/</a></li></ul><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.comce1e56b5-8696-49b9-9eac-582baf22aa28.png).png" alt="![](httpsimgkr.cn-bj.ufileos.comce1e56b5-8696-49b9-9eac-582baf22aa28.png)"></p><h2 id="在线短信验证码接收码平台"><a href="#在线短信验证码接收码平台" class="headerlink" title="在线短信验证码接收码平台"></a>在线短信验证码接收码平台</h2><ul><li><a href="https://www.yinsiduanxin.com/">https://www.yinsiduanxin.com/</a></li></ul><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.comc1746b69-b912-40a4-a851-3423a9d36400.png).png"></p><h2 id="图片放大无损失"><a href="#图片放大无损失" class="headerlink" title="图片放大无损失"></a>图片放大无损失</h2><ul><li><a href="http://waifu2x.udp.jp/">http://waifu2x.udp.jp/</a></li><li>小翻墙</li></ul><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.comdf8a5678-e342-433d-861d-2350e9ca853c.png).png"></p><h2 id="AI人工智能图片放大"><a href="#AI人工智能图片放大" class="headerlink" title="AI人工智能图片放大"></a>AI人工智能图片放大</h2><ul><li><a href="https://bigjpg.com/">https://bigjpg.com/</a></li></ul><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com10f9e5d3-79a6-47f2-b33d-20a1abcf1ff5.png).png"></p><h2 id="搞定设计-在线PS"><a href="#搞定设计-在线PS" class="headerlink" title="搞定设计 在线PS"></a>搞定设计 在线PS</h2><ul><li><a href="https://www.uupoop.com/">https://www.uupoop.com/</a></li></ul><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.comad054283-1bba-44ed-adf4-d67f2927db4d.png).png"></p><h2 id="今日热榜"><a href="#今日热榜" class="headerlink" title="今日热榜"></a>今日热榜</h2><ul><li><a href="https://tophub.today/">https://tophub.today/</a></li></ul><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpscdn.jsdelivr.netghRalstonLiuVsImageimages![](httpsimgkr.cn-bj.ufileos.comb560aff3-df49-4371-a9fc-e096a00de292.png).png).png"></p><h2 id="萝卜工坊-手写体"><a href="#萝卜工坊-手写体" class="headerlink" title="萝卜工坊 手写体"></a>萝卜工坊 手写体</h2><ul><li><a href="http://beautifulcarrot.com/">http://beautifulcarrot.com/</a></li></ul><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200805143556.png"></p><h2 id="伪造截图"><a href="#伪造截图" class="headerlink" title="伪造截图"></a>伪造截图</h2><ul><li><a href="https://fakes.netlify.app/">https://fakes.netlify.app/</a></li></ul><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.coma2fbafe0-d72e-481d-abc4-0d786cfa8ce8.png).png"></p><h2 id="片头动画设计"><a href="#片头动画设计" class="headerlink" title="片头动画设计"></a>片头动画设计</h2><ul><li><a href="https://panzoid.com/">https://panzoid.com/</a></li><li>小翻墙</li></ul><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.comb9b13f69-1518-48c5-97d7-9c566c441ac4.png).png"></p><h2 id="字体商用免费"><a href="#字体商用免费" class="headerlink" title="字体商用免费"></a>字体商用免费</h2><ul><li><a href="https://www.zitijia.com/">https://www.zitijia.com/</a></li></ul><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.combca68557-4831-41a1-bc12-42552782c643.png).png"></p><h2 id="P站-二次元"><a href="#P站-二次元" class="headerlink" title="P站  二次元"></a>P站  二次元</h2><ul><li><a href="https://www.pixiv.net/">https://www.pixiv.net/</a></li><li>翻墙</li></ul><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.comf1acd69d-10ee-48a2-a252-1316686bf1d7.png).png"></p><h2 id="论文-免费下载"><a href="#论文-免费下载" class="headerlink" title="论文 免费下载"></a>论文 免费下载</h2><ul><li><a href="https://www.cn-ki.net/">https://www.cn-ki.net/</a></li></ul><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.comdf392f3b-44ea-449d-9629-0bfa0d3bda58.png).png"></p><h2 id="安卓投屏"><a href="#安卓投屏" class="headerlink" title="安卓投屏"></a>安卓投屏</h2><ul><li><a href="http://web.airdroid.com/">http://web.airdroid.com/</a></li></ul><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com1043efee-f7b2-4c34-b53a-c902a07c3dfe.png).png"></p><h2 id="广告人的网址导航"><a href="#广告人的网址导航" class="headerlink" title="广告人的网址导航"></a>广告人的网址导航</h2><ul><li><p><a href="https://www.addog.vip/">https://www.addog.vip/</a></p></li><li><p>啥都有</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpscdn.jsdelivr.netghRalstonLiuVsImageimages![](httpsimgkr.cn-bj.ufileos.comb556a11c-f7d5-4730-a78e-8d1f9011b5c2.png).png).png"></p><h2 id="创客人的导航"><a href="#创客人的导航" class="headerlink" title="创客人的导航"></a>创客人的导航</h2><ul><li><a href="https://mc.dfrobot.com.cn/links/">https://mc.dfrobot.com.cn/links/</a></li></ul><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.comb556a11c-f7d5-4730-a78e-8d1f9011b5c2.png).png"></p><h2 id="听音乐"><a href="#听音乐" class="headerlink" title="听音乐"></a>听音乐</h2><ul><li><p><a href="https://acgcool.com/mikutap/">https://acgcool.com/mikutap/</a></p></li><li><p>放松</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com483a4fe1-6cf0-4835-abf8-b8ad312aba2f.png).png"></p><h2 id="域名价格、淘便宜域名"><a href="#域名价格、淘便宜域名" class="headerlink" title="域名价格、淘便宜域名"></a>域名价格、淘便宜域名</h2><ul><li><p><a href="https://www.chaomi.cc/">https://www.chaomi.cc/</a></p></li><li><p><a href="https://www.ename.com/">https://www.ename.com/</a></p></li><li><p><a href="https://www.22.cn/">https://www.22.cn/</a></p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com8cbaf9cc-c7b5-455a-b628-4489a1a01dcc.png).png"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200805144013.png"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.coma5b6fbee-d450-46ca-ad53-eb6d386b920e.png).png"></p><p>更多优秀网站，可以访问 <a href="https://links.aipicu.com/">https://links.aipicu.com</a><br>如果你有好的网站推荐，也欢迎告诉我们！~</p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站推荐 </tag>
            
            <tag> 常用工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一个极简且美观的多用户网盘程序：Veno-File-Manager-V3-4-8</title>
      <link href="/archives/veno-file-manager/"/>
      <url>/archives/veno-file-manager/</url>
      
        <content type="html"><![CDATA[<p>说明：<code>Veno File Manager</code>估计很多人用过，极简而且功能强大，安装也简单，只要支持<code>PHP</code>即可，无需数据库，只是需要花钱购买，目前官方更新到了<code>V3.4.5</code>，这里就分享由<a href="https://www.topide.com/">顶点网</a>破解的<code>Veno File Manager V3.4.5</code>程序，博主用了下，相比较以前老版本，更新还是挺多的，详细介绍可以查看官网→<a href="https://filemanager.veno.it/">传送门</a>。</p><blockquote><p>提示：目前最新版为V3.4.8，已在文中分享出来。</p></blockquote><h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200805152529.png"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.come870a6e8-2db9-49dc-b184-318dc44404bf.png).png"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200805152557.png"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200805152614.png"></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>所需环境：<code>Nginx/Apache</code>、<code>PHP</code><br>程序下载：<a href="https://www.moerats.com/usr/down/veno-file-manager-v3.4.5.zip">veno-file-manager-v3.4.5.zip</a>、<a href="https://www.moerats.com/usr/down/veno-file-manager-v3.4.8.zip">veno-file-manager-v3.4.8.zip</a></p><p>先搭建好环境，然后将源码上传到网站根目录即可，默认登录管理的用户名是<code>admin</code>密码是<code>password</code>，进后台后记得设置一下语言和更改密码。</p><p>如果你过于小白，还不会搭建环境，可以参考该建站教程→<a href="https://www.moerats.com/archives/778/">传送门</a>。</p><blockquote><p>文章转载自<a href="https://www.moerats.com/archives/781/">Rat’s Blog</a> 转载请注明出处！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
            <tag> 网盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【从0开始搭建个人博客】自建服务器，搭建一个typecho博客</title>
      <link href="/archives/typecho-building/"/>
      <url>/archives/typecho-building/</url>
      
        <content type="html"><![CDATA[<p>上一篇讲了域名购买和服务器的选择。</p><p>现在，服务器买好了，域名也完成了解析，是时候开始主线任务——自建博客了。</p><p>首先我们先在服务上面安装一个<a href="https://www.bt.cn/">宝塔面板</a>，对于linux基础不是很好的小伙伴们来说，这是一个很友好的图形化管理服务器的软件。</p><blockquote><p>面板的安装教程可以参见官网，这里不展开。一行代码，2分钟能装好。</p></blockquote><p>下载好宝塔面板之后，第一次登陆会让你下载LNMP或者LAMP,建议下载LNMP就行。（这里会稍微花一点时间）</p><p>装好之后，我们进入正题。</p><p>点击“软件商店”，</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.comb54c0ff1-29cc-4a24-977b-a4b537e8a222.png).png"></p><p>选择“宝塔一键部署源码”</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com2b8ced19-91a7-47cb-8c38-34cad324dff2.png).png"></p><p>在博客一栏下找到typecho,点击“一键部署”</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.comd61ded03-4ae3-48a2-9799-b5ada868a870.png).png"></p><p>这个时候，填入你希望以后别人访问你博客输入的域名，建议<code>blog.xxxx.com</code>这种，或者直接填<code>xxxx.com</code>也行。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com6a07a1b9-948d-4357-891c-3f24251b7e86.png).png"></p><p>记得选择创建数据库，php版本的话默认就行。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200805141223.png" alt="成功安装"></p><p>点击访问站点，进行typecho安装。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com43391fcd-09af-454b-8728-fd62fd632a14.png).png"></p><p>数据库名、数据库用户名、密码就是刚刚弹出的那个小窗里的内容。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.comed35a6a4-5cd6-418b-8d4e-bc5457ef77c5.png).png"></p><p>用户名、登陆密码、邮箱，是指你博客登陆的信息。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.comaeeebaab-ed4b-4240-be45-2cbe8add8efe.png).png"></p><p>确认安装，很快就能安装好了。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com85e39cac-40f5-47f6-95c7-213f4c0ab1bb.png).png"></p><p>点击直接开始使用。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com8c82425a-df7d-49dd-99c7-23a5513c204d.png).png"></p><p>现在进入的就是你的博客后台，点击“网站”。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.comd135157f-fdb1-4f9a-a96d-43b4ceecdced.png).png"></p><p>ok，博客已经搭建完成了，大家都可以通过你这个域名访问到你的网站了。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.come5c5172c-2a04-441f-9256-be9656891796.png).png"></p><h3 id="设置SSL和伪静态"><a href="#设置SSL和伪静态" class="headerlink" title="设置SSL和伪静态"></a>设置SSL和伪静态</h3><p>注意到现在我们的网站域名前面有个“不安全”的标识，把网站复制下来会发现，我们是http前缀的，并不是https。https是数据加密传输的，安全性会高一些，下面我们利用宝塔面板来给网站安装免费的SSL证书，让网站变成https，前面加上个小锁。</p><p>点击宝塔面板左侧的“网站”，选择我们自己这个域名的文件夹，点击“设置”。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200805141503.png"></p><p>这边的域名管理，如果你是直接用一级域名的，可以在填入一个<br>www开头的二级域名，这样，XXX.com和<a href="http://www.xxx.com指向的都是你的博客了./">www.XXX.com指向的都是你的博客了。</a></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.come210923a-a5ba-44a1-bb00-1fd1098ea98f.png).png"></p><p>我们找到SSL，点第二个“let’s encrypt”,打上勾，点击申请</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com85c720a4-3aa7-49de-b5ee-e4e05b622ec1.png).png"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com968e2fad-4829-4f78-bb55-b6798aa4cd42.png).png"></p><p>申请好了，再打开右上角的“强制https”</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com3b662f7c-4377-4cdd-92da-45fa23cd1945.png).png"></p><p>这边还有一个知识点，把站点修改为伪静态。</p><h4 id="小知识：伪静态有利于搜索引擎抓取你的博客页面，利于seo，可以让更多的人看到你的博客。"><a href="#小知识：伪静态有利于搜索引擎抓取你的博客页面，利于seo，可以让更多的人看到你的博客。" class="headerlink" title="小知识：伪静态有利于搜索引擎抓取你的博客页面，利于seo，可以让更多的人看到你的博客。"></a>小知识：伪静态有利于搜索引擎抓取你的博客页面，利于seo，可以让更多的人看到你的博客。</h4><p>找到<code>typecho</code>，保存就行。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.coma2222654-d8ce-4a25-9221-b6a875688b7d.png).png"></p><p>完成之后，到我们博客的后台,按提示修改一下站点链接。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com83567d57-8031-40ac-9a11-47871c506347.png).png"></p><p>打开“设置”——“永久链接”，</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com4e09e1a8-bb01-43a3-a7cb-afbaee9bd1fa.png).png"></p><p>“启用”——“默认风格”(这里几种都可以尝试，不过因为后面主题的原因，我们选第一个)，保存。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com864234c4-4afa-45d6-83f6-dc1a0f850eca.png).png"></p><p>出现这个提示，点选上。继续保存。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com03bb7d5d-6fb5-474f-b8e2-229ba0e1c70e.png).png"></p><p>再次进入网站，小锁图标出现了。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com3fcaa568-cbae-45a7-8d84-ab92b50ee19d.png).png"></p><p>点击我们默认生成的“hello word”文章，发现网址后缀变成了<code>archives/1/</code></p><h5 id="小知识：这里的1就是文章的cid，后面会用到。"><a href="#小知识：这里的1就是文章的cid，后面会用到。" class="headerlink" title="小知识：这里的1就是文章的cid，后面会用到。"></a>小知识：这里的1就是文章的cid，后面会用到。</h5><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.comd338ebaa-e12f-4544-bd9a-f59c416d369d.png).png"></p><h3 id="更换默认主题"><a href="#更换默认主题" class="headerlink" title="更换默认主题"></a>更换默认主题</h3><p>回到后台控制台首页，点击更改外观。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com7e534f6a-95d6-4a89-8ece-449ce2e9d5eb.png).png"></p><p>因为我们没有安装任何新的主题，所以只显示了一个默认主题</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com5c0fda63-2fa6-4796-b983-fa7ac76a6e0e.png).png"></p><p>回到宝塔面板，进入我们网址的根目录。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com4d9a9a4c-213a-46ba-b6b8-0e6bcc4dc6c9.png).png"></p><p>找到<code>themes</code>主题文件夹。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com4abffd35-50f2-46f0-a3b4-dc63e2fc9721.png).png"></p><p>上传给大家准备的新的主题模板（可以在公众号后台回复“Akina”获取）</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com32f9e184-4eef-4d70-9a26-36925afcb883.png).png"></p><p>点击”解压”,按下面几幅图操作：</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com654e78ef-4fe2-4a3d-a08f-e393ea63b63d.png).png"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.comcb58fae4-d7f3-4183-8952-4641b180df8f.png).png"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![%E5%89%AA%E5%88%87](httpsimgkr.cn-bj.ufileos.com7c8614a7-8ac6-4bf7-8771-8516996e9227.png).png" alt="剪切"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![%E7%B2%98%E8%B4%B4](httpsimgkr.cn-bj.ufileos.com8bc9df10-b02c-4531-8b08-b78b0fb10f0d.png).png" alt="粘贴"></p><p>回到后台，再点击“更改外观”</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com4aa3d729-ecd8-4e41-8440-e6c888c11966.png).png"></p><p>新主题已经出现了。新主题的具体使用方法，可以参考主题开发同学的博客——<a href="https://zhebk.cn/Web/Akina.html">纸盒博客</a></p><p>这里，我们点击“启用”。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com2ffc894c-67d6-408d-93f9-3d733468f3a4.png).png"></p><p>再访问我们的网址，主题已经更改成功了！</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.comaa2ac33b-17d7-4800-b06f-faca6eb95ec0.png).png"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.comfe389104-e942-4c46-8810-f9a6ae1bb7b0.png).png"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.comf7cae3ff-0f8c-46d6-9967-b379d1fed283.png).png"></p><h3 id="设置评论回复邮件提醒"><a href="#设置评论回复邮件提醒" class="headerlink" title="设置评论回复邮件提醒"></a>设置评论回复邮件提醒</h3><p>找到博客里的“hello world”文章，打开，点击“查看沙发”</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.comf8c9bedf-90f1-4874-a382-a475dbe12437.png).png"></p><p>这边就是评论区了。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.comb84de64a-8276-443e-bfd7-d25e25d07a17.png).png"></p><p>如果博客有人给我们留言，我们是无法第一时间知道并回复的，所以，寒泥大佬写了一个可以邮件提醒的插件（和主题文件一样整理放在公众号里了，回复“邮件评论插件”获取。）</p><p>一样的方法，找到<code>plugins</code>文件夹，上传——解压。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com35e89f6c-06b3-40c9-9dd1-fe28e9e0d6f6.png).png"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com6d7f75eb-2baa-4109-aa18-930ae578b193.png).png"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com6d5368d0-b70d-485a-9b40-6429d3b6f031.png).png"></p><p>回到后台，插件这栏已经有刚刚安装的<code>Comment2Mail</code>了。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.coma3b7bba4-955c-4abf-a5e9-742eaaaad2ba.png).png"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![%E7%82%B9%E5%87%BB%E5%90%AF%E7%94%A8](httpsimgkr.cn-bj.ufileos.com181cc4b2-06a3-4202-b202-17f0b62bcd12.png).png" alt="点击启用"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![%E7%82%B9%E5%87%BB%E8%AE%BE%E7%BD%AE](httpsimgkr.cn-bj.ufileos.com0ef0ff26-130f-4aea-8992-50b3f736a8a4.png).png" alt="点击设置"></p><p>进入设置页面，其他的都比较简单，按照图里内容来填写就行</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com6668caac-5837-40d6-9ffa-97261c4bc47f.png).png"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com6682ecd3-e659-4972-89ba-e67cbfa3666b.png).png"></p><p>这边我用的是qq邮箱，其他邮箱的话，自己可以百度一下。</p><p>这边的SMTP 登录密码，不是我们qq邮箱的密码，而是需要我们到邮箱里获取。</p><p>进入qq邮箱。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.comf0533f8c-ba65-4218-b8af-86a9064b65a9.png).png"></p><p>点击“账户”</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.comcac43a71-c5bd-4a1a-ac91-2fcb5ca44621.png).png"></p><p>开启IMAP</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.comdd03a3f5-d74a-4d62-a024-121723fd90bc.png).png"></p><p>这边根据提示发送短信之后，你就会收到这个邮箱的SMTP 登录密码了。</p><p>填到插件里头保存即可。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com1a9ca049-3c1b-4ba5-bd70-a2cc6a9622a2.png).png"></p><p>PS:大家可以用小号留言测试一下插件是否正常工作。一般来说都是没有问题的。</p><h3 id="主题简单设置"><a href="#主题简单设置" class="headerlink" title="主题简单设置"></a>主题简单设置</h3><p>在博客后台，点击“更改外观”——“设置外观”</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.comb2d960c0-d40a-4e25-b096-d0343d44588d.png).png"></p><p>里面按照提示设置自己的内容就行，更具体的使用方法，可以参考主题开发同学的博客——<a href="https://zhebk.cn/Web/Akina.html">纸盒博客</a></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.comceb56b14-114a-4bd4-b31d-0a3155d0a6e9.png).png"></p><p>唯一注意的一点，这边的cid就是前面提到的网址后面的那个数字:</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.comc3fabbb2-7b48-4247-8b71-44b8b032dd45.png).png"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200805142746.png"></p><p>点击——“撰写”——“撰写文章”，开始正式写自己的第一篇文章把。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com4d9a5b5f-b409-47b0-b901-531f3b3e3c66.png).png"></p><p>文章还可以设置密码噢。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com0cc28424-b10e-4a3e-914a-7e45b741cf93.png).png"></p><h2 id="Arina主题"><a href="#Arina主题" class="headerlink" title="Arina主题"></a>Arina主题</h2><p><a id="download_link" class="download" href="https://pan.baidu.com/s/1JHUYnj_-Q8iHAbKLdxg64A  " rel="external" target="_blank" title="下载地址">  <span><i class="iconfont icon-download"></i>点击下载</span></a></p><p>密码:swdp</p><h2 id="邮件评论插件"><a href="#邮件评论插件" class="headerlink" title="邮件评论插件"></a>邮件评论插件</h2><p><a id="download_link" class="download" href="https://pan.baidu.com/s/1TrCyXfIaV3JESGlkvM3dtQ  " rel="external" target="_blank" title="下载地址">  <span><i class="iconfont icon-download"></i>点击下载</span></a> </p><p>密码:i7hv</p>]]></content>
      
      
      <categories>
          
          <category> 网站搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客搭建 </tag>
            
            <tag> Typecho </tag>
            
            <tag> 宝塔面板 </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 个人博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CDN加速-隐藏真实IP-复活IP</title>
      <link href="/archives/cdn-ip/"/>
      <url>/archives/cdn-ip/</url>
      
        <content type="html"><![CDATA[<p>CDN一词相信很多朋友都不会陌生，网上也经常会看到相关报道。或许大部分人都知道CDN加速可以提升网站的打开速度及用户下载资源的速度，而同时也有不少朋友还不清楚CDN是什么？有什么用途？它是如何实现加速的呢？下面为大家整理了一些通俗易懂的知识点。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com16c4b630-0d21-4da2-8668-5eb21255b103.png).png" alt="![](httpsimgkr.cn-bj.ufileos.com16c4b630-0d21-4da2-8668-5eb21255b103.png)"></p><h2 id="CDN是什么"><a href="#CDN是什么" class="headerlink" title="CDN是什么"></a>CDN是什么</h2><p>CDN的全称：<strong>CONTENT DELIVERY NETWORK</strong>，即<strong>内容分发网络</strong>。其基本思路是尽可能避开互联网上有可能影响数据传输速度和稳定性的瓶颈和环节，使内容传输的更快、更稳定。</p><p>通过在网络各处放置节点服务器所构成的在现有的互联网基础之上的一层智能虚拟网络，CDN系统能够实时地根据网络流量和各节点的连接、负载状况以及到用户的距离和响应时间等综合信息，将用户的请求重新导向离用户最近的服务节点上。</p><p><strong>“第一公里”</strong>，在网络用语是指万维网流量向用户传送的第一个出口，是网站服务器接入互联网的链路所能提供的带宽。这个带宽决定了一个网站能为用户提供的访问速度和并发访问量。如果业务繁忙，用户的访问数越多，拥塞越严重，网站会在最需要向用户提供服务时失去用户。</p><p>而CDN的存在就是为了解决<strong>“第一公里”</strong>传输过程中所出现的数据堵塞问题。</p><p>CDN，其实说白了就是帮助网站加速，CDN将网站内容分发到在它的节点上，用户访问网站内容时，CDN会将为用户分配最近的节点，通过此方式来缩短用户与储存网站内容的主机之间的距离，使内容传输的更快、更稳定。</p><blockquote><p>通俗的讲就是你购物平台买了一个手机，平台会将你的买的手机分配到离你最近的收货地开仓发货，因此你可以在迅速穿越“中间一公里”，在 “最后一公里”内最先收到手机。</p></blockquote><p>其目的是使用户可就近取得所需内容，解决Internet网络拥挤的状况，提高用户访问网站的响应速度。</p><h2 id="为了让大家更直观的理解CDN的含义，下面用通俗的实例介绍"><a href="#为了让大家更直观的理解CDN的含义，下面用通俗的实例介绍" class="headerlink" title="为了让大家更直观的理解CDN的含义，下面用通俗的实例介绍"></a>为了让大家更直观的理解CDN的含义，下面用通俗的实例介绍</h2><p>以前在网上购物，买家付款之后，卖家确认发货。如果卖家是在北京，买家是在成都，那么要把货从北京发到成都，可能需要3-5天的时间。</p><p>但是，如果卖家在成都设立了一个物流转运中心，先把自己的货提前囤到当地的仓库，那么现在如果有成都的买家拍了一件商品，卖家不需要从北京发货，而是可以直接从成都的仓库发货，可能就是一天的时候，买家就能收到货。</p><p>京东，大家不陌生吧，为什么京东自营或者物流的速度那么快，就是如此。物流体系非常强，服务及时到位！</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.coma14bff0b-688b-4205-aa72-1edde49fa9dc.png).png" alt="![](httpsimgkr.cn-bj.ufileos.coma14bff0b-688b-4205-aa72-1edde49fa9dc.png)"></p><h2 id="PULL-ZONE和PUSH-ZONE"><a href="#PULL-ZONE和PUSH-ZONE" class="headerlink" title="PULL ZONE和PUSH ZONE"></a>PULL ZONE和PUSH ZONE</h2><p><strong>PULL ZONE</strong>：首先在服务器上缓存静态内容，然后再从POP分发给访问者。</p><p><strong>PUSH ZONE</strong>：首先存在CDN上，然后内容同步到所有的POP上。</p><p>上面的内容可以都看不懂，但是只要理解下面这句话就好：</p><p>CDN就是，起到内容分发的作用，你的内容被复制到各个地区的不同服务器上面，这个距离离访问者所在地越近越好！</p><p>现在很多大的服务商，其实都已经在世界的很多地方搭建了自己的服务器，所以现在你利用CDN不再只是把内容简单的存在自己的服务器上，而是被复制到多个不同地区的服务器上。</p><p>下面这张图片会让你直观的理解使用CDN和不使用CDN的差别：</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200805135356.png" alt="20200805135356"></p><h2 id="对于一个网站来说，使用CDN有什么好处呢？"><a href="#对于一个网站来说，使用CDN有什么好处呢？" class="headerlink" title="对于一个网站来说，使用CDN有什么好处呢？"></a>对于一个网站来说，使用CDN有什么好处呢？</h2><h3 id="第一：有利于GOOGLE排名"><a href="#第一：有利于GOOGLE排名" class="headerlink" title="第一：有利于GOOGLE排名"></a>第一：有利于GOOGLE排名</h3><p>GOOGLE已经把网站的打开速度当做一个重要的指标，所以网站的打开速度会影响排名。</p><p>使用CDN之后，网站由于打开速度变快，这样可以减少跳出率，也可以增加用户对网站的友好体验。</p><h3 id="第二：有利于转化"><a href="#第二：有利于转化" class="headerlink" title="第二：有利于转化"></a>第二：有利于转化</h3><p>毫无疑问，用户访问网站的时间提高了，跳出率减少了，当然会利于网站的转化率和销售量。</p><p>避免了不同运营商线路所导致的访问降低的尴尬问题。</p><p>如果企业的网站服务器在北京，运营商是电信，在广东的联通用户访问企业网站时，因为跨地区，跨运营商的原因，网站打开速度就会比北京当地的电信客户访问速度慢很多，很容易造成这个企业的客户流失。</p><p>谁都没有耐心去等一个需要10秒才能打开的网站，这样的网站一开始就不友好，更别想提高网站的转化率了。</p><h3 id="第三：优化服务器性能-网站不容易宕机"><a href="#第三：优化服务器性能-网站不容易宕机" class="headerlink" title="第三：优化服务器性能 网站不容易宕机"></a>第三：优化服务器性能 网站不容易宕机</h3><p>如果网站没有使用CDN，如果在同一时间涌入大量的流量，那么网站就会很可能会宕机。</p><p>如果一个网站的服务器性能比较差，承载能力有限，有时面临突发流量，容易直接导致服务器崩溃，网站打不开，尤其是电商网站在节日搞活动期间，访问量集中，这种情况网站打不开，销售额必然大大流失。</p><p>使用CDN之后，可以减少网站宕机的情况，同时你的网站可以接收更多的流量。</p><h3 id="第四：减少托管成本"><a href="#第四：减少托管成本" class="headerlink" title="第四：减少托管成本"></a>第四：减少托管成本</h3><p>很多网站使用VPS来托管网站，而很多VPS是有带宽限制的，使用CDN能减少成本。</p><p>使用CDN之后你的文件是被存储到不同的服务器上，所以能减少你因为带宽而产生的费用。</p><h3 id="第五：提升网站的安全稳定性-隐藏真实IP-复活被墙Ip"><a href="#第五：提升网站的安全稳定性-隐藏真实IP-复活被墙Ip" class="headerlink" title="第五：提升网站的安全稳定性 隐藏真实IP 复活被墙Ip"></a>第五：提升网站的安全稳定性 隐藏真实IP 复活被墙Ip</h3><p>CDN因为节点分散，网络攻击者下手比较困难，而且攻击一个节点，仅仅是影响一个节点的缓存访问而已，并且CDN会自动的启用另一个节点，如果CDN服务节点数量足够多，那么攻击者需要的流量包成本就会呈阶梯级增加，这样攻击成本也会随之而提高了。使用伪装域名搭建的梯子，域名托管到CDN中转平台后，实际访问的IP已经由CDN优化分配，所以真实IP已经被隐藏，不会被墙。IP被墙以后，把解析的域名托管到CDN平台，在访问域名的时候，CDN分配的服务器IP已经不是原来的IP，所以能够正常继续访问，从而复活被墙的IP。</p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CDN </tag>
            
            <tag> IP </tag>
            
            <tag> 内容分发网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浅谈BGP与IPLC</title>
      <link href="/archives/bgp-iplc/"/>
      <url>/archives/bgp-iplc/</url>
      
        <content type="html"><![CDATA[<h2 id="网络的线路："><a href="#网络的线路：" class="headerlink" title="网络的线路："></a>网络的线路：</h2><p>网络线路分为公网和内网，99%用户使用的是走公网线路，并且大都采用合租的方式，一般都是hkt（香港电讯），这样合租会有堵车的情况不如独享线路。节点多的一般都是合租线路，节点少的一般都是独享，因为独享成本高。合租线路一般是不限流量或者流量很多而且不限带宽，所以在高峰期会堵车，不稳定。</p><h2 id="如何判断是不是走内网的线路？什么是IPLC？"><a href="#如何判断是不是走内网的线路？什么是IPLC？" class="headerlink" title="如何判断是不是走内网的线路？什么是IPLC？"></a>如何判断是不是走内网的线路？什么是IPLC？</h2><p>一般来说，走IPLC的就是内网线路了。</p><p>IPLC是”International Private Leased Circuit” 的缩写，即“国际私用出租线路”，是指用户专用的跨国的数据综合信息业务的通信线路。通俗地说，也就是指传统的专线，用于互连两点之间的通信，只不过IPLC是跨国跨境的而已。</p><p>其原理就是一台服务器在国外，一台服务器在国内，所有的数据都是通过这两台服务器内网传输的。其优势就是不过GFW（所以不会存在被封的情况），因为是内网，防火墙检测不到，所以我们在国内访问的就是国内的服务器，然后国内的服务器走内网传输到国外的服务器帮我们上网，优势就是快，稳定，不会受高峰期影响，但是成本高，基本上是按照流量收费的，所以这种是限制用户流量的。</p><h2 id="什么是BGP？"><a href="#什么是BGP？" class="headerlink" title="什么是BGP？"></a>什么是BGP？</h2><p>BGP(边界网关协议)主要用于互联网AS(自治系统)之间的互联，BGP的最主要功能在于控制路由的传播和选择最好的路由。</p><p>其原理也是国内一台服务器，国外一台服务器，但是与IPLC不同的是走的是公网。但是使用了BGP以后对线路的优化是特别明显的，但是给线路增加BGP服务器是花钱的，这也就增加了成本，所以一般不会给香港这么近的节点增加BGP服务器，而IPLC天生就是两台服务器，就是自带中转的，所以访问起来更快。一般有BGP的都会标识出来，因为这也是一个卖点。</p><p>中国联通 、中国电信、中国移动、教育网和一些大的民营IDC运营商都具有AS号，全国各大网络运营商多数都是通过BGP协议与自身的AS号来实现多线互联的。使用BGP协议互联后，网络运营商的所有骨干路由设备将会判断到IDC机房IP段的最佳路由，以保证不同网络运营商用户的高速访问。</p><h2 id="优势分析"><a href="#优势分析" class="headerlink" title="优势分析"></a>优势分析</h2><p>BGP机房在一定程度上解决了各用户南北互通的问题，提高了用户的访问速度，用BGP协议实现的单IP双线路的效果。该方案就是通过BGP协议，直接将其中一条线路的IP映射另外一条线路IP上，当访客浏览你的网站时，会自动根据实际情况选择访问速度最快的线路，这样各个运营商的用户都能达到最佳的访问速度。</p><p>1． 租用的服务器只有一个IP，用户的访问路线是由路由器根据访客的实际访问速度选择最优访问路径，来选择访问的。而且不占用任何的服务器资源。服务器的上行和下行都是有路由器来选择最佳的路线，所以这样能够真正的做到各运营商之间都达到最佳的访问速度实现真正的BGP效果。</p><p>2． 由于BGP协议本身具有冗余备份、消除环路的特点，所以当你托管或者租用的服务器出现故障时，能实现互相备份。同时自动切换到其它线路去，并且不影响正常访问。</p><p>3． BGP服务器租用还有较好的拓展性和融合性，可以实现和其它运营商互联互通，轻松实现单IP多线路，做到所有互联运营商的用户访问都很快。</p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线路 </tag>
            
            <tag> BGP </tag>
            
            <tag> IPLC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【服务器能干什么】搭建一个短网址平台，可以查看数据详情！</title>
      <link href="/archives/yourls-building/"/>
      <url>/archives/yourls-building/</url>
      
        <content type="html"><![CDATA[<p>昨天在YouTube上看到又一个搭建自己短网址的视频教程，用的是开源的polr，但是按照步骤一步步搭建下来，最后一步都会出现</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Whoops, looks like something went wrong</span><br></pre></td></tr></table></figure><p>百度、谷歌查了一圈也没找到有效的解决方法。（顺带说一下，查出来<strong>很多的文章都是出自同一个作者，国内有的人就是瞎转载，自己根本没有尝试过，一个人错了，转载的人也跟着一起错，完全在浪费搜索者的时间，这个现象在百度、CSDN现尤为严重</strong>，谷歌相对好一点）</p><p>折腾了一晚上，换了两台服务器，查看官方文档，尝试了几种方法也没解决问题，心里非常不舒服。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com946151b6-b011-4069-80e4-a0336da41bf9.png).png"></p><p>考虑到polr也很久没有更新了，自己的能力也不足以解决遇到的bug，而工作原因，确实对点击链接的统计有需求，我开始寻找别的解决方案。</p><p>然后找到了这个——<strong>YOURLS</strong></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.comb5643b73-015d-452c-a0bc-276ad253fca6.png).png"></p><p>官方文档：<a href="https://yourls.org/">https://yourls.org</a></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/ImageRepo/img/20200726125305.gif"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/ImageRepo/img/20200726125254.gif"></p><h2 id="简单介绍"><a href="#简单介绍" class="headerlink" title="简单介绍"></a>简单介绍</h2><h3 id="什么是YOURLS？"><a href="#什么是YOURLS？" class="headerlink" title="什么是YOURLS？"></a>什么是YOURLS？</h3><p>YOURLS stands for Your Own URL Shortener. It is a small set of PHP scripts that will allow you to run your own URL shortening service (a la TinyURL or Bitly).</p><p>Running your own URL shortener is fun, geeky and useful: you own your data and don’t depend on third-party services. It’s also a great way to add branding to your short URLs, instead of using the same public URL shortener everyone uses.</p><p>大概意思就是说YOURLS，这个基于PHP开发的短链接服务，适用于私有，且不依赖第三方公共短链接生成。你只需要有一定的耐心和一个短域名，就可以感受到短链接生成的乐趣。</p><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><ul><li>免费而且开源</li><li>使用具有两面性：私有的（仅自己使用）或者生成公共的（每个人都可以创建短链接，适用于Intranet）</li><li>顺序排列(从1到n)或自定义URL关键字</li><li>十分方便的类书签模式记录，可轻松缩短和共享链接</li><li>出色的统计信息：历史点击报告，引荐来源跟踪，访问者地理位置</li><li>整洁的Ajaxed界面</li><li>出色的插件架构，可轻松实现新功能</li><li>支持开发人员API</li><li>全面的jsonp支持</li><li>安装十分友好</li><li>示例文件可创建您自己的公共界面等</li></ul><p>跟着官方文档和<a href="https://www.gitiu.com/article/bt-yourls/">Pluto Tz</a>提供的文章，结合自己的生产环境，我终于成功搭建好了自己的短链接服务。</p><p>展示链接</p><p>下面是一步一步的安装记录。</p><h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><ul><li><p>系统Centos7</p></li><li><p>宝塔面板（LNMP）</p><ul><li>Nginx 1.16.1</li><li>MySQL 5.5.62</li><li>PHP 7.0</li></ul></li></ul><h3 id="新建站点"><a href="#新建站点" class="headerlink" title="新建站点"></a>新建站点</h3><p>首先，打开宝塔面板，我们来添加一个已经解析好的网站。</p><p>安装数据库，php。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.comf6356b3f-9047-44b4-a1cd-952294d7ef94.png).png"></p><p>然后给域名申请一个SSL证书：</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200805135625.png" alt="20200805135625"></p><p>开启强制https：</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com799d08dd-8ea5-4449-b639-973fd1019429.png).png"></p><p>设置伪静态：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">  try_files $uri $uri/ /yourls-loader.php$is_args$args;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com6fb64789-072f-4e23-85c2-952e5b8dbef2.png).png"></p><h3 id="下载源码"><a href="#下载源码" class="headerlink" title="下载源码"></a>下载源码</h3><p>到github上下载最新版本：</p><p><a href="https://github.com/YOURLS/YOURLS/releases">https://github.com/YOURLS/YOURLS/releases</a></p><p>目前最新的是1.7.9</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com6836d2a4-9146-45a3-aaf3-de80064f7879.png).png"></p><p>选择下载（国内速度比较慢，不过好在文件不大，只有2.7M）</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com255411bf-ba22-4c82-ac0c-20baef2bdc56.png).png"></p><p>当然如果我们的服务器不在大陆的话，还可以用服务器来下载，速度会快很多。</p><p>方法如下：</p><p>打开网站根目录：</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com1305c999-c38f-4bf3-a271-424d76ff7e1a.png).png"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com6c90f85f-193c-4ea6-b2bb-18f195f29ff8.png).png"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com623e8e9e-b803-44aa-b647-8f14936dbbec.png).png"></p><p>下载好了之后，直接点解压：</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com9d159c9e-34d1-4046-9807-b963a2393d58.png).png"></p><p>打开<code>YOURLS-1.7.9</code>文件夹，全选里面的内容，粘贴到网站根目录：</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.comcf7093f8-4b18-4d20-929c-61b8d815bb2a.png).png"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com687322a6-0f0c-4385-bb90-e39909a50a42.png).png"></p><p>接下来打开目录<code>/user/</code>,把里面的<code>config-sample.php</code>改成<code>config.php</code>。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.comff78fb40-be2a-4dba-ba4a-33af05a692eb.png).png"></p><p>然后我们来编辑里面的内容：</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com4df47ffb-9c8e-4d0b-b5e1-3ff633422a6f.png).png"></p><p>打开之后是这样的：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">/* This is a sample config file.</span><br><span class="line"> * Edit this file with your own settings and save it as &quot;config.php&quot;</span><br><span class="line"> *</span><br><span class="line"> * IMPORTANT: edit and save this file as plain ASCII text, using a text editor, for instance TextEdit on Mac OS or</span><br><span class="line"> * Notepad on Windows. Make sure there is no character before the opening &lt;?php at the beginning of this file.</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> ** MySQL settings - You can get this info from your web host</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">/** MySQL database username */</span><br><span class="line">define( &#x27;YOURLS_DB_USER&#x27;, &#x27;your db user name&#x27; );</span><br><span class="line"></span><br><span class="line">/** MySQL database password */</span><br><span class="line">define( &#x27;YOURLS_DB_PASS&#x27;, &#x27;your db password&#x27; );</span><br><span class="line"></span><br><span class="line">/** The name of the database for YOURLS */</span><br><span class="line">define( &#x27;YOURLS_DB_NAME&#x27;, &#x27;yourls&#x27; );</span><br><span class="line"></span><br><span class="line">/** MySQL hostname.</span><br><span class="line"> ** If using a non standard port, specify it like &#x27;hostname:port&#x27;, eg. &#x27;localhost:9999&#x27; or &#x27;127.0.0.1:666&#x27; */</span><br><span class="line">define( &#x27;YOURLS_DB_HOST&#x27;, &#x27;localhost&#x27; );</span><br><span class="line"></span><br><span class="line">/** MySQL tables prefix */</span><br><span class="line">define( &#x27;YOURLS_DB_PREFIX&#x27;, &#x27;yourls_&#x27; );</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> ** Site options</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">/** YOURLS installation URL -- all lowercase, no trailing slash at the end.</span><br><span class="line"> ** If you define it to &quot;http://sho.rt&quot;, don&#x27;t use &quot;http://www.sho.rt&quot; in your browser (and vice-versa) */</span><br><span class="line">define( &#x27;YOURLS_SITE&#x27;, &#x27;http://your-own-domain-here.com&#x27; );</span><br><span class="line"></span><br><span class="line">/** Server timezone GMT offset */</span><br><span class="line">define( &#x27;YOURLS_HOURS_OFFSET&#x27;, 0 ); </span><br><span class="line"></span><br><span class="line">/** YOURLS language</span><br><span class="line"> ** Change this setting to use a translation file for your language, instead of the default English.</span><br><span class="line"> ** That translation file (a .mo file) must be installed in the user/language directory.</span><br><span class="line"> ** See http://yourls.org/translations for more information */</span><br><span class="line">define( &#x27;YOURLS_LANG&#x27;, &#x27;&#x27; ); </span><br><span class="line"></span><br><span class="line">/** Allow multiple short URLs for a same long URL</span><br><span class="line"> ** Set to true to have only one pair of shortURL/longURL (default YOURLS behavior)</span><br><span class="line"> ** Set to false to allow multiple short URLs pointing to the same long URL (bit.ly behavior) */</span><br><span class="line">define( &#x27;YOURLS_UNIQUE_URLS&#x27;, true );</span><br><span class="line"></span><br><span class="line">/** Private means the Admin area will be protected with login/pass as defined below.</span><br><span class="line"> ** Set to false for public usage (eg on a restricted intranet or for test setups)</span><br><span class="line"> ** Read http://yourls.org/privatepublic for more details if you&#x27;re unsure */</span><br><span class="line">define( &#x27;YOURLS_PRIVATE&#x27;, true );</span><br><span class="line"></span><br><span class="line">/** A random secret hash used to encrypt cookies. You don&#x27;t have to remember it, make it long and complicated. Hint: copy from http://yourls.org/cookie **/</span><br><span class="line">define( &#x27;YOURLS_COOKIEKEY&#x27;, &#x27;modify this text with something random&#x27; );</span><br><span class="line"></span><br><span class="line">/** Username(s) and password(s) allowed to access the site. Passwords either in plain text or as encrypted hashes</span><br><span class="line"> ** YOURLS will auto encrypt plain text passwords in this file</span><br><span class="line"> ** Read http://yourls.org/userpassword for more information */</span><br><span class="line">$yourls_user_passwords = array(</span><br><span class="line">&#x27;username&#x27; =&gt; &#x27;password&#x27;,</span><br><span class="line">// &#x27;username2&#x27; =&gt; &#x27;password2&#x27;,</span><br><span class="line">// You can have one or more &#x27;login&#x27;=&gt;&#x27;password&#x27; lines</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">/** Debug mode to output some internal information</span><br><span class="line"> ** Default is false for live site. Enable when coding or before submitting a new issue */</span><br><span class="line">define( &#x27;YOURLS_DEBUG&#x27;, false );</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> ** URL Shortening settings</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">/** URL shortening method: 36 or 62 */</span><br><span class="line">define( &#x27;YOURLS_URL_CONVERT&#x27;, 36 );</span><br><span class="line">/*</span><br><span class="line"> * 36: generates all lowercase keywords (ie: 13jkm)</span><br><span class="line"> * 62: generates mixed case keywords (ie: 13jKm or 13JKm)</span><br><span class="line"> * Stick to one setting. It&#x27;s best not to change after you&#x27;ve started creating links.</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">/** </span><br><span class="line">* Reserved keywords (so that generated URLs won&#x27;t match them)</span><br><span class="line">* Define here negative, unwanted or potentially misleading keywords.</span><br><span class="line">*/</span><br><span class="line">$yourls_reserved_URL = array(</span><br><span class="line">&#x27;porn&#x27;, &#x27;faggot&#x27;, &#x27;sex&#x27;, &#x27;nigger&#x27;, &#x27;fuck&#x27;, &#x27;cunt&#x27;, &#x27;dick&#x27;,</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> ** Personal settings would go after here.</span><br><span class="line"> */</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>下面一条一条来说明：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">define( &#x27;YOURLS_DB_USER&#x27;, &#x27;your db user name&#x27; );  # 数据库用户名</span><br><span class="line">define( &#x27;YOURLS_DB_PASS&#x27;, &#x27;your db password&#x27; );   # 数据库密码</span><br><span class="line">define( &#x27;YOURLS_DB_NAME&#x27;, &#x27;yourls&#x27; );   # 数据库名称</span><br><span class="line">define( &#x27;YOURLS_DB_HOST&#x27;, &#x27;localhost&#x27; );   # 不用改</span><br><span class="line"></span><br><span class="line">define( &#x27;YOURLS_DB_PREFIX&#x27;, &#x27;yourls_&#x27; ); # 不用改</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">define( &#x27;YOURLS_SITE&#x27;, &#x27;http://your-own-domain-here.com&#x27; ); # 你自己的域名 越短越好，比如我的loll.cc（再短的申请不到了。。。）短地址基于这个生成。</span><br><span class="line">define( &#x27;YOURLS_HOURS_OFFSET&#x27;, 0 );　　　# 时区偏移 改成 8　</span><br><span class="line">define( &#x27;YOURLS_LANG&#x27;, &#x27;&#x27; );  # 语言设置，默认是英文，后面我们改成中文版本，填&#x27;zh_CN&#x27;</span><br><span class="line">define( &#x27;YOURLS_UNIQUE_URLS&#x27;, true );　　　# 不用改，短地址是否唯一　</span><br><span class="line">define( &#x27;YOURLS_PRIVATE&#x27;, true );        # 不用改，是否私有，如果私有的，则进行api调用生成短地址时需要传递用户名和密码</span><br><span class="line">define( &#x27;YOURLS_COOKIEKEY&#x27;, &#x27;modify this text with something random&#x27; );    # 点击http://yourls.org/cookie 复制里面的密钥,这个不用记住的。</span><br><span class="line">&#x27;username&#x27; =&gt; &#x27;password&#x27;,  # 用户名=&gt;密码  可填多个  登录成功后这里的明文密码会被加密，这里默认是没有的，我们为了安全加上一个，比如用户名是&#x27;admin&#x27;，密码是&#x27;123456&#x27;</span><br><span class="line">define( &#x27;YOURLS_DEBUG&#x27;, false );  # 不用改,是否开启调试　　</span><br><span class="line">define( &#x27;YOURLS_URL_CONVERT&#x27;, 36 );     # 自己设置使用36进制 还是62进制  这个最好一开始设好不要修改，避免地址冲突，建议62进制</span><br><span class="line">$yourls_reserved_URL = array(                                              </span><br><span class="line">&#x27;porn&#x27;, &#x27;faggot&#x27;, &#x27;sex&#x27;, &#x27;nigger&#x27;, &#x27;fuck&#x27;, &#x27;cunt&#x27;, &#x27;dick&#x27;,</span><br><span class="line">);  # 排除这些敏感词汇，这些地址是不会生成的</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>首先是数据库的相关信息，由于我们创建网站的时候已经创建好了数据库，所以，可以在这边找到数据库的情况：</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com755ecce9-a1cb-447f-bcb2-ca763fa78dfe.png).png"></p><p>‘YOURLS_COOKIEKEY’的信息：</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com5f2a1bbb-6fff-4c0a-896d-9943b533fd54.png).png"></p><p>填完之后，保存。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.comeb59d994-48d7-48ff-9148-9ae7c218dbba.png).png"></p><p>下面我们来安装语言包（如果没改成’zh_CN’的话，自己想要用英文，这一步可以跳过）</p><p>语音包地址：</p><p><a href="https://github.com/ZvonimirSun/YOURLS-zh_CN">https://github.com/ZvonimirSun/YOURLS-zh_CN</a></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.comafe0d3bd-b9a8-4d0b-be7f-28821a299b5f.png).png"></p><p>作者已经停止更新了貌似，不过还可以用，有能力的同学也可以帮忙<a href="https://github.com/YOURLS/YOURLS/wiki/YOURLS-in-your-language">翻译</a>。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com4b7bf8a6-8106-47cb-8418-d6410dbf0f30.png).png"></p><p>语音包下载方法同上面讲过的，两种方法，自行选择。</p><p>我这里还是用服务器下载：</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com2000e3b7-78f3-4804-9514-d6b3a26c870f.png).png"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com14bbf325-e887-4069-bfed-a0edd6e41ce8.png).png"></p><p>同样，解压，然后把<code>/user/languages/YOURLS-zh_CN-1.7.3</code>的文件剪切出来：</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.comde351515-9e32-49f5-8558-2d3ebba7dbfb.png).png"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.comf63fc70a-ce5f-49eb-8c93-9c60b9a80ba8.png).png"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com9e1d9e99-70ef-42e9-bc4d-ebe9380fa482.png).png"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.comed48db8c-d886-4be8-8af5-e3b2baaeaf9f.png).png"></p><p>到这里应该基本上已经完成了，访问一下</p><p>浏览器 输入 https:&#x2F;&#x2F;域名&#x2F;admin。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com161aa178-452b-442e-ac56-459c41887f00.png).png"></p><p>报错了！！</p><p>观察网站，可能是域名路径的问题，我之前在</p><p><code>define( &#39;YOURLS_SITE&#39;, &#39;http://your-own-domain-here.com&#39; );</code></p><p>没有加<code>https://</code>,修改一下再看看：</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.comb56ceb1f-c32e-4bb7-8418-1945a15513d2.png).png"></p><p>ok!</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com383267ed-0ac3-40e4-a6bf-567908b1e728.png).png"></p><p>直接点击安装！</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com829fdb36-df8c-4fa8-9757-d10cdb8f5b03.png).png"></p><p>由于我们之前已经配置好的数据库等文件，所以这里直接显示完成了。</p><p>点击进入管理员页面，</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com97764f74-8289-4a8f-80de-685c12c042ff.png).png"></p><p>输入账号密码就可以访问啦！</p><p>这边我提供一个测试账号给大家测试一下，账号<code>admin</code>,密码<code>loll.cc</code>,后续会关掉，仅仅供测试用噢。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com4b53f46b-23cd-4c54-b855-f706921f99a3.png).png"></p><p>添加一个网址：</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpscdn.jsdelivr.netghRalstonLiuVsImageimages![](httpsimgkr.cn-bj.ufileos.com4b53f46b-23cd-4c54-b855-f706921f99a3.png).png).png"></p><p>压缩网址。</p><p>之后可以通过在短网址之后加上一个<code>+</code>号来查看数据情况。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com027dba24-0224-402a-8cda-bdab60e97667.png).png"></p><p>可以愉快地玩起来了！</p><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>这里是来自<a href="https://www.gitiu.com/article/bt-yourls/#toc-head-4">PlutoTz</a>博客的补充内容。</p><p>你可能遇到一些问题:</p><p>1、如果安装报错，或者不跳转，那有可能是你的php 或者 mysql 版本过低</p><p>2、短链接后面从1开始，很不爽，可以推荐用时间戳来生成</p><p>只需要修改 includes&#x2F;functions.php  272行左右</p><p>将 <code>$id = yourls_get_next_decimal(); </code>改为<code> $id = time();</code></p><blockquote><p>这样的话，后面链接会变长，而且不知道是bug还是什么原因，我想改回来改不回来，有需要的同学可以尝试一下。</p></blockquote><p>YOURLS还有很多插件，大家有兴趣可以再研究研究。</p><p>你可以使用官方自带的插件库：</p><p><a href="https://github.com/YOURLS/awesome-yourls#plugins">https://github.com/YOURLS/awesome-yourls#plugins</a></p><p>完结撒花。</p><p>感谢<a href="https://www.gitiu.com/">PlutoTz</a>写的非常详细的文档、感谢<a href="https://github.com/YOURLS">YOURLS</a>提供了这么棒的项目，当然还有后面的众多的开发人员。</p><p>开源，让世界更美好。</p>]]></content>
      
      
      <categories>
          
          <category> 宝塔面板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPS </tag>
            
            <tag> 服务器 </tag>
            
            <tag> YOURLS </tag>
            
            <tag> 短链接 </tag>
            
            <tag> YouTube </tag>
            
            <tag> 网站 </tag>
            
            <tag> 短网址 </tag>
            
            <tag> CSDN </tag>
            
            <tag> POLR </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【服务器、域名购买】Namesilo优惠码和域名解析教程（附带服务器购买推荐和注意事项）</title>
      <link href="/archives/namesilo/"/>
      <url>/archives/namesilo/</url>
      
        <content type="html"><![CDATA[<p>Namesilo是国外最大的ICANN认证域名提供商之一，以物美价廉的优势积累了不错的口碑。费用方面，其域名注册费用相较国内来说便宜不少，</p><span id="more"></span><p>拿阿里云万网对比：</p><p><code>.com</code>的域名，万网的注册费用是55元首年，续费69元每年；</p><p>Namesilo是8.99美元，按7的汇率，也就是63元每年，<strong>续费价格不变</strong>，<strong>续费价格不变！！续费价格不变！！！</strong></p><p>而且第一次注册还可以使用优惠码（优惠码及使用方法在下文），降低1美元。也就是说可降至56元。(之前我有买<code>.xyz</code>的域名，只要0.99美元，很香)</p><p>而且，Namesilo的注册购买也很方便。在国内域名商注册使用域名需要各种实名认证，比如万网，账户和域名都要单独各认证一次，比较麻烦。</p><p>而Namesilo完全没有这些步骤，直接注册购买了就能使用，不用那么麻烦。</p><p>给一张namesilo和其它公司的价格对比图。</p><p><img src="https://img.laoda.de/i/2023/01/28/f6redv-2.webp"></p><p>namesilo不仅价格优势明显，更重要的是：</p><p>1.没有隐藏费用，续订费用不会增加。</p><p>2.终身免费的WHOIS Guard。</p><p>3.后台管理方便。</p><p>4.高级别的安全防护，保护你的域名。</p><p>5.免费域名停放服务。</p><p>6.可以使用支付宝付款，甚至还可以使用比特币。</p><p>唯一要吐槽的就是页面的风格像是10年前的，好老，不过最近他们有计划更新了官网首页，后台还是很古老的界面……</p><p>下面来讲一下，如何在Namesilo注册购买域名。</p><h2 id="如何使用Namesilo优惠码购买域名？"><a href="#如何使用Namesilo优惠码购买域名？" class="headerlink" title="如何使用Namesilo优惠码购买域名？"></a>如何使用Namesilo优惠码购买域名？</h2><p>1.首先访问<a href="https://www.namesilo.com/?rid=c562892jb">namesilo官网</a>，如下图所示。</p><p><img src="https://img.laoda.de/i/2023/01/28/f6tcnw-2.webp" alt="namesilo官网"></p><p>2.输入你想购买的域名，绿色是还能注册，橙色是已被人注册不能再注册，选好后点蓝色按钮。</p><p><img src="https://img.laoda.de/i/2023/01/28/f6ugkb-2.webp" alt="域名搜索结果"></p><p>3.接下来会有一个Premium DNS的购买选项，价格是11.79美元&#x2F;年，我自己的几个域名都没有购买，直接选的No, I don’t want to protect my domain，如下图所示:</p><p><img src="https://img.laoda.de/i/2023/01/28/f6vme9-2.webp" alt="Namesilo Premium DNS"></p><p>4.输入namesilo优惠码：<code>laodade</code>,可以优惠1美元(2021-12-11更新，大家可以在评论区反馈是否有用～)。需要注意的是，同一账号多次购买域名，优惠码会无效。</p><p><img src="https://img.laoda.de/i/2023/01/28/f75kj0-2.webp" alt="namesilo购物车信息"></p><p>5.接下来填写账号信息，填个大概就行，只用填带星号的，邮箱请用常用邮箱。</p><p><img src="https://img.laoda.de/i/2023/01/28/f7807t-2.webp" alt="namesilo用户注册信息"></p><p>6，选择支付宝付款，支付宝那里的邮箱是指你的联系邮箱，随便填一个你常用的邮箱就可以了。</p><p><img src="https://img.laoda.de/i/2023/01/28/f79gt0-2.webp" alt="付款方式"></p><p>7.购买成功后，你会收到官方发来的邮件。</p><p><img src="https://img.laoda.de/i/2023/01/28/f7ajn5-2.webp" alt="namesilo支付宝付款邮件"></p><h2 id="Namesilo域名解析教程"><a href="#Namesilo域名解析教程" class="headerlink" title="Namesilo域名解析教程"></a>Namesilo域名解析教程</h2><p>域名购买完，如果你想自己建个网站，接下来有两件事情要做。</p><ul><li>购买主机</li><li>域名解析</li></ul><h3 id="购买主机"><a href="#购买主机" class="headerlink" title="购买主机"></a>购买主机</h3><p>国内主机其实<a href="https://cloud.tencent.com/act/cps/redirect?redirect=10477&cps_key=923faf881f7f4f42d8bb30f7a5c32918">腾讯云</a>和<a href="https://www.aliyun.com/product/swas?aly_as=eyCJm2Mxc&source=5176.11533457&userCode=fxujv7w7&type=copy">阿里云</a>都可以(建站的话用轻量应用服务器就好)，学生还可以有一年的优惠，腾讯是1个月10元，120元1年；阿里是1个月9.5元，不过阿里云的我始终选不到114元&#x2F;年的是怎么回事……</p><p>阿里云——<a href="https://promotion.aliyun.com/ntms/act/campus2018.html?aly_as=CTrwf6IbE&source=5176.11533457&userCode=fxujv7w7&type=copy">云翼计划</a></p><p><img src="https://img.laoda.de/i/2023/01/28/f7bzkb-2.webp"></p><p>腾讯云——<a href="https://cloud.tencent.com/act/cps/redirect?redirect=10004&cps_key=923faf881f7f4f42d8bb30f7a5c32918">云+校园</a></p><p><img src="https://img.laoda.de/i/2023/01/28/f7d179-2.webp"></p><p>国内服务器最大的优势就是延迟比较低，不过需要备案，而且后续价格会贵一点。</p><p>国外主机的优点是不用备案，但是访问的延迟会高一些。</p><p>服务器的话推荐<a href="https://www.vultr.com/?ref=8338420">vultr</a>，按时间计费，不用的话摧毁服务器就不扣费了，最便宜的应该是5美元一个月的。</p><p>第一次注册充值10美元会有50美元的赠送体验，你可以在这一个月里面随便搭服务器，不过这50美元有效期只有这一个月……(一开始我还很激动)</p><p>对了，也可以选择上面<a href="https://www.aliyun.com/product/swas?aly_as=eyCJm2Mxc&source=5176.11533457&userCode=fxujv7w7&type=copy">香港的阿里云轻量服务器</a>，也不用备案。</p><h5 id="冷知识："><a href="#冷知识：" class="headerlink" title="冷知识："></a>冷知识：</h5><p>1.备案备的是服务器，不是域名。</p><p>2.只有服务器在中国大陆才需要备案。备案分ISP备案和公安备案，理论上两者都需要（至少ISP备案必须），不然你买的服务器搭建网站会无法访问。</p><h3 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h3><h4 id="修改A记录"><a href="#修改A记录" class="headerlink" title="修改A记录"></a>修改A记录</h4><p>首先登陆namesilo账号，右上角点Manage My Domains，</p><p><img src="https://img.laoda.de/i/2023/01/28/f7eehw-2.webp"></p><p>然后点下图标记的蓝色圆球。</p><p><img src="https://img.laoda.de/i/2023/01/28/f7fx70-2.webp"></p><p>下图里的记录是namesilo的默认记录，全部删除就行，后面我们再来添加新的A记录。</p><p><img src="https://img.laoda.de/i/2023/01/28/f7h90t-2.webp" alt="namesilo默认A记录"></p><p>新加一条<code>A</code>记录，<code>TTL</code>用默认的就行，如下图所示。</p><p><img src="https://img.laoda.de/i/2023/01/28/f7r259-2.webp"></p><p><img src="https://img.laoda.de/i/2023/01/28/f7upfg-2.webp" alt="namesilo A记录添加"></p><p>然后再新加一条<code>A</code>记录，<code>HOSTNAME</code>填你随意想填写的内容，IP地址还是填服务器的公网IP地址。</p><p>这边的话就是二级域名的概念了。</p><p>假定你注册的域名是<code>baidu.com</code>,这里HOSTNAME你填了<code>blog</code>，那就表示，<code>blog.baidu.com</code>这个二级域名解析到了你服务器上。</p><p>你的一级域名是<code>baidu.com</code>。</p><p><img src="https://img.laoda.de/i/2023/01/28/f7y4bl-2.webp"></p><p>不过一般大家都把注册的域名和www带头的域名默认成同一个。</p><p>比如说，我们输入<code>baidu.com</code>和<code>www.baidu.com</code>,都跳转到了同一个网页。<br>要实现这个效果的话，我们需要在这里添加一个CNAME的记录，</p><p>大家照葫芦画瓢设置就ok。</p><p>至于如何检测域名解析是否生效？很简单，</p><p>Windows用户的话，<code>win+R</code>,输入<code>cmd</code>，回车，小黑窗里输入<code>ping 你的一级域名或者二级域名</code></p><p><img src="https://img.laoda.de/i/2023/01/28/f7zmfb-2.webp"></p><p>出现这个情况的话就表示已成功解析了。</p><p>Mac用户的话打开终端,</p><p><img src="https://img.laoda.de/i/2023/01/28/f81a1d-2.webp"></p><p>也是一样<code>ping</code>，想退出的话按<code>control+c</code>可以退出</p><p><img src="https://img.laoda.de/i/2023/01/28/f82h0z-2.webp"></p><p>直接关闭窗口也行。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>刚开始注册购买域名，可能对域名费用不太在乎。</p><p>但当你注册的域名越来越多时，你会发现域名费用也是一大笔钱。所以我们要选一家性价比最高的域名注册商。国外的话，Namesilo就是最佳选择。</p><p>Namesilo域名价格全网最低，使用简单，安全级别高，后台管理方便，还有优惠码和免费的域名隐私保护，无论是新注册域名，还是域名续费都很划算。</p><p>服务器的话，如果准备长期使用，而且网站访问的用户主要是国内人群，还是建议弄一台腾讯云或者阿里云的服务器，老老实实走备案，更稳定一些（我备过案，其实一个月不到的时间就能搞定）当然你得发布健康的内容，不然查你水表，请你喝茶。</p><p>买的服务如果不是大陆的话，就不用备案了，但也不要为所欲为，毕竟人还在国内，真要查你一样能找到你。怎么说呢，相对自由一些吧。</p>]]></content>
      
      
      <categories>
          
          <category> 网站搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 域名购买 </tag>
            
            <tag> 服务器 </tag>
            
            <tag> Namesilo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>将Hexo部署到阿里云轻量服务器（保姆级教程）</title>
      <link href="/archives/hexo-building/"/>
      <url>/archives/hexo-building/</url>
      
        <content type="html"><![CDATA[<p>将Hexo部署到阿里云轻量服务器（保姆级教程）</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com6853c0af-bfba-410a-b073-2437d72bf37e.png).png"></p><h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1 前言"></a>1 前言</h2><p>作为有梦想的，有追求的程序员，有一个自己的个人博客简直就是必须品。你可以选择wordpress这种平台，直接使用，在任何地方只要有网络就能写博客。还可以选择hexo这种静态博客，但是发文章就没有那么随心所欲了，要在你部署的电脑上写才行。</p><p>本人之前使用的是hexo+github pages这种方式搭建博客，简单方便，感兴趣的同学可以看我之前写的这篇文章：Hexo+github pages搭建个人独立网站，绑定域名全教程</p><p>由于github是在国外的，访问速度确实慢了一些，体验有些不好。正巧上学的时候用学生优惠价格购买了几年阿里云轻量服务器，闲着也是闲着，就用来部署hexo好了，加快访问速度。</p><p>因为我是先部署了github pages，所以git安装、NodeJs安装等等都已经实现了，还没安装的有需要可以看我上面那个教程链接。</p><p>在部署的过程中，看了网上很多教程，大多是抄来抄去的，看了很多篇照着做也没有成功过，所以这篇博文是综合网上很多篇博文，加上自己的探索写出来的。网上普遍没有贴图片，看着头大，为了照顾纯小白，我这里贴上图片，一步一步来，保姆级教程。</p><h2 id="2-环境介绍"><a href="#2-环境介绍" class="headerlink" title="2 环境介绍"></a>2 环境介绍</h2><p>我本地电脑安装的是win10(64)位。</p><p>服务器使用的是阿里云轻量服务器，配置是：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1核、2GB内存，系统盘 40GB SSD云盘</span><br></pre></td></tr></table></figure><p>操作系统是CentOS 7.3。</p><h2 id="3-本地环境部署"><a href="#3-本地环境部署" class="headerlink" title="3 本地环境部署"></a>3 本地环境部署</h2><p>这部分在我之前写的Hexo+github pages搭建个人独立网站，绑定域名全教程这里也有，为了方便我直接拿过来这边了。</p><h3 id="3-1-安装nodejs"><a href="#3-1-安装nodejs" class="headerlink" title="3.1 安装nodejs"></a>3.1 安装nodejs</h3><p>因为Hexo需要nodejs环境，因此需要先下载安装Nodejs。点击<a href="https://nodejs.org/en/">NodeJs官网</a>，下载最新版本。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.comc28d748e-0eab-4cbc-9446-d39ab7d44fbf.png).png"></p><p>下载好一直next，选择一个文件夹位置在一直next即可完成，这个步骤很简单，就不放图了。</p><h3 id="3-2-安装git"><a href="#3-2-安装git" class="headerlink" title="3.2 安装git"></a>3.2 安装git</h3><p>点击git官网，下载安装包。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com2aa9b19e-03f1-43ed-a693-5ff2d81cfb9c.png).png"></p><p>点击next，选择文件夹位置，然后一直next到底就行了，选择默认配置就好，默认配置会将环境变量配置好的，不需要搞得花里胡哨的。安装好后鼠标右击应该有下图这两个选项了，出现就代表安装成功了。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.comb9f70efc-a028-4238-aecc-7f81f252fce5.png).png"></p><h2 id="4-使用Hexo"><a href="#4-使用Hexo" class="headerlink" title="4 使用Hexo"></a>4 使用Hexo</h2><h3 id="4-1-安装Hexo"><a href="#4-1-安装Hexo" class="headerlink" title="4.1 安装Hexo"></a>4.1 安装Hexo</h3><p>上面环境搭建好之后，在桌面点击鼠标右键，点击 “Git Bash Here” ，输入以下两条命令。</p><blockquote><p>$ npm install -g hexo-cli</p></blockquote><p>提示：输入的时候不要输入 $ 了，因为命令行本来就已经有了。下载需要几分钟，请耐心等待一下。</p><p>可以在复制之后在git窗选择 Shift+Insert 粘贴。有一些警告WARN是不影响使用的，放心。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com83a20f90-2e83-4585-b45e-dcc617f10985.png).png"></p><h3 id="4-2-初始化Hexo"><a href="#4-2-初始化Hexo" class="headerlink" title="4.2 初始化Hexo"></a>4.2 初始化Hexo</h3><p>安装好Hexo之后，新建一个文件夹，如 E:\HEXO ，然后在该文件夹内鼠标右击，选择 “Git Bash Here” ，输入以下命令。</p><blockquote><p>$ hexo init</p></blockquote><p>稍等片刻即可完成，如图：</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com9b3d0770-9208-462d-80eb-906ac9f1a293.png).png"></p><p>文件结构如图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.comdf705cb3-7af0-4d04-b74e-97007e98428b.png).png"></p><p>scaffolds是模版文件夹，当你新建文章时，Hexo 会根据 scaffold 来建立文件。</p><p>source文件夹是存放用户资源的地方。</p><p>themes是主题文件夹，Hexo 会根据主题来生成静态页面，待会我们会更换成比较流行的nexT主题。</p><p>然后再输入命令行进行本地调试，即可看到初始效果啦~</p><blockquote><p>$ hexo s –debug</p></blockquote><p>访问<a href="http://localhost:4000/%E5%8D%B3%E5%8F%AF%E7%9C%8B%E5%88%B0%E6%95%88%E6%9E%9C%EF%BC%9A">http://localhost:4000/即可看到效果：</a></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200805145758.png"></p><h3 id="4-3-更换主题为NexT"><a href="#4-3-更换主题为NexT" class="headerlink" title="4.3 更换主题为NexT"></a>4.3 更换主题为NexT</h3><p>上面虽然本地可以调试成功了，但是默认的主题实在不是特别好看。你可以选择去官网选择自己喜欢的主题，官网主题链接<a href="https://hexo.io/themes/">https://hexo.io/themes/</a></p><p>本篇教程选择的是当前流行的NexT主题，这个主题是我感觉用过的最好的一个了。</p><h3 id="4-4-下载NexT主题"><a href="#4-4-下载NexT主题" class="headerlink" title="4.4 下载NexT主题"></a>4.4 下载NexT主题</h3><p>进入刚刚你创建的文件夹的themes里，比如我的 E:\HEXO\themes ，鼠标右击选择“Git Bash Here”输入以下两条命令中的一个：（这两个是一样的，只是有同学反应第一条命令不行，第二条就可以。）</p><blockquote><p>$ git clone <a href="mailto:&#103;&#x69;&#x74;&#x40;&#x67;&#105;&#x74;&#x68;&#x75;&#98;&#x2e;&#99;&#111;&#109;">&#103;&#x69;&#x74;&#x40;&#x67;&#105;&#x74;&#x68;&#x75;&#98;&#x2e;&#99;&#111;&#109;</a>:iissnan&#x2F;hexo-theme-next.git<br>$ git clone <a href="https://github.com/iissnan/hexo-theme-next">https://github.com/iissnan/hexo-theme-next</a></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200805145817.png"></p><p>此时 themes 文件夹便多了一个next主题的文件夹。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com62c0acd5-8e19-403c-8cb5-78e3d6014877.png).png"></p><h3 id="4-5-修改配置"><a href="#4-5-修改配置" class="headerlink" title="4.5 修改配置"></a>4.5 修改配置</h3><p>打开 E:\HEXO （你的hexo根目录）下的 _config.yml 配置文件</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200805145843.png"></p><p>找到下面这段代码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">theme: landscape</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>将langscape替换成hexo-theme-next</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">theme: hexo-theme-next</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>重新在项目根目录下进行本地部署调试</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo s --debug</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>即可看到效果:</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200805145903.png" alt="20200805145903"></p><h2 id="5-配置SSH密钥"><a href="#5-配置SSH密钥" class="headerlink" title="5 配置SSH密钥"></a>5 配置SSH密钥</h2><p>为了使本地可以跟远程的github建立联系，需要在本地配置SSH密钥，这样我们就可以在本地直接提交代码到GitHub上或者远端git仓库。<br>如果你是第一次配置SSH，则配置一下git的username 和 email</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;你要设置的名字&quot;</span><br><span class="line">git config --global user.email &quot;你要设置的邮箱&quot;</span><br></pre></td></tr></table></figure><p>之后生成SSH密钥：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你刚刚设置的邮箱&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果不需要设置密码的话，连续三个回车就好了。在这之后会得到两个文件： id_rsa 和 id_rsa.pub</p><p>找到id_rsa.pub文件，用记事本打开，复制其内容。路径： C:\Users\J（你的用户名）.ssh</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200805145923.png"></p><h2 id="6-服务器部署"><a href="#6-服务器部署" class="headerlink" title="6 服务器部署"></a>6 服务器部署</h2><p>注意：服务器是 centOS 7.3</p><p>阿里云截图如下：</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.come34ef8fe-330c-4dad-9efd-ebcc6bb82e9a.png).png"></p><p>点击右上角的”远程连接”。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.comdd62f44b-a42e-44cf-997c-3bf438433357.png).png"></p><p>输入以下命令，切换到root账号</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo su root</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.comc71d3ab1-8f3e-440d-b959-20c30e30398f.png).png"></p><h3 id="6-1-git配置"><a href="#6-1-git配置" class="headerlink" title="6.1 git配置"></a>6.1 git配置</h3><p>1、安装git</p><p>在刚刚的黑框里输入，然后回车：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install git</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>等待一下就安装好了。中途会出现</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Is this ok [y/d/N]:</span><br></pre></td></tr></table></figure><p>输入 ： y 回车即可</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.coma819af72-3096-41d2-af6b-2e69a8090abd.png).png"></p><p>此时git已经安装成功。</p><p>2、创建git账户</p><p>在命令框输入（下面不做重复提示了）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adduser git</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3、添加git账户权限</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chmod 740 /etc/sudoers</span><br><span class="line">vim /etc/sudoers</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.combb467496-b7a7-4eea-9650-cf89559951a4.png).png"></p><p>输入上面的命令，回车之后，进入编辑界面。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com369db1fa-00ec-4c4b-bd5c-7d03295d459b.png).png"></p><p>这里要先点击 “i” 键，进入编辑模式，然后找到一下内容的地方：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## Allow root to run any commands anywhere</span><br><span class="line">root    ALL=(ALL)     ALL</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.comb4c5d7bd-cc10-485d-9771-e996014d26d7.png).png"></p><p>添加以下内容：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git     ALL=(ALL)     ALL</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后按 “Esc” 键，此时最底下的—INSERT—消失，再输入 “:wq”，即保存退出。</p><p>4、改回权限</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chmod 400 /etc/sudoers</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>5、设置git账户密码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo passwd git</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>输入两次密码就设置成功了。注意，linux下输入密码是不显示**的，你直接输入，输完回车就行了。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com6ce16ebe-1645-451d-a5b8-51b90f20153b.png).png"></p><p>6、切换至git用户，创建 ~&#x2F;.ssh 文件夹和 ~&#x2F;.ssh&#x2F;authorized_keys 文件，并赋予相应的权限</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">su git</span><br><span class="line">mkdir ~/.ssh</span><br><span class="line"></span><br><span class="line">vim ~/.ssh/authorized_keys</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>按”i”进入编辑模式，将我们在win10中生成的id_rsa.pub文件中的公钥复制到authorized_keys中，按”esc”，然后按”:wq”，保存退出。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200805150745.png"></p><p>接着，输入一下命令，赋予权限</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chmod 600 /home/git/.ssh/authorized_keys</span><br><span class="line">chmod 700 /home/git/.ssh</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在本地Git终端中测试是否能免密登录git，其中SERVER为填写自己的云主机IP，执行输入yes后输入你之前配置的git密码，无报错就说明好了。</p><p>在电脑本地桌面，右键”Git Bash Here”，输入一下命令，其中SERVER填写自己的云主机ip，执行输入yes后不用密码说明配置成功了。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh -v git@SERVER</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果你之前配置过git，可能你会出现以下这种错误。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200805150800.png"></p><p>可以看到</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Offending ECDSA key in /c/Users/jonty/.ssh/known_hosts:2</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>是.ssh&#x2F;known_hosts 这个文件第二行出现冲突了。只要用笔记本打开，将这个文件的第二行删掉即可。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200805150817.png"></p><p>重新执行刚刚的命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sh -v git@你的服务器ip</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200805150830.png"></p><p>这说明已经连接成功了。</p><h3 id="6-2-创建仓库目录及相关配置"><a href="#6-2-创建仓库目录及相关配置" class="headerlink" title="6.2 创建仓库目录及相关配置"></a>6.2 创建仓库目录及相关配置</h3><p>1、创建目录<br>在var目录下创建repo作为Git仓库目录，返回服务端命令行切换到root账户，然后输入：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir /var/repo</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200805150845.png"></p><p>赋予权限：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chown -R git:git /var/repo</span><br><span class="line">chmod -R 755 /var/repo</span><br></pre></td></tr></table></figure><p>接下来创建hexo目录作为网站根目录，并赋予权限：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir /var/hexo</span><br><span class="line">chown -R git:git /var/hexo</span><br><span class="line">chmod -R 755 /var/hexo</span><br></pre></td></tr></table></figure><p>接下来创建一个空白的git仓库</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /var/repo</span><br><span class="line">git init --bare hexo.git</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200805150859.png"></p><p>创建一个新的 Git 钩子，用于自动部署.</p><p>在 &#x2F;var&#x2F;repo&#x2F;hexo.git 下，有一个自动生成的 hooks 文件夹。我们需要在里边新建一个新的钩子文件 post-receive。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /var/repo/hexo.git/hooks/post-receive</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>进入编辑模式，然后将下面那两行代码粘贴进去，保存退出。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">git --work-tree=/var/hexo --git-dir=/var/repo/hexo.git checkout -f</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>修改权限：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chown -R git:git /var/repo/hexo.git/hooks/post-receive</span><br><span class="line">chmod +x /var/repo/hexo.git/hooks/post-receive</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>到这里Git仓库已经搭建完毕了。</p><h2 id="7-配置Nginx"><a href="#7-配置Nginx" class="headerlink" title="7 配置Nginx"></a>7 配置Nginx</h2><p>为了部署和维护，我们使用宝塔面板来一键部署Nginx</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; bash install.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>中途输入”y”回车等待一会就好了。在执行结果最后会出现地址，用户名，密码等。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200805150919.png"></p><p>复制这个地址打开，输入账号密码即可进入宝塔面板。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200805150933.png"></p><p>注意：这里也有可能你进不去面板页面，是因为你的服务器没有开8888这个端口（具体看你的宝塔面板连接的端口），去阿里云轻量服务器控制台中的“安全”-&gt;“防火墙”，右上角的”添加规则”，添加相应的端口即可。看下面的第二张图。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200805150948.png"></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com4eb1b5d7-ad0f-48a6-b990-d7776db5c03b.png).png"></p><p>另外如果忘记了宝塔用户名密码，可以去你服务器终端输入：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /www/server/panel &amp;&amp; python tools.py panel testpasswd</span><br></pre></td></tr></table></figure><p>注：也可以输入：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bt default</span><br></pre></td></tr></table></figure><p>下图为宝塔解决方案，<a href="https://www.bt.cn/bbs/thread-1172-1-1.html">链接忘记Linux 3.X&#x2F;4.x&#x2F;5.x&#x2F;6.x 宝塔面板密码的解决方案</a></p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200805151020.png"></p><p>进入面板之后，会提示叫你修改端口，点击”立即修改”,可以看到”面板端口”这时候是8888，自己选一个值，然后先去服务器防火墙上开放这个端口，跟刚刚的”添加规则”操作一样。</p><p>再回到宝塔面板页面将”面板端口”的值修改成你刚刚开放的端口值。</p><p>然后需要用新端口，重新进入宝塔面板，就是将原有的链接”:”后面的值改成你的端口即可。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200805151036.png"></p><p>在宝塔面板，进入软件商店，输入”Nginx”，然后搜索，安装免费的那个。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200805151050.png"></p><p>等待部署完成。</p><p>部署完成之后，点击网站，添加站点，填写你的域名，没有的话写你的服务器ip地址。其他的不要改。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.combf9c6b86-4e58-420b-8fa7-fac71bda05e9.png).png"></p><p>填写完之后提交，然后点击”设置”</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200805151121.png"></p><p>点击”配置文件”</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server</span><br><span class="line">&#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    # server_name填写你自己的域名，没有的话填ip</span><br><span class="line">    server_name hjxlog.com;</span><br><span class="line">    index index.php index.html index.htm default.php default.htm default.html;</span><br><span class="line">    # 这里root填写自己的网站根目录，修改为/var/hexo</span><br><span class="line">    root /var/hexo;</span><br></pre></td></tr></table></figure><p>保存，然后选择“设置”-“网站目录”，将网站目录修改成以下，保存。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/var/hexo</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200805151141.png"></p><p>回到服务器终端，重启宝塔服务，使之生效。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service bt restart</span><br></pre></td></tr></table></figure><h2 id="8-修改hexo配置"><a href="#8-修改hexo配置" class="headerlink" title="8 修改hexo配置"></a>8 修改hexo配置</h2><p>进入本地电脑hexo博客的根目录，编辑站点配置文件 _config.yml，找到deploy，修改成以下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  #repo改为repo: git@你的域名:/var/repo/hexo.git</span><br><span class="line">  repo: git@hjxlog.com:/var/repo/hexo.git</span><br><span class="line">  branch: master</span><br><span class="line">  </span><br></pre></td></tr></table></figure><p>最后在本地电脑hexo博客的根目录右击，Git Bash Here，输入以下命令部署</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo d -g</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这时候可能出现权限问题，导致部署到git失败。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200805151203.png"></p><p>在服务器终端输入以下命令即可：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chown -R git:git /var/repo/</span><br><span class="line">chown -R git:git /var/hexo/</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>最后再hexo d -g部署，应该就可以看到部署成功了。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200805151218.png"></p><p>自此，已经将博客从GitHub pages搬到阿里云服务器了。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200805151231.png"></p><p>9 将网站添加https访问<br>去阿里云申请一个免费的SSL证书，好像要备案，有点忘记了，很快就申请下来了。</p><p>进入宝塔面板，”网站”，”设置”，”SSL，”其他证书”</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200805151245.png"></p><p>将你申请的证书.key以及.pem内容，粘贴进去然后保存即可。</p><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/![](httpsimgkr.cn-bj.ufileos.com672ee64b-bc4b-44fd-a053-528e37fd40c3.png).png"></p><h2 id="10-持续更新"><a href="#10-持续更新" class="headerlink" title="10 持续更新"></a>10 持续更新</h2><blockquote><p>2020-03-15 根据评论和邮件反馈遇到的常见问题更新</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/RalstonLiu/VsImage/images/20200805151319.png"></p><p>根据有同学遇到上图这种情况，如果提示</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Could not resolve hostname ***.com: Name or service not known</span><br><span class="line">Please make sure you have the correct access rights</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>那么看一下自己的域名是否实名验证成功了，如果已验证。可以ping一下域名看能不能ping得通，有可能是你没有把域名解析到服务器ip地址上了。</p><p>另外，Mac OS可能在配置方面和Windows不太一样。具体问题要具体分析，具体解决了。</p><h2 id="11-总结"><a href="#11-总结" class="headerlink" title="11 总结"></a>11 总结</h2><p>在部署网站的时候，由于之前对Linux没有经验，网络上看到几篇博客，还是没能部署成功，有些博客比如命令中的单词拼写错误，或者前后不衔接，导致部署一直有问题。</p><p>还好在部署的同时去网上学一些Linux基本命令，学到了进入编辑模式，编辑完怎么退出等等。之前看了一篇博客，可能作者默认大家都会了，结果我卡在这里了一下。</p><p>总的来说，部署还是比较简单的，第一次没成功的同学不要轻易放弃，多去网上找找答案，努力解决问题，加油！</p><p>如果因为看我的博客，在部署过程当中出现任何问题，请私信我或者邮箱联系我，帮助大家一起解决问题。</p><blockquote><p>本文作者： Huang Jianxian</p><p>本文链接： <a href="https://hjxlog.com/posts/20191130a1.html">https://hjxlog.com/posts/20191130a1.html</a></p><p>版权声明： 本文章除特别声明外，均采用 BY-NC-SA 许可协议。转载请注明出处！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 网站搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 博客搭建 </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 个人博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用rclone自动上传aria2下载的文件到onedrive或者googledrive</title>
      <link href="/archives/rclone-onedrive/"/>
      <url>/archives/rclone-onedrive/</url>
      
        <content type="html"><![CDATA[<p>因为挂载了其实最终的目的还是转移到自己的云盘空间中，vps的硬盘能有多大，要折腾都是在云盘中。如果你是土豪当我没说。</p><p>这篇手记是解决后续利用rclone自动上传aria2下载的文件到onedrive或者googledrive。到aria2的目录创建脚本：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi autoupload.sh</span><br></pre></td></tr></table></figure><p>脚本如下(作者：P3TERX，<a href="https://github.com/P3TERX/aria2_perfect_config">git页面地址</a>)：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#=================================================</span></span><br><span class="line"><span class="comment"># Description: Aria2 download completes calling Rclone upload</span></span><br><span class="line"><span class="comment"># Lisence: MIT</span></span><br><span class="line"><span class="comment"># Version: 1.8</span></span><br><span class="line"><span class="comment"># Author: P3TERX</span></span><br><span class="line"><span class="comment"># Blog: https://p3terx.com</span></span><br><span class="line"><span class="comment">#=================================================</span></span><br><span class="line"></span><br><span class="line">downloadpath=<span class="string">&#x27;/usr/local/caddy/www/file&#x27;</span> <span class="comment">#Aria2下载目录</span></span><br><span class="line">name=<span class="string">&#x27;remote&#x27;</span> <span class="comment">#配置Rclone时填写的name</span></span><br><span class="line">folder=<span class="string">&#x27;/backup&#x27;</span> <span class="comment">#网盘里的文件夹，留空为整个网盘。</span></span><br><span class="line">retry_num=3 <span class="comment">#上传失败重试次数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#=================下面不需要修改===================</span></span><br><span class="line">filepath=<span class="variable">$3</span> <span class="comment">#Aria2传递给脚本的文件路径。BT下载有多个文件时该值为文件夹内第一个文件，如/root/Download/a/b/1.mp4</span></span><br><span class="line">rdp=<span class="variable">$&#123;filepath#<span class="variable">$&#123;downloadpath&#125;</span>/&#125;</span> <span class="comment">#路径转换，去掉开头的下载路径。</span></span><br><span class="line">path=<span class="variable">$&#123;downloadpath&#125;</span>/<span class="variable">$&#123;rdp%%/*&#125;</span> <span class="comment">#路径转换。下载文件夹时为顶层文件夹路径，普通单文件下载时与文件路径相同。</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">Task_INFO</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;[\033[1;32mUPLOAD\033[0m] Task information:&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;————————– [\033[1;33mINFO\033[0m] ————————–&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\033[1;35mDownload path：\033[0m<span class="variable">$&#123;downloadpath&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\033[1;35mFile path: \033[0m<span class="variable">$&#123;filepath&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\033[1;35mUpload path: \033[0m<span class="variable">$&#123;uploadpath&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\033[1;35mRemote path：\033[0m<span class="variable">$&#123;remotepath&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;————————– [\033[1;33mINFO\033[0m] ————————–&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">Upload</span></span>()&#123;</span><br><span class="line">retry=0</span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$retry</span> -le <span class="variable">$retry_num</span> -a -e <span class="string">&quot;<span class="variable">$&#123;uploadpath&#125;</span>&quot;</span> ]; <span class="keyword">do</span></span><br><span class="line">[ <span class="variable">$retry</span> != 0 ] &amp;&amp; <span class="built_in">echo</span> &amp;&amp; <span class="built_in">echo</span> -e <span class="string">&quot;Upload failed! Retry <span class="variable">$&#123;retry&#125;</span>/<span class="variable">$&#123;retry_num&#125;</span> …&quot;</span> &amp;&amp; <span class="built_in">echo</span></span><br><span class="line">rclone move -v <span class="string">&quot;<span class="variable">$&#123;uploadpath&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;remotepath&#125;</span>&quot;</span></span><br><span class="line">rclone rmdirs -v <span class="string">&quot;<span class="variable">$&#123;downloadpath&#125;</span>&quot;</span> –leave-root</span><br><span class="line">retry=$((<span class="variable">$retry</span>+<span class="number">1</span>))</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">[ -e <span class="string">&quot;<span class="variable">$&#123;uploadpath&#125;</span>&quot;</span> ] &amp;&amp; <span class="built_in">echo</span> &amp;&amp; <span class="built_in">echo</span> -e <span class="string">&quot;Upload failed: <span class="variable">$&#123;uploadpath&#125;</span>&quot;</span> &amp;&amp; <span class="built_in">echo</span></span><br><span class="line">[ -e <span class="string">&quot;<span class="variable">$&#123;path&#125;</span>&quot;</span>.aria2 ] &amp;&amp; <span class="built_in">rm</span> -vf <span class="string">&quot;<span class="variable">$&#123;path&#125;</span>&quot;</span>.aria2</span><br><span class="line">[ -e <span class="string">&quot;<span class="variable">$&#123;filepath&#125;</span>&quot;</span>.aria2 ] &amp;&amp; <span class="built_in">rm</span> -vf <span class="string">&quot;<span class="variable">$&#123;filepath&#125;</span>&quot;</span>.aria2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$2</span> -eq 0 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> &amp;&amp; <span class="built_in">echo</span> -e <span class="string">&quot; \033[1;33mU P L O A D ! ! !\033[0m&quot;</span> &amp;&amp; <span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> &amp;&amp; <span class="built_in">echo</span> -e <span class="string">&quot; \033[1;32mU P L O A D ! ! !\033[0m&quot;</span> &amp;&amp; <span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> &amp;&amp; <span class="built_in">echo</span> -e <span class="string">&quot; \033[1;35mU P L O A D ! ! !\033[0m&quot;</span> &amp;&amp; <span class="built_in">echo</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$path</span>&quot;</span> = <span class="string">&quot;<span class="variable">$filepath</span>&quot;</span> ] &amp;&amp; [ <span class="variable">$2</span> -eq 1 ] <span class="comment">#普通单文件下载，移动文件到设定的网盘文件夹。</span></span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">uploadpath=<span class="variable">$&#123;filepath&#125;</span></span><br><span class="line">remotepath=<span class="string">&quot;<span class="variable">$&#123;name&#125;</span>:<span class="variable">$&#123;folder&#125;</span>&quot;</span></span><br><span class="line">Task_INFO</span><br><span class="line">Upload</span><br><span class="line"><span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$path</span>&quot;</span> != <span class="string">&quot;<span class="variable">$filepath</span>&quot;</span> ] &amp;&amp; [ <span class="variable">$2</span> -gt 1 ] <span class="comment">#BT下载（文件夹内文件数大于1），移动整个文件夹到设定的网盘文件夹。</span></span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">uploadpath=<span class="variable">$&#123;path&#125;</span></span><br><span class="line">remotepath=<span class="string">&quot;<span class="variable">$&#123;name&#125;</span>:<span class="variable">$&#123;folder&#125;</span>/<span class="variable">$&#123;rdp%%/*&#125;</span>&quot;</span></span><br><span class="line">Task_INFO</span><br><span class="line">Upload</span><br><span class="line"><span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$path</span>&quot;</span> != <span class="string">&quot;<span class="variable">$filepath</span>&quot;</span> ] &amp;&amp; [ <span class="variable">$2</span> -eq 1 ] <span class="comment">#第三方度盘工具下载（子文件夹或多级目录等情况下的单文件下载）、BT下载（文件夹内文件数等于1），移动文件到设定的网盘文件夹下的相同路径文件夹。</span></span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">uploadpath=<span class="variable">$&#123;filepath&#125;</span></span><br><span class="line">remotepath=<span class="string">&quot;<span class="variable">$&#123;name&#125;</span>:<span class="variable">$&#123;folder&#125;</span>/<span class="variable">$&#123;rdp%/*&#125;</span>&quot;</span></span><br><span class="line">Task_INFO</span><br><span class="line">Upload</span><br><span class="line"><span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">Task_INFO</span><br></pre></td></tr></table></figure><p>需要修改的地方只有这三行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">downloadpath=<span class="string">&#x27;/usr/local/caddy/www/file&#x27;</span> <span class="comment">#Aria2下载目录</span></span><br><span class="line">name=<span class="string">&#x27;remote&#x27;</span> <span class="comment">#配置Rclone时填写的name</span></span><br><span class="line">folder=<span class="string">&#x27;/backup&#x27;</span> <span class="comment">#网盘里的文件夹，留空为整个网盘。</span></span><br></pre></td></tr></table></figure><p><code>/usr/local/caddy/www/file</code> 这个对应你aria2的下载目录，<code>remote</code> 对应你配置rclone的时候设置的名称，<code>/backup</code> 对应你想同步上传到你网盘的哪个目录，如果留空就是根目录。<br>修改完毕后，给这个脚本权限：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x autoupload.sh</span><br></pre></td></tr></table></figure><p>然后编辑aria2的配置文件，在任意位置加上这句：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 调用 rclone 上传(move)到网盘</span></span><br><span class="line">on-download-complete=/root/.aria2/autoupload.sh</span><br></pre></td></tr></table></figure><p>这就是利用rclone的on-download-complete自动上传aria2下载好的文件。<br>重新启动aria2：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">service aria2 restart</span><br></pre></td></tr></table></figure><p>大功告成！</p><p>有问题可以在下方留言。</p>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
            <tag> 网盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>B站视频修改自适应测试</title>
      <link href="/archives/test/"/>
      <url>/archives/test/</url>
      
        <content type="html"><![CDATA[<h3 id="原来"><a href="#原来" class="headerlink" title="原来"></a>原来</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;//player.bilibili.com/player.html?aid=328334002&amp;bvid=BV1tA411q7xi&amp;cid=193834244&amp;page=1&quot;</span> <span class="attr">scrolling</span>=<span class="string">&quot;no&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;no&quot;</span> <span class="attr">framespacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">allowfullscreen</span>=<span class="string">&quot;true&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><iframe src="//player.bilibili.com/player.html?aid=328334002&bvid=BV1tA411q7xi&cid=193834244&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><h3 id="自适应"><a href="#自适应" class="headerlink" title="自适应"></a>自适应</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;position: relative; padding: 30% 45%;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">style</span>=<span class="string">&quot;position: absolute; width: 100%; height: 100%; left: 0; top: 0;&quot;</span> <span class="attr">src</span>=<span class="string">&quot;//player.bilibili.com/player.html?aid=328334002&amp;bvid=BV1tA411q7xi&amp;cid=193834244&amp;page=1&quot;</span> <span class="attr">scrolling</span>=<span class="string">&quot;no&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;no&quot;</span> <span class="attr">framespacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">allowfullscreen</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><div style="position: relative; padding: 30% 45%;"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="//player.bilibili.com/player.html?aid=328334002&bvid=BV1tA411q7xi&cid=193834244&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe></div><h3 id="自适应不跳转"><a href="#自适应不跳转" class="headerlink" title="自适应不跳转"></a>自适应不跳转</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">sandbox=”allow-top-navigation allow-same-origin allow-forms allow-scripts”</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;position: relative; padding: 30% 45%;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">style</span>=<span class="string">&quot;position: absolute; width: 100%; height: 100%; left: 0; top: 0;&quot;</span><span class="attr">src</span>=<span class="string">&quot;//player.bilibili.com/player.html?aid=328334002&amp;bvid=BV1tA411q7xi&amp;cid=193834244&amp;page=1&quot;</span> <span class="attr">scrolling</span>=<span class="string">&quot;no&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;no&quot;</span> <span class="attr">framespacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">allowfullscreen</span>=<span class="string">&quot;true&quot;</span> <span class="attr">sandbox</span>=<span class="string">&quot;allow-top-navigation allow-same-origin allow-forms allow-scripts&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><div style="position: relative; padding: 30% 45%;"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"src="//player.bilibili.com/player.html?aid=328334002&bvid=BV1tA411q7xi&cid=193834244&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"></iframe></div><p>在网页上, 用户选择清晰度, 或者点击视频上面的一些图标, 会跳转到B站. 这个可通过设置 iframe 的 sandbox 属性去禁止</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">sandbox=”allow-top-navigation allow-same-origin allow-forms allow-scripts”</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 有用的小知识 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
